{
  "Repository" : "3224154",
  "Revision" : "HEAD",
  "ObjectId" : "321fff5a118afd1a890a482f5dcdda0dafba61a5",
  "CommitTime" : "2015-07-30T01:42:26Z",
  "Files" : {
    "3rd-party/CMakeLists.txt" : {
      "ObjectId" : "2b0bdc81929db9ba560b982bd03f7ab3befd0200",
      "LastModified" : "2013-09-30T10:03:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/CMakeLists.txt" : {
      "ObjectId" : "76a11b9d22b9a3ac1632ee811be47f75c5a6d56b",
      "LastModified" : "2015-02-17T17:27:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# guard against in-source builds\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# guard against bad build-type strings\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#############################################################################\n\n# retrieve version infomation                                               #\n\n#############################################################################\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# automatically parse the version number\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# if the mercurial program is absent, this will leave the EIGEN_HG_CHANGESET string empty,\n\n# but won't stop CMake.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# if this is the default (aka development) branch, extract the mercurial changeset number from the hg tip output...\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#...and show it next to the version number\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#############################################################################\n\n# find how to link to the standard libraries                                #\n\n#############################################################################\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# We assume that other compilers are partly compatible with GNUCC\n",
        "Line" : 119,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# clang outputs some warnings for unknwon flags that are not caught by check_cxx_compiler_flag\n\n# adding -Werror turns such warnings into errors\n",
        "Line" : 125,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#ei_add_cxx_compiler_flag(\"-Weverything\")              # clang\n",
        "Line" : 135,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# disable ICC's \"operands are evaluated in unspecified order\" remark\n\n# disbale ICC's \"warning #2304: non-explicit constructor with single argument may cause implicit type conversion\" produced by -Wnon-virtual-dtor\n",
        "Line" : 153,
        "CharPositionInLine" : 56
      },
      "12" : {
        "Text" : "# The -ansi flag must be added last, otherwise it is also used as a linker flag by check_cxx_compiler_flag making it fails\n\n# Moreover we should not set both -strict-ansi and -ansi\n",
        "Line" : 156,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# disable clang warning: argument unused during compilation: '-ansi'\n",
        "Line" : 159,
        "CharPositionInLine" : 56
      },
      "14" : {
        "Text" : "# C4127 - conditional expression is constant\n\n# C4714 - marked as __forceinline not inlined (I failed to deactivate it selectively)\n\n#         We can disable this warning in the unit tests since it is clear that it occurs\n\n#         because we are oftentimes returning objects that have a destructor or may\n\n#         throw exceptions - in particular in the unit tests we are throwing extra many\n\n#         exceptions to cover indexing errors.\n\n# C4505 - unreferenced local function has been removed (impossible to deactive selectively)\n",
        "Line" : 222,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# replace all /Wx by /W4\n",
        "Line" : 231,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# arch is not supported on 64 bit systems, SSE is enabled automatically.\n",
        "Line" : 246,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# the user modifiable install path for header files\n",
        "Line" : 291,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# set the internal install path for header files which depends on wether the user modifiable\n\n# EIGEN_INCLUDE_INSTALL_DIR has been set by the user or not.\n",
        "Line" : 294,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# similar to set_target_properties but append the property instead of overwriting it\n",
        "Line" : 310,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# if the property wasn't previously set, ${previous} is now \"previous-NOTFOUND\" which cmake allows catching with plain if()\n",
        "Line" : 314,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# fixme, not sure this line is still needed:\n",
        "Line" : 351,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# must be called from the root CMakeLists, see man page\n",
        "Line" : 352,
        "CharPositionInLine" : 17
      },
      "23" : {
        "Text" : "# can't do EXCLUDE_FROM_ALL here, breaks CTest\n",
        "Line" : 356,
        "CharPositionInLine" : 25
      },
      "24" : {
        "Text" : "# must be after test and unsupported, for configuring buildtests.in\n",
        "Line" : 373,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# TODO: consider also replacing EIGEN_BUILD_BTL by a custom target \"make btl\"?\n",
        "Line" : 376,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 26
    },
    "3rd-party/eigen3/CTestConfig.cmake" : {
      "ObjectId" : "0557c491a32c3a937656813fbc1414e465b9d839",
      "LastModified" : "2015-02-17T17:27:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## This file should be placed in the root directory of your project.\n\n## Then modify the CMakeLists.txt file in the root directory of your\n\n## project to incorporate the testing dashboard.\n\n## # The following are required to uses Dart and the Cdash dashboard\n\n##   ENABLE_TESTING()\n\n##   INCLUDE(CTest)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rd-party/eigen3/Eigen/CMakeLists.txt" : {
      "ObjectId" : "a92dd6f6cafd2206f8be1a50f1294e2ae49feb5a",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/Eigen/src/CMakeLists.txt" : {
      "ObjectId" : "c326f374d9ee89c953dd9caefbfaffccb905511c",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/Eigen/src/Cholesky/CMakeLists.txt" : {
      "ObjectId" : "d01488b41a826850277a918f555e3668167dd367",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/Eigen/src/CholmodSupport/CMakeLists.txt" : {
      "ObjectId" : "814dfa61313847c0f33538e11c4ac4557ec3e32e",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/Eigen/src/Core/CMakeLists.txt" : {
      "ObjectId" : "2346fc2bbca4d9bd699efc4c366afd7abd400e3c",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/Eigen/src/Core/arch/AltiVec/CMakeLists.txt" : {
      "ObjectId" : "9f8d2e9c46765f4253d6877d040e5c2a90612086",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/Eigen/src/Core/arch/CMakeLists.txt" : {
      "ObjectId" : "8456dec1581554a4f7798ebe7d9d292369f21607",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/Eigen/src/Core/arch/Default/CMakeLists.txt" : {
      "ObjectId" : "339c091d156100d46f3acbc67ad205749d8f4b3d",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/Eigen/src/Core/arch/NEON/CMakeLists.txt" : {
      "ObjectId" : "fd4d4af50cb46dac7e6b29ef8654e70528e1f3ca",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/Eigen/src/Core/arch/SSE/CMakeLists.txt" : {
      "ObjectId" : "46ea7cc623c62394c78425b15e100b84126b40a7",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/Eigen/src/Core/products/CMakeLists.txt" : {
      "ObjectId" : "21fc94ae38a5574289ae4e304ce087f3ed6897f0",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/Eigen/src/Core/util/CMakeLists.txt" : {
      "ObjectId" : "a1e2e521fc11124c92768621c4edf784bc10f51f",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/Eigen/src/Eigen2Support/CMakeLists.txt" : {
      "ObjectId" : "7ae41b3cbe9c568f7efdaf45cd1a1ef874bf309b",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/Eigen/src/Eigen2Support/Geometry/CMakeLists.txt" : {
      "ObjectId" : "c347a8f26228694dc67e0e89ff6d509152dac738",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/Eigen/src/Eigenvalues/CMakeLists.txt" : {
      "ObjectId" : "193e0268599516e2515318ed04eb6dda37b2dd59",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/Eigen/src/Geometry/CMakeLists.txt" : {
      "ObjectId" : "f8f728b84faf0e08d91fac04e2986260368b9063",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/Eigen/src/Geometry/arch/CMakeLists.txt" : {
      "ObjectId" : "1267a79c78767c43d11c529cc84468cbdd1052a2",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/Eigen/src/Householder/CMakeLists.txt" : {
      "ObjectId" : "ce4937db061bbadb0357ccc45547b141761a70e3",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/Eigen/src/IterativeLinearSolvers/CMakeLists.txt" : {
      "ObjectId" : "59ccc0072cc4ed78e6aa783bfab2486aac757fca",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/Eigen/src/Jacobi/CMakeLists.txt" : {
      "ObjectId" : "490dac626439ade5e05baaba504689366db22e6d",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/Eigen/src/LU/CMakeLists.txt" : {
      "ObjectId" : "e0d8d78c1720abb27432f41aa2ace29ef3f3794f",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/Eigen/src/LU/arch/CMakeLists.txt" : {
      "ObjectId" : "f6b7ed9ecc3a25e3885c7fece60428481e51c696",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/Eigen/src/MetisSupport/CMakeLists.txt" : {
      "ObjectId" : "2bad314163c5044265aa6ac14e3767308dd04ba6",
      "LastModified" : "2015-02-17T17:27:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/Eigen/src/OrderingMethods/CMakeLists.txt" : {
      "ObjectId" : "9f4bb275808257ac71d6c04d9c602ce5c0b5be8d",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/Eigen/src/PaStiXSupport/CMakeLists.txt" : {
      "ObjectId" : "28c657e9bcf7d3e0ecc800f6d5a11d54020b58cc",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/Eigen/src/PardisoSupport/CMakeLists.txt" : {
      "ObjectId" : "a097ab401920ea1b7068f790edcfcf9086b3038b",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/Eigen/src/QR/CMakeLists.txt" : {
      "ObjectId" : "96f43d7f5b30fa024b9bd2d9e3a5dacb9d401ecb",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/Eigen/src/SPQRSupport/CMakeLists.txt" : {
      "ObjectId" : "4968beaf2c59bcec07fe1861b5d72cb4d6723a6d",
      "LastModified" : "2015-02-17T17:27:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/Eigen/src/SVD/CMakeLists.txt" : {
      "ObjectId" : "55efc44b12970d5ec715393cb68cd061203ce941",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/Eigen/src/SparseCholesky/CMakeLists.txt" : {
      "ObjectId" : "375a59d7a577877313a1ff2a6bf1c8fac138768b",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/Eigen/src/SparseCore/CMakeLists.txt" : {
      "ObjectId" : "d860452a65cb20850a12a120ab1fd3e3fd83dccc",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/Eigen/src/SparseLU/CMakeLists.txt" : {
      "ObjectId" : "69729ee8961aa7d4ef514e9f890de0d29f12161f",
      "LastModified" : "2015-02-17T17:27:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/Eigen/src/SparseQR/CMakeLists.txt" : {
      "ObjectId" : "f9ddf2bdb75878292267c18697d9dedbd69a6611",
      "LastModified" : "2015-02-17T17:27:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/Eigen/src/StlSupport/CMakeLists.txt" : {
      "ObjectId" : "0f094f637acd51b0931e58a199c30f550beaa282",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/Eigen/src/SuperLUSupport/CMakeLists.txt" : {
      "ObjectId" : "b28ebe5839cf5c664abdb44c186547507ce688d3",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/Eigen/src/UmfPackSupport/CMakeLists.txt" : {
      "ObjectId" : "a57de00209d3bc746b050d1b8aa736bccc66f2bc",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/Eigen/src/misc/CMakeLists.txt" : {
      "ObjectId" : "a58ffb7457e06a7a69426a21a9d46d07a6a8ee91",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/Eigen/src/plugins/CMakeLists.txt" : {
      "ObjectId" : "1a1d3ffbd724d17e161c40c48ac56c8b1aeb2e1f",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/bench/btl/CMakeLists.txt" : {
      "ObjectId" : "119b470d9342aa9e78e3590fe1f29ae4fd51f3ad",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#   SET(CMAKE_Fortran_FLAGS \"-g0 -O3 -DNDEBUG\")\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# find_package(MKL)\n\n# if (MKL_FOUND)\n\n#   add_definitions(-DHAVE_MKL)\n\n#   set(DEFAULT_LIBRARIES ${MKL_LIBRARIES})\n\n# endif (MKL_FOUND)\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "3rd-party/eigen3/bench/btl/cmake/FindACML.cmake" : {
      "ObjectId" : "f45ae1b0de58ce095c47ada25c6b11f7c2e09916",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/bench/btl/cmake/FindATLAS.cmake" : {
      "ObjectId" : "6b906520664472741c142dbd5cb55469b6bd88c5",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# search the default lapack lib link to it\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "3rd-party/eigen3/bench/btl/cmake/FindBlitz.cmake" : {
      "ObjectId" : "92880bbed7cc687dee65ba2419e236e383c26479",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find blitz lib\n\n# Once done this will define\n\n#\n\n#  BLITZ_FOUND - system has blitz lib\n\n#  BLITZ_INCLUDES - the blitz include directory\n\n#  BLITZ_LIBRARIES - The libraries needed to use blitz\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2007, Allen Winter, <winter@kde.org>\n\n# Copyright (C) 2008 Gael Guennebaud <gael.guennebaud@inria.fr>\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# include(FindLibraryWithDebug)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "3rd-party/eigen3/bench/btl/cmake/FindCBLAS.cmake" : {
      "ObjectId" : "554f0291b4130ff86b71cf9555e415e09fec9708",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# include(FindLibraryWithDebug)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rd-party/eigen3/bench/btl/cmake/FindGMM.cmake" : {
      "ObjectId" : "5049c64edcea43027c7875c9efa328a849cdb53f",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# in cache already\n",
        "Line" : 2,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "3rd-party/eigen3/bench/btl/cmake/FindGOTO.cmake" : {
      "ObjectId" : "67ea0934a52c80701c9c3c1a67fde1c0ab5846ae",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/bench/btl/cmake/FindGOTO2.cmake" : {
      "ObjectId" : "baa68d2136028e4f7f58882a703d0f74616c9de3",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# find_path(GOTO_INCLUDES\n\n#   NAMES\n\n#   cblas.h\n\n#   PATHS\n\n#   $ENV{GOTODIR}/include\n\n#   ${INCLUDE_INSTALL_DIR}\n\n# )\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rd-party/eigen3/bench/btl/cmake/FindMKL.cmake" : {
      "ObjectId" : "f4d7c6ebe7dd629d20b7579ee6efa4dad989edcf",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/bench/btl/cmake/FindMTL4.cmake" : {
      "ObjectId" : "3de4909802be09039c847931d323a81b8998fa50",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find eigen2 headers\n\n# Once done this will define\n\n#\n\n#  MTL4_FOUND - system has eigen2 lib\n\n#  MTL4_INCLUDE_DIR - the eigen2 include directory\n\n#\n\n# Copyright (C) 2008 Gael Guennebaud <gael.guennebaud@inria.fr>\n\n# Adapted from FindEigen.cmake:\n\n# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "3rd-party/eigen3/bench/btl/cmake/FindPackageHandleStandardArgs.cmake" : {
      "ObjectId" : "7f122edcddd304b99fc1fd67ab1ca023a46edcb2",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIND_PACKAGE_HANDLE_STANDARD_ARGS(NAME (DEFAULT_MSG|\"Custom failure message\") VAR1 ... )\n\n#\n\n# This macro is intended to be used in FindXXX.cmake modules files.\n\n# It handles the REQUIRED and QUIET argument to FIND_PACKAGE() and\n\n# it also sets the <UPPERCASED_NAME>_FOUND variable.\n\n# The package is found if all variables listed are TRUE.\n\n# Example:\n\n#\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(LibXml2 DEFAULT_MSG LIBXML2_LIBRARIES LIBXML2_INCLUDE_DIR)\n\n#\n\n# LibXml2 is considered to be found, if both LIBXML2_LIBRARIES and \n\n# LIBXML2_INCLUDE_DIR are valid. Then also LIBXML2_FOUND is set to TRUE.\n\n# If it is not found and REQUIRED was used, it fails with FATAL_ERROR, \n\n# independent whether QUIET was used or not.\n\n#\n\n# If it is found, the location is reported using the VAR1 argument, so \n\n# here a message \"Found LibXml2: /usr/lib/libxml2.so\" will be printed out.\n\n# If the second argument is DEFAULT_MSG, the message in the failure case will \n\n# be \"Could NOT find LibXml2\", if you don't like this message you can specify\n\n# your own custom failure message there.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rd-party/eigen3/bench/btl/cmake/FindTvmet.cmake" : {
      "ObjectId" : "26a29d965d125b34b1fff2c6bbfc2b5bf52e42df",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find tvmet headers\n\n# Once done this will define\n\n#\n\n#  TVMET_FOUND - system has tvmet lib\n\n#  TVMET_INCLUDE_DIR - the tvmet include directory\n\n#\n\n# Copyright (C) 2008 Gael Guennebaud <gael.guennebaud@inria.fr>\n\n# Adapted from FindEigen.cmake:\n\n# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "3rd-party/eigen3/bench/btl/cmake/MacroOptionalAddSubdirectory.cmake" : {
      "ObjectId" : "545048b684371ec6b8bdab3aaee2415b15b321a0",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - MACRO_OPTIONAL_ADD_SUBDIRECTORY() combines ADD_SUBDIRECTORY() with an OPTION()\n\n# MACRO_OPTIONAL_ADD_SUBDIRECTORY( <dir> )\n\n# If you use MACRO_OPTIONAL_ADD_SUBDIRECTORY() instead of ADD_SUBDIRECTORY(),\n\n# this will have two effects\n\n# 1 - CMake will not complain if the directory doesn't exist\n\n#     This makes sense if you want to distribute just one of the subdirs\n\n#     in a source package, e.g. just one of the subdirs in kdeextragear.\n\n# 2 - If the directory exists, it will offer an option to skip the \n\n#     subdirectory.\n\n#     This is useful if you want to compile only a subset of all\n\n#     directories.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2007, Alexander Neundorf, <neundorf@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "3rd-party/eigen3/bench/btl/data/CMakeLists.txt" : {
      "ObjectId" : "6af2a366f77ac4923d84584f1e7e4d7a834123bc",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/bench/btl/libs/BLAS/CMakeLists.txt" : {
      "ObjectId" : "de42fe047cafc469f7d807fc0f2637db9555358d",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# we are inside Eigen and blas/lapack interface is compilable\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "3rd-party/eigen3/bench/btl/libs/STL/CMakeLists.txt" : {
      "ObjectId" : "4cfc2dcf298fbd1baba1fb0202f3b9d48bae2bd1",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/bench/btl/libs/blitz/CMakeLists.txt" : {
      "ObjectId" : "880ab7338564d89aaa919e7af064faf06b27e44e",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/bench/btl/libs/eigen2/CMakeLists.txt" : {
      "ObjectId" : "a2e8fc6da0948e1207d634ee9aca120aa8fc1352",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# EIGEN2_FOUND\n",
        "Line" : 19,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 1
    },
    "3rd-party/eigen3/bench/btl/libs/eigen3/CMakeLists.txt" : {
      "ObjectId" : "00cae23d3a74f3cfe14b2ecf8335145aa185a419",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# unless EIGEN3_INCLUDE_DIR is defined, let's use current Eigen version\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#     if(BUILD_btl_eigen3_adv)\n\n#       target_link_libraries(btl_eigen3_adv ${MKL_LIBRARIES})\n\n#     endif(BUILD_btl_eigen3_adv)\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "3rd-party/eigen3/bench/btl/libs/gmm/CMakeLists.txt" : {
      "ObjectId" : "bc2586243092771e0b1f9919c6a093f522b8d685",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/bench/btl/libs/mtl4/CMakeLists.txt" : {
      "ObjectId" : "14b47a808c990500baadcef95268a8636b2e3bd1",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/bench/btl/libs/tvmet/CMakeLists.txt" : {
      "ObjectId" : "25b565b972360f99d49dc7560bd7989ba1f24682",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/bench/btl/libs/ublas/CMakeLists.txt" : {
      "ObjectId" : "bdb58bea1ba0c7aedec5b82f1c6b8f2c2c443c89",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/bench/spbench/CMakeLists.txt" : {
      "ObjectId" : "6e0e1b1039a5980bd13d829ae11491cb6a1520d0",
      "LastModified" : "2015-02-17T17:27:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find_library(PARDISO_LIBRARIES pardiso412-GNU450-X86-64)\n\n# if(PARDISO_LIBRARIES)\n\n#   add_definitions(\"-DEIGEN_PARDISO_SUPPORT\")\n\n#   set(SPARSE_LIBS ${SPARSE_LIBS} ${PARDISO_LIBRARIES})\n\n# endif(PARDISO_LIBRARIES)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rd-party/eigen3/blas/CMakeLists.txt" : {
      "ObjectId" : "a9bc051374a3af8eeb0240d0f077c2b36ae6ae4e",
      "LastModified" : "2015-02-17T17:27:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# can't do EXCLUDE_FROM_ALL here, breaks CTest\n",
        "Line" : 54,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 1
    },
    "3rd-party/eigen3/blas/testing/CMakeLists.txt" : {
      "ObjectId" : "3ab8026ea3e4dd051697be9303e3ad5a5576d72a",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add_custom_target(level1)\n\n# add_dependencies(level1 sblat1)\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rd-party/eigen3/cmake/EigenConfigureTesting.cmake" : {
      "ObjectId" : "11ecc95855f35c5d3b4d692a77e52d7c08741bfa",
      "LastModified" : "2015-02-17T17:27:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# configure the \"site\" and \"buildname\" \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# retrieve and store the build string\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# check whether /bin/bash exists\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# CMake/Ctest does not allow us to change the build command,\n\n# so we have to workaround by directly editing the generated DartConfiguration.tcl file\n\n# save CMAKE_MAKE_PROGRAM\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# and set a fake one\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# This call activates testing and generates the DartConfiguration.tcl\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# overwrite default DartConfiguration.tcl\n\n# The worarounds are different for each version of the MSVC IDE\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# devenv\n",
        "Line" : 32,
        "CharPositionInLine" : 47
      },
      "8" : {
        "Text" : "# msbuild\n",
        "Line" : 34,
        "CharPositionInLine" : 9
      },
      "9" : {
        "Text" : "# for make and nmake\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# copy ctest properties, which currently\n\n# o raise the warning levels\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# restore default CMAKE_MAKE_PROGRAM\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# un-set temporary variables so that it is like they never existed. \n\n# CMake 2.6.3 introduces the more logical unset() syntax for this.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# some documentation of this function would be nice\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# configure Eigen related testing options\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "3rd-party/eigen3/cmake/EigenDetermineOSVersion.cmake" : {
      "ObjectId" : "3c48d4c3740b549da322258024368b9fee1466f1",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The utility function DetermineOSVersion aims at providing an\n\n# improved version of the CMake variable ${CMAKE_SYSTEM} on Windows\n\n# machines.\n\n#\n\n# Usage:\n\n#  include(EigenDetermineOSVersion)\n\n#  DetermineOSVersion(OS_VERSION)\n\n#  message(\"OS: ${OS_VERSION}\")\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - A little helper variable which should not be directly called\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "3rd-party/eigen3/cmake/EigenDetermineVSServicePack.cmake" : {
      "ObjectId" : "8e5546a851f2fbd23ee614fd390d7fd66bc7a8ac",
      "LastModified" : "2015-02-17T17:27:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The code is almost identical to the CMake version. The only difference is that we remove\n\n# _DetermineVSServicePack_FastCheckVersionWithCompiler which lead to errors on some systems.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Call helper function to determine VS version\n",
        "Line" : 18,
        "CharPositionInLine" : 16
      },
      "CommentCount" : 2
    },
    "3rd-party/eigen3/cmake/EigenTesting.cmake" : {
      "ObjectId" : "f4796ca4114b52114325fc679856fde14ccfbb4a",
      "LastModified" : "2015-06-24T14:35:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#internal. See documentation of ei_add_test for details.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# let the user pass flags.\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# it could be that some cmake module provides a bad library string \" \"  (just spaces),\n\n# and that severely breaks target_link_libraries (\"can't link to -l-lstdc++\" errors).\n\n# so we check for strings containing only spaces.\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# notice: no double quotes around ${libs_to_link} here. It may be a list.\n",
        "Line" : 66,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# Specify target and test labels accoirding to EIGEN_CURRENT_SUBPROJECT\n",
        "Line" : 77,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Macro to add a test\n\n#\n\n# the unique mandatory parameter testname must correspond to a file\n\n# <testname>.cpp which follows this pattern:\n\n#\n\n# #include \"main.h\"\n\n# void test_<testname>() { ... }\n\n#\n\n# Depending on the contents of that file, this macro can have 2 behaviors,\n\n# see below.\n\n#\n\n# The optional 2nd parameter is libraries to link to.\n\n#\n\n# A. Default behavior\n\n#\n\n# this macro adds an executable <testname> as well as a ctest test\n\n# named <testname> too.\n\n#\n\n# On platforms with bash simply run:\n\n#   \"ctest -V\" or \"ctest -V -R <testname>\"\n\n# On other platform use ctest as usual\n\n#\n\n# B. Multi-part behavior\n\n#\n\n# If the source file matches the regexp\n\n#    CALL_SUBTEST_[0-9]+|EIGEN_TEST_PART_[0-9]+\n\n# then it is interpreted as a multi-part test. The behavior then depends on the\n\n# CMake option EIGEN_SPLIT_LARGE_TESTS, which is ON by default.\n\n#\n\n# If EIGEN_SPLIT_LARGE_TESTS is OFF, the behavior is the same as in A (the multi-part\n\n# aspect is ignored).\n\n#\n\n# If EIGEN_SPLIT_LARGE_TESTS is ON, the test is split into multiple executables\n\n#   test_<testname>_<N>\n\n# where N runs from 1 to the greatest occurence found in the source file. Each of these\n\n# executables is built passing -DEIGEN_TEST_PART_N. This allows to split large tests\n\n# into smaller executables.\n\n#\n\n# Moreover, targets <testname> are still generated, they\n\n# have the effect of building all the parts of the test.\n\n#\n\n# Again, ctest -R allows to run all matching tests.\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# adds a failtest, i.e. a test that succeed if the program fails to compile\n\n# note that the test runner for these is CMake itself, when passed -DEIGEN_FAILTEST=ON\n\n# so here we're just running CMake commands immediately, we're not adding any targets.\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# print a summary of the different options\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# vectorization / alignment options\n",
        "Line" : 266,
        "CharPositionInLine" : 10
      },
      "9" : {
        "Text" : "# uncomment anytime you change the ei_get_compilerver_from_cxx_version_string macro\n\n# ei_test_get_compilerver_from_cxx_version_string()\n",
        "Line" : 291,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# if the sitename is not yet set, try to set it\n",
        "Line" : 296,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# in case it is already set, enforce lower case\n",
        "Line" : 306,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# on windows system, we use a modified CMake script  \n",
        "Line" : 314,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# on all other system we rely on ${CMAKE_CXX_COMPILER}\n\n# supporting a \"--version\" or \"/version\" flag\n",
        "Line" : 324,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# check whether the head command exists\n",
        "Line" : 333,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Extract compiler name and version from a raw version string\n\n# WARNING: if you edit thid macro, then please test it by  uncommenting\n\n# the testing macro call in ei_init_testing() of the EigenTesting.cmake file.\n\n# See also the ei_test_get_compilerver_from_cxx_version_string macro at the end of the file\n",
        "Line" : 351,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# extract possible compiler names  \n",
        "Line" : 356,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# combine them\n",
        "Line" : 363,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# extract possible version numbers\n\n# first try to extract 3 isolated numbers:\n",
        "Line" : 376,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# try to extract 2 isolated ones:\n",
        "Line" : 380,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# try to extract 3:\n",
        "Line" : 383,
        "CharPositionInLine" : 6
      },
      "21" : {
        "Text" : "# try to extract 2:\n",
        "Line" : 386,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# helper macro for testing ei_get_compilerver_from_cxx_version_string\n\n# STR: raw version string\n\n# REFNAME: expected compiler name\n\n# REFVER: expected compiler version\n",
        "Line" : 472,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# macro for testing ei_get_compilerver_from_cxx_version_string\n\n# feel free to add more version strings\n",
        "Line" : 484,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24
    },
    "3rd-party/eigen3/cmake/FindAdolc.cmake" : {
      "ObjectId" : "1a7ff3628a1aa6bd0a033b75edf23bbdc587d899",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/cmake/FindBLAS.cmake" : {
      "ObjectId" : "68c4e072417b9bc434895d1feb6e89e3bc7e5548",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find BLAS library\n\n#\n\n# This module finds an installed library that implements the BLAS\n\n# linear-algebra interface (see http://www.netlib.org/blas/).\n\n# The list of libraries searched for is mainly taken\n\n# from the autoconf macro file, acx_blas.m4 (distributed at\n\n# http://ac-archive.sourceforge.net/ac-archive/acx_blas.html).\n\n#\n\n# This module sets the following variables:\n\n#  BLAS_FOUND - set to true if a library implementing the BLAS interface\n\n#    is found\n\n#  BLAS_INCLUDE_DIR - Directories containing the BLAS header files\n\n#  BLAS_DEFINITIONS - Compilation options to use BLAS\n\n#  BLAS_LINKER_FLAGS - Linker flags to use BLAS (excluding -l\n\n#    and -L).\n\n#  BLAS_LIBRARIES_DIR - Directories containing the BLAS libraries.\n\n#     May be null if BLAS_LIBRARIES contains libraries name using full path.\n\n#  BLAS_LIBRARIES - List of libraries to link against BLAS interface.\n\n#     May be null if the compiler supports auto-link (e.g. VC++).\n\n#  BLAS_USE_FILE - The name of the cmake module to include to compile\n\n#     applications or libraries using BLAS.\n\n#\n\n# This module was modified by CGAL team:\n\n# - find libraries for a C++ compiler, instead of Fortran\n\n# - added BLAS_INCLUDE_DIR, BLAS_DEFINITIONS and BLAS_LIBRARIES_DIR\n\n# - removed BLAS95_LIBRARIES\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This macro checks for the existence of the combination of fortran libraries\n\n# given by _list.  If the combination is found, this macro checks (using the\n\n# check_function_exists macro) whether can link against that library\n\n# combination using the name of a routine given by _name using the linker\n\n# flags given by _flags.  If the combination of libraries is found and passes\n\n# the link test, LIBRARIES is set to the list of complete library paths that\n\n# have been found and DEFINITIONS to the required definitions.\n\n# Otherwise, LIBRARIES is set to FALSE.\n\n# N.B. _prefix is the prefix applied to the names of all cached variables that\n\n# are generated internally and marked advanced by this macro.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#message(\"DEBUG: check_fortran_libraries(${_list} in ${_path})\")\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Check for the existence of the libraries given by _list\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# search first in ${_path}\n",
        "Line" : 54,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# if not found, search in environment variables and system\n",
        "Line" : 59,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# Test this combination of libraries with the Fortran/f2c interface.\n\n# We test the Fortran interface first as it is well standardized.\n",
        "Line" : 85,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Some C++ linkers require the f2c library to link with Fortran libraries.\n\n# I do not know which ones, thus I just add the f2c library if it is available.\n",
        "Line" : 90,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#message(\"DEBUG: CMAKE_REQUIRED_DEFINITIONS = ${CMAKE_REQUIRED_DEFINITIONS}\")\n\n#message(\"DEBUG: CMAKE_REQUIRED_LIBRARIES = ${CMAKE_REQUIRED_LIBRARIES}\")\n\n# Check if function exists with f2c calling convention (ie a trailing underscore)\n",
        "Line" : 99,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# If not found, test this combination of libraries with a C interface.\n\n# A few implementations (ie ACML) provide a C interface. Unfortunately, there is no standard.\n",
        "Line" : 109,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#message(\"DEBUG: CMAKE_REQUIRED_LIBRARIES = ${CMAKE_REQUIRED_LIBRARIES}\")\n",
        "Line" : 116,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# on failure\n",
        "Line" : 123,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "#message(\"DEBUG: ${DEFINITIONS} = ${${DEFINITIONS}}\")\n\n#message(\"DEBUG: ${LIBRARIES} = ${${LIBRARIES}}\")\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#\n\n# main\n\n#\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Is it already configured?\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# reset variables\n",
        "Line" : 144,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "#\n\n# If Unix, search for BLAS function in possible libraries\n\n#\n",
        "Line" : 151,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# BLAS in ATLAS library? (http://math-atlas.sourceforge.net/)\n",
        "Line" : 155,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# BLAS in PhiPACK libraries? (requires generic BLAS lib, too)\n",
        "Line" : 168,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# BLAS in Alpha CXML library?\n",
        "Line" : 181,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# BLAS in Alpha DXML library? (now called CXML, see above)\n",
        "Line" : 194,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# BLAS in Sun Performance library?\n",
        "Line" : 207,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Extra linker flag\n",
        "Line" : 219,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "# BLAS in SCSL library?  (SGI/Cray Scientific Library)\n",
        "Line" : 224,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# BLAS in SGIMATH library?\n",
        "Line" : 237,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# BLAS in IBM ESSL library? (requires generic BLAS lib, too)\n",
        "Line" : 250,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "#BLAS in intel mkl 10 library? (em64t 64bit)\n",
        "Line" : 263,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "### windows version of intel mkl 10?\n",
        "Line" : 276,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "#older versions of intel mkl libs\n",
        "Line" : 289,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# BLAS in intel mkl library? (shared)\n",
        "Line" : 291,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "#BLAS in intel mkl library? (static, 32bit)\n",
        "Line" : 304,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "#BLAS in intel mkl library? (static, em64t 64bit)\n",
        "Line" : 317,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "#BLAS in acml library?\n",
        "Line" : 330,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# Apple BLAS library?\n",
        "Line" : 343,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# Generic BLAS library?\n\n# This configuration *must* be the last try as this library is notably slow.\n",
        "Line" : 368,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# Add variables to cache\n",
        "Line" : 400,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "#message(\"DEBUG: BLAS_INCLUDE_DIR = ${BLAS_INCLUDE_DIR}\")\n\n#message(\"DEBUG: BLAS_DEFINITIONS = ${BLAS_DEFINITIONS}\")\n\n#message(\"DEBUG: BLAS_LINKER_FLAGS = ${BLAS_LINKER_FLAGS}\")\n\n#message(\"DEBUG: BLAS_LIBRARIES = ${BLAS_LIBRARIES}\")\n\n#message(\"DEBUG: BLAS_LIBRARIES_DIR = ${BLAS_LIBRARIES_DIR}\")\n\n#message(\"DEBUG: BLAS_FOUND = ${BLAS_FOUND}\")\n",
        "Line" : 412,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 37
    },
    "3rd-party/eigen3/cmake/FindCholmod.cmake" : {
      "ObjectId" : "23239c300f1b2004794e9968a825a45fa5bb5ccd",
      "LastModified" : "2015-02-17T17:27:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Cholmod lib usually requires linking to a blas and lapack library.\n\n# It is up to the user of this module to find a BLAS and link to it.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rd-party/eigen3/cmake/FindEigen2.cmake" : {
      "ObjectId" : "a834b887286045fcdc381633ec95bf204834aadf",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Eigen2 lib\n\n#\n\n# This module supports requiring a minimum version, e.g. you can do\n\n#   find_package(Eigen2 2.0.3)\n\n# to require version 2.0.3 to newer of Eigen2.\n\n#\n\n# Once done this will define\n\n#\n\n#  EIGEN2_FOUND - system has eigen lib with correct version\n\n#  EIGEN2_INCLUDE_DIR - the eigen include directory\n\n#  EIGEN2_VERSION - eigen version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "3rd-party/eigen3/cmake/FindEigen3.cmake" : {
      "ObjectId" : "9c546a05d859b18c49554d7ee7221cc486b7760e",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Eigen3 lib\n\n#\n\n# This module supports requiring a minimum version, e.g. you can do\n\n#   find_package(Eigen3 3.1.2)\n\n# to require version 3.1.2 or newer of Eigen3.\n\n#\n\n# Once done this will define\n\n#\n\n#  EIGEN3_FOUND - system has eigen lib with correct version\n\n#  EIGEN3_INCLUDE_DIR - the eigen include directory\n\n#  EIGEN3_VERSION - eigen version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Copyright (c) 2009 Benoit Jacob <jacob.benoit.1@gmail.com>\n\n# Redistribution and use is allowed according to the terms of the 2-clause BSD license.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "3rd-party/eigen3/cmake/FindFFTW.cmake" : {
      "ObjectId" : "6c4dc9ab495d5ab56b6b3943b2c53200b35c5ee8",
      "LastModified" : "2015-02-17T17:27:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find the FFTW library\n\n#\n\n# Usage:\n\n#   find_package(FFTW [REQUIRED] [QUIET] )\n\n#     \n\n# It sets the following variables:\n\n#   FFTW_FOUND               ... true if fftw is found on the system\n\n#   FFTW_LIBRARIES           ... full path to fftw library\n\n#   FFTW_INCLUDES            ... fftw include directory\n\n#\n\n# The following variables will be checked by the function\n\n#   FFTW_USE_STATIC_LIBS    ... if true, only static libraries are found\n\n#   FFTW_ROOT               ... if set, the libraries are exclusively searched\n\n#                               under this path\n\n#   FFTW_LIBRARY            ... fftw library to use\n\n#   FFTW_INCLUDE_DIR        ... fftw include directory\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#If environment variable FFTWDIR is specified, it has same effect as FFTW_ROOT\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check if we can use PkgConfig\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Determine from PKG\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Check whether to search static or dynamic libs\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#find libs\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#find includes\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    },
    "3rd-party/eigen3/cmake/FindGLEW.cmake" : {
      "ObjectId" : "54da20f12bdba627f0d90fb8d225e4995b92ea7c",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2009 Boudewijn Rempt <boud@valdyas.org>                                                                                          \n\n#                                                                                                                                                \n\n# Redistribution and use is allowed according to the terms of the BSD license.                                                                   \n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file. \n\n# \n\n# - try to find glew library and include files\n\n#  GLEW_INCLUDE_DIR, where to find GL/glew.h, etc.\n\n#  GLEW_LIBRARIES, the libraries to link against\n\n#  GLEW_FOUND, If false, do not try to use GLEW.\n\n# Also defined, but not for general use are:\n\n#  GLEW_GLEW_LIBRARY = the full path to the glew library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# These values for Apple could probably do with improvement.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Is -lXi and -lXmu required on all platforms that have it?\n\n# If not, we need some way to figure out what platform we are on.\n",
        "Line" : 75,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#The following deprecated settings are for backwards compatibility with CMake1.4\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "3rd-party/eigen3/cmake/FindGMP.cmake" : {
      "ObjectId" : "1f0273960142810512c933c53e2ff8de7ab9d428",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find the GNU Multiple Precision Arithmetic Library (GMP)\n\n# See http://gmplib.org/\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rd-party/eigen3/cmake/FindGSL.cmake" : {
      "ObjectId" : "bf411a7f9814843a67465198cb61c82e59c4beff",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find gnu scientific library GSL\n\n# See \n\n# http://www.gnu.org/software/gsl/  and\n\n# http://gnuwin32.sourceforge.net/packages/gsl.htm\n\n#\n\n# Once run this will define: \n\n# \n\n# GSL_FOUND       = system has GSL lib\n\n#\n\n# GSL_LIBRARIES   = full path to the libraries\n\n#    on Unix/Linux with additional linker flags from \"gsl-config --libs\"\n\n# \n\n# CMAKE_GSL_CXX_FLAGS  = Unix compiler flags for GSL, essentially \"`gsl-config --cxxflags`\"\n\n#\n\n# GSL_INCLUDE_DIR      = where to find headers \n\n#\n\n# GSL_LINK_DIRECTORIES = link directories, useful for rpath on Unix\n\n# GSL_EXE_LINKER_FLAGS = rpath on Unix\n\n#\n\n# Felix Woelk 07/2004\n\n# Jan Woetzel\n\n#\n\n# www.mip.informatik.uni-kiel.de\n\n# --------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# JW tested with gsl-1.8, Windows XP, MSVS 7.1\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#MESSAGE(\"DBG\\n\"\n\n#  \"GSL_GSL_LIBRARY=${GSL_GSL_LIBRARY}\\n\"\n\n#  \"GSL_GSLCBLAS_LIBRARY=${GSL_GSLCBLAS_LIBRARY}\\n\"\n\n#  \"GSL_LIBRARIES=${GSL_LIBRARIES}\")\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# MESSAGE(\"DBG GSL_CONFIG ${GSL_CONFIG}\")\n",
        "Line" : 94,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# set CXXFLAGS to be fed into CXX_FLAGS by the user:\n",
        "Line" : 97,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# set INCLUDE_DIRS to prefix+include\n",
        "Line" : 100,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# set link libraries and link flags\n\n#SET(GSL_LIBRARIES \"`${GSL_CONFIG} --libs`\")\n",
        "Line" : 106,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# extract link dirs for rpath  \n",
        "Line" : 112,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# extract version\n",
        "Line" : 117,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# split version as major/minor\n",
        "Line" : 122,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# split off the link dirs (for rpath)\n\n# use regular expression to match wildcard equivalent \"-L*<endchar>\"\n\n# with <endchar> is a space or a semicolon\n",
        "Line" : 128,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "#      MESSAGE(\"DBG  GSL_LINK_DIRECTORIES_WITH_PREFIX=${GSL_LINK_DIRECTORIES_WITH_PREFIX}\")\n",
        "Line" : 134,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# remove prefix -L because we need the pure directory for LINK_DIRECTORIES\n",
        "Line" : 136,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "#      MESSAGE(\"DBG  GSL_LINK_DIRECTORIES=${GSL_LINK_DIRECTORIES}\")\n\n#      MESSAGE(\"DBG  GSL_EXE_LINKER_FLAGS=${GSL_EXE_LINKER_FLAGS}\")\n",
        "Line" : 142,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "#      ADD_DEFINITIONS(\"-DHAVE_GSL\")\n\n#      SET(GSL_DEFINITIONS \"-DHAVE_GSL\")\n",
        "Line" : 145,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 15
    },
    "3rd-party/eigen3/cmake/FindGoogleHash.cmake" : {
      "ObjectId" : "f6a81a02ce9dbac0710ef2b5e46eb8b9c5aa5999",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# let's make sure it compiles with the current compiler\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "3rd-party/eigen3/cmake/FindLAPACK.cmake" : {
      "ObjectId" : "2fcae2199f5f55f707089108301eb2c0a350671d",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find LAPACK library\n\n#\n\n# This module finds an installed library that implements the LAPACK\n\n# linear-algebra interface (see http://www.netlib.org/lapack/).\n\n# The approach follows mostly that taken for the autoconf macro file, acx_lapack.m4\n\n# (distributed at http://ac-archive.sourceforge.net/ac-archive/acx_lapack.html).\n\n#\n\n# This module sets the following variables:\n\n#  LAPACK_FOUND - set to true if a library implementing the LAPACK interface\n\n#    is found\n\n#  LAPACK_INCLUDE_DIR - Directories containing the LAPACK header files\n\n#  LAPACK_DEFINITIONS - Compilation options to use LAPACK\n\n#  LAPACK_LINKER_FLAGS - Linker flags to use LAPACK (excluding -l\n\n#    and -L).\n\n#  LAPACK_LIBRARIES_DIR - Directories containing the LAPACK libraries.\n\n#     May be null if LAPACK_LIBRARIES contains libraries name using full path.\n\n#  LAPACK_LIBRARIES - List of libraries to link against LAPACK interface.\n\n#     May be null if the compiler supports auto-link (e.g. VC++).\n\n#  LAPACK_USE_FILE - The name of the cmake module to include to compile\n\n#     applications or libraries using LAPACK.\n\n#\n\n# This module was modified by CGAL team:\n\n# - find libraries for a C++ compiler, instead of Fortran\n\n# - added LAPACK_INCLUDE_DIR, LAPACK_DEFINITIONS and LAPACK_LIBRARIES_DIR\n\n# - removed LAPACK95_LIBRARIES\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This macro checks for the existence of the combination of fortran libraries\n\n# given by _list.  If the combination is found, this macro checks (using the\n\n# check_function_exists macro) whether can link against that library\n\n# combination using the name of a routine given by _name using the linker\n\n# flags given by _flags.  If the combination of libraries is found and passes\n\n# the link test, LIBRARIES is set to the list of complete library paths that\n\n# have been found and DEFINITIONS to the required definitions.\n\n# Otherwise, LIBRARIES is set to FALSE.\n\n# N.B. _prefix is the prefix applied to the names of all cached variables that\n\n# are generated internally and marked advanced by this macro.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#message(\"DEBUG: check_lapack_libraries(${_list} in ${_path} with ${_blas})\")\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Check for the existence of the libraries given by _list\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# search first in ${_path}\n",
        "Line" : 53,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# if not found, search in environment variables and system\n",
        "Line" : 58,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# Test this combination of libraries with the Fortran/f2c interface.\n\n# We test the Fortran interface first as it is well standardized.\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Some C++ linkers require the f2c library to link with Fortran libraries.\n\n# I do not know which ones, thus I just add the f2c library if it is available.\n",
        "Line" : 89,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#message(\"DEBUG: CMAKE_REQUIRED_DEFINITIONS = ${CMAKE_REQUIRED_DEFINITIONS}\")\n\n#message(\"DEBUG: CMAKE_REQUIRED_LIBRARIES = ${CMAKE_REQUIRED_LIBRARIES}\")\n\n# Check if function exists with f2c calling convention (ie a trailing underscore)\n",
        "Line" : 98,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# If not found, test this combination of libraries with a C interface.\n\n# A few implementations (ie ACML) provide a C interface. Unfortunately, there is no standard.\n",
        "Line" : 108,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#message(\"DEBUG: CMAKE_REQUIRED_LIBRARIES = ${CMAKE_REQUIRED_LIBRARIES}\")\n",
        "Line" : 115,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# on failure\n",
        "Line" : 122,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "#message(\"DEBUG: ${DEFINITIONS} = ${${DEFINITIONS}}\")\n\n#message(\"DEBUG: ${LIBRARIES} = ${${LIBRARIES}}\")\n",
        "Line" : 127,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#\n\n# main\n\n#\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# LAPACK requires BLAS\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Is it already configured?\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# reset variables\n",
        "Line" : 155,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# unused (yet)\n",
        "Line" : 158,
        "CharPositionInLine" : 32
      },
      "18" : {
        "Text" : "#\n\n# If Unix, search for LAPACK function in possible libraries\n\n#\n",
        "Line" : 162,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "#intel mkl lapack?\n",
        "Line" : 166,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "#acml lapack?\n",
        "Line" : 180,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Apple LAPACK library?\n",
        "Line" : 194,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Generic LAPACK library?\n\n# This configuration *must* be the last try as this library is notably slow.\n",
        "Line" : 221,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# Add variables to cache\n",
        "Line" : 254,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "#message(\"DEBUG: LAPACK_INCLUDE_DIR = ${LAPACK_INCLUDE_DIR}\")\n\n#message(\"DEBUG: LAPACK_DEFINITIONS = ${LAPACK_DEFINITIONS}\")\n\n#message(\"DEBUG: LAPACK_LINKER_FLAGS = ${LAPACK_LINKER_FLAGS}\")\n\n#message(\"DEBUG: LAPACK_LIBRARIES = ${LAPACK_LIBRARIES}\")\n\n#message(\"DEBUG: LAPACK_LIBRARIES_DIR = ${LAPACK_LIBRARIES_DIR}\")\n\n#message(\"DEBUG: LAPACK_FOUND = ${LAPACK_FOUND}\")\n",
        "Line" : 266,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 25
    },
    "3rd-party/eigen3/cmake/FindMPFR.cmake" : {
      "ObjectId" : "aa4c2cd7d29c65f88dd63b5507b9f1aeeeb3f7a6",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find the MPFR library\n\n# See http://www.mpfr.org/\n\n#\n\n# This module supports requiring a minimum version, e.g. you can do\n\n#   find_package(MPFR 2.3.0)\n\n# to require version 2.3.0 to newer of MPFR.\n\n#\n\n# Once done this will define\n\n#\n\n#  MPFR_FOUND - system has MPFR lib with correct version\n\n#  MPFR_INCLUDES - the MPFR include directory\n\n#  MPFR_LIBRARIES - the MPFR library\n\n#  MPFR_VERSION - MPFR version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Copyright (c) 2010 Jitse Niesen, <jitse@maths.leeds.ac.uk>\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set MPFR_INCLUDES\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set MPFR_FIND_VERSION to 1.0.0 if no minimum version is specified\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set MPFR_VERSION\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Check whether found version exceeds minimum version\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Set MPFR_LIBRARIES\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Epilogue\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "3rd-party/eigen3/cmake/FindMetis.cmake" : {
      "ObjectId" : "6a0ce790cb31f98bd4997c3609500bd001a512b2",
      "LastModified" : "2015-06-24T14:35:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Pastix requires METIS or METIS (partitioning and reordering tools)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rd-party/eigen3/cmake/FindPastix.cmake" : {
      "ObjectId" : "e2e6c810d3cf985eb5faca6d87768e42a81e89ea",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Pastix lib requires linking to a blas library.\n\n# It is up to the user of this module to find a BLAS and link to it.\n\n# Pastix requires SCOTCH or METIS (partitioning and reordering tools) as well\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rd-party/eigen3/cmake/FindSPQR.cmake" : {
      "ObjectId" : "794c212af8e046af21cad24c3220a28f7bd680aa",
      "LastModified" : "2015-02-17T17:27:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# SPQR lib usually requires linking to a blas and lapack library.\n\n# It is up to the user of this module to find a BLAS and link to it.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# SPQR lib requires Cholmod, colamd and amd as well. \n\n# FindCholmod.cmake can be used to find those packages before finding spqr\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "3rd-party/eigen3/cmake/FindScotch.cmake" : {
      "ObjectId" : "530340b16fb3ef7da5507a9e8c6e667270e1a0a3",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Pastix requires SCOTCH or METIS (partitioning and reordering tools)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rd-party/eigen3/cmake/FindStandardMathLibrary.cmake" : {
      "ObjectId" : "711b0e4b4f1d82323123088b4ef04cd0836b5f9f",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find how to link to the standard math library, if anything at all is needed to do.\n\n# On most platforms this is automatic, but for example it's not automatic on QNX.\n\n#\n\n# Once done this will define\n\n#\n\n#  STANDARD_MATH_LIBRARY_FOUND - we found how to successfully link to the standard math library\n\n#  STANDARD_MATH_LIBRARY - the name of the standard library that one has to link to.\n\n#                            -- this will be left empty if it's automatic (most platforms).\n\n#                            -- this will be set to \"m\" on platforms where one must explicitly\n\n#                               pass the \"-lm\" linker flag.\n\n#\n\n# Copyright (c) 2010 Benoit Jacob <jacob.benoit.1@gmail.com>\n\n# Redistribution and use is allowed according to the terms of the 2-clause BSD license.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# a little test program for c++ math functions.\n\n# notice the std:: is required on some platforms such as QNX\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# first try compiling/linking the test program without any linker flags\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# the test program linked successfully without any linker flag.\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# the test program did not link successfully without any linker flag.\n\n# This is a very uncommon case that so far we only saw on QNX. The next try is the\n\n# standard name 'm' for the standard math library.\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# the test program linked successfully when linking to the 'm' library\n",
        "Line" : 53,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# the test program still doesn't link successfully\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "3rd-party/eigen3/cmake/FindSuperLU.cmake" : {
      "ObjectId" : "8a3df36668defb6ef511872de33729a474f9e792",
      "LastModified" : "2015-02-17T17:27:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Umfpack lib usually requires linking to a blas library.\n\n# It is up to the user of this module to find a BLAS and link to it.\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rd-party/eigen3/cmake/FindUmfpack.cmake" : {
      "ObjectId" : "16b046cd61bb7ac0cb63a23d9ae8fb28a3cfd229",
      "LastModified" : "2015-02-17T17:27:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Umfpack lib usually requires linking to a blas library.\n\n# It is up to the user of this module to find a BLAS and link to it.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rd-party/eigen3/cmake/RegexUtils.cmake" : {
      "ObjectId" : "b59dfc340f524d25add382306ba143e662baabdb",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/cmake/language_support.cmake" : {
      "ObjectId" : "231f7ff70351da6342309b1a42b8fc012640a431",
      "LastModified" : "2015-02-17T17:27:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# cmake/modules/language_support.cmake\n\n#\n\n# Temporary additional general language support is contained within this\n\n# file.  \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This additional function definition is needed to provide a workaround for\n\n# CMake bug 9220.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# On debian testing (cmake 2.6.2), I get return code zero when calling \n\n# cmake the first time, but cmake crashes when running a second time\n\n# as follows:\n\n#\n\n#  -- The Fortran compiler identification is unknown\n\n#  CMake Error at /usr/share/cmake-2.6/Modules/CMakeFortranInformation.cmake:7 (GET_FILENAME_COMPONENT):\n\n#    get_filename_component called with incorrect number of arguments\n\n#  Call Stack (most recent call first):\n\n#    CMakeLists.txt:3 (enable_language)\n\n#\n\n# My workaround is to invoke cmake twice.  If both return codes are zero, \n\n# it is safe to invoke ENABLE_LANGUAGE(Fortran OPTIONAL)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#message(\"DEBUG: language = ${language}\")\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Second run\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Temporary tests of the above function.\n\n#workaround_9220(CXX CXX_language_works)\n\n#message(\"CXX_language_works = ${CXX_language_works}\")\n\n#workaround_9220(CXXp CXXp_language_works)\n\n#message(\"CXXp_language_works = ${CXXp_language_works}\")\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "3rd-party/eigen3/demos/CMakeLists.txt" : {
      "ObjectId" : "b0d2eddbb8eaaf87a668274fbe63bddfb02ac792",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/demos/mandelbrot/CMakeLists.txt" : {
      "ObjectId" : "5c500e064dec6a01c8b203e250f746d26b7e626f",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/demos/opengl/CMakeLists.txt" : {
      "ObjectId" : "299aa441df95a47c84443068c95ad19ecee42516",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/doc/CMakeLists.txt" : {
      "ObjectId" : "2fc2a0dfc583f45689e161354a082c9e102228df",
      "LastModified" : "2015-06-24T14:35:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set some Doxygen flags\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set(EIGEN_DOXY_TAGFILES                 \"\\\"${Eigen_BINARY_DIR}/doc/eigen.doxytags =../\\\"\")\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "3rd-party/eigen3/doc/examples/CMakeLists.txt" : {
      "ObjectId" : "08cf8efd7c1cf448c363984d4d2b77eec9627c81",
      "LastModified" : "2015-02-17T17:27:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/doc/snippets/CMakeLists.txt" : {
      "ObjectId" : "1135900cf47686a95feff9350f24a1382aeb9726",
      "LastModified" : "2015-02-17T17:27:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/doc/special_examples/CMakeLists.txt" : {
      "ObjectId" : "3ab75dbfe910efcc218e3dfc4fa3600a3bef5d84",
      "LastModified" : "2015-06-24T14:35:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/failtest/CMakeLists.txt" : {
      "ObjectId" : "cadc6a2556f83d367d2b28b05dc0d4ef763e0a50",
      "LastModified" : "2015-06-24T14:35:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/lapack/CMakeLists.txt" : {
      "ObjectId" : "9883d4c72d8fdcaa1599c468553281daf5008b65",
      "LastModified" : "2015-02-17T17:27:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Download lapack and install sources and testing at the right place\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# The following comes from lapack/TESTING/CMakeLists.txt\n\n# Get Python\n",
        "Line" : 115,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#  string(REPLACE \"/STACK:10000000\" \"/STACK:900000000000000000\"\n\n#    CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS}\")\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# ======== SINGLE RFP LIN TESTS ========================\n",
        "Line" : 157,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#\n\n#\n\n# ======== SINGLE EIG TESTS ===========================\n\n#\n",
        "Line" : 160,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#\n\n# ======== DOUBLE LIN TESTS ===========================\n",
        "Line" : 223,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#\n\n# ======== DOUBLE RFP LIN TESTS ========================\n",
        "Line" : 226,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#\n\n# ======== DOUBLE EIG TESTS ===========================\n",
        "Line" : 229,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#\n\n# ======== COMPLEX RFP LIN TESTS ========================\n",
        "Line" : 291,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#\n\n# ======== COMPLEX EIG TESTS ===========================\n",
        "Line" : 294,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#\n\n# ======== COMPLEX16 LIN TESTS ========================\n",
        "Line" : 355,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "#\n\n# ======== COMPLEX16 RFP LIN TESTS ========================\n",
        "Line" : 358,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "#\n\n# ======== COMPLEX16 EIG TESTS ===========================\n",
        "Line" : 361,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#\n\n# ======== SINGLE-DOUBLE PROTO LIN TESTS ==============\n",
        "Line" : 424,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "#\n\n# ======== COMPLEX-COMPLEX16 LIN TESTS ========================\n",
        "Line" : 433,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# ==============================================================================\n",
        "Line" : 439,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 16
    },
    "3rd-party/eigen3/scripts/CMakeLists.txt" : {
      "ObjectId" : "0d9a631a9dd0d46b726703af0e51d5f49fddf029",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/test/CMakeLists.txt" : {
      "ObjectId" : "f5f208a379e488337eea02d4da9016c456b49bf4",
      "LastModified" : "2015-06-24T14:35:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# generate split test header file\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# configure blas/lapack (use Eigen's ones)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ei_add_test(denseLM)\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "3rd-party/eigen3/test/eigen2/CMakeLists.txt" : {
      "ObjectId" : "9615a6026ef87d4586ad7e3605aebfb0b48c08c6",
      "LastModified" : "2015-02-17T17:27:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ei_add_test(eigen2_first_aligned)\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#ei_add_test(eigen2_packetmath)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#ei_add_test(eigen2_vectorization_logic)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# no support for eigen2 sparse module\n\n# if(NOT EIGEN_DEFAULT_TO_ROW_MAJOR)\n\n#   ei_add_test(eigen2_sparse_vector)\n\n#   ei_add_test(eigen2_sparse_basic)\n\n#   ei_add_test(eigen2_sparse_solvers \" \" \"${SPARSE_LIBS}\")\n\n#   ei_add_test(eigen2_sparse_product)\n\n# endif()\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "3rd-party/eigen3/test/eigen2/testsuite.cmake" : {
      "ObjectId" : "12b6bfa2ebf3f045c975f368ea020e6c5f0e81de",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "####################################################################\n\n#\n\n# Usage:\n\n#  - create a new folder, let's call it cdash\n\n#  - in that folder, do:\n\n#    ctest -S path/to/eigen2/test/testsuite.cmake[,option1=value1[,option2=value2]]\n\n#\n\n# Options:\n\n#  - EIGEN_CXX: compiler, eg.: g++-4.2\n\n#      default: default c++ compiler\n\n#  - EIGEN_SITE: eg, INRIA-Bdx_pc-gael, or the name of the contributor, etc.\n\n#      default: hostname\n\n#  - EIGEN_BUILD_STRING: a string which identify the system/compiler. It should be formed like that:\n\n#        <OS_name>-<OS_version>-<arch>-<compiler-version>\n\n#      with:\n\n#        <OS_name> = opensuse, debian, osx, windows, cygwin, freebsd, solaris, etc.\n\n#        <OS_version> = 11.1, XP, vista, leopard, etc.\n\n#        <arch> = i386, x86_64, ia64, powerpc, etc.\n\n#        <compiler-version> = gcc-4.3.2, icc-11.0, MSVC-2008, etc.\n\n#  - EIGEN_EXPLICIT_VECTORIZATION: novec, SSE2, Altivec\n\n#       default: SSE2 for x86_64 systems, novec otherwise\n\n#       Its value is automatically appended to EIGEN_BUILD_STRING\n\n#  - EIGEN_CMAKE_DIR: path to cmake executable\n\n#  - EIGEN_MODE: dashboard model, can be Experimental, Nightly, or Continuous\n\n#      default: Nightly\n\n#  - EIGEN_WORK_DIR: directory used to download the source files and make the builds\n\n#      default: folder which contains this script\n\n#  - EIGEN_CMAKE_ARGS: additional arguments passed to cmake\n\n#  - CTEST_SOURCE_DIRECTORY: path to eigen's src (use a new and empty folder, not the one you are working on)\n\n#      default: <EIGEN_WORK_DIR>/src\n\n#  - CTEST_BINARY_DIRECTORY: build directory\n\n#      default: <EIGEN_WORK_DIR>/nightly-<EIGEN_CXX>\n\n#\n\n# Here is an example running several compilers on a linux system:\n\n# #!/bin/bash\n\n# ARCH=`uname -m`\n\n# SITE=`hostname`\n\n# VERSION=opensuse-11.1\n\n# WORK_DIR=/home/gael/Coding/eigen2/cdash\n\n# # get the last version of the script\n\n# wget http://bitbucket.org/eigen/eigen/raw/tip/test/testsuite.cmake -o $WORK_DIR/testsuite.cmake\n\n# COMMON=\"ctest -S $WORK_DIR/testsuite.cmake,EIGEN_WORK_DIR=$WORK_DIR,EIGEN_SITE=$SITE,EIGEN_MODE=$1,EIGEN_BUILD_STRING=$OS_VERSION-$ARCH\"\n\n# $COMMON-gcc-3.4.6,EIGEN_CXX=g++-3.4\n\n# $COMMON-gcc-4.0.1,EIGEN_CXX=g++-4.0.1\n\n# $COMMON-gcc-4.3.2,EIGEN_CXX=g++-4.3,EIGEN_EXPLICIT_VECTORIZATION=novec\n\n# $COMMON-gcc-4.3.2,EIGEN_CXX=g++-4.3,EIGEN_EXPLICIT_VECTORIZATION=SSE2\n\n# $COMMON-icc-11.0,EIGEN_CXX=icpc\n\n#\n\n####################################################################\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# process the arguments\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# pick first\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# remove first\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# decompose as a pair key=value\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# set the variable to the specified value\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "####################################################################\n\n# Automatically set some user variables if they have not been defined manually\n\n####################################################################\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# let's try to find all information we need to make the build string ourself\n",
        "Line" : 96,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# OS\n",
        "Line" : 98,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# arch\n",
        "Line" : 101,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "## mandatory variables (the default should be ok in most cases):\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# which ctest command to use for running the dashboard\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# what cmake command to use for configuring this dashboard\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "####################################################################\n\n# The values in this section are optional you can either\n\n# have them or leave them commented out\n\n####################################################################\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# this make sure we get consistent outputs\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# should ctest wipe the binary tree before running\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# this is the initial cache to use for the binary tree, be careful to escape\n\n# any quotes inside of this string if you use it\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#message(SEND_ERROR \"win32\")\n",
        "Line" : 159,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# set any extra environment variables to use during the execution of the script here:\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "3rd-party/eigen3/test/testsuite.cmake" : {
      "ObjectId" : "3bec56b3fafc1a60a2b60fd0cd1e4ea6e008ab04",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "####################################################################\n\n#\n\n# Usage:\n\n#  - create a new folder, let's call it cdash\n\n#  - in that folder, do:\n\n#    ctest -S path/to/eigen/test/testsuite.cmake[,option1=value1[,option2=value2]]\n\n#\n\n# Options:\n\n#  - EIGEN_CXX: compiler, eg.: g++-4.2\n\n#      default: default c++ compiler\n\n#  - EIGEN_SITE: eg, INRIA-Bdx_pc-gael, or the name of the contributor, etc.\n\n#      default: hostname\n\n#  - EIGEN_BUILD_STRING: a string which identify the system/compiler. It should be formed like that:\n\n#        <OS_name>-<OS_version>-<arch>-<compiler-version>\n\n#      with:\n\n#        <OS_name> = opensuse, debian, osx, windows, cygwin, freebsd, solaris, etc.\n\n#        <OS_version> = 11.1, XP, vista, leopard, etc.\n\n#        <arch> = i386, x86_64, ia64, powerpc, etc.\n\n#        <compiler-version> = gcc-4.3.2, icc-11.0, MSVC-2008, etc.\n\n#  - EIGEN_EXPLICIT_VECTORIZATION: novec, SSE2, Altivec\n\n#       default: SSE2 for x86_64 systems, novec otherwise\n\n#       Its value is automatically appended to EIGEN_BUILD_STRING\n\n#  - EIGEN_CMAKE_DIR: path to cmake executable\n\n#  - EIGEN_MODE: dashboard model, can be Experimental, Nightly, or Continuous\n\n#      default: Nightly\n\n#  - EIGEN_WORK_DIR: directory used to download the source files and make the builds\n\n#      default: folder which contains this script\n\n#  - EIGEN_CMAKE_ARGS: additional arguments passed to cmake\n\n#  - EIGEN_GENERATOR_TYPE: allows to overwrite the generator type\n\n#      default: nmake (windows\n\n#      See http://www.cmake.org/cmake/help/cmake2.6docs.html#section_Generators for a complete\n\n#      list of supported generators.\n\n#  - EIGEN_NO_UPDATE: allows to submit dash boards from local repositories\n\n#      This might be interesting in case you want to submit dashboards\n\n#      including local changes.\n\n#  - CTEST_SOURCE_DIRECTORY: path to eigen's src (use a new and empty folder, not the one you are working on)\n\n#      default: <EIGEN_WORK_DIR>/src\n\n#  - CTEST_BINARY_DIRECTORY: build directory\n\n#      default: <EIGEN_WORK_DIR>/nightly-<EIGEN_CXX>\n\n#\n\n# Here is an example running several compilers on a linux system:\n\n# #!/bin/bash\n\n# ARCH=`uname -m`\n\n# SITE=`hostname`\n\n# VERSION=opensuse-11.1\n\n# WORK_DIR=/home/gael/Coding/eigen/cdash\n\n# # get the last version of the script\n\n# wget http://bitbucket.org/eigen/eigen/raw/tip/test/testsuite.cmake -o $WORK_DIR/testsuite.cmake\n\n# COMMON=\"ctest -S $WORK_DIR/testsuite.cmake,EIGEN_WORK_DIR=$WORK_DIR,EIGEN_SITE=$SITE,EIGEN_MODE=$1,EIGEN_BUILD_STRING=$OS_VERSION-$ARCH\"\n\n# $COMMON-gcc-3.4.6,EIGEN_CXX=g++-3.4\n\n# $COMMON-gcc-4.0.1,EIGEN_CXX=g++-4.0.1\n\n# $COMMON-gcc-4.3.2,EIGEN_CXX=g++-4.3,EIGEN_EXPLICIT_VECTORIZATION=novec\n\n# $COMMON-gcc-4.3.2,EIGEN_CXX=g++-4.3,EIGEN_EXPLICIT_VECTORIZATION=SSE2\n\n# $COMMON-icc-11.0,EIGEN_CXX=icpc\n\n#\n\n####################################################################\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# process the arguments\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# pick first\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# remove first\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# decompose as a pair key=value\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# set the variable to the specified value\n",
        "Line" : 79,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "####################################################################\n\n# Automatically set some user variables if they have not been defined manually\n\n####################################################################\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# let's try to find all information we need to make the build string ourself\n",
        "Line" : 103,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# OS\n",
        "Line" : 105,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# arch\n",
        "Line" : 108,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "## mandatory variables (the default should be ok in most cases):\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# the backup is CVS related ...\n",
        "Line" : 145,
        "CharPositionInLine" : 37
      },
      "12" : {
        "Text" : "# which ctest command to use for running the dashboard\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# what cmake command to use for configuring this dashboard\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "####################################################################\n\n# The values in this section are optional you can either\n\n# have them or leave them commented out\n\n####################################################################\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# this make sure we get consistent outputs\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# should ctest wipe the binary tree before running\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# raise the warning/error limit\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# this is the initial cache to use for the binary tree, be careful to escape\n\n# any quotes inside of this string if you use it\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#message(SEND_ERROR \"win32\")\n",
        "Line" : 174,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# set any extra environment variables to use during the execution of the script here:\n\n# setting this variable on windows machines causes trouble ...\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "3rd-party/eigen3/unsupported/CMakeLists.txt" : {
      "ObjectId" : "4fef40a86c6d17dd8cc792a5e4f9e8d65abcdf58",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# can't do EXCLUDE_FROM_ALL here, breaks CTest\n",
        "Line" : 4,
        "CharPositionInLine" : 25
      },
      "CommentCount" : 1
    },
    "3rd-party/eigen3/unsupported/Eigen/CMakeLists.txt" : {
      "ObjectId" : "e1fbf97e2b211d87ebe9a10746c1e3ea653c5b98",
      "LastModified" : "2015-06-24T14:35:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/unsupported/Eigen/src/AutoDiff/CMakeLists.txt" : {
      "ObjectId" : "ad91fd9c4628cd921b2efedc59b093218dc34064",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/unsupported/Eigen/src/BVH/CMakeLists.txt" : {
      "ObjectId" : "b377d865cb1f9d2db01426f0b599929a4fa6458a",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/unsupported/Eigen/src/CMakeLists.txt" : {
      "ObjectId" : "125c43fdfa4d3459cbbf75a6ba2190c559678f52",
      "LastModified" : "2015-06-24T14:35:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/unsupported/Eigen/src/FFT/CMakeLists.txt" : {
      "ObjectId" : "edcffcb189c872b5339f345aa32d772cda3f8bf0",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/unsupported/Eigen/src/IterativeSolvers/CMakeLists.txt" : {
      "ObjectId" : "7986afc5ed4ecf09fa871c726a0c2ab1945e8559",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/unsupported/Eigen/src/KroneckerProduct/CMakeLists.txt" : {
      "ObjectId" : "4daefebee6f676c073f5ecacf9e8781aa5d673c2",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/unsupported/Eigen/src/LevenbergMarquardt/CMakeLists.txt" : {
      "ObjectId" : "d9690854db3d8f757642055cc80d1c92457a8bc4",
      "LastModified" : "2015-06-24T14:35:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/unsupported/Eigen/src/MatrixFunctions/CMakeLists.txt" : {
      "ObjectId" : "cdde64d2cd45b59bee6b55d6590f2fcd7827d52c",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/unsupported/Eigen/src/MoreVectorization/CMakeLists.txt" : {
      "ObjectId" : "1b887cc8e3447b27bb9d289274eeb1ee0b5e71e0",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/unsupported/Eigen/src/NonLinearOptimization/CMakeLists.txt" : {
      "ObjectId" : "9322ddadf0364cc12cd9a77fdf0b48e2cbe49f85",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/unsupported/Eigen/src/NumericalDiff/CMakeLists.txt" : {
      "ObjectId" : "1199aca2f7073703a946344a922e0adec1e22b3e",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/unsupported/Eigen/src/Polynomials/CMakeLists.txt" : {
      "ObjectId" : "51f13f3cb91ea44bc113178d58ab26db47369d25",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/unsupported/Eigen/src/SVD/CMakeLists.txt" : {
      "ObjectId" : "b40baf09210610f0c605ac4a3079700f9b447bd4",
      "LastModified" : "2015-02-17T17:27:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/unsupported/Eigen/src/Skyline/CMakeLists.txt" : {
      "ObjectId" : "3bf1b0dd46a7d1fa7cf90884e2284c0c06c4e8a5",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/unsupported/Eigen/src/SparseExtra/CMakeLists.txt" : {
      "ObjectId" : "7ea32ca5e26bf653f5814ce780c63c078ee83e29",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/unsupported/Eigen/src/Splines/CMakeLists.txt" : {
      "ObjectId" : "55c6271e96328c14e32ae6252521182e3051f713",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/unsupported/doc/CMakeLists.txt" : {
      "ObjectId" : "9e9ab98007eb189f2625f7fdd3c232c2d3da4e3b",
      "LastModified" : "2013-05-21T07:39:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/unsupported/doc/examples/CMakeLists.txt" : {
      "ObjectId" : "c47646dfca9d76e45cf929d74508e32698d96ee3",
      "LastModified" : "2015-02-17T17:27:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/unsupported/doc/snippets/CMakeLists.txt" : {
      "ObjectId" : "f0c5cc2a84dd65edd575963bf648a1481f9b1dde",
      "LastModified" : "2015-02-17T17:27:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd-party/eigen3/unsupported/test/CMakeLists.txt" : {
      "ObjectId" : "2e4cfdb2e09534ee6a6251e8f7023efa8e7f480a",
      "LastModified" : "2015-02-17T17:27:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# this test seems to never have been successful on x87, so is considered to contain a FP-related bug.\n\n# see thread: \"non-linear optimization test summary\"\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rd-party/lapacke/CMakeLists.txt" : {
      "ObjectId" : "48c703a7e65adff52e162d703011751e4cc3d99b",
      "LastModified" : "2015-06-24T14:35:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMakeLists.txt" : {
      "ObjectId" : "f3c6ffaf84360dcd5f1dbaaed0eb8e16081e208c",
      "LastModified" : "2015-07-21T10:40:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Rokko: Integrated Interface for libraries of eigenvalue decomposition\n\n#\n\n# Copyright (C) 2012-2015 by Rokko Developers https://github.com/t-sakashita/rokko\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# RPATH setting\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C++, C, and Fortran compilers\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#  enable_language(Fortran)\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ancient gfortran does not support iso_c_bindings\n",
        "Line" : 78,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# OpenMP\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Almost always OpenMP flags are same both for C and for Fortran.\n",
        "Line" : 96,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# MPI library\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Linker for Fortran Program\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# standard include directories\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Python\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Boost Library\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# find_package(BLAS)\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#\n\n# parallel dense solvers\n\n#\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# find Scalapack\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# find EigenExa\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# find Elemental\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# find ELPA\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#\n\n# parallel sparse solvers\n\n#\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# find PETSc/SLEPc\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# find Anasazi\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# test environment\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# directories\n",
        "Line" : 279,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "benchmark/CMakeLists.txt" : {
      "ObjectId" : "7fe635368b315a607cb12fcafeabd28fdfdf24b6",
      "LastModified" : "2015-06-24T14:35:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Rokko: Integrated Interface for libraries of eigenvalue decomposition\n\n#\n\n# Copyright (C) 2012-2014 by Synge Todo <wistaria@comp-phys.org>\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "benchmark/dense/CMakeLists.txt" : {
      "ObjectId" : "ad4f7aa34cda98f058f353abf55bd45c2ad5facc",
      "LastModified" : "2015-06-24T14:35:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Rokko: Integrated Interface for libraries of eigenvalue decomposition\n\n#\n\n# Copyright (C) 2012-2015 by Rokko Developers https://github.com/t-sakashita/rokko\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "benchmark/sparse/CMakeLists.txt" : {
      "ObjectId" : "123d313ea2fab14cc4c0119fe0143d282e1bbc5b",
      "LastModified" : "2015-06-24T14:35:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Rokko: Integrated Interface for libraries of eigenvalue decomposition\n\n#\n\n# Copyright (C) 2014-2014 by Synge Todo <wistaria@comp-phys.org>\n\n#                            Tatsuya Sakashita <t-sakashita@issp.u-tokyo.ac.jp>\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "config/FindAnasazi.cmake" : {
      "ObjectId" : "bc129f3c25ee7006fa09eb4e8c4681705f29172b",
      "LastModified" : "2015-07-21T10:43:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Anasazi\n\n# Once done this will define\n\n#\n\n#  ANASAZI_FOUND        - system has Anasazi\n\n#  ANASAZI_INCLUDE_DIR  - include directories for Anasazi\n\n#  ANASAZI_LIBARIES     - libraries for Anasazi\n\n#  ANASAZI_DIR          - directory where Anasazi is installed\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Standard search path\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Try to figure out ANASAZI_DIR by finding Anasazi_config.h\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# message(STATUS ${name} ${_LIB})\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# mark_as_advanced(ANASAZI_LIBRARIES)\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "config/FindBoostSrc.cmake" : {
      "ObjectId" : "c1895c1b46ce5b5b615bc16cb42a22ff90cc771f",
      "LastModified" : "2015-06-24T14:35:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# check Boost version (from Modules/FindBoost.cmake)\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Avoid auto link of Boost library\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "config/FindEigenExa.cmake" : {
      "ObjectId" : "c9e5ede336612a5c53010470fe26cc97c206fe60",
      "LastModified" : "2015-06-24T14:35:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find EigenExa\n\n# Once done this will define\n\n#\n\n#  EIGENEXA_FOUND        - system has EigenExa\n\n#  EIGENEXA_INCLUDE_DIR  - include directories for EigenExa\n\n#  EIGENEXA_LIBARIES     - libraries for EigenExa\n\n#  EIGENEXA_DIR          - directory where EigenExa is installed\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Standard search path\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "config/FindElemental.cmake" : {
      "ObjectId" : "557079db0af42e4788ca9a10c1264e01137aecca",
      "LastModified" : "2015-06-24T14:35:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Elemental\n\n# Once done this will define\n\n#\n\n#  ELEMENTAL_FOUND        - system has Elemental\n\n#  ELEMENTAL_INCLUDE_DIR  - include directories for Elemental\n\n#  ELEMENTAL_LIBARIES     - libraries for Elemental\n\n#  ELEMENTAL_DIR          - directory where Elemental is installed\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Standard search path\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "config/FindElpa.cmake" : {
      "ObjectId" : "18c16dda4e7830c537865679f2964ff39c31b08f",
      "LastModified" : "2015-06-24T14:35:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Elpa\n\n# Once done this will define\n\n#\n\n#  ELPA_FOUND        - system has Elpa\n\n#  ELPA_LIBARIES     - libraries for Elpa\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Standard search path\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "config/FindLapack.cmake" : {
      "ObjectId" : "b66708a1bd49abc7a7f4393233c4537078eb04b2",
      "LastModified" : "2015-07-21T10:43:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - FindLapack.cmake\n\n# Find LAPACK/BLAS (and compatible) numerical libraries\n\n#\n\n# This module will define the following values:\n\n# LAPACK_LIBRARY\n\n# BLAS_LIBRARY\n\n#\n\n# 0) check if BLAS_LIBRARY and LAPACK_LIBRARY have already been set on command line, if so: take these values.\n\n# 1) use ENV MKL\n\n# 2) if Intel compiler pick MKL (-mkl)\n\n# 3) search MKL in usual paths\n\n# 4) search ENV ATLAS\n\n# 5) search generic lapack/blas using CMake-provided FindLAPACK.cmake\n\n#     if BLA_VENDOR is set, try to use that vendor's LAPACK implementation\n\n# 6) if build is on cray use hardcoded path\n\n# 7) give up\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#  Copyright (C)  2009-2010 Matthias Troyer <troyer@comp-phys.org>\n\n#  Copyright (C)  2009-2010 Synge Todo <wistaria@comp-phys.org>\n\n#  Copyright (C)  2009-2010 Bela Bauer\n\n#  Copyright (C)  2009-2010 Brigitte Surer\n\n#  Copyright (C)  2009-2010 Lukas Gamper\n\n#  Copyright (C)  2009-2012 Ryo IGARASHI <rigarash@issp.u-tokyo.ac.jp>\n\n#  Copyright (C)       2010 Emanuel Gull <gull@phys.columbia.edu>\n\n#  Copyright (C)       2012 Michele Dolfi <dolfim@phys.ethz.ch>\n\n#\n\n#  Distributed under the Boost Software License, Version 1.0.\n\n#      (See accompanying file LICENSE_1_0.txt or copy at\n\n#          http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# TODO: - look for MKL on Windows\n\n#       - look for goto2\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Includes\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###################################################\n\n# BLAS_LIBRARY, LAPACK_LIBRARY manually defined.\n\n###################################################\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "########################################################################################################\n\n# Looking for MKL.\n\n#   For parallel MKL, OpenMP check has to be done beforehand.\n\n# 0) $ENV{MKL} can be defined from http://software.intel.com/en-us/articles/intel-mkl-link-line-advisor\n\n#    if specified, this settings are chosen\n\n# 1) If compiler is Intel >= 12 (Intel Composer XE 2011/2013, Intel Compiler Pro)\n\n# 1.1) When OPENMP_FOUND=ON and ALPS_USE_MKL_PARALLEL=ON, use -mkl=parallel\n\n# 1.2) When OPENMP_FOUND=OFF or ALPS_USE_MKL_PARALLEL=OFF, use -mkl=sequential\n\n# 2) If $ENV{MKLROOT} / $ENV{MKL_HOME} defined (done by MKL tools/environment scripts), use the linking from advisor\n\n# 3) Look for MKL libraries in MKL_PATHS\n\n########################################################################################################\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# 0) $ENV{MKL} can be set for explicit linking\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# 1) Intel compiler >= 12\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# 2) Use MKLROOT / MKL_HOME and standard linking\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# STRING(REGEX MATCH \"[0-9]+\\\\.[0-9]+\\\\.[0-9]+\" MKL_VERSION ${mkl_home})\n\n# set(MKL_VERSION_RAW ${MKL_VERSION})\n\n# if((DEFINED MKL_VERSION OR MKL_VERSION VERSION_LESS 10 OR MKL_VERSION VERSION_GREATER 2000) AND ${mkl_home} MATCHES \"composer\")\n\n#   set(MKL_VERSION \"10.3.1\") # set to arbitrary 10.3 version (they should behave all the same)\n\n# endif((DEFINED MKL_VERSION OR MKL_VERSION VERSION_LESS 10 OR MKL_VERSION VERSION_GREATER 2000) AND ${mkl_home} MATCHES \"composer\")\n\n# if((DEFINED MKL_VERSION OR MKL_VERSION VERSION_LESS 10 OR MKL_VERSION VERSION_GREATER 2000) AND ${mkl_home} MATCHES \"Compiler\")\n\n#   set(MKL_VERSION \"10.2.4\") # set to arbitrary 10.2 version (they should behave all the same)\n\n# endif((DEFINED MKL_VERSION OR MKL_VERSION VERSION_LESS 10 OR MKL_VERSION VERSION_GREATER 2000) AND ${mkl_home} MATCHES \"Compiler\")\n",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# message(STATUS \"LAPACK DEBUG::MKL_VERSION (raw) ${MKL_VERSION_RAW}\")\n",
        "Line" : 126,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# OS thread library (pthread required by MKL)\n",
        "Line" : 129,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# MKL core\n",
        "Line" : 131,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# No parallel mode support for MKL < 10.0\n",
        "Line" : 133,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# Intel with Intel OpenMP\n",
        "Line" : 135,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# GCC with GNU OpenMP\n\n# MKL with g++ needs gfortran\n",
        "Line" : 138,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# MKL < 10.0\n",
        "Line" : 145,
        "CharPositionInLine" : 13
      },
      "16" : {
        "Text" : "# basic data type model interface\n\n# - assuming ILP32 or LP64\n",
        "Line" : 149,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# MKL < 10.0\n",
        "Line" : 159,
        "CharPositionInLine" : 11
      },
      "18" : {
        "Text" : "# MKL library path\n",
        "Line" : 162,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# MKL < 10.3\n",
        "Line" : 166,
        "CharPositionInLine" : 13
      },
      "20" : {
        "Text" : "# MKL < 10.3 have the same PATH\n",
        "Line" : 184,
        "CharPositionInLine" : 13
      },
      "21" : {
        "Text" : "# combine together\n",
        "Line" : 196,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# unset local variables\n",
        "Line" : 199,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# Checking if it works\n",
        "Line" : 210,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# MKL flag set in alps/config.h\n",
        "Line" : 230,
        "CharPositionInLine" : 25
      },
      "25" : {
        "Text" : "# SET(MKL_PATHS \n\n#   $ENV{MKL_HOME}/lib/intel64\n\n#   $ENV{MKL_HOME}/lib/em${QMC_BITS}t\n\n#   $ENV{MKL_HOME}/lib/${QMC_BITS}\n\n#   $ENV{MKL_HOME}/lib\n\n#   ${MKL_PATHS} \n\n#   ) \n\n# #MESSAGE(STATUS \"Looking for intel/mkl library in ${MKL_PATHS}\")\n\n# \n\n# IF(NOT LAPACK_LIBRARY_INIT)\n\n#   IF(${CMAKE_SYSTEM_PROCESSOR} MATCHES \"x86_64\")\n\n#     IF(LINK_LAPACK_OLD)\n\n#       FIND_LIBRARY(LAPACK_LIBRARY NAMES mkl_lapack PATHS ${MKL_PATHS})\n\n#       FIND_LIBRARY(BLAS_LIBRARY NAMES mkl PATHS ${MKL_PATHS})\n\n#     ELSE(LINK_LAPACK_OLD)\n\n#       FIND_LIBRARY(LAPACK_LIBRARY STATIC NAMES mkl_lapack PATHS ${MKL_PATHS})\n\n#       FIND_LIBRARY(BLAS_LIBRARY  NAMES mkl_em64t PATHS ${MKL_PATHS})\n\n#       MESSAGE(\"-- mkl 10.0.[0-2] warning for EM64T\")\n\n#       MESSAGE(\"-- Replace libmkl_lapack.so in CMakeCache.txt by libmkl_lapack.a\")\n\n#     ENDIF(LINK_LAPACK_OLD)\n\n#   ELSE(${CMAKE_SYSTEM_PROCESSOR} MATCHES \"x86_64\")\n\n#     FIND_LIBRARY(LAPACK_LIBRARY \n\n#       NAMES mkl_lapack \n\n#       PATHS ${MKL_PATHS}\n\n#       )\n\n#     FIND_LIBRARY(BLAS_LIBRARY\n\n#       NAMES mkl\n\n#       PATHS ${MKL_PATHS}\n\n#     )\n\n#   ENDIF(${CMAKE_SYSTEM_PROCESSOR} MATCHES \"x86_64\")\n\n# \n\n#   FIND_LIBRARY(INTEL_GUIDE_LIBRARY\n\n#     NAMES guide\n\n#     PATHS ${MKL_PATHS}\n\n#   )\n\n#   MARK_AS_ADVANCED(INTEL_GUIDE_LIBRARY)\n\n#   IF(NOT INTEL_GUIDE_LIBRARY MATCHES \"NOTFOUND\")\n\n#     SET(REQUIRE_PTHREAD TRUE)\n\n#     FIND_LIBRARY(PTHREAD_LIBRARY NAMES pthread)\n\n#   ENDIF(NOT INTEL_GUIDE_LIBRARY MATCHES \"NOTFOUND\")\n\n#   IF(NOT BLAS_guide_LIBRARY MATCHES \"NOTFOUND\")\n\n#     SET(REQUIRE_PTHREAD TRUE)\n\n#     FIND_LIBRARY(PTHREAD_LIBRARY NAMES pthread)\n\n#   ENDIF(NOT BLAS_guide_LIBRARY MATCHES \"NOTFOUND\")\n\n# \n\n#   IF(LAPACK_LIBRARY MATCHES \"mkl\")\n\n#     MESSAGE(STATUS \"Found intel/mkl library\")\n\n#     SET(LAPACK_LIBRARY_INIT 1)\n\n#     SET(BLAS_LIBRARY_INIT 1)\n\n#     SET(HAVE_MKL 1) # CACHE BOOL \"HAVE_MKL is set to 1\")\n\n#     SET(MKL_INC_PATHS $ENV{MKL_HOME}/include ${MKL_PATHS}) \n\n#     FIND_PATH(MKL_INCLUDE_DIR mkl.h ${MKL_INC_PATHS})\n\n#     INCLUDE_DIRECTORIES(${MKL_INCLUDE_DIR})\n\n#   ENDIF(LAPACK_LIBRARY MATCHES \"mkl\")\n\n# \n\n# ENDIF(NOT LAPACK_LIBRARY_INIT)\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "###################################################\n\n# Looking for Veclib.\n\n# (in case MKL was not found)\n\n###################################################\n",
        "Line" : 293,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Checking if veclib works CMAKE_REQUIRED_FLAGS\n",
        "Line" : 302,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "###################################################\n\n# Looking for ATLAS.\n\n###################################################\n",
        "Line" : 335,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "###################################################\n\n# Looking for CLAPACK on Windows.\n\n###################################################\n",
        "Line" : 378,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "###################################################\n\n# Falling back to CMake FindBLAS / LAPACK.\n\n# (Fortran compiler is needed)\n\n###################################################\n",
        "Line" : 398,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "###################################################\n\n# Looking for SCALAPACK.\n\n###################################################\n",
        "Line" : 433,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# IF(USE_SCALAPACK)\n\n#   SET(PNPATHS \n\n#     ${MKL_PATHS}\n\n#     ${BLACS_HOME}/lib\n\n#     ${SCALAPACK_HOME}/lib\n\n#     /usr/lib\n\n#     /opt/lib\n\n#     /usr/local/lib\n\n#     /sw/lib\n\n#     )\n",
        "Line" : 437,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#   IF(INTEL_MKL)\n\n#     FIND_LIBRARY(BLACSLIB mkl_blacs_${PLAT}_lp${QMC_BITS} PATHS  ${PNPATHS})\n\n#     FIND_LIBRARY(SCALAPACKLIB mkl_scalapack PATHS  ${PNPATHS})\n\n#   ENDIF(INTEL_MKL)\n",
        "Line" : 448,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#   IF(NOT SCALAPACKLIB)\n\n#     FIND_LIBRARY(BLACSLIB blacs_MPI-${PLAT}-{BLACSDBGLVL} PATHS  ${PNPATHS})\n\n#     FIND_LIBRARY(BLACSCINIT blacsCinit_MPI-${PLAT}-{BLACSDBGLVL} PATHS  ${PNPATHS})\n\n#     FIND_LIBRARY(SCALAPACKLIB scalapack PATHS  ${PNPATHS})\n\n#   ENDIF(NOT SCALAPACKLIB)\n",
        "Line" : 453,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#   IF(BLACSLIB AND SCALAPACKLIB)\n\n#     SET(FOUND_SCALAPACK 1 CACHE BOOL \"Found scalapack library\")\n\n#   ELSE(BLACSLIB AND SCALAPACKLIB)\n\n#     SET(FOUND_SCALAPACK 0 CACHE BOOL \"Mising scalapack library\")\n\n#   ENDIF(BLACSLIB AND SCALAPACKLIB)\n",
        "Line" : 459,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#   MARK_AS_ADVANCED(\n\n#     BLACSCINIT\n\n#     BLACSLIB\n\n#     SCALAPACKLIB\n\n#     FOUND_SCALAPACK\n\n#     )\n\n# ENDIF(USE_SCALAPACK)\n",
        "Line" : 465,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "###################################################\n\n# Finalize (setting some variables).\n\n###################################################\n",
        "Line" : 475,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 38
    },
    "config/FindPETSc.cmake" : {
      "ObjectId" : "c543b6f678fc20165c71d1433e04955b97e1677f",
      "LastModified" : "2015-06-24T14:35:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find PETSc\n\n# Once done this will define\n\n#\n\n#  PETSC_FOUND        - system has PETSc\n\n#  PETSC_INCLUDE_DIR  - the PETSc include directory\n\n#  PETSC_LIBRARIES    - Link these to use PETSc\n\n#  PETSC_DEFINITIONS  - Compiler switches for using PETSc\n\n#  PETSC_DIR          - directory where PETSc is installed\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Standard search path\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Standard paths for Debian with version number\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "config/FindPackageMultipass.cmake" : {
      "ObjectId" : "fa350a928c9946e052b8c227f6537f434e24b902",
      "LastModified" : "2013-05-21T07:40:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# PackageMultipass - this module defines two macros\n\n#\n\n# FIND_PACKAGE_MULTIPASS (Name CURRENT\n\n#  STATES VAR0 VAR1 ...\n\n#  DEPENDENTS DEP0 DEP1 ...)\n\n#\n\n#  This function creates a cache entry <UPPERCASED-Name>_CURRENT which\n\n#  the user can set to \"NO\" to trigger a reconfiguration of the package.\n\n#  The first time this function is called, the values of\n\n#  <UPPERCASED-Name>_VAR0, ... are saved.  If <UPPERCASED-Name>_CURRENT\n\n#  is false or if any STATE has changed since the last time\n\n#  FIND_PACKAGE_MULTIPASS() was called, then CURRENT will be set to \"NO\",\n\n#  otherwise CURRENT will be \"YES\".  IF not CURRENT, then\n\n#  <UPPERCASED-Name>_DEP0, ... will be FORCED to NOTFOUND.\n\n#  Example:\n\n#    find_path (FOO_DIR include/foo.h)\n\n#    FIND_PACKAGE_MULTIPASS (Foo foo_current\n\n#      STATES DIR\n\n#      DEPENDENTS INCLUDES LIBRARIES)\n\n#    if (NOT foo_current)\n\n#      # Make temporary files, run programs, etc, to determine FOO_INCLUDES and FOO_LIBRARIES\n\n#    endif (NOT foo_current)\n\n#\n\n# MULTIPASS_SOURCE_RUNS (Name INCLUDES LIBRARIES SOURCE RUNS LANGUAGE)\n\n#  Always runs the given test, use this when you need to re-run tests\n\n#  because parent variables have made old cache entries stale. The LANGUAGE\n\n#  variable is either C or CXX indicating which compiler the test should\n\n#  use. \n\n# MULTIPASS_C_SOURCE_RUNS (Name INCLUDES LIBRARIES SOURCE RUNS)\n\n#  DEPRECATED! This is only included for backwards compatability. Use\n\n#  the more general MULTIPASS_SOURCE_RUNS instead.\n\n#  Always runs the given test, use this when you need to re-run tests\n\n#  because parent variables have made old cache entries stale.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The name of the stored value for the given state\n",
        "Line" : 46,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "# Clear all the dependent variables so that the module can reset them\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# This is a ridiculous hack.  CHECK_${language}_SOURCE_* thinks that if the\n\n# *name* of the return variable doesn't change, then the test does\n\n# not need to be re-run.  We keep an internal count which we\n\n# increment to guarantee that every test name is unique.  If we've\n\n# gotten here, then the configuration has changed enough that the\n\n# test *needs* to be rerun.\n",
        "Line" : 82,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Why can't I add to a cache variable?\n",
        "Line" : 91,
        "CharPositionInLine" : 49
      },
      "CommentCount" : 5
    },
    "config/FindPython.cmake" : {
      "ObjectId" : "25c1b77700d53a919a3ab524ffd9bd54e7d8a0ac",
      "LastModified" : "2015-06-24T14:35:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  Copyright Olivier Parcollet and Matthias Troyer 2010.\n\n#  Copyright Synge Todo 2015.\n\n#  Distributed under the Boost Software License, Version 1.0.\n\n#      (See accompanying file LICENSE_1_0.txt or copy at\n\n#          http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#  Python settings : \n\n#\n\n#  This module checks that : \n\n#  - the python interpreter is working and version >= 2.6\n\n#  - it has modules : distutils, numpy, tables, scipy\n\n# \n\n#  This module defines the variables\n\n#  - PYTHON_FOUND : Was Python found\n\n#  - PYTHON_EXECUTABLE : name of the python interpreter\n\n#  - PYTHON_INCLUDE_DIRS : include for compilation\n\n#  - PYTHON_LIBRARIES : link flags \n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Check the interpreter and its version\n\n#\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#\n\n# Check for Python include path\n\n#\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#\n\n# Check for Python library path\n\n#\n",
        "Line" : 76,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# PYTHON_ADD_MODULE(<name> src1 src2 ... srcN) is used to build modules for python.\n\n# PYTHON_WRITE_MODULES_HEADER(<filename>) writes a header file you can include\n\n# in your sources to initialize the static python modules\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Mark these options as advanced\n",
        "Line" : 103,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#    target_link_libraries(${_NAME} ${PYTHON_LIBRARIES})\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "config/FindSLEPc.cmake" : {
      "ObjectId" : "19e512494b56ed89b152c7ed38de2a8e69aecb62",
      "LastModified" : "2015-06-24T14:35:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find SLEPC\n\n# Once done this will define\n\n#\n\n#  SLEPC_FOUND        - system has SLEPc\n\n#  SLEPC_INCLUDE_DIR  - include directories for SLEPc\n\n#  SLEPC_LIBARIES     - libraries for SLEPc\n\n#  SLEPC_DIR          - directory where SLEPc is installed\n\n#\n\n# Assumes that PETSC_DIR and PETSC_ARCH has been set by\n\n# alredy calling find_package(PETSc)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Standard search path\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Standard paths for Debian with version number\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Try to figure out SLEPC_DIR by finding slepc.h\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "config/FindScalapack.cmake" : {
      "ObjectId" : "5473743f9872f3adfdfc9e0258275ec9175e435f",
      "LastModified" : "2015-06-24T14:35:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Scalapack\n\n# Once done this will define\n\n#\n\n#  SCALAPACK_FOUND        - system has ScaLAPACK\n\n#  SCALAPACK_LIBRARIES     - libraries for ScaLAPACK\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check whether SGI MPT is used\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Standard search path\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# for CentOS\n",
        "Line" : 94,
        "CharPositionInLine" : 43
      },
      "CommentCount" : 4
    },
    "config/ResolveCompilerPaths.cmake" : {
      "ObjectId" : "b398025e95518511f4e06ba218dcef386a4e8eaa",
      "LastModified" : "2013-05-21T07:40:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ResolveCompilerPaths - this module defines two macros\n\n#\n\n# RESOLVE_LIBRARIES (XXX_LIBRARIES LINK_LINE)\n\n#  This macro is intended to be used by FindXXX.cmake modules.\n\n#  It parses a compiler link line and resolves all libraries\n\n#  (-lfoo) using the library path contexts (-L/path) in scope.\n\n#  The result in XXX_LIBRARIES is the list of fully resolved libs.\n\n#  Example:\n\n#\n\n#    RESOLVE_LIBRARIES (FOO_LIBRARIES \"-L/A -la -L/B -lb -lc -ld\")\n\n#\n\n#  will be resolved to\n\n#\n\n#    FOO_LIBRARIES:STRING=\"/A/liba.so;/B/libb.so;/A/libc.so;/usr/lib/libd.so\"\n\n#\n\n#  if the filesystem looks like\n\n#\n\n#    /A:       liba.so         libc.so\n\n#    /B:       liba.so libb.so\n\n#    /usr/lib: liba.so libb.so libc.so libd.so\n\n#\n\n#  and /usr/lib is a system directory.\n\n#\n\n#  Note: If RESOLVE_LIBRARIES() resolves a link line differently from\n\n#  the native linker, there is a bug in this macro (please report it).\n\n#\n\n# RESOLVE_INCLUDES (XXX_INCLUDES INCLUDE_LINE)\n\n#  This macro is intended to be used by FindXXX.cmake modules.\n\n#  It parses a compile line and resolves all includes\n\n#  (-I/path/to/include) to a list of directories.  Other flags are ignored.\n\n#  Example:\n\n#\n\n#    RESOLVE_INCLUDES (FOO_INCLUDES \"-I/A -DBAR='\\\"irrelevant -I/string here\\\"' -I/B\")\n\n#\n\n#  will be resolved to\n\n#\n\n#    FOO_INCLUDES:STRING=\"/A;/B\"\n\n#\n\n#  assuming both directories exist.\n\n#  Note: as currently implemented, the -I/string will be picked up mistakenly (cry, cry)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If it's a library path, add it to the list\n",
        "Line" : 48,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "# It's a library, resolve the path by looking in the list and then (by default) in system directories\n",
        "Line" : 53,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# We have an absolute path, add root to the search path\n",
        "Line" : 56,
        "CharPositionInLine" : 30
      },
      "4" : {
        "Text" : "# only the LAST occurence of each library is required since there should be no circular dependencies\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "config/UseRokko.cmake" : {
      "ObjectId" : "e3c1f98d71d26d1610fddd9ed712a6618dd241ab",
      "LastModified" : "2015-06-24T14:35:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# This module is provided as ROKKO_USE_FILE by RokkoConfig.cmake.  It can\n\n# be included in a project to load the needed compiler and linker\n\n# settings to use Rokko.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# compilers and common options\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# OpenMP\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# MPI library\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Add include directories needed to use ROKKO and dependent libraries\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Add link directories needed to use ROKKO and dependent libraries\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# RPATH setting\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# test macro\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "config/add_rokko_test.cmake" : {
      "ObjectId" : "565e59a5b90d57fad0e4354586415145ecf5b61a",
      "LastModified" : "2013-05-21T07:40:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  Copyright Synge Todo 2010.\n\n#  Distributed under the Boost Software License, Version 1.0.\n\n#      (See accompanying file LICENSE_1_0.txt or copy at\n\n#          http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "config/run_python_test.cmake" : {
      "ObjectId" : "42ab9f79464217bf987e8b7ccb51cb1fad7a3c82",
      "LastModified" : "2015-06-24T14:35:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  Copyright Matthias Troyer, Synge Todo and Lukas Gamper 2009 - 2010.\n\n#  Distributed under the Boost Software License, Version 1.0.\n\n#      (See accompanying file LICENSE_1_0.txt or copy at\n\n#          http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# file(REMOVE tmp_${cmd}.sh)\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "config/run_test.cmake" : {
      "ObjectId" : "24d77abce42d7f190211d79ba7344f0b2e0823c3",
      "LastModified" : "2013-05-21T07:40:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  Copyright Lukas Gamper and Synge Todo 2009 - 2010.\n\n#  Distributed under the Boost Software License, Version 1.0.\n\n#      (See accompanying file LICENSE_1_0.txt or copy at\n\n#          http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "config/run_test_mpi.cmake" : {
      "ObjectId" : "60ea6484126d1790a2b38f494f917f4ccd96552d",
      "LastModified" : "2013-05-21T07:40:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  Copyright Lukas Gamper and Synge Todo 2009 - 2011.\n\n#  Distributed under the Boost Software License, Version 1.0.\n\n#      (See accompanying file LICENSE_1_0.txt or copy at\n\n#          http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "developer/CMakeLists.txt" : {
      "ObjectId" : "c3e660d1e443c572686f4b0034cffca4efafd434",
      "LastModified" : "2015-06-24T14:35:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Rokko: Integrated Interface for libraries of eigenvalue decomposition\n\n#\n\n# Copyright (C) 2012-2014 by Synge Todo <wistaria@comp-phys.org>\n\n#                            Tatsuya Sakashita <t-sakashita@issp.u-tokyo.ac.jp>\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "developer/norokko_anasazi/CMakeLists.txt" : {
      "ObjectId" : "9c31f21ce3c6109171d75b7329958c22253389e4",
      "LastModified" : "2015-06-24T14:35:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Rokko: Integrated Interface for libraries of eigenvalue decomposition\n\n#\n\n# Copyright (C) 2014-2014 by Synge Todo <wistaria@comp-phys.org>\n\n#                            Tatsuya Sakashita <t-sakashita@issp.u-tokyo.ac.jp>\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#include(/Users/sakashitatatsuya/rokko/trilinos-11.12.1-1/Debug/lib/cmake/Anasazi/AnasaziConfig.cmake)\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "developer/norokko_slepc/CMakeLists.txt" : {
      "ObjectId" : "b12c24d9a0307bf52bd43edb55101fae6d03e227",
      "LastModified" : "2015-06-24T14:35:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Rokko: Integrated Interface for libraries of eigenvalue decomposition\n\n#\n\n# Copyright (C) 2014-2014 by Synge Todo <wistaria@comp-phys.org>\n\n#                            Tatsuya Sakashita <t-sakashita@issp.u-tokyo.ac.jp>\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "developer/try/CMakeLists.txt" : {
      "ObjectId" : "aa3bf79ee981c1c1601aed79ca9f4cdcc84f3dd7",
      "LastModified" : "2015-06-24T14:35:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Rokko: Integrated Interface for libraries of eigenvalue decomposition\n\n#\n\n# Copyright (C) 2012-2015 by Rokko Developers https://github.com/t-sakashita/rokko\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "example/CMakeLists.txt" : {
      "ObjectId" : "b5c6f9cf8264815c0363c724bb295e031d73d3e6",
      "LastModified" : "2015-06-24T14:35:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Rokko: Integrated Interface for libraries of eigenvalue decomposition\n\n#\n\n# Copyright (C) 2015 Rokko Developers https://github.com/t-sakashita/rokko\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "example/c/CMakeLists.txt" : {
      "ObjectId" : "e46172c6ce8717fe0e30f02a84a4889647e66349",
      "LastModified" : "2015-07-21T10:43:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Rokko: Integrated Interface for libraries of eigenvalue decomposition\n\n#\n\n# Copyright (C) 2012-2014 by Synge Todo <wistaria@comp-phys.org>\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "example/c/dense/CMakeLists.txt" : {
      "ObjectId" : "2f5eec263137721fb5f5790fb1ebb174c4187fe4",
      "LastModified" : "2015-07-29T10:58:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Rokko: Integrated Interface for libraries of eigenvalue decomposition\n\n#\n\n# Copyright (C) 2012-2015 by Rokko Developers https://github.com/t-sakashita/rokko\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# gev_fixedB_mpi\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "example/c/sparse/CMakeLists.txt" : {
      "ObjectId" : "0270fa7676bc0ba71e382c5f465aec1477efc29a",
      "LastModified" : "2015-07-21T10:43:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Rokko: Integrated Interface for libraries of eigenvalue decomposition\n\n#\n\n# Copyright (C) 2012-2014 by Tatsuya Sakashita <t-sakashita@issp.u-tokyo.ac.jp>,\n\n#                            Synge Todo <wistaria@comp-phys.org>\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# heisenberg_mfree_mpi)\n",
        "Line" : 12,
        "CharPositionInLine" : 71
      },
      "CommentCount" : 2
    },
    "example/c/utility/CMakeLists.txt" : {
      "ObjectId" : "dc3ecb61752a54a88c04fa2f67bebaf756b367c2",
      "LastModified" : "2015-07-29T11:26:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Rokko: Integrated Interface for libraries of eigenvalue decomposition\n\n#\n\n# Copyright (C) 2012-2015 by Rokko Developers https://github.com/t-sakashita/rokko\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "example/cxx/CMakeLists.txt" : {
      "ObjectId" : "b1464ba1575219df5bd72ba5f873e065d1c8fd54",
      "LastModified" : "2015-07-29T11:26:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Rokko: Integrated Interface for libraries of eigenvalue decomposition\n\n#\n\n# Copyright (C) 2012-2015 by Rokko Developers https://github.com/t-sakashita/rokko\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "example/cxx/dense/CMakeLists.txt" : {
      "ObjectId" : "a58e3362c92dd5c370dfa7d99c005c1931af8937",
      "LastModified" : "2015-07-29T14:04:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Rokko: Integrated Interface for libraries of eigenvalue decomposition\n\n#\n\n# Copyright (C) 2012-2015 by Rokko Developers https://github.com/t-sakashita/rokko\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "example/cxx/lapack/CMakeLists.txt" : {
      "ObjectId" : "ef3631ccb1a5c08a72ccbbcf345231ec48722682",
      "LastModified" : "2015-06-24T14:35:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Rokko: Integrated Interface for libraries of eigenvalue decomposition\n\n#\n\n# Copyright (C) 2015-2015 by Rokko Developers https://github.com/t-sakashita/rokko\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "example/cxx/random/CMakeLists.txt" : {
      "ObjectId" : "14a28b34a522147fb41860bb152035e53ddfb205",
      "LastModified" : "2015-06-24T14:35:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Rokko: Integrated Interface for libraries of eigenvalue decomposition\n\n#\n\n# Copyright (C) 2015-2015 by Rokko Developers https://github.com/t-sakashita/rokko\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "example/cxx/sparse/CMakeLists.txt" : {
      "ObjectId" : "71f673abc94078fe1befcd37b77c1c9432dca632",
      "LastModified" : "2015-07-29T14:04:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Rokko: Integrated Interface for libraries of eigenvalue decomposition\n\n#\n\n# Copyright (C) 2014-2014 by Synge Todo <wistaria@comp-phys.org>\n\n#                            Tatsuya Sakashita <t-sakashita@issp.u-tokyo.ac.jp>\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "example/cxx/utility/CMakeLists.txt" : {
      "ObjectId" : "7abe034f42bf4baf9da9722dc1be94633b86fb78",
      "LastModified" : "2015-07-29T14:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Rokko: Integrated Interface for libraries of eigenvalue decomposition\n\n#\n\n# Copyright (C) 2012-2015 by Rokko Developers https://github.com/t-sakashita/rokko\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add_rokko_test tests\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "example/fortran/CMakeLists.txt" : {
      "ObjectId" : "e46172c6ce8717fe0e30f02a84a4889647e66349",
      "LastModified" : "2015-07-29T14:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Rokko: Integrated Interface for libraries of eigenvalue decomposition\n\n#\n\n# Copyright (C) 2012-2014 by Synge Todo <wistaria@comp-phys.org>\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "example/fortran/dense/CMakeLists.txt" : {
      "ObjectId" : "ca51a4f3511e53aab0b21cc8531b9538d142573a",
      "LastModified" : "2015-07-29T14:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Rokko: Integrated Interface for libraries of eigenvalue decomposition\n\n#\n\n# Copyright (C) 2012-2015 Rokko Developers https://github.com/t-sakashita/rokko\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "example/fortran/sparse/CMakeLists.txt" : {
      "ObjectId" : "625c73b84635bd5a82f764d21bd96b30661480fe",
      "LastModified" : "2015-07-29T14:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Rokko: Integrated Interface for libraries of eigenvalue decomposition\n\n#\n\n# Copyright (C) 2012-2014 by Tatsuya Sakashita <t-sakashita@issp.u-tokyo.ac.jp>,\n\n#                            Synge Todo <wistaria@comp-phys.org>\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "example/fortran/utility/CMakeLists.txt" : {
      "ObjectId" : "1e0fdcd2af2d1d1ff55a163108831dec1ef1826b",
      "LastModified" : "2015-07-29T14:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Rokko: Integrated Interface for libraries of eigenvalue decomposition\n\n#\n\n# Copyright (C) 2012-2015 Rokko Developers https://github.com/t-sakashita/rokko\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "example/python/CMakeLists.txt" : {
      "ObjectId" : "13d626bacb0b0871e31127776c580968e645c5b4",
      "LastModified" : "2015-07-29T14:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Rokko: Integrated Interface for libraries of eigenvalue decomposition\n\n#\n\n# Copyright (C) 2015 by Rokko Developers https://github.com/t-sakashita/rokko\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "rokko/CMakeLists.txt" : {
      "ObjectId" : "11d289e9d6e27929f0a6b0dda95a991ae2454d40",
      "LastModified" : "2015-07-29T14:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Rokko: Integrated Interface for libraries of eigenvalue decomposition\n\n#\n\n# Copyright (C) 2012-2015 Rokko Developers https://github.com/t-sakashita/rokko\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For serial solvers\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For all solvers\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Boost\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Eigen3\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# LAPACK\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# BLACS, PBLAS, ScaLAPACK\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# EigenExa\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Elemental\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Elpa\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# SLEPc\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Anasazi\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# install\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "c2b94db7d32cbd6670d3150619d19a0c9dff608f",
      "LastModified" : "2015-07-29T14:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Rokko: Integrated Interface for libraries of eigenvalue decomposition\n\n#\n\n# Copyright (C) 2012-2015 by Rokko Developers https://github.com/t-sakashita/rokko\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# single process tests\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# multi process tests\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# 2,3,4,5,6 processes\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# add_rokko_test tests\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# utility tests\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "test/diagonalize/CMakeLists.txt" : {
      "ObjectId" : "483006401f3c0a44a9f6ccdf1edd7aa2d92551f7",
      "LastModified" : "2015-07-29T14:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Rokko: Integrated Interface for libraries of eigenvalue decomposition\n\n#\n\n# Copyright (C) 2012-2015 by Rokko Developers https://github.com/t-sakashita/rokko\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# copy files\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "test/generate_matrix/CMakeLists.txt" : {
      "ObjectId" : "d5404e66728ae1822aca8b439ed4a3551d15b76b",
      "LastModified" : "2015-07-29T14:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Rokko: Integrated Interface for libraries of eigenvalue decomposition\n\n#\n\n# Copyright (C) 2012-2015 by Rokko Developers https://github.com/t-sakashita/rokko\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tool/CMakeLists.txt" : {
      "ObjectId" : "094007374cdd9f2b48bdeaa1539ed559ac81b4c7",
      "LastModified" : "2015-07-29T14:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Rokko: Integrated Interface for libraries of eigenvalue decomposition\n\n#\n\n# Copyright (C) 2014-2014 by Synge Todo <wistaria@comp-phys.org>,\n\n#                            Tatsuya Sakashita <t-sakashita@issp.u-tokyo.ac.jp>\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tutorial/C/CMakeLists.txt" : {
      "ObjectId" : "2568c71f5f6d196afd0a2a635140ebc6346e5d80",
      "LastModified" : "2015-07-29T14:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2014 by Synge Todo <wistaria@phys.s.u-tokyo.ac.jp>\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tutorial/CMakeLists.txt" : {
      "ObjectId" : "af18c8f0f1b73c0a40585832688c123af22eacdb",
      "LastModified" : "2015-07-29T14:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Rokko: Integrated Interface for libraries of eigenvalue decomposition\n\n#\n\n# Copyright (C) 2012-2014 by Synge Todo <wistaria@comp-phys.org>\n\n# Copyright (C) 2015 by Yuichi Motoyama <y-motoyama@issp.u-tokyo.ac.jp>\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tutorial/Fortran/CMakeLists.txt" : {
      "ObjectId" : "2a85a3b11512e8e48f94672b50011d95a23d4342",
      "LastModified" : "2015-07-29T14:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2014 by Synge Todo <wistaria@phys.s.u-tokyo.ac.jp>\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tutorial/skel/CMakeLists.txt" : {
      "ObjectId" : "018245606c11cbc9da4b76a99ea03df1d40f34ec",
      "LastModified" : "2015-07-29T14:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tutorial/titpack/00_original/CMakeLists.txt" : {
      "ObjectId" : "92231dc89d15ee848a6d72d99082f4b0e30445ba",
      "LastModified" : "2014-09-18T02:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2014 by Synge Todo <wistaria@phys.s.u-tokyo.ac.jp>\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tutorial/titpack/01_lapack/CMakeLists.txt" : {
      "ObjectId" : "67287fb52e93ba1b6c41817f80a8dde786fc428e",
      "LastModified" : "2014-09-12T03:53:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2014 by Synge Todo <wistaria@phys.s.u-tokyo.ac.jp>\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tutorial/titpack/01_lapack_cxx/CMakeLists.txt" : {
      "ObjectId" : "3b44e5a3d1dc61767c567ffc472ba762d8f1e5c0",
      "LastModified" : "2014-09-12T03:53:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2014 by Synge Todo <wistaria@phys.s.u-tokyo.ac.jp>\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tutorial/titpack/02_refactored_cxx/CMakeLists.txt" : {
      "ObjectId" : "7de0b8f89fc5ed32306bed04c21933955165efaa",
      "LastModified" : "2014-09-12T03:53:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2014 by Synge Todo <wistaria@phys.s.u-tokyo.ac.jp>\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tutorial/titpack/03_rokko_cxx/CMakeLists.txt" : {
      "ObjectId" : "afec05e6108e61245de6ff7a5168ca7dda2f778b",
      "LastModified" : "2014-09-18T02:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2014 by Synge Todo <wistaria@phys.s.u-tokyo.ac.jp>\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set(SAMPLES sample-01 sample-02 sample-03 sample-04 sample-05 sample-06 sample-07 sample-08 sample-09 sample-10 sample-11)\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "CMAKE" : 184
  },
  "ElapsedTime" : 2160
}