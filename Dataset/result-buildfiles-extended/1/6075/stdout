{
  "Repository" : "6075",
  "Revision" : "HEAD",
  "ObjectId" : "ee226e52415b8bf43b700afac75fa5b9767993a5",
  "CommitTime" : "2015-12-03T10:40:44Z",
  "Files" : {
    "pom.xml" : {
      "ObjectId" : "1aedc9599d27ff53d10430d2f38e8f996a9781f8",
      "LastModified" : "2015-12-02T20:59:08Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " ES depends on Lucene.  This ES dependency can affect the\n             version used by the titan-lucene module.  When updating\n             the ES version, also consider the version of Lucene, and\n             vice-versa. ",
        "Line" : 86,
        "CharPositionInLine" : 29
      },
      "1" : {
        "Text" : " TODO gremlin-server integration ",
        "Line" : 126,
        "CharPositionInLine" : 49
      },
      "2" : {
        "Text" : " <module>titan-rexster</module> ",
        "Line" : 127,
        "CharPositionInLine" : 48
      },
      "3" : {
        "Text" : "\n                      Only release:perform uses this configuration\n                      setting; release:prepare doesn't care and always\n                      runs \"clean verify\"\n                    ",
        "Line" : 173,
        "CharPositionInLine" : 24
      },
      "4" : {
        "Text" : "\n                      Tell the release plugin to never \"git push\".\n                      When releasing, you have to manually issue \"git\n                      push\" between release:prepare and\n                      release:perform.  You'll have to push both the\n                      branch you're releasing and the tag\n                      release:prepare locally created.\n                    ",
        "Line" : 183,
        "CharPositionInLine" : 24
      },
      "5" : {
        "Text" : "\n                      @{...} is a special variable interpolation\n                      syntax that uses the target release version\n                      instead of the pom's actual version, which is\n                      usually a -SNAPSHOT version when this setting\n                      gets evaluated.\n                    ",
        "Line" : 192,
        "CharPositionInLine" : 24
      },
      "6" : {
        "Text" : "\n                      The release:perform goal activates these\n                      profiles when it invokes maven with the <goals>\n                      listed above.  Release engineering specific to\n                      release:perform and disabled during non-release\n                      operation should be encapsulated with the\n                      profile id listed below.\n                    ",
        "Line" : 202,
        "CharPositionInLine" : 24
      },
      "7" : {
        "Text" : " Keep all submodules at same version as parent ",
        "Line" : 205,
        "CharPositionInLine" : 75
      },
      "8" : {
        "Text" : " applies to both release:prepare and :perform ",
        "Line" : 208,
        "CharPositionInLine" : 74
      },
      "9" : {
        "Text" : " six hours ",
        "Line" : 235,
        "CharPositionInLine" : 43
      },
      "10" : {
        "Text" : " <excludes>\n                                    <exclude>**/*</exclude>\n                                </excludes> ",
        "Line" : 273,
        "CharPositionInLine" : 48
      },
      "11" : {
        "Text" : "\n                          To push changes to gh-pages during\n                          release:perform using this plugin, your\n                          ~/.m2/settings.xml file must contain a\n                          <server> stanza that matches the\n                          <server>github</server> tag below.  Here's\n                          an example settings.xml:\n\n                          <settings>\n                            ...\n                            <servers>\n                              ...\n                              <server>\n                                <id>github</id> << must match <username>dalaro</username>\n                                <password>allmypasswordsareliterallypassword</password>\n                              </server>\n                            </servers>\n                          </settings>\n                        ",
        "Line" : 408,
        "CharPositionInLine" : 28
      },
      "12" : {
        "Text" : " Jackson 2.x ",
        "Line" : 433,
        "CharPositionInLine" : 33
      },
      "13" : {
        "Text" : " Jackson 1.x ",
        "Line" : 490,
        "CharPositionInLine" : 33
      },
      "14" : {
        "Text" : " Sesame ",
        "Line" : 621,
        "CharPositionInLine" : 28
      },
      "15" : {
        "Text" : " asm 3.x ",
        "Line" : 688,
        "CharPositionInLine" : 29
      },
      "16" : {
        "Text" : " The Objenesis version is closely coupled to Kryo and to TP3 versions ",
        "Line" : 735,
        "CharPositionInLine" : 90
      },
      "17" : {
        "Text" : " Force newer Snappy-java because 1.4.0.1 is broken on Mac OS X with JDK 7 ",
        "Line" : 766,
        "CharPositionInLine" : 94
      },
      "18" : {
        "Text" : " Run the full test suite when changing the Guava version.\n                     The Guava team is deadly serious about their 18 month period from deprecation\n                     to feature deletion, and as a result, at least one of Titan's dependencies is\n                     likely to break whenever the Guava version changes.\n\n                     Example where blithely upgrading Guava introduced a linkage error in the past:\n                     https://issues.apache.org/jira/browse/HBASE-10174\n                ",
        "Line" : 780,
        "CharPositionInLine" : 20
      },
      "19" : {
        "Text" : " Spatial4j ",
        "Line" : 811,
        "CharPositionInLine" : 31
      },
      "20" : {
        "Text" : " Package prefix is org.apache.commons.httpclient ",
        "Line" : 818,
        "CharPositionInLine" : 69
      },
      "21" : {
        "Text" : " Package prefix is org.apache.http ",
        "Line" : 825,
        "CharPositionInLine" : 55
      },
      "22" : {
        "Text" : " Using avro-ipc 1.5.3 caused the following when opening the graphdb:\n                     java.lang.NoSuchMethodError: org.apache.avro.io.DecoderFactory.configureDirectDecoder(Z)Lorg/apache/avro/io/DecoderFactory\n    \n                     Stock avro 1.4.0 or 1.4.1 might work, but I'd like to see\n                     what customizations were made in the cassandra copy of avro\n                     before trying to drop it for the stock artifact...\n                <exclusions>\n                    <exclusion>\n                        <groupId>org.apache.cassandra.deps</groupId>\n                        <artifactId>avro</artifactId>\n                    </exclusion>\n                </exclusions>\n                ",
        "Line" : 934,
        "CharPositionInLine" : 20
      },
      "23" : {
        "Text" : " Logging ",
        "Line" : 991,
        "CharPositionInLine" : 25
      },
      "24" : {
        "Text" : "\n              Sign artifacts artifacts only during release:perform\n              when this profile is automatically activated or whenever\n              else it is manually activated.\n    \n              Stolen from: http://blog.sonatype.com/people/2010/01/how-to-generate-pgp-signatures-with-maven/\n            ",
        "Line" : 1059,
        "CharPositionInLine" : 16
      },
      "25" : {
        "Text" : " Quiet mode still shows warnings and errors ",
        "Line" : 1085,
        "CharPositionInLine" : 88
      },
      "26" : {
        "Text" : " Unpack all dependency class and source files for use by JaCoCo ",
        "Line" : 1303,
        "CharPositionInLine" : 100
      },
      "27" : {
        "Text" : " empty classifier requests the artifact containing classes ",
        "Line" : 1325,
        "CharPositionInLine" : 103
      },
      "28" : {
        "Text" : " The Maven JaCoCo plugin doesn't allow\n                             configuration of sourcefiles and destfiles\n                             directories.  The Ant JaCoCo task does.  That's\n                             why we use antrun here for JaCoCo instead of\n                             JaCoCo's Maven plugin. ",
        "Line" : 1356,
        "CharPositionInLine" : 56
      },
      "29" : {
        "Text" : "\n        <profile>\n            <id>docbkx</id>\n            <activation>\n                <activeByDefault>false</activeByDefault>\n            </activation>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>com.agilejava.docbkx</groupId>\n                        <artifactId>docbkx-maven-plugin</artifactId>\n                        <version>2.0.15</version>\n                        <dependencies>\n                            <dependency>\n                                <groupId>net.sf.xslthl</groupId>\n                                <artifactId>xslthl</artifactId>\n                                <version>2.1.0</version>\n                                <scope>runtime</scope>\n                            </dependency>\n                            <dependency>\n                                <groupId>net.sf.offo</groupId>\n                                <artifactId>fop-hyph</artifactId>\n                                <version>1.2</version>\n                                <scope>runtime</scope>\n                            </dependency>\n                        </dependencies>\n                        <configuration>\n                            <highlightSource>1</highlightSource>\n                            <htmlCustomization>htcust.xsl</htmlCustomization>\n                            <hyphenate>false</hyphenate>\n                            <sourceDirectory>${project.basedir}/target/generated-docs/</sourceDirectory>\n                            <includes>index.xml</includes>\n                            <hyphenateVerbatim>false</hyphenateVerbatim>\n                        </configuration>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n        ",
        "Line" : 1759,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 30
    },
    "titan-all/pom.xml" : {
      "ObjectId" : "962e924e1e7145138a66df15e34d10523f041c6e",
      "LastModified" : "2015-09-19T21:52:25Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "\n      This project depends on the rest of Titan, so Maven users and\n      users of tools that can parse Maven pom.xml dependencies can\n      depend on this artifact and have the rest of the Titan artifacts\n      pulled in automatically.  The JAR doesn't contain anything\n      besides some redundant properties files.\n    ",
        "Line" : 19,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "\n        Commented since it requires Hadoop 2 and TP3 requires Hadoop 1.\n        <dependency>\n            <groupId>com.thinkaurelius.titan</groupId>\n            <artifactId>titan-solr</artifactId>\n            <version>${project.version}</version>\n        </dependency>\n        ",
        "Line" : 73,
        "CharPositionInLine" : 12
      },
      "2" : {
        "Text" : " Override Jackson versions in our transitive dependencies.\n             Without these deps, titan-all users can end up with\n             1.9 + 1.8 jars together, and this leads to linkage errors.\n             It might be a better idea to dependencyManagement imports if your Maven version supports it:\n             http://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Importing_Dependencies ",
        "Line" : 84,
        "CharPositionInLine" : 126
      },
      "3" : {
        "Text" : " Jackson 1.x ",
        "Line" : 85,
        "CharPositionInLine" : 29
      },
      "4" : {
        "Text" : " Jackson 2.x ",
        "Line" : 107,
        "CharPositionInLine" : 29
      },
      "5" : {
        "Text" : " Disable unused plugins ",
        "Line" : 140,
        "CharPositionInLine" : 44
      },
      "6" : {
        "Text" : " Done disabling unnecessary plugins ",
        "Line" : 159,
        "CharPositionInLine" : 56
      },
      "CommentCount" : 7
    },
    "titan-berkeleyje/pom.xml" : {
      "ObjectId" : "32e2d36777bd82afbdabc4839c4cf8da91f0d395",
      "LastModified" : "2015-09-19T21:52:25Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Redeclare gpg-plugin after jar-plugin to force the test jar to be signed.\n                         gpg-plugin runs in the package phase, same as jar-plugin, so the only\n                         constraint that guarantees the jar will exist when gpg-plugin is\n                         invoked is declaration order in the pom. ",
        "Line" : 79,
        "CharPositionInLine" : 70
      },
      "CommentCount" : 1
    },
    "titan-cassandra/pom.xml" : {
      "ObjectId" : "5f7aeede5c94e3b2cf11b4ba905e2ec82412df55",
      "LastModified" : "2015-10-07T15:32:43Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Libraries ",
        "Line" : 21,
        "CharPositionInLine" : 23
      },
      "1" : {
        "Text" : " Logging backends.\n             Cassandra 2.1+ moved to Logback.  Titan is logging-backend-agnostic,\n             but still uses Log4j in testing.  The slf4j binding for logback is,\n             inconveniently, packed into the logback-classic artifact.  This means\n             the binding can't easily be removed from the classpath without losing\n             logback-classic or inserting some hack to mess with the jar contents.\n             We can't lose logback-classic because StorageProxy contains hardcoded\n             references to some of its classes (it contains some methods to change\n             logback loglevels at runtime).  Hence, to stick with Log4j, the\n             least-worst approach is to enforce a classpath ordering constraint: as\n             long as the slf4j-log4j12 binding appears on the classpath before\n             logback-classic, log4j will be used instead of logback.  I don't have\n             any special love for log4j, but Titan should use a single logging\n             backend throughout all its tests.   I don't want to maintain a mixture\n             of logback.xml and log4j.properties files scattered randomly through\n             the titan-* submodules.  Maven populates the classpath elements for\n             tests in pom appearance order.  That's why these dependencies are \n             explicitly declared below: to make slf4j-log4j12 preced logback-classic\n             on the test classpath. ",
        "Line" : 62,
        "CharPositionInLine" : 40
      },
      "2" : {
        "Text" : " End logging backends. ",
        "Line" : 72,
        "CharPositionInLine" : 39
      },
      "3" : {
        "Text" : "\n            JNA is not required to run Cassandra, but it improves\n            efficiency of certain of Cassandra's filesystem and memory\n            operations.  DataStax describes JNA as \"required for\n            production installations\":\n\n            http://www.datastax.com/docs/1.2/install/install_jre\n        ",
        "Line" : 85,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : " The version is controlled in <dependencyManagement> in the parent pom ",
        "Line" : 95,
        "CharPositionInLine" : 91
      },
      "5" : {
        "Text" : " Need this to avoid corrupting the test keystore with nonsensical macro replacements ",
        "Line" : 204,
        "CharPositionInLine" : 117
      },
      "6" : {
        "Text" : " Run by \"mvn test\" ",
        "Line" : 226,
        "CharPositionInLine" : 51
      },
      "7" : {
        "Text" : " Run by \"mvn org.apache.maven.plugins:maven-surefire-plugin:test\"\n                \n                            Sonar does this when running JaCoCo and\n                            provides no configuration option to\n                            change its behavior. Define a safe\n                            configuration for JaCoCo to use when run\n                            by Sonar. This doesn't have to be fast,\n                            since it's only used for dynamic\n                            analysis, but it does have to cover all\n                            the tests.\n                        ",
        "Line" : 241,
        "CharPositionInLine" : 28
      },
      "8" : {
        "Text" : " The TP3 JUnit Suite/Runner ignores groups/@Category and I'm not sure why.  Redundant excludes to keep TP3 tests from using non-SSL configs on SSL ",
        "Line" : 308,
        "CharPositionInLine" : 183
      },
      "9" : {
        "Text" : " Provide Java Memory Meter for Cassandra. Cassandra logs warnings if JAMM \n                      is not available. Also, production Cassandra deployments will probably use JAMM, \n                      so we might as well include it in our test configuration. ",
        "Line" : 351,
        "CharPositionInLine" : 84
      },
      "10" : {
        "Text" : " prepare-package instead of package forces it to get signed ",
        "Line" : 376,
        "CharPositionInLine" : 92
      },
      "CommentCount" : 11
    },
    "titan-core/pom.xml" : {
      "ObjectId" : "77f5d2f206e738b2c3fa18a66b1cfd208a658bf7",
      "LastModified" : "2015-09-19T21:52:25Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " TinkerPop ",
        "Line" : 18,
        "CharPositionInLine" : 27
      },
      "1" : {
        "Text" : " Utility ",
        "Line" : 40,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : " Quiet mode still shows warnings and errors ",
        "Line" : 160,
        "CharPositionInLine" : 80
      },
      "3" : {
        "Text" : " false below means the shade plugin overwrites the main project artifact (the one with no classifier).\n                                 false does *not* actually detach the main artifact, despite what the option name suggests. ",
        "Line" : 213,
        "CharPositionInLine" : 128
      },
      "4" : {
        "Text" : " This profile forces gpg-plugin to run after shade-plugin.\n             Otherwise, Maven will sign the unshaded jar, then shade the jar\n             (giving it completely different contents and breaking the sig) ",
        "Line" : 227,
        "CharPositionInLine" : 80
      },
      "CommentCount" : 5
    },
    "titan-dist/pom.xml" : {
      "ObjectId" : "2ebd548de37d4265a8bb3510605cdcf88918a492",
      "LastModified" : "2015-09-19T21:52:25Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Zipfile/Tarfile assembly source paths ",
        "Line" : 17,
        "CharPositionInLine" : 55
      },
      "1" : {
        "Text" : " Variables for integration testing on release-candidate archive files ",
        "Line" : 23,
        "CharPositionInLine" : 86
      },
      "2" : {
        "Text" : " AsciiDoc ",
        "Line" : 27,
        "CharPositionInLine" : 26
      },
      "3" : {
        "Text" : " RPM/DEB packaging ",
        "Line" : 36,
        "CharPositionInLine" : 35
      },
      "4" : {
        "Text" : " Hadoop 2 is blocked on TP3 support ",
        "Line" : 45,
        "CharPositionInLine" : 52
      },
      "5" : {
        "Text" : " <module>titan-dist-hadoop-2</module> ",
        "Line" : 46,
        "CharPositionInLine" : 54
      },
      "6" : {
        "Text" : " C*2.1 uses airline for command line parsing (incl. nodetool).\n             This dep is not provided through cassandra-all/titan-cassandra. ",
        "Line" : 61,
        "CharPositionInLine" : 81
      },
      "7" : {
        "Text" : " Test dependencies ",
        "Line" : 87,
        "CharPositionInLine" : 35
      },
      "8" : {
        "Text" : " Used during release:perform to upload to S3 ",
        "Line" : 140,
        "CharPositionInLine" : 61
      },
      "9" : {
        "Text" : "\n                Filter the files in src/release during the\n                process-resources phase. Disable default resource goal\n                bindings because we have no main or test resources.\n            ",
        "Line" : 154,
        "CharPositionInLine" : 16
      },
      "10" : {
        "Text" : " Classpath ",
        "Line" : 252,
        "CharPositionInLine" : 51
      },
      "11" : {
        "Text" : " Main Classname ",
        "Line" : 255,
        "CharPositionInLine" : 56
      },
      "12" : {
        "Text" : " Input directory (processed recursively) ",
        "Line" : 257,
        "CharPositionInLine" : 81
      },
      "13" : {
        "Text" : " Output directory prefix ",
        "Line" : 259,
        "CharPositionInLine" : 65
      },
      "14" : {
        "Text" : " Delete bin, lib, conf, ... dirs in the root ",
        "Line" : 426,
        "CharPositionInLine" : 69
      },
      "15" : {
        "Text" : " your ~/.m2/settings.xml must match ",
        "Line" : 523,
        "CharPositionInLine" : 113
      },
      "16" : {
        "Text" : "\n                                            We set attached=true so that the gpg plugin will\n                                            sign all of our assembly artifacts. We handle\n                                            deployment of the artifacts manually because\n                                            maven-deploy-plugin can't upload files to a flat\n                                            S3 directory; it insists on creating a\n                                            long/packagename/and/artifactid/and/version/\n                                            path at the destination before uploading, and we\n                                            don't want that for our files S3. codehaus's\n                                            wagon:upload plugin comes to our rescue.\n                                        ",
        "Line" : 646,
        "CharPositionInLine" : 44
      },
      "17" : {
        "Text" : "\n                                            archive filenames are of the form\n                                            ${finalName}-${<id /> from assembly descriptor}.${archive\n                                            format extension}\n                                        ",
        "Line" : 652,
        "CharPositionInLine" : 44
      },
      "18" : {
        "Text" : " your ~/.m2/settings.xml must match ",
        "Line" : 689,
        "CharPositionInLine" : 117
      },
      "19" : {
        "Text" : " Commented until the first 0.9/1.0 release\n                                <execution>\n                                    <id>version-compat-integration-test</id>\n                                    <phase>integration-test</phase>\n                                    <goals>\n                                        <goal>integration-test</goal>\n                                    </goals>\n                                    <configuration>\n                                        <reportNameSuffix>compat</reportNameSuffix>\n                                        <failIfNoTests>false</failIfNoTests>\n                                        <skip>${skipCompatITs}</skip>\n                                        <includes>\n                                            <include>**/*CompatIT.java</include>\n                                        </includes>\n                                    </configuration>\n                                </execution>\n                                ",
        "Line" : 902,
        "CharPositionInLine" : 36
      },
      "20" : {
        "Text" : "\n                        We use maven-resources-plugin to filter src/release,\n                        but that plugin has an open bug about the fact that it\n                        doesn't copy file permissions during filtering. Make\n                        the script executable with chmod. Not portable.\n\n                        Bug: http://jira.codehaus.org/browse/MRESOURCES-132\n                    ",
        "Line" : 953,
        "CharPositionInLine" : 24
      },
      "21" : {
        "Text" : " gpg must follow assembly.\n                         Both plugins run in the package phase, so only <plugin> ordering\n                         ensures that signing happens after assembly file generation.\n                         Hence this vacuous stanza down here. ",
        "Line" : 1008,
        "CharPositionInLine" : 66
      },
      "CommentCount" : 22
    },
    "titan-dist/titan-dist-hadoop-1/pom.xml" : {
      "ObjectId" : "b91030b798f72e35600f2544bddfdd14898c3391",
      "LastModified" : "2015-09-19T21:52:25Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Solr depends on Hadoop2 ",
        "Line" : 38,
        "CharPositionInLine" : 49
      },
      "1" : {
        "Text" : " This includes an unshaded copy of Snakeyaml\n                     that's binary-incompatible with Cassandra 2.0.\n                     If allowed into the classpath before Cassandra's\n                     current Snakeyaml jar, this will lead to\n                     NoSuchMethodError when attempting to start an\n                     embedded Cassandra instance. ",
        "Line" : 55,
        "CharPositionInLine" : 54
      },
      "2" : {
        "Text" : " Two copies of this profile to allow OR between two separate activation conditions.\n             Sucks that Maven has a one-activation-property-per-profile limitation. ",
        "Line" : 142,
        "CharPositionInLine" : 88
      },
      "3" : {
        "Text" : " Enable by default ",
        "Line" : 182,
        "CharPositionInLine" : 39
      },
      "CommentCount" : 4
    },
    "titan-dist/titan-dist-hadoop-2/pom.xml" : {
      "ObjectId" : "fa5fdaa041fa7758001d57e45270de3c05e5be66",
      "LastModified" : "2015-01-10T07:10:21Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Need the -server artifact for hbase.mapreduce.TableInputFormat (Faunus) ",
        "Line" : 32,
        "CharPositionInLine" : 93
      },
      "1" : {
        "Text" : " your ~/.m2/settings.xml must match ",
        "Line" : 86,
        "CharPositionInLine" : 113
      },
      "2" : {
        "Text" : " Enable when given the -Ddev.hadoop=2 system property ",
        "Line" : 183,
        "CharPositionInLine" : 74
      },
      "CommentCount" : 3
    },
    "titan-doc/pom.xml" : {
      "ObjectId" : "2d9c199316856cebe89286ba0b4e1cb1aa041c66",
      "LastModified" : "2015-09-19T21:52:25Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " AsciiDoc ",
        "Line" : 17,
        "CharPositionInLine" : 26
      },
      "1" : {
        "Text" : " Used during release:perform to upload to S3 ",
        "Line" : 48,
        "CharPositionInLine" : 61
      },
      "2" : {
        "Text" : "\n                Filter the files in src/release during the\n                process-resources phase. Disable default resource goal\n                bindings because we have no main or test resources.\n            ",
        "Line" : 62,
        "CharPositionInLine" : 16
      },
      "3" : {
        "Text" : " your ~/.m2/settings.xml must match ",
        "Line" : 334,
        "CharPositionInLine" : 113
      },
      "CommentCount" : 4
    },
    "titan-es/pom.xml" : {
      "ObjectId" : "8eba4162f820dbdf42b8c48b875e631c72e03652",
      "LastModified" : "2015-09-19T21:52:25Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Using assembly instead of resources because resources breaks filemodes and\n                     permissions: http://jira.codehaus.org/browse/MRESOURCES-132 ",
        "Line" : 146,
        "CharPositionInLine" : 85
      },
      "1" : {
        "Text" : "\n                    <execution>\n                        <id>es-cassandra-test</id>\n                        <goals>\n                            <goal>test</goal>\n                        </goals>\n                        <configuration>\n                            <argLine>-Dtest.cassandra.confdir=${project.build.directory}/cassandra/conf/localhost-murmur -Dtest.cassandra.datadir=${project.build.directory}/cassandra/data/localhost-murmur</argLine>\n                            <includes>\n                                <include>**/ThriftElasticsearchTest.java</include>\n                            </includes>\n                            <reuseForks>false</reuseForks>\n                        </configuration>\n                    </execution>\n\n                    <execution>\n                        <id>default-test</id>\n                        <goals>\n                            <goal>test</goal>\n                        </goals>\n                        <configuration>\n                            <excludes>\n                                <exclude>**/ThriftElasticsearchTest.java</exclude>\n                            </excludes>\n                        </configuration>\n                    </execution>\n                    ",
        "Line" : 245,
        "CharPositionInLine" : 24
      },
      "2" : {
        "Text" : " Redeclare gpg-plugin at the bottom to ensure it runs after all the other packaging goals ",
        "Line" : 251,
        "CharPositionInLine" : 102
      },
      "CommentCount" : 3
    },
    "titan-hadoop-parent/pom.xml" : {
      "ObjectId" : "c05586c53e4b78a2c210851d9dea330fea91a5ea",
      "LastModified" : "2015-09-19T21:52:25Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " TITAN ",
        "Line" : 72,
        "CharPositionInLine" : 23
      },
      "1" : {
        "Text" : " RDF PARSING ",
        "Line" : 109,
        "CharPositionInLine" : 29
      },
      "2" : {
        "Text" : " LOGGING ",
        "Line" : 135,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : " TESTING ",
        "Line" : 141,
        "CharPositionInLine" : 25
      },
      "4" : {
        "Text" : " ************ ",
        "Line" : 307,
        "CharPositionInLine" : 46
      },
      "5" : {
        "Text" : " VERIFICATION ",
        "Line" : 308,
        "CharPositionInLine" : 46
      },
      "6" : {
        "Text" : " ************ ",
        "Line" : 309,
        "CharPositionInLine" : 46
      },
      "7" : {
        "Text" : "\n                <plugin>\n                    <artifactId>maven-remote-resources-plugin</artifactId>\n                    <executions>\n                        <execution>\n                            <id>unpack-common-test-classes</id>\n                            <phase>process-test-classes</phase>\n                            <goals>\n                                <goal>process</goal>\n                            </goals>\n                            <configuration>\n                                <resourceBundles>\n                                    <resourceBundle>${project.groupId}:shared-resources:${project.version}</resourceBundle>\n                                </resourceBundles>\n                            </configuration>\n                        </execution>\n                    </executions>\n                </plugin>\n                ",
        "Line" : 355,
        "CharPositionInLine" : 20
      },
      "CommentCount" : 8
    },
    "titan-hadoop-parent/titan-hadoop-1/pom.xml" : {
      "ObjectId" : "69cb61d6b9dedc3a40c1a8f1518cbcff4ffb424e",
      "LastModified" : "2015-09-19T21:52:25Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " This includes an unshaded copy of Snakeyaml\n                     that's binary-incompatible with Cassandra 2.0.\n                     If allowed into the classpath before Cassandra's\n                     current Snakeyaml jar, this will lead to\n                     NoSuchMethodError when attempting to start an\n                     embedded Cassandra instance. ",
        "Line" : 73,
        "CharPositionInLine" : 54
      },
      "1" : {
        "Text" : " <scope>test</scope> ",
        "Line" : 85,
        "CharPositionInLine" : 41
      },
      "CommentCount" : 2
    },
    "titan-hadoop-parent/titan-hadoop-2/pom.xml" : {
      "ObjectId" : "65fe8feffa7afacf191a7c9c8447278b3ca5a50f",
      "LastModified" : "2015-09-19T21:52:25Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " <scope>test</scope> ",
        "Line" : 48,
        "CharPositionInLine" : 41
      },
      "CommentCount" : 1
    },
    "titan-hadoop-parent/titan-hadoop-core/pom.xml" : {
      "ObjectId" : "dcf832fa582dca0233219bb71da5fb83e2b0ddc0",
      "LastModified" : "2015-09-19T21:52:25Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " <scope>test</scope> ",
        "Line" : 30,
        "CharPositionInLine" : 41
      },
      "1" : {
        "Text" : " TODO this should be scoped test ",
        "Line" : 36,
        "CharPositionInLine" : 53
      },
      "2" : {
        "Text" : " TODO this should be scoped test ",
        "Line" : 43,
        "CharPositionInLine" : 53
      },
      "3" : {
        "Text" : " Need this for compile-time imports on\n             org.apache.hadoop.hbase.mapreduce ",
        "Line" : 54,
        "CharPositionInLine" : 51
      },
      "4" : {
        "Text" : " Writing Groovy tests?  Uncomment these.\n                            <goal>generateTestStubs</goal>\n                            <goal>testCompile</goal>\n                            ",
        "Line" : 85,
        "CharPositionInLine" : 32
      },
      "5" : {
        "Text" : " Inherited the Hadoop job jar assembly from the parent, but this is\n                         only useful in the titan-hadoop-1 and -2 modules.  Disable it. ",
        "Line" : 123,
        "CharPositionInLine" : 92
      },
      "6" : {
        "Text" : " Tests are executed in the titan-hadoop-1 and -2 modules ",
        "Line" : 133,
        "CharPositionInLine" : 85
      },
      "7" : {
        "Text" : " The titan-hadoop-1 and -2 modules use our test classes ",
        "Line" : 143,
        "CharPositionInLine" : 84
      },
      "8" : {
        "Text" : " Redeclare gpg-plugin at the bottom to ensure it runs after all the other packaging goals ",
        "Line" : 156,
        "CharPositionInLine" : 102
      },
      "CommentCount" : 9
    },
    "titan-hadoop-parent/titan-hadoop/pom.xml" : {
      "ObjectId" : "c0a5e831f0be331a37ad6a9671dd8f9fa8f5b2a1",
      "LastModified" : "2015-09-19T21:52:25Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Redeclare gpg-plugin's sign-artifacts execution below the\n                 assembly plugin to guarantee that signing happens after assembly\n                 during the package lifecycle phase ",
        "Line" : 129,
        "CharPositionInLine" : 56
      },
      "CommentCount" : 1
    },
    "titan-hbase-parent/pom.xml" : {
      "ObjectId" : "0b0010d6da420ef0d54454fb7016c328133a405b",
      "LastModified" : "2015-09-19T21:52:25Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Logging.\n\n             Based on these two HBase links, it seems that HBase has\n             hard dependencies on log4j and slf4j-log4j12 (in addition\n             to commons-logging):\n\n             http://hbase.apache.org/book/config.files.html#client_dependencies\n             https://issues.apache.org/jira/browse/HBASE-2608\n\n             Our parent pom declares optional runtime-scoped dependencies\n             on slf4j-log4j12 and log4j.  But according to the links above,\n             these are required compile-scoped dependencies for HBase.\n             We override the parent's dependency declarations below.\n\n             These declarations could go away if HBase ever fully migrates\n             to slf4j and removes its hard dependency on log4j.\n        ",
        "Line" : 65,
        "CharPositionInLine" : 12
      },
      "1" : {
        "Text" : " Using assembly instead of resources because resources breaks filemodes and \n                         permissions: http://jira.codehaus.org/browse/MRESOURCES-132 ",
        "Line" : 148,
        "CharPositionInLine" : 89
      },
      "CommentCount" : 2
    },
    "titan-hbase-parent/titan-hbase-094/pom.xml" : {
      "ObjectId" : "f176e66a86a07234997bbfaf4598eba9c0c3d5cf",
      "LastModified" : "2015-09-19T21:52:25Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Override Titan's managed versions for some libs where HBase 0.94\n         needs older versions.  See also maven-shade-plugin config below. ",
        "Line" : 67,
        "CharPositionInLine" : 78
      },
      "1" : {
        "Text" : "\n              HBase 0.94 master can't start with Guava 15.0 or newer:\n              https://issues.apache.org/jira/browse/HBASE-10174\n              This is marked \"Won't Fix\".  However, it just seems to\n              need NullOutputStream, which is tiny and simple, and\n              which was removed in 15.0.  Copying the 11.0.2 version\n              of NullOutputStream into the titan-hbase-094 source tree,\n              as awful as that is, seems to placate HBase when running\n              with Guava 15.0.  So we no longer have a special version\n              of Guava for HBase 0.94 here.\n\n              We do still have to control protobuf though.\n            ",
        "Line" : 82,
        "CharPositionInLine" : 16
      },
      "2" : {
        "Text" : " HBase 0.94 needs an older Protobuf version than newer HBase versions.\n                             Running with a Protobuf version mismatch can lead to these at runtime:\n                             UnsupportedOperationException: This is supposed to be overridden by subclasses.\n\n                             HBase 0.94 also needs an older Guava version.  Guava's 18 months between\n                             feature deprecation and feature removal sounds like a long time, but with\n                             the number of dependencies in Titan that ultimately use Guava, it's\n                             actually short enough to cause incompatibilities. ",
        "Line" : 174,
        "CharPositionInLine" : 83
      },
      "3" : {
        "Text" : " false below  means the shade plugin overwrites the main project artifact (the one with no classifier).\n                                 false does *not* actually detach the main artifact, despite what the option name suggests. ",
        "Line" : 185,
        "CharPositionInLine" : 128
      },
      "4" : {
        "Text" : " Don't do this. The shade plugin relocates absolutely all classes and class \n                                references with this kind of configuration. This results to garbage classfiles that contain \n                                references to \"titan03.java.lang.String\", for example.\n                                <relocation>\n                                    <shadedPattern>titan03.</shadedPattern>\n                                </relocation>\n                                ",
        "Line" : 199,
        "CharPositionInLine" : 36
      },
      "5" : {
        "Text" : "\n                            <filters>\n                                <filter>\n                                    <artifact>*:*</artifact>\n                                    <excludes>\n                                        <exclude>META-INF/license/**</exclude>\n                                        <exclude>META-INF/*</exclude>\n                                        <exclude>META-INF/maven/**</exclude>\n                                        <exclude>LICENSE</exclude>\n                                        <exclude>NOTICE</exclude>\n                                        <exclude>/*.txt</exclude>\n                                        <exclude>build.properties</exclude>\n                                    </excludes>\n                                </filter>\n                            </filters>\n                            ",
        "Line" : 220,
        "CharPositionInLine" : 32
      },
      "6" : {
        "Text" : " For the HBase 0.94 releases, the HBase team only pushes Hadoop-1.x-compatible artifacts to Central.\n                 This is why we depend on the Hadoop 1 profile when building the HBase 0.94 shim.  There's a Hadoop 2\n                 profile in this pom, but you have to recompile HBase 0.94 manually (or get a Hadoop-2-compatible\n                 HBase 0.94 artifact from some non-Apache vendor) before it's any use. ",
        "Line" : 233,
        "CharPositionInLine" : 91
      },
      "CommentCount" : 7
    },
    "titan-hbase-parent/titan-hbase-096/pom.xml" : {
      "ObjectId" : "2ea2f7a92dbc9e53e9192159a629a892764bacf2",
      "LastModified" : "2015-09-19T21:52:25Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " HBase fails to start during testing with a\n                     Netty ClassNotFoundException unless this\n                     dependency is declared ",
        "Line" : 174,
        "CharPositionInLine" : 48
      },
      "CommentCount" : 1
    },
    "titan-hbase-parent/titan-hbase-098/pom.xml" : {
      "ObjectId" : "6c0dda29e9d4bc41699c679c039adf72be8fba25",
      "LastModified" : "2015-09-19T21:52:25Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " HBase fails to start during testing with a\n                     Netty ClassNotFoundException unless this\n                     dependency is declared ",
        "Line" : 190,
        "CharPositionInLine" : 48
      },
      "CommentCount" : 1
    },
    "titan-hbase-parent/titan-hbase-10/pom.xml" : {
      "ObjectId" : "1dcb241e53360fe823f95d77b36befb82853ca31",
      "LastModified" : "2015-09-19T21:52:25Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "titan-hbase-parent/titan-hbase-core/pom.xml" : {
      "ObjectId" : "6c3b13c26847b57d26e86cc76f4601ddbd68c5c2",
      "LastModified" : "2015-09-19T21:52:25Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Can't run tests without a compatibility shim ",
        "Line" : 96,
        "CharPositionInLine" : 78
      },
      "1" : {
        "Text" : " HBase fails to start during testing with a\n                     Netty ClassNotFoundException unless this\n                     dependency is declared ",
        "Line" : 150,
        "CharPositionInLine" : 48
      },
      "CommentCount" : 2
    },
    "titan-hbase-parent/titan-hbase/pom.xml" : {
      "ObjectId" : "007b018e568c65a81f2420ba109913ee57f5d958",
      "LastModified" : "2015-09-19T21:52:25Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Redeclare gpg-plugin's sign-artifacts execution below the\n                 assembly plugin to guarantee that signing happens after assembly\n                 during the package lifecycle phase ",
        "Line" : 186,
        "CharPositionInLine" : 56
      },
      "CommentCount" : 1
    },
    "titan-lucene/pom.xml" : {
      "ObjectId" : "ada9087c4712468ffb31213513520353c8747a3d",
      "LastModified" : "2015-09-19T21:52:25Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "titan-rexster/pom.xml" : {
      "ObjectId" : "45a9f8c674e2138171c7b74f84427c0128b870a1",
      "LastModified" : "2015-04-07T19:25:23Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "titan-solr/pom.xml" : {
      "ObjectId" : "1d691853336b93325e0e626f3f029b4c9eeeb5e8",
      "LastModified" : "2015-09-19T21:52:25Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "titan-test/pom.xml" : {
      "ObjectId" : "0ac191bb21da4bf79fa64b6f7a9fd598e621a0d3",
      "LastModified" : "2015-09-19T21:52:25Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Access Sonatype OSS Snapshots for Furnace artifacts. This can \n            go away when Furnace is released to Central. ",
        "Line" : 19,
        "CharPositionInLine" : 61
      },
      "1" : {
        "Text" : " TinkerPop ",
        "Line" : 38,
        "CharPositionInLine" : 27
      },
      "2" : {
        "Text" : " Test Dependencies ",
        "Line" : 60,
        "CharPositionInLine" : 35
      },
      "3" : {
        "Text" : " Groovy ",
        "Line" : 99,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 4
    }
  },
  "FileTypes" : {
    "MAVEN" : 26
  },
  "ElapsedTime" : 3132
}