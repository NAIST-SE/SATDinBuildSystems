{
  "Repository" : "21848657",
  "Revision" : "HEAD",
  "ObjectId" : "111438fe1ebcaf2b37099717fda7708a6e3d7ee2",
  "CommitTime" : "2019-04-08T00:28:13Z",
  "Files" : {
    "pom.xml" : {
      "ObjectId" : "1b0db5a31441fac96aeac6818264ebd949b28638",
      "LastModified" : "2019-04-07T16:39:52Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " lookup parent from repository ",
        "Line" : 18,
        "CharPositionInLine" : 41
      },
      "1" : {
        "Text" : " Prior to 4/5/2019 we had this profile as the default and the 'dev-vscode' profile didn't exist (below), for\n\t\t\t\tmore info on why there is dev and dev-vscode profiles see the long comment below that is\n\t\t\t\tabove the dev-vscode profile.\n\t\t\t\t",
        "Line" : 35,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "\n\t\t\t\t\t\t<exclusion>\n\t\t\t\t\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t\t\t\t\t<artifactId>spring-boot-starter-validation</artifactId>\n\t\t\t\t\t\t</exclusion>\n\t\t\t\t\t\t<exclusion>\n\t\t\t\t\t\t\t<groupId>org.glassfish.jersey.ext</groupId>\n\t\t\t\t\t\t\t<artifactId>jersey-bean-validation</artifactId>\n\t\t\t\t\t\t</exclusion>\n\t\t\t\t\t\t",
        "Line" : 81,
        "CharPositionInLine" : 10
      },
      "3" : {
        "Text" : " https://mvnrepository.com/artifact/org.apache.commons/commons-exec ",
        "Line" : 145,
        "CharPositionInLine" : 80
      },
      "4" : {
        "Text" : " Use Log4J for logging ",
        "Line" : 152,
        "CharPositionInLine" : 35
      },
      "5" : {
        "Text" : "\n\t\tFor info about this and what it's for and why it's commented out, look in file JavaToTypeScriptCodeGen.java\n\t\t\n\t\t<dependency><groupId>cz.habarta.typescript-generator</groupId><artifactId>typescript-generator-core</artifactId><version>1.10-SNAPSHOT</version></dependency>\n\t\t",
        "Line" : 162,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "\n\t\t\t<exclusions>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<groupId>org.slf4j</groupId>\n\t\t\t\t\t<artifactId>jcl-over-slf4j</artifactId>\n\t\t\t\t</exclusion>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<groupId>org.slf4j</groupId>\n\t\t\t\t\t<artifactId>slf4j-api</artifactId>\n\t\t\t\t</exclusion>\n\t\t\t</exclusions>\n\t\t\t",
        "Line" : 178,
        "CharPositionInLine" : 7
      },
      "7" : {
        "Text" : "\n\t\t<dependency>\n\t\t\t<groupId>org.apache.pdfbox</groupId>\n\t\t\t<artifactId>pdfbox</artifactId>\n\t\t\t<version>2.0.8</version>\n\t\t</dependency>\n\t\t",
        "Line" : 197,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "\n\t\t\t\t<includes>\n\t\t\t\t\t<include>log4j.properties</include>\n\t\t\t\t</includes>       \n\t\t\t\t",
        "Line" : 244,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : " I have resource filtering disabled for now because i don't need it, but if you turn it back on don't forget\n\t\t\t\tto add 'resources:resources' to the maven command for inside<plugin>\n\t\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t\t\t<artifactId>maven-compiler-plugin</artifactId>\n\t\t\t\t\t\t<version>3.8.0</version>\n\t\t\t\t\t\t<configuration>\n\t\t\t\t\t\t\t<source>9</source>\n\t\t\t\t\t\t\t<target>9</target>\n\t\t\t\t\t\t</configuration>\n\t\t\t\t\t</plugin> VSCode AND also your prod builder shell script!!!\n\t\t\t\t<filtering>true</filtering>\n\t\t\t\t",
        "Line" : 261,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "\n\t\t\t\t\t<plugin>\n\t\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t\t\t<artifactId>maven-install-plugin</artifactId>\n\t\t\t\t\t\t<version>2.5.1</version>\n\t\t\t\t\t\t<configuration>\n\t\t\t\t\t\t\t<groupId>javax.validation</groupId>\n\t\t\t\t\t\t\t<artifactId>validation-api</artifactId>\n\t\t\t\t\t\t\t<version>1.1.0.Final</version>\n\t\t\t\t\t\t\t<packaging>jar</packaging>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<file>${project.basedir}/jar/validation-api-1.1.0.Final.jar</file>\n\t\t\t\t\t\t\t<generatePom>true</generatePom>\n\t\t\t\t\t\t</configuration>\n\t\t\t\t\t\t<executions>\n\t\t\t\t\t\t\t<execution>\n\t\t\t\t\t\t\t\t<id>install-jar-lib</id>\n\t\t\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t\t\t<goal>install-file</goal>\n\t\t\t\t\t\t\t\t</goals>\n\t\t\t\t\t\t\t\t<phase>validate</phase>\n\t\t\t\t\t\t\t</execution>\n\t\t\t\t\t\t</executions>\n\t\t\t\t\t</plugin>\n",
        "Line" : 292,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "\n\t\t\t\t\tThis didn't help. Somehow this jar must be getting provided by the Tomcat runtime, and so i'm still looking for a way to get this\n\t\t\t\t\tOUT of the classpath becasue it's not compatable with other newer dependencies.\n\t\t\t\t\t<plugin>\n\t\t\t\t\t\t<artifactId>maven-war-plugin</artifactId>\n\t\t\t\t\t\t<version>3.2.2</version>\n\t\t\t\t\t\t<configuration>\n\t\t\t\t\t\t\t<packagingExcludes>**/validation-api-1.1.0.Final.jar</packagingExcludes>\n\t\t\t\t\t\t</configuration>\n\t\t\t\t\t</plugin>\n\t\t\t\t\t",
        "Line" : 304,
        "CharPositionInLine" : 9
      },
      "12" : {
        "Text" : "\n\t\t\tDisabling javadocs until I have enough of it in the code to be worth using.\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t<artifactId>maven-javadoc-plugin</artifactId>\n\t\t\t\t<version>2.10.4</version>\n\t\t\t\t<configuration>\n\t\t\t\t\t<noqualifier>all</noqualifier>\n\t\t\t\t\t<reportOutputDirectory>./apidocs</reportOutputDirectory>\n\t\t\t\t\t<destDir>apidocs</destDir>\n\t\t\t\t</configuration>\n\t\t\t</plugin>\n\t\t\t",
        "Line" : 318,
        "CharPositionInLine" : 7
      },
      "13" : {
        "Text" : " \n\t\t\t\tWARNING: It appears that only ONE exec-maven-plugin runs. Having two of these plugins won't work, because it ends up \n\t\t\t\tonly running one of them. Don't know why. So just put ALL scripting stuff in this one file\n\t\t\t\t",
        "Line" : 326,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "\n\t\t\tWith this plugin commented out you must also remove 'exec:exec' from the maven build command line (goals)\n\t\t\tand of course put 'exec:exec' back in if you are doing the exec-maven-plugin.\n\t\t\t\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.codehaus.mojo</groupId>\n\t\t\t\t<artifactId>exec-maven-plugin</artifactId>\n\t\t\t\t<configuration>\n\t\t\t\t\t<executable>./run-webpack.sh</executable>\n\t\t\t\t\t<workingDirectory>./</workingDirectory>\n\t\t\t\t</configuration>\n\t\t\t</plugin>\n\t\t\t",
        "Line" : 340,
        "CharPositionInLine" : 7
      },
      "15" : {
        "Text" : " Use the latest released version:\n\t\t\t\thttps://repo1.maven.org/maven2/com/github/eirslett/frontend-maven-plugin/ ",
        "Line" : 345,
        "CharPositionInLine" : 82
      },
      "16" : {
        "Text" : " Simple var ",
        "Line" : 352,
        "CharPositionInLine" : 28
      },
      "17" : {
        "Text" : " Var value take from maven properties \n\t\t\t\t\t\t<NODE_ENV>${NODE_ENV}</NODE_ENV>\n\t\t\t\t\t\t",
        "Line" : 358,
        "CharPositionInLine" : 10
      },
      "18" : {
        "Text" : " optional: you don't really need execution ids, but it looks nice in your build log. ",
        "Line" : 364,
        "CharPositionInLine" : 101
      },
      "19" : {
        "Text" : " optional: with node version greater than 4.0.0 will use npm provided by node distribution \n\t\t\t\t\t\t\t\t\t<npmVersion>5.8.0</npmVersion>\n\t\t\t\t\t\t\t\t\t",
        "Line" : 374,
        "CharPositionInLine" : 13
      },
      "20" : {
        "Text" : " optional: where to download node and npm from. Defaults to https://nodejs.org/dist/ \n\t\t\t\t\t\t\t\t\t<downloadRoot>http://myproxy.example.org/nodejs/</downloadRoot>\n\t\t\t\t\t\t\t\t\t",
        "Line" : 378,
        "CharPositionInLine" : 13
      },
      "21" : {
        "Text" : " optional: default phase is \"generate-resources\" ",
        "Line" : 380,
        "CharPositionInLine" : 65
      },
      "22" : {
        "Text" : " optional: default phase is \"generate-resources\" ",
        "Line" : 389,
        "CharPositionInLine" : 65
      },
      "23" : {
        "Text" : " optional: The default argument is actually\n\t\t\t\t\t\t\t\t\t\"install\", so unless you need to run some other npm command,\n\t\t\t\t\t\t\t\t\tyou can remove this whole <configuration> section.\n\t\t\t\t\t\t\t\t\t",
        "Line" : 396,
        "CharPositionInLine" : 13
      },
      "24" : {
        "Text" : " optional: the default phase is \"generate-resources\" ",
        "Line" : 406,
        "CharPositionInLine" : 69
      },
      "25" : {
        "Text" : " optional: if not specified, it will run webpack's default\n        \t\t\t\t\t\t\tbuild (and you can remove this whole <configuration> section.) ",
        "Line" : 411,
        "CharPositionInLine" : 82
      },
      "26" : {
        "Text" : " =============================================================================================== ",
        "Line" : 422,
        "CharPositionInLine" : 107
      },
      "27" : {
        "Text" : " This profile 'dev-vscode' is the one we activate by default so that when opening in VSCode we don't run into the\n\t\tbug that exists where 'node' process will HANG forever with maxed out CPU usage. This profile is identical to the 'dev' \n\t\tprofile except for omitting the webpack part which causes this bug/hang. All profiles work just fine with or without\n\t\twebpack when run on the command line, but it seems VSCode is not able to run any webpack without this bug happening, so the \n\t\tsolution is just that we never run any webpack from inside VSCode\n\t\t\n\t\tInterestingly, this bug only happens then VSCode is automatically running the the build behind the scenes just because you\n\t\topened the project and it wants to run a build. Running from a tasks.json entry that runs './build.sh', from the Terminal \n\t\tmenu inside VSCode works just fine.\n\t\t",
        "Line" : 432,
        "CharPositionInLine" : 6
      },
      "28" : {
        "Text" : " I think i added this 'default' designation so that IDEs can build always even when no specific build config is being run \n\t\t\t\t\n\t\t\t\tUpdate: I set this activeByDefaut to 'false' on 4/6/2019, because I noticed the webpack process was hanging up in 'node' somehow, \n\t\t\t\tand the 'node' process in linux was sitting ther burning up 155% CPU forever, in a loop. This stops VSCode from causing this to happen.\n\t\t\t\tSomehow there is a bug in that scenario. VSCode detecting this and trying to run a build once you just merely open your IDE.\n\t\t\t\t",
        "Line" : 441,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : "\n\t\t\t\t\t\t<exclusion>\n\t\t\t\t\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t\t\t\t\t<artifactId>spring-boot-starter-validation</artifactId>\n\t\t\t\t\t\t</exclusion>\n\t\t\t\t\t\t<exclusion>\n\t\t\t\t\t\t\t<groupId>org.glassfish.jersey.ext</groupId>\n\t\t\t\t\t\t\t<artifactId>jersey-bean-validation</artifactId>\n\t\t\t\t\t\t</exclusion>\n\t\t\t\t\t\t",
        "Line" : 486,
        "CharPositionInLine" : 10
      },
      "30" : {
        "Text" : " https://mvnrepository.com/artifact/org.apache.commons/commons-exec ",
        "Line" : 550,
        "CharPositionInLine" : 80
      },
      "31" : {
        "Text" : " Use Log4J for logging ",
        "Line" : 557,
        "CharPositionInLine" : 35
      },
      "32" : {
        "Text" : "\n\t\tFor info about this and what it's for and why it's commented out, look in file JavaToTypeScriptCodeGen.java\n\t\t\n\t\t<dependency><groupId>cz.habarta.typescript-generator</groupId><artifactId>typescript-generator-core</artifactId><version>1.10-SNAPSHOT</version></dependency>\n\t\t",
        "Line" : 567,
        "CharPositionInLine" : 6
      },
      "33" : {
        "Text" : "\n\t\t\t<exclusions>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<groupId>org.slf4j</groupId>\n\t\t\t\t\t<artifactId>jcl-over-slf4j</artifactId>\n\t\t\t\t</exclusion>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<groupId>org.slf4j</groupId>\n\t\t\t\t\t<artifactId>slf4j-api</artifactId>\n\t\t\t\t</exclusion>\n\t\t\t</exclusions>\n\t\t\t",
        "Line" : 583,
        "CharPositionInLine" : 7
      },
      "34" : {
        "Text" : "\n\t\t<dependency>\n\t\t\t<groupId>org.apache.pdfbox</groupId>\n\t\t\t<artifactId>pdfbox</artifactId>\n\t\t\t<version>2.0.8</version>\n\t\t</dependency>\n\t\t",
        "Line" : 602,
        "CharPositionInLine" : 6
      },
      "35" : {
        "Text" : "\n\t\t\t\t<includes>\n\t\t\t\t\t<include>log4j.properties</include>\n\t\t\t\t</includes>       \n\t\t\t\t",
        "Line" : 650,
        "CharPositionInLine" : 8
      },
      "36" : {
        "Text" : " I have resource filtering disabled for now because i don't need it, but if you turn it back on don't forget\n\t\t\t\tto add 'resources:resources' to the maven command for inside<plugin>\n\t\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t\t\t<artifactId>maven-compiler-plugin</artifactId>\n\t\t\t\t\t\t<version>3.8.0</version>\n\t\t\t\t\t\t<configuration>\n\t\t\t\t\t\t\t<source>9</source>\n\t\t\t\t\t\t\t<target>9</target>\n\t\t\t\t\t\t</configuration>\n\t\t\t\t\t</plugin> VSCode AND also your prod builder shell script!!!\n\t\t\t\t<filtering>true</filtering>\n\t\t\t\t",
        "Line" : 667,
        "CharPositionInLine" : 8
      },
      "37" : {
        "Text" : "\n\t\t\t\t\t<plugin>\n\t\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t\t\t<artifactId>maven-install-plugin</artifactId>\n\t\t\t\t\t\t<version>2.5.1</version>\n\t\t\t\t\t\t<configuration>\n\t\t\t\t\t\t\t<groupId>javax.validation</groupId>\n\t\t\t\t\t\t\t<artifactId>validation-api</artifactId>\n\t\t\t\t\t\t\t<version>1.1.0.Final</version>\n\t\t\t\t\t\t\t<packaging>jar</packaging>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<file>${project.basedir}/jar/validation-api-1.1.0.Final.jar</file>\n\t\t\t\t\t\t\t<generatePom>true</generatePom>\n\t\t\t\t\t\t</configuration>\n\t\t\t\t\t\t<executions>\n\t\t\t\t\t\t\t<execution>\n\t\t\t\t\t\t\t\t<id>install-jar-lib</id>\n\t\t\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t\t\t<goal>install-file</goal>\n\t\t\t\t\t\t\t\t</goals>\n\t\t\t\t\t\t\t\t<phase>validate</phase>\n\t\t\t\t\t\t\t</execution>\n\t\t\t\t\t\t</executions>\n\t\t\t\t\t</plugin>\n",
        "Line" : 698,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "\n\t\t\t\t\tThis didn't help. Somehow this jar must be getting provided by the Tomcat runtime, and so i'm still looking for a way to get this\n\t\t\t\t\tOUT of the classpath becasue it's not compatable with other newer dependencies.\n\t\t\t\t\t<plugin>\n\t\t\t\t\t\t<artifactId>maven-war-plugin</artifactId>\n\t\t\t\t\t\t<version>3.2.2</version>\n\t\t\t\t\t\t<configuration>\n\t\t\t\t\t\t\t<packagingExcludes>**/validation-api-1.1.0.Final.jar</packagingExcludes>\n\t\t\t\t\t\t</configuration>\n\t\t\t\t\t</plugin>\n\t\t\t\t\t",
        "Line" : 710,
        "CharPositionInLine" : 9
      },
      "39" : {
        "Text" : "\n\t\t\tDisabling javadocs until I have enough of it in the code to be worth using.\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t<artifactId>maven-javadoc-plugin</artifactId>\n\t\t\t\t<version>2.10.4</version>\n\t\t\t\t<configuration>\n\t\t\t\t\t<noqualifier>all</noqualifier>\n\t\t\t\t\t<reportOutputDirectory>./apidocs</reportOutputDirectory>\n\t\t\t\t\t<destDir>apidocs</destDir>\n\t\t\t\t</configuration>\n\t\t\t</plugin>\n\t\t\t",
        "Line" : 724,
        "CharPositionInLine" : 7
      },
      "40" : {
        "Text" : " \n\t\t\t\tWARNING: It appears that only ONE exec-maven-plugin runs. Having two of these plugins won't work, because it ends up \n\t\t\t\tonly running one of them. Don't know why. So just put ALL scripting stuff in this one file\n\t\t\t\t",
        "Line" : 732,
        "CharPositionInLine" : 8
      },
      "41" : {
        "Text" : "\n\t\t\tWith this plugin commented out you must also remove 'exec:exec' from the maven build command line (goals)\n\t\t\tand of course put 'exec:exec' back in if you are doing the exec-maven-plugin.\n\t\t\t\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.codehaus.mojo</groupId>\n\t\t\t\t<artifactId>exec-maven-plugin</artifactId>\n\t\t\t\t<configuration>\n\t\t\t\t\t<executable>./run-webpack.sh</executable>\n\t\t\t\t\t<workingDirectory>./</workingDirectory>\n\t\t\t\t</configuration>\n\t\t\t</plugin>\n\t\t\t",
        "Line" : 746,
        "CharPositionInLine" : 7
      },
      "42" : {
        "Text" : " Use the latest released version:\n\t\t\t\thttps://repo1.maven.org/maven2/com/github/eirslett/frontend-maven-plugin/ ",
        "Line" : 751,
        "CharPositionInLine" : 82
      },
      "43" : {
        "Text" : " Simple var ",
        "Line" : 758,
        "CharPositionInLine" : 28
      },
      "44" : {
        "Text" : " Var value take from maven properties \n\t\t\t\t\t\t<NODE_ENV>${NODE_ENV}</NODE_ENV>\n\t\t\t\t\t\t",
        "Line" : 764,
        "CharPositionInLine" : 10
      },
      "45" : {
        "Text" : " optional: you don't really need execution ids, but it looks nice in your build log. ",
        "Line" : 770,
        "CharPositionInLine" : 101
      },
      "46" : {
        "Text" : " optional: with node version greater than 4.0.0 will use npm provided by node distribution \n\t\t\t\t\t\t\t\t\t<npmVersion>5.8.0</npmVersion>\n\t\t\t\t\t\t\t\t\t",
        "Line" : 780,
        "CharPositionInLine" : 13
      },
      "47" : {
        "Text" : " optional: where to download node and npm from. Defaults to https://nodejs.org/dist/ \n\t\t\t\t\t\t\t\t\t<downloadRoot>http://myproxy.example.org/nodejs/</downloadRoot>\n\t\t\t\t\t\t\t\t\t",
        "Line" : 784,
        "CharPositionInLine" : 13
      },
      "48" : {
        "Text" : " optional: default phase is \"generate-resources\" ",
        "Line" : 786,
        "CharPositionInLine" : 65
      },
      "49" : {
        "Text" : " optional: default phase is \"generate-resources\" ",
        "Line" : 795,
        "CharPositionInLine" : 65
      },
      "50" : {
        "Text" : " optional: The default argument is actually\n\t\t\t\t\t\t\t\t\t\"install\", so unless you need to run some other npm command,\n\t\t\t\t\t\t\t\t\tyou can remove this whole <configuration> section.\n\t\t\t\t\t\t\t\t\t",
        "Line" : 802,
        "CharPositionInLine" : 13
      },
      "51" : {
        "Text" : "\n\t\t\t\t\t\t<exclusion>\n\t\t\t\t\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t\t\t\t\t<artifactId>spring-boot-starter-validation</artifactId>\n\t\t\t\t\t\t</exclusion>\n\t\t\t\t\t\t<exclusion>\n\t\t\t\t\t\t\t<groupId>org.glassfish.jersey.ext</groupId>\n\t\t\t\t\t\t\t<artifactId>jersey-bean-validation</artifactId>\n\t\t\t\t\t\t</exclusion>\n\t\t\t\t\t\t",
        "Line" : 858,
        "CharPositionInLine" : 10
      },
      "52" : {
        "Text" : " https://mvnrepository.com/artifact/org.apache.commons/commons-exec ",
        "Line" : 918,
        "CharPositionInLine" : 80
      },
      "53" : {
        "Text" : " Use Log4J for logging ",
        "Line" : 925,
        "CharPositionInLine" : 35
      },
      "54" : {
        "Text" : "\n\t\tFor info about this and what it's for and why it's commented out, look in file JavaToTypeScriptCodeGen.java\n\t\t\n\t\t<dependency><groupId>cz.habarta.typescript-generator</groupId><artifactId>typescript-generator-core</artifactId><version>1.10-SNAPSHOT</version></dependency>\n\t\t",
        "Line" : 935,
        "CharPositionInLine" : 6
      },
      "55" : {
        "Text" : "\n\t\t\t<exclusions>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<groupId>org.slf4j</groupId>\n\t\t\t\t\t<artifactId>jcl-over-slf4j</artifactId>\n\t\t\t\t</exclusion>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<groupId>org.slf4j</groupId>\n\t\t\t\t\t<artifactId>slf4j-api</artifactId>\n\t\t\t\t</exclusion>\n\t\t\t</exclusions>\n\t\t\t",
        "Line" : 951,
        "CharPositionInLine" : 7
      },
      "56" : {
        "Text" : "\n\t\t<dependency>\n\t\t\t<groupId>org.apache.pdfbox</groupId>\n\t\t\t<artifactId>pdfbox</artifactId>\n\t\t\t<version>2.0.8</version>\n\t\t</dependency>\n\t\t",
        "Line" : 970,
        "CharPositionInLine" : 6
      },
      "57" : {
        "Text" : "\n\t\t\t\t<includes>\n\t\t\t\t\t<include>log4j.properties</include>\n\t\t\t\t</includes>       \n\t\t\t\t",
        "Line" : 1018,
        "CharPositionInLine" : 8
      },
      "58" : {
        "Text" : " I have resource filtering disabled for now because i don't need it, but if you turn it back on don't forget\n\t\t\t\tto add 'resources:resources' to the maven command for inside VSCode AND also your prod builder shell script!!!\n\t\t\t\t<filtering>true</filtering>\n\t\t\t\t",
        "Line" : 1027,
        "CharPositionInLine" : 8
      },
      "59" : {
        "Text" : "\n\t\t\t\t\t<plugin>\n\t\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t\t\t<artifactId>maven-install-plugin</artifactId>\n\t\t\t\t\t\t<version>2.5.1</version>\n\t\t\t\t\t\t<configuration>\n\t\t\t\t\t\t\t<groupId>javax.validation</groupId>\n\t\t\t\t\t\t\t<artifactId>validation-api</artifactId>\n\t\t\t\t\t\t\t<version>1.1.0.Final</version>\n\t\t\t\t\t\t\t<packaging>jar</packaging>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<file>${project.basedir}/jar/validation-api-1.1.0.Final.jar</file>\n\t\t\t\t\t\t\t<generatePom>true</generatePom>\n\t\t\t\t\t\t</configuration>\n\t\t\t\t\t\t<executions>\n\t\t\t\t\t\t\t<execution>\n\t\t\t\t\t\t\t\t<id>install-jar-lib</id>\n\t\t\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t\t\t<goal>install-file</goal>\n\t\t\t\t\t\t\t\t</goals>\n\t\t\t\t\t\t\t\t<phase>validate</phase>\n\t\t\t\t\t\t\t</execution>\n\t\t\t\t\t\t</executions>\n\t\t\t\t\t</plugin>\n\t",
        "Line" : 1057,
        "CharPositionInLine" : 5
      },
      "60" : {
        "Text" : "\n\t\t\tDisabling javadocs until I have enough of it in the code to be worth using.\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t<artifactId>maven-javadoc-plugin</artifactId>\n\t\t\t\t<version>2.10.4</version>\n\t\t\t\t<configuration>\n\t\t\t\t\t<noqualifier>all</noqualifier>\n\t\t\t\t\t<reportOutputDirectory>./apidocs</reportOutputDirectory>\n\t\t\t\t\t<destDir>apidocs</destDir>\n\t\t\t\t</configuration>\n\t\t\t</plugin>\n\t\t\t",
        "Line" : 1071,
        "CharPositionInLine" : 7
      },
      "61" : {
        "Text" : " \n\t\t\t\tWARNING: It appears that only ONE exec-maven-plugin runs. Having two of these plugins won't work, because it ends up \n\t\t\t\tonly running one of them. Don't know why. So just put ALL scripting stuff in this one file\n\t\t\t\t",
        "Line" : 1079,
        "CharPositionInLine" : 8
      },
      "62" : {
        "Text" : "\n\t\t\tWith this plugin commented out you must also remove 'exec:exec' from the maven build command line (goals)\n\t\t\tand of course put 'exec:exec' back in if you are doing the exec-maven-plugin.\n\t\t\t\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.codehaus.mojo</groupId>\n\t\t\t\t<artifactId>exec-maven-plugin</artifactId>\n\t\t\t\t<configuration>\n\t\t\t\t\t<executable>./run-webpack.sh</executable>\n\t\t\t\t\t<workingDirectory>./</workingDirectory>\n\t\t\t\t</configuration>\n\t\t\t</plugin>\n\t\t\t",
        "Line" : 1093,
        "CharPositionInLine" : 7
      },
      "63" : {
        "Text" : " Use the latest released version:\n\t\t\t\thttps://repo1.maven.org/maven2/com/github/eirslett/frontend-maven-plugin/ ",
        "Line" : 1098,
        "CharPositionInLine" : 82
      },
      "64" : {
        "Text" : " Simple var ",
        "Line" : 1105,
        "CharPositionInLine" : 28
      },
      "65" : {
        "Text" : " Var value take from maven properties \n\t\t\t\t\t\t<NODE_ENV>${NODE_ENV}</NODE_ENV>\n\t\t\t\t\t\t",
        "Line" : 1111,
        "CharPositionInLine" : 10
      },
      "66" : {
        "Text" : " optional: you don't really need execution ids, but it looks nice in your build log. ",
        "Line" : 1117,
        "CharPositionInLine" : 101
      },
      "67" : {
        "Text" : " optional: with node version greater than 4.0.0 will use npm provided by node distribution \n\t\t\t\t\t\t\t<npmVersion>5.8.0</npmVersion>\n\t\t\t\t\t\t\t",
        "Line" : 1127,
        "CharPositionInLine" : 11
      },
      "68" : {
        "Text" : " optional: where to download node and npm from. Defaults to https://nodejs.org/dist/ \n\t\t\t\t\t\t\t<downloadRoot>http://myproxy.example.org/nodejs/</downloadRoot>\n\t\t\t\t\t\t\t",
        "Line" : 1131,
        "CharPositionInLine" : 11
      },
      "69" : {
        "Text" : " optional: default phase is \"generate-resources\" ",
        "Line" : 1133,
        "CharPositionInLine" : 65
      },
      "70" : {
        "Text" : " optional: default phase is \"generate-resources\" ",
        "Line" : 1142,
        "CharPositionInLine" : 65
      },
      "71" : {
        "Text" : " optional: The default argument is actually\n\t\t\t\t\t\t\t\"install\", so unless you need to run some other npm command,\n\t\t\t\t\t\t\tyou can remove this whole <configuration> section.\n\t\t\t\t\t\t\t",
        "Line" : 1149,
        "CharPositionInLine" : 11
      },
      "72" : {
        "Text" : " optional: the default phase is \"generate-resources\" ",
        "Line" : 1159,
        "CharPositionInLine" : 69
      },
      "73" : {
        "Text" : " optional: if not specified, it will run webpack's default\n        \t\t\t\t\tbuild (and you can remove this whole <configuration> section.) ",
        "Line" : 1164,
        "CharPositionInLine" : 80
      },
      "74" : {
        "Text" : " This profile does the minimal work of just compiling TS files, so that we can run this profile, which is extremely fast (couple of seconds), \n\t\tand then be able to simply refresh the browser and see the changes immediately without doing an actual full maven build ",
        "Line" : 1176,
        "CharPositionInLine" : 126
      },
      "75" : {
        "Text" : "\n\t\t\t\t<includes>\n\t\t\t\t\t<include>log4j.properties</include>\n\t\t\t\t</includes>       \n\t\t\t\t",
        "Line" : 1210,
        "CharPositionInLine" : 8
      },
      "76" : {
        "Text" : " I have resource filtering disabled for now because i don't need it, but if you turn it back on don't forget\n\t\t\t\tto add 'resources:resources' to the maven command for inside VSCode AND also your prod builder shell script!!!\n\t\t\t\t<filtering>true</filtering>\n\t\t\t\t",
        "Line" : 1219,
        "CharPositionInLine" : 8
      },
      "77" : {
        "Text" : " \n\t\t\t\t\t\tWARNING: It appears that only ONE exec-maven-plugin runs. Having two of these plugins won't work, because it ends up \n\t\t\t\t\t\tonly running one of them. Don't know why. So just put ALL scripting stuff in this one file\n\t\t\t\t\t\t",
        "Line" : 1228,
        "CharPositionInLine" : 10
      },
      "78" : {
        "Text" : "\n\t\t\t\t\tWith this plugin commented out you must also remove 'exec:exec' from the maven build command line (goals)\n\t\t\t\t\tand of course put 'exec:exec' back in if you are doing the exec-maven-plugin.\n\t\t\t\t\t\n\t\t\t\t\t<plugin>\n\t\t\t\t\t\t<groupId>org.codehaus.mojo</groupId>\n\t\t\t\t\t\t<artifactId>exec-maven-plugin</artifactId>\n\t\t\t\t\t\t<configuration>\n\t\t\t\t\t\t\t<executable>./run-webpack.sh</executable>\n\t\t\t\t\t\t\t<workingDirectory>./</workingDirectory>\n\t\t\t\t\t\t</configuration>\n\t\t\t\t\t</plugin>\n\t\t\t\t\t",
        "Line" : 1242,
        "CharPositionInLine" : 9
      },
      "79" : {
        "Text" : " Use the latest released version:\n\t\t\t\t\t\thttps://repo1.maven.org/maven2/com/github/eirslett/frontend-maven-plugin/ ",
        "Line" : 1247,
        "CharPositionInLine" : 84
      },
      "80" : {
        "Text" : " Simple var ",
        "Line" : 1254,
        "CharPositionInLine" : 28
      },
      "81" : {
        "Text" : " Var value take from maven properties \n\t\t\t\t\t\t\t\t<NODE_ENV>${NODE_ENV}</NODE_ENV>\n\t\t\t\t\t\t\t\t",
        "Line" : 1260,
        "CharPositionInLine" : 12
      },
      "82" : {
        "Text" : " optional: the default phase is \"generate-resources\" ",
        "Line" : 1271,
        "CharPositionInLine" : 69
      },
      "83" : {
        "Text" : " optional: if not specified, it will run webpack's default\n        \t\t\t\t\t\t\tbuild (and you can remove this whole <configuration> section.) ",
        "Line" : 1276,
        "CharPositionInLine" : 82
      },
      "CommentCount" : 84
    }
  },
  "FileTypes" : {
    "MAVEN" : 1
  },
  "ElapsedTime" : 958
}