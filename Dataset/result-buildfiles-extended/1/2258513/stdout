{
  "Repository" : "2258513",
  "Revision" : "HEAD",
  "ObjectId" : "7dec65ee599129b4bc6ce0d5d10098d8bbd06c11",
  "CommitTime" : "2019-04-15T07:52:15Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "0764aee34f058b91e6ce5cdeafe1b717dbbe0b8d",
      "LastModified" : "2019-04-15T07:52:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# Project setup\n\n########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Fix behavior of CMAKE_C_STANDARD when targeting macOS.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Only interpret if() arguments as variables or keywords when unquoted.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#select the release build type by default to get optimization flags\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "########################################################################\n\n# Get version info from Git\n\n########################################################################\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# is a git repo\n",
        "Line" : 30,
        "CharPositionInLine" : 15
      },
      "6" : {
        "Text" : "# shorten branch spec\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# use lightweight (non-annotated) tags\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "########################################################################\n\n# Compiler specific setup\n\n########################################################################\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# for strdup, setenv\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "#http://gcc.gnu.org/wiki/Visibility\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# CMake Release default for GCC/Clang is \"-O3 -DNDEBUG\"\n\n# set(CMAKE_C_FLAGS_RELEASE -O2)\n\n# CMake Debug default for GCC/Clang is \"-g -DNDEBUG\"\n\n# set(CMAKE_C_FLAGS_DEBUG -g3 -O0)\n\n# make use of ASAN\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# make sure we don't accidentally copy more than an int\n",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Shut MSVC up about strdup and strtok\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Fix printf %zu\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "########################################################################\n\n# Find build dependencies\n\n########################################################################\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# AUTO / ON\n",
        "Line" : 91,
        "CharPositionInLine" : 18
      },
      "17" : {
        "Text" : "# AUTO / ON\n",
        "Line" : 113,
        "CharPositionInLine" : 20
      },
      "18" : {
        "Text" : "# cmake -DCMAKE_BUILD_TYPE=Profile ..\n\n# CPUPROFILE=prof.out ./src/rtl_433 ...\n\n# pprof -text ./src/rtl_433 prof.out\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "########################################################################\n\n# Setup the include and linker paths\n\n########################################################################\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "########################################################################\n\n# Create uninstall target\n\n########################################################################\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "########################################################################\n\n# Build documentation with Doxygen\n\n########################################################################\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# note the option ALL which allows to build the docs together with the application\n",
        "Line" : 188,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "#    install(DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/doc/html DESTINATION share/doc)\n",
        "Line" : 194,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "########################################################################\n\n# Build tests\n\n########################################################################\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# note: this adds a BUILD_TESTING which defaults to ON\n",
        "Line" : 200,
        "CharPositionInLine" : 15
      },
      "26" : {
        "Text" : "########################################################################\n\n# Configure CI deploy\n\n########################################################################\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "########################################################################\n\n# Add subdirectories\n\n########################################################################\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# use space-separation format for the pc file\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# unset these vars to avoid hard-coded paths to cross environment\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 30
    },
    "Makefile.am" : {
      "ObjectId" : "520d3f088a09dcc45f6a75617245519473e0f1d6",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "cmake/Modules/FindGperftools.cmake" : {
      "ObjectId" : "cd990662cf1b197890f1e0662a1cde08b6f03ca3",
      "LastModified" : "2017-12-15T10:06:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tries to find Gperftools.\n\n#\n\n# Usage of this module as follows:\n\n#\n\n#     find_package(Gperftools)\n\n#\n\n# Variables used by this module, they can change the default behaviour and need\n\n# to be set before calling find_package:\n\n#\n\n#  Gperftools_ROOT_DIR  Set this variable to the root installation of\n\n#                       Gperftools if the module has problems finding\n\n#                       the proper installation path.\n\n#\n\n# Variables defined by this module:\n\n#\n\n#  GPERFTOOLS_FOUND              System has Gperftools libs/headers\n\n#  GPERFTOOLS_LIBRARIES          The Gperftools libraries (tcmalloc & profiler)\n\n#  GPERFTOOLS_INCLUDE_DIR        The location of Gperftools headers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindLibRTLSDR.cmake" : {
      "ObjectId" : "20443650b98fb914592643b680bf0c676e24b7f9",
      "LastModified" : "2018-12-30T15:18:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find LibRTLSDR\n\n# Once done this will define\n\n#  LIBRTLSDR_FOUND - System has LibRTLSDR\n\n#  LIBRTLSDR_INCLUDE_DIRS - The LibRTLSDR include directories\n\n#  LIBRTLSDR_LIBRARIES - The libraries needed to use LibRTLSDR\n\n#  LIBRTLSDR_DEFINITIONS - Compiler switches required for using LibRTLSDR\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LIBRTLSDR_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Modules/FindLibUSB.cmake" : {
      "ObjectId" : "607e35bdc1ddb54b416590ca2aec599fc2ed84ba",
      "LastModified" : "2018-12-30T15:18:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find LibUSB\n\n# Once done this will define\n\n#  LIBUSB_FOUND - System has LibUSB\n\n#  LIBUSB_INCLUDE_DIRS - The LibUSB include directories\n\n#  LIBUSB_LIBRARIES - The libraries needed to use LibUSB\n\n#  LIBUSB_DEFINITIONS - Compiler switches required for using LibUSB\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#standard library name for libusb-1.0\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#libusb-1.0 compatible library on freebsd\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LIBUSB_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/Modules/GetGitRevisionDescription.cmake" : {
      "ObjectId" : "ea3ba8856e91da8fb1a136c1cf878d53c616f9e5",
      "LastModified" : "2019-03-05T09:19:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# https://github.com/rpavlik/cmake-modules\n\n#\n\n# - Returns a version string from Git\n\n#\n\n# These functions force a re-configure on each git commit so that you can\n\n# trust the values of the variables in your build system.\n\n#\n\n#  get_git_head_revision(<refspecvar> <hashvar> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the refspec and sha hash of the current head revision\n\n#\n\n#  git_describe(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe on the source tree, and adjusting\n\n# the output so that it tests false if an error occurs.\n\n#\n\n#  git_get_exact_tag(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe --exact-match on the source tree,\n\n# and adjusting the output so that it tests false if there was no exact\n\n# matching tag.\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We must run the following at \"include\" time, not at function call time,\n\n# to find the path to this module rather than the path to a calling list file\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# check FORCED_GIT_DIR first\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# check GIT_DIR in environment\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# .git dir not found, search parent directories\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# check if this is a submodule\n",
        "Line" : 66,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# older Git does not have %cI, create ISO8601 from %ci\n",
        "Line" : 168,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "cmake/Toolchain-gcc-mingw-w64-i686.cmake" : {
      "ObjectId" : "ac71dc2af31192af729e7f02f78cd00f928c0eec",
      "LastModified" : "2019-01-11T08:25:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Linux, Windows, or Darwin\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# not really needed\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# specify the base directory for the cross compiler\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# specify the cross compiler, choose 32/64\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#SET(CMAKE_C_COMPILER ${tools}/bin/x86_64-w64-mingw32-gcc)\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# where is the target environment, choose 32/64\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#SET(CMAKE_FIND_ROOT_PATH ${tools}/lib/gcc/x86_64-w64-mingw32/4.8)\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# NOTE: use a sysroot with libusb and rtl-sdr if available\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# search for programs in the build host directories\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# for libraries and headers in the target directories\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "cmake/Toolchain-gcc-mingw-w64-x86-64.cmake" : {
      "ObjectId" : "251ef2152def3e6071161b0d12547f6b0c846ed2",
      "LastModified" : "2019-01-11T08:25:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Linux, Windows, or Darwin\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# not really needed\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# specify the base directory for the cross compiler\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# specify the cross compiler, choose 32/64\n\n#SET(CMAKE_C_COMPILER ${tools}/bin/i686-w64-mingw32-gcc)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# where is the target environment, choose 32/64\n\n#SET(CMAKE_FIND_ROOT_PATH ${tools}/lib/gcc/i686-w64-mingw32/4.8)\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# NOTE: use a sysroot with libusb and rtl-sdr if available\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# search for programs in the build host directories\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# for libraries and headers in the target directories\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "conf/CMakeLists.txt" : {
      "ObjectId" : "d41c1a8dbc2deffa55359e8af19acb506023b8e8",
      "LastModified" : "2019-01-11T08:25:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# Install example configuration files\n\n########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "include/CMakeLists.txt" : {
      "ObjectId" : "3567aa3476dfcee45d5e24a01dc9b23d2feb3753",
      "LastModified" : "2019-01-11T08:25:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# Install public header files\n\n########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "include/Makefile.am" : {
      "ObjectId" : "0205bd62248e949eb140c8b7d81481fb95c9e41d",
      "LastModified" : "2019-01-11T08:25:31Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "0595d3dc54c1a565dd2dee503226841576644c4f",
      "LastModified" : "2019-04-10T10:55:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# Build libraries and executables\n\n########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# needs CMake 3.1 but Windows builds should have that\n",
        "Line" : 143,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Explicitly say that we want C99\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "########################################################################\n\n# Install built library files & utilities\n\n########################################################################\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# .dll file\n",
        "Line" : 167,
        "CharPositionInLine" : 41
      },
      "CommentCount" : 5
    },
    "src/Makefile.am" : {
      "ObjectId" : "9a40a67aa3482fea39540663f392daa0a162c14e",
      "LastModified" : "2019-04-10T10:55:15Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "04d22ac480bfe6c4e5394da69672d0f29b9df821",
      "LastModified" : "2019-02-15T17:19:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# Compile test cases\n\n########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#add_test(baseband-test baseband-test)\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "########################################################################\n\n# Define and build all unit tests\n\n########################################################################\n\n# target_compile_definitions was only added in CMake 2.8.11\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "########################################################################\n\n# Define integration tests\n\n########################################################################\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "########################################################################\n\n# Define style checks\n\n########################################################################\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    }
  },
  "FileTypes" : {
    "CMAKE" : 11,
    "AUTOMAKE" : 3
  },
  "ElapsedTime" : 1372
}