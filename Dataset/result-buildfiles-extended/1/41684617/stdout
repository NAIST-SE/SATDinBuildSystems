{
  "Repository" : "41684617",
  "Revision" : "HEAD",
  "ObjectId" : "c0d481bb7e72e27394c708df5ed970338cd9392f",
  "CommitTime" : "2017-09-25T15:53:48Z",
  "Files" : {
    "Makefile.am" : {
      "ObjectId" : "bcb2518a64bd1be1cd68ec5a7f39861d034b38db",
      "LastModified" : "2017-06-16T16:53:14Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#  This file is part of cc-oci-runtime.\n\n#\n\n#  Copyright (C) 2016 Intel Corporation\n\n#\n\n#  This program is free software; you can redistribute it and/or\n\n#  modify it under the terms of the GNU General Public License\n\n#  as published by the Free Software Foundation; either version 2\n\n#  of the License, or (at your option) any later version.\n\n#\n\n#  This program is distributed in the hope that it will be useful,\n\n#  but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n#  GNU General Public License for more details.\n\n#\n\n#  You should have received a copy of the GNU General Public License\n\n#  along with this program; if not, write to the Free Software\n\n#  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Has a value if building in a git tree\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Has a value if building in a git-archive(1)-generated tree\n\n# (see .gitattributes).\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Sometimes you just want to generate the generated files without having\n\n# to do a full build or run some tests - so add a simple target rule\n\n# to allow that.\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# XXX: don't fail if the bundle cannot be generated - docker might not\n\n# be running for example. Those tests that need a bundle will detect\n\n# that it doesn't exist and they will be skipped.\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# We set --with-systemdunitdir here so make distcheck can run make install as a\n\n# normal user and not fail.\n\n# This directory doesn't have to be unique and doing several make distcheck\n\n# will not end up clobbering /tmp this way.\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#### tests ####\n",
        "Line" : 433,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# by default ax_valgrind_check.m4 adds fatal-warnings and fatal-criticals to G_DEBUG causing\n\n# that glib aborts the program at the first call to g_warning() or g_critical().\n\n# this target is quite similar to check-valgrind but without fatal-warnings and fatal-criticals\n",
        "Line" : 439,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## hypervisor.c test ##\n",
        "Line" : 530,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## json.c test ##\n",
        "Line" : 541,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## logging.c test ##\n",
        "Line" : 552,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## namespace.c test ##\n",
        "Line" : 563,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## oci-config.c test ##\n",
        "Line" : 574,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## oci.c test ##\n",
        "Line" : 585,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## process.c test ##\n",
        "Line" : 596,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "## runtime.c test ##\n",
        "Line" : 607,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## semver.c test ##\n",
        "Line" : 618,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "## state.c test ##\n",
        "Line" : 629,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## util.c test ##\n",
        "Line" : 640,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## priv.c test ##\n",
        "Line" : 651,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## proxy.c test ##\n",
        "Line" : 662,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "## mount.c test ##\n",
        "Line" : 673,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "## annotation.c test ##\n",
        "Line" : 684,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "## network.c test ##\n",
        "Line" : 695,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "## spec_handler.c ##\n",
        "Line" : 706,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "## spec_handlers/annotations.c test ##\n",
        "Line" : 717,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "## spec_handlers/linux.c test ##\n",
        "Line" : 728,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "## spec_handlers/vm.c test ##\n",
        "Line" : 739,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "## spec_handlers/platform.c test ##\n",
        "Line" : 750,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "## spec_handlers/process.c test ##\n",
        "Line" : 761,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "## spec_handlers/root.c test ##\n",
        "Line" : 772,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "## spec_handlers/mounts.c test ##\n",
        "Line" : 783,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "## spec_handlers/hooks.c test ##\n",
        "Line" : 794,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "## pod.c test ##\n",
        "Line" : 805,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Get clear containers image path\n",
        "Line" : 824,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Get clear containers kernel path\n",
        "Line" : 833,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 36
    },
    "proxy/selinux/Makefile" : {
      "ObjectId" : "4c442d49536b7553cdc722f75766d19e01c1f33b",
      "LastModified" : "2017-01-25T18:26:02Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 1,
    "AUTOMAKE" : 1
  },
  "ElapsedTime" : 1570
}