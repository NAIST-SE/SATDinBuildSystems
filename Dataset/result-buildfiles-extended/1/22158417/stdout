{
  "Repository" : "22158417",
  "Revision" : "HEAD",
  "ObjectId" : "b434bf18cc199a130562d8a7c00d3268d3ccddb7",
  "CommitTime" : "2019-04-17T09:16:28Z",
  "Files" : {
    "appendixA/pom.xml" : {
      "ObjectId" : "17ba94a11d3cd495eac6047c8dead01baa6793a1",
      "LastModified" : "2017-05-13T09:22:53Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter1/file-copy/pom.xml" : {
      "ObjectId" : "e9c69b216a5311eabac14e44f39171ef6ddd6c70",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Allows the example to be run via 'mvn compile exec:java' ",
        "Line" : 32,
        "CharPositionInLine" : 72
      },
      "CommentCount" : 1
    },
    "chapter1/pom.xml" : {
      "ObjectId" : "ba103101b2ae43ae154b80feb6b4a5e2b840b341",
      "LastModified" : "2017-05-13T09:22:53Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter10/camel-cxf-rest-cdi/pom.xml" : {
      "ObjectId" : "84c82fa7359dc035ca74cc86ba50a8a452d38586",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " camel ",
        "Line" : 18,
        "CharPositionInLine" : 19
      },
      "1" : {
        "Text" : " CDI API ",
        "Line" : 40,
        "CharPositionInLine" : 21
      },
      "2" : {
        "Text" : " need to use a CDI container such as JBoss Weld ",
        "Line" : 48,
        "CharPositionInLine" : 60
      },
      "3" : {
        "Text" : " lets use weld for CDI ",
        "Line" : 49,
        "CharPositionInLine" : 35
      },
      "4" : {
        "Text" : " use log4j as logger ",
        "Line" : 73,
        "CharPositionInLine" : 33
      },
      "5" : {
        "Text" : " cxf http/jetty server ",
        "Line" : 85,
        "CharPositionInLine" : 35
      },
      "6" : {
        "Text" : " to enable json support ",
        "Line" : 96,
        "CharPositionInLine" : 36
      },
      "7" : {
        "Text" : " testing ",
        "Line" : 108,
        "CharPositionInLine" : 21
      },
      "8" : {
        "Text" : " allows the routes to be run via 'mvn camel:run' ",
        "Line" : 132,
        "CharPositionInLine" : 63
      },
      "CommentCount" : 9
    },
    "chapter10/camel-cxf-rest-karaf/pom.xml" : {
      "ObjectId" : "3fdc43209920f91afd41d30d18dc87e9e9c61630",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " needed for OSGi testing with CXF ",
        "Line" : 19,
        "CharPositionInLine" : 46
      },
      "1" : {
        "Text" : " camel ",
        "Line" : 27,
        "CharPositionInLine" : 19
      },
      "2" : {
        "Text" : " cxf http/jetty server ",
        "Line" : 49,
        "CharPositionInLine" : 35
      },
      "3" : {
        "Text" : " to enable json support ",
        "Line" : 60,
        "CharPositionInLine" : 36
      },
      "4" : {
        "Text" : " testing ",
        "Line" : 72,
        "CharPositionInLine" : 21
      },
      "5" : {
        "Text" : " logging ",
        "Line" : 91,
        "CharPositionInLine" : 21
      },
      "6" : {
        "Text" : " to generate the OSGi bundle ",
        "Line" : 108,
        "CharPositionInLine" : 43
      },
      "7" : {
        "Text" : " to filter the features.xml ",
        "Line" : 118,
        "CharPositionInLine" : 42
      },
      "8" : {
        "Text" : " here the phase you need ",
        "Line" : 126,
        "CharPositionInLine" : 45
      },
      "9" : {
        "Text" : " to attach the features.xml file so its easy to install in karaf ",
        "Line" : 144,
        "CharPositionInLine" : 79
      },
      "CommentCount" : 10
    },
    "chapter10/camel-cxf-rest-spring-boot/pom.xml" : {
      "ObjectId" : "0344e97e7269aa99ac11d366ff09cff8c155a917",
      "LastModified" : "2018-01-26T08:56:32Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Spring Boot BOM ",
        "Line" : 23,
        "CharPositionInLine" : 31
      },
      "1" : {
        "Text" : " Camel BOM ",
        "Line" : 31,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : " jetty 9.4.7 is buggy ",
        "Line" : 44,
        "CharPositionInLine" : 34
      },
      "3" : {
        "Text" : " camel with spring-boot ",
        "Line" : 76,
        "CharPositionInLine" : 36
      },
      "4" : {
        "Text" : " cxf http/jetty server ",
        "Line" : 93,
        "CharPositionInLine" : 35
      },
      "5" : {
        "Text" : " to enable json support ",
        "Line" : 130,
        "CharPositionInLine" : 36
      },
      "6" : {
        "Text" : " testing ",
        "Line" : 142,
        "CharPositionInLine" : 21
      },
      "7" : {
        "Text" : " logging ",
        "Line" : 166,
        "CharPositionInLine" : 21
      },
      "8" : {
        "Text" : " we do not want version in the WAR name ",
        "Line" : 182,
        "CharPositionInLine" : 52
      },
      "CommentCount" : 9
    },
    "chapter10/camel-cxf-rest/pom.xml" : {
      "ObjectId" : "fee801e302745657e85dc9c51542f3bcce0ce087",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " camel ",
        "Line" : 18,
        "CharPositionInLine" : 19
      },
      "1" : {
        "Text" : " cxf http/jetty server ",
        "Line" : 35,
        "CharPositionInLine" : 35
      },
      "2" : {
        "Text" : " to enable json support ",
        "Line" : 46,
        "CharPositionInLine" : 36
      },
      "3" : {
        "Text" : " testing ",
        "Line" : 58,
        "CharPositionInLine" : 21
      },
      "4" : {
        "Text" : " logging ",
        "Line" : 77,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 5
    },
    "chapter10/code-first/pom.xml" : {
      "ObjectId" : "a2109f1a9d62d64e2942a7c4150f2dc51557367f",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " cxf using slf4j ",
        "Line" : 33,
        "CharPositionInLine" : 29
      },
      "1" : {
        "Text" : " using Jetty with CXF ",
        "Line" : 43,
        "CharPositionInLine" : 34
      },
      "CommentCount" : 2
    },
    "chapter10/contract-first/pom.xml" : {
      "ObjectId" : "08a3fd61f2f552ddf669956216c6bd3192231a16",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " cxf using slf4j ",
        "Line" : 33,
        "CharPositionInLine" : 29
      },
      "1" : {
        "Text" : " using Jetty with CXF ",
        "Line" : 43,
        "CharPositionInLine" : 34
      },
      "2" : {
        "Text" : " Apache CXF plugin to generate the Java code from the WSDL file ",
        "Line" : 67,
        "CharPositionInLine" : 80
      },
      "CommentCount" : 3
    },
    "chapter10/cxf-rest-camel/pom.xml" : {
      "ObjectId" : "55c1186dc46c00dd1e7fa47cc5f9fc663cbe5fe3",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " camel ",
        "Line" : 18,
        "CharPositionInLine" : 19
      },
      "1" : {
        "Text" : " cxf ",
        "Line" : 25,
        "CharPositionInLine" : 17
      },
      "2" : {
        "Text" : " cxf http/jetty server ",
        "Line" : 37,
        "CharPositionInLine" : 35
      },
      "3" : {
        "Text" : " to support json ",
        "Line" : 49,
        "CharPositionInLine" : 29
      },
      "4" : {
        "Text" : " to use jackson ",
        "Line" : 55,
        "CharPositionInLine" : 28
      },
      "5" : {
        "Text" : " logging ",
        "Line" : 62,
        "CharPositionInLine" : 21
      },
      "6" : {
        "Text" : " Allows the example to be run via 'mvn compile exec:java' ",
        "Line" : 77,
        "CharPositionInLine" : 72
      },
      "CommentCount" : 7
    },
    "chapter10/cxf-rest-json/pom.xml" : {
      "ObjectId" : "83ac84cc8afae16c786f1716db6422f72ca8c02b",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " cxf ",
        "Line" : 18,
        "CharPositionInLine" : 17
      },
      "1" : {
        "Text" : " cxf http/jetty server ",
        "Line" : 30,
        "CharPositionInLine" : 35
      },
      "2" : {
        "Text" : " to support json ",
        "Line" : 42,
        "CharPositionInLine" : 29
      },
      "3" : {
        "Text" : " to use jackson ",
        "Line" : 48,
        "CharPositionInLine" : 28
      },
      "4" : {
        "Text" : " logging ",
        "Line" : 55,
        "CharPositionInLine" : 21
      },
      "5" : {
        "Text" : " Allows the example to be run via 'mvn compile exec:java' ",
        "Line" : 70,
        "CharPositionInLine" : 72
      },
      "CommentCount" : 6
    },
    "chapter10/cxf-rest/pom.xml" : {
      "ObjectId" : "0b7b0c05ab2526ecb15e68c4924473e2c1d177fb",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " cxf ",
        "Line" : 18,
        "CharPositionInLine" : 17
      },
      "1" : {
        "Text" : " cxf http/jetty server ",
        "Line" : 30,
        "CharPositionInLine" : 35
      },
      "2" : {
        "Text" : " logging ",
        "Line" : 42,
        "CharPositionInLine" : 21
      },
      "3" : {
        "Text" : " Allows the example to be run via 'mvn compile exec:java' ",
        "Line" : 57,
        "CharPositionInLine" : 72
      },
      "CommentCount" : 4
    },
    "chapter10/cxf-swagger/pom.xml" : {
      "ObjectId" : "05534ae1d494be67626ce3dd25dd0cce3477e2db",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " cxf ",
        "Line" : 22,
        "CharPositionInLine" : 17
      },
      "1" : {
        "Text" : " cxf http/jetty server ",
        "Line" : 39,
        "CharPositionInLine" : 35
      },
      "2" : {
        "Text" : " jetty server ",
        "Line" : 51,
        "CharPositionInLine" : 26
      },
      "3" : {
        "Text" : " to support json ",
        "Line" : 68,
        "CharPositionInLine" : 29
      },
      "4" : {
        "Text" : " to use jackson ",
        "Line" : 74,
        "CharPositionInLine" : 28
      },
      "5" : {
        "Text" : " cxf swagger ",
        "Line" : 81,
        "CharPositionInLine" : 25
      },
      "6" : {
        "Text" : " swagger ",
        "Line" : 88,
        "CharPositionInLine" : 21
      },
      "7" : {
        "Text" : " avoid this old dependency which breaks CXF ",
        "Line" : 95,
        "CharPositionInLine" : 60
      },
      "8" : {
        "Text" : " logging ",
        "Line" : 104,
        "CharPositionInLine" : 21
      },
      "9" : {
        "Text" : " Allows the example to be run via 'mvn compile exec:java' ",
        "Line" : 119,
        "CharPositionInLine" : 72
      },
      "CommentCount" : 10
    },
    "chapter10/jetty-rest-security-cdi/pom.xml" : {
      "ObjectId" : "76f58ad7af33a58b1e1c67098071fb43530ae965",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " CDI API ",
        "Line" : 18,
        "CharPositionInLine" : 21
      },
      "1" : {
        "Text" : " camel ",
        "Line" : 26,
        "CharPositionInLine" : 19
      },
      "2" : {
        "Text" : " to use xml ",
        "Line" : 38,
        "CharPositionInLine" : 24
      },
      "3" : {
        "Text" : " testing ",
        "Line" : 45,
        "CharPositionInLine" : 21
      },
      "4" : {
        "Text" : " logging ",
        "Line" : 64,
        "CharPositionInLine" : 21
      },
      "5" : {
        "Text" : " allows the routes to be run via 'mvn camel:run' ",
        "Line" : 78,
        "CharPositionInLine" : 63
      },
      "CommentCount" : 6
    },
    "chapter10/jetty-rest-security-karaf/pom.xml" : {
      "ObjectId" : "749d258f116f0c71357027ebf2fa54d5745376e3",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " camel ",
        "Line" : 20,
        "CharPositionInLine" : 19
      },
      "1" : {
        "Text" : " to generate the OSGi bundle ",
        "Line" : 47,
        "CharPositionInLine" : 43
      },
      "2" : {
        "Text" : " to filter the features.xml ",
        "Line" : 55,
        "CharPositionInLine" : 42
      },
      "3" : {
        "Text" : " here the phase you need ",
        "Line" : 63,
        "CharPositionInLine" : 45
      },
      "4" : {
        "Text" : " to attach the features.xml file so its easy to install in karaf ",
        "Line" : 81,
        "CharPositionInLine" : 79
      },
      "CommentCount" : 5
    },
    "chapter10/jetty-rest-security/pom.xml" : {
      "ObjectId" : "d66360ad75bcf548387ec630782bf1e74e9df718",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " camel ",
        "Line" : 18,
        "CharPositionInLine" : 19
      },
      "1" : {
        "Text" : " to use xml ",
        "Line" : 30,
        "CharPositionInLine" : 24
      },
      "2" : {
        "Text" : " testing ",
        "Line" : 37,
        "CharPositionInLine" : 21
      },
      "3" : {
        "Text" : " logging ",
        "Line" : 56,
        "CharPositionInLine" : 21
      },
      "4" : {
        "Text" : " Allows the example to be run via 'mvn compile exec:java ",
        "Line" : 70,
        "CharPositionInLine" : 71
      },
      "CommentCount" : 5
    },
    "chapter10/pom.xml" : {
      "ObjectId" : "d8fcb22c27d69cc447c70c537f539c3cc68e4255",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter10/rest-producer/pom.xml" : {
      "ObjectId" : "53cfea92e3f7d0ad67b5b1f8b42ca046f56ca754",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Spring-Boot and Camel BOM ",
        "Line" : 16,
        "CharPositionInLine" : 37
      },
      "1" : {
        "Text" : " Spring Boot ",
        "Line" : 38,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : " Camel ",
        "Line" : 44,
        "CharPositionInLine" : 19
      },
      "CommentCount" : 3
    },
    "chapter10/restlet-json/pom.xml" : {
      "ObjectId" : "b8965f0859b5d9c380de45d2953daaa5df8ce6b6",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " camel ",
        "Line" : 18,
        "CharPositionInLine" : 19
      },
      "1" : {
        "Text" : " to use json ",
        "Line" : 30,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : " testing ",
        "Line" : 37,
        "CharPositionInLine" : 21
      },
      "3" : {
        "Text" : " logging ",
        "Line" : 50,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 4
    },
    "chapter10/restlet/pom.xml" : {
      "ObjectId" : "73a2246f8be3cb37d608032f0f9182828deec26d",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " camel ",
        "Line" : 18,
        "CharPositionInLine" : 19
      },
      "1" : {
        "Text" : " testing ",
        "Line" : 36,
        "CharPositionInLine" : 21
      },
      "2" : {
        "Text" : " logging ",
        "Line" : 48,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 3
    },
    "chapter10/servlet-swagger-xml/pom.xml" : {
      "ObjectId" : "ce5e74f03d0beffa8eef590825b668ca6a00f542",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " camel ",
        "Line" : 19,
        "CharPositionInLine" : 19
      },
      "1" : {
        "Text" : " we need spring web ",
        "Line" : 34,
        "CharPositionInLine" : 32
      },
      "2" : {
        "Text" : " swagger support ",
        "Line" : 40,
        "CharPositionInLine" : 29
      },
      "3" : {
        "Text" : " to use json ",
        "Line" : 47,
        "CharPositionInLine" : 25
      },
      "4" : {
        "Text" : " logging ",
        "Line" : 54,
        "CharPositionInLine" : 21
      },
      "5" : {
        "Text" : " we do not want version in the WAR name ",
        "Line" : 68,
        "CharPositionInLine" : 52
      },
      "6" : {
        "Text" : " allows running this example with mvn:jetty-run ",
        "Line" : 72,
        "CharPositionInLine" : 62
      },
      "CommentCount" : 7
    },
    "chapter10/spark-rest-json/pom.xml" : {
      "ObjectId" : "989f6d7bd6243065e22d6109e0cf0acbe48bd725",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " camel ",
        "Line" : 18,
        "CharPositionInLine" : 19
      },
      "1" : {
        "Text" : " to use json ",
        "Line" : 30,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : " testing ",
        "Line" : 37,
        "CharPositionInLine" : 21
      },
      "3" : {
        "Text" : " logging ",
        "Line" : 56,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 4
    },
    "chapter10/spark-rest-ping/pom.xml" : {
      "ObjectId" : "345741637d7fd7ee105af435136ae2ada4cfbddf",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " camel ",
        "Line" : 18,
        "CharPositionInLine" : 19
      },
      "1" : {
        "Text" : " Allows the example to be run via 'mvn compile exec:java ",
        "Line" : 39,
        "CharPositionInLine" : 71
      },
      "CommentCount" : 2
    },
    "chapter10/spark-rest/pom.xml" : {
      "ObjectId" : "0dcfbb44b6fbf096e563fbcfea2d3fed9f1a7807",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " camel ",
        "Line" : 18,
        "CharPositionInLine" : 19
      },
      "1" : {
        "Text" : " to use xml ",
        "Line" : 30,
        "CharPositionInLine" : 24
      },
      "2" : {
        "Text" : " testing ",
        "Line" : 37,
        "CharPositionInLine" : 21
      },
      "3" : {
        "Text" : " logging ",
        "Line" : 56,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 4
    },
    "chapter10/springboot-json/pom.xml" : {
      "ObjectId" : "a30381479256b729a346c6ed0b3c74e0f878c66a",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Spring-Boot and Camel BOM ",
        "Line" : 16,
        "CharPositionInLine" : 37
      },
      "1" : {
        "Text" : " Spring Boot ",
        "Line" : 38,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : " camel ",
        "Line" : 44,
        "CharPositionInLine" : 19
      },
      "3" : {
        "Text" : " to use json ",
        "Line" : 54,
        "CharPositionInLine" : 25
      },
      "4" : {
        "Text" : " testing ",
        "Line" : 60,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 5
    },
    "chapter10/swagger-ui/pom.xml" : {
      "ObjectId" : "f5e2ad02faefc4349577a1d11ff82ea4860ecc0a",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " camel ",
        "Line" : 23,
        "CharPositionInLine" : 19
      },
      "1" : {
        "Text" : " we need spring web ",
        "Line" : 38,
        "CharPositionInLine" : 32
      },
      "2" : {
        "Text" : " swagger support ",
        "Line" : 44,
        "CharPositionInLine" : 29
      },
      "3" : {
        "Text" : " swagger ui ",
        "Line" : 51,
        "CharPositionInLine" : 24
      },
      "4" : {
        "Text" : " to use json ",
        "Line" : 59,
        "CharPositionInLine" : 25
      },
      "5" : {
        "Text" : " to use xml ",
        "Line" : 66,
        "CharPositionInLine" : 24
      },
      "6" : {
        "Text" : " logging ",
        "Line" : 73,
        "CharPositionInLine" : 21
      },
      "7" : {
        "Text" : " we do not want version in the WAR name ",
        "Line" : 87,
        "CharPositionInLine" : 52
      },
      "8" : {
        "Text" : " to embed swagger-ui ",
        "Line" : 90,
        "CharPositionInLine" : 33
      },
      "9" : {
        "Text" : " allows running this example with mvn jetty:run-war ",
        "Line" : 140,
        "CharPositionInLine" : 66
      },
      "CommentCount" : 10
    },
    "chapter10/undertow-rest-xml-json/pom.xml" : {
      "ObjectId" : "5f5c021767cbf610d2893eaca256bf9446b4e5ec",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " camel ",
        "Line" : 18,
        "CharPositionInLine" : 19
      },
      "1" : {
        "Text" : " to use json ",
        "Line" : 30,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : " to use xml ",
        "Line" : 37,
        "CharPositionInLine" : 24
      },
      "3" : {
        "Text" : " logging ",
        "Line" : 44,
        "CharPositionInLine" : 21
      },
      "4" : {
        "Text" : " Allows the example to be run via 'mvn compile exec:java ",
        "Line" : 58,
        "CharPositionInLine" : 71
      },
      "CommentCount" : 5
    },
    "chapter10/undertow-swagger/pom.xml" : {
      "ObjectId" : "2cd3ad6b2293f059a9b89b557b00cf43d037601d",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " camel ",
        "Line" : 18,
        "CharPositionInLine" : 19
      },
      "1" : {
        "Text" : " swagger support ",
        "Line" : 29,
        "CharPositionInLine" : 29
      },
      "2" : {
        "Text" : " to use json ",
        "Line" : 36,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : " to use xml ",
        "Line" : 43,
        "CharPositionInLine" : 24
      },
      "4" : {
        "Text" : " logging ",
        "Line" : 50,
        "CharPositionInLine" : 21
      },
      "5" : {
        "Text" : " Allows the example to be run via 'mvn compile exec:java ",
        "Line" : 64,
        "CharPositionInLine" : 71
      },
      "CommentCount" : 6
    },
    "chapter11/bridge/pom.xml" : {
      "ObjectId" : "b59b143e3683171e386954d05e6042f667d96b7e",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " openjpa needs to enahnce the JPA entity classes ",
        "Line" : 65,
        "CharPositionInLine" : 63
      },
      "1" : {
        "Text" : " Allows the example to be run via 'mvn clean install exec:java' ",
        "Line" : 87,
        "CharPositionInLine" : 78
      },
      "CommentCount" : 2
    },
    "chapter11/enrich/pom.xml" : {
      "ObjectId" : "6b3811cfd2b42dfff38bdcf11af887869441eb8a",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter11/errorhandler/pom.xml" : {
      "ObjectId" : "5ad2e50b6f6df5fe4a3f7b8de96b500a9ffe2949",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter11/newexception/pom.xml" : {
      "ObjectId" : "19ecc9b4574b73bc269769efbc9d905791d20dd0",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter11/onexception/pom.xml" : {
      "ObjectId" : "d3b6b8b0fb5bf99af05fbb756bed615d6bf38ef5",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter11/pom.xml" : {
      "ObjectId" : "2443795cc64024c3d3679201bef83f3be09a1d9e",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter11/reuse/pom.xml" : {
      "ObjectId" : "6511a5022182ff541a792c5004874d5a13ff8e07",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter11/usecase/pom.xml" : {
      "ObjectId" : "f44d2ea06cdc5589595fb23dc49139220a89f257",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Allows the example to be run via 'mvn compile exec:java' ",
        "Line" : 79,
        "CharPositionInLine" : 72
      },
      "CommentCount" : 1
    },
    "chapter12/hazelcast/pom.xml" : {
      "ObjectId" : "884ccc90013d49674e6ed0862f77cef5e4081417",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Allows the example to be run via 'mvn compile exec:java -Pfoo' ",
        "Line" : 57,
        "CharPositionInLine" : 78
      },
      "CommentCount" : 1
    },
    "chapter12/idempotent/pom.xml" : {
      "ObjectId" : "7c490d1c4dee4dc81ccf27d025134f31d814b1d4",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter12/pom.xml" : {
      "ObjectId" : "8d5fd7a0058c2e08cb56175a304cc86115cd30a7",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter12/propagation/pom.xml" : {
      "ObjectId" : "b84444307d44a52f463c776cd8135a2d059e8d20",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " atomikos is the XA transaction manager ",
        "Line" : 17,
        "CharPositionInLine" : 52
      },
      "CommentCount" : 1
    },
    "chapter12/riderautoparts-order/pom.xml" : {
      "ObjectId" : "f97538a557ebdc7e20e6c9022f859ef909be9219",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " for using JDBC ",
        "Line" : 28,
        "CharPositionInLine" : 28
      },
      "1" : {
        "Text" : " cxf using slf4j ",
        "Line" : 44,
        "CharPositionInLine" : 29
      },
      "2" : {
        "Text" : " using Jetty with CXF when running it with camel:run ",
        "Line" : 54,
        "CharPositionInLine" : 65
      },
      "3" : {
        "Text" : "  using the local transport for test ",
        "Line" : 61,
        "CharPositionInLine" : 49
      },
      "4" : {
        "Text" : " Allows the example to be run via 'mvn camel:run' ",
        "Line" : 86,
        "CharPositionInLine" : 64
      },
      "CommentCount" : 5
    },
    "chapter12/riderautoparts-partner-karaf/pom.xml" : {
      "ObjectId" : "d22da9c07f5a37743eaa67142f34e1b25099712c",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " to generate the OSGi bundle ",
        "Line" : 44,
        "CharPositionInLine" : 43
      },
      "1" : {
        "Text" : " to make loading the JDBC driver and connection pool possible ",
        "Line" : 52,
        "CharPositionInLine" : 82
      },
      "2" : {
        "Text" : " to filter the features.xml ",
        "Line" : 63,
        "CharPositionInLine" : 42
      },
      "3" : {
        "Text" : " here the phase you need ",
        "Line" : 71,
        "CharPositionInLine" : 45
      },
      "4" : {
        "Text" : " to attach the features.xml file so its easy to install in karaf ",
        "Line" : 89,
        "CharPositionInLine" : 79
      },
      "CommentCount" : 5
    },
    "chapter12/riderautoparts-partner/pom.xml" : {
      "ObjectId" : "04e9b1958bb89c602790303a70ee713e835776d9",
      "LastModified" : "2018-12-24T11:51:29Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " include JMS api as we use that directly when using Client Acknowledge Mode ",
        "Line" : 34,
        "CharPositionInLine" : 88
      },
      "CommentCount" : 1
    },
    "chapter12/tx-database/pom.xml" : {
      "ObjectId" : "73901e4f9a4b89223aa5f9c301e8947751ad456d",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter12/uow/pom.xml" : {
      "ObjectId" : "4ae5ef175add4cede032393d39d303374349a968",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Allows the example to be run via 'mvn compile exec:java' ",
        "Line" : 68,
        "CharPositionInLine" : 76
      },
      "1" : {
        "Text" : " Allows the example to be run via 'mvn compile exec:java -Pspring' ",
        "Line" : 84,
        "CharPositionInLine" : 85
      },
      "CommentCount" : 2
    },
    "chapter12/xa-database/pom.xml" : {
      "ObjectId" : "2c490461f73ff3f1f0e18c1d8fa41f5a0b64c276",
      "LastModified" : "2018-12-24T11:51:29Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " atomikos is the XA transaction manager ",
        "Line" : 17,
        "CharPositionInLine" : 52
      },
      "1" : {
        "Text" : " need to run unit tests per test ",
        "Line" : 142,
        "CharPositionInLine" : 47
      },
      "CommentCount" : 2
    },
    "chapter12/xa-karaf/pom.xml" : {
      "ObjectId" : "e8a66f6f808cd91480f8cdcfb7d43e66d0960cdb",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " to generate the OSGi bundle ",
        "Line" : 44,
        "CharPositionInLine" : 43
      },
      "1" : {
        "Text" : " to make loading the JDBC driver and connection pool possible ",
        "Line" : 52,
        "CharPositionInLine" : 82
      },
      "2" : {
        "Text" : " to filter the features.xml ",
        "Line" : 63,
        "CharPositionInLine" : 42
      },
      "3" : {
        "Text" : " here the phase you need ",
        "Line" : 71,
        "CharPositionInLine" : 45
      },
      "4" : {
        "Text" : " to attach the features.xml file so its easy to install in karaf ",
        "Line" : 89,
        "CharPositionInLine" : 79
      },
      "CommentCount" : 5
    },
    "chapter12/xa/pom.xml" : {
      "ObjectId" : "d12fa7af451ff8e1b3e1d016ae804e259a23e6ab",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " atomikos is the XA transaction manager ",
        "Line" : 17,
        "CharPositionInLine" : 52
      },
      "1" : {
        "Text" : " ActiveMQ is JMS 1.1 spec ",
        "Line" : 38,
        "CharPositionInLine" : 42
      },
      "2" : {
        "Text" : " need to run unit tests per test ",
        "Line" : 166,
        "CharPositionInLine" : 47
      },
      "CommentCount" : 3
    },
    "chapter13/bigfile/pom.xml" : {
      "ObjectId" : "32d5cf0533fac5cdc9664ed53896fe5858593df4",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Allows the example to be run via 'mvn compile exec:java' ",
        "Line" : 83,
        "CharPositionInLine" : 72
      },
      "CommentCount" : 1
    },
    "chapter13/eip/pom.xml" : {
      "ObjectId" : "92a4c859f67ecd2aba6363f840789a05166bd1c1",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter13/pom.xml" : {
      "ObjectId" : "0579a1f85d358541e6bc7d143a98f804565cb797",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter13/pools/pom.xml" : {
      "ObjectId" : "e025b8e487e83680bd1c879eb1322819a213da7f",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter13/scalability/pom.xml" : {
      "ObjectId" : "3cbf13e36e64de25163d23b0c4a282bb3adafc07",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " use the Camel apt compiler plugin ",
        "Line" : 23,
        "CharPositionInLine" : 47
      },
      "1" : {
        "Text" : " use Camel plugins to generate component details ",
        "Line" : 66,
        "CharPositionInLine" : 63
      },
      "CommentCount" : 2
    },
    "chapter14/configuration/pom.xml" : {
      "ObjectId" : "cb478c6e33e2fa68e9c36c6ac58515fed2e90bbb",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " for simulating with a FTP server ",
        "Line" : 36,
        "CharPositionInLine" : 46
      },
      "1" : {
        "Text" : " ftpserver using mina 2.0.0-M4 ",
        "Line" : 45,
        "CharPositionInLine" : 43
      },
      "CommentCount" : 2
    },
    "chapter14/payload/pom.xml" : {
      "ObjectId" : "99718c25b410b57231d8d7ce0e87ef12054d5d7d",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter14/pom.xml" : {
      "ObjectId" : "431b16e3f6f17b8a53e0fea39119d6940ebb1097",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter14/route/pom.xml" : {
      "ObjectId" : "4ef5e9b35acb3854261f5b383c5be942d8ef90cc",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter14/transport/pom.xml" : {
      "ObjectId" : "1b498ead37e8219644348829565541ebb6ff5ad3",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter14/webservice-karaf/pom.xml" : {
      "ObjectId" : "72f5f398c624ce68f0215693fb3c971b1d7af283",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " testing ",
        "Line" : 58,
        "CharPositionInLine" : 21
      },
      "1" : {
        "Text" : " to generate the MANIFEST-FILE of the bundle ",
        "Line" : 75,
        "CharPositionInLine" : 59
      },
      "2" : {
        "Text" : " to run the example using mvn camel:run ",
        "Line" : 90,
        "CharPositionInLine" : 54
      },
      "CommentCount" : 3
    },
    "chapter14/webservice/pom.xml" : {
      "ObjectId" : "58861a4a413bc8faa35793a29def83289b21c853",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " to generate the MANIFEST-FILE of the bundle ",
        "Line" : 66,
        "CharPositionInLine" : 59
      },
      "1" : {
        "Text" : " to run the example using mvn camel:run ",
        "Line" : 81,
        "CharPositionInLine" : 54
      },
      "CommentCount" : 2
    },
    "chapter15/cdi/pom.xml" : {
      "ObjectId" : "6cb007dc5ed7c09fc8c877b7e3aa82ca12d14746",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Dependency Management ",
        "Line" : 52,
        "CharPositionInLine" : 33
      },
      "1" : {
        "Text" : " WildFly Camel ",
        "Line" : 55,
        "CharPositionInLine" : 29
      },
      "2" : {
        "Text" : " Profiles ",
        "Line" : 72,
        "CharPositionInLine" : 20
      },
      "CommentCount" : 3
    },
    "chapter15/controlbus/pom.xml" : {
      "ObjectId" : "279b40a687e76526cb16c32f32fc749b3c85aa89",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " testing ",
        "Line" : 42,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 1
    },
    "chapter15/osgi-msf/pom.xml" : {
      "ObjectId" : "f35e9e4a7c81b6d9a63df8364ffcecdea3692bb0",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " needed to run CXF standalone with Jetty as HTTP server ",
        "Line" : 53,
        "CharPositionInLine" : 68
      },
      "1" : {
        "Text" : " testing ",
        "Line" : 60,
        "CharPositionInLine" : 21
      },
      "2" : {
        "Text" : " to generate the MANIFEST.MF file for the OSGi bundle ",
        "Line" : 79,
        "CharPositionInLine" : 68
      },
      "3" : {
        "Text" : " we need to export these two packages so the route can be started \n              and that Apache CXF can access the generated model objects ",
        "Line" : 91,
        "CharPositionInLine" : 77
      },
      "4" : {
        "Text" : " to generate wsdl to java ",
        "Line" : 101,
        "CharPositionInLine" : 40
      },
      "CommentCount" : 5
    },
    "chapter15/osgi/pom.xml" : {
      "ObjectId" : "e86d6047a1c43487a2b5e4ba53b80f9bfcc7cb1f",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " needed to run CXF standalone with Jetty as HTTP server ",
        "Line" : 44,
        "CharPositionInLine" : 68
      },
      "1" : {
        "Text" : " testing ",
        "Line" : 51,
        "CharPositionInLine" : 21
      },
      "2" : {
        "Text" : " to generate the MANIFEST.MF file for the OSGi bundle ",
        "Line" : 70,
        "CharPositionInLine" : 68
      },
      "3" : {
        "Text" : " we need to export these two packages so the route can be started \n              and that Apache CXF can access the generated model objects ",
        "Line" : 82,
        "CharPositionInLine" : 77
      },
      "4" : {
        "Text" : " to generate wsdl to java ",
        "Line" : 92,
        "CharPositionInLine" : 40
      },
      "CommentCount" : 5
    },
    "chapter15/pom.xml" : {
      "ObjectId" : "0b99955884c8243f5a0d2a9b3fdf228e2d5eedbe",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter15/routepolicy/pom.xml" : {
      "ObjectId" : "5930a575715b319f7007e1bcfa7daaaf9068978b",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " testing ",
        "Line" : 38,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 1
    },
    "chapter15/shutdown/pom.xml" : {
      "ObjectId" : "c647cf37417c63a389787a9921f49d7e2b829eda",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " testing ",
        "Line" : 42,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 1
    },
    "chapter15/standalone/pom.xml" : {
      "ObjectId" : "7dff2d4e454b20846e7f38cacdd835d08ebd3fb8",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " needed to run CXF standalone with Jetty as HTTP server ",
        "Line" : 43,
        "CharPositionInLine" : 68
      },
      "1" : {
        "Text" : " testing ",
        "Line" : 50,
        "CharPositionInLine" : 21
      },
      "2" : {
        "Text" : " to generate wsdl to java ",
        "Line" : 67,
        "CharPositionInLine" : 40
      },
      "3" : {
        "Text" : " to allow to run mvn camel:run ",
        "Line" : 91,
        "CharPositionInLine" : 45
      },
      "4" : {
        "Text" : " Allows the example to be run via 'mvn compile exec:java' ",
        "Line" : 97,
        "CharPositionInLine" : 72
      },
      "5" : {
        "Text" : " notice how we have define the mainClass ",
        "Line" : 98,
        "CharPositionInLine" : 55
      },
      "6" : {
        "Text" : " to package the jar with a MANIFEST.MF with classpath and MainClass entry ",
        "Line" : 108,
        "CharPositionInLine" : 88
      },
      "CommentCount" : 7
    },
    "chapter15/startup/pom.xml" : {
      "ObjectId" : "d95517df6eea5cf5f81eae1178d64b6b00fcc6d3",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " testing ",
        "Line" : 42,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 1
    },
    "chapter15/war-servlet/pom.xml" : {
      "ObjectId" : "4c2ceb2030bb14c95666268b1c64bbc7826df33e",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " using http servlet transports ",
        "Line" : 48,
        "CharPositionInLine" : 43
      },
      "1" : {
        "Text" : " testing ",
        "Line" : 55,
        "CharPositionInLine" : 21
      },
      "2" : {
        "Text" : " to generate wsdl to java ",
        "Line" : 72,
        "CharPositionInLine" : 40
      },
      "3" : {
        "Text" : " to allow to run mvn jetty:run ",
        "Line" : 96,
        "CharPositionInLine" : 45
      },
      "CommentCount" : 4
    },
    "chapter15/war-wildfly/pom.xml" : {
      "ObjectId" : "af3044b813af3e529e9bea0f4d9f4dc0340a47d0",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " using http servlet transports ",
        "Line" : 48,
        "CharPositionInLine" : 43
      },
      "1" : {
        "Text" : " testing ",
        "Line" : 55,
        "CharPositionInLine" : 21
      },
      "2" : {
        "Text" : " to generate wsdl to java ",
        "Line" : 72,
        "CharPositionInLine" : 40
      },
      "CommentCount" : 3
    },
    "chapter15/war/pom.xml" : {
      "ObjectId" : "144761a5d001f7570fb294ecafdf859a0eba5948",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " needed to run CXF standalone with Jetty as HTTP server ",
        "Line" : 48,
        "CharPositionInLine" : 68
      },
      "1" : {
        "Text" : " testing ",
        "Line" : 55,
        "CharPositionInLine" : 21
      },
      "2" : {
        "Text" : " to generate wsdl to java ",
        "Line" : 72,
        "CharPositionInLine" : 40
      },
      "3" : {
        "Text" : " to allow to run mvn jetty:run ",
        "Line" : 96,
        "CharPositionInLine" : 45
      },
      "CommentCount" : 4
    },
    "chapter15/wildfly-camel-war/pom.xml" : {
      "ObjectId" : "ee85a901bfb9c1197965a9afab40810f8e444cd1",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " using http servlet transports ",
        "Line" : 48,
        "CharPositionInLine" : 43
      },
      "1" : {
        "Text" : " testing ",
        "Line" : 56,
        "CharPositionInLine" : 21
      },
      "2" : {
        "Text" : " to generate wsdl to java ",
        "Line" : 73,
        "CharPositionInLine" : 40
      },
      "3" : {
        "Text" : " Profiles ",
        "Line" : 107,
        "CharPositionInLine" : 20
      },
      "CommentCount" : 4
    },
    "chapter16/controlbus/pom.xml" : {
      "ObjectId" : "f06ca03f17e90b4b23487285f6a2538770b93b48",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " testing ",
        "Line" : 38,
        "CharPositionInLine" : 21
      },
      "1" : {
        "Text" : " Allows the example to be run via 'mvn compile exec:java' ",
        "Line" : 60,
        "CharPositionInLine" : 72
      },
      "CommentCount" : 2
    },
    "chapter16/custom-bean/pom.xml" : {
      "ObjectId" : "3971539bb000219c344436587aef9dcb456d282d",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " testing ",
        "Line" : 33,
        "CharPositionInLine" : 21
      },
      "1" : {
        "Text" : " Allows the example to be run via 'mvn compile exec:java' ",
        "Line" : 52,
        "CharPositionInLine" : 72
      },
      "CommentCount" : 2
    },
    "chapter16/custom/pom.xml" : {
      "ObjectId" : "61388a542b5d4c7ac27d35722e5e550264735a28",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " testing ",
        "Line" : 33,
        "CharPositionInLine" : 21
      },
      "1" : {
        "Text" : " Allows the example to be run via 'mvn compile exec:java' ",
        "Line" : 52,
        "CharPositionInLine" : 72
      },
      "CommentCount" : 2
    },
    "chapter16/health/pom.xml" : {
      "ObjectId" : "2c13102a087f0c57c5c32fc10df226f10da67b7f",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " testing ",
        "Line" : 43,
        "CharPositionInLine" : 21
      },
      "1" : {
        "Text" : " Allows the example to be run via 'mvn compile exec:java' ",
        "Line" : 60,
        "CharPositionInLine" : 72
      },
      "CommentCount" : 2
    },
    "chapter16/jmx-camel/pom.xml" : {
      "ObjectId" : "497351a0f38e90b7386966524f41dd8932274ba3",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter16/jmx-client/pom.xml" : {
      "ObjectId" : "04ed2ac6fe3dc87b803efa7fa8f1e10f16788414",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Allows the example to be run via 'mvn compile exec:java -Pserver' ",
        "Line" : 58,
        "CharPositionInLine" : 81
      },
      "1" : {
        "Text" : " Allows the example to be run via 'mvn compile exec:java -Pclient' ",
        "Line" : 59,
        "CharPositionInLine" : 81
      },
      "2" : {
        "Text" : " Allows the example to be run via 'mvn compile exec:java -Pclient2' ",
        "Line" : 60,
        "CharPositionInLine" : 82
      },
      "CommentCount" : 3
    },
    "chapter16/jolokia-embedded-war/pom.xml" : {
      "ObjectId" : "e73219b7aa116056c0a599b6d8d8b3328f76baa3",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " we need spring web ",
        "Line" : 34,
        "CharPositionInLine" : 32
      },
      "1" : {
        "Text" : " embed Jolokia into our WAR ",
        "Line" : 50,
        "CharPositionInLine" : 40
      },
      "2" : {
        "Text" : " allows running this example with mvn jetty:run ",
        "Line" : 63,
        "CharPositionInLine" : 62
      },
      "CommentCount" : 3
    },
    "chapter16/jolokia-karaf/pom.xml" : {
      "ObjectId" : "1669a5a0790ec81cd28732b9c3cf0adae5d321fa",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " testing ",
        "Line" : 36,
        "CharPositionInLine" : 21
      },
      "1" : {
        "Text" : " to generate the MANIFEST-FILE of the bundle ",
        "Line" : 53,
        "CharPositionInLine" : 59
      },
      "2" : {
        "Text" : " to run the example using mvn camel:run ",
        "Line" : 68,
        "CharPositionInLine" : 54
      },
      "CommentCount" : 3
    },
    "chapter16/jolokia/pom.xml" : {
      "ObjectId" : "f4a9452fc400344e74db1b7fe12ca115c2fd9c6e",
      "LastModified" : "2018-12-24T13:57:00Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " testing ",
        "Line" : 43,
        "CharPositionInLine" : 21
      },
      "1" : {
        "Text" : " Allows the example to be run via 'mvn compile exec:exec' ",
        "Line" : 60,
        "CharPositionInLine" : 72
      },
      "CommentCount" : 2
    },
    "chapter16/logging/pom.xml" : {
      "ObjectId" : "b5679569930794355fbe7494f4a4e3da0cf969d7",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " testing ",
        "Line" : 38,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 1
    },
    "chapter16/metrics/pom.xml" : {
      "ObjectId" : "b1436a38b05c6ab65062f989d6f6261e54474196",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " to run the application with hawtio web console with: mvn hawtio:run ",
        "Line" : 50,
        "CharPositionInLine" : 83
      },
      "CommentCount" : 1
    },
    "chapter16/notifier/pom.xml" : {
      "ObjectId" : "ce9852aa503cf400dbd7fcf9b540677814ab0ec5",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " testing ",
        "Line" : 38,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 1
    },
    "chapter16/pom.xml" : {
      "ObjectId" : "db9d2372f3dd35b84ff96b4a83b0d0980ffa191b",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter17/cluster-cache-hazelcast/pom.xml" : {
      "ObjectId" : "839323f88e44101e107031059d02bbc8252ceaa9",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Allows the example to be run via 'mvn compile exec:java -Pfoo' ",
        "Line" : 76,
        "CharPositionInLine" : 78
      },
      "CommentCount" : 1
    },
    "chapter17/cluster-file-consul/pom.xml" : {
      "ObjectId" : "f611cf3e0f5f81891387e3ddd1977d2941cc9742",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Allows the example to be run via 'mvn compile exec:java -Pfoo' ",
        "Line" : 57,
        "CharPositionInLine" : 78
      },
      "CommentCount" : 1
    },
    "chapter17/cluster-file-hazelcast/pom.xml" : {
      "ObjectId" : "1340cfc1ac95a8de159747f9b73b52a15b0c6b6a",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Allows the example to be run via 'mvn compile exec:java -Pfoo' ",
        "Line" : 57,
        "CharPositionInLine" : 78
      },
      "CommentCount" : 1
    },
    "chapter17/cluster-file-infinispan/pom.xml" : {
      "ObjectId" : "b48d57f50687378c4b030bd81aac356a1e74c703",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Allows the example to be run via 'mvn compile exec:java -Pfoo' ",
        "Line" : 57,
        "CharPositionInLine" : 78
      },
      "CommentCount" : 1
    },
    "chapter17/cluster-jcache/pom.xml" : {
      "ObjectId" : "8e9d478ecbe515bb671db762031b59e066a06839",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " use infinispan remote as jcache provider ",
        "Line" : 28,
        "CharPositionInLine" : 54
      },
      "1" : {
        "Text" : " Allows the example to be run via 'mvn compile exec:java -Pfoo' ",
        "Line" : 69,
        "CharPositionInLine" : 78
      },
      "CommentCount" : 2
    },
    "chapter17/cluster-jms-client/pom.xml" : {
      "ObjectId" : "840b4d2f48a9615d22fd50dd3d5c486e48435b71",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Camel ",
        "Line" : 18,
        "CharPositionInLine" : 19
      },
      "1" : {
        "Text" : " AcitveMQ JMS client with connection pool ",
        "Line" : 32,
        "CharPositionInLine" : 54
      },
      "2" : {
        "Text" : " logging ",
        "Line" : 44,
        "CharPositionInLine" : 21
      },
      "3" : {
        "Text" : " Allows the routes to be run via 'mvn camel:run' ",
        "Line" : 59,
        "CharPositionInLine" : 63
      },
      "CommentCount" : 4
    },
    "chapter17/cluster-kafka/pom.xml" : {
      "ObjectId" : "372a3b76954e893c0922538fc476892af2bfc303",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Camel ",
        "Line" : 18,
        "CharPositionInLine" : 19
      },
      "1" : {
        "Text" : " logging ",
        "Line" : 32,
        "CharPositionInLine" : 21
      },
      "2" : {
        "Text" : " to produce messages to Kafka run `mvn compile exec:java -P producer` ",
        "Line" : 46,
        "CharPositionInLine" : 82
      },
      "3" : {
        "Text" : " to consumes messages to Kafka run `mvn compile exec:java -P foo` ",
        "Line" : 54,
        "CharPositionInLine" : 78
      },
      "4" : {
        "Text" : " to consumes messages to Kafka run `mvn compile exec:java -P bar` ",
        "Line" : 62,
        "CharPositionInLine" : 78
      },
      "CommentCount" : 5
    },
    "chapter17/cluster-quartz2/pom.xml" : {
      "ObjectId" : "1f243c709a180a041ebc9229f783b6a8920675e1",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " postgres sql driver ",
        "Line" : 28,
        "CharPositionInLine" : 33
      },
      "1" : {
        "Text" : " use spring jdbc to init the database ",
        "Line" : 35,
        "CharPositionInLine" : 50
      },
      "2" : {
        "Text" : " Allows the example to be run via 'mvn compile exec:java -Pfoo' ",
        "Line" : 77,
        "CharPositionInLine" : 78
      },
      "CommentCount" : 3
    },
    "chapter17/cluster-servicecall/bar-server/pom.xml" : {
      "ObjectId" : "cee3ad9027faa6f5d3cb5919424714ea3eaeff8d",
      "LastModified" : "2018-12-24T11:51:29Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Spring Boot BOM ",
        "Line" : 18,
        "CharPositionInLine" : 31
      },
      "1" : {
        "Text" : " Camel BOM ",
        "Line" : 26,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : " Spring Boot ",
        "Line" : 39,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : " Camel ",
        "Line" : 57,
        "CharPositionInLine" : 19
      },
      "CommentCount" : 4
    },
    "chapter17/cluster-servicecall/client-consul/pom.xml" : {
      "ObjectId" : "49ae2a56a74d1ead141980a4f8d2329daadff249",
      "LastModified" : "2018-12-24T11:51:29Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Spring Boot BOM ",
        "Line" : 22,
        "CharPositionInLine" : 31
      },
      "1" : {
        "Text" : " Camel BOM ",
        "Line" : 37,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : " Spring Boot ",
        "Line" : 50,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : " Camel ",
        "Line" : 68,
        "CharPositionInLine" : 19
      },
      "CommentCount" : 4
    },
    "chapter17/cluster-servicecall/client-static-xml/pom.xml" : {
      "ObjectId" : "dd1b8a2ed4e9a051f5104e2a45ee50a01fb4f356",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Camel ",
        "Line" : 18,
        "CharPositionInLine" : 19
      },
      "1" : {
        "Text" : " logging ",
        "Line" : 32,
        "CharPositionInLine" : 21
      },
      "2" : {
        "Text" : " Allows the routes to be run via 'mvn camel:run -P embedded' ",
        "Line" : 49,
        "CharPositionInLine" : 79
      },
      "3" : {
        "Text" : " Allows the routes to be run via 'mvn camel:run -P global' ",
        "Line" : 65,
        "CharPositionInLine" : 77
      },
      "CommentCount" : 4
    },
    "chapter17/cluster-servicecall/client-static/pom.xml" : {
      "ObjectId" : "aaa5347d2d63e6641a143a3767d21f90c7baa02d",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Camel ",
        "Line" : 18,
        "CharPositionInLine" : 19
      },
      "1" : {
        "Text" : " logging ",
        "Line" : 28,
        "CharPositionInLine" : 21
      },
      "2" : {
        "Text" : " Allows the routes to be run via 'mvn camel:run -P embedded' ",
        "Line" : 45,
        "CharPositionInLine" : 79
      },
      "3" : {
        "Text" : " Allows the routes to be run via 'mvn camel:run -P global' ",
        "Line" : 61,
        "CharPositionInLine" : 77
      },
      "CommentCount" : 4
    },
    "chapter17/cluster-servicecall/foo-server/pom.xml" : {
      "ObjectId" : "802ab56db76f40210a48e291715e28ce416e2c8a",
      "LastModified" : "2018-12-24T11:51:29Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Spring Boot BOM ",
        "Line" : 18,
        "CharPositionInLine" : 31
      },
      "1" : {
        "Text" : " Camel BOM ",
        "Line" : 26,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : " Spring Boot ",
        "Line" : 39,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : " Camel ",
        "Line" : 57,
        "CharPositionInLine" : 19
      },
      "CommentCount" : 4
    },
    "chapter17/cluster-servicecall/pom.xml" : {
      "ObjectId" : "3434270bbe65167b973d29e2091fa41cc7ce85ba",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter17/cluster-zookeeper-master-routepolicy/pom.xml" : {
      "ObjectId" : "4f34572058d751ba8ff1706345a4db2149b2b488",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Camel ",
        "Line" : 18,
        "CharPositionInLine" : 19
      },
      "1" : {
        "Text" : " logging ",
        "Line" : 28,
        "CharPositionInLine" : 21
      },
      "2" : {
        "Text" : " Allows the example to be run via 'mvn compile exec:java -Pfoo' ",
        "Line" : 57,
        "CharPositionInLine" : 78
      },
      "CommentCount" : 3
    },
    "chapter17/cluster-zookeeper-master/pom.xml" : {
      "ObjectId" : "dfcbe352919ee3123b4200310188941cb80d6138",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Camel ",
        "Line" : 18,
        "CharPositionInLine" : 19
      },
      "1" : {
        "Text" : " logging ",
        "Line" : 28,
        "CharPositionInLine" : 21
      },
      "2" : {
        "Text" : " Allows the example to be run via 'mvn compile exec:java -Pfoo' ",
        "Line" : 57,
        "CharPositionInLine" : 78
      },
      "CommentCount" : 3
    },
    "chapter17/pom.xml" : {
      "ObjectId" : "ec50dbbb9bb07bd1536af12aa699ea6f91677c9a",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter18/docker/client-spring/pom.xml" : {
      "ObjectId" : "e7eeba939a7460b6107d09dd9ff690824bb16cbd",
      "LastModified" : "2019-04-08T09:14:04Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " import Spring Boot before Camel ",
        "Line" : 29,
        "CharPositionInLine" : 47
      },
      "1" : {
        "Text" : " import Camel ",
        "Line" : 37,
        "CharPositionInLine" : 28
      },
      "2" : {
        "Text" : " spring-boot ",
        "Line" : 50,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : " notice we do not use the -web as we just run spring boot minimal without a HTTP server ",
        "Line" : 52,
        "CharPositionInLine" : 100
      },
      "4" : {
        "Text" : " camel ",
        "Line" : 58,
        "CharPositionInLine" : 19
      },
      "5" : {
        "Text" : " notice we use -starter components from Camel which are designed to use with Spring Boot ",
        "Line" : 63,
        "CharPositionInLine" : 101
      },
      "6" : {
        "Text" : " docker-maven-plugin which builds the docker image ",
        "Line" : 85,
        "CharPositionInLine" : 65
      },
      "7" : {
        "Text" : " command to run the uber jar ",
        "Line" : 99,
        "CharPositionInLine" : 53
      },
      "CommentCount" : 8
    },
    "chapter18/docker/hello-swarm/pom.xml" : {
      "ObjectId" : "a313e58e5334c6789258f3777f50ce20568adac4",
      "LastModified" : "2019-04-08T09:14:04Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " favor IPv4Stack as IP6 can cause trobule on some operating systems and WildFly-Swarm ",
        "Line" : 56,
        "CharPositionInLine" : 102
      },
      "1" : {
        "Text" : " docker-maven-plugin which builds the docker image ",
        "Line" : 64,
        "CharPositionInLine" : 65
      },
      "2" : {
        "Text" : " need to inline an assembly because wildfly-swarm generate the uberjar with -swarm\n                       and docker-maven-plugin includes the non uber jar by default ",
        "Line" : 77,
        "CharPositionInLine" : 88
      },
      "3" : {
        "Text" : " command to run the uber jar ",
        "Line" : 90,
        "CharPositionInLine" : 53
      },
      "4" : {
        "Text" : " port mapping to call external->internal port in the container,\n                     usually you map the same port export->internal ",
        "Line" : 95,
        "CharPositionInLine" : 72
      },
      "5" : {
        "Text" : " Java EE 7 dependency ",
        "Line" : 109,
        "CharPositionInLine" : 34
      },
      "6" : {
        "Text" : " Wildfly Swarm Fractions ",
        "Line" : 116,
        "CharPositionInLine" : 37
      },
      "CommentCount" : 7
    },
    "chapter18/docker/pom.xml" : {
      "ObjectId" : "885f49fc9cc97203b61ca3cb481bdc46f8176af0",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter18/kubernetes/client-spring-health/pom.xml" : {
      "ObjectId" : "7d2614e86c3b3b760a944fe8da8d9d4c0f539d0f",
      "LastModified" : "2018-12-24T11:51:29Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " use SNAPSHOT so f-m-p create a new docker image with a new unique tag ",
        "Line" : 14,
        "CharPositionInLine" : 81
      },
      "1" : {
        "Text" : " import Spring Boot before Camel ",
        "Line" : 28,
        "CharPositionInLine" : 47
      },
      "2" : {
        "Text" : " import Camel ",
        "Line" : 36,
        "CharPositionInLine" : 28
      },
      "3" : {
        "Text" : " spring-boot ",
        "Line" : 49,
        "CharPositionInLine" : 25
      },
      "4" : {
        "Text" : " notice we use -web to embed HTTP server for health checks ",
        "Line" : 51,
        "CharPositionInLine" : 71
      },
      "5" : {
        "Text" : " turn on health check ",
        "Line" : 61,
        "CharPositionInLine" : 34
      },
      "6" : {
        "Text" : " camel ",
        "Line" : 67,
        "CharPositionInLine" : 19
      },
      "7" : {
        "Text" : " notice we use -starter components from Camel which are designed to use with Spring Boot ",
        "Line" : 72,
        "CharPositionInLine" : 101
      },
      "CommentCount" : 8
    },
    "chapter18/kubernetes/client-spring-servicecall/pom.xml" : {
      "ObjectId" : "61ddae640a9cf0308c874be468a3f1216b343ca1",
      "LastModified" : "2018-12-24T11:51:29Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " use SNAPSHOT so f-m-p create a new docker image with a new unique tag ",
        "Line" : 14,
        "CharPositionInLine" : 81
      },
      "1" : {
        "Text" : " import Spring Boot before Camel ",
        "Line" : 28,
        "CharPositionInLine" : 47
      },
      "2" : {
        "Text" : " import Camel ",
        "Line" : 36,
        "CharPositionInLine" : 28
      },
      "3" : {
        "Text" : " spring-boot ",
        "Line" : 49,
        "CharPositionInLine" : 25
      },
      "4" : {
        "Text" : " notice we do not use the -web as we just run spring boot minimal without a HTTP server ",
        "Line" : 51,
        "CharPositionInLine" : 100
      },
      "5" : {
        "Text" : " camel ",
        "Line" : 57,
        "CharPositionInLine" : 19
      },
      "6" : {
        "Text" : " notice we use -starter components from Camel which are designed to use with Spring Boot ",
        "Line" : 62,
        "CharPositionInLine" : 101
      },
      "CommentCount" : 7
    },
    "chapter18/kubernetes/client-spring-test/pom.xml" : {
      "ObjectId" : "b88cf21a0107a00396b89719b8fe2080c2a120cd",
      "LastModified" : "2018-12-24T11:51:29Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " use SNAPSHOT so f-m-p create a new docker image with a new unique tag ",
        "Line" : 14,
        "CharPositionInLine" : 81
      },
      "1" : {
        "Text" : " import Spring Boot before Camel ",
        "Line" : 29,
        "CharPositionInLine" : 47
      },
      "2" : {
        "Text" : " import Camel ",
        "Line" : 37,
        "CharPositionInLine" : 28
      },
      "3" : {
        "Text" : " include arquillian-cube BOM ",
        "Line" : 45,
        "CharPositionInLine" : 43
      },
      "4" : {
        "Text" : " spring-boot ",
        "Line" : 58,
        "CharPositionInLine" : 25
      },
      "5" : {
        "Text" : " notice we use -web to embed HTTP server for health checks ",
        "Line" : 60,
        "CharPositionInLine" : 71
      },
      "6" : {
        "Text" : " turn on health check ",
        "Line" : 70,
        "CharPositionInLine" : 34
      },
      "7" : {
        "Text" : " camel ",
        "Line" : 76,
        "CharPositionInLine" : 19
      },
      "8" : {
        "Text" : " notice we use -starter components from Camel which are designed to use with Spring Boot ",
        "Line" : 81,
        "CharPositionInLine" : 101
      },
      "9" : {
        "Text" : " arquillian and kubernetes ",
        "Line" : 87,
        "CharPositionInLine" : 39
      },
      "10" : {
        "Text" : " must use version 2.4.1 as 2.6.0 does not work with kubernetes-assertions: https://github.com/fabric8io/fabric8/issues/6863 ",
        "Line" : 99,
        "CharPositionInLine" : 136
      },
      "11" : {
        "Text" : " logging ",
        "Line" : 120,
        "CharPositionInLine" : 21
      },
      "12" : {
        "Text" : " run integration tests with mvn install -P kubernetes ",
        "Line" : 174,
        "CharPositionInLine" : 66
      },
      "13" : {
        "Text" : " lower timeout to 1m30s instead of the default 5 minutes ",
        "Line" : 193,
        "CharPositionInLine" : 81
      },
      "CommentCount" : 14
    },
    "chapter18/kubernetes/client-spring/pom.xml" : {
      "ObjectId" : "0a4d6d5b4e11be964cb44dee31e1bcf87525717d",
      "LastModified" : "2018-12-24T11:51:29Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " use SNAPSHOT so f-m-p create a new docker image with a new unique tag ",
        "Line" : 14,
        "CharPositionInLine" : 81
      },
      "1" : {
        "Text" : " import Spring Boot before Camel ",
        "Line" : 28,
        "CharPositionInLine" : 47
      },
      "2" : {
        "Text" : " import Camel ",
        "Line" : 36,
        "CharPositionInLine" : 28
      },
      "3" : {
        "Text" : " spring-boot ",
        "Line" : 49,
        "CharPositionInLine" : 25
      },
      "4" : {
        "Text" : " notice we do not use the -web as we just run spring boot minimal without a HTTP server ",
        "Line" : 51,
        "CharPositionInLine" : 100
      },
      "5" : {
        "Text" : " camel ",
        "Line" : 62,
        "CharPositionInLine" : 19
      },
      "6" : {
        "Text" : " notice we use -starter components from Camel which are designed to use with Spring Boot ",
        "Line" : 67,
        "CharPositionInLine" : 101
      },
      "CommentCount" : 7
    },
    "chapter18/kubernetes/client-spring2/pom.xml" : {
      "ObjectId" : "b8b7b5fa23df456417b5882afca5a0f2ba643979",
      "LastModified" : "2018-12-24T11:51:29Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " use SNAPSHOT so f-m-p create a new docker image with a new unique tag ",
        "Line" : 14,
        "CharPositionInLine" : 81
      },
      "1" : {
        "Text" : " import Spring Boot before Camel ",
        "Line" : 28,
        "CharPositionInLine" : 47
      },
      "2" : {
        "Text" : " import Camel ",
        "Line" : 36,
        "CharPositionInLine" : 28
      },
      "3" : {
        "Text" : " spring-boot ",
        "Line" : 49,
        "CharPositionInLine" : 25
      },
      "4" : {
        "Text" : " notice we do not use the -web as we just run spring boot minimal without a HTTP server ",
        "Line" : 51,
        "CharPositionInLine" : 100
      },
      "5" : {
        "Text" : " camel ",
        "Line" : 57,
        "CharPositionInLine" : 19
      },
      "6" : {
        "Text" : " notice we use -starter components from Camel which are designed to use with Spring Boot ",
        "Line" : 62,
        "CharPositionInLine" : 101
      },
      "CommentCount" : 7
    },
    "chapter18/kubernetes/client-spring3/pom.xml" : {
      "ObjectId" : "ecaf8d56e1143efd0ea2cd774428e87f14dbb1d2",
      "LastModified" : "2018-12-24T11:51:29Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " use SNAPSHOT so f-m-p create a new docker image with a new unique tag ",
        "Line" : 14,
        "CharPositionInLine" : 81
      },
      "1" : {
        "Text" : " import Spring Boot before Camel ",
        "Line" : 28,
        "CharPositionInLine" : 47
      },
      "2" : {
        "Text" : " import Camel ",
        "Line" : 36,
        "CharPositionInLine" : 28
      },
      "3" : {
        "Text" : " spring-boot ",
        "Line" : 49,
        "CharPositionInLine" : 25
      },
      "4" : {
        "Text" : " notice we do not use the -web as we just run spring boot minimal without a HTTP server ",
        "Line" : 51,
        "CharPositionInLine" : 100
      },
      "5" : {
        "Text" : " camel ",
        "Line" : 57,
        "CharPositionInLine" : 19
      },
      "6" : {
        "Text" : " notice we use -starter components from Camel which are designed to use with Spring Boot ",
        "Line" : 62,
        "CharPositionInLine" : 101
      },
      "7" : {
        "Text" : " use hystrix circuit breaker ",
        "Line" : 67,
        "CharPositionInLine" : 41
      },
      "CommentCount" : 8
    },
    "chapter18/kubernetes/hello-swarm-docker/pom.xml" : {
      "ObjectId" : "af1f3ec5cf1f9fce93a7f01a07b684055e96b90e",
      "LastModified" : "2018-12-24T11:51:29Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " use 2.0 so we have an easy version number ",
        "Line" : 14,
        "CharPositionInLine" : 53
      },
      "1" : {
        "Text" : " favor IPv4Stack as IP6 can cause trobule on some operating systems and WildFly-Swarm ",
        "Line" : 55,
        "CharPositionInLine" : 102
      },
      "2" : {
        "Text" : " Java EE 7 dependency ",
        "Line" : 81,
        "CharPositionInLine" : 34
      },
      "3" : {
        "Text" : " Wildfly Swarm Fractions ",
        "Line" : 88,
        "CharPositionInLine" : 37
      },
      "CommentCount" : 4
    },
    "chapter18/kubernetes/hello-swarm-test/pom.xml" : {
      "ObjectId" : "e4fde3a4b7636cb16a951b65ea511f6d68e182ab",
      "LastModified" : "2018-12-24T11:51:29Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " use SNAPSHOT so f-m-p create a new docker image with a new unique tag ",
        "Line" : 14,
        "CharPositionInLine" : 81
      },
      "1" : {
        "Text" : " include arquillian-cube BOM ",
        "Line" : 38,
        "CharPositionInLine" : 43
      },
      "2" : {
        "Text" : " favor IPv4Stack as IP6 can cause trobule on some operating systems and WildFly-Swarm ",
        "Line" : 66,
        "CharPositionInLine" : 102
      },
      "3" : {
        "Text" : " Java EE 7 dependency ",
        "Line" : 92,
        "CharPositionInLine" : 34
      },
      "4" : {
        "Text" : " Wildfly Swarm Fractions ",
        "Line" : 99,
        "CharPositionInLine" : 37
      },
      "5" : {
        "Text" : " include monitor fraction so we have health-check on /health included ",
        "Line" : 101,
        "CharPositionInLine" : 82
      },
      "6" : {
        "Text" : " camel ",
        "Line" : 107,
        "CharPositionInLine" : 19
      },
      "7" : {
        "Text" : " arquillian and kubernetes ",
        "Line" : 117,
        "CharPositionInLine" : 39
      },
      "8" : {
        "Text" : " logging ",
        "Line" : 143,
        "CharPositionInLine" : 21
      },
      "9" : {
        "Text" : " run integration tests with mvn integration-test -P kubernetes ",
        "Line" : 164,
        "CharPositionInLine" : 75
      },
      "10" : {
        "Text" : " lower timeout to 1m30s instead of the default 5 minutes ",
        "Line" : 183,
        "CharPositionInLine" : 81
      },
      "CommentCount" : 11
    },
    "chapter18/kubernetes/hello-swarm/pom.xml" : {
      "ObjectId" : "841aaff7644d081a89c484d1edf1bd57166769cc",
      "LastModified" : "2018-12-24T11:51:29Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " use SNAPSHOT so f-m-p create a new docker image with a new unique tag ",
        "Line" : 14,
        "CharPositionInLine" : 81
      },
      "1" : {
        "Text" : " favor IPv4Stack as IP6 can cause trobule on some operating systems and WildFly-Swarm ",
        "Line" : 55,
        "CharPositionInLine" : 102
      },
      "2" : {
        "Text" : " Java EE 7 dependency ",
        "Line" : 81,
        "CharPositionInLine" : 34
      },
      "3" : {
        "Text" : " Wildfly Swarm Fractions ",
        "Line" : 88,
        "CharPositionInLine" : 37
      },
      "CommentCount" : 4
    },
    "chapter18/kubernetes/hello-swarm2/pom.xml" : {
      "ObjectId" : "4921b4b6831bc0c1e42075d71df603aa0e98de51",
      "LastModified" : "2018-12-24T11:51:29Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " use SNAPSHOT so f-m-p create a new docker image with a new unique tag ",
        "Line" : 14,
        "CharPositionInLine" : 81
      },
      "1" : {
        "Text" : " favor IPv4Stack as IP6 can cause trobule on some operating systems and WildFly-Swarm ",
        "Line" : 55,
        "CharPositionInLine" : 102
      },
      "2" : {
        "Text" : " Java EE 7 dependency ",
        "Line" : 81,
        "CharPositionInLine" : 34
      },
      "3" : {
        "Text" : " Wildfly Swarm Fractions ",
        "Line" : 88,
        "CharPositionInLine" : 37
      },
      "4" : {
        "Text" : " add monitor fraction to enable health checks in wildfly-swarm ",
        "Line" : 89,
        "CharPositionInLine" : 75
      },
      "CommentCount" : 5
    },
    "chapter18/kubernetes/hello-swarm3/pom.xml" : {
      "ObjectId" : "2bf3e39462c9530b528b5acfd9bfdfb5bc232fa9",
      "LastModified" : "2018-12-24T11:51:29Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " use SNAPSHOT so f-m-p create a new docker image with a new unique tag ",
        "Line" : 14,
        "CharPositionInLine" : 81
      },
      "1" : {
        "Text" : " favor IPv4Stack as IP6 can cause trobule on some operating systems and WildFly-Swarm ",
        "Line" : 55,
        "CharPositionInLine" : 102
      },
      "2" : {
        "Text" : " Java EE 7 dependency ",
        "Line" : 81,
        "CharPositionInLine" : 34
      },
      "3" : {
        "Text" : " Wildfly Swarm Fractions ",
        "Line" : 88,
        "CharPositionInLine" : 37
      },
      "4" : {
        "Text" : " add monitor fraction to enable health checks in wildfly-swarm ",
        "Line" : 89,
        "CharPositionInLine" : 75
      },
      "CommentCount" : 5
    },
    "chapter18/kubernetes/pom.xml" : {
      "ObjectId" : "d5108f2c29b002260a72f2b9f815f7ac3470c64d",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " do not auto build as they require running kubernetes ",
        "Line" : 19,
        "CharPositionInLine" : 66
      },
      "CommentCount" : 1
    },
    "chapter18/pom.xml" : {
      "ObjectId" : "60b60871398cc6a32f7a92a696915f144c1b2563",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter18/standalone/client-spring/pom.xml" : {
      "ObjectId" : "8edef94ac42ba7b5ab655e209c692563dd52e30d",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " import Spring Boot before Camel ",
        "Line" : 27,
        "CharPositionInLine" : 47
      },
      "1" : {
        "Text" : " import Camel ",
        "Line" : 35,
        "CharPositionInLine" : 28
      },
      "2" : {
        "Text" : " spring-boot ",
        "Line" : 48,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : " notice we do not use the -web as we just run spring boot minimal without a HTTP server ",
        "Line" : 50,
        "CharPositionInLine" : 100
      },
      "4" : {
        "Text" : " camel ",
        "Line" : 56,
        "CharPositionInLine" : 19
      },
      "5" : {
        "Text" : " notice we use -starter components from Camel which are designed to use with Spring Boot ",
        "Line" : 61,
        "CharPositionInLine" : 101
      },
      "CommentCount" : 6
    },
    "chapter18/standalone/hello-swarm/pom.xml" : {
      "ObjectId" : "d0fbfd91935cce8ac8d199f21e9d0d714d14a97a",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Java EE 7 dependency ",
        "Line" : 57,
        "CharPositionInLine" : 34
      },
      "1" : {
        "Text" : " Wildfly Swarm Fractions ",
        "Line" : 64,
        "CharPositionInLine" : 37
      },
      "CommentCount" : 2
    },
    "chapter18/standalone/pom.xml" : {
      "ObjectId" : "ba94bb531ce2f55cdfb6cf7ac23f081d68ea2ee4",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter19/camel-maven-validate/pom.xml" : {
      "ObjectId" : "d1384b52442db1f59955acd071d9e51b6b499e37",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " logging ",
        "Line" : 23,
        "CharPositionInLine" : 21
      },
      "1" : {
        "Text" : " testing ",
        "Line" : 40,
        "CharPositionInLine" : 21
      },
      "2" : {
        "Text" : " run using camel:validate ",
        "Line" : 54,
        "CharPositionInLine" : 40
      },
      "3" : {
        "Text" : " lets not fail the build on errors ",
        "Line" : 62,
        "CharPositionInLine" : 57
      },
      "4" : {
        "Text" : " lets also check the unit test source code ",
        "Line" : 64,
        "CharPositionInLine" : 65
      },
      "5" : {
        "Text" : " validate during build of the project ",
        "Line" : 67,
        "CharPositionInLine" : 58
      },
      "6" : {
        "Text" : " Allows the example to be run via 'mvn compile exec:java' ",
        "Line" : 93,
        "CharPositionInLine" : 72
      },
      "CommentCount" : 7
    },
    "chapter19/eclipse-camel-editor/pom.xml" : {
      "ObjectId" : "f9c49779f187f2d4f3e18e2d48d5eca8ef9c3394",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " logging ",
        "Line" : 30,
        "CharPositionInLine" : 21
      },
      "1" : {
        "Text" : " testing ",
        "Line" : 44,
        "CharPositionInLine" : 21
      },
      "2" : {
        "Text" : " allows the route:\n              - to be ran via Right-click -> Run as Local Camel Context and 'mvn camel:run'\n              - to be debugged via Right-click -> Debug as Local Camel Context ",
        "Line" : 57,
        "CharPositionInLine" : 83
      },
      "CommentCount" : 3
    },
    "chapter19/hawtio-debug/pom.xml" : {
      "ObjectId" : "38ca170f0f7fbc8eee7be84a9bef42c796d13e68",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " logging ",
        "Line" : 23,
        "CharPositionInLine" : 21
      },
      "1" : {
        "Text" : " Allows the example to be run via 'mvn compile exec:java' ",
        "Line" : 45,
        "CharPositionInLine" : 72
      },
      "2" : {
        "Text" : " allows to run the example with hawtio embedded using mvn hawtio:run ",
        "Line" : 56,
        "CharPositionInLine" : 83
      },
      "CommentCount" : 3
    },
    "chapter19/idea-camel-editor/pom.xml" : {
      "ObjectId" : "e81cc6202341b0b151cfc8900a70c741234b1e32",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " use undertow instead of tomcat as its better ",
        "Line" : 41,
        "CharPositionInLine" : 58
      },
      "1" : {
        "Text" : " Testing ",
        "Line" : 47,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 2
    },
    "chapter19/pom.xml" : {
      "ObjectId" : "91f1fb745c67a41528459e97cd03623d08f5e69d",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter2/cbr/pom.xml" : {
      "ObjectId" : "8412953d047095d970f0ae497ff76b31e9f04322",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " xbean is needed for ActiveMQ broker XML configuration in Spring XML files ",
        "Line" : 39,
        "CharPositionInLine" : 87
      },
      "CommentCount" : 1
    },
    "chapter2/filter/pom.xml" : {
      "ObjectId" : "65a0fd1d7e48fec5d0720c88d22ede9ed12a0ae4",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " xbean is needed for ActiveMQ broker XML configuration in Spring XML files ",
        "Line" : 39,
        "CharPositionInLine" : 87
      },
      "CommentCount" : 1
    },
    "chapter2/ftp-jms/pom.xml" : {
      "ObjectId" : "0210855d31eb89ede7c73ee17a81d0e86b41495f",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " xbean is needed for ActiveMQ broker XML configuration in Spring XML files ",
        "Line" : 44,
        "CharPositionInLine" : 87
      },
      "1" : {
        "Text" : " Allows the example to be run via 'mvn compile exec:java' ",
        "Line" : 71,
        "CharPositionInLine" : 72
      },
      "CommentCount" : 2
    },
    "chapter2/multicast/pom.xml" : {
      "ObjectId" : "77ca9e32b66411bf7d683d93d675bb92374796c4",
      "LastModified" : "2018-12-24T11:51:29Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " xbean is needed for ActiveMQ broker XML configuration in Spring XML files ",
        "Line" : 39,
        "CharPositionInLine" : 87
      },
      "CommentCount" : 1
    },
    "chapter2/pom.xml" : {
      "ObjectId" : "688813bcb4f366f8e2981921fed780117b140ab1",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter2/recipientlist/pom.xml" : {
      "ObjectId" : "50294e362be386c4703f1375b965d349ef6af58b",
      "LastModified" : "2018-12-24T11:51:29Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " xbean is needed for ActiveMQ broker XML configuration in Spring XML files ",
        "Line" : 40,
        "CharPositionInLine" : 87
      },
      "CommentCount" : 1
    },
    "chapter2/spring/pom.xml" : {
      "ObjectId" : "6bbddabd6476d8dd6c84bec76c08ea52a2247185",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " xbean is needed for ActiveMQ broker XML configuration in Spring XML files ",
        "Line" : 39,
        "CharPositionInLine" : 87
      },
      "1" : {
        "Text" : " Allows the example to be run via 'mvn compile exec:java' ",
        "Line" : 66,
        "CharPositionInLine" : 72
      },
      "2" : {
        "Text" : " Allows the routes to be run via 'mvn camel:run' ",
        "Line" : 75,
        "CharPositionInLine" : 63
      },
      "CommentCount" : 3
    },
    "chapter2/wiretap/pom.xml" : {
      "ObjectId" : "eae8ac427e6bdbe9f0b45fcadf25ff40f5ed1218",
      "LastModified" : "2018-12-24T11:51:29Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " xbean is needed for ActiveMQ broker XML configuration in Spring XML files ",
        "Line" : 39,
        "CharPositionInLine" : 87
      },
      "CommentCount" : 1
    },
    "chapter20/pom.xml" : {
      "ObjectId" : "7c5c501143e9b4c80455af72e17747f5d12cfd94",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter20/reactor-core/pom.xml" : {
      "ObjectId" : "645ab0c3be2641e030a67728654c2c4fd7f65606",
      "LastModified" : "2019-04-08T09:14:04Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " camel ",
        "Line" : 22,
        "CharPositionInLine" : 19
      },
      "1" : {
        "Text" : " reactive engine to use ",
        "Line" : 34,
        "CharPositionInLine" : 36
      },
      "2" : {
        "Text" : " logging ",
        "Line" : 48,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 3
    },
    "chapter20/rx-java2/pom.xml" : {
      "ObjectId" : "7a2027d3999a509f2b4caf288cb193ec3b07b17a",
      "LastModified" : "2019-04-08T09:14:04Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " camel ",
        "Line" : 22,
        "CharPositionInLine" : 19
      },
      "1" : {
        "Text" : " reactive engine to use ",
        "Line" : 34,
        "CharPositionInLine" : 36
      },
      "2" : {
        "Text" : " logging ",
        "Line" : 48,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 3
    },
    "chapter20/vertx-camel/pom.xml" : {
      "ObjectId" : "2328b371bbde607b0cdfab56b725cfdb496c9bf9",
      "LastModified" : "2019-04-08T09:14:04Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " setup the vert.x verticle name ",
        "Line" : 16,
        "CharPositionInLine" : 42
      },
      "1" : {
        "Text" : " Vert.X ",
        "Line" : 23,
        "CharPositionInLine" : 20
      },
      "2" : {
        "Text" : " camel ",
        "Line" : 35,
        "CharPositionInLine" : 19
      },
      "3" : {
        "Text" : " logging ",
        "Line" : 47,
        "CharPositionInLine" : 21
      },
      "4" : {
        "Text" : " vert.x requires Java 8 ",
        "Line" : 64,
        "CharPositionInLine" : 38
      },
      "5" : {
        "Text" : " vert.x maven plugin to generate the fat-jar ",
        "Line" : 75,
        "CharPositionInLine" : 59
      },
      "6" : {
        "Text" : " the example can run with mvn vertx:run ",
        "Line" : 76,
        "CharPositionInLine" : 54
      },
      "CommentCount" : 7
    },
    "chapter20/vertx/pom.xml" : {
      "ObjectId" : "5b8e75864ab40e728f960616fef9a3a5ffaa6181",
      "LastModified" : "2019-04-08T09:14:04Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " setup the vert.x verticle name ",
        "Line" : 16,
        "CharPositionInLine" : 42
      },
      "1" : {
        "Text" : " vert.x requires Java 8 ",
        "Line" : 51,
        "CharPositionInLine" : 38
      },
      "2" : {
        "Text" : " vert.x maven plugin to generate the fat-jar ",
        "Line" : 62,
        "CharPositionInLine" : 59
      },
      "3" : {
        "Text" : " the example can run with mvn vertx:run ",
        "Line" : 63,
        "CharPositionInLine" : 54
      },
      "CommentCount" : 4
    },
    "chapter3/converter/pom.xml" : {
      "ObjectId" : "0bf7105ef10934abbabc2d960b501584845ae6bb",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter3/order/pom.xml" : {
      "ObjectId" : "a578334e4044a32171af698f4fb4dc8570ef3a96",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " when using JAXB data format ",
        "Line" : 28,
        "CharPositionInLine" : 41
      },
      "1" : {
        "Text" : " when using CSV data format ",
        "Line" : 34,
        "CharPositionInLine" : 40
      },
      "2" : {
        "Text" : " when using Bindy data format ",
        "Line" : 40,
        "CharPositionInLine" : 42
      },
      "3" : {
        "Text" : " when using JSON data format ",
        "Line" : 46,
        "CharPositionInLine" : 41
      },
      "4" : {
        "Text" : " is used when testing JSON to simulate a http server ",
        "Line" : 52,
        "CharPositionInLine" : 65
      },
      "5" : {
        "Text" : " when using Velocity templating ",
        "Line" : 58,
        "CharPositionInLine" : 44
      },
      "CommentCount" : 6
    },
    "chapter3/pom.xml" : {
      "ObjectId" : "b20223c554689ef203c2ce7255508516ecc85537",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter3/transform/pom.xml" : {
      "ObjectId" : "9ecca59210dd0da3085abcc2d2d53f30c52f4451",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter4/bean/pom.xml" : {
      "ObjectId" : "4cb99e1d1023e4cc0288ab290e281b5dd1db5969",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter4/cdi-bean/pom.xml" : {
      "ObjectId" : "2aa280498102caa8d931916d5852d2304597ea96",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " cdi api ",
        "Line" : 28,
        "CharPositionInLine" : 21
      },
      "1" : {
        "Text" : " use log4j as logger ",
        "Line" : 36,
        "CharPositionInLine" : 33
      },
      "2" : {
        "Text" : " need to use a CDI container such as JBoss Weld ",
        "Line" : 46,
        "CharPositionInLine" : 60
      },
      "3" : {
        "Text" : " lets use weld for CDI ",
        "Line" : 47,
        "CharPositionInLine" : 35
      },
      "4" : {
        "Text" : " to run the example using mvn camel:run ",
        "Line" : 70,
        "CharPositionInLine" : 54
      },
      "CommentCount" : 5
    },
    "chapter4/expression/pom.xml" : {
      "ObjectId" : "2c6de8f7c92380f7c82d661c3f5416dbbe5b6eb0",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter4/json/pom.xml" : {
      "ObjectId" : "6657e828aac3b7e82004f227ad280eab63dddfb3",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter4/pom.xml" : {
      "ObjectId" : "e0963bcfdf51e620c05f9b1bd36eddc6e9bc5b7b",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter4/predicate/pom.xml" : {
      "ObjectId" : "fbf427babd1d2c23ed51a3d1cb5e47f60070f1df",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter5/aggregator/pom.xml" : {
      "ObjectId" : "b17a9acd9c74a233cbcac295bf16a9f7aa478456",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter5/dynamicrouter/pom.xml" : {
      "ObjectId" : "41acc3d4925bcdb7fad3a4850b6eebfe1de12f8d",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter5/loadbalancer/pom.xml" : {
      "ObjectId" : "e0c17682aa15ede4383f64d1727b7301271fd008",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter5/pom.xml" : {
      "ObjectId" : "57f13b5117d8aa39e1050761d2977c73df5ea61d",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter5/routingslip/pom.xml" : {
      "ObjectId" : "8f5e8b29e0b037c4545fc5ff5909c851cfb73176",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter5/splitter/pom.xml" : {
      "ObjectId" : "72107dbecc0b955f04f5afcccddf03974034b104",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter6/file/pom.xml" : {
      "ObjectId" : "53d7cc4073dd443b3a5eb3d40e17afba78a72e26",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Allows the routes to be run via 'mvn camel:run' ",
        "Line" : 51,
        "CharPositionInLine" : 63
      },
      "CommentCount" : 1
    },
    "chapter6/ftp/pom.xml" : {
      "ObjectId" : "74484811de8c915a918c618441d0875eebddb385",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " for simulating with a FTP server ",
        "Line" : 34,
        "CharPositionInLine" : 46
      },
      "1" : {
        "Text" : " ftpserver using mina 2.0.0-M4 ",
        "Line" : 45,
        "CharPositionInLine" : 43
      },
      "2" : {
        "Text" : " ftpserver using slf4j ",
        "Line" : 51,
        "CharPositionInLine" : 35
      },
      "3" : {
        "Text" : " Allows the routes to be run via 'mvn camel:run' ",
        "Line" : 66,
        "CharPositionInLine" : 63
      },
      "CommentCount" : 4
    },
    "chapter6/jdbc/pom.xml" : {
      "ObjectId" : "9a6167cce392b0ce5daf0f8e783365277633d01a",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Allows the example to be run via 'mvn compile exec:java' ",
        "Line" : 76,
        "CharPositionInLine" : 72
      },
      "CommentCount" : 1
    },
    "chapter6/jms/pom.xml" : {
      "ObjectId" : "ff7fbba78b9284bdd91654de9b356a07c77e68fb",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " xbean is needed for ActiveMQ broker XML configuration in Spring XML files ",
        "Line" : 39,
        "CharPositionInLine" : 87
      },
      "1" : {
        "Text" : " Allows the routes to be run via 'mvn camel:run' ",
        "Line" : 65,
        "CharPositionInLine" : 63
      },
      "CommentCount" : 2
    },
    "chapter6/jpa/pom.xml" : {
      "ObjectId" : "bd3524374a693aa937af3e413c98187343942021",
      "LastModified" : "2019-04-08T09:14:04Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " spring-orm is not part of spring 5 so use older release ",
        "Line" : 46,
        "CharPositionInLine" : 69
      },
      "CommentCount" : 1
    },
    "chapter6/mail/pom.xml" : {
      "ObjectId" : "a6e158d1539b77a267d7f0309b5e31c5b6e7cef9",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " javax activation is part of the JDK now ",
        "Line" : 45,
        "CharPositionInLine" : 55
      },
      "CommentCount" : 1
    },
    "chapter6/netty/pom.xml" : {
      "ObjectId" : "9d9abfef67590b686aab9dcab21facffda6b0f5d",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter6/pom.xml" : {
      "ObjectId" : "0c6643aa1af1b315654b8aa5eb2251e4a422a259",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter6/quartz/pom.xml" : {
      "ObjectId" : "7dd2ef0bfe12eff198d12363d0b1ccd44c7012ba",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Allows the example to be run via 'mvn compile exec:java' ",
        "Line" : 47,
        "CharPositionInLine" : 72
      },
      "CommentCount" : 1
    },
    "chapter6/scheduler/pom.xml" : {
      "ObjectId" : "8d1f4d839eca8997f7481949903644a4a13d84ac",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Allows the example to be run via 'mvn compile exec:java' ",
        "Line" : 47,
        "CharPositionInLine" : 72
      },
      "CommentCount" : 1
    },
    "chapter6/seda/pom.xml" : {
      "ObjectId" : "76dcb72b057175cc67dbd467a43393aa07fe2655",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter7/cdi-hello/pom.xml" : {
      "ObjectId" : "e0871923b1e00905bb8e83fb0ea65aabd1538d49",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " CDI API ",
        "Line" : 18,
        "CharPositionInLine" : 21
      },
      "1" : {
        "Text" : " to run with jboss weld ",
        "Line" : 25,
        "CharPositionInLine" : 36
      },
      "2" : {
        "Text" : " you can find alternative CDI containers such as Apache OpenWebBeans ",
        "Line" : 26,
        "CharPositionInLine" : 81
      },
      "3" : {
        "Text" : " Allows the example to be run via 'mvn compile exec:java' ",
        "Line" : 80,
        "CharPositionInLine" : 72
      },
      "CommentCount" : 4
    },
    "chapter7/cdi/pom.xml" : {
      "ObjectId" : "6d38d2939d8e96cc66bbdf5d3f320b5f76b92a66",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " CDI API ",
        "Line" : 18,
        "CharPositionInLine" : 21
      },
      "1" : {
        "Text" : " to run with jboss weld ",
        "Line" : 25,
        "CharPositionInLine" : 36
      },
      "2" : {
        "Text" : " you can find alternative CDI containers such as Apache OpenWebBeans ",
        "Line" : 26,
        "CharPositionInLine" : 81
      },
      "3" : {
        "Text" : " Allows the example to be run via 'mvn compile exec:java' ",
        "Line" : 80,
        "CharPositionInLine" : 72
      },
      "CommentCount" : 4
    },
    "chapter7/hystrix-camel/pom.xml" : {
      "ObjectId" : "a2ed6323763574ae8a40bb6b34cff18b82627eae",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " for xml dsl ",
        "Line" : 29,
        "CharPositionInLine" : 25
      },
      "CommentCount" : 1
    },
    "chapter7/hystrix/pom.xml" : {
      "ObjectId" : "98107c4dff24f31ea109e7651815ef01c57e1356",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter7/pom.xml" : {
      "ObjectId" : "817cc467005ca86ea68af8d14bb64d38b52255d8",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter7/prototype/cart/pom.xml" : {
      "ObjectId" : "cdf1f63c95eac539ba6ade42205c58e3dc18c42c",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " CDI API ",
        "Line" : 18,
        "CharPositionInLine" : 21
      },
      "1" : {
        "Text" : " to run with jboss weld ",
        "Line" : 25,
        "CharPositionInLine" : 36
      },
      "2" : {
        "Text" : " you can find alternative CDI containers such as Apache OpenWebBeans ",
        "Line" : 26,
        "CharPositionInLine" : 81
      },
      "3" : {
        "Text" : " use Java 8 ",
        "Line" : 84,
        "CharPositionInLine" : 26
      },
      "4" : {
        "Text" : " Allows the example to be run via 'mvn compile exec:java' ",
        "Line" : 94,
        "CharPositionInLine" : 72
      },
      "CommentCount" : 5
    },
    "chapter7/prototype/inventory/pom.xml" : {
      "ObjectId" : "f3ca1e6e026a5956dbb01f84aea9c2ee6f7c577e",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " embed activemq broker to use in prototype to simulate legacy system ",
        "Line" : 29,
        "CharPositionInLine" : 81
      },
      "1" : {
        "Text" : " use Java 8 ",
        "Line" : 55,
        "CharPositionInLine" : 26
      },
      "2" : {
        "Text" : " Allows the example to be run via 'mvn compile exec:java' ",
        "Line" : 65,
        "CharPositionInLine" : 72
      },
      "CommentCount" : 3
    },
    "chapter7/prototype/pom.xml" : {
      "ObjectId" : "9acfc72139b9f0330ea9afe98f31b91846bdd7b9",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter7/prototype/rating/pom.xml" : {
      "ObjectId" : "945b6c402a423e2e5dba06b2b846b5310fb26b36",
      "LastModified" : "2019-04-12T17:29:51Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " import Spring Boot before Camel ",
        "Line" : 18,
        "CharPositionInLine" : 47
      },
      "1" : {
        "Text" : " spring-boot ",
        "Line" : 38,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : " camel ",
        "Line" : 44,
        "CharPositionInLine" : 19
      },
      "3" : {
        "Text" : " notice we use -starter components from Camel which are designed to use with Spring Boot ",
        "Line" : 45,
        "CharPositionInLine" : 101
      },
      "4" : {
        "Text" : " use Java 8 ",
        "Line" : 64,
        "CharPositionInLine" : 26
      },
      "5" : {
        "Text" : " allows to run with mvn spring-boot:run ",
        "Line" : 75,
        "CharPositionInLine" : 56
      },
      "6" : {
        "Text" : " to build fat-jar ",
        "Line" : 82,
        "CharPositionInLine" : 40
      },
      "CommentCount" : 7
    },
    "chapter7/prototype/recommend/pom.xml" : {
      "ObjectId" : "8a79e6032b0aa9bd479edf8e0bb151844b35bc2f",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " spring-boot ",
        "Line" : 29,
        "CharPositionInLine" : 25
      },
      "1" : {
        "Text" : " use Java 8 ",
        "Line" : 39,
        "CharPositionInLine" : 26
      },
      "2" : {
        "Text" : " allows to run with mvn spring-boot:run ",
        "Line" : 50,
        "CharPositionInLine" : 56
      },
      "3" : {
        "Text" : " to build fat-jar ",
        "Line" : 57,
        "CharPositionInLine" : 40
      },
      "CommentCount" : 4
    },
    "chapter7/prototype/rules/pom.xml" : {
      "ObjectId" : "2bfcd39c6609a94f7ada2f70e26476cd89b2d34a",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " WildFly Swarm BOM for dependency management ",
        "Line" : 21,
        "CharPositionInLine" : 55
      },
      "1" : {
        "Text" : " Java EE 7 dependency ",
        "Line" : 36,
        "CharPositionInLine" : 34
      },
      "2" : {
        "Text" : " Wildfly Swarm Camel Fractions ",
        "Line" : 44,
        "CharPositionInLine" : 43
      },
      "3" : {
        "Text" : " Wildfly Swarm Fractions ",
        "Line" : 61,
        "CharPositionInLine" : 37
      },
      "4" : {
        "Text" : " use Java 8 ",
        "Line" : 81,
        "CharPositionInLine" : 26
      },
      "5" : {
        "Text" : " run on port 8181 to not clash with spring boot that runs 8080 ",
        "Line" : 96,
        "CharPositionInLine" : 81
      },
      "CommentCount" : 6
    },
    "chapter7/prototype2/cart2/pom.xml" : {
      "ObjectId" : "8deff58c3583b65d57a7dc07d037268ab897bf76",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " CDI API ",
        "Line" : 18,
        "CharPositionInLine" : 21
      },
      "1" : {
        "Text" : " to run with jboss weld ",
        "Line" : 25,
        "CharPositionInLine" : 36
      },
      "2" : {
        "Text" : " you can find alternative CDI containers such as Apache OpenWebBeans ",
        "Line" : 26,
        "CharPositionInLine" : 81
      },
      "3" : {
        "Text" : " use Java 8 ",
        "Line" : 84,
        "CharPositionInLine" : 26
      },
      "4" : {
        "Text" : " Allows the example to be run via 'mvn compile exec:java' ",
        "Line" : 94,
        "CharPositionInLine" : 72
      },
      "CommentCount" : 5
    },
    "chapter7/prototype2/inventory2/pom.xml" : {
      "ObjectId" : "63d628f57577b1cf4ab37198782798533a0641d3",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " embed activemq broker to use in prototype to simulate legacy system ",
        "Line" : 29,
        "CharPositionInLine" : 81
      },
      "1" : {
        "Text" : " use Java 8 ",
        "Line" : 55,
        "CharPositionInLine" : 26
      },
      "2" : {
        "Text" : " Allows the example to be run via 'mvn compile exec:java' ",
        "Line" : 65,
        "CharPositionInLine" : 72
      },
      "CommentCount" : 3
    },
    "chapter7/prototype2/pom.xml" : {
      "ObjectId" : "98f6ffeb543eed8cc6934f5559c56f1816e15a17",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter7/prototype2/rating2/pom.xml" : {
      "ObjectId" : "c326884ccce03388d5e8ae318b7b32d06419896d",
      "LastModified" : "2019-04-12T17:56:10Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " import Spring Boot before Camel ",
        "Line" : 18,
        "CharPositionInLine" : 47
      },
      "1" : {
        "Text" : " spring-boot ",
        "Line" : 38,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : " camel ",
        "Line" : 44,
        "CharPositionInLine" : 19
      },
      "3" : {
        "Text" : " notice we use -starter components from Camel which are designed to use with Spring Boot ",
        "Line" : 45,
        "CharPositionInLine" : 101
      },
      "4" : {
        "Text" : " use Java 8 ",
        "Line" : 64,
        "CharPositionInLine" : 26
      },
      "5" : {
        "Text" : " allows to run with mvn spring-boot:run ",
        "Line" : 75,
        "CharPositionInLine" : 56
      },
      "6" : {
        "Text" : " to build fat-jar ",
        "Line" : 82,
        "CharPositionInLine" : 40
      },
      "CommentCount" : 7
    },
    "chapter7/prototype2/recommend2/pom.xml" : {
      "ObjectId" : "6743fe6a8de525e2f7436ccec7b0cc356dbec7f8",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " spring-boot ",
        "Line" : 33,
        "CharPositionInLine" : 25
      },
      "1" : {
        "Text" : " spring-boot hystrix ",
        "Line" : 39,
        "CharPositionInLine" : 33
      },
      "2" : {
        "Text" : " use Java 8 ",
        "Line" : 50,
        "CharPositionInLine" : 26
      },
      "3" : {
        "Text" : " allows to run with mvn spring-boot:run ",
        "Line" : 61,
        "CharPositionInLine" : 56
      },
      "4" : {
        "Text" : " to build fat-jar ",
        "Line" : 68,
        "CharPositionInLine" : 40
      },
      "CommentCount" : 5
    },
    "chapter7/prototype2/rules2-springboot-hystrixdashboard/pom.xml" : {
      "ObjectId" : "b4d446ada3c53f38b6086b02bcd2716f1a4c3a42",
      "LastModified" : "2019-04-12T18:14:25Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " import Spring Boot before Camel ",
        "Line" : 18,
        "CharPositionInLine" : 47
      },
      "1" : {
        "Text" : " import Camel ",
        "Line" : 26,
        "CharPositionInLine" : 28
      },
      "2" : {
        "Text" : " spring-boot ",
        "Line" : 38,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : " actuator is needed to support hystrix streams for the dashboard ",
        "Line" : 47,
        "CharPositionInLine" : 77
      },
      "4" : {
        "Text" : " needed to have the activemq jms client ",
        "Line" : 53,
        "CharPositionInLine" : 52
      },
      "5" : {
        "Text" : " camel ",
        "Line" : 60,
        "CharPositionInLine" : 19
      },
      "6" : {
        "Text" : " use Java 8 ",
        "Line" : 82,
        "CharPositionInLine" : 26
      },
      "7" : {
        "Text" : " allows to run with mvn spring-boot:run ",
        "Line" : 93,
        "CharPositionInLine" : 56
      },
      "8" : {
        "Text" : " to build fat-jar ",
        "Line" : 100,
        "CharPositionInLine" : 40
      },
      "CommentCount" : 9
    },
    "chapter7/prototype2/rules2-springboot/pom.xml" : {
      "ObjectId" : "8ec5a2cf8b4c0d4118b9d184157cac9cba6cede9",
      "LastModified" : "2019-04-12T18:14:25Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " import Spring Boot before Camel ",
        "Line" : 18,
        "CharPositionInLine" : 47
      },
      "1" : {
        "Text" : " import Camel ",
        "Line" : 26,
        "CharPositionInLine" : 28
      },
      "2" : {
        "Text" : " spring-boot ",
        "Line" : 38,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : " needed to have the activemq jms client ",
        "Line" : 48,
        "CharPositionInLine" : 52
      },
      "4" : {
        "Text" : " camel ",
        "Line" : 55,
        "CharPositionInLine" : 19
      },
      "5" : {
        "Text" : " use Java 8 ",
        "Line" : 77,
        "CharPositionInLine" : 26
      },
      "6" : {
        "Text" : " allows to run with mvn spring-boot:run ",
        "Line" : 88,
        "CharPositionInLine" : 56
      },
      "7" : {
        "Text" : " to build fat-jar ",
        "Line" : 95,
        "CharPositionInLine" : 40
      },
      "CommentCount" : 8
    },
    "chapter7/prototype2/rules2/pom.xml" : {
      "ObjectId" : "e553d8539517ce42ce35f5c81f419238a84068f5",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " WildFly Swarm BOM for dependency management ",
        "Line" : 21,
        "CharPositionInLine" : 55
      },
      "1" : {
        "Text" : " Java EE 7 dependency ",
        "Line" : 36,
        "CharPositionInLine" : 34
      },
      "2" : {
        "Text" : " Wildfly Swarm Camel Fractions ",
        "Line" : 44,
        "CharPositionInLine" : 43
      },
      "3" : {
        "Text" : " Wildfly Swarm Fractions ",
        "Line" : 65,
        "CharPositionInLine" : 37
      },
      "4" : {
        "Text" : " ActiveMQ ",
        "Line" : 78,
        "CharPositionInLine" : 22
      },
      "5" : {
        "Text" : " use Java 8 ",
        "Line" : 86,
        "CharPositionInLine" : 26
      },
      "6" : {
        "Text" : " run on port 8181 to not clash with spring boot that runs 8080 ",
        "Line" : 101,
        "CharPositionInLine" : 81
      },
      "CommentCount" : 7
    },
    "chapter7/springboot-camel/pom.xml" : {
      "ObjectId" : "b856a8a44226956c67b29e800888e11b511dd448",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " import Spring Boot before Camel ",
        "Line" : 18,
        "CharPositionInLine" : 47
      },
      "1" : {
        "Text" : " import Camel ",
        "Line" : 26,
        "CharPositionInLine" : 28
      },
      "2" : {
        "Text" : " spring-boot ",
        "Line" : 39,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : " camel ",
        "Line" : 50,
        "CharPositionInLine" : 19
      },
      "4" : {
        "Text" : " notice we use -starter components from Camel which are designed to use with Spring Boot ",
        "Line" : 55,
        "CharPositionInLine" : 101
      },
      "5" : {
        "Text" : " allows to run with mvn spring-boot:run ",
        "Line" : 69,
        "CharPositionInLine" : 56
      },
      "6" : {
        "Text" : " to build fat-jar ",
        "Line" : 76,
        "CharPositionInLine" : 40
      },
      "CommentCount" : 7
    },
    "chapter7/springboot-rest-camel/pom.xml" : {
      "ObjectId" : "0e8bf6e1bf0a1cdfc5a7e55068583fe2c920d528",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " import Spring Boot before Camel ",
        "Line" : 18,
        "CharPositionInLine" : 47
      },
      "1" : {
        "Text" : " import Camel ",
        "Line" : 26,
        "CharPositionInLine" : 28
      },
      "2" : {
        "Text" : " spring-boot ",
        "Line" : 39,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : " enable spring boot actuator for health check ",
        "Line" : 44,
        "CharPositionInLine" : 58
      },
      "4" : {
        "Text" : " use for unit test ",
        "Line" : 49,
        "CharPositionInLine" : 31
      },
      "5" : {
        "Text" : " camel ",
        "Line" : 56,
        "CharPositionInLine" : 19
      },
      "6" : {
        "Text" : " notice we use -starter components from Camel which are designed to use with Spring Boot ",
        "Line" : 61,
        "CharPositionInLine" : 101
      },
      "7" : {
        "Text" : " allows to run with mvn spring-boot:run ",
        "Line" : 71,
        "CharPositionInLine" : 56
      },
      "8" : {
        "Text" : " to build fat-jar ",
        "Line" : 78,
        "CharPositionInLine" : 40
      },
      "CommentCount" : 9
    },
    "chapter7/springboot-xml/pom.xml" : {
      "ObjectId" : "d7eaecd658bffe03d02c8b255fd2b4d272b5fbe3",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " import Spring Boot before Camel ",
        "Line" : 18,
        "CharPositionInLine" : 47
      },
      "1" : {
        "Text" : " import Camel ",
        "Line" : 26,
        "CharPositionInLine" : 28
      },
      "2" : {
        "Text" : " spring-boot ",
        "Line" : 39,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : " camel ",
        "Line" : 50,
        "CharPositionInLine" : 19
      },
      "4" : {
        "Text" : " allows to run with mvn spring-boot:run ",
        "Line" : 60,
        "CharPositionInLine" : 56
      },
      "5" : {
        "Text" : " to build fat-jar ",
        "Line" : 67,
        "CharPositionInLine" : 40
      },
      "CommentCount" : 6
    },
    "chapter7/springboot/pom.xml" : {
      "ObjectId" : "7f6387b54618dccd748a428b67bddabe49ee61ef",
      "LastModified" : "2019-04-12T18:14:25Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " import Spring Boot before Camel ",
        "Line" : 18,
        "CharPositionInLine" : 47
      },
      "1" : {
        "Text" : " allows to run with mvn spring-boot:run ",
        "Line" : 51,
        "CharPositionInLine" : 56
      },
      "2" : {
        "Text" : " to build fat-jar ",
        "Line" : 58,
        "CharPositionInLine" : 40
      },
      "CommentCount" : 3
    },
    "chapter7/standalone/pom.xml" : {
      "ObjectId" : "0a0cb3314d8c555ea163d92cdf2820f23d939f83",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Allows the example to be run via 'mvn compile exec:java -Pmanual' ",
        "Line" : 53,
        "CharPositionInLine" : 85
      },
      "1" : {
        "Text" : " Allows the example to be run via 'mvn compile exec:java -Pmain' ",
        "Line" : 69,
        "CharPositionInLine" : 83
      },
      "CommentCount" : 2
    },
    "chapter7/wildfly-swarm-spring/pom.xml" : {
      "ObjectId" : "9211b41740865a89d5bb1517ee3cfa78a271e398",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " WildFly Swarm BOM for dependency management ",
        "Line" : 16,
        "CharPositionInLine" : 55
      },
      "1" : {
        "Text" : " Wildfly Swarm Camel Fractions ",
        "Line" : 31,
        "CharPositionInLine" : 43
      },
      "2" : {
        "Text" : " Wildfly Swarm Fractions ",
        "Line" : 40,
        "CharPositionInLine" : 37
      },
      "CommentCount" : 3
    },
    "chapter7/wildfly-swarm/pom.xml" : {
      "ObjectId" : "453b8ecac729d554ef4ed609a8bd53595917c8ba",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " WildFly Swarm BOM for dependency management ",
        "Line" : 16,
        "CharPositionInLine" : 55
      },
      "1" : {
        "Text" : " Java EE 7 dependency ",
        "Line" : 31,
        "CharPositionInLine" : 34
      },
      "2" : {
        "Text" : " Wildfly Swarm Camel Fractions ",
        "Line" : 39,
        "CharPositionInLine" : 43
      },
      "3" : {
        "Text" : " Wildfly Swarm Fractions ",
        "Line" : 48,
        "CharPositionInLine" : 37
      },
      "CommentCount" : 4
    },
    "chapter8/custom/pom.xml" : {
      "ObjectId" : "67a674fefb4b27d131c2f1078b5aeabbdf69a251",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " support camel documentation ",
        "Line" : 25,
        "CharPositionInLine" : 41
      },
      "1" : {
        "Text" : " logging ",
        "Line" : 31,
        "CharPositionInLine" : 21
      },
      "2" : {
        "Text" : " testing ",
        "Line" : 47,
        "CharPositionInLine" : 21
      },
      "3" : {
        "Text" : " generate components meta-data and validate component includes documentation etc ",
        "Line" : 77,
        "CharPositionInLine" : 95
      },
      "4" : {
        "Text" : " to generate the MANIFEST-FILE of the bundle ",
        "Line" : 99,
        "CharPositionInLine" : 59
      },
      "CommentCount" : 5
    },
    "chapter8/hi-world/hi-world-api/pom.xml" : {
      "ObjectId" : "79a28474186cb3d9e87a9a4d8714625db308fe3c",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " to generate API Javadoc ",
        "Line" : 27,
        "CharPositionInLine" : 39
      },
      "1" : {
        "Text" : " Disable Java 8 doclint checks to avoid Javadoc plugin failures ",
        "Line" : 53,
        "CharPositionInLine" : 74
      },
      "CommentCount" : 2
    },
    "chapter8/hi-world/hi-world-component/pom.xml" : {
      "ObjectId" : "58b5ba6ea2121d1fd4e5fe9cdfc9a12b347140c4",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " support camel documentation ",
        "Line" : 38,
        "CharPositionInLine" : 41
      },
      "1" : {
        "Text" : " Camel annotations in provided scope to avoid compile errors in IDEs ",
        "Line" : 44,
        "CharPositionInLine" : 81
      },
      "2" : {
        "Text" : " Component API javadoc in provided scope to read API signatures ",
        "Line" : 51,
        "CharPositionInLine" : 76
      },
      "3" : {
        "Text" : " logging ",
        "Line" : 60,
        "CharPositionInLine" : 21
      },
      "4" : {
        "Text" : " testing ",
        "Line" : 76,
        "CharPositionInLine" : 21
      },
      "5" : {
        "Text" : " to generate the MANIFEST-FILE of the bundle ",
        "Line" : 106,
        "CharPositionInLine" : 59
      },
      "6" : {
        "Text" : " generate Component source and test source ",
        "Line" : 132,
        "CharPositionInLine" : 57
      },
      "7" : {
        "Text" : " generate components meta-data and validate component includes documentation etc ",
        "Line" : 160,
        "CharPositionInLine" : 95
      },
      "8" : {
        "Text" : " add generated source and test source to build ",
        "Line" : 182,
        "CharPositionInLine" : 61
      },
      "CommentCount" : 9
    },
    "chapter8/hi-world/pom.xml" : {
      "ObjectId" : "8157f7397555fd9b2c021250f905af6c00b11b2e",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter8/interceptor/pom.xml" : {
      "ObjectId" : "ebb5456dc91e63a1c81915512a054d66ded21d5f",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " allows the route to be ran via 'mvn camel:run' ",
        "Line" : 43,
        "CharPositionInLine" : 62
      },
      "CommentCount" : 1
    },
    "chapter8/order-router-full/pom.xml" : {
      "ObjectId" : "3a8dd4de9c451ab95548a47cc09a87c4a875fa47",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " xbean is needed for ActiveMQ broker XML configuration in Spring XML files ",
        "Line" : 61,
        "CharPositionInLine" : 87
      },
      "1" : {
        "Text" : " for simulating with a FTP server ",
        "Line" : 76,
        "CharPositionInLine" : 46
      },
      "2" : {
        "Text" : " ftpserver using mina 2.0.0-M4 ",
        "Line" : 87,
        "CharPositionInLine" : 43
      },
      "3" : {
        "Text" : " using Jetty with CXF ",
        "Line" : 99,
        "CharPositionInLine" : 34
      },
      "CommentCount" : 4
    },
    "chapter8/order-router/pom.xml" : {
      "ObjectId" : "0bd6398f6408d42c37f48775bd0a09fb053b0f73",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter8/pom.xml" : {
      "ObjectId" : "3fcba5c8fded7bfb40bf2de3aafa48221016d86e",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter8/reverse-dataformat/pom.xml" : {
      "ObjectId" : "e0640425632214dd72fdeade22bf89a6d93e8085",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " logging ",
        "Line" : 29,
        "CharPositionInLine" : 21
      },
      "1" : {
        "Text" : " testing ",
        "Line" : 45,
        "CharPositionInLine" : 21
      },
      "2" : {
        "Text" : " to generate the MANIFEST-FILE of the bundle ",
        "Line" : 75,
        "CharPositionInLine" : 59
      },
      "CommentCount" : 3
    },
    "chapter9/advicewith/pom.xml" : {
      "ObjectId" : "6ba71f46ace8c954694cd3e5bf8bf3d63edf1b8f",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter9/arquillian-web/pom.xml" : {
      "ObjectId" : "f6cbe4290a8050591ab91042c35372b28f95bc6b",
      "LastModified" : "2019-04-12T18:14:25Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " import arquillian ",
        "Line" : 17,
        "CharPositionInLine" : 29
      },
      "1" : {
        "Text" : " camel ",
        "Line" : 32,
        "CharPositionInLine" : 19
      },
      "2" : {
        "Text" : " need spring-web for bootstrapping this application ",
        "Line" : 51,
        "CharPositionInLine" : 64
      },
      "3" : {
        "Text" : " logging ",
        "Line" : 58,
        "CharPositionInLine" : 21
      },
      "4" : {
        "Text" : " use rest assured for REST/JSon testing ",
        "Line" : 70,
        "CharPositionInLine" : 52
      },
      "5" : {
        "Text" : " arquillian ",
        "Line" : 84,
        "CharPositionInLine" : 24
      },
      "6" : {
        "Text" : " chose the embedded web container ",
        "Line" : 91,
        "CharPositionInLine" : 46
      },
      "7" : {
        "Text" : " in this example we have chosen jetty ",
        "Line" : 92,
        "CharPositionInLine" : 50
      },
      "8" : {
        "Text" : " then add the needed jetty dependencies ",
        "Line" : 100,
        "CharPositionInLine" : 52
      },
      "9" : {
        "Text" : " allows running this example with mvn jetty:run ",
        "Line" : 124,
        "CharPositionInLine" : 62
      },
      "CommentCount" : 10
    },
    "chapter9/blueprint-xml-service/pom.xml" : {
      "ObjectId" : "5b604d41673eef9e32d9a9f28531acfaa6f0fd6c",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter9/blueprint-xml/pom.xml" : {
      "ObjectId" : "48518dfe4b78eff1d38705a9dbbf1d1b00bc179d",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter9/cdi/pom.xml" : {
      "ObjectId" : "f53a17808557f75cada17c24333af99aeeaa3ead",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " CDI API ",
        "Line" : 18,
        "CharPositionInLine" : 21
      },
      "1" : {
        "Text" : " to run with jboss weld ",
        "Line" : 25,
        "CharPositionInLine" : 36
      },
      "2" : {
        "Text" : " Allows the example to be run via 'mvn compile exec:java' ",
        "Line" : 71,
        "CharPositionInLine" : 72
      },
      "CommentCount" : 3
    },
    "chapter9/citrus/pom.xml" : {
      "ObjectId" : "38ca6ae4b19bfab740ea5444b6560a275a528310",
      "LastModified" : "2019-04-12T18:14:25Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " camel ",
        "Line" : 22,
        "CharPositionInLine" : 19
      },
      "1" : {
        "Text" : " logging ",
        "Line" : 40,
        "CharPositionInLine" : 21
      },
      "2" : {
        "Text" : " citrus ",
        "Line" : 52,
        "CharPositionInLine" : 20
      },
      "3" : {
        "Text" : " activemq ",
        "Line" : 89,
        "CharPositionInLine" : 22
      },
      "4" : {
        "Text" : " junit ",
        "Line" : 111,
        "CharPositionInLine" : 19
      },
      "5" : {
        "Text" : " citrus maven plugin ",
        "Line" : 125,
        "CharPositionInLine" : 35
      },
      "6" : {
        "Text" : " maven plugin to run integration tests ",
        "Line" : 135,
        "CharPositionInLine" : 53
      },
      "7" : {
        "Text" : " yes its a weirdname but its designed to run integration tests - no this is not a joke ",
        "Line" : 136,
        "CharPositionInLine" : 101
      },
      "CommentCount" : 8
    },
    "chapter9/error/pom.xml" : {
      "ObjectId" : "af13046067bfa38f6957697113708e710cc16044",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter9/java/pom.xml" : {
      "ObjectId" : "9dfe759363891a405fc7eb1aec49e312c2fc44f1",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter9/miranda/pom.xml" : {
      "ObjectId" : "a5c0645498c13248d8f2597867ed31d62ec28f0d",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter9/mock/pom.xml" : {
      "ObjectId" : "0f60d3ee6e1e0e184ebdfc386ea85762b3e3dfd1",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter9/notify/pom.xml" : {
      "ObjectId" : "39440717ed2fe04d74e18a3e66eb0e22a083f7d7",
      "LastModified" : "2019-04-12T18:14:25Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Allows the example to be run via 'mvn compile exec:java' ",
        "Line" : 78,
        "CharPositionInLine" : 72
      },
      "CommentCount" : 1
    },
    "chapter9/pax-exam/pom.xml" : {
      "ObjectId" : "7bc881ebfec0cd432e1ed93cb6c89ef8b111f7e3",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " remember to set packaging=bundle for OSGi ",
        "Line" : 15,
        "CharPositionInLine" : 53
      },
      "1" : {
        "Text" : " camel ",
        "Line" : 24,
        "CharPositionInLine" : 19
      },
      "2" : {
        "Text" : " logging ",
        "Line" : 38,
        "CharPositionInLine" : 21
      },
      "3" : {
        "Text" : " to allow using @Inject in the unit tests ",
        "Line" : 50,
        "CharPositionInLine" : 54
      },
      "4" : {
        "Text" : " pax-exam ",
        "Line" : 57,
        "CharPositionInLine" : 22
      },
      "5" : {
        "Text" : " OSGi ",
        "Line" : 88,
        "CharPositionInLine" : 18
      },
      "6" : {
        "Text" : " apache karaf as dependency for pax-exam to use ",
        "Line" : 96,
        "CharPositionInLine" : 60
      },
      "7" : {
        "Text" : " to generate the OSGi bundle ",
        "Line" : 108,
        "CharPositionInLine" : 43
      },
      "8" : {
        "Text" : " to include the features.xml file ",
        "Line" : 116,
        "CharPositionInLine" : 48
      },
      "9" : {
        "Text" : " maven plugin to run integration tests ",
        "Line" : 149,
        "CharPositionInLine" : 57
      },
      "10" : {
        "Text" : " yes its a weirdname but its designed to run integration tests - no this is not a joke ",
        "Line" : 150,
        "CharPositionInLine" : 105
      },
      "11" : {
        "Text" : " must use 2.18.1 as newer version do not work with pax-exam ",
        "Line" : 154,
        "CharPositionInLine" : 106
      },
      "CommentCount" : 12
    },
    "chapter9/pom.xml" : {
      "ObjectId" : "af5aa725d74bec182d3140823cb09e5bec9b7eae",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter9/spring-boot-test-one-route/pom.xml" : {
      "ObjectId" : "738ca46b46d28ff6312bd66b34be82d284b5c82c",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " import Spring-Boot and Camel BOM ",
        "Line" : 16,
        "CharPositionInLine" : 44
      },
      "1" : {
        "Text" : " spring-web ",
        "Line" : 38,
        "CharPositionInLine" : 24
      },
      "2" : {
        "Text" : " camel ",
        "Line" : 44,
        "CharPositionInLine" : 19
      },
      "3" : {
        "Text" : " test ",
        "Line" : 50,
        "CharPositionInLine" : 18
      },
      "4" : {
        "Text" : " testing ",
        "Line" : 62,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 5
    },
    "chapter9/spring-boot/pom.xml" : {
      "ObjectId" : "1311eea5630c2eff1b81cb117aeb6961d6661a07",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " import Spring-Boot and Camel BOM ",
        "Line" : 16,
        "CharPositionInLine" : 44
      },
      "1" : {
        "Text" : " spring-web ",
        "Line" : 38,
        "CharPositionInLine" : 24
      },
      "2" : {
        "Text" : " camel ",
        "Line" : 44,
        "CharPositionInLine" : 19
      },
      "3" : {
        "Text" : " test ",
        "Line" : 50,
        "CharPositionInLine" : 18
      },
      "4" : {
        "Text" : " testing ",
        "Line" : 62,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 5
    },
    "chapter9/spring-java-config/pom.xml" : {
      "ObjectId" : "3e133c483558bb4e5a23e069d6bad462f24fba4d",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " logging ",
        "Line" : 29,
        "CharPositionInLine" : 21
      },
      "1" : {
        "Text" : " testing ",
        "Line" : 39,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 2
    },
    "chapter9/spring-xml/pom.xml" : {
      "ObjectId" : "94194203d7a2ac6ae227503c111124e049f1681c",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "chapter9/wildfly-swarm/pom.xml" : {
      "ObjectId" : "d7ec71c608cd971bfa3ce31fb9dc1d6f3c7bb275",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " WildFly Swarm BOM for dependency management ",
        "Line" : 16,
        "CharPositionInLine" : 55
      },
      "1" : {
        "Text" : " Java EE 7 dependency ",
        "Line" : 31,
        "CharPositionInLine" : 34
      },
      "2" : {
        "Text" : " Wildfly Swarm Camel Fractions ",
        "Line" : 39,
        "CharPositionInLine" : 43
      },
      "3" : {
        "Text" : " Wildfly Swarm Fractions ",
        "Line" : 44,
        "CharPositionInLine" : 37
      },
      "4" : {
        "Text" : " testing ",
        "Line" : 50,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 5
    },
    "chapter9/wildfly/pom.xml" : {
      "ObjectId" : "a08be3b4ec68dbf5590fcb2de26834db7bd6eea0",
      "LastModified" : "2017-12-17T15:00:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " arquillian application server properties ",
        "Line" : 18,
        "CharPositionInLine" : 54
      },
      "1" : {
        "Text" : " see the file src/test/resources/arquillian.xml ",
        "Line" : 19,
        "CharPositionInLine" : 60
      },
      "2" : {
        "Text" : " import POM for dependency management for arquillian testing ",
        "Line" : 25,
        "CharPositionInLine" : 71
      },
      "3" : {
        "Text" : " shrinkwrap must be first ",
        "Line" : 28,
        "CharPositionInLine" : 40
      },
      "4" : {
        "Text" : " CDI API ",
        "Line" : 48,
        "CharPositionInLine" : 21
      },
      "5" : {
        "Text" : " servlet ",
        "Line" : 55,
        "CharPositionInLine" : 21
      },
      "6" : {
        "Text" : " camel ",
        "Line" : 63,
        "CharPositionInLine" : 19
      },
      "7" : {
        "Text" : " testing using camel and arquillian ",
        "Line" : 73,
        "CharPositionInLine" : 48
      },
      "8" : {
        "Text" : " name of the war ",
        "Line" : 100,
        "CharPositionInLine" : 29
      },
      "9" : {
        "Text" : " to build the war ",
        "Line" : 105,
        "CharPositionInLine" : 32
      },
      "CommentCount" : 10
    },
    "pom.xml" : {
      "ObjectId" : "9216301b0c775733e39b808ac81ed88c5986e9d4",
      "LastModified" : "2019-04-12T18:32:07Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " lets re-run the failed test one more time, just to be sure ",
        "Line" : 212,
        "CharPositionInLine" : 78
      },
      "1" : {
        "Text" : " Camel ",
        "Line" : 225,
        "CharPositionInLine" : 21
      },
      "2" : {
        "Text" : " ActiveMQ ",
        "Line" : 240,
        "CharPositionInLine" : 24
      },
      "3" : {
        "Text" : " Logging ",
        "Line" : 268,
        "CharPositionInLine" : 23
      },
      "4" : {
        "Text" : " Testing ",
        "Line" : 285,
        "CharPositionInLine" : 23
      },
      "5" : {
        "Text" : " Jolokia ",
        "Line" : 292,
        "CharPositionInLine" : 23
      },
      "6" : {
        "Text" : " Spring ",
        "Line" : 299,
        "CharPositionInLine" : 22
      },
      "7" : {
        "Text" : " Java FTP server ",
        "Line" : 361,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 8
    }
  },
  "FileTypes" : {
    "MAVEN" : 222
  },
  "ElapsedTime" : 1398
}