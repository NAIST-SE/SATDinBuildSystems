{
  "Repository" : "14496140",
  "Revision" : "HEAD",
  "ObjectId" : "4fd307d61dccb2d0afd0ecd98afa5784bb97c170",
  "CommitTime" : "2019-04-14T22:44:12Z",
  "Files" : {
    "gatb-core/CMakeLists.txt" : {
      "ObjectId" : "f48a70b91d858974697fc45c59bf3264bd4d25b9",
      "LastModified" : "2017-12-20T14:51:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We set the required version\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "################################################################################\n\n# The version number.\n\n################################################################################\n\n# The default version number is the latest official build\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# But, it is possible to define another release number during a local build\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# However, continuous integration has priority over local compilation\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# User login to upload doc-api; Jenkins has priority over local user\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "################################################################################\n\n# Define cmake modules directory\n\n################################################################################\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "################################################################################\n\n# Include external cmake files\n\n################################################################################\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# We check whether we have native 128 bits integers\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# We get the current date\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "################################################################################\n\n# COMPILER DEFINITIONS\n\n################################################################################\n\n# We try to find the best compiler config, in particular for C++ extension usage\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#for old cmakes\n",
        "Line" : 64,
        "CharPositionInLine" : 39
      },
      "11" : {
        "Text" : "# travis-cl has a clang that shows no version, so trying this http://stackoverflow.com/questions/16150888/cmake-branch-on-clang-version\n",
        "Line" : 74,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# different clang versions number between linux and mac\n",
        "Line" : 80,
        "CharPositionInLine" : 45
      },
      "13" : {
        "Text" : "################################################################################\n\n# GENERAL DEFINITIONS\n\n################################################################################\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# last one is exclusively for BooPHF\n",
        "Line" : 102,
        "CharPositionInLine" : 89
      },
      "15" : {
        "Text" : "#set (LIBRARY_COMPILE_DEFINITIONS  \"${LIBRARY_COMPILE_DEFINITIONS} -g -p -pg\")\n",
        "Line" : 109,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# else CMake adds DNDEBUG\n",
        "Line" : 111,
        "CharPositionInLine" : 33
      },
      "17" : {
        "Text" : "# detect SSE for popcount \n\n# this was for emphf, maybe it's for something else also? otherwise this part can be removed.\n\n#\n\n# from https://github.com/rurban/smhasher/blob/master/CMakeLists.txt\n\n# i do not see much performance gain for now, but let's keep that code here, might be useful later.\n\n# list of performance gain observed:\n\n# popcount in Graph::countNeighbors\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# I could use LIBRARY_COMPILE_DEFINITIONS, but it's actually passed to \"add_definitions\", which isn't made for passing compilation flags, only -D ones.\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# WARNING !!! For the moment, we need to remove some warnings (on Macos) due to use of offsetof macro on non Plain Old Data\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# We may have some custom compilation flags.\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "################################################################################\n\n#  DIRECTORIES MANAGEMENT \n\n################################################################################\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "################################################################################\n\n#  EXPORT FOR THIRD PARTIES \n\n################################################################################\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# In case you need to use external libraries, you can use the following variables:\n\n#   EXTRALIBS      : names of the libraries to be used\n\n#   EXTRALIBS_PATH : directory where the libraries are\n\n#   EXTRALIBS_INC  : directory of the include files for the libraries \n\n# For instance, you can do the following:\n\n#       cmake -DEXTRALIBS=\"somelib\"  -DEXTRALIBS_PATH=\"/somewhere/libs\"  -DEXTRALIBS_INC=\"/somewhere/inc\" ..\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# We define the compilation flags used for compiling binary based on gatb core\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# We define the include directories used for linking binary based on gatb core\n\n# Note that we need to add boost include dependency (not working otherwise with clang)\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# We define the libraries used for linking binary based on gatb core\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# We define the directory where to find cmake helpers\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# NOTE... we have to duplicate the variables for the other scopes (in particular for sub directories)\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "################################################################################\n\n#  LIBRARY GENERATION \n\n################################################################################\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# NOTE... we have to duplicate the variables for the other scopes (in particular for sub directories)\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "################################################################################\n\n#  UNIT TESTS GENERATION \n\n################################################################################\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "################################################################################\n\n#  TOOLS GENERATION \n\n################################################################################\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "################################################################################\n\n#  THIRD PARTY GENERATION (\n\n################################################################################\n",
        "Line" : 251,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "################################################################################\n\n#  DEPENDENCIES \n\n################################################################################\n\n# we must be sure that hdf5 is built and installed before building gatb-core\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "################################################################################\n\n#  DOCUMENTATION GENERATION \n\n################################################################################\n",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "################################################################################\n\n#  EXAMPLES GENERATION \n\n################################################################################\n",
        "Line" : 269,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# add example snippets into binary archive (use by CPack directive)\n",
        "Line" : 279,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "################################################################################\n\n#  INSTALL \n\n################################################################################\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "################################################################################\n\n#  DELIVERY \n\n################################################################################\n",
        "Line" : 294,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# We include the module and get all the delivery targets\n",
        "Line" : 317,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 41
    },
    "gatb-core/cmake/CheckCompiler.cmake" : {
      "ObjectId" : "1a3db97e2d15599e3b81ac74bd28199e6364290e",
      "LastModified" : "2014-08-12T12:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake; -*-\n\n#\n\n#  Figure out the version of the used compiler\n\n#  Variables set by this module\n\n#  CMAKE_CXX_COMPILER_MAJOR  major version of compiler\n\n#  CMAKE_CXX_COMPILER_MINR   minor version of compiler\n\n#  CMAKE_CXX_COMPILER_PATCH  patch level (e.g. gcc 4.1.0)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# only available in Cmake 2.8.9, \n\n# extract version from command line if not available\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#TODO Write same for clang\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "gatb-core/cmake/CppUnit.cmake" : {
      "ObjectId" : "d9bc43540557ec16185bcc94c9dc38050a12441d",
      "LastModified" : "2018-06-11T09:23:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n# CPPUNIT\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# A little hack here... We check whether the static library is reachable too.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "gatb-core/cmake/DefineInteger.cmake" : {
      "ObjectId" : "faee2b8828c557fdf225935119aee05dee07190c",
      "LastModified" : "2014-08-12T12:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n# Got from https://github.com/hoytak/hashreduce/blob/master/cmake/CheckInt128.cmake\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#message(\"Found: Enabling support for 128 bit integers using ${INT128_NAME}.\")\n",
        "Line" : 13,
        "CharPositionInLine" : 16
      },
      "2" : {
        "Text" : "#message(\"${INT128_NAME} has size ${int128_t}, can't use.\")\n",
        "Line" : 17,
        "CharPositionInLine" : 16
      },
      "3" : {
        "Text" : "################################################################################\n\n# Define INTEGER_KIND and KMER_PRECISION with k as entry\n\n################################################################################\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# we initialize the variable\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# We may have undefined parameter => we use a default value\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#message(\"-- Parameter k=${k} => INTEGER_KIND=${INTEGER_KIND} and KMER_PRECISION=${KMER_PRECISION}\")\n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "gatb-core/cmake/Delivery.cmake" : {
      "ObjectId" : "373fd012e6648010ca35ad75da49a4ac58f5428a",
      "LastModified" : "2018-06-11T09:23:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n# DELIVERY\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We get the 'package' and 'package_source' targets\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We get the user name\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We get the date\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# We may have to set (if not defined) the CPACK_GFORGE_PROJECT_NAME\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# We define the name of the bin archive\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# We set the text holding all the information about the delivery.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# We define the Inria Forge place where to place a copy of the bin archive\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "################################################################################\n\n# MAIN TARGET\n\n################################################################################\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# We add a custom target for delivery binaries\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# We add a custom target for delivery binaries\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "################################################################################\n\n# TARGET 'help'\n\n################################################################################\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# We add a custom target for delivery sources\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "gatb-core/cmake/GatbCore.cmake" : {
      "ObjectId" : "43797ce820bbe76c1de2a990780eb14680127f5d",
      "LastModified" : "2018-06-11T09:23:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#  MACROS \n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "################################################################################\n\n# GATB-CORE MANAGEMENT\n\n################################################################################\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# we don't want to install all GATB-CORE items\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We look for the gatb-core directory\n\n# We look for the gatb-core directory\n\n# WARNING: GATB-core has to be in one of the following HARDCODED locations in your project!!\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# we depend on gatb-core; here, we define where to find all the required material\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# We copy the source of gatb-core to the third party directory and the cmake directory\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# For the source archive, we exclude some unwanted directories.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# We set the cmake helpers directory\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "gatb-core/cmake/UseLATEX.cmake" : {
      "ObjectId" : "709b0e08b6ee126aad43d122f4c14419cff04747",
      "LastModified" : "2014-08-12T12:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake utility to compile Latex documents with pdflatex \n\n# Version: 1.0.1\n\n# Author: Baptiste Wicht <baptiste.wicht@gmail.com>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Original statement\n\n# Author: Kenneth Moreland <kmorel@sandia.gov>\n\n#\n\n# Copyright 2004 Sandia Corporation.\n\n# Under the terms of Contract DE-AC04-94AL85000, there is a non-exclusive\n\n# license for use of this work by or on behalf of the\n\n# U.S. Government. Redistribution and use in source and binary forms, with\n\n# or without modification, are permitted provided that this Notice and any\n\n# statement of authorship are reproduced on all copies.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The following function is defined:\n\n# ADD_LATEX_DOCUMENT(<tex_file>\n\n#                    [BIBFILES <bib_files>]\n\n#                    [INPUTS <input_tex_files>]\n\n#                    [IMAGE_DIRS] <image_directories>\n\n#                    [IMAGES] <image_files>\n\n#                    [CONFIGURE] <tex_files>\n\n#                    [DEPENDS] <tex_files>\n\n#                    [FILTER_OUTPUT]\n\n#                    [USE_INDEX] \n\n#                    [USE_GLOSSARY])\n\n#\n\n# Adds targets that compile <tex_file>.The latex output is placed in LATEX_OUTPUT_PATH \n\n# or CMAKE_CURRENT_BINARY_DIR if the former is not set.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Change log\n\n#\n\n# Version 1.0.1\n\n#\n\n# Add filter feature\n\n#\n\n# Version 1.0.0\n\n#\n\n# Clean up version of Kenneth Moreland\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#############################################################################\n\n# Find the location of myself while originally executing.  If you do this\n\n# inside of a macro, it will recode where the macro was invoked.\n\n#############################################################################\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#############################################################################\n\n# Generic helper functions\n\n#############################################################################\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Parse function arguments.  Variables containing the results are placed\n\n# in the global scope for historical reasons.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Match the contents of a file to a regular expression.\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# The FILE STRINGS command would be a bit better, but I'm not totally sure\n\n# the match will always be to a whole line, and I don't want to break things.\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# A version of GET_FILENAME_COMPONENT that treats extensions after the last\n\n# period rather than the first.  To the best of my knowledge, all filenames\n\n# typically used by LaTeX, including image files, have small extensions\n\n# after the last dot.\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#############################################################################\n\n# Functions that perform processing during a LaTeX build.\n\n#############################################################################\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# This is really a bare bones port of the makeglossaries perl script into\n\n# CMake scripting.\n",
        "Line" : 130,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "#############################################################################\n\n# Helper functions for establishing LaTeX build.\n\n#############################################################################\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# ImageMagick has broken eps to pdf conversion, use ps2pdf instead\n",
        "Line" : 310,
        "CharPositionInLine" : 12
      },
      "14" : {
        "Text" : "# Makes custom commands to convert a file to a particular type.\n",
        "Line" : 329,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Check input filename for potential problems with LaTeX.\n",
        "Line" : 345,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Adds custom commands to process the given files for pdf builds.\n\n# Adds the output files to the given variables (does not replace).\n",
        "Line" : 374,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Make sure the output directory exists.\n",
        "Line" : 387,
        "CharPositionInLine" : 12
      },
      "18" : {
        "Text" : "# Do conversions for PDF and SVG\n",
        "Line" : 391,
        "CharPositionInLine" : 12
      },
      "19" : {
        "Text" : "# Special case: output exists but input does not.  Assume that it was\n\n# created elsewhere and skip the input file copy.\n",
        "Line" : 448,
        "CharPositionInLine" : 12
      },
      "20" : {
        "Text" : "#############################################################################\n\n# Commands provided by the UseLATEX.cmake \"package\"\n\n#############################################################################\n",
        "Line" : 456,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Parses arguments to ADD_LATEX_DOCUMENT and ADD_LATEX_TARGETS and sets the\n\n# variables LATEX_TARGET, LATEX_IMAGE_DIR, LATEX_BIBFILES, LATEX_DEPENDS, and\n\n# LATEX_INPUTS.\n",
        "Line" : 466,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# The first argument is the target latex file.\n",
        "Line" : 477,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# Backward compatibility between 1.6.0 and 1.6.1.\n",
        "Line" : 492,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# The commands to run LaTeX.  They are repeated multiple times.\n",
        "Line" : 499,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# The command to create the index\n",
        "Line" : 503,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# The command to create the bibliography\n",
        "Line" : 506,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# Set up target names.\n",
        "Line" : 517,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# Probably not all of these will be generated, but they could be.\n\n# Note that the aux file is added later.\n",
        "Line" : 521,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# For each directory in LATEX_IMAGE_DIRS, glob all the image files and\n\n# place them in LATEX_IMAGES.\n",
        "Line" : 548,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# Repeat these commands twice.\n",
        "Line" : 584,
        "CharPositionInLine" : 29
      },
      "31" : {
        "Text" : "# In fast mode, only do one pass\n",
        "Line" : 619,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# Do two pass at the end\n",
        "Line" : 624,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# If all features are enabled, create faster version\n",
        "Line" : 631,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# Finally add the target to the makefile\n",
        "Line" : 657,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "#############################################################################\n\n# Actually do stuff\n\n#############################################################################\n",
        "Line" : 715,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Must be part of the actual configure (included from CMakeLists.txt).\n",
        "Line" : 732,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 37
    },
    "gatb-core/doc/CMakeLists.txt" : {
      "ObjectId" : "0ec67a3ea1fb82f4c8daa678ca8472c67bb1453f",
      "LastModified" : "2018-06-11T09:23:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# see http://www.cmake.org/pipermail/cmake/2008-May/021426.html\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# HERE IS A COMMAND LINE TO COPY THE HTML DOCUMENTATION TO THE GFORGE SERVER  (from the build directory)\n\n#    ",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "gatb-core/examples/CMakeLists.txt" : {
      "ObjectId" : "d3d8959fc3892dec9f54c239cdb5e01cf54d050c",
      "LastModified" : "2018-06-11T09:23:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "################################################################################\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "################################################################################\n\n#  EXAMPLES \n\n################################################################################\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We add the compilation options for the library\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# We add the path for extra libraries\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# we get the base name of the current example\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# we add an executable for this example\n",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# we use the gatb core libraries for the link\n",
        "Line" : 27,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# We add a custom target for making all examples\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "gatb-core/examples/Makefile" : {
      "ObjectId" : "40e7153c0eab9ee4baed5cbbfd0da24f11ab95e6",
      "LastModified" : "2018-06-11T09:23:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# example GATB-core makefile\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# change this to the folder where gatb-core is\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "gatb-core/scripts/NewProject/CMakeLists.txt" : {
      "ObjectId" : "a7382ee52f86270130c3e08e08f3a6f39a174df4",
      "LastModified" : "2018-06-11T09:23:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n# The version number of YOUR tool.\n\n################################################################################\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "################################################################################\n\n# Define cmake modules directory\n\n################################################################################\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "################################################################################\n\n# SUPPORTED KMER SIZES\n\n################################################################################\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# One can uncomment this line and set the wanted values\n\n#set (KSIZE_LIST \"32   64   96  128  160  192  224  256\")\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "################################################################################\n\n# THIRD PARTIES\n\n################################################################################\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# We don't want to install some GATB-CORE artifacts\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# GATB CORE\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "################################################################################\n\n# TOOLS\n\n################################################################################\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "################################################################################\n\n# Packaging\n\n################################################################################\n\n# We set the version number\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# We set the kind of archive\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Packaging the source ; we ignore unwanted files \n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Packaging the binary ; we want to include some additional files\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "gatb-core/src/CMakeLists.txt" : {
      "ObjectId" : "3ebbdc2d017c2b0109dc9318784247eb506eac36",
      "LastModified" : "2018-06-11T09:23:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#  KMER SIZE DEFINITION \n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We define the default values for kmer sizes.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# only if the tool cmake didn't override it\n",
        "Line" : 6,
        "CharPositionInLine" : 28
      },
      "3" : {
        "Text" : "#list (APPEND KSIZE_DEFAULT_LIST  32   64)\n",
        "Line" : 7,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#list (APPEND KSIZE_DEFAULT_LIST  32   64   96  128  160  192  224  256)\n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# We use a default list of kmer sizes if no one is provided by the user (via cmake -dKSIZE_LIST command)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# We set all KSIZE_x variables (used in config.in files)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# We set the default value to KSIZE_i\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# We dump some information\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "################################################################################\n\n#  CONFIGURATION FILE\n\n################################################################################\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# We build the file holding system information\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# File holding configuration macros\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# We define the list of files that need template specializations for each possible kmer size\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "################################################################################\n\n#  LIBRARY GENERATION \n\n################################################################################\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# We add the compilation options for the library\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#add_library   (gatbcore-dynamic SHARED  ${ComponentFiles} )\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#set_target_properties (gatbcore-dynamic  PROPERTIES OUTPUT_NAME  gatbcore  clean_direct_output 1)\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "################################################################################\n\n#  INSTALLATION \n\n################################################################################\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# We install the libraries\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "gatb-core/src/gatb/kmer/impl/DebloomAlgorithm.pri" : {
      "ObjectId" : "988eb36b3de3227eba7228e66f441622a423f605",
      "LastModified" : "2018-06-11T09:23:25Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#ifndef _DEBLOOM_PRI_ \n\n#define _DEBLOOM_PRI_\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#endif\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "gatb-core/src/gatb/kmer/impl/Model.pri" : {
      "ObjectId" : "dd326baab75cf3a15c7548f504961fabf0e1cf02",
      "LastModified" : "2018-06-11T09:23:25Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "gatb-core/src/gatb/tools/math/LargeInt1.pri" : {
      "ObjectId" : "7b718b25218bc8d35a6685ade2f8faac05573292",
      "LastModified" : "2018-06-11T09:23:25Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#ifdef USE_LARGEINT_CONSTRUCTOR\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#endif\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#endif\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3,
      "Errorlog" : "line 19:4 token recognition error at: '\\f'\nline 20:4 token recognition error at: '\\d'\nline 21:4 token recognition error at: '\\a'\nline 22:4 token recognition error at: '\\b'\nline 32:7 token recognition error at: '\\p'\nline 94:7 token recognition error at: '\\p'\nline 110:27 token recognition error at: '\\0'\nline 117:7 token recognition error at: '\\p'\nline 132:23 token recognition error at: '\\0'\nline 188:7 token recognition error at: '\\p'\n"
    },
    "gatb-core/src/gatb/tools/math/LargeInt2.pri" : {
      "ObjectId" : "25274cfcb06259b914122ecb80ececc59cf7c20b",
      "LastModified" : "2018-06-11T09:23:25Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#if  INT128_FOUND == 1\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#ifdef USE_LARGEINT_CONSTRUCTOR \n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#endif\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#endif //INT128_FOUND\n",
        "Line" : 284,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4,
      "Errorlog" : "line 20:4 token recognition error at: '\\f'\nline 21:4 token recognition error at: '\\d'\nline 22:4 token recognition error at: '\\a'\nline 23:4 token recognition error at: '\\b'\nline 36:7 token recognition error at: '\\p'\nline 82:7 token recognition error at: '\\p'\nline 83:7 token recognition error at: '\\p'\nline 101:7 token recognition error at: '\\p'\nline 117:23 token recognition error at: '\\0'\nline 124:7 token recognition error at: '\\p'\nline 132:23 token recognition error at: '\\0'\nline 176:36 token recognition error at: '\\h'\n"
    },
    "gatb-core/test/CMakeLists.txt" : {
      "ObjectId" : "17ec23e10acde962e4f6ff39bf9dc819b10fdc74",
      "LastModified" : "2018-06-11T09:23:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "################################################################################\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "################################################################################\n\n#  UNIT TESTS GENERATION \n\n################################################################################\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "################################################################################\n\n#  BENCHMARK TESTS GENERATION \n\n################################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "gatb-core/test/benchmark/CMakeLists.txt" : {
      "ObjectId" : "9da1d7a35b839b344c5feb7835b3e41753b74e39",
      "LastModified" : "2018-06-11T09:23:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#  EXAMPLES \n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# needed for bench_mphf\n",
        "Line" : 7,
        "CharPositionInLine" : 53
      },
      "CommentCount" : 2
    },
    "gatb-core/test/unit/CMakeLists.txt" : {
      "ObjectId" : "66dadd04bb1fea8f2a047c8f5762fe8b14e8b210",
      "LastModified" : "2018-06-11T09:23:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#  CPPUNIT \n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We add the compilation options for the library\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We add the path for extra libraries\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#################################################\n\n#  LAUNCH \n\n#################################################\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# We add an optional target for launching unit tests\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#################################################\n\n#  INSTALL \n\n#################################################\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "gatb-core/thirdparty/CMakeLists.txt" : {
      "ObjectId" : "6e0b5c4f51ec0308d55e0ff86a405a2639ed39f5",
      "LastModified" : "2018-06-11T09:23:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#  HDF5 GENERATION \n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#SET (HDF5_ENABLE_THREADSAFE       ON)\n\n#SET (H5_HAVE_THREADSAFE 1)\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##########  MOMENTARY DEACTIVATED => CRASH ON MACOS TO BE INVESTIGATED  ##########\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#SET (CMAKE_EXE_LINKER_FLAGS       \"-lpthread -lz\")\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#SET (HDF5_INSTALL_BIN_DIR           ${PROJECT_BINARY_DIR}/bin/${CMAKE_BUILD_TYPE})\n\n#SET (HDF5_INSTALL_LIB_DIR           ${PROJECT_BINARY_DIR}/lib/${CMAKE_BUILD_TYPE})\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# We don't want warnings from HDF5 compilation\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# add HDF5 generation\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# We add a custom target for copying header files.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# We build the output directory\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# We define all the header files to be copied\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# We copy each header file\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# include other smaller libraries (json, Boophf)\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "################################################################################\n\n#  INSTALL \n\n################################################################################\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "gatb-core/thirdparty/hdf5/CMakeFilters.cmake" : {
      "ObjectId" : "262317e1a445ffad6e2205410aa6ad236f46f742",
      "LastModified" : "2018-06-11T09:23:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#option (HDF5_ALLOW_EXTERNAL_SUPPORT \"Allow External Library Building (NO GIT SVN TGZ)\" \"NO\")\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option for ZLib support\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Legacy find\n",
        "Line" : 38,
        "CharPositionInLine" : 28
      },
      "3" : {
        "Text" : "#message (FATAL_ERROR \" ZLib is Required for ZLib support in HDF5\") # let's be more relaxed here for GATB: if Zlib is not found, don't insist and we'll just compile without zlib\n",
        "Line" : 60,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# This project is being called from within another and ZLib is already configured\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option for SzLib support\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Legacy find\n",
        "Line" : 93,
        "CharPositionInLine" : 26
      },
      "CommentCount" : 7
    },
    "gatb-core/thirdparty/hdf5/CMakeInstallation.cmake" : {
      "ObjectId" : "140bac3cf86fa616d005d4483bd2e4e6955bb64a",
      "LastModified" : "2018-06-11T09:23:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Check for Installation Utilities\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Add file(s) to CMake Install\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Add Target(s) to CMake Install for import into other projects\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Export all exported targets to the build tree for use by parent project\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Set includes needed for build\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Set variables needed for installation\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Configure the hdf5-config.cmake file for the build directory\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Configure the hdf5-config.cmake file for the install directory\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Configure the hdf5-config-version .cmake file for the install directory\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Configure the libhdf5.settings file for the lib info\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Configure the HDF518_Examples.cmake file and the examples\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Configure the README.txt file for the binary package\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Configure the COPYING.txt file for the windows binary package\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Add Document File(s) to CMake Install\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Set the cpack variables\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Installers for 32- vs. 64-bit CMake:\n\n#  - Root install directory (displayed to end user at installer-run time)\n\n#  - \"NSIS package/display name\" (text used in the installer GUI)\n\n#  - Registry key used to store info about the installation\n",
        "Line" : 281,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# set the install/unistall icon used for the installer itself\n\n# There is a bug in NSI that does not handle full unix paths properly.\n",
        "Line" : 293,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# set the package header icon for MUI\n",
        "Line" : 297,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "#WiX variables\n",
        "Line" : 311,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# .. variable:: CPACK_WIX_LICENSE_RTF\n\n#  RTF License File\n\n#\n\n#  If CPACK_RESOURCE_FILE_LICENSE has an .rtf extension it is used as-is.\n\n#\n\n#  If CPACK_RESOURCE_FILE_LICENSE has an .txt extension it is implicitly\n\n#  converted to RTF by the WiX Generator.\n\n#  The expected encoding of the .txt file is UTF-8.\n\n#\n\n#  With CPACK_WIX_LICENSE_RTF you can override the license file used by the\n\n#  WiX Generator in case CPACK_RESOURCE_FILE_LICENSE is in an unsupported\n\n#  format or the .txt -> .rtf conversion does not work as expected.\n",
        "Line" : 313,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# .. variable:: CPACK_WIX_PRODUCT_ICON\n\n#  The Icon shown next to the program name in Add/Remove programs.\n",
        "Line" : 326,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#\n\n# .. variable:: CPACK_WIX_UI_BANNER\n\n#\n\n#  The bitmap will appear at the top of all installer pages other than the\n\n#  welcome and completion dialogs.\n\n#\n\n#  If set, this image will replace the default banner image.\n\n#\n\n#  This image must be 493 by 58 pixels.\n\n#\n\n# .. variable:: CPACK_WIX_UI_DIALOG\n\n#\n\n#  Background bitmap used on the welcome and completion dialogs.\n\n#\n\n#  If this variable is set, the installer will replace the default dialog\n\n#  image.\n\n#\n\n#  This image must be 493 by 312 pixels.\n\n#\n",
        "Line" : 329,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# make sure CMAKE_INSTALL_PREFIX ends in /\n",
        "Line" : 364,
        "CharPositionInLine" : 41
      },
      "23" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Configure the Info.plist file for the install bundle\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 369,
        "CharPositionInLine" : 6
      },
      "24" : {
        "Text" : "#    list (APPEND CPACK_GENERATOR \"RPM\")\n",
        "Line" : 397,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Configure the spec file for the install RPM\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 422,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "#    configure_file (\"${HDF5_RESOURCES_DIR}/hdf5.spec.in\" \"${CMAKE_CURRENT_BINARY_DIR}/${HDF5_PACKAGE_NAME}.spec\" @ONLY IMMEDIATE)\n\n#    set (CPACK_RPM_USER_BINARY_SPECFILE \"${CMAKE_CURRENT_BINARY_DIR}/${HDF5_PACKAGE_NAME}.spec\")\n",
        "Line" : 425,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# By default, do not warn when built on machines using only VS Express:\n",
        "Line" : 429,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "#---------------------------------------------------------------------------\n\n# Now list the cpack commands\n\n#---------------------------------------------------------------------------\n",
        "Line" : 482,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 29
    },
    "gatb-core/thirdparty/hdf5/CMakeLists.txt" : {
      "ObjectId" : "58951366a4608d83b5099373613c113762eb180e",
      "LastModified" : "2018-06-11T09:23:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Instructions for use : Normal Build\n\n#\n\n# For standard build of HDF5 libraries,tests and tools.\n\n# Run cmake using the HDF5 source tree to generate a build tree.\n\n# Enable/Disable options according to requirements and\n\n# set CMAKE_INSTALL_PREFIX to the required install path.\n\n# Make install can be used to install all components for system-wide use.\n\n#\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Instructions for use : Sub-Project Build\n\n#\n\n# To include HDF5 as a sub-project within another project.\n\n# Set HDF5_EXTERNALLY_CONFIGURED to 1 in the parent project and\n\n# supply values for the following variables...\n\n#\n\n# HDF5_EXPORTED_TARGETS :\n\n#   Set this to the name of the targets variable which controls exports\n\n#   If unset (because parent project does not support/use the\n\n#   install (EXPORT target...) syntax), then targets are not configured\n\n#   for export during install.\n\n#\n\n# HDF5_LIB_DEPENDENCIES :\n\n#   If the build of HDF5 libs is being customized, then rules for the\n\n#   dependencies of the HDF5 libs may be 'incomplete', add additional\n\n#   dependencies to this variable so that external projects pick them up\n\n#\n\n# HDF5_EXTERNAL_LIB_PREFIX :\n\n#   If the parent project needs to install hdf libraries, but avoid\n\n#   name conflicts with system versions, then a prefix may be added\n\n#   to ensure that the correct versions configured are used.\n\n#\n\n# HDF5_INSTALL_BIN_DIR, HDF5_INSTALL_LIB_DIR, HDF5_INSTALL_INCLUDE_DIR, HDF5_INSTALL_DATA_DIR :\n\n#   Customize the 'bin', 'lib', 'include', and 'share' installation directories.\n\n#\n\n# HDF5_INSTALL_NO_DEVELOPMENT :\n\n#   Set to true to skip installation of headers and CMake package files.\n\n#\n\n# Consider this example from the ParaView project, it builds its own zlib\n\n# library and tells HDF5 to add it as a dependency - this ensures that\n\n# any project making use of this build of HDF5 will use the correct zlib\n\n#\n\n#   # Tell hdf5 that we are manually overriding certain settings\n\n#   set (HDF5_EXTERNALLY_CONFIGURED 1)\n\n#   # Avoid duplicating names of installed libraries\n\n#   set (HDF5_EXTERNAL_LIB_PREFIX \"vtk\")\n\n#   # Export configuration to this export variable\n\n#   set (HDF5_EXPORTED_TARGETS \"paraview-targets\")\n\n#\n\n#   # Setup all necessary overrides for zlib so that HDF5 uses our\n\n#   # internally compiled zlib rather than any other version\n\n#   if (HDF5_ENABLE_Z_LIB_SUPPORT)\n\n#     # We must tell the main HDF5 library that it depends on our zlib\n\n#     set (HDF5_LIB_DEPENDENCIES vtkzlib)\n\n#     # Override the zlib header file\n\n#     if (VTK_USE_SYSTEM_ZLIB)\n\n#       set (H5_ZLIB_HEADER \"zlib.h\")\n\n#     else (VTK_USE_SYSTEM_ZLIB)\n\n#       set (H5_ZLIB_HEADER \"vtk_zlib.h\")\n\n#       # Set vars that FindZlib would have set if used in sub project\n\n#       set (ZLIB_INCLUDE_DIRS \"${VTK_ZLIB_INCLUDE_DIRS}\")\n\n#       set (ZLIB_LIBRARIES vtkzlib)\n\n#     endif (VTK_USE_SYSTEM_ZLIB)\n\n#   endif (HDF5_ENABLE_Z_LIB_SUPPORT)\n\n#\n\n#   # Add the sub project\n\n#   add_subdirectory (Utilities/hdf5-1.8)\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Allow Visual Studio solution directories\n\n#-----------------------------------------------------------------------------\n\n# Provide a way for Visual Studio Express users to turn OFF the new FOLDER\n\n# organization feature. Default to ON for non-Express users. Express users must\n\n# explicitly turn off this option to build HDF5 in the Express IDE...\n\n#\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Set the core names of all the libraries\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Set the true names of all the libraries if customized by external project\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Set the target names of all the libraries\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Define some CMake variables for use later in the project\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# parse the full version number from H5public.h and include in H5_VERS_INFO\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#message (STATUS \"VERSION: ${H5_VERS_MAJOR}.${H5_VERS_MINOR}.${H5_VERS_RELEASE}-${H5_VERS_SUBRELEASE}\")\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# parse the full soversion number from config/lt_vers.am and include in H5_SOVERS_INFO\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Basic HDF5 stuff here\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 299,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Include some macros for reusable code\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 324,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Setup output Directories\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 331,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# if we are externally configured, but the project uses old cmake scripts\n\n# this may not be set and utilities like H5detect will fail\n",
        "Line" : 353,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Targets built within this project are exported at Install time for use\n\n# by other projects using FindHDF5.\n\n#-----------------------------------------------------------------------------\n\n#if (NOT HDF5_EXPORTED_TARGETS)\n\n#  set (HDF5_EXPORTED_TARGETS \"hdf5-targets\")\n\n#endif (NOT HDF5_EXPORTED_TARGETS)\n",
        "Line" : 360,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# To include a library in the list exported by the project AT BUILD TIME,\n\n# add it to this variable. This is NOT used by Make Install, but for projects\n\n# which include hdf5 as a sub-project within their build tree\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 368,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Run all the CMake configuration tests for our build environment\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 380,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Mac OS X Options\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 387,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option to Build Shared and Static libs, default is static\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 394,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option to Build Static executables\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 406,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option to use code coverage\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 417,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option to indicate using dmalloc\n\n#-----------------------------------------------------------------------------\n\n# option (HDF5_ENABLE_USING_DMALLOC \"Indicate that dmalloc is used\" OFF)\n\n# if (HDF5_ENABLE_USING_DMALLOC)\n\n#   find_package (DMALLOC)\n\n#   set (H5_HAVE_DMALLOC DMALLOC_FOUND)\n\n# endif (HDF5_ENABLE_USING_DMALLOC)\n",
        "Line" : 427,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option to indicate using a memory checker\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 436,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option to use deprecated public API symbols\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 444,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# When building utility executables that generate other (source) files :\n\n# we make use of the following variables defined in the root CMakeLists.\n\n# Certain systems may add /Debug or /Release to output paths\n\n# and we need to call the executable from inside the CMake configuration\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 454,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Add some definitions for Debug Builds\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 486,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Enable tracing of the API\n",
        "Line" : 493,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Enable instrumenting of the library's internal operations\n",
        "Line" : 497,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option to embed library info into executables\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 510,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# All libs/tests/examples need the main include directories\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 520,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option to Enable MPI Parallel\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 525,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# MPI checks, only do these if MPI_C_FOUND is true, otherwise they always fail\n\n# and once set, they are cached as false and not regenerated\n",
        "Line" : 535,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# Used by Fortran + MPI\n",
        "Line" : 538,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# Parallel IO usage requires MPI to be Linked and Included\n",
        "Line" : 546,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option to use 1.6.x API\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 556,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Include user macros\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 566,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Include filter (zlib, szip, etc.) macros\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 571,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option for external libraries on windows\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 576,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option to use threadsafe\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 592,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# check for unsupported options\n",
        "Line" : 597,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Add the HDF5 Library Target to the build\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 643,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Dashboard and Testing Settings\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 663,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option to build HDF5 Tools\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 702,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option to build examples\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 712,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option to build High Level API's\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 722,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option to build Fortran bindings/tests/examples\n\n# Make sure this appears before the CONFIGURE_FILE step\n\n# so that fortran name mangling is detected before writing H5pubconf.h\n\n#-----------------------------------------------------------------------------\n\n# Set default name mangling : overridden by Fortran detection in fortran dir\n",
        "Line" : 733,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#-- Build the High Level Fortran source codes\n",
        "Line" : 764,
        "CharPositionInLine" : 8
      },
      "47" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option to build HDF5 C++ Library\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 771,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# check for unsupported options\n",
        "Line" : 777,
        "CharPositionInLine" : 4
      },
      "49" : {
        "Text" : "#-- Build the High Level Fortran source codes\n",
        "Line" : 791,
        "CharPositionInLine" : 8
      },
      "50" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Check if Fortran's default real is double precision. If it is and HL is\n\n# being built then configure should fail due to bug HDFFV-889.\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 798,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Generate the H5pubconf.h file containing user settings needed by compilation\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 808,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 52
    },
    "gatb-core/thirdparty/hdf5/CTestConfig.cmake" : {
      "ObjectId" : "9e95b4ccc0c409a25ed28d0d9d59fbbc25e7a7ec",
      "LastModified" : "2018-06-11T09:23:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## This file should be placed in the root directory of your project.\n\n## Then modify the CMakeLists.txt file in the root directory of your\n\n## project to incorporate the testing dashboard.\n\n## # The following are required to uses Dart and the Cdash dashboard\n\n##   ENABLE_TESTING()\n\n##   INCLUDE(CTest)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "gatb-core/thirdparty/hdf5/UserMacros.cmake" : {
      "ObjectId" : "65ea5d47520328ca9391e6c8d3ccde91b8ac3431",
      "LastModified" : "2018-06-11T09:23:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################\n\n#  Include file for user options\n\n########################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#------------------- E X A M P L E   B E G I N--------------------------------\n\n#-----------------------------------------------------------------------------\n\n# Option to Build with User Defined Values\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#------------------- E X A M P L E   E N D -----------------------------------\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "gatb-core/thirdparty/hdf5/config/cmake/CTestCustom.cmake" : {
      "ObjectId" : "8d80f1942704d7de13ec48d4be38c3fa8b9ac2e5",
      "LastModified" : "2018-06-11T09:23:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#    \"fpp:[ \\t]*warning:[ \\t]*cannot remove H5_DEBUG_API - not a predefined macro\"\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#designed to fail\n\n#designed to need flush1\n\n#uses runTest.cmake\n\n#uses runTest.cmake\n\n#uses runTest.cmake\n\n#uses grepTest.cmake\n",
        "Line" : 22,
        "CharPositionInLine" : 28
      },
      "2" : {
        "Text" : "######### tools/h5copy #########\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "######### tools/h5diff #########\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "######### tools/h5dump #########\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "######### tools/h5import #########\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "######### tools/h5jam #########\n",
        "Line" : 51,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "######### tools/h5ls #########\n",
        "Line" : 182,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "######### tools/h5repack #########\n",
        "Line" : 184,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#uses runTest.cmake\n\n#uses grepTest.cmake\n\n#uses grepTest.cmake\n\n#uses grepTest.cmake\n\n#uses grepTest.cmake\n\n#uses grepTest.cmake\n\n#uses grepTest.cmake\n\n#uses grepTest.cmake\n\n#uses grepTest.cmake\n\n#uses grepTest.cmake\n\n#uses grepTest.cmake\n\n#uses grepTest.cmake\n\n#uses grepTest.cmake\n\n#uses grepTest.cmake\n\n#uses grepTest.cmake\n\n#uses grepTest.cmake\n\n#uses grepTest.cmake\n\n#uses grepTest.cmake\n\n#uses grepTest.cmake\n\n#uses grepTest.cmake\n",
        "Line" : 186,
        "CharPositionInLine" : 56
      },
      "10" : {
        "Text" : "######### tools/h5stat #########\n",
        "Line" : 207,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "######### tools/misc #########\n",
        "Line" : 209,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "######### examples #########\n",
        "Line" : 212,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 13
    },
    "gatb-core/thirdparty/hdf5/config/cmake/ConfigureChecks.cmake" : {
      "ObjectId" : "606fae9136c68e230360eebb35518517c977c662",
      "LastModified" : "2018-06-11T09:23:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Include all the necessary files for macros\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option to Clear File Buffers before write --enable-clear-file-buffers\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option for --enable-strict-format-checks\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option for --enable-metadata-trace-file\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ----------------------------------------------------------------------\n\n# Decide whether the data accuracy has higher priority during data\n\n# conversions.  If not, some hard conversions will still be prefered even\n\n# though the data may be wrong (for example, some compilers don't\n\n# support denormalized floating values) to maximize speed.\n\n#\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ----------------------------------------------------------------------\n\n# Decide whether the presence of user's exception handling functions is\n\n# checked and data conversion exceptions are returned.  This is mainly\n\n# for the speed optimization of hard conversions.  Soft conversions can\n\n# actually benefit little.\n\n#\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ----------------------------------------------------------------------\n\n# Check if they would like the function stack support compiled in\n\n#\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#  Are we going to use HSIZE_T\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# so far we have no check for this\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# TODO --------------------------------------------------------------------------\n\n# Should the Default Virtual File Driver be compiled?\n\n# This is hard-coded now but option should added to match configure\n\n#\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ----------------------------------------------------------------------\n\n# Set the flag to indicate that the machine has window style pathname,\n\n# that is, \"drive-letter:\\\" (e.g. \"C:\") or \"drive-letter:/\" (e.g. \"C:/\").\n\n# (This flag should be _unset_ for all machines, except for Windows)\n",
        "Line" : 94,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# ----------------------------------------------------------------------\n\n# END of WINDOWS Hard code Values\n\n# ----------------------------------------------------------------------\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Find the library containing clock_gettime()\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#  Check if Direct I/O driver works\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Macro to determine the various conversion capabilities\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# message (STATUS \"===> ${TEST}\")\n",
        "Line" : 166,
        "CharPositionInLine" : 3
      },
      "17" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Macro to make some of the conversion tests easier to write/read\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Check various conversion capabilities\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# ----------------------------------------------------------------------\n\n# Set the flag to indicate that the machine is using a special algorithm to convert\n\n# 'long double' to '(unsigned) long' values.  (This flag should only be set for \n\n# the IBM Power6 Linux.  When the bit sequence of long double is \n\n# 0x4351ccf385ebc8a0bfcc2a3c3d855620, the converted value of (unsigned)long \n\n# is 0x004733ce17af227f, not the same as the library's conversion to 0x004733ce17af2282.\n\n# The machine's conversion gets the correct value.  We define the macro and disable\n\n# this kind of test until we figure out what algorithm they use.\n\n#\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# ----------------------------------------------------------------------\n\n# Set the flag to indicate that the machine is using a special algorithm\n\n# to convert some values of '(unsigned) long' to 'long double' values.  \n\n# (This flag should be off for all machines, except for IBM Power6 Linux, \n\n# when the bit sequences are 003fff..., 007fff..., 00ffff..., 01ffff..., \n\n# ..., 7fffff..., the compiler uses a unknown algorithm.  We define a \n\n# macro and skip the test for now until we know about the algorithm.\n\n#\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# ----------------------------------------------------------------------\n\n# Set the flag to indicate that the machine can accurately convert\n\n# 'long double' to '(unsigned) long long' values.  (This flag should be set for\n\n# all machines, except for Mac OS 10.4 and SGI IRIX64 6.5.  When the bit sequence\n\n# of long double is 0x4351ccf385ebc8a0bfcc2a3c..., the values of (unsigned)long long\n\n# start to go wrong on these two machines.  Adjusting it higher to\n\n# 0x4351ccf385ebc8a0dfcc... or 0x4351ccf385ebc8a0ffcc... will make the converted\n\n# values wildly wrong.  This test detects this wrong behavior and disable the test.\n\n#\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# ----------------------------------------------------------------------\n\n# Set the flag to indicate that the machine can accurately convert\n\n# '(unsigned) long long' to 'long double' values.  (This flag should be set for\n\n# all machines, except for Mac OS 10.4, when the bit sequences are 003fff...,\n\n# 007fff..., 00ffff..., 01ffff..., ..., 7fffff..., the converted values are twice\n\n# as big as they should be.\n\n#\n",
        "Line" : 243,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# ----------------------------------------------------------------------\n\n# Check if pointer alignments are enforced\n\n#\n",
        "Line" : 251,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# -----------------------------------------------------------------------\n\n# wrapper script variables\n\n# \n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "gatb-core/thirdparty/hdf5/config/cmake/HDF5Macros.cmake" : {
      "ObjectId" : "d88e672c5ce1fb83d10bc0ed6b80a2b256046275",
      "LastModified" : "2018-06-11T09:23:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# SOVERSION passed in ARGN when shared\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#-- Apple Specific install_name for libraries\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# adapt target to build frameworks instead of dylibs\n",
        "Line" : 37,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 4
    },
    "gatb-core/thirdparty/hdf5/config/cmake/HDFCompilerFlags.cmake" : {
      "ObjectId" : "c637c73a9aecbaa78d3fe50f73d2b6c10270b97b",
      "LastModified" : "2018-06-11T09:23:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Compiler specific flags : Shouldn't there be compiler tests for these\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option to allow the user to disable compiler warnings\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# MSVC uses /w to suppress warnings.  It also complains if another\n\n# warning level is given, so remove it.\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Borland uses -w- to suppress warnings.\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Most compilers use -w to suppress warnings.\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# CDash is configured to only allow 3000 warnings, so\n\n# break into groups (from the config/gnu-flags file)\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Append warning flags\n\n# Don't use the '-Wtraditional' flag, we're way past having K&R C code\n\n# set (H5_CFLAGS \"${H5_CFLAGS} -Wtraditional\")\n\n# Don't use the '-Wtraditional-conversion' flag, there's too many warnings\n\n#  from GCC's assert macro\n\n# set (H5_CFLAGS \"${H5_CFLAGS} -Wtraditional-conversion\")\n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Append warning flags from gcc-3* case\n\n# (don't use -Wpadded flag for normal builds, many of the warnings its\n\n#   issuing can't be fixed and they are making it hard to detect other,\n\n#   more important warnings)\n\n#set (H5_CFLAGS \"${H5_CFLAGS} -Wfloat-equal -Wmissing-format-attribute -Wpadded\")\n",
        "Line" : 78,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Append warning flags from gcc-3.2* case\n",
        "Line" : 85,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Enable more format checking flags, beyond the basic -Wformat included\n\n# in -Wall\n",
        "Line" : 88,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# The \"unreachable code\" warning appears to be reliable now...\n\n# (this warning was removed in gcc 4.5+)\n",
        "Line" : 92,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Append warning flags from gcc-3.3* case\n",
        "Line" : 98,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Append warning flags from gcc-3.4* case\n",
        "Line" : 101,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Append more extra warning flags that only gcc4.0+ know about\n",
        "Line" : 104,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Append more extra warning flags that only gcc 4.1+ know about\n",
        "Line" : 107,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Append more extra warning flags that only gcc 4.2+ know about\n",
        "Line" : 110,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Append more extra warning flags that only gcc 4.3+ know about\n\n#\n\n# Technically, variable-length arrays are part of the C99 standard, but\n\n#   we should approach them a bit cautiously... -QAK\n",
        "Line" : 113,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Append more extra warning flags that only gcc 4.4+ know about\n",
        "Line" : 119,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Append more extra warning flags that only gcc 4.5+ know about\n",
        "Line" : 122,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Append more extra warning flags that only gcc 4.6+ know about\n",
        "Line" : 127,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Append more extra warning flags that only gcc 4.7+ know about\n",
        "Line" : 132,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Append more extra warning flags that only gcc 4.8+ know about\n",
        "Line" : 137,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Append more extra warning flags that only gcc 4.9+ know about\n",
        "Line" : 142,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# (There was no release of gcc 5.0)\n",
        "Line" : 147,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# Append more extra warning flags that only gcc 5.1+ know about\n",
        "Line" : 149,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option to allow the user to enable all warnings\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option to allow the user to enable warnings by groups\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option to allow the user to enable warnings by groups\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option to allow the user to enable warnings by groups\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option to allow the user to enable warnings by groups\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option to allow the user to enable warnings by groups\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option to allow the user to enable warnings by groups\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option to allow the user to enable warnings by groups\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# This is in here to help some of the GCC based IDES like Eclipse\n\n# and code blocks parse the compiler errors and warnings better.\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 34
    },
    "gatb-core/thirdparty/hdf5/config/cmake/UserMacros/Windows_MT.cmake" : {
      "ObjectId" : "a54f22c34b5e7e9ace595be6f05a1a2621b6ac98",
      "LastModified" : "2018-06-11T09:23:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################\n\n#  Include file for user options\n\n########################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# To use this option, copy both the macro and option code\n\n# into the root UserMacros.cmake file. \n\n# OR add an include to the root UserMacros.cmake file:\n\n# INCLUDE(path_to_file/WINDOWS_MT.cmake)\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option to Build with Static CRT libraries on Windows\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "gatb-core/thirdparty/hdf5/config/cmake/cacheinit.cmake" : {
      "ObjectId" : "5fbee625553e658dc89f538ac19bd04eda0fb223",
      "LastModified" : "2018-06-11T09:23:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is the CMakeCache file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########################\n\n# EXTERNAL cache entries\n\n########################\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "gatb-core/thirdparty/hdf5/config/cmake/mccacheinit.cmake" : {
      "ObjectId" : "991614a5910ed2afd5bebe810cb48a8e92af0668",
      "LastModified" : "2018-06-11T09:23:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is the CMakeCache file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########################\n\n# EXTERNAL cache entries\n\n########################\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "gatb-core/thirdparty/hdf5/config/cmake/scripts/CTestScript.cmake" : {
      "ObjectId" : "75e61ee8c5a7401828340933e5a11762b7001818",
      "LastModified" : "2018-06-11T09:23:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################\r\n\n# This dashboard is maintained by The HDF Group\r\n\n# For any comments please contact cdashhelp@hdfgroup.org\r\n\n#\r\n\n########################################################\r\n\n# -----------------------------------------------------------\r\n\n# -- Get environment\r\n\n# -----------------------------------------------------------\r\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## machine name not provided - attempt to discover with uname\r\n\n## -- set hostname\r\n\n## --------------------------\r\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "## machine name provided\r\n\n## --------------------------\r\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#-----------------------------------------------------------------------------\r\n\n# MAC machines need special option\r\n\n#-----------------------------------------------------------------------------\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Compiler choice\r\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Shared fortran is not supported, build static \r\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#-----------------------------------------------------------------------------\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## Uncompress source if tar file provided\r\n\n## --------------------------\r\n",
        "Line" : 73,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "## --------------------------\r\n\n## use subversion to get source\r\n\n#-----------------------------------------------------------------------------\r\n\n## cygwin does not handle the find_package() call\r\n\n## --------------------------\r\n",
        "Line" : 113,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "#-----------------------------------------------------------------------------\r\n\n## Clear the build directory\r\n\n## --------------------------\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Use multiple CPU cores to build\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#-----------------------------------------------------------------------------\r\n\n# Send the main script as a note.\r\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#-----------------------------------------------------------------------------\r\n\n# Check for required variables.\r\n\n# --------------------------\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#-----------------------------------------------------------------------------\r\n\n# Initialize the CTEST commands\r\n\n#------------------------------\r\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#-----------------------------------------------------------------------------\r\n\n## -- set output to english\r\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Print summary information.\r\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#-----------------------------------------------------------------------------\r\n\n#-----------------------------------------------------------------------------\r\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "## NORMAL process\r\n\n## -- LOCAL_UPDATE updates the source folder from svn\r\n\n## -- LOCAL_SUBMIT reports to CDash server\r\n\n## -- LOCAL_SKIP_TEST skips the test process (only builds)\r\n\n## -- LOCAL_MEMCHECK_TEST executes the Valgrind testing\r\n\n## -- LOCAL_COVERAGE_TEST executes code coverage process\r\n\n## --------------------------\r\n",
        "Line" : 229,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "##-----------------------------------------------\r\n\n## Package the product\r\n\n##-----------------------------------------------\r\n",
        "Line" : 282,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "#-----------------------------------------------------------------------------\r\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "gatb-core/thirdparty/hdf5/config/cmake/scripts/HDF518config.cmake" : {
      "ObjectId" : "55e46674f63401943d715e2c0088c7a0973c53fe",
      "LastModified" : "2018-06-11T09:23:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#############################################################################################\r\n\n### ${CTEST_SCRIPT_ARG} is of the form OPTION=VALUE                                       ###\r\n\n### BUILD_GENERATOR required [Unix, VS2015, VS201564, VS2013, VS201364, VS2012, VS201264] ###\r\n\n### ctest -S HDF518config.cmake,BUILD_GENERATOR=VS201264 -C Release -V -O hdf518.log      ###\r\n\n#############################################################################################\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "############################################################################\r\n\n# Usage:\r\n\n#     ctest -S HDF518config.cmake,OPTION=VALUE -C Release -VV -O test.log\r\n\n# where valid options for OPTION are:\r\n\n#     BUILD_GENERATOR - The cmake build generator:\r\n\n#            Unix    * Unix Makefiles\r\n\n#            VS2015    * Visual Studio 14 2015\r\n\n#            VS201564 * Visual Studio 14 2015 Win64\r\n\n#            VS2013    * Visual Studio 12 2013\r\n\n#            VS201364 * Visual Studio 12 2013 Win64\r\n\n#            VS2012    * Visual Studio 11 2012\r\n\n#            VS201264 * Visual Studio 11 2012 Win64\r\n\n#\r\n\n#     INSTALLDIR  -  root folder where hdf5 is installed\r\n\n#     CTEST_CONFIGURATION_TYPE  - Release, Debug, etc\r\n\n#     CTEST_SOURCE_NAME  -  source folder\r\n\n#     STATIC_LIBRARIES  -  Build/use static libraries\r\n\n#     FORTRAN_LIBRARIES -  Build/use fortran libraries\r\n\n#     NO_MAC_FORTRAN  - Yes to be SHARED on a Mac\r\n\n##############################################################################\r\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##############################################################################\r\n\n# handle input parameters to script.\r\n\n#BUILD_GENERATOR - which CMake generator to use, required\r\n\n#INSTALLDIR - HDF5-1.8 root folder\r\n\n#CTEST_CONFIGURATION_TYPE - Release, Debug, RelWithDebInfo\r\n\n#CTEST_SOURCE_NAME - name of source folder; HDF5-1.8.16\r\n\n#STATIC_LIBRARIES - Default is YES\r\n\n#FORTRAN_LIBRARIES - Default is NO\r\n\n#NO_MAC_FORTRAN - set to TRUE to allow shared libs on a Mac\r\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# transform ctest script arguments of the form\r\n\n# script.ctest,var1=value1,var2=value2\r\n\n# to variables with the respective names set to the respective values\r\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# build generator must be defined\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "###################################################################\r\n\n#########       Following describes compiler           ############\r\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "##  Set the following to unique id your computer  ##\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "##  Set the following to unique id your computer  ##\r\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "###################################################################\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "###################################################################\r\n\n#########       Following is for submission to CDash   ############\r\n\n###################################################################\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "###################################################################\r\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "###################################################################\r\n\n#####       Following controls CDash submission               #####\r\n\n#set(LOCAL_SUBMIT \"TRUE\")\r\n\n#####       Following controls test process                   #####\r\n\n#set(LOCAL_SKIP_TEST \"TRUE\")\r\n\n#set(LOCAL_MEMCHECK_TEST \"TRUE\")\r\n\n#set(LOCAL_COVERAGE_TEST \"TRUE\")\r\n\n#####       Following controls cpack command                  #####\r\n\n#set(LOCAL_NO_PACKAGE \"TRUE\")\r\n\n#####       Following controls source update                  #####\r\n\n#set(LOCAL_UPDATE \"TRUE\")\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#uncomment to use a compressed source file: *.tar on linux or mac *.zip on windows\r\n\n#set(CTEST_USE_TAR_SOURCE \"${CTEST_SOURCE_VERSION}\")\r\n\n###################################################################\r\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "###################################################################\r\n\n####  Change default configuration of options in config/cmake/cacheinit.cmake file ###\r\n\n####  format: set(ADD_BUILD_OPTIONS \"${ADD_BUILD_OPTIONS} -DXXX:YY=ZZZZ\")\r\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "###################################################################\r\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#########       Following describes computer           ############\r\n\n## following is optional to describe build                       ##\r\n",
        "Line" : 181,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "###################################################################\r\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "### uncomment/comment and change the following lines for other configuration options\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "####      ext libraries       ####\r\n\n### ext libs from tgz\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "### ext libs from svn\r\n\n#set(ADD_BUILD_OPTIONS \"${ADD_BUILD_OPTIONS} -DHDF5_ALLOW_EXTERNAL_SUPPORT:STRING=SVN\")\r\n\n### ext libs on system\r\n\n#set(ADD_BUILD_OPTIONS \"${ADD_BUILD_OPTIONS} -DZLIB_LIBRARY:FILEPATH=some_location/lib/zlib.lib -DZLIB_INCLUDE_DIR:PATH=some_location/include\")\r\n\n#set(ADD_BUILD_OPTIONS \"${ADD_BUILD_OPTIONS} -DSZIP_LIBRARY:FILEPATH=some_location/lib/szlib.lib -DSZIP_INCLUDE_DIR:PATH=some_location/include\")\r\n\n### disable ext libs building\r\n\n#set(ADD_BUILD_OPTIONS \"${ADD_BUILD_OPTIONS} -DHDF5_ENABLE_Z_LIB_SUPPORT:BOOL=OFF\")\r\n\n#set(ADD_BUILD_OPTIONS \"${ADD_BUILD_OPTIONS} -DHDF5_ENABLE_SZIP_SUPPORT:BOOL=OFF\")\r\n\n#set(ADD_BUILD_OPTIONS \"${ADD_BUILD_OPTIONS} -DHDF5_ENABLE_SZIP_ENCODING:BOOL=OFF\")\r\n\n####      fortran       ####\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "### enable Fortran 2003 depends on HDF5_BUILD_FORTRAN\r\n",
        "Line" : 204,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "### enable Fortran 2003 depends on HDF5_BUILD_FORTRAN\r\n",
        "Line" : 208,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "### disable test program builds\r\n\n#set(ADD_BUILD_OPTIONS \"${ADD_BUILD_OPTIONS} -DBUILD_TESTING:BOOL=OFF\")\r\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "### disable packaging\r\n\n#set(ADD_BUILD_OPTIONS \"${ADD_BUILD_OPTIONS} -DHDF5_NO_PACKAGES:BOOL=ON\")\r\n\n### Create install package with external libraries (szip, zlib, jpeg)\r\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "### change install prefix\r\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "###################################################################\r\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 26
    },
    "gatb-core/thirdparty/hdf5/config/cmake/userblockTest.cmake" : {
      "ObjectId" : "0775cbefbcb1df40180462e8588b265120d806a0",
      "LastModified" : "2018-06-11T09:23:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# userblockTest.cmake executes a command and captures the output in a file. File is then compared\n\n# against a reference file. Exit status of command can also be compared.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# arguments checking\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#if (NOT TEST_EXPECT)\n\n#  message (STATUS \"Require TEST_EXPECT to be defined\")\n\n#endif (NOT TEST_EXPECT)\n\n#if (NOT TEST_OFILE)\n\n#  message (FATAL_ERROR \"Require TEST_OFILE the original hdf file to be defined\")\n\n#endif (NOT TEST_OFILE)\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# find the length of the user block to check\n\n#s1=`cat $ufile | wc -c | sed -e 's/ //g'`\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Get the size of the original user block, if any.\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# 'tellub' calls H5Fget_user_block to get the size\n\n#  of the user block\n\n#s2=`$JAM_BIN/tellub $origfile`\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#$JAM_BIN/getub -c $s2 $origfile > $cmpfile\n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#cat $ufile >> $cmpfile\n",
        "Line" : 73,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#$JAM_BIN/getub -c $size $hfile > $tfile\n",
        "Line" : 81,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# now compare the outputs\n",
        "Line" : 92,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# if the return value is !=${TEST_EXPECT} bail out\n",
        "Line" : 99,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# call 'ubsize' to get the size of the user block\n\n#ubsize=`$JAM_BIN/tellub $hfile`\n",
        "Line" : 104,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# everything went fine...\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "gatb-core/thirdparty/hdf5/config/cmake/vfdTest.cmake" : {
      "ObjectId" : "10f0a7be819c52f3a706d36d6bf3872c0f54cee4",
      "LastModified" : "2018-06-11T09:23:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# vfdTest.cmake executes a command and captures the output in a file. Command uses specified VFD.\n\n# Exit status of command can also be compared.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# arguments checking\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#if (NOT TEST_ARGS)\n\n#  message (STATUS \"Require TEST_ARGS to be defined\")\n\n#endif (NOT TEST_ARGS)\n\n#if (NOT TEST_EXPECT)\n\n#  message (STATUS \"Require TEST_EXPECT to be defined\")\n\n#endif (NOT TEST_EXPECT)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# run the test program, capture the stdout/stderr and the result var\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# if the return value is !=${TEST_EXPECT} bail out\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# everything went fine...\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "gatb-core/thirdparty/hdf5/config/cmake_ext_mod/CTestCustom.cmake" : {
      "ObjectId" : "025bce4b3d80eb1ad072b0e1c8b603121691a2b5",
      "LastModified" : "2018-06-11T09:23:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "gatb-core/thirdparty/hdf5/config/cmake_ext_mod/CheckTypeSize.cmake" : {
      "ObjectId" : "5095a27b1cf457d2e0e54cf2927c16d8edca2bf5",
      "LastModified" : "2018-06-11T09:23:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Check if the type exists and determine size of type.  if the type\n\n# exists, the size will be stored to the variable.\n\n#\n\n# CHECK_TYPE_SIZE - macro which checks the size of type\n\n# VARIABLE - variable to store size if the type exists.\n\n# HAVE_${VARIABLE} - does the variable exists or not\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "gatb-core/thirdparty/hdf5/config/cmake_ext_mod/ConfigureChecks.cmake" : {
      "ObjectId" : "95892950116ed0aa7a2f057a66c86a55669ad4b9",
      "LastModified" : "2018-06-11T09:23:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Include all the necessary files for macros\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# APPLE/Darwin setup\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check for Darwin (not just Apple - we also want to catch OpenDarwin)\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Check for Solaris\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# This MACRO checks IF the symbol exists in the library and IF it\n\n# does, it appends library to the list.\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ----------------------------------------------------------------------\n\n# WINDOWS Hard code Values\n\n# ----------------------------------------------------------------------\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# MinGW tries to imitate Windows\n",
        "Line" : 63,
        "CharPositionInLine" : 20
      },
      "7" : {
        "Text" : "# ----------------------------------------------------------------------\n\n# END of WINDOWS Hard code Values\n\n# ----------------------------------------------------------------------\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#  Check for the math library \"m\"\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# UCB (BSD) compatibility library\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# For other tests to use the same libraries\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# For other specific tests, use this MACRO.\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#message (STATUS \"Performing ${OTHER_TEST}\")\n",
        "Line" : 161,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Check for these functions before the time headers are checked\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Check IF header file exists and add it to the list.\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#  Check for the existence of certain header files\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# IF the c compiler found stdint, check the C++ as well. On some systems this\n\n# file will be found by C but not C++, only do this test IF the C++ compiler\n\n# has been initialized (e.g. the project also includes some c++)\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Darwin\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Windows\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#  Check for large file support\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# The linux-lfs option is deprecated.\n",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Might want to check explicitly for Linux and possibly Cygwin\n\n# instead of checking for not Solaris or Darwin.\n",
        "Line" : 265,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Linux Specific flags\n\n# This was originally defined as _POSIX_SOURCE which was updated to\n\n# _POSIX_C_SOURCE=199506L to expose a greater amount of POSIX\n\n# functionality so clock_gettime and CLOCK_MONOTONIC are defined\n\n# correctly. This was later updated to 200112L so that\n\n# posix_memalign() is visible for the direct VFD code on Linux\n\n# systems.\n\n# POSIX feature information can be found in the gcc manual at:\n\n# http://www.gnu.org/s/libc/manual/html_node/Feature-Test-Macros.html\n",
        "Line" : 268,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Need to add this so that O_DIRECT is visible for the direct\n\n# VFD on Linux systems.\n",
        "Line" : 279,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# The LARGEFILE definitions were from the transition period\n\n# and are probably no longer needed. The FILE_OFFSET_BITS\n\n# check should be generalized for all POSIX systems as it\n\n# is in the Autotools.\n",
        "Line" : 293,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Check for HAVE_OFF64_T functionality\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 324,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#  Check the size in bytes of all the int and float types\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 346,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#  message (STATUS \"Checking size of ${aType} and storing into ${aVar}\")\n",
        "Line" : 352,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#    message (STATUS \"Size of ${aType} was NOT Found\")\n",
        "Line" : 356,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Extra C99 types\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 422,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# _Bool type support\n",
        "Line" : 426,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Check if the dev_t type is a scalar type\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 436,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# ----------------------------------------------------------------------\n\n# Check for MONOTONIC_TIMER support (used in clock_gettime).  This has\n\n# to be done after any POSIX/BSD defines to ensure that the test gets\n\n# the correct POSIX level on linux.\n",
        "Line" : 441,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Check a bunch of time functions\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 447,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "#      HAVE_TIMEZONE\n",
        "Line" : 454,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#      HDF_FUNCTION_TEST (HAVE_STAT_ST_BLOCKS)\n",
        "Line" : 465,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# ----------------------------------------------------------------------\n\n# Does the struct stat have the st_blocks field?  This field is not Posix.\n\n#\n",
        "Line" : 468,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# ----------------------------------------------------------------------\n\n# How do we figure out the width of a tty in characters?\n\n#\n",
        "Line" : 473,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# ----------------------------------------------------------------------\n\n# cygwin user credentials are different then on linux\n\n#\n",
        "Line" : 488,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Check for some functions that are used\n\n#\n",
        "Line" : 496,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# sigsetjmp is special; may actually be a macro\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 537,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Check a bunch of other functions\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 549,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#      STDC_HEADERS\n",
        "Line" : 556,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# For other CXX specific tests, use this MACRO.\n",
        "Line" : 567,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "#message (STATUS \"Performing ${OTHER_TEST}\")\n",
        "Line" : 593,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Check a bunch of cxx functions\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 615,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Check if InitOnceExecuteOnce is available\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 630,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# if it did not compile make the return value fail code of 1\n",
        "Line" : 666,
        "CharPositionInLine" : 4
      },
      "48" : {
        "Text" : "# if the return value was 0 then it worked\n",
        "Line" : 670,
        "CharPositionInLine" : 4
      },
      "49" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Determine how 'inline' is used\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 695,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Check how to print a Long Long integer\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 703,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# ----------------------------------------------------------------------\n\n# Set the flag to indicate that the machine can handle converting\n\n# denormalized floating-point values.\n\n# (This flag should be set for all machines, except for the Crays, where\n\n# the cache value is set in it's config file)\n\n#\n",
        "Line" : 743,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 52
    },
    "gatb-core/thirdparty/hdf5/config/cmake_ext_mod/FindMPI.cmake" : {
      "ObjectId" : "1a02f82c5fc201559c1498458b3059a8b2476145",
      "LastModified" : "2018-06-11T09:23:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindMPI\n\n# -------\n\n#\n\n# Find a Message Passing Interface (MPI) implementation\n\n#\n\n# The Message Passing Interface (MPI) is a library used to write\n\n# high-performance distributed-memory parallel applications, and is\n\n# typically deployed on a cluster.  MPI is a standard interface (defined\n\n# by the MPI forum) for which many implementations are available.  All\n\n# of them have somewhat different include paths, libraries to link\n\n# against, etc., and this module tries to smooth out those differences.\n\n#\n\n# Variables\n\n# ^^^^^^^^^\n\n#\n\n# This module will set the following variables per language in your\n\n# project, where <lang> is one of C, CXX, or Fortran:\n\n#\n\n# ::\n\n#\n\n#    MPI_<lang>_FOUND           TRUE if FindMPI found MPI flags for <lang>\n\n#    MPI_<lang>_COMPILER        MPI Compiler wrapper for <lang>\n\n#    MPI_<lang>_COMPILE_FLAGS   Compilation flags for MPI programs\n\n#    MPI_<lang>_INCLUDE_PATH    Include path(s) for MPI header\n\n#    MPI_<lang>_LINK_FLAGS      Linking flags for MPI programs\n\n#    MPI_<lang>_LIBRARIES       All libraries to link MPI programs against\n\n#\n\n# Additionally, FindMPI sets the following variables for running MPI\n\n# programs from the command line:\n\n#\n\n# ::\n\n#\n\n#    MPIEXEC                    Executable for running MPI programs\n\n#    MPIEXEC_NUMPROC_FLAG       Flag to pass to MPIEXEC before giving\n\n#                               it the number of processors to run on\n\n#    MPIEXEC_PREFLAGS           Flags to pass to MPIEXEC directly\n\n#                               before the executable to run.\n\n#    MPIEXEC_POSTFLAGS          Flags to pass to MPIEXEC after other flags\n\n#\n\n# Usage\n\n# ^^^^^\n\n#\n\n# To use this module, simply call FindMPI from a CMakeLists.txt file, or\n\n# run ``find_package(MPI)``, then run CMake.  If you are happy with the\n\n# auto-detected configuration for your language, then you're done.  If\n\n# not, you have two options:\n\n#\n\n# ::\n\n#\n\n#    1. Set MPI_<lang>_COMPILER to the MPI wrapper (mpicc, etc.) of your\n\n#       choice and reconfigure.  FindMPI will attempt to determine all the\n\n#       necessary variables using THAT compiler's compile and link flags.\n\n#    2. If this fails, or if your MPI implementation does not come with\n\n#       a compiler wrapper, then set both MPI_<lang>_LIBRARIES and\n\n#       MPI_<lang>_INCLUDE_PATH.  You may also set any other variables\n\n#       listed above, but these two are required.  This will circumvent\n\n#       autodetection entirely.\n\n#\n\n# When configuration is successful, ``MPI_<lang>_COMPILER`` will be set to\n\n# the compiler wrapper for <lang>, if it was found.  ``MPI_<lang>_FOUND``\n\n# and other variables above will be set if any MPI implementation was\n\n# found for <lang>, regardless of whether a compiler was found.\n\n#\n\n# When using ``MPIEXEC`` to execute MPI applications, you should typically\n\n# use all of the ``MPIEXEC`` flags as follows:\n\n#\n\n# ::\n\n#\n\n#    ${MPIEXEC} ${MPIEXEC_NUMPROC_FLAG} PROCS\n\n#      ${MPIEXEC_PREFLAGS} EXECUTABLE ${MPIEXEC_POSTFLAGS} ARGS\n\n#\n\n# where ``PROCS`` is the number of processors on which to execute the\n\n# program, ``EXECUTABLE`` is the MPI program, and ``ARGS`` are the arguments to\n\n# pass to the MPI program.\n\n#\n\n# Backward Compatibility\n\n# ^^^^^^^^^^^^^^^^^^^^^^\n\n#\n\n# For backward compatibility with older versions of FindMPI, these\n\n# variables are set, but deprecated:\n\n#\n\n# ::\n\n#\n\n#    MPI_FOUND           MPI_COMPILER        MPI_LIBRARY\n\n#    MPI_COMPILE_FLAGS   MPI_INCLUDE_PATH    MPI_EXTRA_LIBRARY\n\n#    MPI_LINK_FLAGS      MPI_LIBRARIES\n\n#\n\n# In new projects, please use the ``MPI_<lang>_XXX`` equivalents.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# include this to handle the QUIETLY and REQUIRED arguments\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# This part detects MPI compilers, attempting to wade through the mess of compiler names in\n\n# a sensible way.\n\n#\n\n# The compilers are detected in this order:\n\n#\n\n# 1. Try to find the most generic available MPI compiler, as this is usually set up by\n\n#    cluster admins.  e.g., if plain old mpicc is available, we'll use it and assume it's\n\n#    the right compiler.\n\n#\n\n# 2. If a generic mpicc is NOT found, then we attempt to find one that matches\n\n#    CMAKE_<lang>_COMPILER_ID. e.g. if you are using XL compilers, we'll try to find mpixlc\n\n#    and company, but not mpiicc.  This hopefully prevents toolchain mismatches.\n\n#\n\n# If you want to force a particular MPI compiler other than what we autodetect (e.g. if you\n\n# want to compile regular stuff with GNU and parallel stuff with Intel), you can always set\n\n# your favorite MPI_<lang>_COMPILER explicitly and this stuff will be ignored.\n\n#\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Start out with the generic MPI compiler names, as these are most commonly used.\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# GNU compiler names\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Intel MPI compiler names\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# PGI compiler names\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# XLC MPI Compiler names\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# append vendor-specific compilers to the list if we either don't know the compiler id,\n\n# or if we know it matches the regular compiler.\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# clean up the namespace here\n",
        "Line" : 156,
        "CharPositionInLine" : 48
      },
      "11" : {
        "Text" : "# Names to try for MPI exec\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Grab the path to MPI from the registry if we're on windows.\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# MSMPI\n",
        "Line" : 167,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# The default path ends with a '\\' and doesn't mix with ';' when appending.\n",
        "Line" : 168,
        "CharPositionInLine" : 55
      },
      "15" : {
        "Text" : "# The SDK is installed separately from the runtime\n",
        "Line" : 172,
        "CharPositionInLine" : 53
      },
      "16" : {
        "Text" : "# MPICH\n",
        "Line" : 173,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Build a list of prefixes to search for MPI.\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Intel MPI 5.0.1 will return a zero return code even when the\n\n# argument to the MPI compiler wrapper is unknown.  Attempt to\n\n# catch this case.\n",
        "Line" : 194,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "#\n\n# interrogate_mpi_compiler(lang try_libs)\n\n#\n\n# Attempts to extract compiler and linker args from an MPI compiler. The arguments set\n\n# by this function are:\n\n#\n\n#   MPI_<lang>_INCLUDE_PATH    MPI_<lang>_LINK_FLAGS     MPI_<lang>_FOUND\n\n#   MPI_<lang>_COMPILE_FLAGS   MPI_<lang>_LIBRARIES\n\n#\n\n# MPI_<lang>_COMPILER must be set beforehand to the absolute path to an MPI compiler for\n\n# <lang>.  Additionally, MPI_<lang>_INCLUDE_PATH and MPI_<lang>_LIBRARIES may be set\n\n# to skip autodetection.\n\n#\n\n# If try_libs is TRUE, this will also attempt to find plain MPI libraries in the usual\n\n# way.  In general, this is not as effective as interrogating the compilers, as it\n\n# ignores language-specific flags and libraries.  However, some MPI implementations\n\n# (Windows implementations) do not have compiler wrappers, so this approach must be used.\n\n#\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# MPI_${lang}_NO_INTERROGATE will be set to a compiler name when the *regular* compiler was\n\n# discovered to be the MPI compiler.  This happens on machines like the Cray XE6 that use\n\n# modules to set cc, CC, and ftn to the MPI compilers.  If the user force-sets another MPI\n\n# compiler, MPI_${lang}_COMPILER won't be equal to MPI_${lang}_NO_INTERROGATE, and we'll\n\n# inspect that compiler anew.  This allows users to set new compilers w/o rm'ing cache.\n",
        "Line" : 223,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# If MPI is set already in the cache, don't bother with interrogating the compiler.\n",
        "Line" : 230,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Check whether the -showme:compile option works. This indicates that we have either OpenMPI\n\n# or a newer version of LAM-MPI, and implies that -showme:link will also work.\n",
        "Line" : 233,
        "CharPositionInLine" : 6
      },
      "23" : {
        "Text" : "# If we appear to have -showme:compile, then we should\n\n# also have -showme:link. Try it.\n",
        "Line" : 237,
        "CharPositionInLine" : 8
      },
      "24" : {
        "Text" : "# We probably have -showme:incdirs and -showme:libdirs as well,\n\n# so grab that while we're at it.\n",
        "Line" : 246,
        "CharPositionInLine" : 10
      },
      "25" : {
        "Text" : "# reset things here if something went wrong.\n",
        "Line" : 259,
        "CharPositionInLine" : 10
      },
      "26" : {
        "Text" : "# Older versions of LAM-MPI have \"-showme\". Try to find that.\n",
        "Line" : 265,
        "CharPositionInLine" : 6
      },
      "27" : {
        "Text" : "# MVAPICH uses -compile-info and -link-info.  Try them.\n",
        "Line" : 270,
        "CharPositionInLine" : 6
      },
      "28" : {
        "Text" : "# If we have compile-info, also have link-info.\n",
        "Line" : 274,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : "# make sure we got compile and link.  Reset vars if something's wrong.\n",
        "Line" : 283,
        "CharPositionInLine" : 8
      },
      "30" : {
        "Text" : "# MPICH just uses \"-show\". Try it.\n",
        "Line" : 290,
        "CharPositionInLine" : 6
      },
      "31" : {
        "Text" : "# We have our command lines, but we might need to copy MPI_COMPILE_CMDLINE\n\n# into MPI_LINK_CMDLINE, if we didn't find the link line.\n",
        "Line" : 296,
        "CharPositionInLine" : 8
      },
      "32" : {
        "Text" : "# Here, we're done with the interrogation part, and we'll try to extract args we care\n\n# about from what we learned from the compiler wrapper scripts.\n",
        "Line" : 307,
        "CharPositionInLine" : 6
      },
      "33" : {
        "Text" : "# If interrogation came back with something, extract our variable from the MPI command line\n",
        "Line" : 310,
        "CharPositionInLine" : 6
      },
      "34" : {
        "Text" : "# Extract compile flags from the compile command line.\n",
        "Line" : 312,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : "# Extract include paths from compile command line\n",
        "Line" : 324,
        "CharPositionInLine" : 8
      },
      "36" : {
        "Text" : "# try using showme:incdirs if extracting didn't work.\n",
        "Line" : 332,
        "CharPositionInLine" : 8
      },
      "37" : {
        "Text" : "# If all else fails, just search for mpi.h in the normal include paths.\n",
        "Line" : 338,
        "CharPositionInLine" : 8
      },
      "38" : {
        "Text" : "# Extract linker paths from the link command line\n",
        "Line" : 347,
        "CharPositionInLine" : 8
      },
      "39" : {
        "Text" : "# try using showme:libdirs if extracting didn't work.\n",
        "Line" : 356,
        "CharPositionInLine" : 8
      },
      "40" : {
        "Text" : "# Extract linker flags from the link command line\n",
        "Line" : 362,
        "CharPositionInLine" : 8
      },
      "41" : {
        "Text" : "# Extract the set of libraries to link against from the link command\n\n# line\n",
        "Line" : 373,
        "CharPositionInLine" : 8
      },
      "42" : {
        "Text" : "# The intel wrappers on windows link against static versions of the MPI libraries.\n\n# The static libraries are simply listed on the command line without -l.\n\n# For instance: \" icl ... impi.lib \"\n",
        "Line" : 377,
        "CharPositionInLine" : 10
      },
      "43" : {
        "Text" : "# add the compiler implicit directories because some compilers\n\n# such as the intel compiler have libraries that show up\n\n# in the showme list that can only be found in the implicit\n\n# link directories of the compiler.\n",
        "Line" : 384,
        "CharPositionInLine" : 8
      },
      "44" : {
        "Text" : "# Determine full path names for all of the libraries that one needs\n\n# to link against in an MPI program\n",
        "Line" : 393,
        "CharPositionInLine" : 8
      },
      "45" : {
        "Text" : "# MPI_LIB is cached by find_library, but we don't want that.  Clear it first.\n",
        "Line" : 401,
        "CharPositionInLine" : 10
      },
      "46" : {
        "Text" : "# Sanity check MPI_LIBRARIES to make sure there are enough libraries\n",
        "Line" : 412,
        "CharPositionInLine" : 8
      },
      "47" : {
        "Text" : "# If we didn't have an MPI compiler script to interrogate, attempt to find everything\n\n# with plain old find functions.  This is nasty because MPI implementations have LOTS of\n\n# different library names, so this section isn't going to be very generic.  We need to\n\n# make sure it works for MS MPI, though, since there are no compiler wrappers for that.\n",
        "Line" : 421,
        "CharPositionInLine" : 6
      },
      "48" : {
        "Text" : "# Decide between 32-bit and 64-bit libraries for Microsoft's MPI\n",
        "Line" : 430,
        "CharPositionInLine" : 6
      },
      "49" : {
        "Text" : "# Right now, we only know about the extra libs for C++.\n\n# We could add Fortran here (as there is usually libfmpich, etc.), but\n\n# this really only has to work with MS MPI on Windows.\n\n# Assume that other MPI's are covered by the compiler wrappers.\n",
        "Line" : 446,
        "CharPositionInLine" : 6
      },
      "50" : {
        "Text" : "# If we found MPI, set up all of the appropriate cache entries\n",
        "Line" : 485,
        "CharPositionInLine" : 4
      },
      "51" : {
        "Text" : "# clear out our temporary lib/header detectionv variable here.\n",
        "Line" : 492,
        "CharPositionInLine" : 4
      },
      "52" : {
        "Text" : "# finally set a found variable for each MPI language\n",
        "Line" : 497,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# This function attempts to compile with the regular compiler, to see if MPI programs\n\n# work with it.  This is a last ditch attempt after we've tried interrogating mpicc and\n\n# friends, and after we've tried to find generic libraries.  Works on machines like\n\n# Cray XE6, where the modules environment changes what MPI version cc, CC, and ftn use.\n",
        "Line" : 506,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# End definitions, commence real work here.\n",
        "Line" : 547,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# Most mpi distros have some form of mpiexec which gives us something we can reliably look for.\n",
        "Line" : 549,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# call get_filename_component twice to remove mpiexec and the directory it exists in (typically bin).\n\n# This gives us a fairly reliable base directory to search for /bin /lib and /include from.\n",
        "Line" : 557,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "#=============================================================================\n\n# Backward compatibility input hacks.  Propagate the FindMPI hints to C and\n\n# CXX if the respective new versions are not defined.  Translate the old\n\n# MPI_LIBRARY and MPI_EXTRA_LIBRARY to respective MPI_${lang}_LIBRARIES.\n\n#\n\n# Once we find the new variables, we translate them back into their old\n\n# equivalents below.\n",
        "Line" : 569,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# Old input variables.\n",
        "Line" : 577,
        "CharPositionInLine" : 2
      },
      "59" : {
        "Text" : "# Set new vars based on their old equivalents, if the new versions are not already set.\n",
        "Line" : 580,
        "CharPositionInLine" : 2
      },
      "60" : {
        "Text" : "# Special handling for MPI_LIBRARY and MPI_EXTRA_LIBRARY, which we nixed in the\n\n# new FindMPI.  These need to be merged into MPI_<lang>_LIBRARIES\n",
        "Line" : 587,
        "CharPositionInLine" : 2
      },
      "61" : {
        "Text" : "#=============================================================================\n",
        "Line" : 593,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# This loop finds the compilers and sends them off for interrogation.\n",
        "Line" : 596,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# If the user supplies a compiler *name* instead of an absolute path, assume that we need to find THAT compiler.\n",
        "Line" : 599,
        "CharPositionInLine" : 4
      },
      "64" : {
        "Text" : "# Get rid of our default list of names and just search for the name the user wants.\n",
        "Line" : 602,
        "CharPositionInLine" : 8
      },
      "65" : {
        "Text" : "# If the user specifies a compiler, we don't want to try to search libraries either.\n",
        "Line" : 606,
        "CharPositionInLine" : 6
      },
      "66" : {
        "Text" : "# last ditch try -- if nothing works so far, just try running the regular compiler and\n\n# see if we can create an MPI executable.\n",
        "Line" : 620,
        "CharPositionInLine" : 4
      },
      "67" : {
        "Text" : "#=============================================================================\n\n# More backward compatibility stuff\n\n#\n\n# Bare MPI sans ${lang} vars are set to CXX then C, depending on what was found.\n\n# This mimics the behavior of the old language-oblivious FindMPI.\n",
        "Line" : 641,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# Note that we might still have found Fortran, but you'll need to use MPI_Fortran_FOUND\n",
        "Line" : 656,
        "CharPositionInLine" : 2
      },
      "69" : {
        "Text" : "# Chop MPI_LIBRARIES into the old-style MPI_LIBRARY and MPI_EXTRA_LIBRARY, and set them in cache.\n",
        "Line" : 660,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "#=============================================================================\n",
        "Line" : 676,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# unset these vars to cleanup namespace\n",
        "Line" : 678,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 72
    },
    "gatb-core/thirdparty/hdf5/config/cmake_ext_mod/FindSZIP.cmake" : {
      "ObjectId" : "5f0f031c0167369be765c2796b343ff2bb1b0d0e",
      "LastModified" : "2018-06-11T09:23:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find SZIP library\n\n# - Derived from the FindTiff.cmake that is included with cmake\n\n# Find the native SZIP includes and library\n\n# This module defines\n\n#  SZIP_INCLUDE_DIRS, where to find tiff.h, etc.\n\n#  SZIP_LIBRARIES, libraries to link against to use SZIP.\n\n#  SZIP_FOUND, If false, do not try to use SZIP.\n\n#    also defined, but not for general use are\n\n#  SZIP_LIBRARY, where to find the SZIP library.\n\n#  SZIP_LIBRARY_DEBUG - Debug version of SZIP library\n\n#  SZIP_LIBRARY_RELEASE - Release Version of SZIP library\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# message (STATUS \"Finding SZIP library and headers...\" )\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "############################################\n\n#\n\n# Check the existence of the libraries.\n\n#\n\n############################################\n\n# This macro was taken directly from the FindQt4.cmake file that is included\n\n# with the CMake distribution. This is NOT my work. All work was done by the\n\n# original authors of the FindQt4.cmake file. Only minor modifications were\n\n# made to remove references to Qt and make this file more generally applicable\n\n#########################################################################\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# if only the release version was found, set the debug variable also to the release version\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# if only the debug version was found, set the release variable also to the debug version\n",
        "Line" : 37,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# if the generator supports configuration types then set\n\n# optimized and debug libraries, or if the CMAKE_BUILD_TYPE has a value\n",
        "Line" : 44,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# if there are no configuration types and CMAKE_BUILD_TYPE has no value\n\n# then just use the release libraries\n",
        "Line" : 49,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Make variables changeble to the advanced user\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Look for the header file.\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Look for the library.\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Report the results.\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#############################################\n\n# Find out if SZIP was build using dll's\n\n#############################################\n\n# Save required variable\n",
        "Line" : 150,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Add SZIP_INCLUDE_DIR to CMAKE_REQUIRED_INCLUDES\n",
        "Line" : 156,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Restore CMAKE_REQUIRED_INCLUDES and CMAKE_REQUIRED_FLAGS variables\n",
        "Line" : 159,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "#\n\n#############################################\n",
        "Line" : 162,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 15
    },
    "gatb-core/thirdparty/hdf5/config/cmake_ext_mod/HDFLibMacros.cmake" : {
      "ObjectId" : "2145a3d96078123a346f40266bcd233d3cb0058d",
      "LastModified" : "2018-06-11T09:23:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# May need to build JPEG with PIC on x64 machines with gcc\n\n# Need to use CMAKE_ANSI_CFLAGS define so that compiler test works\n",
        "Line" : 3,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# [SVN_REVISION rev]\n",
        "Line" : 9,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "##include (${BINARY_DIR}/${JPEG_PACKAGE_NAME}${HDF_PACKAGE_EXT}-targets.cmake)\n\n# Create imported target jpeg-static\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Create imported target jpeg-shared\n",
        "Line" : 65,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# [SVN_REVISION rev]\n",
        "Line" : 96,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "##include (${BINARY_DIR}/${SZIP_PACKAGE_NAME}${HDF_PACKAGE_EXT}-targets.cmake)\n\n# Create imported target szip-static\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Create imported target szip-shared\n",
        "Line" : 155,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# [SVN_REVISION rev]\n",
        "Line" : 186,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "##include (${BINARY_DIR}/${ZLIB_PACKAGE_NAME}${HDF_PACKAGE_EXT}-targets.cmake)\n\n# Create imported target zlib-static\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Create imported target zlib-shared\n",
        "Line" : 247,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 261,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "gatb-core/thirdparty/hdf5/config/cmake_ext_mod/HDFMacros.cmake" : {
      "ObjectId" : "1d6b49a6542ea71f65033cd86fa9e44f642604dd",
      "LastModified" : "2018-06-11T09:23:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#set(source_group_path \"Source/AIM/${NAME}\")\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#-- The following is needed if we ever start to use OS X Frameworks but only\n\n#--  works on CMake 2.6 and greater\n\n#set_property (SOURCE ${HEADERS}\n\n#       PROPERTY MACOSX_PACKAGE_LOCATION Headers/${NAME}\n\n#)\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#  install (FILES ${HEADERS}\n\n#       DESTINATION include/R3D/${NAME}\n\n#       COMPONENT Headers\n\n#  )\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#-- The following is needed if we ever start to use OS X Frameworks but only\n\n#--  works on CMake 2.6 and greater\n\n#set_property (SOURCE ${HEADERS}\n\n#       PROPERTY MACOSX_PACKAGE_LOCATION Headers/${NAME}\n\n#)\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#----- Use MSVC Naming conventions for Shared Libraries\n",
        "Line" : 102,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Configure the README.txt file for the binary package\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "gatb-core/thirdparty/hdf5/config/cmake_ext_mod/HDFUseFortran.cmake" : {
      "ObjectId" : "275f2ea0a950073d6b15edda81b746f5478e3ae9",
      "LastModified" : "2018-06-11T09:23:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# This file provides functions for Fortran support.\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Detect name mangling convention used between Fortran and C\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# The provided CMake Fortran macros don't provide a general check function\n\n# so this one is used for a sizeof test.\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#    message ( \"* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * \")\n\n#    message ( \"Test result ${OUTPUT}\")\n\n#    message ( \"* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * \")\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Configure Checks which require Fortran compilation must go in here\n\n# not in the main ConfigureChecks.cmake files, because if the user has\n\n# no Fortran compiler, problems arise.\n\n#\n\n# Be careful with leading spaces here, do not remove them.\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Check for Non-standard extension intrinsic function SIZEOF\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Check for F2008 standard intrinsic function C_SIZEOF\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Check for F2008 standard intrinsic function STORAGE_SIZE\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Check for F2008 standard intrinsic module \"ISO_FORTRAN_ENV\"\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Checks if the ISO_C_BINDING module meets all the requirements\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Add debug information (intel Fortran : JB)\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "gatb-core/thirdparty/hdf5/config/cmake_ext_mod/grepTest.cmake" : {
      "ObjectId" : "a090057dab5e05d5b089eed663b27f6cb4d2f734",
      "LastModified" : "2018-06-11T09:23:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# grepTest.cmake executes a command and captures the output in a file. File is then compared\n\n# against a reference file. Exit status of command can also be compared.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# arguments checking\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#if (NOT TEST_ARGS)\n\n#  message (STATUS \"Require TEST_ARGS to be defined\")\n\n#endif (NOT TEST_ARGS)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#if (NOT TEST_EXPECT)\n\n#  message (STATUS \"Require TEST_EXPECT to be defined\")\n\n#endif (NOT TEST_EXPECT)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# run the test program, capture the stdout/stderr and the result var\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# now grep the output with the reference\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# TEST_REFERENCE should always be matched\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# TEST_EXPECT (1) interperts TEST_FILTER as NOT to match\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# everything went fine...\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "gatb-core/thirdparty/hdf5/config/cmake_ext_mod/prunTest.cmake" : {
      "ObjectId" : "38ecb7eb82f9f175f329f9fef5741e50bb8dba77",
      "LastModified" : "2018-06-11T09:23:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# runTest.cmake executes a command and captures the output in a file. File is then compared\n\n# against a reference file. Exit status of command can also be compared.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# arguments checking\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#if (NOT TEST_ARGS)\n\n#  message (STATUS \"Require TEST_ARGS to be defined\")\n\n#endif (NOT TEST_ARGS)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#if (NOT TEST_EXPECT)\n\n#  message (STATUS \"Require TEST_EXPECT to be defined\")\n\n#endif (NOT TEST_EXPECT)\n\n#if (NOT TEST_FILTER)\n\n#  message (STATUS \"Require TEST_FILTER to be defined\")\n\n#endif (NOT TEST_FILTER)\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# run the test program, capture the stdout/stderr and the result var\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#if (TEST_REF_FILTER)\n\n#  message (STATUS \"TEST_REF_FILTER: ${TEST_APPEND}${TEST_REF_FILTER}\")\n\n#  file (READ ${TEST_FOLDER}/P_${TEST_REFERENCE} TEST_STREAM)\n\n#  STRING(REGEX REPLACE \"${TEST_APPEND}\" \"${TEST_REF_FILTER}\" TEST_STREAM \"${TEST_STREAM}\")\n\n#  file (WRITE ${TEST_FOLDER}/P_${TEST_REFERENCE} \"${TEST_STREAM}\")\n\n#endif (TEST_REF_FILTER)\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# now compare the output with the reference\n",
        "Line" : 106,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# again, if return value is !=0 scream and shout\n",
        "Line" : 137,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# everything went fine...\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "gatb-core/thirdparty/hdf5/config/cmake_ext_mod/runTest.cmake" : {
      "ObjectId" : "1d8b12e0a9c51175820ceb5006c9187922878fe2",
      "LastModified" : "2018-06-11T09:23:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# runTest.cmake executes a command and captures the output in a file. File is then compared\n\n# against a reference file. Exit status of command can also be compared.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# arguments checking\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#if (NOT TEST_ARGS)\n\n#  message (STATUS \"Require TEST_ARGS to be defined\")\n\n#endif ()\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#if (NOT TEST_FILTER)\n\n#  message (STATUS \"Require TEST_FILTER to be defined\")\n\n#endif ()\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# if there is not an error reference file add the error output to the stdout file\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# run the test program, capture the stdout/stderr and the result var\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# run the test program with stdin, capture the stdout/stderr and the result var\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# if the .err file exists and ERRROR_APPEND is enabled\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# append the test result status with a predefined text\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# if the return value is !=${TEST_EXPECT} bail out\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# if the output file needs Storage text removed\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# if the output file needs Modified text removed\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# if the output file or the .err file needs to mask out error stack info\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# the error stack has been appended to the output file\n",
        "Line" : 109,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# the error stack remains in the .err file\n",
        "Line" : 112,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# write back the changes to the original files\n",
        "Line" : 122,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# remove text from the output file\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# compare output files to references unless this must be skipped\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# now compare the output with the reference\n",
        "Line" : 144,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# again, if return value is !=0 scream and shout\n",
        "Line" : 182,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# now compare the .err file with the error reference, if supplied\n",
        "Line" : 187,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# now compare the error output with the error reference\n",
        "Line" : 194,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# again, if return value is !=0 scream and shout\n",
        "Line" : 233,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# everything went fine...\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24
    },
    "gatb-core/thirdparty/hdf5/src/CMakeLists.txt" : {
      "ObjectId" : "75754fe857244b916c605348aea91170b4e19fb3",
      "LastModified" : "2018-06-11T09:23:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Apply Definitions to compiler in this directory and below\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# List Source Files\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# --------------------------------------------------------------------\n\n# If we are compiling on Windows then add the windows specific files\n\n# --------------------------------------------------------------------\n",
        "Line" : 558,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Setup the H5Detect utility which generates H5Tinit with platform\n\n# specific type checks inside\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 609,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Add H5Tinit source to build - generated by H5Detect/CMake at configure time\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 680,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Add file(s) to CMake Install\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 754,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Add Target(s) to CMake Install for import into other projects\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 768,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "gatb-core/thirdparty/hdf5/tools/CMakeLists.txt" : {
      "ObjectId" : "97cd79c388652f29c8c8cb3610882ee51d02bc12",
      "LastModified" : "2018-06-11T09:23:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Apply Definitions to compiler in this directory and below\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Setup include Directories\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# --------------------------------------------------------------------\n\n# If testing was NOT enabled, then we need to build the tools library\n\n# --------------------------------------------------------------------\n\n# Patrick added: as stated in hdf5-1.8.18/release_docs/INSTALL_CMake.txt\n\n#   hdf5 lib has to be built using:  \n\n#     cmake [...] -DBUILD_TESTING:BOOL=ON -DHDF5_BUILD_TOOLS:BOOL=ON [...]\n\n#   within gatb-core, we do set HDF5_BUILD_TOOLS to true in \n\n#   gatb-core/gatb-core/thirdparty/CMakeLists.txt, but we not use BUILD_TESTING. \n\n#   So, we need to compile the  tools library.\n\n#if (NOT BUILD_TESTING)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#endif (NOT BUILD_TESTING)\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#-- Add the h5diff and test executables\n\n#add_subdirectory (${HDF5_TOOLS_SOURCE_DIR}/h5diff)\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#-- Add the h5ls executable\n\n#add_subdirectory (${HDF5_TOOLS_SOURCE_DIR}/h5ls)\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#-- Misc Executables\n\n#add_subdirectory (${HDF5_TOOLS_SOURCE_DIR}/misc)\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#-- Add the h5import and test executables\n\n#add_subdirectory (${HDF5_TOOLS_SOURCE_DIR}/h5import)\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#-- h5Repack executables\n\n#add_subdirectory (${HDF5_TOOLS_SOURCE_DIR}/h5repack)\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#-- Add the h5dump and test executables\n\n#add_subdirectory (${HDF5_TOOLS_SOURCE_DIR}/h5jam)\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#-- Add the h5copy and test executables\n\n#add_subdirectory (${HDF5_TOOLS_SOURCE_DIR}/h5copy)\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#-- Add the h5stat and test executables\n\n#add_subdirectory (${HDF5_TOOLS_SOURCE_DIR}/h5stat)\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#-- Add the h5dump and test executables\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#-- Add the perform and test executables\n\n#add_subdirectory (${HDF5_TOOLS_SOURCE_DIR}/perform)\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "gatb-core/thirdparty/hdf5/tools/h5dump/CMakeLists.txt" : {
      "ObjectId" : "dbac8a84cdd38b06d0dce1b78dfac1eae2e852c9",
      "LastModified" : "2018-06-11T09:23:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Setup include Directories\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --------------------------------------------------------------------\n\n# Add the h5dump executables\n\n# --------------------------------------------------------------------\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# (rayan) attempt at static linking, not sure if it works properly\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#removed -static because doesn't work on mac's\n",
        "Line" : 29,
        "CharPositionInLine" : 56
      },
      "4" : {
        "Text" : "#if (BUILD_TESTING)\n\n#  # --------------------------------------------------------------------\n\n#  # Add the h5dump test executable\n\n#  # --------------------------------------------------------------------\n\n#  if (HDF5_BUILD_GENERATORS)\n\n#    add_executable (h5dumpgentest ${HDF5_TOOLS_H5DUMP_SOURCE_DIR}/h5dumpgentest.c)\n\n#    TARGET_NAMING (h5dumpgentest STATIC)\n\n#    TARGET_C_PROPERTIES (h5dumpgentest STATIC \" \" \" \")\n\n#    target_link_libraries (h5dumpgentest ${HDF5_LIB_TARGET} ${HDF5_TOOLS_LIB_TARGET})\n\n#    set_target_properties (h5dumpgentest PROPERTIES FOLDER generator/tools)\n\n#\n\n#   #add_test (NAME h5dumpgentest COMMAND $<TARGET_FILE:h5dumpgentest>)\n\n#  endif (HDF5_BUILD_GENERATORS)\n\n#\n\n#  include (CMakeTests.cmake)\n\n#\n\n#  include (CMakeTestsPBITS.cmake)\n\n#\n\n#  include (CMakeTestsXML.cmake)\n\n#endif (BUILD_TESTING)\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "##############################################################################\n\n##############################################################################\n\n###           I N S T A L L A T I O N                                      ###\n\n##############################################################################\n\n##############################################################################\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Rules for Installation of tools using make Install target\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#INSTALL_PROGRAM_PDB (gatb-h5dump ${HDF5_INSTALL_BIN_DIR} toolsapplications)\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "gatb-core/thirdparty/hdf5/tools/h5ls/CMakeLists.txt" : {
      "ObjectId" : "139f44021180c2dc5888dbbfdb7991fbb03460cd",
      "LastModified" : "2018-06-11T09:23:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Setup include Directories\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Add the h5ls executable\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##############################################################################\n\n##############################################################################\n\n###           I N S T A L L A T I O N                                      ###\n\n##############################################################################\n\n##############################################################################\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Rules for Installation of tools using make Install target\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#INSTALL_PROGRAM_PDB (h5ls ${HDF5_INSTALL_BIN_DIR} toolsapplications)\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "gatb-core/thirdparty/hdf5/tools/h5ls/CMakeTests.cmake" : {
      "ObjectId" : "eda990df6398ce0f681bb1a4d8d57657920bd1b4",
      "LastModified" : "2018-06-11T09:23:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n##############################################################################\n\n###           T E S T I N G                                                ###\n\n##############################################################################\n\n##############################################################################\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --------------------------------------------------------------------\n\n# Copy all the test files from source directory to test directory\n\n# --------------------------------------------------------------------\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# copy the list of test files\n",
        "Line" : 97,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "##############################################################################\n\n##############################################################################\n\n###           T H E   T E S T S  M A C R O S                               ###\n\n##############################################################################\n\n##############################################################################\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# If using memchecker add tests without using scripts\n",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "##############################################################################\n\n##############################################################################\n\n###           T H E   T E S T S                                            ###\n\n##############################################################################\n\n##############################################################################\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remove any output file left over from previous test run\n",
        "Line" : 149,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# test the help syntax\n",
        "Line" : 267,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# test simple command\n",
        "Line" : 272,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# test for displaying groups\n\n# The following combination of arguments is expected to return an error message\n\n# and return value 1\n",
        "Line" : 278,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# test for files with groups that have long comments\n",
        "Line" : 284,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# test for displaying simple space datasets\n",
        "Line" : 287,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# test for displaying soft links (dangle)\n",
        "Line" : 290,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# test for displaying more soft links with --follow-symlinks\n",
        "Line" : 293,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# test for displaying external and user-defined links with --follow-symlinks\n",
        "Line" : 300,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# test for displaying external links with -E\n\n# the option -E will be depriciated but keep it for backward compatibility\n",
        "Line" : 311,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# tests for no-dangling-links\n\n# if this option is given on dangling link, h5ls should return exit code 1\n\n# when used alone , expect to print out help and return exit code 1\n",
        "Line" : 319,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# external dangling link - expected exit code 1\n",
        "Line" : 323,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# soft dangling link - expected exit code 1\n",
        "Line" : 325,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# when used file with no dangling links - expected exit code 0\n",
        "Line" : 327,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# test for wildcards in filename (does not work with cmake)\n\n#  ADD_H5_TEST (tstarfile 0 -w80 t*link.h5)\n\n#  ADD_H5_TEST (tqmarkfile 0 -w80 t?link.h5)\n",
        "Line" : 330,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# tests for hard links\n",
        "Line" : 335,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# tests for compound data types\n",
        "Line" : 338,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "#test for the nested compound type\n",
        "Line" : 341,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# test for loop detection\n",
        "Line" : 350,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# test for string\n",
        "Line" : 353,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# test test file created from lib SAF team\n",
        "Line" : 356,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# test for variable length data types\n",
        "Line" : 359,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# test for array data types\n",
        "Line" : 362,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# test for empty data\n",
        "Line" : 365,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# test for all dataset types written to attributes\n\n# enable -S for avoiding printing NATIVE types\n",
        "Line" : 368,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# test for attribute with region references wo verbose mode\n\n# ( HDFFV-7838, )\n",
        "Line" : 372,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# test for non-existing file\n",
        "Line" : 380,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# test for variable length data types in verbose mode\n",
        "Line" : 383,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# test for dataset region references data types in verbose mode\n",
        "Line" : 390,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 35
    },
    "gatb-core/thirdparty/hdf5/tools/lib/CMakeLists.txt" : {
      "ObjectId" : "d04d0997c8a196df339a4c2a1c1c582df7971e4c",
      "LastModified" : "2018-06-11T09:23:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Apply Definitions to compiler in this directory and below\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Define Sources\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#set_property (TARGET ${HDF5_TOOLS_LIB_TARGET} APPEND PROPERTY COMPILE_DEFINITIONS H5DIFF_DEBUG)\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#set_property (TARGET ${HDF5_TOOLS_LIBSH_TARGET} APPEND PROPERTY COMPILE_DEFINITIONS H5DIFF_DEBUG)\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "##############################################################################\n\n##############################################################################\n\n###           I N S T A L L A T I O N                                      ###\n\n##############################################################################\n\n##############################################################################\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Add file(s) to CMake Install\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Add Target(s) to CMake Install for import into other projects\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "gatb-core/tools/CMakeLists.txt" : {
      "ObjectId" : "92bc536a458af19084ee2c337c2b43088da897b0",
      "LastModified" : "2018-06-11T09:23:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "################################################################################\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "################################################################################\n\n#  TOOLS\n\n################################################################################\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We add the compilation options for the library\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# We add the path for extra libraries\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# (rayan) attempt at static linking, not sure if it works properly\n\n# but we need this to distribute binaries that are compatible on old system \n\n# (see lh3's post on Biostar during the 2.0.1 dsk/minia release, he could not\n\n# run dsk even though i compiled it on gcc 4.4.7 on genocluster2)\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#removed -static because doesn't work on mac's\n",
        "Line" : 32,
        "CharPositionInLine" : 58
      },
      "7" : {
        "Text" : "################################################################################\n\n#  INSTALLATION \n\n################################################################################\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    }
  },
  "FileTypes" : {
    "CMAKE" : 49,
    "QMAKE" : 4,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 2634
}