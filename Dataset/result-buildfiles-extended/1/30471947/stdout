{
  "Repository" : "30471947",
  "Revision" : "HEAD",
  "ObjectId" : "a0f3d808f98c4c1f6cbe6ce2aae9de52e6eb9d4b",
  "CommitTime" : "2018-07-31T20:20:20Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "a6453bbb1f3480eece0dcc1146cd92c8f3dfa341",
      "LastModified" : "2018-03-16T22:31:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ------- Process Configure Options\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Doesn't build docs anyway\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#find_package(Boost REQUIRED thread system log filesystem date_time)\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# -------- Find Dependencies\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# --- Everytrace\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# --- Blitz\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# --- NetCDF-CXX4\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# --- IBMisc\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# --- Proj.4\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# --- Eigen\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#find_package(GALAHAD REQUIRED)     # This should be optional\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#find_package(CGAL REQUIRED)\n\n#find_package(MPFR REQUIRED)        # Used by CGAL\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#find_package(PROJ4)\n\n#find_package(Boost COMPONENTS filesystem system date_time thread REQUIRED)\n\n#find_package(UDUNITS2 REQUIRED)\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## Used by dependencies\n\n#find_package(GMP REQUIRED)\n\n#find_package(GSL REQUIRED)\n\n#find_package(FFTW REQUIRED)\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#find_package(OpenMP REQUIRED)  # Used by GALAHAD, but not in code we run.  We are an MPI shop.\n\n#SET(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}\")\n\n#SET(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}\")\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "## Set Pism_EXTERNAL_LIBS and include directories.\n\n#include_directories (\n\n#   ${EVERYTRACE_INCLUDE_DIR}\n\n#   ${PROJECT_SOURCE_DIR}/slib\n\n#   ${Boost_INCLUDE_DIRS}\n\n#    ${NETCDF_INCLUDES} ${NETCDF_INCLUDES_CXX} ${NETCDF_INCLUDES_F77}\n\n#    ${BLITZ++_INCLUDE_DIR}\n\n#    ${GMP_INCLUDE_DIR}\n\n#    ${CGAL_INCLUDE_DIR}\n\n#    ${FFTW_INCLUDE_DIRS}\n\n#    ${FFTW_INCLUDES}\n\n#    ${GSL_INCLUDES}\n\n#    ${UDUNITS2_INCLUDES}\n\n#    ${MPI_C_INCLUDE_PATH}\n\n#\n\n#   ${GALAHAD_INCLUDE_DIRS})     # This should be optional\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#list(APPEND EXTERNAL_LIBS\n\n#   ${EVERYTRACE_CF_LIBRARY}\n\n#   ${Boost_LIBRARIES}\n\n#    ${UDUNITS2_LIBRARIES}\n\n#    ${FFTW_LIBRARIES}\n\n#    ${GSL_LIBRARIES}\n\n#\n\n#    ${NETCDF_LIBRARIES_F90} ${NETCDF_LIBRARIES_CXX} ${NETCDF_LIBRARIES_C}\n\n#    ${MPI_C_LIBRARIES}\n\n#   ${GALAHAD_LIBRARIES}\n\n#   ${PROJ4_LIBRARIES}\n\n#   ${GMP_LIBRARY}\n\n#   ${CGAL_LIBRARY}\n\n#   ${MPFR_LIBRARIES}\n\n#)\n\n#\n\n#if (${USE_PISM})\n\n#   list(APPEND EXTERNAL_LIBS\n\n#       ${PETSC_LIBRARIES}\n\n#       ${PISM_LIBRARIES}\n\n#   )\n\n#endif()\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# -------- Process subdirectories of the build\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Don't need this right now, but it is current\n",
        "Line" : 185,
        "CharPositionInLine" : 32
      },
      "CommentCount" : 19
    },
    "cmake/CorrectWindowsPaths.cmake" : {
      "ObjectId" : "09bcdd67dcd04fd001d2b7acbd904b5014ebe42b",
      "LastModified" : "2018-05-19T03:17:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CorrectWindowsPaths - this module defines one macro\n\n#\n\n# CONVERT_CYGWIN_PATH( PATH )\n\n#  This uses the command cygpath (provided by cygwin) to convert\n\n#  unix-style paths into paths useable by cmake on windows\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindBlitz++.cmake" : {
      "ObjectId" : "9701eb2e849bee8916a091941578b45e3d5313c3",
      "LastModified" : "2018-05-19T03:17:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find BLITZ++\n\n# Once done, this will define\n\n#\n\n# BLITZ++_FOUND - system has BLITZ++\n\n# BLITZ++_INCLUDE_DIR - the BLITZ++ include directory\n\n# BLITZ++_LIBRARY - lib to link to use BLITZ++\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use pkg-config to get hints about paths\n\n#libfind_pkg_check_modules(BLITZ++_PKGCONF blitz)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Include dir\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Finally the library itself\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set the include dir variables and the libraries and let libfind_process do the rest.\n\n# NOTE: Singular variables for this library, plural for libraries this this lib depends on.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/FindBlitz.cmake" : {
      "ObjectId" : "6b164665f42c085d265ab4c54b97c82f3020fa42",
      "LastModified" : "2018-05-19T03:17:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Input Variables\n\n#    BLITZ_ROOT\n\n# Produces:\n\n#    BLITZ_LIBRARY\n\n#    BLITZ_INCLUDE_DIR\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindCGAL.cmake" : {
      "ObjectId" : "d5647532f66cbadd3375bfcef926728f96c79d52",
      "LastModified" : "2018-05-19T03:17:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Input Variables\n\n#    CGAL_ROOT\n\n# Produces:\n\n#    CGAL_LIBRARY\n\n#    CGAL_INCLUDE_DIR\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindCython.cmake" : {
      "ObjectId" : "6ef6bada2195d260d7148084e44158456211df4d",
      "LastModified" : "2018-05-19T03:17:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the Cython compiler.\n\n#\n\n# This code sets the following variables:\n\n#\n\n#  CYTHON_EXECUTABLE\n\n#\n\n# See also UseCython.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2011 Kitware, Inc.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#=============================================================================\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use the Cython executable that lives next to the Python executable\n\n# if it is a local installation.\n\n#find_package( PythonInterp )\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/FindEigen3.cmake" : {
      "ObjectId" : "3519a6c152575de8608226a359952c7ed926a148",
      "LastModified" : "2018-05-19T03:17:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Eigen3 lib\n\n#\n\n# This module supports requiring a minimum version, e.g. you can do\n\n#   find_package(Eigen3 3.1.2)\n\n# to require version 3.1.2 or newer of Eigen3.\n\n#\n\n# Once done this will define\n\n#\n\n#  EIGEN3_FOUND - system has eigen lib with correct version\n\n#  EIGEN3_INCLUDE_DIR - the eigen include directory\n\n#  EIGEN3_VERSION - eigen version\n\n#\n\n# This module reads hints about search locations from \n\n# the following enviroment variables:\n\n#\n\n# EIGEN3_ROOT\n\n# EIGEN3_ROOT_DIR\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Copyright (c) 2009 Benoit Jacob <jacob.benoit.1@gmail.com>\n\n# Redistribution and use is allowed according to the terms of the 2-clause BSD license.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/FindEverytrace.cmake" : {
      "ObjectId" : "d5513117b6183e361142da0a778a75b7b6226f1a",
      "LastModified" : "2018-05-19T03:17:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Input Variables\n\n#    EVERYTRACE_ROOT\n\n# Produces:\n\n#    EVERYTRACE_LIBRARY\n\n#    EVERYTRACE_INCLUDE_DIR\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindFFTW.cmake" : {
      "ObjectId" : "9767373ca156f4617ed40f0fe49874fd4aac8b5d",
      "LastModified" : "2018-05-19T03:17:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find FFTW\n\n# Find the native FFTW includes and library\n\n#\n\n#  FFTW_INCLUDES    - where to find fftw3.h\n\n#  FFTW_LIBRARIES   - List of libraries when using FFTW.\n\n#  FFTW_FOUND       - True if FFTW found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set FFTW_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/FindGALAHAD.cmake" : {
      "ObjectId" : "0ee77fbe65228962233153463eb01fbe3e199b34",
      "LastModified" : "2018-05-19T03:17:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Galahad\n\n# Input Variables\n\n#    GALAHAD_ROOT\n\n#    GALAHAD_ARCH\n\n# Once done this will define\n\n#  GALAHAD_FOUND - System has Galahad\n\n#  GALAHAD_INCLUDE_DIRS - The Galahad include directories\n\n#  GALAHAD_LIBRARIES - The libraries needed to use Galahad\n\n##  GALAHAD_DEFINITIONS - Compiler switches required for using Galahad\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#     -DUSE_GALAHAD @PETSC_CFLAGS@)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Part of GCC\n",
        "Line" : 25,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set GALAHAD_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/FindGMP.cmake" : {
      "ObjectId" : "767510c600005cdd674435d36b5c07adc410f66e",
      "LastModified" : "2018-05-19T03:17:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2008-2010 Kent State University\n\n# Copyright (c) 2011-2012 Texas A&M University\n\n#\n\n# This file is distributed under the MIT License. See the accompanying file\n\n# LICENSE.txt or http://www.opensource.org/licenses/mit-license.php for terms\n\n# and conditions.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FIXME: How do I find the version of GMP that I want to use?\n\n# What versions are available?\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# NOTE: GMP prefix is understood to be the path to the root of the GMP\n\n# installation library.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/FindGSL.cmake" : {
      "ObjectId" : "1acd5ed36fec699f70358b907dcd6b2ab0e7f9e3",
      "LastModified" : "2018-05-19T03:17:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find GSL\n\n# Find the native GSL includes and library\n\n#\n\n#  GSL_INCLUDES    - where to find gsl/gsl_*.h, etc.\n\n#  GSL_LIBRARIES   - List of libraries when using GSL.\n\n#  GSL_FOUND       - True if GSL found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set GSL_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/FindGtest.cmake" : {
      "ObjectId" : "d9a489b0f0ad10052267fcb256cbda19cb7c2939",
      "LastModified" : "2018-05-19T03:17:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Input Variables\n\n#    GTEST_ROOT\n\n# Produces:\n\n#    GTEST_LIBRARY\n\n#    GTEST_INCLUDE_DIR\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindIbmisc.cmake" : {
      "ObjectId" : "5bc1782fbb95af4f8d7061c7ec77504c80bea093",
      "LastModified" : "2018-05-19T03:17:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Input Variables\n\n#    IBMISC_ROOT\n\n# Produces:\n\n#    IBMISC_LIBRARY\n\n#    IBMISC_INCLUDE_DIR\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindMPFR.cmake" : {
      "ObjectId" : "094aa2dc0e381cb8c0a3aa639f38cb18bb340113",
      "LastModified" : "2018-05-19T03:17:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find the MPFR library\n\n# See http://www.mpfr.org/\n\n#\n\n# This module supports requiring a minimum version, e.g. you can do\n\n#   find_package(MPFR 2.3.0)\n\n# to require version 2.3.0 to newer of MPFR.\n\n#\n\n# Once done this will define\n\n#\n\n#  MPFR_FOUND - system has MPFR lib with correct version\n\n#  MPFR_INCLUDES - the MPFR include directory\n\n#  MPFR_LIBRARIES - the MPFR library\n\n#  MPFR_VERSION - MPFR version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Copyright (c) 2010 Jitse Niesen, <jitse@maths.leeds.ac.uk>\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set MPFR_INCLUDES\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set MPFR_FIND_VERSION to 1.0.0 if no minimum version is specified\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set MPFR_VERSION\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Check whether found version exceeds minimum version\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Set MPFR_LIBRARIES\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Epilogue\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake/FindNetCDF_C.cmake" : {
      "ObjectId" : "42e43fbedbb6b51c9affa0eafbc7864052b968ca",
      "LastModified" : "2018-05-19T03:17:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Input Variables\n\n#    NETCDF_C_ROOT\n\n# Produces:\n\n#    NETCDF_C_LIBRARY\n\n#    NETCDF_C_INCLUDE_DIR\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindNetCDF_CXX4.cmake" : {
      "ObjectId" : "60af458178958ef2a09095ba812039eede2b96e1",
      "LastModified" : "2018-05-19T03:17:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Input Variables\n\n#    NETCDF_CXX4_ROOT\n\n# Produces:\n\n#    NETCDF_CXX4_LIBRARY\n\n#    NETCDF_CXX4_INCLUDE_DIR\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindNetCDF_Fortran.cmake" : {
      "ObjectId" : "511900eac222c6521f399e3210ee3daf2c409b5f",
      "LastModified" : "2018-05-19T03:17:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Input Variables\n\n#    NETCDF_FORTRAN_ROOT\n\n# Produces:\n\n#    NETCDF_FORTRAN_LIBRARY\n\n#    NETCDF_FORTRAN_INCLUDE_DIR\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindNumpy.cmake" : {
      "ObjectId" : "568f4e8da49868f44b1e64eeccbbbc8810217955",
      "LastModified" : "2018-05-19T03:17:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# https://code.google.com/p/numexpr/source/browse/FindNumPy.cmake\n\n#============================================================================\n\n# Copyright 2012 Continuum Analytics, Inc.\n\n#\n\n# MIT License\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining\n\n# a copy of this software and associated documentation files\n\n# (the \"Software\"), to deal in the Software without restriction, including\n\n# without limitation the rights to use, copy, modify, merge, publish,\n\n# distribute, sublicense, and/or sell copies of the Software, and to permit\n\n# persons to whom the Software is furnished to do so, subject to\n\n# the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included\n\n# in all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\n# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n\n# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n\n# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n\n# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\n# OTHER DEALINGS IN THE SOFTWARE.\n\n#\n\n#===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FindPython.cmake must be run first\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Convert the process output into a list\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Just in case there is unexpected output from the Python command.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The output from Python was unexpected. Raise an error always\n\n# here, because we found NumPy, but it appears to be corrupted somehow.\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Make sure all directory separators are '/'\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Get the major and minor version numbers\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/FindPETSc.cmake" : {
      "ObjectId" : "ac83daed7cba18d511a23b4fb960e2b3c679177d",
      "LastModified" : "2018-05-19T03:17:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find PETSc\n\n# Once done this will define\n\n#\n\n#  PETSC_FOUND        - system has PETSc\n\n#  PETSC_INCLUDES     - the PETSc include directories\n\n#  PETSC_LIBRARIES    - Link these to use PETSc\n\n#  PETSC_COMPILER     - Compiler used by PETSc, helpful to find a compatible MPI\n\n#  PETSC_DEFINITIONS  - Compiler switches for using PETSc\n\n#  PETSC_MPIEXEC      - Executable for running MPI programs\n\n#  PETSC_VERSION      - Version string (MAJOR.MINOR.SUBMINOR)\n\n#\n\n#  Usage:\n\n#  find_package(PETSc COMPONENTS CXX)  - required if build --with-clanguage=C++ --with-c-support=0\n\n#  find_package(PETSc COMPONENTS C)    - standard behavior of checking build using a C compiler\n\n#  find_package(PETSc)                 - same as above\n\n#\n\n# Setting these changes the behavior of the search\n\n#  PETSC_DIR - directory in which PETSc resides\n\n#  PETSC_ARCH - build architecture\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Right now, this is designed for compatability with the --with-clanguage option, so\n\n# only allow one item in the components list.\n",
        "Line" : 32,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# This is a stub for allowing multiple components should that time ever come. Perhaps\n\n# to also test Fortran bindings?\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# break line into three fields (the first is always \"#define\")\n",
        "Line" : 54,
        "CharPositionInLine" : 53
      },
      "4" : {
        "Text" : "# Also in local scope so we have access below\n",
        "Line" : 58,
        "CharPositionInLine" : 34
      },
      "5" : {
        "Text" : "# make dev version compare higher than any patch level of a released version\n",
        "Line" : 63,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# Debian paths\n",
        "Line" : 74,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# MacPorts path\n",
        "Line" : 79,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# If set, use environment variable first\n\n# Debian defaults\n",
        "Line" : 88,
        "CharPositionInLine" : 39
      },
      "9" : {
        "Text" : "# Determine whether the PETSc layout is old-style (through 2.3.3) or\n\n# new-style (>= 3.0.0)\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# > 3.5\n",
        "Line" : 115,
        "CharPositionInLine" : 71
      },
      "11" : {
        "Text" : "# > 2.3.3\n",
        "Line" : 118,
        "CharPositionInLine" : 67
      },
      "12" : {
        "Text" : "# <= 2.3.3\n",
        "Line" : 121,
        "CharPositionInLine" : 63
      },
      "13" : {
        "Text" : "# Put variables into environment since they are needed to get\n\n# configuration (petscvariables) in the PETSc makefile\n",
        "Line" : 131,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# A temporary makefile to probe the PETSc configuration\n",
        "Line" : 136,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# We are done with the temporary Makefile, calling PETSC_GET_VARIABLE after this point is invalid!\n",
        "Line" : 161,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Extract include paths and libraries from compile command line\n",
        "Line" : 165,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "#on windows we need to make sure we're linking against the right\n\n#runtime library\n",
        "Line" : 168,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Clear any stale value, if we got here, we need to find it again\n",
        "Line" : 194,
        "CharPositionInLine" : 76
      },
      "19" : {
        "Text" : "#windows expects \"libfoo\", linux expects \"foo\"\n",
        "Line" : 196,
        "CharPositionInLine" : 31
      },
      "20" : {
        "Text" : "# Look for petscvec first, if it doesn't exist, we must be using single-library\n",
        "Line" : 205,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# libpetscsys is called libpetsc prior to 3.1 (when single-library was introduced)\n",
        "Line" : 208,
        "CharPositionInLine" : 47
      },
      "22" : {
        "Text" : "# There is no libpetscvec\n",
        "Line" : 225,
        "CharPositionInLine" : 70
      },
      "23" : {
        "Text" : "# Minimal includes fail, see if just adding full includes fixes it\n",
        "Line" : 282,
        "CharPositionInLine" : 33
      },
      "24" : {
        "Text" : "# It does, we just need all the includes (\n",
        "Line" : 284,
        "CharPositionInLine" : 33
      },
      "25" : {
        "Text" : "# We are going to need to link the external libs explicitly\n",
        "Line" : 287,
        "CharPositionInLine" : 35
      },
      "26" : {
        "Text" : "# It looks like we really need everything, should have listened to Matt\n",
        "Line" : 297,
        "CharPositionInLine" : 8
      },
      "27" : {
        "Text" : "# We fail anyways\n",
        "Line" : 300,
        "CharPositionInLine" : 29
      },
      "28" : {
        "Text" : "# We fail anyways\n",
        "Line" : 302,
        "CharPositionInLine" : 31
      },
      "29" : {
        "Text" : "# We do an out-of-source build so __FILE__ will be an absolute path, hence __INSDIR__ is superfluous\n",
        "Line" : 309,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# Sometimes this can be used to assist FindMPI.cmake\n",
        "Line" : 315,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# Note that we have forced values for all these choices.  If you\n\n# change these, you are telling the system to trust you that they\n\n# work.  It is likely that you will end up with a broken build.\n",
        "Line" : 320,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 32
    },
    "cmake/FindPISM.cmake" : {
      "ObjectId" : "73abb5629dc517e419d2d5370d2ff951be60ced3",
      "LastModified" : "2018-05-19T03:17:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Pism\n\n# Input Variables\n\n#    PISM_DIR - Root of PISM install tree\n\n# Once done this will define\n\n#  PISM_FOUND - System has Pism\n\n#  PISM_INCLUDE_DIRS - The Pism include directories\n\n#  PISM_LIBRARIES - The libraries needed to use Pism\n\n##  PISM_DEFINITIONS - Compiler switches required for using Pism\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#pism_find_prerequisites()\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindPROJ4.cmake" : {
      "ObjectId" : "3554b265d327b232a6aa606b9712a447897df5a5",
      "LastModified" : "2018-05-19T03:17:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find proj.4\n\n# Find the native proj.4 includes and library\n\n#\n\n#  PROJ4_INCLUDES    - where to find proj_api.h\n\n#  PROJ4_LIBRARIES   - List of libraries when using proj.4.\n\n#  PROJ4_FOUND       - True if proj.4 found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set PROJ4_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/FindPackageMultipass.cmake" : {
      "ObjectId" : "fa350a928c9946e052b8c227f6537f434e24b902",
      "LastModified" : "2018-05-19T03:17:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# PackageMultipass - this module defines two macros\n\n#\n\n# FIND_PACKAGE_MULTIPASS (Name CURRENT\n\n#  STATES VAR0 VAR1 ...\n\n#  DEPENDENTS DEP0 DEP1 ...)\n\n#\n\n#  This function creates a cache entry <UPPERCASED-Name>_CURRENT which\n\n#  the user can set to \"NO\" to trigger a reconfiguration of the package.\n\n#  The first time this function is called, the values of\n\n#  <UPPERCASED-Name>_VAR0, ... are saved.  If <UPPERCASED-Name>_CURRENT\n\n#  is false or if any STATE has changed since the last time\n\n#  FIND_PACKAGE_MULTIPASS() was called, then CURRENT will be set to \"NO\",\n\n#  otherwise CURRENT will be \"YES\".  IF not CURRENT, then\n\n#  <UPPERCASED-Name>_DEP0, ... will be FORCED to NOTFOUND.\n\n#  Example:\n\n#    find_path (FOO_DIR include/foo.h)\n\n#    FIND_PACKAGE_MULTIPASS (Foo foo_current\n\n#      STATES DIR\n\n#      DEPENDENTS INCLUDES LIBRARIES)\n\n#    if (NOT foo_current)\n\n#      # Make temporary files, run programs, etc, to determine FOO_INCLUDES and FOO_LIBRARIES\n\n#    endif (NOT foo_current)\n\n#\n\n# MULTIPASS_SOURCE_RUNS (Name INCLUDES LIBRARIES SOURCE RUNS LANGUAGE)\n\n#  Always runs the given test, use this when you need to re-run tests\n\n#  because parent variables have made old cache entries stale. The LANGUAGE\n\n#  variable is either C or CXX indicating which compiler the test should\n\n#  use. \n\n# MULTIPASS_C_SOURCE_RUNS (Name INCLUDES LIBRARIES SOURCE RUNS)\n\n#  DEPRECATED! This is only included for backwards compatability. Use\n\n#  the more general MULTIPASS_SOURCE_RUNS instead.\n\n#  Always runs the given test, use this when you need to re-run tests\n\n#  because parent variables have made old cache entries stale.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The name of the stored value for the given state\n",
        "Line" : 46,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "# Clear all the dependent variables so that the module can reset them\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# This is a ridiculous hack.  CHECK_${language}_SOURCE_* thinks that if the\n\n# *name* of the return variable doesn't change, then the test does\n\n# not need to be re-run.  We keep an internal count which we\n\n# increment to guarantee that every test name is unique.  If we've\n\n# gotten here, then the configuration has changed enough that the\n\n# test *needs* to be rerun.\n",
        "Line" : 82,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Why can't I add to a cache variable?\n",
        "Line" : 91,
        "CharPositionInLine" : 49
      },
      "CommentCount" : 5
    },
    "cmake/FindPython.cmake" : {
      "ObjectId" : "e7c2dc220f443b0bf0357bb5377743b9e6f8484f",
      "LastModified" : "2018-05-19T03:17:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find python executable and libraries.\n\n#\n\n#  PYTHON_EXECUTABLE   - name of the python executable.\n\n#  PYTHON_INCLUDES     - where to find Python.h, etc.\n\n#  PYTHON_FOUND        - True if python is found\n\n#\n\n# http://stackoverflow.com/questions/13298504/using-cmake-with-setup-py\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#if(PYTHON_EXECUTABLE AND PYTHON_INCLUDES AND PYTHON_LIBRARY )\n\n#    set(PYTHON_FIND_QUIETLY TRUE)\n\n#endif()\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#find_program(PYTHON_CONFIG_EXE python3-config DOC \"python configuration\")\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#    execute_process( COMMAND ${PYTHON_EXECUTABLE} -c \"import sysconfig; print (sysconfig.get_config_var('LIBPL'))\"\n\n#                     OUTPUT_VARIABLE PYTHON_LIBDIR\n\n#                     RESULT_VARIABLE PYTHON_LIBDIR_NOT_FOUND\n\n#                     OUTPUT_STRIP_TRAILING_WHITESPACE)\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# https://www.python.org/dev/peps/pep-3149/\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#if(PYTHON_LIBDIR)\n\n#    find_library( PYTHON_LIBRARY NAMES \"python${PYTHON_VERSION}${PYTHON_ABIFLAGS}\")\n\n## HINTS ${PYTHON_LIBDIR} NO_CMAKE_PATH NO_CMAKE_ENVIRONMENT_PATH NO_SYSTEM_ENVIRONMENT_PATH NO_DEFAULT_PATH)\n\n#endif()\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# if(PYTHON_EXECUTABLE)\n\n#   if(NOT PYTHON_FIND_QUIETLY)\n\n#     message( STATUS \"Found Python executable: ${PYTHON_EXECUTABLE}\")\n\n#   endif()\n\n# else()\n\n#   if(FIND_PYTHON_REQUIRED)\n\n#     message( FATAL_ERROR \"Python executable missing\")\n\n#   endif()\n\n# endif()\n\n# \n\n# if(PYTHON_INCLUDES)\n\n#   if(NOT PYTHON_FIND_QUIETLY)\n\n#     message( STATUS \"Found Python includes: ${PYTHON_INCLUDES}\")\n\n#   endif()\n\n# else()\n\n#   if(FIND_PYTHON_REQUIRED)\n\n#     message( FATAL_ERROR \"Python include directory missing\")\n\n#   endif()\n\n# endif()\n\n# \n\n# if(PYTHON_LIBRARY)\n\n#   if(NOT PYTHON_FIND_QUIETLY)\n\n#     message( STATUS \"Found Python library: ${PYTHON_LIBRARY}\")\n\n#   endif()\n\n# else()\n\n#   if(FIND_PYTHON_REQUIRED)\n\n#     message( FATAL_ERROR \"Python library missing\")\n\n#   endif()\n\n# endif()\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# --------------------------------------------\n\n# Grab paths out of Python's sysconfig module\n\n# https://docs.python.org/2/library/sysconfig.html#module-sysconfig\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#set(GET_PATH_ARGS \"${GET_PATH_ARGS}, expand=False\")\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Docs say this should work but it doesn't\n\n#execute_process( COMMAND ${PYTHON_EXECUTABLE} -c \"import sysconfig; print (sysconfig.get_path('platinclude' ${GET_PATH_ARGS}))\"\n\n#\tOUTPUT_VARIABLE PY_SYSCONFIG_PLATINCLUDE\n\n#\tRESULT_VARIABLE PY_SYSCONFIG_STLIB_NOT_FOUND\n\n#\tOUTPUT_STRIP_TRAILING_WHITESPACE)\n\n#endif()\n\n#message(\"-- Found PY_SYSCONFIG_PLATINCLUDE \" ${PY_SYSCONFIG_PLATINCLUDE})\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "cmake/FindSpSparse.cmake" : {
      "ObjectId" : "43ac1207d2eed59879a7cc451734a2f986061b4a",
      "LastModified" : "2018-05-19T03:17:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Input Variables\n\n#    SPSPARSE_ROOT\n\n# Produces:\n\n#    SPSPARSE_LIBRARY\n\n#    SPSPARSE_INCLUDE_DIR\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindTCLAP.cmake" : {
      "ObjectId" : "c0ba210df7c9e0b4a9d7118b6c7af3cc06cff092",
      "LastModified" : "2018-05-19T03:17:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Once done this will define\n\n#\n\n# TCLAP_FOUND         - system has gmm and it can be used\n\n# TCLAP_INCLUDE_DIR   - directory where the header file can be found\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# already found\n",
        "Line" : 9,
        "CharPositionInLine" : 30
      },
      "CommentCount" : 2
    },
    "cmake/FindUDUNITS2.cmake" : {
      "ObjectId" : "dcaf09e0252cd374e57bf0647a8b8d2a69b21a7a",
      "LastModified" : "2018-05-19T03:17:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find UDUNITS2\n\n# Find the native UDUNITS2 includes and library\n\n#\n\n#  UDUNITS2_INCLUDES    - where to find udunits2.h\n\n#  UDUNITS2_LIBRARIES   - libraries to link with\n\n#  UDUNITS2_FOUND       - True if UDUNITS2 was found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# UDUNITS2 headers might be in .../include or .../include/udunits2.\n\n# We try both.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set UDUNITS2_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/LibFindMacros.cmake" : {
      "ObjectId" : "aa2143c82d2f7b0ab5b1eacb2e9c239f8e3f4178",
      "LastModified" : "2018-05-19T03:17:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Version 1.0 (2013-04-12)\n\n# Public Domain, originally written by Lasse Kärkkäinen <tronic@zi.fi>\n\n# Published at http://www.cmake.org/Wiki/CMake:How_To_Find_Libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If you improve the script, please modify the forementioned wiki page because\n\n# I no longer maintain my scripts (hosted as static files at zi.fi). Feel free\n\n# to remove this entire header if you use real version control instead.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Changelog:\n\n# 2013-04-12  Added version number (1.0) and this header, no other changes\n\n# 2009-10-08  Originally published\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Works the same as find_package, but forwards the \"REQUIRED\" and \"QUIET\" arguments\n\n# used for the current package. For this to work, the first parameter must be the\n\n# prefix of the current package, then the prefix of the new package etc, which are\n\n# passed to find_package.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# CMake developers made the UsePkgConfig system deprecated in the same release (2.6)\n\n# where they added pkg_check_modules. Consequently I need to support both in my scripts\n\n# to avoid those deprecated warnings. Here's a helper that does just that.\n\n# Works identically to pkg_check_modules, except that no checks are needed prior to use.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Do the final processing once the paths have been detected.\n\n# If include dirs are needed, ${PREFIX}_PROCESS_INCLUDES should be set to contain\n\n# all the variables, each of which contain one include directory.\n\n# Ditto for ${PREFIX}_PROCESS_LIBS and library files.\n\n# Will set ${PREFIX}_FOUND, ${PREFIX}_INCLUDE_DIRS and ${PREFIX}_LIBRARIES.\n\n# Also handles errors in case library detection was required, etc.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Skip processing if already processed during this run\n",
        "Line" : 52,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Start with the assumption that the library was found\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Process all includes and set _FOUND to false if any are missing\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Process all libraries and set _FOUND to false if any are missing\n",
        "Line" : 67,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Print message and/or exit on fatal error\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 11
    },
    "cmake/ResolveCompilerPaths.cmake" : {
      "ObjectId" : "b398025e95518511f4e06ba218dcef386a4e8eaa",
      "LastModified" : "2018-05-19T03:17:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ResolveCompilerPaths - this module defines two macros\n\n#\n\n# RESOLVE_LIBRARIES (XXX_LIBRARIES LINK_LINE)\n\n#  This macro is intended to be used by FindXXX.cmake modules.\n\n#  It parses a compiler link line and resolves all libraries\n\n#  (-lfoo) using the library path contexts (-L/path) in scope.\n\n#  The result in XXX_LIBRARIES is the list of fully resolved libs.\n\n#  Example:\n\n#\n\n#    RESOLVE_LIBRARIES (FOO_LIBRARIES \"-L/A -la -L/B -lb -lc -ld\")\n\n#\n\n#  will be resolved to\n\n#\n\n#    FOO_LIBRARIES:STRING=\"/A/liba.so;/B/libb.so;/A/libc.so;/usr/lib/libd.so\"\n\n#\n\n#  if the filesystem looks like\n\n#\n\n#    /A:       liba.so         libc.so\n\n#    /B:       liba.so libb.so\n\n#    /usr/lib: liba.so libb.so libc.so libd.so\n\n#\n\n#  and /usr/lib is a system directory.\n\n#\n\n#  Note: If RESOLVE_LIBRARIES() resolves a link line differently from\n\n#  the native linker, there is a bug in this macro (please report it).\n\n#\n\n# RESOLVE_INCLUDES (XXX_INCLUDES INCLUDE_LINE)\n\n#  This macro is intended to be used by FindXXX.cmake modules.\n\n#  It parses a compile line and resolves all includes\n\n#  (-I/path/to/include) to a list of directories.  Other flags are ignored.\n\n#  Example:\n\n#\n\n#    RESOLVE_INCLUDES (FOO_INCLUDES \"-I/A -DBAR='\\\"irrelevant -I/string here\\\"' -I/B\")\n\n#\n\n#  will be resolved to\n\n#\n\n#    FOO_INCLUDES:STRING=\"/A;/B\"\n\n#\n\n#  assuming both directories exist.\n\n#  Note: as currently implemented, the -I/string will be picked up mistakenly (cry, cry)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If it's a library path, add it to the list\n",
        "Line" : 48,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "# It's a library, resolve the path by looking in the list and then (by default) in system directories\n",
        "Line" : 53,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# We have an absolute path, add root to the search path\n",
        "Line" : 56,
        "CharPositionInLine" : 30
      },
      "4" : {
        "Text" : "# only the LAST occurence of each library is required since there should be no circular dependencies\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "cmake/setup_rpath.cmake" : {
      "ObjectId" : "6772cc383577f9dc1f0ac799c6f1a1a571d9b07e",
      "LastModified" : "2018-05-19T03:17:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# enable @rpath in the install name for any shared library being built\n\n# note: it is planned that a future version of CMake will enable this by default\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --------------------------------------------------------\n\n# Always use full RPATH\n\n# http://www.cmake.org/Wiki/CMake_RPATH_handling\n\n# http://www.kitware.com/blog/home/post/510\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# use, i.e. don't skip the full RPATH for the build tree\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# when building, don't use the install RPATH already\n\n# (but later on when installing)\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# add the automatically determined parts of the RPATH\n\n# which point to directories outside the build tree to the install RPATH\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# the RPATH to be used when installing, but only if it's not a system directory\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# --------------------------------------------------------\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "gridgen/CMakeLists.txt" : {
      "ObjectId" : "3128924dbb54a468005215fc5b4c3b6cf6cc45ed",
      "LastModified" : "2018-05-19T03:17:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#    mar\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# =========== Grid generators: Spherical Grids (for the GCM)\n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#   modele_ll_g2x2_5    # ModelE 2x2.5 grid, in vicinity of Greenland\n\n#   modele_ll_g4x5      # ModelE 4x5 grid, in vicinity of Greenland\n\n#   ga_2x2_5            # ModelE 2x2.5 grid, in vicinity of Greenland and Antarctica\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# =========== Grid generators: Cartesion Grids (for the Ice Model)\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#   searise100          # 100km grid over ?<continent>? with SeaRISE projection\n\n#   searise50           # 50km grid over ?<continent>? with SeaRISE projection\n\n#   searise_g20         # 20km grid over Greenland with SeaRISE projection\n\n#   searise_a           # The actual 5km grid used by SeaRISE over Antarctica\n\n#   searise_g           # The actual 5km grid used by SeaRISE over Greenland\n\n#   hires               # A 1km grid over Greenland with SeaRISE projection\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "modele/CMakeLists.txt" : {
      "ObjectId" : "b14232b271a1d0d326da4a8ad90530c546378cf4",
      "LastModified" : "2018-05-19T03:17:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# make_topo oneway\n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Obsolete\n\n# make_topo_icebin icebin22m\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "pylib/CMakeLists.txt" : {
      "ObjectId" : "cc68c15abebe3423117899882d4b351baa02fdf6",
      "LastModified" : "2018-05-19T03:17:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ----------Stuff to help with running Python before this project is installed.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## --- Convenience link to Python source\n\n#execute_process(COMMAND ln -s ${CMAKE_CURRENT_SOURCE_DIR} src\n\n#    WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR})\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# -------------------------------------------------------------\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Compile everything (including Cython extension) as a single\n\n# \"compilation unit\" for Numpy.  See:\n\n# http://stackoverflow.com/questions/12253389/numpy-c-api-link-several-object-files\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Only ONE compilation unit should NOT have -DNO_IMPORT_ARRAY\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Construct Cython -I flags\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set RPATH in the installed library\n\n# http://www.cmake.org/Wiki/CMake_RPATH_handling\n\n# http://www.kitware.com/blog/home/post/510\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "pytest/Makefile" : {
      "ObjectId" : "c9c9252c9f73e3d85e62c64711be4a8788397fa2",
      "LastModified" : "2018-05-19T03:17:50Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Make sure you've done configure and make in the above directory\n\n# before trying to run the tests.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "slib/CMakeLists.txt" : {
      "ObjectId" : "d8955524978eb03be8179bd1fe88f125ed569354",
      "LastModified" : "2018-05-19T03:17:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# To turn of GCC errors in one file...\n\n# http://stackoverflow.com/questions/59670/how-to-get-rid-of-deprecated-conversion-from-string-constant-to-char-warnin/541079#541079\n\n#pragma GCC diagnostic ignored \"-Wwrite-strings\"\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#message(\"XXX0 \" ${PROJECT_SOURCE_DIR}/slib)\n\n#message(\"XXX1 \" ${GMP_INCLUDE_DIR})\n\n#message(\"XXX2 \" ${CGAL_INCLUDE_DIR})\n\n#message(\"XXX3 \" ${BLITZ_INCLUDE_DIR})\n\n#message(\"XXX4 \" ${Boost_INCLUDE_DIRS})\n\n#message(\"XXX7 \" ${BOOST_ROOT})\n\n#message(\"XXX8 \" ${PETSC_INCLUDES})\n\n#message(\"XXX9 \" ${NETCDF_INCLUDES})\n\n#\n\n#message(\"PROJECT_SOURCE_DIR \" ${PROJECT_SOURCE_DIR})\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# -----------------------------------------------------------\n\n#     OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/f90blitz.f90\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#add_custom_target(makeme ALL DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/f90blitz.f90)\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Coupler...\n",
        "Line" : 48,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# install Icebin headers\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "01ac4f4d266dcfd4fb7763d551d548b2e929a679",
      "LastModified" : "2018-05-19T03:17:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ---------------------------------\n\n# https://cmake.org/cmake/help/v3.0/module/FindGTest.html\n\n# https://github.com/snikulov/google-test-examples/blob/master/CMakeLists.txt\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# z1qx1n_bs1)\n",
        "Line" : 14,
        "CharPositionInLine" : 18
      },
      "2" : {
        "Text" : "# This test has a second Fortran file in it\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Linking in gfortran is GCC-only\n",
        "Line" : 23,
        "CharPositionInLine" : 56
      },
      "CommentCount" : 4
    }
  },
  "FileTypes" : {
    "CMAKE" : 35,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 1242
}