{
  "Repository" : "712536",
  "Revision" : "HEAD",
  "ObjectId" : "3d48880b05997050f8d2bbb5652be3647e2288b9",
  "CommitTime" : "2018-07-13T22:57:30Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "d3fc84eaab380e778a67e986bec62f0d7200d4ff",
      "LastModified" : "2018-07-11T16:37:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Options to be set with ccmake or cmake-gui\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create text files: dirs.txt contains all module directories and modules.txt contains all paths to modules\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Function used by module directories: create a list of all module directories and add all *.cpp files to modules_src\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# list(FIND Markus_MODULE_BLACKLIST ${name1} index)\n\n# if(index STREQUAL \"-1\")\n",
        "Line" : 28,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# Include this module\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# else()\n",
        "Line" : 34,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "# message(\"Blacklisted module ${name1}\")\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# endif()\n",
        "Line" : 36,
        "CharPositionInLine" : 3
      },
      "8" : {
        "Text" : "# Required packages\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# find_package(Qt5Core REQUIRED) # already found via Qt5Widgets\n",
        "Line" : 86,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Search all directory named modules... (note: we need to preserve the order)\n\n# file(GLOB modules_tmp\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# \"modules\" \"modules2*\" \"modules3*\" \"modules4\"\n",
        "Line" : 94,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# )\n\n# foreach(iter IN LISTS modules_tmp)\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# get_filename_component(ext1  ${iter} EXT)\n\n# get_filename_component(name1 ${iter} NAME_WE)\n\n# list(APPEND modules_dirs \"${name1}${ext1}\")\n",
        "Line" : 97,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# endforeach(iter)\n\n# message(\"Looking for modules in ${modules_dirs}\")\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#-------------------------------------------------------------------------------- \n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Executables fail to build with Qt 5 in the default configuration\n\n# without -fPIC. We add that here. TODO: Use flag of Qt5 ?\n",
        "Line" : 121,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "#-------------------------------------------------------------------------------- \n\n# Include sub directories\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# add_subdirectory(tools)\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Auto generate allModules.cpp\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# double the dependencies to avoid linking error\n",
        "Line" : 155,
        "CharPositionInLine" : 67
      },
      "21" : {
        "Text" : "#-------------------------------------------------------------------------------- \n\n#create a pretty commit id using git\n\n#uses 'git describe --tags', so tags are required in the repo\n\n#create a tag with 'git tag <name>' and 'git push --tags'\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# execute_process(COMMAND ${GIT_EXECUTABLE} describe --long --tags --dirty RESULT_VARIABLE res_var OUTPUT_VARIABLE GIT_COM_ID2 WORKING_DIRECTORY vp-detection )\n",
        "Line" : 213,
        "CharPositionInLine" : 1
      },
      "23" : {
        "Text" : "#string( REPLACE \"\\n\" \"\" GIT_COMMIT_ID2 ${GIT_COM_ID2} )\n",
        "Line" : 220,
        "CharPositionInLine" : 1
      },
      "24" : {
        "Text" : "# copy the file to the final header only if the version changes\n\n# reduces needless rebuilds\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "bulk/CMakeLists.txt" : {
      "ObjectId" : "79dcaad33ae4b78816934fe8e3d6fc7d825a9275",
      "LastModified" : "2017-12-21T10:34:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Work in progress to add precompiled headers for Module.h\n\n# add_library(Module.h.gch\n\n# \tModule.h\n\n# )\n\n# set_target_properties(Module.h.gch PROPERTIES LINKER_LANGUAGE C)\n\n# target_compile_options(Module.h.gch BEFORE PUBLIC -x c++-header)\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "editor/CMakeLists.txt" : {
      "ObjectId" : "39fd8995d8dab10ea0df8706d12a80e087ba7b26",
      "LastModified" : "2017-11-14T12:52:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tell CMake to run moc when necessary:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# As moc files are generated in the binary dir, tell CMake\n\n# to always look for includes there:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Only used for development purpose\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "gui/CMakeLists.txt" : {
      "ObjectId" : "0a9da257166bd672a92b4c98f1f2bc0bb34b1cf6",
      "LastModified" : "2017-11-14T12:52:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set (MOC_HEADERS\n\n#gui/markus.h\n\n#gui/QModuleViewer.h\n\n#)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#qt4_wrap_cpp (MOC_OUTFILES ${MOC_HEADERS})\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#qt5_automoc(markus.cpp QModuleViewer.cpp QParameterControlBoard.cpp QParameterSlider.cpp)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Tell CMake to run moc when necessary:\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# As moc files are generated in the binary dir, tell CMake\n\n# to always look for includes there:\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "modules/CMakeLists.txt" : {
      "ObjectId" : "0359c0b2276c961c7915fb28b719182b8dbd9ba4",
      "LastModified" : "2018-01-16T05:32:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# message(\"Found these source files in modules/: ${modules_src}\")\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "06334c20d4a9138db46bffba46e0716a8cb656a0",
      "LastModified" : "2018-01-16T05:32:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# double the dependencies to avoid linking error\n",
        "Line" : 9,
        "CharPositionInLine" : 71
      },
      "CommentCount" : 1
    },
    "tools/CMakeLists.txt" : {
      "ObjectId" : "d363e4f5fd504dadbef89b5ff78a890f06df3432",
      "LastModified" : "2017-11-14T12:52:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# double the dependencies to avoid linking error\n",
        "Line" : 8,
        "CharPositionInLine" : 77
      },
      "1" : {
        "Text" : "# double the dependencies to avoid linking error\n",
        "Line" : 11,
        "CharPositionInLine" : 78
      },
      "CommentCount" : 2
    },
    "util/CMakeLists.txt" : {
      "ObjectId" : "992f4f3a3a728705eaab1c5348083aa20ce9a443",
      "LastModified" : "2018-01-16T05:32:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 8
  },
  "ElapsedTime" : 1841
}