{
  "Repository" : "64670471",
  "Revision" : "HEAD",
  "ObjectId" : "ba64189ae1a44c2935f060a4de06bdc2df721a93",
  "CommitTime" : "2019-03-21T23:43:18Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "b6969222438cf016e085d101d3fb9592b10e547f",
      "LastModified" : "2019-03-20T15:40:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Deviate from the naming convention for consistency with tink_version.bzl.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Bazel rewrites import paths so that \"cc/example/foo.h\" can be included as\n\n# \"tink/example/foo.h\". The following lines simulate this behaviour by creating\n\n# a symlink to cc/ called tink/, and placing it in a separate subdirectory,\n\n# which is then specified as a global include path.\n\n#\n\n# It's important to create a separate directory and not just drop the link in\n\n# CMAKE_CURRENT_BINARY_DIR, since adding that to the include paths will\n\n# make the whole contents of that directory visible to the compiled files,\n\n# which may result in undeclared dependencies that nevertheless happen to work.\n\n#\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cc/CMakeLists.txt" : {
      "ObjectId" : "733ed9b86bb5d6dc4224cfdf06543350acac0c88",
      "LastModified" : "2019-03-20T15:41:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# public libraries\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# tests\n",
        "Line" : 484,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cc/aead/CMakeLists.txt" : {
      "ObjectId" : "60655b7085efd6fe317e4f9499b437f49eb9dbec",
      "LastModified" : "2019-03-20T15:41:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# tests\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cc/config/CMakeLists.txt" : {
      "ObjectId" : "2454710a813d84bb7758f6cdbe0ca3b459eb1f4c",
      "LastModified" : "2019-03-20T15:41:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# tests\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cc/daead/CMakeLists.txt" : {
      "ObjectId" : "0c362c3925f8fc44c99d2ff7f443b36d17f4191a",
      "LastModified" : "2019-03-20T15:41:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# tests\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cc/hybrid/CMakeLists.txt" : {
      "ObjectId" : "6b02991d8df423cbc5a43e541c69cd4324c481a7",
      "LastModified" : "2019-03-20T15:41:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# tests\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cc/mac/CMakeLists.txt" : {
      "ObjectId" : "89aebf5c1cee4b9e8d7d636d1253efcc45f96b73",
      "LastModified" : "2019-03-20T15:41:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# tests\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cc/signature/CMakeLists.txt" : {
      "ObjectId" : "162fde2d31345b84ce3fd953976a60d34703f4f1",
      "LastModified" : "2019-03-20T15:41:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# tests\n",
        "Line" : 339,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cc/streamingaead/CMakeLists.txt" : {
      "ObjectId" : "3c594132f06a3d72e448ace0f624d4b7c140b250",
      "LastModified" : "2019-03-20T22:49:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# tests\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cc/subtle/CMakeLists.txt" : {
      "ObjectId" : "bbb2773f9c79c993bbccb0ec7960359e8fe780b6",
      "LastModified" : "2019-03-20T15:41:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# tests\n",
        "Line" : 538,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cc/util/CMakeLists.txt" : {
      "ObjectId" : "7ae7128da3f2f357ca939e553718d176fd36c5b8",
      "LastModified" : "2019-03-20T15:41:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# tests\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/HttpArchive.cmake" : {
      "ObjectId" : "e16a33ba5b187269f2c81825d1b07d98fa01e0a9",
      "LastModified" : "2019-03-20T15:41:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n# http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Download, unpack and configure a dependency.\n\n#\n\n# The project is added as a subdirectory of Tink, unless DATA_ONLY is\n\n# specified. This makes all target defined by it available as dependencies.\n\n#\n\n# This rule also defines a <NAME>_SOURCE_DIR variable, which points to the\n\n# root directory of the downloaded package and can be used to reference data in\n\n# tests, or append extra include/link paths in the Workspace file.\n\n#\n\n# Parameters:\n\n#   NAME name of the dependency.\n\n#   URL url to fetch a source archive from.\n\n#   SHA256 hash of the file downloaded from URL.\n\n#\n\n# Optional parameters:\n\n#   CMAKE_SUBIDR subdirectory of the downloaded archive where the root\n\n#     CMakeLists.txt file for the project is located. Defaults to the root.\n\n#   CMAKE_ARGS any additional argument that should be passed to cmake when\n\n#     configuring the downloaded archive. Defaults to empty.\n\n#   DATA_ONLY flag, if present the package will only be downloaded, verified and\n\n#     unpacked. No configuration step is performed, and no target included. This\n\n#     is useful for downloading archives of test vectors or artifacts.\n\n#     False by default.\n\n#\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/TinkBuildRules.cmake" : {
      "ObjectId" : "beb4deb5f9e26a1ad64dc5455677e123e7d0d827",
      "LastModified" : "2019-03-20T15:41:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n# http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n\n# Partially adapted from Abseil's CMake helpers\n\n# https://github.com/abseil/abseil-cpp/blob/master/CMake/AbseilHelpers.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Rules for declaring Tink targets in a way similar to Bazel.\n\n#\n\n# These functions are intended to reduce the difficulty of supporting completely\n\n# different build systems, and are designed for Tink internal usage only.\n\n# They may work outside this project too, but we don't support that.\n\n#\n\n# A set of global variables influences the behavior of the rules:\n\n#\n\n#   TINK_MODULE name used to build more descriptive names and for namespaces.\n\n#   TINK_GENFILE_DIR generated content root, such pb.{cc,h} files.\n\n#   TINK_INCLUDE_DIRS list of global include paths.\n\n#   TINK_CXX_STANDARD C++ standard to enforce, 11 for now.\n\n#   TINK_BUILD_TESTS flag, set to false to disable tests (default false).\n\n#\n\n# Sensible defaults are provided for all variables, except TINK_MODULE, which is\n\n# defined by calls to tink_module(). Please don't alter it directly.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Declare the beginning of a new Tink library namespace.\n\n#\n\n# As a rule of thumb, every CMakeLists.txt should be a different module, named\n\n# after the directory that contains it, and this function should appear at the\n\n# top of each CMakeLists script.\n\n#\n\n# This is not a requirement, though. Targets should be grouped logically, and\n\n# multiple directories can be part of the same module as long as target names\n\n# do not collide.\n\n#\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Declare a Tink library. Produces a static library that can be linked into\n\n# other test, binary or library targets. Tink libraries are mainly meant as\n\n# a way to organise code and speed up compilation.\n\n#\n\n# Arguments:\n\n#   NAME base name of the target. See below for target naming conventions.\n\n#   SRCS list of source files, including headers.\n\n#   DEPS list of dependency targets.\n\n#   PUBLIC flag, signal that this target is intended for external use.\n\n#\n\n# If SRCS contains only headers, an INTERFACE rule is created. This rule carries\n\n# include path and link library information, but is not directly buildable.\n\n#\n\n# The corresponding build target is named tink_<MODULE>_<NAME> if PUBLIC is\n\n# specified, or tink_internal_<MODULE>_<NAME> otherwise. An alias is also\n\n# defined for use in CMake scripts, in the tink::<MODULE>::<NAME> form.\n\n#\n\n# Unlike Bazel, CMake does not enforce the rule that all dependencies must be\n\n# listed. CMake DEPS just carry include, build and link flags that are passed\n\n# to the compiler. Because of this, a target might compile even if a dependency\n\n# is not specified, but that could break at any time. So make sure that all\n\n# dependencies are explicitly specified.\n\n#\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Declare a Tink test using googletest, with a syntax similar to Blaze.\n\n#\n\n# Parameters:\n\n#   NAME base name of the test.\n\n#   SRCS list of test source files, headers included.\n\n#   DEPS list of dependencies, see tink_cc_library above.\n\n#   DATA list of non-code dependencies, such as test vectors.\n\n#\n\n# Tests added with this macro are automatically registered.\n\n# Each test produces a build target named tink_test_<MODULE>_<NAME>.\n\n#\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Declare a C++ Proto library.\n\n#\n\n# Parameters:\n\n#   NAME base name of the library.\n\n#   SRCS list of .proto source files.\n\n#   DEPS list of proto library dependencies, produced by tink_cc_proto or not.\n\n#\n\n# The resulting library follows the same naming convention as tink_cc_library.\n\n#\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Declare an empty target, that depends on all those specified. Use this rule\n\n# to group dependencies that are logically related and give them a single name.\n\n#\n\n# Parameters:\n\n#   NAME base name of the target.\n\n#   DEPS list of dependencies to group.\n\n#\n\n# Each tink_target_group produces a target named tink_<MODULE>_<NAME>.\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/TinkUtil.cmake" : {
      "ObjectId" : "375ebca573dc5755b3e1565731dd0d26e962c46a",
      "LastModified" : "2019-03-20T15:37:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n# http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create an alias for SOURCE, called DESTINATION.\n\n#\n\n# On platforms that support them, this rule will effectively create a symlink.\n\n#\n\n# SOURCE may be relative to CMAKE_CURRENT_SOURCE_DIR, or absolute.\n\n# DESTINATION may relative to CMAKE_CURRENT_BINARY_DIR, or absolute.\n\n#\n\n# Adapted from https://github.com/google/binexport/blob/master/util.cmake\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/TinkWorkspace.cmake" : {
      "ObjectId" : "2b6929e7d7cbc5ddd8b46f08eb0b10230cd7b32d",
      "LastModified" : "2019-03-20T15:41:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n# http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Download, unpack and setup Tink dependencies.\n\n#\n\n# Despite the looks, http_archive rules are not purely declarative, and order\n\n# matters. All variables defined before a rule are visible when configuring the\n\n# dependency it declares, and the targets provided by a dependency are visible\n\n# (only) after it has been declared. Following dependencies may rely on targets\n\n# defined by a previous one, for instance on gtest or absl.\n\n#\n\n# Some rules imported from dependencies require small fixes, which are specified\n\n# after the relative http_archive rule. Please always document the intended\n\n# purpose of such statements, and why they are necessary.\n\n#\n\n# In general, when adding a new dependency you should follow this structure:\n\n#\n\n# <set any configuration variable, if any>\n\n# <http_archive for your dependency>\n\n# <define or fix newly imported targets, if any>\n\n#\n\n# Many projects provide switches to disable tests or examples, which you should\n\n# specify, in order to speed up the compilation process.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Symlink the Wycheproof test data.\n\n# Paths are hard-coded in tests, which expects wycheproof/ in this location.\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# BoringSSL targets do not carry include directory info, this fixes it.\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Rapidjson is a header-only library with no explicit target. Here we create one.\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "examples/helloworld/cc/CMakeLists.txt" : {
      "ObjectId" : "b1dc11d80a0c68e47bd96c0206e11db1d6e097c6",
      "LastModified" : "2019-03-20T15:41:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# 3.5 is the minimum version supported by Tink and its dependencies.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Import Tink as an in-tree dependency.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/helloworld/java/pom.xml" : {
      "ObjectId" : "e13150a297e6c7ab3c3633b2740cd198055a4af8",
      "LastModified" : "2019-03-20T15:37:24Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "proto/CMakeLists.txt" : {
      "ObjectId" : "0e5c2181cb01cd7eb16a08caf3629efac2b882d1",
      "LastModified" : "2019-03-20T15:41:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third_party/rules_protobuf/objc/rules.bzl" : {
      "ObjectId" : "69edbe10f1f6c8f1c9df1fb0594c02df0cfaa162",
      "LastModified" : "2019-03-20T15:37:24Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "\"\"\"Compiles protobuf for ObjC.\n\n\"\"\"",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "third_party/rules_protobuf/protobuf/internal/proto_compile.bzl" : {
      "ObjectId" : "4ffd755873c8555f162c56f8a98786479e7ea7df",
      "LastModified" : "2019-03-20T15:37:24Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "\"\"\"Compiles protobuf.\n\n\"\"\"",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"Helper function that writes a potentially long command list to a file.\n    Args:\n      ctx (struct): The ctx object.\n      path (string): the file path where the params file should be written.\n      mnemonic (string): the action mnemomic.\n      cmds (list<string>): the command list.\n    Returns:\n      (File): an executable file that runs the command set.\n    \"\"\"",
        "Line" : 12,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "\"\"\"Return a dirname in the form of path segments relative to base.\n    If the file.short_path is not within base, return empty list.\n    Example: if base=\"foo/bar/baz.txt\"\n             and file.short_path=\"bar/baz.txt\",\n             return [\"bar\"].\n    Args:\n      base (string): the base dirname (ctx.label.package)\n      file (File): the file to calculate relative dirname.\n    Returns:\n      (list<string>): path\n    \"\"\"",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# ignore off the first two items since we'll be cd'ing into\n# this dir.",
        "Line" : 47,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "\"\"\"Adjust path relative to offset\"\"\"",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# \"external/foobar/file.proto\" --> \"file.proto\"",
        "Line" : 65,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "\"\"\"For a set of files that belong the the given context label, create a mapping to the given prefix.\"\"\"",
        "Line" : 76,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# File in an external repo looks like:\n# '../WORKSPACE/SHORT_PATH'.  We want just the SHORT_PATH.",
        "Line" : 82,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# special case to elide last part if the name is\n# 'go_default_library.pb'",
        "Line" : 90,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "\"\"\"Build a jar file for protoc to dump java classes into.\"\"\"",
        "Line" : 99,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "\"\"\"Build a library.js file for protoc to dump java classes into.\"\"\"",
        "Line" : 109,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Remove protojar from the list of provided outputs",
        "Line" : 136,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "\"\"\"Build a list of files we expect to be generated.\"\"\"",
        "Line" : 144,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# This is currently csharp-specific, which needs to have the\n# output_dir positively adjusted to the package directory.",
        "Line" : 166,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "\"\"\"Build a list of files we expect to be generated.\"\"\"",
        "Line" : 175,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "\"\"\"Add a '--plugin=NAME=PATH' argument if the language descriptor\n    requires one.\n    \"\"\"",
        "Line" : 179,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "\"\"\"Build a --plugin option if required for basic protobuf generation.\n    Args:\n      run (struct): the compilation run object.\n      builder (dict): the compilation builder data.\n    Built-in language don't need this.\n    \"\"\"",
        "Line" : 187,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "\"\"\"For a set of files that belong the the given context label, create a mapping to the given prefix.\"\"\"",
        "Line" : 205,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "#print(\"mapping file short path: %s\" % src)\n# File in an external repo looks like:\n# '../WORKSPACE/SHORT_PATH'.  We want just the SHORT_PATH.",
        "Line" : 210,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# special case to elide last part if the name is\n# 'go_default_library.pb'",
        "Line" : 221,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "\"\"\"Override behavior to add plugin options before building the --go_out option\"\"\"",
        "Line" : 232,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Build the list of import mappings.  Start with any configured on\n# the rule by attributes.",
        "Line" : 237,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Then add in the transitive set from dependent rules.",
        "Line" : 242,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "\"\"\"Build the --{lang}_out argument for a given plugin.\"\"\"",
        "Line" : 255,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "\"\"\"Build the --{lang}_out option\"\"\"",
        "Line" : 262,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# Compte set of \"external workspace roots\" that the proto\n# sourcefiles belong to.",
        "Line" : 281,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# This set size must be 0 or 1. (all source files must exist in this\n# workspace or the same external workspace).",
        "Line" : 289,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "\"\"\"\n        You are attempting simultaneous compilation of protobuf source files that span multiple workspaces (%s).\n        Decompose your library rules into smaller units having filesets that belong to only a single workspace at a time.\n        Note that it is OK to *import* across multiple workspaces, but not compile them as file inputs to protoc.\n        \"\"\"",
        "Line" : 296,
        "CharPositionInLine" : 16
      },
      "28" : {
        "Text" : "\"\"\"\n>**************************************************************************\n* - Generating files into the workspace...  This is potentially           *\n*   dangerous (may overwrite existing files) and violates bazel's         *\n*   sandbox policy.                                                       *\n* - Disregard \"ERROR: output 'foo.pb.*' was not created.\" messages.       *\n* - Build will halt following the \"not all outputs were created\" message. *\n* - Output manifest is printed below.                                     *\n**************************************************************************<\n%s\n>*************************************************************************<\n\"\"\"",
        "Line" : 328,
        "CharPositionInLine" : 12
      },
      "29" : {
        "Text" : "\"\"\"\n************************************************************\ncd $(bazel info execution_root)%s && \\\n%s\n************************************************************\n%s\n************************************************************\n\"\"\"",
        "Line" : 344,
        "CharPositionInLine" : 12
      },
      "30" : {
        "Text" : "# Calculate list of external roots and return the base directory\n# we'll use for the protoc invocation.  Usually this is '.', but if\n# not, its 'external/WORKSPACE'",
        "Line" : 377,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# Propogate proto deps compilation units.",
        "Line" : 382,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# Immutable global state for this compiler run.",
        "Line" : 393,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "#print(\"transitive_units: %s\" % transitive_units)",
        "Line" : 408,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# Mutable global state to be populated by the classes.",
        "Line" : 410,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# list of string",
        "Line" : 412,
        "CharPositionInLine" : 21
      },
      "36" : {
        "Text" : "# Build a list of structs that will be processed in this compiler\n# run.",
        "Line" : 418,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "# golang-specific",
        "Line" : 452,
        "CharPositionInLine" : 29
      },
      "38" : {
        "Text" : "# Build final immutable compilation unit for rule and transitive beyond",
        "Line" : 458,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "# Run protoc",
        "Line" : 469,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# this needs to be set for cc-rules.",
        "Line" : 522,
        "CharPositionInLine" : 32
      },
      "CommentCount" : 41
    },
    "third_party/rules_protobuf/protobuf/internal/proto_language.bzl" : {
      "ObjectId" : "cf69f7a547f2319e4bddf2bbd08423b1c68bf227",
      "LastModified" : "2019-03-20T15:37:24Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "\"\"\"Compiles protobuf.\n\n\"\"\"",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "third_party/rules_protobuf/protobuf/rules.bzl" : {
      "ObjectId" : "80f6f72e70b4486f2b660a400fd93e38badd3bcc",
      "LastModified" : "2019-03-20T15:37:24Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "\"\"\"Compiles protobuf for ObjC.\n\n\"\"\"",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tink_version.bzl" : {
      "ObjectId" : "b6e0c9755277c3143128eb825f289550524ec570",
      "LastModified" : "2019-03-20T15:37:24Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "\"\"\" Version of the current release of Tink \"\"\"",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tink_version.cmake" : {
      "ObjectId" : "ac63e5538e52fa5ae8636b380b6cc53910dd1905",
      "LastModified" : "2019-03-20T15:37:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Version of the current release of Tink.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/build_defs/javac.bzl" : {
      "ObjectId" : "e706ab4d99a4f932a7fbbad165d618ea4daf0a73",
      "LastModified" : "2019-03-20T15:37:24Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "\"\"\"Build definitions for javac related operations in tink.\"\"\"",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# errorprone checks primarily related to coding style, enabled to\n# improve uniformity.",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# additional checks with occasional false positives, enabled\n# for consistent coding style.",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tools/common.bzl" : {
      "ObjectId" : "a83f768b62848c42affb74fe6a6cde1dece31045",
      "LastModified" : "2019-03-20T15:37:24Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\" Rule for simple expansion of template files. \"\"\"",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Rule for simple expansion of template files. This performs a simple\n# search over the template file for the keys in substitutions,\n# and replaces them with the corresponding values.\n#\n# Borrowed from TensorFlow (https://github.com/tensorflow/tensorflow)\n#\n# Typical usage:\n#   load(\"/tools/build_rules/template_rule\", \"expand_header_template\")\n#   template_rule(\n#       name = \"ExpandMyTemplate\",\n#       src = \"my.template\",\n#       out = \"my.txt\",\n#       substitutions = {\n#         \"$VAR1\": \"foo\",\n#         \"$VAR2\": \"bar\",\n#       }\n#   )\n#\n# Args:\n#   name: The name of the rule.\n#   template: The template file to expand\n#   out: The destination of the expanded file\n#   substitutions: A dictionary mapping strings to their substitutions",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# output_to_genfiles is required for header files.",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "tools/gen_java_test_rules.bzl" : {
      "ObjectId" : "551858f2162ac421a9e5f34f795bce96a29e5ae8",
      "LastModified" : "2019-03-20T15:37:24Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2017 Google Inc. All Rights Reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"Generate Java test rules from given test_files.\n\nInstead of having to create one test rule per test in the BUILD file, this rule\nprovides a handy way to create a bunch of test rules for the specified test\nfiles.\n\n\"\"\"",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tools/gen_maven_jar_rules.bzl" : {
      "ObjectId" : "f6b5fbcbfbf556df8a1dadd9c01c4623b9795183",
      "LastModified" : "2019-03-20T15:37:24Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\" Definition of gen_maven_jar_rules. \"\"\"",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "\"\"\"\n    Generates rules that generate Maven jars for a given package.\n\n    Args:\n      name: Given a name, this function generates 3 rules: a compiled package\n        name.jar, a source package name-src.jar and a Javadoc package\n        name-javadoc.jar.\n      deps: A combination of the deps of java_single_jar and javadoc_library\n      root_packages: See javadoc_library\n      exclude_packages: See javadoc_library\n      doctitle: See javadoc_library\n      android_api_level: See javadoc_library\n      bottom_text: See javadoc_library\n      external_javadoc_links: See javadoc_library\n    \"\"\"",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "tools/get_android_test_size.bzl" : {
      "ObjectId" : "9a58a1a24286fa7835a7a0362d830023bce29d71",
      "LastModified" : "2019-03-20T15:37:24Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"Definition of get_android_test_size.\n\n\"\"\"",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# somehow the emulators for these versions are very slow.",
        "Line" : 21,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# not running on TAP presubmit",
        "Line" : 22,
        "CharPositionInLine" : 27
      },
      "CommentCount" : 4
    },
    "tools/java_single_jar.bzl" : {
      "ObjectId" : "ce3dd20160050ee778d41666e305d25600207430",
      "LastModified" : "2019-03-20T15:37:24Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\" Definition of java_single_jar. \"\"\"",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Deal with limitation of singlejar flags: tool's default behavior is\n# \"no\", but you get that behavior only by absence of compression flags.",
        "Line" : 67,
        "CharPositionInLine" : 20
      },
      "3" : {
        "Text" : "\"\"\"\nCollects Java dependencies and jar files into a single jar\n\nArgs:\n  deps: The Java targets (including java_import and java_library) to collect\n      transitive dependencies from. Both compile-time dependencies (deps,\n      exports) and runtime dependencies (runtime_deps) are collected.\n      Resources are also collected. Native cc_library or java_wrap_cc\n      dependencies are not.\n  compress: Whether to always deflate (\"yes\"), always store (\"no\"), or pass\n      through unmodified (\"preserve\"). The default is \"preserve\", and is the\n      most efficient option -- no extra work is done to inflate or deflate.\n  source_jar: Whether to combine the source jars of input to create a single\n      output source jar.\n  root_packages: Java packages to include in generated jar.\n\nOutputs:\n  {name}.jar: A single jar containing all of the input.\n\"\"\"",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "tools/javadoc.bzl" : {
      "ObjectId" : "e7d1146b198873d6199aac703f29712b0f148a61",
      "LastModified" : "2019-03-20T15:37:24Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\" Definition of javadoc_library. \"\"\"",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "\"\"\"\nGenerates a Javadoc jar path/to/target/<name>.jar.\n\nArguments:\n  srcs: source files to process. This might contain .java files or gen_rule that\n      generates source jars.\n  deps: targets that contain references to other types referenced in Javadoc. This can be the\n      java_library/android_library target(s) for the same sources\n  root_packages: Java packages to include in generated Javadoc. Any subpackages not listed in\n      exclude_packages will be included as well\n  exclude_packages: Java packages to exclude from generated Javadoc\n  android_api_level: If Android APIs are used, the API level to compile against to generate\n      Javadoc\n  doctitle: title for Javadoc's index.html. See javadoc -doctitle\n  bottom_text: text passed to javadoc's `-bottom` flag\n  external_javadoc_links: a list of URLs that are passed to Javadoc's `-linkoffline` flag\n\"\"\"",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tools/objc.bzl" : {
      "ObjectId" : "77588b9bc104ced16f40073cff8b32bb7c5d97b0",
      "LastModified" : "2019-03-20T15:37:24Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"Compiles protobuf for ObjC.\n\nThis tool uses https://github.com/pubref/rules_protobuf.\n\"\"\"",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The actual rule which does the filtering.",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# A convenient macro to wrap the custom rule and objc_library.",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "\"\"\"\n    Compiles ObjC proto libaries in srcs into a single library.\n\n    Args:\n      name: the name of the output library\n      srcs: the list of ObjC proto libraries, which are generated using\n            objc_proto_compile in rules_protobuf.\n    \"\"\"",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# srcs = hdrs,",
        "Line" : 51,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 6
    }
  },
  "FileTypes" : {
    "CMAKE" : 18,
    "BAZEL" : 13,
    "MAVEN" : 1
  },
  "ElapsedTime" : 3010
}