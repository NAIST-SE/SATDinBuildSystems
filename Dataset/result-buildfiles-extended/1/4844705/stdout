{
  "Repository" : "4844705",
  "Revision" : "HEAD",
  "ObjectId" : "506b26791215ad8acb5f9f526f072dcec35ca8dd",
  "CommitTime" : "2019-02-28T18:37:33Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "e2e5d444644ac6f1119b04265b73d9149ca825ca",
      "LastModified" : "2017-04-08T22:51:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# vim: set noexpandtab:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Usage:\n\n# export PATH=/star/u/cmake/bin:$PATH\n\n# mkdir build; cd build\n\n# cmake .. -DCMAKE_BUILD_TYPE=Release\n\n# make\n\n#\n\n# After that you will only need to use make.\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ON value is not supported\n",
        "Line" : 23,
        "CharPositionInLine" : 40
      },
      "3" : {
        "Text" : "# this is what we have at AFS installation\n",
        "Line" : 46,
        "CharPositionInLine" : 33
      },
      "CommentCount" : 4
    },
    "FindROOT.cmake" : {
      "ObjectId" : "7e4a2afe2de439029018ea0a9aaf89ca146ef0c3",
      "LastModified" : "2014-08-21T02:53:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Finds ROOT instalation\n\n# This module sets up ROOT information\n\n# It defines:\n\n# ROOT_FOUND          If the ROOT is found\n\n# ROOT_INCLUDE_DIR    PATH to the include directory\n\n# ROOT_LIBRARIES      Most common libraries\n\n# ROOT_LIBRARY_DIR    PATH to the library directory\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(ROOT_LIBRARIES ${ROOT_LIBRARIES} -lThread -lMinuit -lHtml -lVMC -lEG -lGeom -lTreePlayer -lXMLIO -lProof)\n\n#set(ROOT_LIBRARIES ${ROOT_LIBRARIES} -lProofPlayer -lMLP -lSpectrum -lEve -lRGL -lGed -lXMLParser -lPhysics)\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Make variables changeble to the advanced user\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# function ROOT_GENERATE_DICTIONARY( dictionary\n\n#                                    header1 header2 ...\n\n#                                    LINKDEF linkdef1 ...\n\n#                                    OPTIONS opt1...)\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#---Get the list of header files-------------------------\n",
        "Line" : 80,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#---Get the list of include directories------------------\n",
        "Line" : 94,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#---Get LinkDef.h file------------------------------------\n",
        "Line" : 100,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#---call rootcint------------------------------------------\n",
        "Line" : 113,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# function REFLEX_GENERATE_DICTIONARY(dictionary\n\n#                                     header1 header2 ...\n\n#                                     SELECTION selectionfile ...\n\n#                                     OPTIONS opt1...)\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#---Get the list of header files-------------------------\n",
        "Line" : 134,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#---Get Selection file------------------------------------\n",
        "Line" : 146,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "#---Get the list of include directories------------------\n",
        "Line" : 152,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "#---Get preprocessor definitions--------------------------\n",
        "Line" : 158,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#---Nanes and others---------------------------------------\n",
        "Line" : 163,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "#set(gccxmlopts \"--gccxmlopt=\\'--gccxml-cxxflags -m64 \\'\")\n",
        "Line" : 168,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "#set(rootmapname ${dictionary}Dict.rootmap)\n\n#set(rootmapopts --rootmap=${rootmapname} --rootmap-lib=${libprefix}${dictionary}Dict)\n\n#---Check GCCXML and get path-----------------------------\n",
        "Line" : 171,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "#---Actual command----------------------------------------\n",
        "Line" : 179,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 17
    },
    "FindSqlite3.cmake" : {
      "ObjectId" : "0eccec2252e3bfadcd0eb5061219935fb1f61786",
      "LastModified" : "2014-07-07T18:56:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - find Sqlite 3\n\n# SQLITE3_INCLUDE_DIR - Where to find Sqlite 3 header files (directory)\n\n# SQLITE3_LIBRARIES - Sqlite 3 libraries\n\n# SQLITE3_LIBRARY_RELEASE - Where the release library is\n\n# SQLITE3_LIBRARY_DEBUG - Where the debug library is\n\n# SQLITE3_FOUND - Set to TRUE if we found everything (library, includes and executable)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2010 Pau Garcia i Quiles, <pgquiles@elpauer.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n\n# Generated by CModuler, a CMake Module Generator - http://gitorious.org/cmoduler\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# if the generator supports configuration types then set\n\n# optimized and debug libraries, or if the CMAKE_BUILD_TYPE has a value\n",
        "Line" : 30,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# if there are no configuration types and CMAKE_BUILD_TYPE has no value\n\n# then just use the release libraries\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "inc/CMakeLists.txt" : {
      "ObjectId" : "95c59f0df4142aab9c9cc6bd7b1d9f9df50a3498",
      "LastModified" : "2015-08-26T04:10:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# vim: set noexpandtab:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "a87ebf67747041d9b7337914724dab5950d8196f",
      "LastModified" : "2015-08-26T04:10:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# vim: set noexpandtab:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/cdev/Makefile" : {
      "ObjectId" : "b07c25b0748fead378890740dfdbff09fcf9ee90",
      "LastModified" : "2014-07-07T18:56:14Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 5,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 1317
}