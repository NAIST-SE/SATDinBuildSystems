{
  "Repository" : "6119213",
  "Revision" : "HEAD",
  "ObjectId" : "6ef379d76d11161b8bca4db9164e9e34ec05aa4a",
  "CommitTime" : "2019-04-11T19:52:03Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "e691d0727991c98571b5a3d820c2a5fdbf54364f",
      "LastModified" : "2019-01-04T18:40:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# version (e.g. for packaging)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# needed for some MSVC installations to handle glut32.lib\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# COMPILER SETTINGS (default: Release) and flags\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set output directories for libraries and executables\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# define the Klamp't library subdirectories in the SUBDIRS variable\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Get all compilation files in subdirectories\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#add all compilation files to the Klamp't library\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "##### External libraries: KrisLibrary, its dependencies, and ODE #####\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#defines KLAMPT_INCLUDE_DIRS, KLAMPT_DEFINITIONS, KLAMPT_LIBRARIES\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#show in CMake cache\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#needed for python build\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#add Klamp't onto KLAMPT_LIBRARIES, add Klampt/include onto KLAMPT_INCLUDE_DIRS\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#helper function\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#need to install Assimp, GLPK, glew dlls\n",
        "Line" : 92,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "#install to /opt/klampt-X.Y.Z\n",
        "Line" : 102,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "####### Copy headers from Cpp/* to include/Klampt/* #######\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "####### Klamp't Applications #########\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#USE_QT5_APPS not set\n",
        "Line" : 117,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "#USE_QT4_APPS not set\n",
        "Line" : 129,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "####### Klamp't Documentation #########\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Python API directory\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# uninstall target\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#install targets\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#examples and apps already added\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Needs to be last statement:\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Finished:\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 26
    },
    "CMakeModules/CPackSettings.cmake" : {
      "ObjectId" : "46316aced90703633b223f13929049050ddddd7f",
      "LastModified" : "2018-12-18T17:07:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Package building stuff - Set CPACK_GENERATOR to whatever package type\n\n# you wish to build...\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#SET(CPACK_PACKAGE_INSTALL_DIRECTORY \"Klampt ${V_MAJOR}.${V_MINOR}\")\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This must always be last statement!\n",
        "Line" : 34,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 3
    },
    "CMakeModules/CompilerSettings.cmake" : {
      "ObjectId" : "29338cf9b70405be48923c9bdb8842fb405cd316",
      "LastModified" : "2018-12-18T17:07:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# COMPILER SETTINGS (default: Release)\n\n# use \"-DCMAKE_BUILD_TYPE=Debug\" in cmake for a Debug-build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# COMPILER FLAGS\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Shared object compilation under 64bit (vtable)\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Set full rpath http://www.paraview.org/Wiki/CMake_RPATH_handling\n\n# (good to have and required with ROS)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# no prefix needed for python modules\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "CMakeModules/FindKlampt.cmake" : {
      "ObjectId" : "6d380be9b5f8196af7c17e1d1485db13d14a50e6",
      "LastModified" : "2018-12-18T21:20:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Finds Klamp't package.\n\n#If KLAMPT_ROOT is set, searches for a Klampt install there\n\n#defines \n\n# - KLAMPT_LIBRARIES_DEBUG\n\n# - KLAMPT_LIBRARIES_RELEASE\n\n# - KLAMPT_INCLUDE_DIRS\n\n# - KLAMPT_DEFINITIONS\n\n#\n\n# This will properly configure a build to include all external libraries:\n\n# KrisLibrary, its dependencies, ODE, and Klamp't #\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#this is used to pick between RELEASE and DEBUG library\n\n#Note: do not use SelectLibraryConfigurations, this clobbers KRISLIBRARY_LIBRARIES\n",
        "Line" : 32,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#do the find_package call...\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#add to dependencies\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "CMakeModules/FindODE.cmake" : {
      "ObjectId" : "7587725ac800c2b17c7748a82855decd789c607e",
      "LastModified" : "2018-12-18T17:07:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the Open Dynamics Engine library\n\n# ODE_ROOT can be provided\n\n# Once done this will define:\n\n#\n\n# ODE_FOUND - system has the ODE library\n\n# ODE_INCLUDE_DIRS - the ODE include directory (include ODE headers with <ode/headername.h>)\n\n# ODE_LIBRARIES - the ODE library\n\n# ODE_DEFINITIONS - additional definitions necessary to use ODE (usually the precision flag)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ODE has already been found and the necessary variables are cached\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#find the precision from the name of the library? Works on windows\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Find ODE\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Use PkgConfig if possible\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Find include dir\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Decide if ODE was found\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Find out extra definitions needed for ODE.\n\n# This is mostly needed for the ODE's precision selector:\n\n# ODE can be built either in single-precision (default) or double-precision mode. The app has\n\n# to be built in the same mode, otherwise things will crash.\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# If PkgConfig found anything, then use its results, otherwise use ode-config script\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Take the definitions from PkgConfig results\n",
        "Line" : 61,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# Try to use ode-config\n",
        "Line" : 65,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# Show messages\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Show the ODE precision if the definitions were detected\n",
        "Line" : 79,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 13
    },
    "CMakeModules/FindROS.cmake" : {
      "ObjectId" : "5699946fde0ceba0f011f339042bcf39242f5ab6",
      "LastModified" : "2018-12-18T17:07:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Finds ROS packages.\n\n# If successful, sets the following variables:\n\n#\n\n# ROS_VERSION: string for the found ROS version (if not already set)\n\n# ROS_INCLUDE_DIR: ROS header include path\n\n# ROS_LIBRARIES: library files to link with in order to get ROS functionality\n\n#\n\n# If ROS_VERSION is not set, it will check ros versions jade, indigo, hydro, and groovy\n\n# and configure variables for the newest version.  ROS_VERSION will also be set.\n\n#\n\n# If ROSDEPS is set, then it will add these dependencies to ROS_LIBRARIES\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMakeModules/InstallPkgConfigFile.cmake" : {
      "ObjectId" : "7c4e5859b70f715a91644e9fbbf6fb48e23ee85b",
      "LastModified" : "2018-12-18T17:07:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# A Macro to simplify creating a pkg-config file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# install_pkg_config_file(<package-name> \n\n#                              [VERSION <version>]\n\n#                              [DESCRIPTION <description>]\n\n#                              [CFLAGS <cflag> ...]\n\n#                              [LIBS <lflag> ...]\n\n#                              [REQUIRES <required-package-name> ...])\n\n# \n\n# Create and install a pkg-config .pc file to CMAKE_INSTALL_PREFIX/lib/pkgconfig\n\n#\tassuming the following install layout:\n\n#\t       libraries:   CMAKE_INSTALL_PREFIX/lib\n\n#\t       headers  :   CMAKE_INSTALL_PREFIX/include\n\n#\n\n# example:\n\n#    add_library(mylib mylib.c)\n\n#    install_pkg_config_file(mylib \n\n#\t\t\t     \tDESCRIPTION My Library\n\n#\t\t\t     \tCFLAGS\n\n#\t\t\t     \tLIBS -lmylib \n\n#\t\t\t     \tREQUIRES glib-2.0 lcm\n\n# \t\t\t     \tVERSION 0.0.1)\n\n#\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO error check\n",
        "Line" : 27,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# parse function arguments and populate pkg-config parameters\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# write the .pc file out\n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# mark the .pc file for installation to the lib/pkgconfig directory\n",
        "Line" : 76,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "CMakeModules/KlamptDependencies.cmake" : {
      "ObjectId" : "3541cfa0d27531f7bf1920c449ef7170a2320ad1",
      "LastModified" : "2018-12-18T17:07:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Produces dependencies of Klampt\n\n# Given KLAMPT_ROOT (optional)\n\n# Produces\n\n# - KLAMPT_LIBRARIES\n\n# - KLAMPT_INCLUDE_DIRS\n\n# - KLAMPT_DEFINITIONS\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#pick up stuff from KrisLibrary/CMakeModules\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#some weird windows setting regarding QT\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#this is needed for glut32.lib / glui32.lib to be found in Cpp/Dependencies\n",
        "Line" : 34,
        "CharPositionInLine" : 56
      },
      "4" : {
        "Text" : "# ODE\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#pthreads is needed -- but for some reason ODE does not report it\n",
        "Line" : 79,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "CMakeModules/LibFindMacros.cmake" : {
      "ObjectId" : "aa2143c82d2f7b0ab5b1eacb2e9c239f8e3f4178",
      "LastModified" : "2018-12-18T17:07:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Version 1.0 (2013-04-12)\n\n# Public Domain, originally written by Lasse Kärkkäinen <tronic@zi.fi>\n\n# Published at http://www.cmake.org/Wiki/CMake:How_To_Find_Libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If you improve the script, please modify the forementioned wiki page because\n\n# I no longer maintain my scripts (hosted as static files at zi.fi). Feel free\n\n# to remove this entire header if you use real version control instead.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Changelog:\n\n# 2013-04-12  Added version number (1.0) and this header, no other changes\n\n# 2009-10-08  Originally published\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Works the same as find_package, but forwards the \"REQUIRED\" and \"QUIET\" arguments\n\n# used for the current package. For this to work, the first parameter must be the\n\n# prefix of the current package, then the prefix of the new package etc, which are\n\n# passed to find_package.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# CMake developers made the UsePkgConfig system deprecated in the same release (2.6)\n\n# where they added pkg_check_modules. Consequently I need to support both in my scripts\n\n# to avoid those deprecated warnings. Here's a helper that does just that.\n\n# Works identically to pkg_check_modules, except that no checks are needed prior to use.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Do the final processing once the paths have been detected.\n\n# If include dirs are needed, ${PREFIX}_PROCESS_INCLUDES should be set to contain\n\n# all the variables, each of which contain one include directory.\n\n# Ditto for ${PREFIX}_PROCESS_LIBS and library files.\n\n# Will set ${PREFIX}_FOUND, ${PREFIX}_INCLUDE_DIRS and ${PREFIX}_LIBRARIES.\n\n# Also handles errors in case library detection was required, etc.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Skip processing if already processed during this run\n",
        "Line" : 52,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Start with the assumption that the library was found\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Process all includes and set _FOUND to false if any are missing\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Process all libraries and set _FOUND to false if any are missing\n",
        "Line" : 67,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Print message and/or exit on fatal error\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 11
    },
    "Cpp/Contact/Makefile" : {
      "ObjectId" : "7e68798e649b22374e46389135699185c8c7bcad",
      "LastModified" : "2018-12-18T17:07:21Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "Cpp/Control/Makefile" : {
      "ObjectId" : "7e68798e649b22374e46389135699185c8c7bcad",
      "LastModified" : "2018-12-18T17:07:21Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "Cpp/Dependencies/Makefile" : {
      "ObjectId" : "9d0aae3089c91c673c87c6744da5af1aadb6f019",
      "LastModified" : "2019-01-07T01:13:05Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#Uncomment this if you want to build ODE as a shared library\n\n#ODECONFIG += --enable-shared \n\n#Comment this out if you want to build ODE in single precision\n\n#(not recommended on Linux, may give reasonable performance on Windows)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#this disables ODE threading support, which causes a linking error with pthread if Klamp't is built with Boost\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#NOTE: call \"sudo make ldconfig-ode\" if you have set --enable-shared in ODECONFIG\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Cpp/Dependencies/tinyxml/Makefile" : {
      "ObjectId" : "ea10628409bce0d9629e7feff4e7406687c73f07",
      "LastModified" : "2018-12-18T17:07:21Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#****************************************************************************\n\n#\n\n# Makefile for TinyXml test.\n\n# Lee Thomason\n\n# www.grinninglizard.com\n\n#\n\n# This is a GNU make (gmake) makefile\n\n#****************************************************************************\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# DEBUG can be set to YES to include debugging info, or NO otherwise\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# PROFILE can be set to YES to include profiling info, or NO otherwise\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TINYXML_USE_STL can be used to turn on STL support. NO, then STL\n\n# will not be used. YES will include the STL files.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#****************************************************************************\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#****************************************************************************\n\n# Preprocessor directives\n\n#****************************************************************************\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#****************************************************************************\n\n# Include paths\n\n#****************************************************************************\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#INCS := -I/usr/include/g++-2 -I/usr/local/include\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#****************************************************************************\n\n# Makefile code common to all platforms\n\n#****************************************************************************\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#****************************************************************************\n\n# Targets of the build\n\n#****************************************************************************\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#****************************************************************************\n\n# Source files\n\n#****************************************************************************\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Add on the sources for libraries\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#****************************************************************************\n\n# Output\n\n#****************************************************************************\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#****************************************************************************\n\n# common rules\n\n#****************************************************************************\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Rules for compiling source files to object files\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#makedepend ${INCS} ${SRCS}\n",
        "Line" : 125,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 16
    },
    "Cpp/IO/Makefile" : {
      "ObjectId" : "7e68798e649b22374e46389135699185c8c7bcad",
      "LastModified" : "2018-12-18T17:07:21Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "Cpp/Main/CMakeLists.txt" : {
      "ObjectId" : "db2134f335745844fcefc019c3ab197bb1c29ad8",
      "LastModified" : "2018-12-18T17:07:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Make the Klamp't apps\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# COMPILER SETTINGS (default: Release) and flags\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#need to install Qt dlls\n\n#QT_BINARY_DIR and QT_PLUGINS_DIR are not defined in Qt5... this is a bit of a hack\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#need to install Qt dlls\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#GLUI GUIs\n",
        "Line" : 77,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "#command line utilities, no need for GUI\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "Cpp/Main/KlamptQt/KlamptQt.pro" : {
      "ObjectId" : "ab0a276f2b6dca5f6c5e2870f62cf672787ab9bf",
      "LastModified" : "2018-12-18T17:07:21Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "Cpp/Main/KlamptQt/common.pri" : {
      "ObjectId" : "508d915656a820162005233ee7701fa3b71d21b0",
      "LastModified" : "2018-12-18T17:07:21Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "Cpp/Main/MotorCalibrateQt/CMakeLists.txt" : {
      "ObjectId" : "4c09b32187d34f4416f5f2bc11d4fb45ca0d5011",
      "LastModified" : "2018-12-18T17:07:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Make the MotorCalibrate Qt program\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Building from within Main/[AppName] folder\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##### Qt Specific stuff ####\n\n# Configure Qt\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Define the app's UI and MOC items\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Define the app's UI and MOC items\n",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "##### Build target ####\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#used to ignore main() definition in motorcalibrate.cpp\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Cpp/Main/MotorCalibrateQt/MotorCalibrate.pro" : {
      "ObjectId" : "373cd2096e3962267903318bd9e3fb81f9e84077",
      "LastModified" : "2018-12-18T17:07:21Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2014-03-13T00:21:44\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Cpp/Main/RobotPoseQt/CMakeLists.txt" : {
      "ObjectId" : "b8bb8780492944c4b451ee05d983d66d90a71c82",
      "LastModified" : "2018-12-18T17:07:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Make the RobotPose Qt program\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Building from within Main/[AppName] folder\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##### Qt Specific stuff ####\n\n# Define the app's UI and MOC items\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Configure Qt\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##### Build target ####\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Cpp/Main/RobotPoseQt/RobotPose.pro" : {
      "ObjectId" : "c23130b4fb14e7f09fd93a38ba4136fe151cd356",
      "LastModified" : "2018-12-18T17:07:21Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2014-02-04T20:00:59\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Cpp/Main/RobotTestQt/CMakeLists.txt" : {
      "ObjectId" : "9413dd994f0458d9d20f44d4fa80dba7b2286c13",
      "LastModified" : "2018-12-18T17:07:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Make the RobotTest Qt program\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Building from within Main/[AppName] folder\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##### Qt Specific stuff ####\n\n# Configure Qt\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Define the app's UI and MOC items\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Define the app's UI and MOC items\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "##### Build target ####\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "Cpp/Main/RobotTestQt/RobotTest.pro" : {
      "ObjectId" : "65cc61a27438abb839939798ee38c1431d4cee78",
      "LastModified" : "2018-12-18T17:07:21Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2014-02-04T20:00:59\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Cpp/Main/SimTestQt/CMakeLists.txt" : {
      "ObjectId" : "49eef6866e8ea281a574751dc1fa658f6eb1bb6c",
      "LastModified" : "2018-12-18T17:07:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Make the SimTest Qt program\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Building from within Main/[AppName] folder\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##### Qt Specific stuff ####\n\n# Configure Qt\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Define the app's UI and MOC items\n",
        "Line" : 32,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Define the app's UI and MOC items\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "##### Build target ####\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "Cpp/Main/URDFtoRobQt/CMakeLists.txt" : {
      "ObjectId" : "f646ae64e5982061cb2c44a64304fc50e0cffd63",
      "LastModified" : "2018-12-18T17:07:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Make the URDFtoRob Qt program\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Building from within Main/[AppName] folder\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##### Qt Specific stuff ####\n\n# Configure Qt\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Define the app's UI and MOC items\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "##### Build target ####\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#used to ignore main() definition in urdftorob.cpp\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "Cpp/Main/URDFtoRobQt/URDFtoRob.pro" : {
      "ObjectId" : "006329e787d8c9f5baeb5c437ed23d23ed7003eb",
      "LastModified" : "2018-12-18T17:07:21Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2014-03-13T00:38:28\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Cpp/Modeling/Makefile" : {
      "ObjectId" : "7e68798e649b22374e46389135699185c8c7bcad",
      "LastModified" : "2018-12-18T17:07:21Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "Cpp/Planning/Makefile" : {
      "ObjectId" : "7e68798e649b22374e46389135699185c8c7bcad",
      "LastModified" : "2018-12-18T17:07:21Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "Cpp/Simulation/Makefile" : {
      "ObjectId" : "7e68798e649b22374e46389135699185c8c7bcad",
      "LastModified" : "2018-12-18T17:07:21Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "Cpp/View/Makefile" : {
      "ObjectId" : "7e68798e649b22374e46389135699185c8c7bcad",
      "LastModified" : "2018-12-18T17:07:21Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "Jupyter/Makefile" : {
      "ObjectId" : "64a5e8c9f45d9b3601921bcd77bc99f9e62fcd88",
      "LastModified" : "2019-01-07T01:13:05Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "Python/CMakeLists.txt" : {
      "ObjectId" : "9a1aacf7926907269e63c223fa44c80584650f4a",
      "LastModified" : "2019-01-07T01:13:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#make these dependent on all klampt module source files, Klampt, and Klampt's dependency libraries\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Python/control/klampt_catkin/src/klampt/CMakeLists.txt" : {
      "ObjectId" : "6bdaae9757128580b7454b61500223bd3cddccdf",
      "LastModified" : "2019-01-07T01:13:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Find catkin macros and libraries\n\n## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)\n\n## is used, also find other catkin packages\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## System dependencies are found with CMake's conventions\n\n# find_package(Boost REQUIRED COMPONENTS system)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Uncomment this if the package has a setup.py. This macro ensures\n\n## modules and global scripts declared therein get installed\n\n## See http://ros.org/doc/api/catkin/html/user_guide/setup_dot_py.html\n\n# catkin_python_setup()\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "################################################\n\n## Declare ROS messages, services and actions ##\n\n################################################\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## To declare and build messages, services or actions from within this\n\n## package, follow these steps:\n\n## * Let MSG_DEP_SET be the set of packages whose message types you use in\n\n##   your messages/services/actions (e.g. std_msgs, actionlib_msgs, ...).\n\n## * In the file package.xml:\n\n##   * add a build_depend and a run_depend tag for each package in MSG_DEP_SET\n\n##   * If MSG_DEP_SET isn't empty the following dependencies might have been\n\n##     pulled in transitively but can be declared for certainty nonetheless:\n\n##     * add a build_depend tag for \"message_generation\"\n\n##     * add a run_depend tag for \"message_runtime\"\n\n## * In this file (CMakeLists.txt):\n\n##   * add \"message_generation\" and every package in MSG_DEP_SET to\n\n##     find_package(catkin REQUIRED COMPONENTS ...)\n\n##   * add \"message_runtime\" and every package in MSG_DEP_SET to\n\n##     catkin_package(CATKIN_DEPENDS ...)\n\n##   * uncomment the add_*_files sections below as needed\n\n##     and list every .msg/.srv/.action file to be processed\n\n##   * uncomment the generate_messages entry below\n\n##   * add every package in MSG_DEP_SET to generate_messages(DEPENDENCIES ...)\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Generate messages in the 'msg' folder\n\n# add_message_files(\n\n#   FILES\n\n#   Message1.msg\n\n#   Message2.msg\n\n# )\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Generate services in the 'srv' folder\n\n# add_service_files(\n\n#   FILES\n\n#   Service1.srv\n\n#   Service2.srv\n\n# )\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## Generate actions in the 'action' folder\n\n# add_action_files(\n\n#   FILES\n\n#   Action1.action\n\n#   Action2.action\n\n# )\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Generate added messages and services with any dependencies listed here\n\n# generate_messages(\n\n#   DEPENDENCIES\n\n#   std_msgs\n\n# )\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n\n## The catkin_package macro generates cmake config files for your package\n\n## Declare things to be passed to dependent projects\n\n## INCLUDE_DIRS: uncomment this if you package contains header files\n\n## LIBRARIES: libraries you create in this project that dependent projects also need\n\n## CATKIN_DEPENDS: catkin_packages dependent projects also need\n\n## DEPENDS: system dependencies of this project that dependent projects also need\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#  INCLUDE_DIRS include\n\n#  LIBRARIES klampt\n\n#  CATKIN_DEPENDS rospy std_msgs\n\n#  DEPENDS system_lib\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## Specify additional locations of header files\n\n## Your package locations should be listed before other locations\n\n# include_directories(include)\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## Declare a cpp library\n\n# add_library(klampt\n\n#   src/${PROJECT_NAME}/klampt.cpp\n\n# )\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## Declare a cpp executable\n\n# add_executable(klampt_node src/klampt_node.cpp)\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "## Add cmake target dependencies of the executable/library\n\n## as an example, message headers may need to be generated before nodes\n\n# add_dependencies(klampt_node klampt_generate_messages_cpp)\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## Specify libraries to link a library or executable target against\n\n# target_link_libraries(klampt_node\n\n#   ${catkin_LIBRARIES}\n\n# )\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#############\n\n## Install ##\n\n#############\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# all install targets should use catkin DESTINATION variables\n\n# See http://ros.org/doc/api/catkin/html/adv_user_guide/variables.html\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## Mark executable scripts (Python etc.) for installation\n\n## in contrast to setup.py, you can choose the destination\n\n# install(PROGRAMS\n\n#   scripts/my_python_script\n\n#   DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## Mark executables and/or libraries for installation\n\n# install(TARGETS klampt klampt_node\n\n#   ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n\n#   LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n\n#   RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "## Mark cpp header files for installation\n\n# install(DIRECTORY include/${PROJECT_NAME}/\n\n#   DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}\n\n#   FILES_MATCHING PATTERN \"*.h\"\n\n#   PATTERN \".svn\" EXCLUDE\n\n# )\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "## Mark other files for installation (e.g. launch and bag files, etc.)\n\n# install(FILES\n\n#   # myfile1\n\n#   # myfile2\n\n#   DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}\n\n# )\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#############\n\n## Testing ##\n\n#############\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "## Add gtest based cpp test target and link libraries\n\n# catkin_add_gtest(${PROJECT_NAME}-test test/test_klampt.cpp)\n\n# if(TARGET ${PROJECT_NAME}-test)\n\n#   target_link_libraries(${PROJECT_NAME}-test ${PROJECT_NAME})\n\n# endif()\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "## Add folders to be run by python nosetests\n\n# catkin_add_nosetests(test)\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 26
    },
    "Python/klampt/Makefile" : {
      "ObjectId" : "7ce6226af66eb22af87ae3d4373f4e78d1a141fd",
      "LastModified" : "2019-01-07T01:13:05Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "fcaef0933e64ef9ca7ae71aaff3e4386f432d163",
      "LastModified" : "2019-01-07T01:13:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# compile GTest\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add local include\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# gTests for Velocity constraints\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#weird workaround to force cmake to build the test executable before running Klampt_Simulation_ODERigidObject\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    }
  },
  "FileTypes" : {
    "CMAKE" : 18,
    "QMAKE" : 6,
    "MAKEFILE" : 11
  },
  "ElapsedTime" : 4449
}