{
  "Repository" : "43304",
  "Revision" : "HEAD",
  "ObjectId" : "65c077e34fb280048254b2bc759b380856edf8cc",
  "CommitTime" : "2013-02-05T13:12:39Z",
  "Files" : {
    "3rdparty/SPMediaKeyTap/CMakeLists.txt" : {
      "ObjectId" : "9f51aa5bbfd4dabf203781595d81e286217a05f6",
      "LastModified" : "2011-05-30T10:09:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/chromaprint/CMakeLists.txt" : {
      "ObjectId" : "12452de0027fca4454de82ea27864c10908298d6",
      "LastModified" : "2012-05-27T16:30:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# 1. If the library source code has changed at all since the last update, then increment revision.\n\n# 2. If any interfaces have been added, removed, or changed since the last update, increment current, and set revision to 0.\n\n# 3. If any interfaces have been added since the last public release, then increment age.\n\n# 4. If any interfaces have been removed since the last public release, then set age to 0. \n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rdparty/chromaprint/cmake/modules/FindFFmpeg.cmake" : {
      "ObjectId" : "d29ec802b76639420e2bc3bc32cd203c9449f29f",
      "LastModified" : "2012-01-09T19:15:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate ffmpeg\n\n# This module defines\n\n# FFMPEG_LIBRARIES\n\n# FFMPEG_FOUND, if false, do not try to link to ffmpeg\n\n# FFMPEG_INCLUDE_DIR, where to find the headers\n\n#\n\n# $FFMPEG_DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$FFMPEG_DIR\n\n#\n\n# Created by Robert Osfield.\n\n# Modified by Lukas Lalinsky.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#In ffmpeg code, old version use \"#include <header.h>\" and newer use \"#include <libname/header.h>\"\n\n#In OSG ffmpeg plugin, we use \"#include <header.h>\" for compatibility with old version of ffmpeg\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#We have to search the path which contain the header.h (usefull for old version)\n\n#and search the path which contain the libname/header.h (usefull for new version)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Then we need to include ${FFMPEG_libname_INCLUDE_DIRS} (in old version case, use by ffmpeg header and osg plugin code)\n\n#                                                       (in new version case, use by ffmpeg header) \n\n#and ${FFMPEG_libname_INCLUDE_DIRS/libname}             (in new version case, use by osg plugin code)\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Macro to find header and lib directories\n\n# example: FFMPEG_FIND(AVFORMAT avformat avformat.h)\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Fink\n",
        "Line" : 36,
        "CharPositionInLine" : 14
      },
      "6" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 37,
        "CharPositionInLine" : 21
      },
      "7" : {
        "Text" : "# Blastwave\n",
        "Line" : 38,
        "CharPositionInLine" : 19
      },
      "8" : {
        "Text" : "# find stdint.h\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Fink\n",
        "Line" : 91,
        "CharPositionInLine" : 16
      },
      "10" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 92,
        "CharPositionInLine" : 23
      },
      "11" : {
        "Text" : "# Blastwave\n",
        "Line" : 93,
        "CharPositionInLine" : 21
      },
      "12" : {
        "Text" : "# not sure about the header to look for here.\n",
        "Line" : 105,
        "CharPositionInLine" : 45
      },
      "13" : {
        "Text" : "# Note we don't check FFMPEG_LIBSWSCALE_FOUND here, it's optional.\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Note we don't add FFMPEG_LIBSWSCALE_LIBRARIES here, it will be added if found later.\n",
        "Line" : 117,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "#    MESSAGE(STATUS \"Could not find FFMPEG\")\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "3rdparty/chromaprint/cmake/modules/FindGTest.cmake" : {
      "ObjectId" : "367ffae664976364dd3df522a45d430608902fc0",
      "LastModified" : "2012-01-09T19:15:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate the Google C++ Testing Framework.\n\n#\n\n# Defines the following variables:\n\n#\n\n#   GTEST_FOUND - Found the Google Testing framework\n\n#   GTEST_INCLUDE_DIRS - Include directories\n\n#\n\n# Also defines the library variables below as normal\n\n# variables.  These contain debug/optimized keywords when\n\n# a debugging library is found.\n\n#\n\n#   GTEST_BOTH_LIBRARIES - Both libgtest & libgtest-main\n\n#   GTEST_LIBRARIES - libgtest\n\n#   GTEST_MAIN_LIBRARIES - libgtest-main\n\n#\n\n# Accepts the following variables as input:\n\n#\n\n#   GTEST_ROOT - (as CMake or env. variable)\n\n#                The root directory of the gtest install prefix\n\n#\n\n#   GTEST_MSVC_SEARCH - If on MSVC, enables searching the build tree of\n\n#                       GTest if set to MD or MT (defaults: MD)\n\n#\n\n#-----------------------\n\n# Example Usage:\n\n#\n\n#    enable_testing(true)\n\n#    find_package(GTest REQUIRED)\n\n#    include_directories(${GTEST_INCLUDE_DIRS})\n\n#\n\n#    add_executable(foo foo.cc)\n\n#    target_link_libraries(foo ${GTEST_BOTH_LIBRARIES})\n\n#\n\n#    add_test(AllTestsInFoo foo)\n\n#\n\n#-----------------------\n\n#\n\n# If you would like each Google test to show up in CTest as\n\n# a test you may use the following macro.  NOTE: It WILL slow\n\n# down your tests, so be warned.\n\n#\n\n# GTEST_ADD_TESTS(executable extra_args ARGN)\n\n#    executable = The path to the test executable\n\n#    extra_args = Pass a list of extra arguments to be passed to\n\n#                 executable enclosed in quotes (or \"\" for none)\n\n#    ARGN =       A list of source files to search for tests & test\n\n#                 fixtures.\n\n#\n\n#  Example:\n\n#     set(FooTestArgs --foo 1 --bar 2)\n\n#     add_executable(FooTest FooUnitTest.cc)\n\n#     GTEST_ADD_TESTS(FooTest \"${FooTestArgs}\" FooUnitTest.cc)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2009 Kitware, Inc.\n\n# Copyright 2009 Philip Lowman <philip@yhbt.com>\n\n# Copyright 2009 Daniel Blezek <blezek@gmail.com>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n#\n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n#=============================================================================\n\n#\n\n# Thanks to Daniel Blezek <blezek@gmail.com> for the GTEST_ADD_TESTS code\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The provided /MD project files for Google Test add -md suffixes to the\n\n# library names.\n",
        "Line" : 153,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "3rdparty/chromaprint/cmake/modules/FindTaglib.cmake" : {
      "ObjectId" : "76b83ac554ecb6e2500676c1261c4836d011f713",
      "LastModified" : "2012-01-09T19:15:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the Taglib library\n\n# Once done this will define\n\n#\n\n#  TAGLIB_FOUND - system has the taglib library\n\n#  TAGLIB_CFLAGS - the taglib cflags\n\n#  TAGLIB_LIBRARIES - The libraries needed to use taglib\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, Laurent Montel, <montel@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#reset vars\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# if taglib-config has been found\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# on non-win32 we don't need to take care about WIN32_DEBUG_POSTFIX\n",
        "Line" : 60,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# 1. get all possible libnames\n",
        "Line" : 66,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# just one name\n",
        "Line" : 74,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# search the release lib\n",
        "Line" : 80,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# search the debug lib\n",
        "Line" : 86,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# both libs found\n",
        "Line" : 94,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# only release found\n",
        "Line" : 102,
        "CharPositionInLine" : 10
      },
      "11" : {
        "Text" : "# only debug (or nothing) found\n",
        "Line" : 107,
        "CharPositionInLine" : 10
      },
      "CommentCount" : 12
    },
    "3rdparty/chromaprint/src/CMakeLists.txt" : {
      "ObjectId" : "442a0c2fa08f700a6d7b095f896cd8dc0e897e6b",
      "LastModified" : "2012-01-09T19:15:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/fancytabwidget/CMakeLists.txt" : {
      "ObjectId" : "bdc7b8e283f644b4d56b389d467bb92af7c434c6",
      "LastModified" : "2012-01-09T19:15:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/google-breakpad/CMakeLists.txt" : {
      "ObjectId" : "9fd52dc2a9857ef171e6f06835a36f8ce0096cba",
      "LastModified" : "2012-01-09T19:15:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/libechonest/CMakeLists.txt" : {
      "ObjectId" : "af2fecc26b00044ecaa3c9231ec277ad2d1a44c4",
      "LastModified" : "2012-01-09T19:15:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/libmygpo-qt/CMakeLists.txt" : {
      "ObjectId" : "6fed7cd748b3087ba97e057d7b37ff8f9c58f535",
      "LastModified" : "2012-05-27T16:30:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/libprojectm/CMakeLists.txt" : {
      "ObjectId" : "e6287f176b526ebb57c9494d03d61af1c1edaeda",
      "LastModified" : "2012-05-27T16:30:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This policy was only added in cmake 2.8.4\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#ADD_DEFINITIONS(-DCMAKE_INSTALL_PREFIX=\"\\\\\\\"${CMAKE_INSTALL_PREFIX}\\\\\\\"\") \n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#set(CMAKE_INCLUDE_PATH ${CMAKE_INCLUDE_PATH};/opt/local/include;/Developer/SDKs/MACOSX10.5.sdk/usr/X11/include)\n\n#set(CMAKE_LIBRARY_PATH /opt/local/lib;/Developer/SDKs/MACOSX10.5.sdk;/Developer/SDKs/MacOSX10.5.sdk/usr/X11/lib/)\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "3rdparty/libprojectm/FindPkgConfig.cmake" : {
      "ObjectId" : "afae15cb021b201a90a44bcecc7873c0222e9de6",
      "LastModified" : "2012-05-27T16:30:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - a pkg-config module for CMake\n\n#\n\n# Usage:\n\n#   pkg_check_modules(<PREFIX> [REQUIRED] <MODULE> [<MODULE>]*)\n\n#     checks for all the given modules\n\n#\n\n#   pkg_search_module(<PREFIX> [REQUIRED] <MODULE> [<MODULE>]*)\n\n#     checks for given modules and uses the first working one\n\n#\n\n# When the 'REQUIRED' argument was set, macros will fail with an error\n\n# when module(s) could not be found\n\n#\n\n# It sets the following variables:\n\n#   PKG_CONFIG_FOUND         ... true iff pkg-config works on the system\n\n#   PKG_CONFIG_EXECUTABLE    ... pathname of the pkg-config program\n\n#   <PREFIX>_FOUND           ... set to 1 iff module(s) exist\n\n#\n\n# For the following variables two sets of values exist; first one is the\n\n# common one and has the given PREFIX. The second set contains flags\n\n# which are given out when pkgconfig was called with the '--static'\n\n# option.\n\n#   <XPREFIX>_LIBRARIES      ... only the libraries (w/o the '-l')\n\n#   <XPREFIX>_LIBRARY_DIRS   ... the paths of the libraries (w/o the '-L')\n\n#   <XPREFIX>_LDFLAGS        ... all required linker flags\n\n#   <XPREFIX>_LDFLAGS_OTHERS ... all other linker flags\n\n#   <XPREFIX>_INCLUDE_DIRS   ... the '-I' preprocessor flags (w/o the '-I')\n\n#   <XPREFIX>_CFLAGS         ... all required cflags\n\n#   <XPREFIX>_CFLAGS_OTHERS  ... the other compiler flags\n\n#\n\n#   <XPREFIX> = <PREFIX>        for common case\n\n#   <XPREFIX> = <PREFIX>_STATIC for static linking\n\n#\n\n# There are some special variables whose prefix depends on the count\n\n# of given modules. When there is only one module, <PREFIX> stays\n\n# unchanged. When there are multiple modules, the prefix will be\n\n# changed to <PREFIX>_<MODNAME>:\n\n#   <XPREFIX>_VERSION    ... version of the module\n\n#   <XPREFIX>_PREFIX     ... prefix-directory of the module\n\n#   <XPREFIX>_INCLUDEDIR ... include-dir of the module\n\n#   <XPREFIX>_LIBDIR     ... lib-dir of the module\n\n#\n\n#   <XPREFIX> = <PREFIX>  when |MODULES| == 1, else\n\n#   <XPREFIX> = <PREFIX>_<MODNAME>\n\n#\n\n# A <MODULE> parameter can have the following formats:\n\n#   {MODNAME}            ... matches any version\n\n#   {MODNAME}>={VERSION} ... at least version <VERSION> is required\n\n#   {MODNAME}={VERSION}  ... exactly version <VERSION> is required\n\n#   {MODNAME}<={VERSION} ... modules must not be newer than <VERSION>\n\n#\n\n# Examples\n\n#   pkg_check_modules (GLIB2   glib-2.0)\n\n#\n\n#   pkg_check_modules (GLIB2   glib-2.0>=2.10)\n\n#     requires at least version 2.10 of glib2 and defines e.g.\n\n#       GLIB2_VERSION=2.10.3\n\n#\n\n#   pkg_check_modules (FOO     glib-2.0>=2.10 gtk+-2.0)\n\n#     requires both glib2 and gtk2, and defines e.g.\n\n#       FOO_glib-2.0_VERSION=2.10.3\n\n#       FOO_gtk+-2.0_VERSION=2.8.20\n\n#\n\n#   pkg_check_modules (XRENDER REQUIRED xrender)\n\n#     defines e.g.:\n\n#       XRENDER_LIBRARIES=Xrender;X11\n\n#       XRENDER_STATIC_LIBRARIES=Xrender;X11;pthread;Xau;Xdmcp\n\n#\n\n#   pkg_search_module (BAR     libxml-2.0 libxml2 libxml>=2)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (C) 2006 Enrico Scholz <enrico.scholz@informatik.tu-chemnitz.de>\n\n#\n\n# Redistribution and use, with or without modification, are permitted\n\n# provided that the following conditions are met:\n\n# \n\n#    1. Redistributions must retain the above copyright notice, this\n\n#       list of conditions and the following disclaimer.\n\n#    2. The name of the author may not be used to endorse or promote\n\n#       products derived from this software without specific prior\n\n#       written permission.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n\n# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\n# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY\n\n# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\n\n# GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER\n\n# IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n\n# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n\n# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "### Common stuff ####\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Unsets the given variables\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Invokes pkgconfig, cleans up the result and sets variables\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#message(STATUS \"  ${_varname} ... ${_pkgconfig_invoke_result}\")\n",
        "Line" : 138,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Invokes pkgconfig two times; once without '--static' and once with\n\n# '--static'\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Splits given arguments into options and a package list\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "###\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# create a better addressable variable of the modules and calculate its size\n",
        "Line" : 188,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# give out status message telling checked module\n",
        "Line" : 193,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# iterate through module list and check whether they exist and match the required version\n",
        "Line" : 205,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# check whether version is given\n",
        "Line" : 209,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# handle the operands\n",
        "Line" : 220,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# create the final query which is of the format:\n\n# * --atleast-version <version> <pkg-name>\n\n# * --exact-version <version> <pkg-name>      \n\n# * --max-version <version> <pkg-name>\n\n# * --exists <pkg-name>\n",
        "Line" : 233,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# execute the query\n",
        "Line" : 252,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# evaluate result and tell failures\n",
        "Line" : 257,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# fail when requested\n",
        "Line" : 268,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# when we are here, we checked whether requested modules\n\n# exist. Now, go through them and set variables\n",
        "Line" : 273,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "# iterate through all modules again and set individual variables\n",
        "Line" : 279,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "# handle case when there is only one package required\n",
        "Line" : 281,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "# set variables which are combined for multiple modules\n",
        "Line" : 296,
        "CharPositionInLine" : 6
      },
      "22" : {
        "Text" : "###\n\n### User visible macros start here\n\n###\n",
        "Line" : 313,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "###\n",
        "Line" : 317,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# check cached value\n",
        "Line" : 319,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "###\n",
        "Line" : 328,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# check cached value\n",
        "Line" : 330,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# iterate through all modules and stop at the first working one.\n",
        "Line" : 337,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "### Local Variables:\n\n### mode: cmake\n\n### End:\n",
        "Line" : 358,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 29
    },
    "3rdparty/libprojectm/MilkdropPresetFactory/CMakeLists.txt" : {
      "ObjectId" : "2f737613bf689ba14b6afa47e175e3f50feeb3a1",
      "LastModified" : "2012-05-27T16:30:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/libprojectm/Renderer/CMakeLists.txt" : {
      "ObjectId" : "a825149577f3f2173600a541f828e8b1974cbb54",
      "LastModified" : "2012-05-27T16:30:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/qocoa/CMakeLists.txt" : {
      "ObjectId" : "92ac7ce29dcdc800da42188004eaf20f0a4e9fb9",
      "LastModified" : "2012-07-14T14:17:23Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/qocoa/Qocoa.pro" : {
      "ObjectId" : "8b325d1927033b8bda4c0646eda32c70877943b3",
      "LastModified" : "2012-06-28T09:39:43Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "3rdparty/qsqlite/CMakeLists.txt" : {
      "ObjectId" : "d6d17404225bb487356e6940217e8699a373db26",
      "LastModified" : "2012-06-28T09:39:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Source files\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Header files that have Q_OBJECT in\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "3rdparty/qtiocompressor/CMakeLists.txt" : {
      "ObjectId" : "f339daba9c41888f12fc1f7f7109f7078c9565c8",
      "LastModified" : "2012-06-28T09:39:43Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/qtsingleapplication/CMakeLists.txt" : {
      "ObjectId" : "1d78baba45377b6e0bd07690ec3bc7865284202e",
      "LastModified" : "2012-06-28T09:39:43Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/qtwin/CMakeLists.txt" : {
      "ObjectId" : "c2df87bfc07960402cd31eb9bdb3d512eff81813",
      "LastModified" : "2012-06-28T09:39:43Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/qxt/CMakeLists.txt" : {
      "ObjectId" : "73954ffc9d30a24f0c660dbb8b5e92726b1af4d2",
      "LastModified" : "2012-06-28T09:39:43Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/sha2/CMakeLists.txt" : {
      "ObjectId" : "9befb1ecdfee6753875d7dd78453d1754fc15bcd",
      "LastModified" : "2012-06-28T09:39:43Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/taglib/CMakeLists.txt" : {
      "ObjectId" : "cacd58f5423f89f13ddb3d2bb48c49c8d5a8d473",
      "LastModified" : "2012-11-20T10:36:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/taglib/taglib_config.h.cmake" : {
      "ObjectId" : "61de8365265c187ec897501704ec34aea99e2012",
      "LastModified" : "2012-10-28T00:12:18Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/* taglib_config.h. Generated by cmake from taglib_config.h.cmake */",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rdparty/tinysvcmdns/CMakeLists.txt" : {
      "ObjectId" : "1c16a138a1e36facd82cfdebaab31780c8749054",
      "LastModified" : "2013-01-18T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/tinysvcmdns/Makefile" : {
      "ObjectId" : "479575d509ea87bf5c20f7bf92fe97a2f23f3cb7",
      "LastModified" : "2013-01-18T16:15:05Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Makefile for tinysvcmdns\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#CFLAGS += -g\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMakeLists.txt" : {
      "ObjectId" : "97e6c5f2144a30f5715fdafe50b329e189095d3c",
      "LastModified" : "2013-01-26T11:18:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find Qt's lconvert binary.  Try qt's binary dir first, fall back to looking in PATH\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Google Drive support needs Taglib 1.8, but this version isn't in old Ubuntu\n\n# distros.  If the user seems to want Drive support (ie. they have sparsehash\n\n# installed and haven't disabled drive), and has an old taglib, compile our\n\n# internal one and use that instead.\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set up definitions and paths\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Don't try to use webkit if their include directories couldn't be found.\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# RC compiler\n",
        "Line" : 168,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Translations stuff\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Optional bits\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Find DBus if it's enabled\n",
        "Line" : 293,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# We can include the Qt definitions now\n",
        "Line" : 298,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Remove GLU and GL from the link line - they're not really required\n\n# and don't exist on my mingw toolchain\n",
        "Line" : 301,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# When/if upstream accepts our patches then these options can be used to link\n\n# to system installed projectM instead.\n",
        "Line" : 308,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# We compile our own qsqlite3 by default now, because in Qt 4.7 the symbols we\n\n# need from it are private.\n",
        "Line" : 320,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# When/if upstream accepts our patches then these options can be used to link\n\n# to system installed qtsingleapplication instead.\n",
        "Line" : 331,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# QtIoCompressor isn't patched, so we can use a system version if it's\n\n# available\n",
        "Line" : 344,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# When/if upstream accepts our or reimplement our patches then these options can be\n\n# used to link to system installed qxt instead.\n",
        "Line" : 354,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# We only need its header. We don't need to link to QxtCore.\n",
        "Line" : 361,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Use system libechonest if it's available\n",
        "Line" : 372,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Use system gmock if it's available\n\n# We need to look for both gmock and gtest\n",
        "Line" : 381,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Use system sha2 if it's available\n",
        "Line" : 394,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Use our 3rdparty chromaprint if a system one wasn't found\n",
        "Line" : 403,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# We have to use our own libmygpo-qt for now\n",
        "Line" : 414,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Qocoa\n",
        "Line" : 419,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Subdirectories\n",
        "Line" : 422,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Uninstall support\n",
        "Line" : 461,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Show a summary of what we have enabled\n",
        "Line" : 470,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "cmake/Deb.cmake" : {
      "ObjectId" : "f4e4e74a3f42295d3af91977713972bda687f0a5",
      "LastModified" : "2013-01-18T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/FindFFTW3.cmake" : {
      "ObjectId" : "e711dd3ab75fc0fa3b8999de5560470d55960308",
      "LastModified" : "2013-01-18T16:15:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# Try to find FFTW3  library  \n\n# (see www.fftw.org)\n\n# Once run this will define: \n\n# \n\n# FFTW3_FOUND\n\n# FFTW3_INCLUDE_DIR \n\n# FFTW3_LIBRARIES\n\n# FFTW3_LINK_DIRECTORIES\n\n#\n\n# You may set one of these options before including this file:\n\n#  FFTW3_USE_SSE2\n\n#\n\n#  TODO: _F_ versions.\n\n#\n\n# Jan Woetzel 05/2004\n\n# www.mip.informatik.uni-kiel.de\n\n# --------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#MESSAGE(\"DBG FFTW3_INCLUDE_DIR=${FFTW3_INCLUDE_DIR}\")  \n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# the lib prefix is containe din filename onf W32, unfortuantely. JW\n\n# teh \"general\" lib: \n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#MESSAGE(\"DBG FFTW3_FFTW_LIBRARY=${FFTW3_FFTW_LIBRARY}\")\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#MESSAGE(\"DBG FFTW3_FFTWF_LIBRARY=${FFTW3_FFTWF_LIBRARY}\")\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#MESSAGE(\"DBG FFTW3_FFTWF_LIBRARY=${FFTW3_FFTWL_LIBRARY}\")\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#MESSAGE(\"DBG FFTW3_FFTW_SSE2_LIBRARY=${FFTW3_FFTW_SSE2_LIBRARY}\")\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#MESSAGE(\"DBG FFTW3_FFTWF_SSE_LIBRARY=${FFTW3_FFTWF_SSE_LIBRARY}\")\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# --------------------------------\n\n# select one of the above\n\n# default: \n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# specialized: \n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# --------------------------------\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# OK, found all we need\n",
        "Line" : 112,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 12
    },
    "cmake/OptionalSource.cmake" : {
      "ObjectId" : "2b816984fecec4e8d0b0a3c729c8164186cd3055",
      "LastModified" : "2013-01-18T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/ParseArguments.cmake" : {
      "ObjectId" : "0abf43b29edca502b53d70560c2cf93d35a921d2",
      "LastModified" : "2013-01-18T16:15:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# From http://www.cmake.org/Wiki/CMakeMacroParseArguments\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Rpm.cmake" : {
      "ObjectId" : "44e50bd6e54c3f6902eac2fd9429307245b2ddf0",
      "LastModified" : "2013-01-18T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/SpotifyVersion.cmake" : {
      "ObjectId" : "eaaf9a9b0ca7d418af87205db910845bcc2b8606",
      "LastModified" : "2013-01-18T16:15:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Increment this whenever the user needs to download a new blob\n\n# Remember to upload and sign the new version of the blob.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Summary.cmake" : {
      "ObjectId" : "55e511e98798411937cb57fc735ab0c541755c79",
      "LastModified" : "2013-01-18T16:15:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create the option\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Was the option set?\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Check each of the dependencies\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# We have to do this instead of if(NOT ${arg}) so that tests may contain\n\n# \"NOT\" themselves.\n",
        "Line" : 63,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 4
    },
    "cmake/Translations.cmake" : {
      "ObjectId" : "0061be4b33be3934141df246aa6590373ee42024",
      "LastModified" : "2013-01-18T16:15:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Make relative filenames for all source files\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Generate the .pot\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Syntax is:\n\n#   add_po(sources_var po_prefix\n\n#     LANGUAGES language1 language2 ...\n\n#     DIRECTORY dir\n\n#     \n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Convert the .po files to .qm files\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Generate a qrc file for the translations\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "cmake/Version.cmake" : {
      "ObjectId" : "6dfa711cf8a5f8712828afbf4322fda5038b747b",
      "LastModified" : "2013-01-18T16:15:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Change this file when releasing a new version.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Version numbers.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#set(CLEMENTINE_VERSION_PRERELEASE rc1)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This should be set to OFF in a release branch\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Rules about version number comparison on different platforms:\n\n#   Debian:\n\n#     Two stages are repeated until there are no more characters to compare:\n\n#     one block of consecutive digits (\\d+) is compared numerically, then one\n\n#     block of consecutive NON-digits (\\D+) is compared lexigraphically,\n\n#     with the exception that ~ sorts before everything else.\n\n#\n\n#     The \"upstream version\" and \"debian revision\" are separated by the last\n\n#     dash in the version number.\n\n#\n\n#     Algorithm is in \"man deb-version\", test comparisons with\n\n#     dpkg --compare-versions.\n\n#\n\n#     These are in sorted order:\n\n#       1.0~rc1\n\n#       1.0~rc2\n\n#       1.0\n\n#       1.0-1-g044287b\n\n#       1.0-506-g044287b\n\n#       1.0.1\n\n#       1.0.2\n\n#       1.0.a\n\n#\n\n#   Rpm:\n\n#     The string is split on non-alphanumeric characters.  Numeric sections are\n\n#     compared numerically and non-numeric sections are compared lexigraphically.\n\n#     If one sections is numeric and the other sections is non-numeric, the\n\n#     numeric sections is always NEWER.\n\n#\n\n#     The \"version\" and \"release\" fields are compared with the same algorithm -\n\n#     if the versions are equal the releases are compared to determine which\n\n#     package is newer.\n\n#\n\n#     Algorithm is described in:\n\n#       http://fedoraproject.org/wiki/Packaging:NamingGuidelines#Package_Versioning\n\n#     Test comparisons with:\n\n#       import rpm\n\n#       rpm.labelCompare((epoch, version, release), (epoch, version, release))\n\n#\n\n#     These are in sorted order:\n\n#       1.0-0.rc1\n\n#       1.0-0.rc2\n\n#       1.0-1\n\n#       1.0-2.506-g044287b\n\n#       1.0.1-1\n\n#       1.0.2-1\n\n#\n\n#   Sparkle (mac) and QtSparkle (windows):\n\n#     The strings are split into sections of characters that are all of the same\n\n#     \"type\" - where a \"type\" is period, digit, or other.  Sections are then\n\n#     compared against each other - digits are compared numerically and other\n\n#     are compared lexigraphically.  When two sections are of different types,\n\n#     the numeric section is always NEWER.\n\n#\n\n#     If the common parts of both strings are equal, but one string has more\n\n#     sections, the type of the first extra section is used to determine which\n\n#     version is newer.\n\n#     If the extra section is a string, the shorter result is NEWER, otherwise\n\n#     the shorter section is OLDER.  That means that 1.0 is NEWER than 1.0rc1,\n\n#     but 1.0 is OLDER than 1.0.1.\n\n#\n\n#     See compareversions.cpp in QtSparkle.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Version numbers in Clementine:\n\n#   Deb:\n\n#     With git:    $tagname-$commitcount-g$sha1\n\n#     Without git: $major.$minor.$patch[~$prerelease]\n\n#\n\n#   Rpm:           Version                 Release\n\n#     Prerelease:  $major.$minor.$patch    0.$prerelease\n\n#     Without git: $major.$minor.$patch    1\n\n#     With git:    $tagname                2.$commitcount.g$sha1\n\n#\n\n#   QtSparkle (Windows):\n\n#     With git:    $tagname-$commitcount-g$sha1\n\n#     Without git: $major.$minor.$patch[$prerelease]\n\n#\n\n#   Mac info.plist: CFBundleVersion\n\n#     Prerelease:   4096.$major.$minor.$patch.0\n\n#     Without git:  4096.$major.$minor.$patch.1\n\n#     With git:     4096.$tagname.2.$commitcount\n\n#   The 4096. prefix is because the previous versioning scheme used svn revision\n\n#   numbers, which got up to 3000+.\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add prerelease\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add git revision\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "debian/CMakeLists.txt" : {
      "ObjectId" : "2a8693f74addad26eddc98ffcb5a5f6ba0957183",
      "LastModified" : "2013-01-18T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dist/CMakeLists.txt" : {
      "ObjectId" : "17120fafb9766ebd6159fb7647e2fd6ceb89c873",
      "LastModified" : "2013-01-18T16:15:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# windows/windres.rc is done by src/CMakeLists.txt\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ext/clementine-spotifyblob/CMakeLists.txt" : {
      "ObjectId" : "15a9c8dccc91236fe2dfe3ec7c0ea9121fe73b26",
      "LastModified" : "2013-01-18T16:15:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# macdeploy.py takes care of this on mac\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Versioned name of the blob\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "ext/clementine-tagreader/CMakeLists.txt" : {
      "ObjectId" : "463af15768df7c6abdab7a63c980d860a835f018",
      "LastModified" : "2013-01-18T16:15:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# macdeploy.py takes care of this on mac\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "ext/libclementine-common/CMakeLists.txt" : {
      "ObjectId" : "db5b4c0aa32faefa81a69a407f4c7dd24caa7dd4",
      "LastModified" : "2013-01-18T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ext/libclementine-remote/CMakeLists.txt" : {
      "ObjectId" : "f6fc7685a5588797b689482ea3622a4d2f4e96b5",
      "LastModified" : "2013-01-18T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ext/libclementine-spotifyblob/CMakeLists.txt" : {
      "ObjectId" : "7a73b14437745141ab055818aede8f3890e05002",
      "LastModified" : "2013-01-18T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ext/libclementine-tagreader/CMakeLists.txt" : {
      "ObjectId" : "f96e7e09bb6fd061ab9cc7419db646d520924d23",
      "LastModified" : "2013-01-18T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "gst/afcsrc/CMakeLists.txt" : {
      "ObjectId" : "e3884060659207f908f7684cd0b90ce3ec463926",
      "LastModified" : "2013-01-18T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "gst/moodbar/CMakeLists.txt" : {
      "ObjectId" : "dc3934b7bfe68625b08d4ae5dbfc56205a98c623",
      "LastModified" : "2013-01-18T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "72dc7e2a842e80951bd889b7347dab31a4398caf",
      "LastModified" : "2013-02-05T12:19:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Activate fast QString concatenation\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# build LANGUAGES from all existing .po files\n",
        "Line" : 754,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Visualisations\n",
        "Line" : 771,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Lastfm\n",
        "Line" : 790,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Spotify\n",
        "Line" : 819,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Platform specific - OS X\n",
        "Line" : 845,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Platform specific - Windows\n",
        "Line" : 868,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Platform specific - X11\n",
        "Line" : 877,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# DBUS and MPRIS - Linux specific\n",
        "Line" : 880,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Hack to get it to generate interfaces without namespaces - required\n\n# because otherwise org::freedesktop::UDisks and\n\n# org::freedesktop::UDisks::Device conflict.\n",
        "Line" : 884,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# MPRIS DBUS interfaces\n",
        "Line" : 889,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# MPRIS 2.0 DBUS interfaces\n",
        "Line" : 900,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# MPRIS 2.1 DBUS interfaces\n",
        "Line" : 911,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# org.freedesktop.Notifications DBUS interface\n",
        "Line" : 916,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# org.gnome.SettingsDaemon interface\n",
        "Line" : 921,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# org.freedesktop.Avahi.Server interface\n",
        "Line" : 926,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# org.freedesktop.Avahi.EntryGroup interface\n",
        "Line" : 940,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# DeviceKit DBUS interfaces\n",
        "Line" : 954,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Wiimotedev interface classes\n",
        "Line" : 964,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Libgpod device backend\n",
        "Line" : 1001,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# GIO device backend\n",
        "Line" : 1012,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# CDIO backend and device\n",
        "Line" : 1019,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# libimobiledevice backend and device\n",
        "Line" : 1029,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# mtp device\n",
        "Line" : 1048,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Windows media lister\n",
        "Line" : 1060,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Moodbar support\n",
        "Line" : 1074,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Google Drive support\n",
        "Line" : 1091,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Ubuntu One file support\n",
        "Line" : 1107,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Dropbox support\n",
        "Line" : 1123,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Skydrive support\n",
        "Line" : 1139,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Hack to add Clementine to the Unity system tray whitelist\n",
        "Line" : 1149,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Link against the qsqlite plugin on windows and mac\n",
        "Line" : 1300,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Hack: the Gold linker pays attention to the order that libraries are\n\n# specified on the link line.  -lX11 and -ldl are provided earlier in the link\n\n# command but they're actually used by libraries that appear after them, so\n\n# they end up getting ignored.  This appends them to the very end of the link\n\n# line, ensuring they're always used.\n",
        "Line" : 1317,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "###############################################################################\n",
        "Line" : 1333,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Show the console window in debug mode on Windows\n",
        "Line" : 1337,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# resource file for windows\n",
        "Line" : 1342,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# macdeploy.py relies on the blob being built first.\n",
        "Line" : 1364,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 37
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "ae7f0e0a14aac6733ab4cdca4e27786215e533ec",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Given a file foo_test.cpp, creates a target foo_test and adds it to the test target.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#add_test_file(albumcoverfetcher_test.cpp false)\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#add_test_file(albumcovermanager_test.cpp true)\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#add_test_file(cueparser_test.cpp false)\n\n#add_test_file(database_test.cpp false)\n\n#add_test_file(fileformats_test.cpp false)\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#add_test_file(librarybackend_test.cpp false)\n\n#add_test_file(librarymodel_test.cpp true)\n\n#add_test_file(m3uparser_test.cpp false)\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#add_test_file(playlist_test.cpp true)\n\n#add_test_file(plsparser_test.cpp false)\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#add_test_file(songloader_test.cpp false)\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#add_test_file(xspfparser_test.cpp false)\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#if(LINUX AND HAVE_DBUS)\n\n#  add_test_file(mpris1_test.cpp true)\n\n#endif(LINUX AND HAVE_DBUS)\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "tools/ultimate_lyrics_parser/CMakeLists.txt" : {
      "ObjectId" : "7c41e6601a51fb31481254c5864f83f2afbefd3b",
      "LastModified" : "2013-01-18T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 46,
    "CMAKESOURCE" : 1,
    "QMAKE" : 1,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 5270
}