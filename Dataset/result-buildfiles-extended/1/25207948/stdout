{
  "Repository" : "25207948",
  "Revision" : "HEAD",
  "ObjectId" : "4e45831638996f9e63ef7cf8737aac03b755debe",
  "CommitTime" : "2019-04-09T21:04:20Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "cbdea2c92ea76b33b760765a8059969d57eb4c13",
      "LastModified" : "2019-04-09T21:04:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Set the default build type if not specified\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "#Only set compiler flags if not a sub-project\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#Only build the parser, test executable and docs if not a sub-project\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "Makefile" : {
      "ObjectId" : "8adb4229f556379e905b46765217d55fce6f7a78",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#This is a simple wrapper hiding cmake from non-expert end users.\n\n#\n\n# It supports the targets:\n\n#   'make'           - builds everything (all libaries/executables)\n\n#   'make clean'     - removes generated build objects/libraries/executables etc.\n\n#   'make distclean' - will clean everything including the cmake generated build files\n\n#\n\n# All other targets (e.g. 'make tatum_test') are passed to the cmake generated makefile\n\n# and processed according to the CMakeLists.txt.\n\n#\n\n# To perform a debug build use:\n\n#   'make BUILD_TYPE=debug'\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Default build type\n\n# Possible values:\n\n#    release\n\n#    debug\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Allows users to pass parameters to cmake\n\n#  e.g. make CMAKE_PARAMS=\"-DVTR_ENABLE_SANITIZE=true\"\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# -s : Suppresss makefile output (e.g. entering/leaving directories)\n\n# --output-sync target : For parallel compilation ensure output for each target is synchronized (make version >= 4.0)\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Check for the cmake exectuable\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Show test log on failures with 'make test'\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#All targets in this make file are always out of date.\n\n# This ensures that any make target requests are forwarded to\n\n# the generated makefile\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#Build everything\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#Call the generated Makefile's clean, and then remove all cmake generated files\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#In case 'cmake .' was run in the source directory\n",
        "Line" : 53,
        "CharPositionInLine" : 36
      },
      "10" : {
        "Text" : "#Call cmake to generate the main Makefile\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#Forward any targets that are not named 'distclean' to the generated Makefile\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "cmake/modules/FindTBB.cmake" : {
      "ObjectId" : "0a1a5bb77ff2a603b808da11d23bbea883d6d1c3",
      "LastModified" : "2017-11-15T21:53:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\n\n#\n\n# Copyright (c) 2015 Justus Calvin\n\n# \n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n# \n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n# \n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# FindTBB\n\n# -------\n\n#\n\n# Find TBB include directories and libraries.\n\n#\n\n# Usage:\n\n#\n\n#  find_package(TBB [major[.minor]] [EXACT]\n\n#               [QUIET] [REQUIRED]\n\n#               [[COMPONENTS] [components...]]\n\n#               [OPTIONAL_COMPONENTS components...]) \n\n#\n\n# where the allowed components are tbbmalloc and tbb_preview. Users may modify \n\n# the behavior of this module with the following variables:\n\n#\n\n# * TBB_ROOT_DIR          - The base directory the of TBB installation.\n\n# * TBB_INCLUDE_DIR       - The directory that contains the TBB headers files.\n\n# * TBB_LIBRARY           - The directory that contains the TBB library files.\n\n# * TBB_<library>_LIBRARY - The path of the TBB the corresponding TBB library. \n\n#                           These libraries, if specified, override the \n\n#                           corresponding library search results, where <library>\n\n#                           may be tbb, tbb_debug, tbbmalloc, tbbmalloc_debug,\n\n#                           tbb_preview, or tbb_preview_debug.\n\n# * TBB_USE_DEBUG_BUILD   - The debug version of tbb libraries, if present, will\n\n#                           be used instead of the release version.\n\n#\n\n# Users may modify the behavior of this module with the following environment\n\n# variables:\n\n#\n\n# * TBB_INSTALL_DIR \n\n# * TBBROOT\n\n# * LIBRARY_PATH\n\n#\n\n# This module will set the following variables:\n\n#\n\n# * TBB_FOUND             - Set to false, or undefined, if we haven’t found, or\n\n#                           don’t want to use TBB.\n\n# * TBB_<component>_FOUND - If False, optional <component> part of TBB sytem is\n\n#                           not available.\n\n# * TBB_VERSION           - The full version string\n\n# * TBB_VERSION_MAJOR     - The major version\n\n# * TBB_VERSION_MINOR     - The minor version\n\n# * TBB_INTERFACE_VERSION - The interface version number defined in \n\n#                           tbb/tbb_stddef.h.\n\n# * TBB_<library>_LIBRARY_RELEASE - The path of the TBB release version of \n\n#                           <library>, where <library> may be tbb, tbb_debug,\n\n#                           tbbmalloc, tbbmalloc_debug, tbb_preview, or \n\n#                           tbb_preview_debug.\n\n# * TBB_<library>_LIBRARY_DEGUG - The path of the TBB release version of \n\n#                           <library>, where <library> may be tbb, tbb_debug,\n\n#                           tbbmalloc, tbbmalloc_debug, tbb_preview, or \n\n#                           tbb_preview_debug.\n\n#\n\n# The following varibles should be used to build and link with TBB:\n\n#\n\n# * TBB_INCLUDE_DIRS        - The include directory for TBB.\n\n# * TBB_LIBRARIES           - The libraries to link against to use TBB.\n\n# * TBB_LIBRARIES_RELEASE   - The release libraries to link against to use TBB.\n\n# * TBB_LIBRARIES_DEBUG     - The debug libraries to link against to use TBB.\n\n# * TBB_DEFINITIONS         - Definitions to use when compiling code that uses\n\n#                             TBB.\n\n# * TBB_DEFINITIONS_RELEASE - Definitions to use when compiling release code that\n\n#                             uses TBB.\n\n# * TBB_DEFINITIONS_DEBUG   - Definitions to use when compiling debug code that\n\n#                             uses TBB.\n\n#\n\n# This module will also create the \"tbb\" target that may be used when building\n\n# executables and libraries.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##################################\n\n# Check the build type\n\n##################################\n",
        "Line" : 97,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "##################################\n\n# Set the TBB search directories\n\n##################################\n",
        "Line" : 113,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Define search paths based on user input and environment variables\n",
        "Line" : 117,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Define the search directories based on the current platform\n",
        "Line" : 120,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Set the target architecture\n",
        "Line" : 125,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Set the TBB search library path search suffix based on the version of VC\n",
        "Line" : 132,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Add the library path search suffix for the VC independent version of TBB\n",
        "Line" : 145,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# OS X\n",
        "Line" : 149,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# TODO: Check to see which C++ library is being used by the compiler.\n",
        "Line" : 152,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# The default C++ library on OS X 10.9 and later is libc++\n",
        "Line" : 154,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# Linux\n",
        "Line" : 160,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# TODO: Check compiler version to see the suffix should be <arch>/gcc4.1 or\n\n#       <arch>/gcc4.1. For now, assume that the compiler is more recent than\n\n#       gcc 4.4.x or later.\n",
        "Line" : 163,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "##################################\n\n# Find the TBB include dir\n\n##################################\n",
        "Line" : 173,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "##################################\n\n# Set version strings\n\n##################################\n",
        "Line" : 182,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "##################################\n\n# Find TBB components\n\n##################################\n",
        "Line" : 197,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Find each component\n",
        "Line" : 207,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Search for the libraries\n",
        "Line" : 211,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "# Mark internal variables as advanced\n",
        "Line" : 238,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "##################################\n\n# Set compile flags and libraries\n\n##################################\n",
        "Line" : 246,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "##################################\n\n# Create targets\n\n##################################\n",
        "Line" : 269,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 22
    },
    "doc/CMakeLists.txt" : {
      "ObjectId" : "6bd35155a785d208b0c29e4c5d1574c308f14135",
      "LastModified" : "2017-11-15T21:53:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#find_package(Doxygen)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#if(DOXYGEN_FOUND)\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#set(doxyfile_in ${CMAKE_CURRENT_SOURCE_DIR}/doxyfile.in)\n\n#set(doxyfile ${CMAKE_CURRENT_BINARY_DIR}/doxyfile)\n",
        "Line" : 5,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#configure_file(${doxyfile_in} ${doxyfile} @ONLY)\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#add_custom_target(doc\n",
        "Line" : 10,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#COMMAND ${DOXYGEN_EXECUTABLE} ${doxyfile}\n\n#WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}\n\n#COMMENT \"Generating API Documentation with Doxygen\"\n\n#VERBATIM)\n",
        "Line" : 11,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "#else()\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#message(INFO \"Doxygen not found. Documentation will not be built\")\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#endif()\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "libtatum/CMakeLists.txt" : {
      "ObjectId" : "64fd60241cdb33aa719b759672c59ccc17755fe7",
      "LastModified" : "2019-04-09T21:04:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n#\n\n#Check for parallel execution framework support\n\n#\n\n#\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Check for Thread Building Blocks support\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n#\n\n# Determine parallel execution framework\n\n#\n\n#\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#The actual execution engine to use (based on what is available)\n",
        "Line" : 23,
        "CharPositionInLine" : 35
      },
      "4" : {
        "Text" : "#Pick the best supported execution engine\n",
        "Line" : 26,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#The user requested a specific execution engine\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#Pass\n",
        "Line" : 39,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "#Set the engine to use (it must be valid or we would have errored out)\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#\n\n#\n\n# Build files configuration\n\n#\n\n#\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#Source files for the library\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#Include directories\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\n\n#\n\n# Define the actual build targets\n\n#\n\n#\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#Define the library\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#Avoid extra 'lib' prefix\n",
        "Line" : 68,
        "CharPositionInLine" : 53
      },
      "14" : {
        "Text" : "#Export library headers\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#Setup parallel execution\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#Use the scalable memory allocator\n",
        "Line" : 79,
        "CharPositionInLine" : 52
      },
      "17" : {
        "Text" : "#Nothing to do\n",
        "Line" : 82,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 18
    },
    "libtatumparse/CMakeLists.txt" : {
      "ObjectId" : "9b19a07dadc01d545756d1ed827d00fd2f3d8c95",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Flex and Bison are used to generate the parser\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Include directories\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Find the flex and bison input files\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Make the flex and bison targets\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Apply suppression flags to the relevant files, must come after flex/bision\n\n#targets for output vars to be defined\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Treat .c as CXX\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#Suppress attribute warnings from bison header\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#Suppress warnings in Flex/Bison generated files\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#Create the library\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#Need binary dir for flex/bison generated headers\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#Avoid extra 'lib' prefix\n",
        "Line" : 56,
        "CharPositionInLine" : 58
      },
      "CommentCount" : 11
    },
    "tatum_test/CMakeLists.txt" : {
      "ObjectId" : "df76056d4eb0d345053b7a6e085f4260d0692c26",
      "LastModified" : "2017-11-15T21:53:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Compiler flags come from parent\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#\n\n# Build files configuration\n\n#\n\n#\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Source files for the demo executable (not generated)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Include directories\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Remove duplicate include directories\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# Configure intermediate files\n\n#\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n#\n\n# Define the actual build targets\n\n#\n\n#\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#Define Executable\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#Exectuable Includes\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#Executable links to the library\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#To selectively profile using callgrind:\n\n#  valgrind --tool=callgrind --collect-atstart=no --instr-atstart=no --cache-sim=yes --cacheuse=yes ./command\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 11
    },
    "tatumparse_test/CMakeLists.txt" : {
      "ObjectId" : "395e866033801302ad8acecf99ca7add49cdd603",
      "LastModified" : "2017-11-15T21:53:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 7,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 800
}