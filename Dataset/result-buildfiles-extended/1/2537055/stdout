{
  "Repository" : "2537055",
  "Revision" : "HEAD",
  "ObjectId" : "07ac36be4461b6f725ea61a55d76e8d7fe505028",
  "CommitTime" : "2019-04-16T23:22:16Z",
  "Files" : {
    "build.xml" : {
      "ObjectId" : "d1e9a3000ab720ccf11e451b337e3cd6a90e67eb",
      "LastModified" : "2019-02-20T19:32:31Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " Determine the system architecture and platform ",
        "Line" : 47,
        "CharPositionInLine" : 58
      },
      "1" : {
        "Text" : " OSID is used for Debian package builds ",
        "Line" : 53,
        "CharPositionInLine" : 50
      },
      "2" : {
        "Text" : " Determine the system library location (lib64 or lib) ",
        "Line" : 59,
        "CharPositionInLine" : 64
      },
      "3" : {
        "Text" : " Determine the system Python ",
        "Line" : 66,
        "CharPositionInLine" : 39
      },
      "4" : {
        "Text" : " Determine the system Python module location ",
        "Line" : 73,
        "CharPositionInLine" : 55
      },
      "5" : {
        "Text" : " Not sure why these are needed ",
        "Line" : 90,
        "CharPositionInLine" : 43
      },
      "6" : {
        "Text" : " Generate build properties file ",
        "Line" : 94,
        "CharPositionInLine" : 44
      },
      "7" : {
        "Text" : " RPM spec file with updated version number ",
        "Line" : 104,
        "CharPositionInLine" : 55
      },
      "8" : {
        "Text" : " Create pegasus-config ",
        "Line" : 112,
        "CharPositionInLine" : 35
      },
      "9" : {
        "Text" : " Get Git Hash if it isn't already set ",
        "Line" : 128,
        "CharPositionInLine" : 50
      },
      "10" : {
        "Text" : " doc schemas ",
        "Line" : 297,
        "CharPositionInLine" : 25
      },
      "11" : {
        "Text" : " bin ",
        "Line" : 375,
        "CharPositionInLine" : 17
      },
      "12" : {
        "Text" : " add script files to copy as necessary ",
        "Line" : 379,
        "CharPositionInLine" : 57
      },
      "13" : {
        "Text" : " lib ",
        "Line" : 391,
        "CharPositionInLine" : 17
      },
      "14" : {
        "Text" : " bin ",
        "Line" : 405,
        "CharPositionInLine" : 17
      },
      "15" : {
        "Text" : " etc ",
        "Line" : 422,
        "CharPositionInLine" : 17
      },
      "16" : {
        "Text" : " lib ",
        "Line" : 428,
        "CharPositionInLine" : 17
      },
      "17" : {
        "Text" : " share ",
        "Line" : 445,
        "CharPositionInLine" : 19
      },
      "18" : {
        "Text" : " include a copy of the worker package - this is so that the planner can include it\n         quickly in workflows running on the same system as the planner ",
        "Line" : 477,
        "CharPositionInLine" : 76
      },
      "19" : {
        "Text" : " creates the binary tarball ",
        "Line" : 496,
        "CharPositionInLine" : 42
      },
      "20" : {
        "Text" : " This target should clean everything _except_ things we want in the\n       source tarball, such as documentation. ",
        "Line" : 522,
        "CharPositionInLine" : 50
      },
      "CommentCount" : 21
    },
    "doc/docbook/Makefile" : {
      "ObjectId" : "03bfc732c9e2b02117f8912e0718a653648bdec8",
      "LastModified" : "2016-02-05T17:55:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Generated stuff\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Generated manpages\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "doc/manpages/Makefile" : {
      "ObjectId" : "749ecd9b75018a0e50d2ff41c0e3e362c6d2e0a6",
      "LastModified" : "2016-01-27T00:57:43Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0,
      "Errorlog" : "line 34:19 token recognition error at: '\"s/id=\\\"(_[^\\\"]+)\\\"/id=\\\"$$BASENAME\\1'\nline 35:80 token recognition error at: '\" $@ ; \\\\n\\trm $@.bak\\n\\nclean:\\n\\trm -f pegasus-*.xml *.1\\n\\ninstall: manpages\\n\\tmkdir -p $(datadir)/man/man1\\n\\tfor MPAGE in $(MANPAGES); do \\\\n\\t\\tcp $$MPAGE $(datadir)/man/man1/; \\\\n\\tdone\\n\\ninstall-docbook: $(XMLMANPAGES)\\n\\tfor XML in `ls *.xml`; do \\\\n\\t\\tcp $$XML ../docbook/manpage.$$XML; \\\\n\\tdone\\n\\n\u0000'\n"
    },
    "doc/schemas/monitord/Makefile" : {
      "ObjectId" : "bd4b071ee0189276435a1f0543f2ad243337251b",
      "LastModified" : "2012-06-23T01:39:46Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for monitoring event Yang schemas\n\n#\n\n# Prerequisites:\n\n# \tpyang - http://code.google.com/p/pyang/\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Schema directory is by default relative to\n\n# this directory\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Python Yang (pyang) setup\n\n# Yang should be installed by user\n\n#PYANG_HOME := $(HOME)/local\n\n#yang2dsdl := PYANG_XSLT_DIR=$(PYANG_HOME)/share/yang/xslt\t\\\n\t     PYANG_RNG_LIBDIR=$(PYANG_HOME)/share/yang/schema \\\n\t     yang2dsdl\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Pick a schema version\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Transform BP log to XML\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Validate XML\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Clean up\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "share/pegasus/examples/glite-mpi-hw-cobalt/Makefile" : {
      "ObjectId" : "38ba59dbcf502e513d578cb9736606563476aa9d",
      "LastModified" : "2016-06-29T23:33:08Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Makefile \n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "share/pegasus/examples/glite-mpi-hw/Makefile" : {
      "ObjectId" : "38ba59dbcf502e513d578cb9736606563476aa9d",
      "LastModified" : "2016-06-29T23:33:08Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Makefile \n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "share/pegasus/init/mpi-hw/Makefile" : {
      "ObjectId" : "15bf9c11680d12f2d821af2ce12c63b27227524d",
      "LastModified" : "2018-12-12T22:27:24Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Makefile \n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/externals/Makefile" : {
      "ObjectId" : "4de8603d8becd60e1aed29d00bcac343a88d4dcd",
      "LastModified" : "2019-02-22T19:39:16Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#PACKAGES+=OpenSSL\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#PACKAGES+=enum34\n\n#PACKAGES+=cffi\n\n#PACKAGES+=cryptography\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/tools/Makefile" : {
      "ObjectId" : "31ead4a6c1266ed059e08ea94d69eb18fd8396b5",
      "LastModified" : "2018-12-12T22:27:24Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/tools/pegasus-cluster/Makefile" : {
      "ObjectId" : "219c7f2d723de356786011fe432982a07e491ead",
      "LastModified" : "2016-06-29T23:33:08Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/tools/pegasus-keg/Makefile" : {
      "ObjectId" : "57a1a139950772acb94e0956a6275e3536eafbe1",
      "LastModified" : "2016-06-29T23:33:08Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Makefile \n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# MPI version\t\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/tools/pegasus-kickstart/Makefile" : {
      "ObjectId" : "d0d09a3488a3fec977605dfa92501dd808eb805b",
      "LastModified" : "2019-03-09T01:52:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/tools/pegasus-mpi-cluster/Makefile" : {
      "ObjectId" : "06fd93c4fede903339654fe151305718498b69c5",
      "LastModified" : "2016-06-29T23:33:08Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Flags for gprof\n\n#CXXFLAGS += -pg\n\n#LDFLAGS += -pg\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Flags for gperftools\n\n#CXXFLAGS += -fno-omit-frame-pointer\n\n#LDFLAGS += -lprofiler\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If you want to call fsyncdata() when a record is written to the \n\n# rescue log, then enable -DSYNC_RESCUE. If you want to enable\n\n# it when data is written to a collective I/O file, then enable\n\n# -DSYNC_IODATA. This will protect the application in the case\n\n# where the system fails, but it adds quite a lot of overhead\n\n# (typically ~10ms for most disks) per write. In the case of the\n\n# rescue log, enabling SYNC_RESCUE causes PMC to handle no more \n\n# than about 100 tasks/second. Enabling SYNC_IODATA can reduce\n\n# that even more.\n\n#CXXFLAGS += -DSYNC_IODATA -DSYNC_RESCUE\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 12,
    "ANT" : 1
  },
  "ElapsedTime" : 8284
}