{
  "Repository" : "1406852",
  "Revision" : "HEAD",
  "ObjectId" : "b190ffb4712c3d71aceb736114ca5bdc1ad95b14",
  "CommitTime" : "2018-11-05T10:28:23Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "61562fbc4f16f64d69e491175f3c45ae2ac8c7b5",
      "LastModified" : "2017-05-24T11:50:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# User-settable variables and options.\n\n#\n\n# Note that defaults for cmake builtin variables must be set before calling\n\n# project(), otherwise the cmake-provided defaults will get in first!\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# cmake >= 2.8.10 needs this for Qt5 on Windows\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Qt4 build only supported on linux\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#------------------------------------------------------------------------------\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# More handy location for intermediate build artifacts\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Find third party dependencies\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Find a library to read .las or .laz\n",
        "Line" : 69,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# laslib support\n",
        "Line" : 76,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Install directory for binaries\n\n# (It would seem sensible to avoid a bin directory on windows, but in practise\n\n# the NSIS installer expects binaries to be there.)\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Determine current displaz version\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# For better or worse, I've been tagging as v0.1 - strip off the \"v\"\n",
        "Line" : 138,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Build sources\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Create remainder of install tree\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Documentation\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Packaging, mostly just for windows at this stage.\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Ensure we can find NSIS.InstallOptions.ini.in\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Some paths need at at least one backslash to workaround NSIS bug\n",
        "Line" : 201,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# NSIS Setup\n",
        "Line" : 210,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Registry guff to set up file associations\n",
        "Line" : 215,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# cpack bug workaround: avoid installing into \"C:\\Program Files (x86)\"\n",
        "Line" : 234,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 20
    },
    "cmake/DeployQt5.cmake" : {
      "ObjectId" : "ed5ea4f7937ece345afe1fb2e691f2486b7e86c6",
      "LastModified" : "2017-05-11T14:16:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# DeployQt5\n\n# ---------\n\n#\n\n# Functions to help assemble a standalone Qt5 executable.\n\n#\n\n# A collection of CMake utility functions useful for deploying Qt5\n\n# executables.\n\n#\n\n# The following functions are provided by this module:\n\n#\n\n# ::\n\n#\n\n#    write_qt5_conf\n\n#    resolve_qt5_paths\n\n#    fixup_qt5_executable\n\n#    install_qt5_plugin_path\n\n#    install_qt5_plugin\n\n#    install_qt5_executable\n\n#\n\n# Requires CMake 2.8.9 or greater because Qt 5 does.\n\n# Also depends on BundleUtilities.cmake.\n\n#\n\n# ::\n\n#\n\n#   WRITE_QT5_CONF(<qt_conf_dir> <qt_conf_contents>)\n\n#\n\n# Writes a qt.conf file with the <qt_conf_contents> into <qt_conf_dir>.\n\n#\n\n# ::\n\n#\n\n#   RESOLVE_QT5_PATHS(<paths_var> [<executable_path>])\n\n#\n\n# Loop through <paths_var> list and if any don't exist resolve them\n\n# relative to the <executable_path> (if supplied) or the\n\n# CMAKE_INSTALL_PREFIX.\n\n#\n\n# ::\n\n#\n\n#   FIXUP_QT5_EXECUTABLE(<executable> [<qtplugins> <libs> <dirs> <plugins_dir> <request_qt_conf>])\n\n#\n\n# Copies Qt plugins, writes a Qt configuration file (if needed) and\n\n# fixes up a Qt5 executable using BundleUtilities so it is standalone\n\n# and can be drag-and-drop copied to another machine as long as all of\n\n# the system libraries are compatible.\n\n#\n\n# <executable> should point to the executable to be fixed-up.\n\n#\n\n# <qtplugins> should contain a list of the names or paths of any Qt\n\n# plugins to be installed.\n\n#\n\n# <libs> will be passed to BundleUtilities and should be a list of any\n\n# already installed plugins, libraries or executables to also be\n\n# fixed-up.\n\n#\n\n# <dirs> will be passed to BundleUtilities and should contain and\n\n# directories to be searched to find library dependencies.\n\n#\n\n# <plugins_dir> allows an custom plugins directory to be used.\n\n#\n\n# <request_qt_conf> will force a qt.conf file to be written even if not\n\n# needed.\n\n#\n\n# ::\n\n#\n\n#   INSTALL_QT5_PLUGIN_PATH(plugin executable copy installed_plugin_path_var <plugins_dir> <component> <configurations>)\n\n#\n\n# Install (or copy) a resolved <plugin> to the default plugins directory\n\n# (or <plugins_dir>) relative to <executable> and store the result in\n\n# <installed_plugin_path_var>.\n\n#\n\n# If <copy> is set to TRUE then the plugins will be copied rather than\n\n# installed.  This is to allow this module to be used at CMake time\n\n# rather than install time.\n\n#\n\n# If <component> is set then anything installed will use this COMPONENT.\n\n#\n\n# ::\n\n#\n\n#   INSTALL_QT5_PLUGIN(plugin executable copy installed_plugin_path_var <plugins_dir> <component>)\n\n#\n\n# Install (or copy) an unresolved <plugin> to the default plugins\n\n# directory (or <plugins_dir>) relative to <executable> and store the\n\n# result in <installed_plugin_path_var>.  See documentation of\n\n# INSTALL_QT5_PLUGIN_PATH.\n\n#\n\n# ::\n\n#\n\n#   INSTALL_QT5_EXECUTABLE(<executable> [<qtplugins> <libs> <dirs> <plugins_dir> <request_qt_conf> <component>])\n\n#\n\n# Installs Qt plugins, writes a Qt configuration file (if needed) and\n\n# fixes up a Qt5 executable using BundleUtilities so it is standalone\n\n# and can be drag-and-drop copied to another machine as long as all of\n\n# the system libraries are compatible.  The executable will be fixed-up\n\n# at install time.  <component> is the COMPONENT used for bundle fixup\n\n# and plugin installation.  See documentation of FIXUP_QT5_BUNDLE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2011 Mike McQuaid <mike@mikemcquaid.com>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The functions defined in this file depend on the fixup_bundle function\n\n# (and others) found in BundleUtilities.cmake\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Original Kitware BSD license:\n\n#\n\n# Copyright (c) 2011-2013, Kitware, Inc.\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#     * Redistributions of source code must retain the above copyright\n\n#       notice, this list of conditions and the following disclaimer.\n\n#     * Redistributions in binary form must reproduce the above copyright\n\n#       notice, this list of conditions and the following disclaimer in the\n\n#       documentation and/or other materials provided with the distribution.\n\n#     * Neither the name of the MoleQueue project nor the\n\n#       names of its contributors may be used to endorse or promote products\n\n#       derived from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n\n# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\n# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\n# DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n\n# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\n# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n\n# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\n# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 348,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/FindGLEW.cmake" : {
      "ObjectId" : "8492ca926a4757297c667fa63df33a89b5508475",
      "LastModified" : "2017-02-24T13:21:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Try to find GLEW library and include path.\n\n# Once done this will define\n\n#\n\n# GLEW_FOUND\n\n# GLEW_INCLUDE_DIR\n\n# GLEW_LIBRARY\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Prefer the static library.\n",
        "Line" : 29,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# FindGLEW.cmake original copyright notice from nvidia texture tools:\n\n#\n\n# NVIDIA Texture Tools 2.0 is licensed under the MIT license.\n\n#\n\n# Copyright (c) 2007 NVIDIA Corporation\n\n#\n\n# Permission is hereby granted, free of charge, to any person\n\n# obtaining a copy of this software and associated documentation\n\n# files (the \"Software\"), to deal in the Software without\n\n# restriction, including without limitation the rights to use,\n\n# copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the\n\n# Software is furnished to do so, subject to the following\n\n# conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be\n\n# included in all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\n# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\n# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\n# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\n# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\n# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\n# OTHER DEALINGS IN THE SOFTWARE.\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/FindIlmbase.cmake" : {
      "ObjectId" : "6a25eda594c84df96a9e60890ec7d7b8b8c6be83",
      "LastModified" : "2017-02-24T13:21:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find ilmbase\n\n#\n\n# This sets:\n\n#   - ILMBASE_FOUND:  system has ilmbase\n\n#   - ILMBASE_INCLUDE_DIRS: the ilmbase include directories\n\n#   - ILMBASE_LIBRARIES: the ilmbase libraries\n\n#   - ILMBASE_VERSION: the version string for ilmbase\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindLASlib.cmake" : {
      "ObjectId" : "d5a06c36f10517b4c5ac374b5ae62857d32dcd25",
      "LastModified" : "2017-02-24T13:21:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find LASlib\n\n#\n\n# This sets:\n\n#   - LASLIB_FOUND:  system has LASlib\n\n#   - LASLIB_INCLUDE_DIRS: the LASlib include directories\n\n#   - LASLIB_LIBRARIES: the LASlib library\n\n#   - LASLIB_VERSION: the version string for LASlib\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/GitUtils.cmake" : {
      "ObjectId" : "9f4ac84a4855c7e73e82ec7d8158eb847962d1c7",
      "LastModified" : "2017-02-24T13:21:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Call git describe with given argument list and return the output, stripped of\n\n# whitespace\n\n#\n\n# If git returns error, set outputVar to git_describe-NOTFOUND\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Crude way to force cmake rerun for any changes a developer makes to the\n\n# HEAD revision - we force cmake to add a file dependency on the internal\n\n# git log file for HEAD.  Note that this can't detect changes to git\n\n# describe output due to added tags, but it detects most other things.\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Call git describe\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "8f9f3253ee66391f9b367d8845cfebe2fcedc452",
      "LastModified" : "2017-05-24T11:50:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Sources\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Generic utility stuff\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Interprocess communication\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# GUI\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Create config.h\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# For windows, create a version of displaz which is linked as a console\n\n# program (ie, without WIN32 flag) in order have good behaviour from the\n\n# windows command line.  This version only needs to talk the IPC protocol,\n\n# so we disable the GUI code to avoid unnecessary bloat.\n\n#\n\n# To get this to be found before displaz.exe proper, we copy the trick used\n\n# in devenv, and create an executable displaz.com (this is not truly in the\n\n# old DOS .com format, but windows doesn't care about that).\n\n#\n\n# What a mess!  See issues #71, #84 and\n\n# https://blogs.msdn.microsoft.com/oldnewthing/20090101-00/?p=19643\n",
        "Line" : 146,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# Library dependencies\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# TODO this is a workaround for Ubuntu 16.04 x86-64\n",
        "Line" : 192,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# These extra libraries are needed on windows when linking against a\n\n# static Qt-4.8.? which has been built with the default options.\n",
        "Line" : 214,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Experimental dvox utility\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Tests\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Interprocess tests require special purpose executables\n",
        "Line" : 265,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 12
    },
    "src/config.h.in.cmake" : {
      "ObjectId" : "a2273dea6fecd0b34fb12c8557a910a15d59d6fe",
      "LastModified" : "2017-02-24T13:21:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#define DISPLAZ_VERSION_STRING \"@DISPLAZ_VERSION_STRING@\"\n\n#define DISPLAZ_SHADER_DIR \"@DISPLAZ_SHADER_DIR@\"\n\n#define DISPLAZ_DOC_DIR \"@DISPLAZ_DOC_DIR@\"\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "thirdparty/external/CMakeLists.txt" : {
      "ObjectId" : "f1b6200d1c23cb807130613f6197b7b6e2e27e2d",
      "LastModified" : "2017-02-24T13:21:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build system for a subset of third party libraries required by displaz.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "thirdparty/external/LAStools/CMakeLists.txt" : {
      "ObjectId" : "47bbbb742ee367d62c0f8fe58e1af5a22ab5ec9f",
      "LastModified" : "2017-02-24T13:21:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Bare bones build system for LASlib (works at least with version 131105)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Install all laszip headers - even internal ones - to make this build system\n\n# less sensitive to changes in laszip.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "thirdparty/external/LAStools/LASzip/Makefile" : {
      "ObjectId" : "d1d39393833a3261e13b8dea79b154dc72e7e374",
      "LastModified" : "2017-02-24T13:21:30Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 10,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 970
}