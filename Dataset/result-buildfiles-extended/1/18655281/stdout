{
  "Repository" : "18655281",
  "Revision" : "HEAD",
  "ObjectId" : "675ee5aaace437a22fb7c9ba9a60c2e24dff5411",
  "CommitTime" : "2019-04-16T15:01:09Z",
  "Files" : {
    "BGI/BASE/src/2bwt/Makefile" : {
      "ObjectId" : "ee508a9ed4dd49bb87b5abbaf8421efb094cad23",
      "LastModified" : "2016-05-21T19:29:34Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Copyright 2010-2012 Duane Merrill\n\n# \n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n# \n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License. \n\n#  \n\n#  For more information, see our Google Code project site: \n\n#  http://code.google.com/p/back40computing/\n\n#  \n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# Build script for project\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# detect OS\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# Gen targets\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#SM_TARGETS = $(GEN_SM20) $(GEN_SM13) $(GEN_SM10)\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# Tune arch\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# Tune size\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# Libs\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# Includes\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# Defines\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# Compiler Flags\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Compile with 32-bit device pointers by default\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Disable the ABI by default for 3.1+\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Disable nvvm for 4.1 \n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# Dependency Lists\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# g++ and its options\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# CPU & GPU version\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#2BWT-Builder 2BWT-Interface.o Sample overlap-sample\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# 2BWT-Builder 2BWT-Interface.o Sample overlap-sample\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# CPU objectives\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# cpp -> o\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "BGI/BASE/src/Makefile" : {
      "ObjectId" : "066c9e3bf8d04adb0691035b051a58d5d32de3a4",
      "LastModified" : "2016-05-21T19:29:34Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n#    Makefile\n\n#\n\n#    BASE\n\n#\n\n#    Copyright (C) 2015, The University of Hong Kong.\n\n#\n\n#    This program is free software; you can redistribute it and/or\n\n#    modify it under the terms of the GNU General Public License\n\n#    as published by the Free Software Foundation; either version 3\n\n#    of the License, or (at your option) any later version.\n\n#\n\n#    This program is distributed in the hope that it will be useful,\n\n#    but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n#    GNU General Public License for more details.\n\n#\n\n#    You should have received a copy of the GNU General Public License\n\n#    along with this program; if not, write to the Free Software\n\n#    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  03110-1301, USA.\n\n#\n\n####################################################################\n\n#\n\n#   Modification History\n\n#\n\n#   Date   : 3th Oct. 2014\n\n#   Author : Binghang LIU\n\n#\n\n####################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "BGI/SOAPdenovo2/Makefile" : {
      "ObjectId" : "88746814aa58cfc2ac436fc4a307ec36945d1777",
      "LastModified" : "2016-05-21T19:29:34Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "BGI/SOAPdenovo2/sparsePregraph/Makefile" : {
      "ObjectId" : "9c88a753ebfbef0c6d66825a2d32e0dd64284293",
      "LastModified" : "2016-05-21T19:29:34Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# /opt/blc/gcc-4.5.0/bin/gcc #gcc\n",
        "Line" : 1,
        "CharPositionInLine" : 19
      },
      "1" : {
        "Text" : "#-static #-mcrc32 -march=core2 -msse4.1 -msse4.2\n",
        "Line" : 3,
        "CharPositionInLine" : 44
      },
      "2" : {
        "Text" : "#-static #-mcrc32 -march=core2 -msse4.1 -msse4.2\n",
        "Line" : 5,
        "CharPositionInLine" : 41
      },
      "3" : {
        "Text" : "#pregraph_sparse\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#@$(CC) $(CFLAGS)$(INCLUDES) -o $(PROG)  $(OBJS) $(LIBPATH) $(LIBS) $(ENTRAFLAGS)\n",
        "Line" : 77,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "BGI/SOAPdenovo2/standardPregraph/Makefile" : {
      "ObjectId" : "971639145d407a0299c7597c6ff8490cf8ef0d0a",
      "LastModified" : "2016-05-21T19:29:34Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "####################################\n\n#\n\n# Use \"make 127mer=1\" to make 127mer version\n\n# Use \"make 63mer=1\" to make 63mer version(default)\n\n#\n\n###################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-static #-mcrc32 -march=core2 -msse4.1 -msse4.2\n",
        "Line" : 12,
        "CharPositionInLine" : 44
      },
      "2" : {
        "Text" : "#-static #-mcrc32 -march=core2 -msse4.1 -msse4.2\n",
        "Line" : 14,
        "CharPositionInLine" : 41
      },
      "3" : {
        "Text" : "#SOAPdenovo\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "BGI/soap_src/soap2/Makefile" : {
      "ObjectId" : "8a070e46271caae72da0683286ac6da98b56a541",
      "LastModified" : "2016-05-21T19:29:34Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#TARBALL_EXCLUDE = \"*.(o,gz,zip)\"\n\n#ZIP_EXCLUDE     = *.o *.gz *.zip\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#        PTHREADS = NO\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "BGI/soap_src/soap_builder/Makefile" : {
      "ObjectId" : "7125136e540b5645ca2776c7b5a8a9cf2bbb3e42",
      "LastModified" : "2016-05-21T19:29:34Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#-funroll-loops -maccumulate-outgoing-args  -fomit-frame-pointer -msse3 -O3 \n",
        "Line" : 4,
        "CharPositionInLine" : 45
      },
      "CommentCount" : 1
    },
    "BioInfo/BS-Seq/bwa-meth/paper/Makefile" : {
      "ObjectId" : "087e8c9885dafeaf494ef471c840f97ac484cb57",
      "LastModified" : "2016-05-31T12:01:29Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "c_cpp/MS/vlmcsd/openwrt/Makefile" : {
      "ObjectId" : "fd69242d5cd1e0c1c8e4e6344661859fe399d2b7",
      "LastModified" : "2016-05-31T12:01:29Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#编译准备工作,复制源码到目标目录\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[安装(编译)时执行的脚本 记得加上#!/bin/sh 没有就空着]\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "c_cpp/MS/vlmcsd/openwrt/src/CMakeLists.txt" : {
      "ObjectId" : "d5a25ae393c5fd02a188b02061a4829d51065c23",
      "LastModified" : "2016-05-31T12:01:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#SET(CMAKE_C_COMPILER \"mipsel-openwrt-linux-gcc\")\n\n#SET(CMAKE_CXX_COMPILER \"mipsel-openwrt-linux-g++\")\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "c_cpp/MS/vlmcsd/vlmcsd-svn2015-Hotbird64-source-only/Makefile" : {
      "ObjectId" : "682542e326c06787b86a5d51b6c7fbc73c69af12",
      "LastModified" : "2016-05-31T12:01:29Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Let BSD make switch to GNU make\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "c_cpp/Mac/Csu-85/Makefile" : {
      "ObjectId" : "e8b23896f153f18130f33ce4d37ce9e53c986c59",
      "LastModified" : "2017-08-21T14:30:11Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# build for the local arch only\n",
        "Line" : 19,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "#\tARCH_CFLAGS = -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# assume the toolchain supports static compilation for all request archs\n",
        "Line" : 23,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# v1 = MacOSX 10.4 and earlier, iPhone n/a\n\n# v2 = MacOSX 10.5 and later, iPhone 2.0 or later\n\n# v3 = MacOSX 10.6 and later, iPhone 2.0 or later\n\n# v4 = MacOSX 10.6 and later, iPhone 3.1 or later\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# default target for development builds\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "c_cpp/aha/Makefile" : {
      "ObjectId" : "5473ffd76251d960c9671f4bf586eb9fe1ba1d88",
      "LastModified" : "2017-08-21T14:30:11Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "c_cpp/aio-test/Makefile" : {
      "ObjectId" : "8c6481390a5a47aed40bffd5f52d319751b34b55",
      "LastModified" : "2017-08-21T14:30:11Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "c_cpp/balancedTree/Makefile" : {
      "ObjectId" : "7f0b34155bfeb67297cfbc9ab5fcd2f84ae3a1bf",
      "LastModified" : "2017-08-21T14:30:11Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "c_cpp/coverages/Makefile" : {
      "ObjectId" : "7295875257c72fda3fb7f765fa6e10fae76fccfe",
      "LastModified" : "2017-08-21T14:30:11Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "c_cpp/etc/anytag-ruanjue/anytag-2.0/Makefile" : {
      "ObjectId" : "eb2e967e920ee1a44aa497e468e2426c5c45b969",
      "LastModified" : "2017-08-21T14:30:11Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "c_cpp/etc/anytag-ruanjue/anytag-2.2/Makefile" : {
      "ObjectId" : "a42a9ae73b92c25a4bb4e5e9904e5211399ca296",
      "LastModified" : "2017-08-21T14:30:11Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "c_cpp/etc/anytag-ruanjue/anytag-2.3/Makefile" : {
      "ObjectId" : "0bd90b021d7de664520ab05386962ced769e586f",
      "LastModified" : "2017-08-21T14:30:11Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "c_cpp/etc/anytag-ruanjue/anytag-2.4/Makefile" : {
      "ObjectId" : "3f28f640cea28fa989fb6930c23b7e4a0ac00f17",
      "LastModified" : "2017-08-21T14:30:11Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "c_cpp/etc/anytag-ruanjue/anytag-2.5.2/Makefile" : {
      "ObjectId" : "bf04f58ae821c2a37aa721135c4e0459d9b5d661",
      "LastModified" : "2017-08-21T14:30:11Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "c_cpp/etc/anytag-ruanjue/anytag-3.0/Makefile" : {
      "ObjectId" : "d07533ef30f45204ca8f38416408e7be2a8d8b68",
      "LastModified" : "2017-08-21T14:30:11Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "c_cpp/etc/anytag-ruanjue/anytag-v1/Makefile" : {
      "ObjectId" : "ce4993ce5a1e5653ca62b99c7809e2032ae16d3d",
      "LastModified" : "2017-08-21T14:30:11Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "c_cpp/etc/anytag-ruanjue/anytag/Makefile" : {
      "ObjectId" : "8da6ef99dd8e3845649691690e2e314a7055728b",
      "LastModified" : "2017-08-21T14:30:11Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "c_cpp/etc/bamread/Makefile" : {
      "ObjectId" : "8856c644ab0ba0173c88ef4a6150744cafb698ca",
      "LastModified" : "2017-08-21T14:30:11Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# .C .cc .cpp .CPP .c++ .cxx .cp\n",
        "Line" : 6,
        "CharPositionInLine" : 12
      },
      "1" : {
        "Text" : "#-pedantic\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#$(patsubst $.c,%,$(SOURCES))\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#@echo [$(SOURCES)] to [$(SOURCES:.c=)].\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#@gcc $(CFLAGS) $(OLevel) $(LDFLAGS) $(ASMFLAGS) -o - $< | as -alhnd > ./asm/$@.asm\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "c_cpp/etc/calc/Makefile" : {
      "ObjectId" : "845031e6903c11fb7faf22be4bcc959d8ae1642d",
      "LastModified" : "2017-08-21T14:30:11Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#!/bin/make\n\n#\n\n# calc - arbitrary precision calculator\n\n#\n\n########################################################################\n\n# Gnu makefile: # This is a Gnu make makefile.  If your make does not  #\n\n# Gnu makefile: # understand this makefilkke format, then edit and use #\n\n# Gnu makefile: # Makefile.simple instead of this Makefile.            #\n\n########################################################################\n\n#\n\n# (Generic calc makefile)\n\n#\n\n#  NOTE: This is NOT the calc rpm Makefile.  This Makefile is a generic\n\n#\t Makefile for the people who build calc from the bzip2-ed tarball.\n\n#\t Without modification, it not assume the system has readline, ncurses\n\n#\t or less.  It compiles with gcc -O3 -g3 as well.  You can change all\n\n#\t this by modifying the Makefile variables below.\n\n#\n\n#  NOTE: You might want use the READLINE facility if  your system\n\n#\t has the GNU readline headers and libaraies:\n\n#\n\n#\t USE_READLINE= -DUSE_READLINE\n\n#\t READLINE_LIB= -lreadline\n\n#\t READLINE_EXTRAS= -lhistory -lncurses\n\n#\n\n# Copyright (C) 1999-2008  Landon Curt Noll\n\n#\n\n# Calc is open software; you can redistribute it and/or modify it under\n\n# the terms of the version 2.1 of the GNU Lesser General Public License\n\n# as published by the Free Software Foundation.\n\n#\n\n# Calc is distributed in the hope that it will be useful, but WITHOUT\n\n# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General\n\n# Public License for more details.\n\n#\n\n# A copy of version 2.1 of the GNU Lesser General Public License is\n\n# distributed with calc under the filename COPYING-LGPL.  You should have\n\n# received a copy with calc; if not, write to Free Software Foundation, Inc.\n\n# 59 Temple Place, Suite 330, Boston, MA  02111-1307, USA.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# @(#) $Id: Makefile.ship,v 30.54 2013/08/11 05:40:18 chongo Exp $\n\n# @(#) $Source: /usr/local/src/cmd/calc/RCS/Makefile.ship,v $\n\n#\n\n# Under source code control:\t1990/02/15 01:48:41\n\n# File existed as early as:\tbefore 1990\n\n#\n\n# chongo <was here> /\\oo/\\\thttp://www.isthe.com/chongo/\n\n# Share and enjoy!  :-)\thttp://www.isthe.com/chongo/tech/comp/calc/\n\n#\n\n# calculator by David I. Bell with help/mods from others\n\n# Makefile by Landon Curt Noll\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#if 0\t/* start of skip for non-Gnu makefiles */\n\n##############################################################################\n\n#-=-=-=-=-=-=-=-=- Identify the target machine, if possible -=-=-=-=-=-=-=-=-#\n\n##############################################################################\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# NOTE: You can force a target value by defining target as in:\n\n#\n\n#\tmake ...__optional_arguments_... target=value\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Try uname -s if the target was not alreadhy set on the make command line\n\n#\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#endif\t/* end of skip for non-Gnu makefiles */\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "##############################################################################\n\n#-=-=-=-=-=-=-=-=- You may want to change some values below -=-=-=-=-=-=-=-=-#\n\n##############################################################################\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Determine the type of terminal controls that you want to use\n\n#\n\n#\tvalue\t\t  meaning\n\n#\t--------\t  -------\n\n#\t(nothing)\t  let the Makefile guess at what you need\n\n#\t-DUSE_TERMIOS\t  use struct termios from <termios.h>\n\n#\t-DUSE_TERMIO\t  use struct termios from <termio.h>\n\n#\t-DUSE_SGTTY\t  use struct sgttyb from <sys/ioctl.h>\n\n#\t-DUSE_NOTHING\t  windoz system, don't use any of them\n\n#\n\n# Select TERMCONTROL= -DUSE_TERMIOS for DJGPP.\n\n#\n\n# If in doubt, leave TERMCONTROL empty.\n\n#\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#TERMCONTROL= -DUSE_TERMIOS\n\n#TERMCONTROL= -DUSE_TERMIO\n\n#TERMCONTROL= -DUSE_SGTTY\n\n#TERMCONTROL= -DUSE_WIN32\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# If your system does not have a vsprintf() function, you could be in trouble.\n\n#\n\n#\tvsprintf(string, format, ap)\n\n#\n\n# This function works like sprintf except that the 3rd arg is a va_list\n\n# strarg (or varargs) list.  Some old systems do not have vsprintf().\n\n# If you do not have vsprintf(), then calc will try sprintf() and hope\n\n# for the best.\n\n#\n\n# A simular problem occurs if your system does not have a vsnprintf()\n\n# function.  This function is like the vsprintf() function except that\n\n# there is an extra second argument that controls the maximum size\n\n# string that is produced.\n\n#\n\n# If HAVE_VSPRINTF is empty, this Makefile will run the have_stdvs.c and/or\n\n# have_varvs.c program to determine if vsprintf() is supported.\t If\n\n# HAVE_VSPRINTF is set to -DDONT_HAVE_VSPRINTF then calc will hope that\n\n# sprintf() will work.\n\n#\n\n# If in doubt, leave HAVE_VSPRINTF empty.\n\n#\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#HAVE_VSPRINTF= -DDONT_HAVE_VSPRINTF\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Determine the byte order of your machine\n\n#\n\n#    Big Endian:\tAmdahl, 68k, Pyramid, Mips, Sparc, ...\n\n#    Little Endian:\tVax, 32k, Spim (Dec Mips), i386, i486, ...\n\n#\n\n# If in doubt, leave CALC_BYTE_ORDER empty.  This Makefile will attempt to\n\n# use BYTE_ORDER in <machine/endian.h> or it will attempt to run\n\n# the endian program.  If you get syntax errors when you compile,\n\n# try forcing the value to be -DBIG_ENDIAN and run the calc regression\n\n# tests. (see the README file)\tIf the calc regression tests fail, do\n\n# a make clobber and try -DCALC_LITTLE_ENDIAN.   If that fails, ask a wizard\n\n# for help.\n\n#\n\n# Select CALC_BYTE_ORDER= -DCALC_LITTLE_ENDIAN for DJGPP.\n\n#\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#CALC_BYTE_ORDER= -DBIG_ENDIAN\n\n#CALC_BYTE_ORDER= -DLITTLE_ENDIAN\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Determine the number of bits in a long\n\n#\n\n# If in doubt, leave LONG_BITS empty.  This Makefile will run\n\n# the longbits program to determine the length.\n\n#\n\n# In order to avoid make brain damage in some systems, we avoid placing\n\n# a space after the ='s below.\n\n#\n\n# Select LONG_BITS= 32 for DJGPP.\n\n#\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#LONG_BITS= 32\n\n#LONG_BITS= 64\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Determine if we have the ANSI C fgetpos and fsetpos alternate interface\n\n# to the ftell() and fseek() (with whence set to SEEK_SET) functions.\n\n#\n\n# If HAVE_FPOS is empty, this Makefile will run the have_fpos program\n\n# to determine if there is are fgetpos and fsetpos functions.  If HAVE_FPOS\n\n# is set to -DHAVE_NO_FPOS, then calc will use ftell() and fseek().\n\n#\n\n# If in doubt, leave HAVE_FPOS empty and this Makefile will figure it out.\n\n#\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#HAVE_FPOS= -DHAVE_NO_FPOS\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Determine if we have an __pos element of a file position (fpos_t) structure.\n\n#\n\n# If HAVE_FPOS_POS is empty, this Makefile will run the have_fpos_pos program\n\n# to determine if fpos_t has a __pos structure element.  If HAVE_FPOS_POS\n\n# is set to -DHAVE_NO_FPOS_POS, then calc assume there is no __pos element.\n\n#\n\n# Select HAVE_FPOS_POS= -DHAVE_NO_FPOS_POS for DJGPP.\n\n#\n\n# If in doubt, leave HAVE_FPOS_POS empty and this Makefile will figure it out.\n\n#\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#HAVE_FPOS_POS= -DHAVE_NO_FPOS_POS\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Determine the size of the __pos element in fpos_t, if it exists.\n\n#\n\n# If FPOS_POS_BITS is empty, then the Makefile will determine the size of\n\n# the file position value of the __pos element.\n\n#\n\n# If there is no __pos element in fpos_t (say because fpos_t is a scalar),\n\n# leave FPOS_POS_BITS blank.\n\n#\n\n# If in doubt, leave FPOS_POS_BITS empty and this Makefile will figure it out.\n\n#\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#FPOS_POS_BITS= 32\n\n#FPOS_POS_BITS= 64\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Determine the size of a file position value.\n\n#\n\n# If FPOS_BITS is empty, then the Makefile will determine the size of\n\n# the file position value.\n\n#\n\n# Select FPOS_BITS= 32 for DJGPP.\n\n#\n\n# If in doubt, leave FPOS_BITS empty and this Makefile will figure it out.\n\n#\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#FPOS_BITS= 32\n\n#FPOS_BITS= 64\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Determine the size of the off_t file offset element\n\n#\n\n# If OFF_T_BITS is empty, then the Makefile will determine the size of\n\n# the file offset value.\n\n#\n\n# Select OFF_T_BITS= 32 for DJGPP.\n\n#\n\n# If in doubt, leave OFF_T_BITS empty and this Makefile will figure it out.\n\n#\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#OFF_T_BITS= 32\n\n#OFF_T_BITS= 64\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Determine the size of the dev_t device value\n\n#\n\n# If DEV_BITS is empty, then the Makefile will determine the size of\n\n# the dev_t device value\n\n#\n\n# Select DEV_BITS= 32 for DJGPP.\n\n#\n\n# If in doubt, leave DEV_BITS empty and this Makefile will figure it out.\n\n#\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#DEV_BITS= 16\n\n#DEV_BITS= 32\n\n#DEV_BITS= 64\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Determine the size of the ino_t device value\n\n#\n\n# If INODE_BITS is empty, then the Makefile will determine the size of\n\n# the ino_t inode value\n\n#\n\n# Select INODE_BITS= 32 for DJGPP.\n\n#\n\n# If in doubt, leave INODE_BITS empty and this Makefile will figure it out.\n\n#\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#INODE_BITS= 16\n\n#INODE_BITS= 32\n\n#INODE_BITS= 64\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Determine if we have an off_t which one can perform arithmetic operations,\n\n# assignments and comparisons.\tOn some systems off_t is some sort of union\n\n# or struct.\n\n#\n\n# If HAVE_OFFSCL is empty, this Makefile will run the have_offscl program\n\n# to determine if off_t is a scalar.  If HAVE_OFFSCL is set to the value\n\n# -DOFF_T_NON_SCALAR when calc will assume that off_t some sort of\n\n# union or struct which.\n\n#\n\n# If in doubt, leave HAVE_OFFSCL empty and this Makefile will figure it out.\n\n#\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#HAVE_OFFSCL= -DOFF_T_NON_SCALAR\n",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Determine if we have an fpos_t which one can perform arithmetic operations,\n\n# assignments and comparisons.\tOn some systems fpos_t is some sort of union\n\n# or struct.  Some systems do not have an fpos_t and long is as a file\n\n# offset instead.\n\n#\n\n# If HAVE_POSSCL is empty, this Makefile will run the have_offscl program\n\n# to determine if off_t is a scalar, or if there is no off_t and long\n\n# (a scalar) should be used instead.  If HAVE_POSSCL is set to the value\n\n# -DFILEPOS_NON_SCALAR when calc will assume that fpos_t exists and is\n\n# some sort of union or struct which.\n\n#\n\n# If in doubt, leave HAVE_POSSCL empty and this Makefile will figure it out.\n\n#\n",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#HAVE_POSSCL= -DFILEPOS_NON_SCALAR\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Determine if we have ANSI C const.\n\n#\n\n# If HAVE_CONST is empty, this Makefile will run the have_const program\n\n# to determine if const is supported.  If HAVE_CONST is set to -DHAVE_NO_CONST,\n\n# then calc will not use const.\n\n#\n\n# If in doubt, leave HAVE_CONST empty and this Makefile will figure it out.\n\n#\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#HAVE_CONST= -DHAVE_NO_CONST\n",
        "Line" : 284,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Determine if we have uid_t\n\n#\n\n# If HAVE_UID_T is empty, this Makefile will run the have_uid_t program\n\n# to determine if const is supported.  If HAVE_UID_T is set to -DHAVE_NO_UID_T,\n\n# then calc will treat uid_t as an unsigned short.  This only matters if\n\n# $HOME is not set and calc must look up the home directory in /etc/passwd.\n\n#\n\n# If in doubt, leave HAVE_UID_T empty and this Makefile will figure it out.\n\n#\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#HAVE_UID_T= -DHAVE_NO_UID_T\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Determine if we have memcpy(), memset() and strchr()\n\n#\n\n# If HAVE_NEWSTR is empty, this Makefile will run the have_newstr program\n\n# to determine if memcpy(), memset() and strchr() are supported.  If\n\n# HAVE_NEWSTR is set to -DHAVE_NO_NEWSTR, then calc will use bcopy() instead\n\n# of memcpy(), use bfill() instead of memset(), and use index() instead of\n\n# strchr().\n\n#\n\n# If in doubt, leave HAVE_NEWSTR empty and this Makefile will figure it out.\n\n#\n",
        "Line" : 298,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#HAVE_NEWSTR= -DHAVE_NO_NEWSTR\n",
        "Line" : 309,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Determine if we have memmove()\n\n#\n\n# If HAVE_MEMMOVE is empty, this Makefile will run the have_memmv program\n\n# to determine if memmove() is supported.  If HAVE_MEMMOVE is set to\n\n# -DHAVE_NO_MEMMOVE, then calc will use internal functions to simulate\n\n# the memory move function that does correct overlapping memory modes.\n\n#\n\n# If in doubt, leave HAVE_MEMMOVE empty and this Makefile will figure it out.\n\n#\n",
        "Line" : 311,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#HAVE_MEMMOVE= -DHAVE_NO_MEMMOVE\n",
        "Line" : 321,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Determine if we have ustat()\n\n#\n\n# If HAVE_USTAT is empty, this Makefile will run the have_memmv program\n\n# to determine if ustat() is supported.\t If HAVE_USTAT is set to\n\n# -DHAVE_NO_USTAT, then calc will use internal functions to simulate\n\n# the memory move function that does correct overlapping memory modes.\n\n#\n\n# Select HAVE_USTAT= -DHAVE_NO_USTAT for DJGPP.\n\n#\n\n# If in doubt, leave HAVE_USTAT empty and this Makefile will figure it out.\n\n#\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#HAVE_USTAT= -DHAVE_NO_USTAT\n",
        "Line" : 335,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Determine if we have getsid()\n\n#\n\n# If HAVE_GETSID is empty, this Makefile will run the have_memmv program\n\n# to determine if getsid() is supported.  If HAVE_GETSID is set to\n\n# -DHAVE_NO_GETSID, then calc will use internal functions to simulate\n\n# the memory move function that does correct overlapping memory modes.\n\n#\n\n# Select HAVE_GETSID= -DHAVE_NO_GETSID for DJGPP.\n\n#\n\n# If in doubt, leave HAVE_GETSID empty and this Makefile will figure it out.\n\n#\n",
        "Line" : 337,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "#HAVE_GETSID= -DHAVE_NO_GETSID\n",
        "Line" : 349,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Determine if we have getpgid()\n\n#\n\n# If HAVE_GETPGID is empty, this Makefile will run the have_memmv program\n\n# to determine if getpgid() is supported.  If HAVE_GETPGID is set to\n\n# -DHAVE_NO_GETPGID, then calc will use internal functions to simulate\n\n# the memory move function that does correct overlapping memory modes.\n\n#\n\n# Select HAVE_GETPGID= -DHAVE_NO_GETPGID for DJGPP.\n\n#\n\n# If in doubt, leave HAVE_GETPGID empty and this Makefile will figure it out.\n\n#\n",
        "Line" : 351,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#HAVE_GETPGID= -DHAVE_NO_GETPGID\n",
        "Line" : 363,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Determine if we have clock_gettime()\n\n#\n\n# If HAVE_GETTIME is empty, this Makefile will run the have_memmv program\n\n# to determine if clock_gettime() is supported.\t If HAVE_GETTIME is set to\n\n# -DHAVE_NO_GETTIME, then calc will use internal functions to simulate\n\n# the memory move function that does correct overlapping memory modes.\n\n#\n\n# Select HAVE_GETTIME= -DHAVE_NO_GETTIME for DJGPP.\n\n#\n\n# If in doubt, leave HAVE_GETTIME empty and this Makefile will figure it out.\n\n#\n",
        "Line" : 365,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "#HAVE_GETTIME= -DHAVE_NO_GETTIME\n",
        "Line" : 377,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Determine if we have getprid()\n\n#\n\n# If HAVE_GETPRID is empty, this Makefile will run the have_memmv program\n\n# to determine if getprid() is supported.  If HAVE_GETPRID is set to\n\n# -DHAVE_NO_GETPRID, then calc will use internal functions to simulate\n\n# the memory move function that does correct overlapping memory modes.\n\n#\n\n# Select HAVE_GETPRID= -DHAVE_NO_GETPRID for DJGPP.\n\n#\n\n# If in doubt, leave HAVE_GETPRID empty and this Makefile will figure it out.\n\n#\n",
        "Line" : 379,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "#HAVE_GETPRID= -DHAVE_NO_GETPRID\n",
        "Line" : 391,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Determine if we have the /dev/urandom\n\n#\n\n#    HAVE_URANDOM_H=\t\tlet the Makefile look /dev/urandom\n\n#    HAVE_URANDOM_H= YES\tassume that /dev/urandom exists\n\n#    HAVE_URANDOM_H= NO\t\tassume that /dev/urandom does not exist\n\n#\n\n# Select HAVE_URANDOM_H= NO for DJGPP.\n\n#\n\n# When in doubt, leave HAVE_URANDOM_H empty.\n\n#\n",
        "Line" : 393,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "#HAVE_URANDOM_H= YES\n\n#HAVE_URANDOM_H= NO\n",
        "Line" : 404,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# Determine if we have getrusage()\n\n#\n\n# If HAVE_GETRUSAGE is empty, this Makefile will run the have_memmv program\n\n# to determine if getrusage() is supported.  If HAVE_GETRUSAGE is set to\n\n# -DHAVE_NO_GETRUSAGE, then calc will use internal functions to simulate\n\n# the memory move function that does correct overlapping memory modes.\n\n#\n\n# If in doubt, leave HAVE_GETRUSAGE empty and this Makefile will figure it out.\n\n#\n",
        "Line" : 407,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "#HAVE_GETRUSAGE= -DHAVE_NO_GETRUSAGE\n",
        "Line" : 417,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# Determine if we have strdup()\n\n#\n\n# If HAVE_STRDUP is empty, this Makefile will run the have_memmv program\n\n# to determine if strdup() is supported.  If HAVE_STRDUP is set to\n\n# -DHAVE_NO_STRDUP, then calc will use internal functions to simulate\n\n# the memory move function that does correct overlapping memory modes.\n\n#\n\n# If in doubt, leave HAVE_STRDUP empty and this Makefile will figure it out.\n\n#\n",
        "Line" : 419,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "#HAVE_STRDUP= -DHAVE_NO_STRDUP\n",
        "Line" : 429,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# Some architectures such as Sparc do not allow one to access 32 bit values\n\n# that are not alligned on a 32 bit boundary.\n\n#\n\n# The Dec Alpha running OSF/1 will produce alignment error messages when\n\n# align32.c tries to figure out if alignment is needed.\t Use the\n\n# ALIGN32= -DMUST_ALIGN32 to force alignment and avoid such error messages.\n\n#\n\n# ALIGN32=\t\t     let align32.c figure out if alignment is needed\n\n# ALIGN32= -DMUST_ALIGN32    force 32 bit alignment\n\n# ALIGN32= -UMUST_ALIGN32    allow non-alignment of 32 bit accesses\n\n#\n\n# Select ALIGN32= -UMUST_ALIGN32 for DJGPP.\n\n#\n\n# When in doubt, be safe and pick ALIGN32=-DMUST_ALIGN32.\n\n#\n",
        "Line" : 431,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "#ALIGN32= -DMUST_ALIGN32\n\n#ALIGN32= -UMUST_ALIGN32\n",
        "Line" : 447,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# Determine if we have the <stdlib.h> include file.\n\n#\n\n#    HAVE_STDLIB_H=\t\tlet the Makefile look for the include file\n\n#    HAVE_STDLIB_H= YES\t\tassume that the include file exists\n\n#    HAVE_STDLIB_H= NO\t\tassume that the include file does not exist\n\n#\n\n# Select HAVE_STDLIB_H= YES for DJGPP.\n\n#\n\n# When in doubt, leave HAVE_STDLIB_H empty.\n\n#\n",
        "Line" : 450,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "#HAVE_STDLIB_H= YES\n\n#HAVE_STDLIB_H= NO\n",
        "Line" : 461,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# Determine if we have the <string.h> include file.\n\n#\n\n#    HAVE_STRING_H=\t\tlet the Makefile look for the include file\n\n#    HAVE_STRING_H= YES\t\tassume that the include file exists\n\n#    HAVE_STRING_H= NO\t\tassume that the include file does not exist\n\n#\n\n# Select HAVE_STRING_H= YES for DJGPP.\n\n#\n\n# When in doubt, leave HAVE_STRING_H empty.\n\n#\n",
        "Line" : 464,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "#HAVE_STRING_H= YES\n\n#HAVE_STRING_H= NO\n",
        "Line" : 475,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# Determine if we have the <times.h> include file.\n\n#\n\n#    HAVE_TIMES_H=\t\tlet the Makefile look for the include file\n\n#    HAVE_TIMES_H= YES\t\tassume that the include file exists\n\n#    HAVE_TIMES_H= NO\t\tassume that the include file does not exist\n\n#\n\n# Select HAVE_TIMES_H= NO for DJGPP.\n\n#\n\n# When in doubt, leave HAVE_TIMES_H empty.\n\n#\n",
        "Line" : 478,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "#HAVE_TIMES_H= YES\n\n#HAVE_TIMES_H= NO\n",
        "Line" : 489,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# Determine if we have the <sys/times.h> include file.\n\n#\n\n#    HAVE_SYS_TIMES_H=\t\tlet the Makefile look for the include file\n\n#    HAVE_SYS_TIMES_H= YES\tassume that the include file exists\n\n#    HAVE_SYS_TIMES_H= NO\tassume that the include file does not exist\n\n#\n\n# Select HAVE_SYS_TIMES_H= YES for DJGPP.\n\n#\n\n# When in doubt, leave HAVE_SYS_TIMES_H empty.\n\n#\n",
        "Line" : 492,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "#HAVE_SYS_TIMES_H= YES\n\n#HAVE_SYS_TIMES_H= NO\n",
        "Line" : 503,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# Determine if we have the <time.h> include file.\n\n#\n\n#    HAVE_TIME_H=\t\tlet the Makefile look for the include file\n\n#    HAVE_TIME_H= YES\t\tassume that the include file exists\n\n#    HAVE_TIME_H= NO\t\tassume that the include file does not exist\n\n#\n\n# Select HAVE_TIME_H= YES for DJGPP.\n\n#\n\n# When in doubt, leave HAVE_TIME_H empty.\n\n#\n",
        "Line" : 506,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "#HAVE_TIME_H= YES\n\n#HAVE_TIME_H= NO\n",
        "Line" : 517,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# Determine if we have the <sys/time.h> include file.\n\n#\n\n#    HAVE_SYS_TIME_H=\t\tlet the Makefile look for the include file\n\n#    HAVE_SYS_TIME_H= YES\tassume that the include file exists\n\n#    HAVE_SYS_TIME_H= NO\tassume that the include file does not exist\n\n#\n\n# Select HAVE_SYS_TIME_H= YES for DJGPP.\n\n#\n\n# When in doubt, leave HAVE_SYS_TIME_H empty.\n\n#\n",
        "Line" : 520,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "#HAVE_SYS_TIME_H= YES\n\n#HAVE_SYS_TIME_H= NO\n",
        "Line" : 531,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Determine if we have the <unistd.h> include file.\n\n#\n\n#    HAVE_UNISTD_H=\t\tlet the Makefile look for the include file\n\n#    HAVE_UNISTD_H= YES\t\tassume that the include file exists\n\n#    HAVE_UNISTD_H= NO\t\tassume that the include file does not exist\n\n#\n\n# Select HAVE_UNISTD_H= YES for DJGPP.\n\n#\n\n# When in doubt, leave HAVE_UNISTD_H empty.\n\n#\n",
        "Line" : 534,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "#HAVE_UNISTD_H= YES\n\n#HAVE_UNISTD_H= NO\n",
        "Line" : 545,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# Determine if our compiler allows the -Wno-implicit flag\n\n#\n\n#    HAVE_NO_IMPLICIT=\t\tlet the Makefile test the -Wno-implicit flag\n\n#    HAVE_NO_IMPLICIT= NO\tOur compiler does not have -Wno-implicit flags\n\n#    HAVE_NO_IMPLICIT= YES\tOur compiler has a -Wno-implicit flag\n\n#\n\n# Select HAVE_NO_IMPLICIT= for DJGPP.\n\n#\n",
        "Line" : 548,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# HAVE_NO_IMPLICIT= NO\n\n# HAVE_NO_IMPLICIT= YES\n",
        "Line" : 557,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# Determine if our compiler allows the unused attribute\n\n#\n\n# If HAVE_UNUSED is empty, this Makefile will run the have_unused program\n\n# to determine if the unused attribute is supported.  If HAVE_UNUSED is set to\n\n# -DHAVE_NO_UNUSED, then the unused attribute will not be used.\n\n#\n\n# Select HAVE_UNUSED= for DJGPP.\n\n#\n\n# If in doubt, leave HAVE_UNUSED empty and this Makefile will figure it out.\n\n#\n",
        "Line" : 560,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "#HAVE_UNUSED= -DHAVE_NO_UNUSED\n",
        "Line" : 571,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# System include files\n\n#\n\n# ${INCDIR}\t\twhere the system include (.h) files are kept\n\n#\n\n# For DJGPP, select:\n\n#\n\n#\tINCDIR= /dev/env/DJDIR/include\n\n#\n\n# If in doubt, set:\n\n#\n\n#\tINCDIR= /usr/include\n\n#\n",
        "Line" : 573,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "#INCDIR= /usr/local/include\n\n#INCDIR= /dev/env/DJDIR/include\n",
        "Line" : 586,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# Where to install calc realted things\n\n#\n\n# ${BINDIR}\t\twhere to install calc binary files\n\n# ${LIBDIR}\t\twhere calc link library (*.a) files are installed\n\n# ${CALC_SHAREDIR}\twhere to install calc help, .cal, startup, config files\n\n# ${CALC_INCDIR}\twhere the calc include files are installed\n\n#\n\n# NOTE: The install rule prepends installation paths with ${T}, which\n\n#\tby default is empty.  If ${T} is non-empty, then installation\n\n#\tlocations will be relative to the ${T} directory.\n\n#\n\n# NOTE: If you change LIBDIR to a non-standard location, you will need\n\n#\tto make changes to your execution environment so that executables\n\n#\twill search LIBDIR when they are resolving dynamic shared libraries.\n\n#\n\n#\tOn OS X, this means you need to export $DYLD_LIBRARY_PATH\n\n#\tto include the LIBDIR path in the value.\n\n#\n\n#\tOn Linux and BSD, this means you need to export $LD_LIBRARY_PATH\n\n#\tto include the LIBDIR path in the value.\n\n#\n\n#\tYou might be better off not changing LIBDIR in the first place.\n\n#\n\n# For DJGPP, select:\n\n#\n\n#\tBINDIR= /dev/env/DJDIR/bin\n\n#\tLIBDIR= /dev/env/DJDIR/lib\n\n#\tCALC_SHAREDIR= /dev/env/DJDIR/share/calc\n\n#\n\n# If in doubt, set:\n\n#\n\n#\tBINDIR= /usr/bin\n\n#\tLIBDIR= /usr/lib\n\n#\tCALC_SHAREDIR= /usr/share/calc\n\n#\n\n#BINDIR= /usr/local/bin\n\n#BINDIR= /dev/env/DJDIR/bin\n",
        "Line" : 590,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "#LIBDIR= /usr/local/lib\n\n#LIBDIR= /dev/env/DJDIR/lib\n",
        "Line" : 629,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "#CALC_SHAREDIR= /usr/local/lib/calc\n\n#CALC_SHAREDIR= /dev/env/DJDIR/share/calc\n",
        "Line" : 633,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "# NOTE: Do not set CALC_INCDIR to /usr/include or /usr/local/include!!!\n\n#\tAlways be sure that the CALC_INCDIR path ends in /calc to avoid\n\n#\tconflicts with system or other application include files!!!\n\n#\n\n#CALC_INCDIR= /usr/local/include/calc\n\n#CALC_INCDIR= /dev/env/DJDIR/include/calc\n",
        "Line" : 637,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# By default, these values are based CALC_SHAREDIR, INCDIR, BINDIR\n\n# ---------------------------------------------------------------\n\n# ${HELPDIR}\t\twhere the help directory is installed\n\n# ${CUSTOMCALDIR}\twhere custom *.cal files are installed\n\n# ${CUSTOMHELPDIR}\twhere custom help files are installed\n\n# ${CUSTOMINCDIR}\twhere custom .h files are installed\n\n# ${SCRIPTDIR}\t\twhere calc shell scripts are installed\n\n#\n\n# NOTE: The install rule prepends installation paths with ${T}, which\n\n#\tby default is empty.  If ${T} is non-empty, then installation\n\n#\tlocations will be relative to the ${T} directory.\n\n#\n\n# If in doubt, set:\n\n#\n\n#\tHELPDIR= ${CALC_SHAREDIR}/help\n\n#\tCALC_INCDIR= ${INCDIR}/calc\n\n#\tCUSTOMCALDIR= ${CALC_SHAREDIR}/custom\n\n#\tCUSTOMHELPDIR= ${CALC_SHAREDIR}/custhelp\n\n#\tCUSTOMINCDIR= ${CALC_INCDIR}/custom\n\n#\tSCRIPTDIR= ${BINDIR}/cscript\n\n#\n",
        "Line" : 645,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# T - top level directory under which calc will be installed\n\n#\n\n# The calc install is performed under ${T}, the calc build is\n\n# performed under /.\tThe purpose for ${T} is to allow someone\n\n# to install calc somewhere other than into the system area.\n\n#\n\n# For example, if:\n\n#\n\n#     BINDIR= /usr/bin\n\n#     LIBDIR= /usr/lib\n\n#     CALC_SHAREDIR= /usr/share/calc\n\n#\n\n# and if:\n\n#\n\n#     T= /var/tmp/testing\n\n#\n\n# Then the installation locations will be:\n\n#\n\n#     calc binary files:\t/var/tmp/testing/usr/bin\n\n#     calc link library:\t/var/tmp/testing/usr/lib\n\n#     calc help, .cal ...:\t/var/tmp/testing/usr/share/calc\n\n#     ... etc ...\t\t/var/tmp/testing/...\n\n#\n\n# If ${T} is empty, calc is installed under /, which is the same\n\n# top of tree for which it was built.  If ${T} is non-empty, then\n\n# calc is installed under ${T}, as if one had to chroot under\n\n# ${T} for calc to operate.\n\n#\n\n# If in doubt, use T=\n\n#\n",
        "Line" : 672,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# where man pages are installed\n\n#\n\n# Select MANDIR= /dev/env/DJDIR/man/man1 for DJGPP.\n\n#\n\n# Use MANDIR= to disable installation of the calc man (source) page.\n\n#\n\n#MANDIR=\n\n#MANDIR= /usr/local/man/man1\n\n#MANDIR= /usr/man/man1\n",
        "Line" : 704,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "#MANDIR= /dev/env/DJDIR/man/man1\n\n#MANDIR= /usr/man/u_man/man1\n\n#MANDIR= /usr/contrib/man/man1\n",
        "Line" : 714,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# where cat (formatted man) pages are installed\n\n#\n\n# Select CATDIR= /dev/env/DJDIR/man/cat1 for DJGPP.\n\n#\n\n# Use CATDIR= to disable installation of the calc cat (formatted) page.\n\n#\n",
        "Line" : 718,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "#CATDIR= /usr/local/man/cat1\n\n#CATDIR= /usr/local/catman/cat1\n\n#CATDIR= /usr/man/cat1\n\n#CATDIR= /usr/share/man/cat1\n\n#CATDIR= /dev/env/DJDIR/man/cat1\n\n#CATDIR= /var/cache/man/cat1\n\n#CATDIR= /usr/man/u_man/cat1\n\n#CATDIR= /usr/contrib/man/cat1\n",
        "Line" : 725,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# extension to add on to the calc man page filename\n\n#\n\n# This is ignored if CATDIR is empty.\n\n#\n",
        "Line" : 734,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "#MANEXT= l\n",
        "Line" : 739,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "# extension to add on to the calc man page filename\n\n#\n\n# This is ignored if CATDIR is empty.\n\n#\n",
        "Line" : 741,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "#CATEXT= 1.gz\n\n#CATEXT= 0\n\n#CATEXT= l\n",
        "Line" : 746,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "# how to format a man page\n\n#\n\n# If CATDIR is non-empty, then\n\n#\n\n#     If NROFF is non-empty, then\n\n#\n\n#\t  ${NROFF} ${NROFF_ARG} calc.1 > ${CATDIR}/calc.${CATEXT}\n\n#\t  \t   is used to built and install the cat page\n\n#\n\n#     else (NROFF is empty)\n\n#\n\n#\t  ${MANMAKE} calc.1 ${CATDIR}\n\n#\t  \t     is used to built and install the cat page\n\n# else\n\n#\n\n#     The cat page is not built or installed\n\n#\n\n# Select NROFF= groff for DJGPP.\n\n#\n\n# If in doubt and you don't want to fool with man pages, set MANDIR\n\n# and CATDIR to empty and ignore the NROFF, NROFF_ARG and MANMAKE\n\n# lines below.\n\n#\n\n#NROFF= nroff\n",
        "Line" : 750,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "#NROFF= groff\n",
        "Line" : 775,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "#NROFF_ARG= -mandoc\n",
        "Line" : 777,
        "CharPositionInLine" : 0
      },
      "96" : {
        "Text" : "#MANMAKE= manmake\n",
        "Line" : 779,
        "CharPositionInLine" : 0
      },
      "97" : {
        "Text" : "# By default, custom builtin functions may only be executed if calc\n\n# is given the -C option.  This is because custom builtin functions\n\n# may invoke non-standard or non-portable code.\t One may completely\n\n# disable custom builtin functions by not compiling any of code\n\n#\n\n# ALLOW_CUSTOM= -DCUSTOM\t# allow custom only if -C is given\n\n# ALLOW_CUSTOM=\t\t\t# disable custom even if -C is given\n\n#\n\n# If in doubt, use ALLOW_CUSTOM= -DCUSTOM\n\n#\n",
        "Line" : 783,
        "CharPositionInLine" : 0
      },
      "98" : {
        "Text" : "#ALLOW_CUSTOM=\n",
        "Line" : 794,
        "CharPositionInLine" : 0
      },
      "99" : {
        "Text" : "# If the $CALCPATH environment variable is not defined, then the following\n\n# path will be search for calc resource file routines.\n\n#\n\n# Select CALCPATH= .;./cal;~/.cal;${CALC_SHAREDIR};${CUSTOMCALDIR} for DJGPP.\n\n#\n\n#if 0\t/* start of skip for non-Gnu makefiles */\n",
        "Line" : 796,
        "CharPositionInLine" : 0
      },
      "100" : {
        "Text" : "#endif\t/* end of skip for non-Gnu makefiles */\n",
        "Line" : 803,
        "CharPositionInLine" : 0
      },
      "101" : {
        "Text" : "#if 0\t/* start of skip for non-Gnu makefiles */\n",
        "Line" : 805,
        "CharPositionInLine" : 0
      },
      "102" : {
        "Text" : "#endif\t/* end of skip for non-Gnu makefiles */\n",
        "Line" : 809,
        "CharPositionInLine" : 0
      },
      "103" : {
        "Text" : "# If the $CALCRC environment variable is not defined, then the following\n\n# path will be search for calc resource files.\n\n#\n\n# Select CALCRC= ${CALC_SHAREDIR}/startup;~/.calcrc;./.calcinit for DJGPP.\n\n#\n",
        "Line" : 811,
        "CharPositionInLine" : 0
      },
      "104" : {
        "Text" : "#CALCRC= ${CALC_SHAREDIR}/startup;~/.calcrc;./.calcinit\n",
        "Line" : 817,
        "CharPositionInLine" : 0
      },
      "105" : {
        "Text" : "# Determine of the GNU-readline facility will be used instead of the\n\n# built-in calc binding method.\n\n#\n\n# USE_READLINE=\t\t\t    Do not use GNU-readline, use calc bindings\n\n# USE_READLINE= -DUSE_READLINE\t    Use GNU-readline, do not use calc bindings\n\n#\n\n# NOTE: If you select the 'USE_READLINE= -DUSE_READLINE' mode, you must set:\n\n#\n\n#\tREADLINE_LIB\t\tThe flags needed to link in the readline\n\n#\t\t\t\tand history link libraries\n\n#\tREADLINE_EXTRAS\t\tFlags and libs needed to use the readline\n\n#\t\t\t\tand history link libraries\n\n#\tREADLINE_INCLUDE\tWhere the readline include files reside\n\n#\t\t\t\t(leave blank if they are /usr/include/readline)\n\n#\n\n# NOTE: The GNU-readline code is not shipped with calc.\t You must have\n\n#\tthe appropriate headers and link libs installed on your system in\n\n#\torder to use it.\n\n#\n\n# If in doubt, set USE_READLINE, READLINE_LIB and READLINE_INCLUDE to nothing.\n\n#\n",
        "Line" : 819,
        "CharPositionInLine" : 0
      },
      "106" : {
        "Text" : "#USE_READLINE= -DUSE_READLINE\n\n#\n",
        "Line" : 841,
        "CharPositionInLine" : 0
      },
      "107" : {
        "Text" : "#\n\n#READLINE_LIB= -lreadline\n\n#READLINE_EXTRAS= -lhistory -lncurses\n\n#\n\n#READLINE_LIB= -L/usr/gnu/lib -lreadline\n\n#READLINE_EXTRAS= -lhistory -lncurses\n\n#\n\n#READLINE_LIB= -L/usr/local/lib -lreadline\n\n#READLINE_EXTRAS= -lhistory -lncurses\n\n#\n\n# For Apple OS X: install fink from http://fink.sourceforge.net\n\n#\t\t  and then do a 'fink install readline' and then use:\n\n#\n\n#READLINE_LIB= -L/sw/lib -lreadline\n\n#READLINE_EXTRAS= -lhistory -lncurses\n\n#\n",
        "Line" : 845,
        "CharPositionInLine" : 0
      },
      "108" : {
        "Text" : "#READLINE_INCLUDE= -I/usr/gnu/include\n\n#READLINE_INCLUDE= -I/usr/local/include\n",
        "Line" : 862,
        "CharPositionInLine" : 0
      },
      "109" : {
        "Text" : "# If $PAGER is not set, use this program to display a help file\n\n#\n\n# Select CALCPAGER= less.exe -ci for DJGPP.\n\n#\n\n#CALCPAGER= more\n\n#CALCPAGER= pg\n\n#CALCPAGER= cat\n",
        "Line" : 865,
        "CharPositionInLine" : 0
      },
      "110" : {
        "Text" : "#CALCPAGER= less.exe -ci\n",
        "Line" : 873,
        "CharPositionInLine" : 0
      },
      "111" : {
        "Text" : "# Debug/Optimize options for ${CC} and ${LCC}\n\n#\n\n# Select DEBUG= -O2 -gstabs+ -DWINDOZ for DJGPP.\n\n#\n\n#DEBUG=\n\n#DEBUG= -g\n\n#DEBUG= -g3\n\n#\n\n#DEBUG= -O\n\n#DEBUG= -O -g\n\n#DEBUG= -O -g3\n\n#\n\n#DEBUG= -O1\n\n#DEBUG= -O1 -g\n\n#DEBUG= -O1 -g3\n\n#\n\n#DEBUG= -O2\n\n#DEBUG= -O2 -g\n\n#DEBUG= -O2 -g3\n\n#DEBUG= -O2 -ipa\n\n#DEBUG= -O2 -g3 -ipa\n\n#\n\n#DEBUG= -O3\n\n#DEBUG= -O3 -g\n",
        "Line" : 875,
        "CharPositionInLine" : 0
      },
      "112" : {
        "Text" : "#DEBUG= -O3 -ipa\n\n#DEBUG= -O3 -g3 -ipa\n",
        "Line" : 900,
        "CharPositionInLine" : 0
      },
      "113" : {
        "Text" : "# Some systems require one to use ranlib to add a symbol table to\n\n# a *.a link library.  Set RANLIB to the utility that performs this\n\n# action.  Set RANLIB to : if your system does not need such a utility.\n\n#\n",
        "Line" : 903,
        "CharPositionInLine" : 0
      },
      "114" : {
        "Text" : "#RANLIB=:\n",
        "Line" : 908,
        "CharPositionInLine" : 0
      },
      "115" : {
        "Text" : "# Normally certain files depend on the Makefile.  If the Makefile is\n\n# changed, then certain steps should be redone.\t If MAKE_FILE is\n\n# set to Makefile, then these files will depend on Makefile.  If\n\n# MAKE_FILE is empty, then they wont.\n\n#\n\n# If in doubt, set MAKE_FILE to Makefile\n\n#\n",
        "Line" : 910,
        "CharPositionInLine" : 0
      },
      "116" : {
        "Text" : "# Controlling file makefile basename (without the path)\n\n#\n\n# This is the basename same of the makefile that may/does/will drive\n\n# this makefile.\n\n#\n\n# If in doubt, set TOP_MAKE_FILE to Makefile\n\n#\n",
        "Line" : 919,
        "CharPositionInLine" : 0
      },
      "117" : {
        "Text" : "# If you do not wish to use purify, set PURIFY to an empty string.\n\n#\n\n# If in doubt, use PURIFY=\n\n#\n\n#PURIFY= purify\n\n#PURIFY= purify -m71-engine\n\n#PURIFY= purify -logfile=pure.out\n\n#PURIFY= purify -m71-engine -logfile=pure.out\n",
        "Line" : 928,
        "CharPositionInLine" : 0
      },
      "118" : {
        "Text" : "# If you want to use a debugging link library such as a malloc debug link\n\n# library, or need to add special ld flags after the calc link libraries\n\n# are included, set ${LD_DEBUG} below.\n\n#\n\n# If in doubt, set LD_DEBUG to empty.\n\n#\n\n#LD_DEBUG= -lmalloc_cv\n",
        "Line" : 938,
        "CharPositionInLine" : 0
      },
      "119" : {
        "Text" : "# When doing a:\n\n#\n\n#\tmake check\n\n#\tmake chk\n\n#\tmake debug\n\n#\n\n# the ${CALC_ENV} is used to supply the proper environment variables\n\n# to calc.  Most people will simply need 'CALCPATH=./cal' to ensure\n\n# that these debug rules will only use calc resource files under the\n\n# local source directory.  The longer lines (with MALLOC_VERBOSE=1 ...)\n\n# are useful for SGI IRIX people who have 'WorkShop Performance Tools'\n\n# and who also set 'LD_DEBUG= -lmalloc_cv' above.\n\n#\n\n# If in doubt, use CALC_ENV= CALCPATH=./cal LD_LIBRARY_PATH=.:./custom\n\n#\n",
        "Line" : 947,
        "CharPositionInLine" : 0
      },
      "120" : {
        "Text" : "#CALC_ENV= CALCPATH=./cal MALLOC_VERBOSE=1 MALLOC_TRACING=1 \\\n#\t  MALLOC_FASTCHK=1 MALLOC_FULLWARN=1 LD_LIBRARY_PATH=.:./custom\n",
        "Line" : 963,
        "CharPositionInLine" : 0
      },
      "121" : {
        "Text" : "#CALC_ENV= CALCPATH=./cal MALLOC_VERBOSE=1 MALLOC_TRACING=1 \\\n#\t  MALLOC_FASTCHK=1 MALLOC_FULLWARN=1 MALLOC_CLEAR_FREE=1 \\\n#\t  MALLOC_CLEAR_MALLOC=1 LD_LIBRARY_PATH=.:./custom\n",
        "Line" : 965,
        "CharPositionInLine" : 0
      },
      "122" : {
        "Text" : "# The install rule uses:\n\n#\n\n#\t${MKDIR} ${MKDIR_ARG}\n\n#\n\n# to create directorties.  Normall this amounts to usins mkdir -p dir ...\n\n# Some older systems may not have mkdir -p.  If you system does not\n\n# make mkdir -p, then set MKDIR_ARG to empty.\n\n#\n\n# MKDIR_ARG= -p\t\t\t# use mkdir -p when creating paths\n\n# MKDIR_ARG=\t\t\t# use if system does not understand mkdir -p\n\n#\n",
        "Line" : 970,
        "CharPositionInLine" : 0
      },
      "123" : {
        "Text" : "#MKDIR_ARG=\n",
        "Line" : 982,
        "CharPositionInLine" : 0
      },
      "124" : {
        "Text" : "# Some out of date operating systems require / want an executable to\n\n# end with a certain file extension.  Some compile systems such as\n\n# windoz build calc as calc.exe.  The EXT variable is used to denote\n\n# the extension required by such.  Note that Cygwin requires EXT to be\n\n# the same as Linux/Un*x/GNU, even though it runs under windoz.\n\n#\n\n# EXT=\t\t\t\t# normal Un*x / Linux / GNU/Linux / Cygwin\n\n# EXT=.exe\t\t\t# windoz\n\n#\n\n# If in doubt, use EXT=\n\n#\n",
        "Line" : 984,
        "CharPositionInLine" : 0
      },
      "125" : {
        "Text" : "#EXT=.exe\n",
        "Line" : 996,
        "CharPositionInLine" : 0
      },
      "126" : {
        "Text" : "# The default calc versions\n\n#\n",
        "Line" : 998,
        "CharPositionInLine" : 0
      },
      "127" : {
        "Text" : "# Names of shared libraries with versions\n\n#\n",
        "Line" : 1005,
        "CharPositionInLine" : 0
      },
      "128" : {
        "Text" : "# standard utilities used during make\n\n#\n",
        "Line" : 1013,
        "CharPositionInLine" : 0
      },
      "129" : {
        "Text" : "# assume the X11 makedepend tool for the depend rule\n",
        "Line" : 1044,
        "CharPositionInLine" : 0
      },
      "130" : {
        "Text" : "# Extra compiling and linking flags\n\n#\n\n# EXTRA_CFLAGS are flags given to ${CC} when compiling C files\n\n# EXTRA_LDFLAGS are flags given to ${CC} when linking progs\n\n#\n\n# Both CFLAGS and LDFLAGS are left blank in this Makefile by\n\n# default so that users may use them on the make command line\n\n# to always the way that C is compiled and files are linked\n\n# respectively.  For example:\n\n#\n\n#\tmake all EXTRA_CFLAGS=\"-DMAGIC\" EXTRA_LDFLAGS=\"-lmagic\"\n\n#\n\n# NOTE: These should be left blank in this Makefile to make it\n\n#       easier to add stuff on the command line.  If you want to\n\n#\tto change the way calc is compiled by this Makefile, change\n\n#\tthe appropirate host target section below or a flag above.\n\n#\n",
        "Line" : 1048,
        "CharPositionInLine" : 0
      },
      "131" : {
        "Text" : "# COMMON_CFLAGS are the common ${CC} flags used for all progs, both\n\n#\t    intermediate and final calc and calc related progs\n\n#\n\n#if 0\t/* start of skip for non-Gnu makefiles */\n",
        "Line" : 1068,
        "CharPositionInLine" : 0
      },
      "132" : {
        "Text" : "#endif\t/* end of skip for non-Gnu makefiles */\n",
        "Line" : 1073,
        "CharPositionInLine" : 0
      },
      "133" : {
        "Text" : "#if 0\t/* start of skip for non-Gnu makefiles */\n",
        "Line" : 1075,
        "CharPositionInLine" : 0
      },
      "134" : {
        "Text" : "#endif\t/* end of skip for non-Gnu makefiles */\n",
        "Line" : 1079,
        "CharPositionInLine" : 0
      },
      "135" : {
        "Text" : "# COMMON_LDFLAGS are the common flags used for linking all progs, both\n\n#\t     intermediate and final calc and calc related progs\n\n#\n",
        "Line" : 1081,
        "CharPositionInLine" : 0
      },
      "136" : {
        "Text" : "# start of host target cut - Do not remove this line\n\n##############################################################################\n\n#-=-=-=-=-=- host target section - targets that override defaults -=-=-=-=-=-#\n\n##############################################################################\n",
        "Line" : 1086,
        "CharPositionInLine" : 0
      },
      "137" : {
        "Text" : "# Common values set in targets\n\n#\n\n# BLD_TYPE determines if calc is built with static and/or dynamic libs.\n\n#\t       Set this value to one of:\n\n#\n\n#\tBLD_TYPE= calc-dynamic-only\n\n#\tBLD_TYPE= calc-static-only\n\n#\n\n# CC_SHARE are flags given to ${CC} to build .o files suitable for shared libs\n\n# DEFAULT_LIB_INSTALL_PATH is where calc progs look for calc shared libs\n\n# LD_SHARE are common flags given to ${CC} to link with shared libraries\n\n# LIBCALC_SHLIB are flags given to ${CC} to build libcalc shared lib\n\n# LIBCUSTCALC_SHLIB are flags given to ${CC} to build libcustcalc shared lib\n\n#\n\n#\tNOTE: The above 4 values are unused if BLD_TYPE= calc-static-only\n\n#\n\n# CC_STATIC are flags given to ${CC} to build .o files suitable for static libs\n\n# LD_STATIC are common flags given to ${CC} to link with static libraries\n\n# LIBCALC_STATIC are flags given to ${CC} to build libcalc static lib\n\n# LIBCUSTCALC_STATIC are flags given to ${CC} to build libcustcalc static lib\n\n#\n\n#\tNOTE: The above 4 values are unused if BLD_TYPE= calc-dynamic-only\n\n#\n\n# CCOPT are flags given to ${CC} for optimization\n\n# CCWARN are flags given to ${CC} for warning message control\n\n# CCWERR are flags given to ${CC} to make warnings fatal errors\n\n#\tNOTE: CCWERR is only set in development Makefiles and must only be\n\n#\t      used with ${CC}, not ${LCC}.  If you do not want the compiler\n\n#\t      to abort on warnings, then leave CCWERR blank.\n\n# CCMISC are misc flags given to ${CC}\n\n#\n\n# LCC how the C compiler is invoked on locally executed intermediate progs\n\n# CC is how the C compiler is invoked (with an optional Purify)\n\n#\n\n# Specific target overrides or modifications to default values\n",
        "Line" : 1091,
        "CharPositionInLine" : 0
      },
      "138" : {
        "Text" : "##########################################################################\n\n# NOTE: If your target is not supported below and the default target\t #\n\n#\tis not suitable for your needs, please send to the:\t\t #\n\n#\t\t\t\t\t\t\t\t\t #\n\n#\t\tcalc-contrib at asthe dot com\t\t\t\t #\n\n#\t\t\t\t\t\t\t\t\t #\n\n#\tEMail address an \"ifeq ($(target),YOUR_TARGET_NAME)\" ... \"endif\" #\n\n#\tset of lines so that we can consider them for the next release.  #\n\n##########################################################################\n",
        "Line" : 1127,
        "CharPositionInLine" : 0
      },
      "139" : {
        "Text" : "#if 0\t/* start of skip for non-Gnu makefiles */\n\n################\n\n# Linux target #\n\n################\n",
        "Line" : 1137,
        "CharPositionInLine" : 0
      },
      "140" : {
        "Text" : "#\n",
        "Line" : 1143,
        "CharPositionInLine" : 0
      },
      "141" : {
        "Text" : "#\n",
        "Line" : 1145,
        "CharPositionInLine" : 0
      },
      "142" : {
        "Text" : "#\n",
        "Line" : 1156,
        "CharPositionInLine" : 0
      },
      "143" : {
        "Text" : "#\n",
        "Line" : 1161,
        "CharPositionInLine" : 0
      },
      "144" : {
        "Text" : "#\n",
        "Line" : 1166,
        "CharPositionInLine" : 0
      },
      "145" : {
        "Text" : "#\n",
        "Line" : 1169,
        "CharPositionInLine" : 0
      },
      "146" : {
        "Text" : "#################################\n\n# Apple MacOS X / Darwin target #\n\n#################################\n",
        "Line" : 1172,
        "CharPositionInLine" : 0
      },
      "147" : {
        "Text" : "#\n",
        "Line" : 1177,
        "CharPositionInLine" : 0
      },
      "148" : {
        "Text" : "#\n",
        "Line" : 1179,
        "CharPositionInLine" : 0
      },
      "149" : {
        "Text" : "#\n",
        "Line" : 1189,
        "CharPositionInLine" : 0
      },
      "150" : {
        "Text" : "#\n",
        "Line" : 1194,
        "CharPositionInLine" : 0
      },
      "151" : {
        "Text" : "#\n",
        "Line" : 1199,
        "CharPositionInLine" : 0
      },
      "152" : {
        "Text" : "#\n\n# Darmin dynamic shared lib filenames\n",
        "Line" : 1202,
        "CharPositionInLine" : 0
      },
      "153" : {
        "Text" : "# LDCONFIG not required on this platform, so we redefine it to an empty string\n",
        "Line" : 1209,
        "CharPositionInLine" : 0
      },
      "154" : {
        "Text" : "# DARWIN_ARCH= -arch i386 -arch ppc\t# Universal binary\n\n# DARWIN_ARCH= -arch i386\t\t# Intel binary\n\n# DARWIN_ARCH= -arch ppc\t\t# PPC binary\n",
        "Line" : 1211,
        "CharPositionInLine" : 0
      },
      "155" : {
        "Text" : "# native binary\n",
        "Line" : 1214,
        "CharPositionInLine" : 16
      },
      "156" : {
        "Text" : "#\n",
        "Line" : 1216,
        "CharPositionInLine" : 0
      },
      "157" : {
        "Text" : "##################\n\n# FreeBSD target #\n\n##################\n",
        "Line" : 1219,
        "CharPositionInLine" : 0
      },
      "158" : {
        "Text" : "########################################################################\n\n# NOTE: You MUST either use gmake (GNU Make) or you must try your luck #\n\n#       with Makefile.simple and custom/Makefile.simple versions.      #\n\n#\tSee HOWTO.INSTALL for more information.                        #\n\n########################################################################\n",
        "Line" : 1223,
        "CharPositionInLine" : 0
      },
      "159" : {
        "Text" : "#\n",
        "Line" : 1230,
        "CharPositionInLine" : 0
      },
      "160" : {
        "Text" : "#\n",
        "Line" : 1232,
        "CharPositionInLine" : 0
      },
      "161" : {
        "Text" : "#\n",
        "Line" : 1243,
        "CharPositionInLine" : 0
      },
      "162" : {
        "Text" : "#\n",
        "Line" : 1248,
        "CharPositionInLine" : 0
      },
      "163" : {
        "Text" : "#\n",
        "Line" : 1253,
        "CharPositionInLine" : 0
      },
      "164" : {
        "Text" : "#\n",
        "Line" : 1256,
        "CharPositionInLine" : 0
      },
      "165" : {
        "Text" : "#\n",
        "Line" : 1258,
        "CharPositionInLine" : 0
      },
      "166" : {
        "Text" : "##################\n\n# OpenBSD target #\n\n##################\n",
        "Line" : 1261,
        "CharPositionInLine" : 0
      },
      "167" : {
        "Text" : "########################################################################\n\n# NOTE: You MUST either use gmake (GNU Make) or you must try your luck #\n\n#       with Makefile.simple and custom/Makefile.simple versions.      #\n\n#\tSee HOWTO.INSTALL for more information.                        #\n\n########################################################################\n",
        "Line" : 1265,
        "CharPositionInLine" : 0
      },
      "168" : {
        "Text" : "#\n",
        "Line" : 1272,
        "CharPositionInLine" : 0
      },
      "169" : {
        "Text" : "#\n",
        "Line" : 1274,
        "CharPositionInLine" : 0
      },
      "170" : {
        "Text" : "#\n",
        "Line" : 1285,
        "CharPositionInLine" : 0
      },
      "171" : {
        "Text" : "#\n",
        "Line" : 1290,
        "CharPositionInLine" : 0
      },
      "172" : {
        "Text" : "#\n",
        "Line" : 1295,
        "CharPositionInLine" : 0
      },
      "173" : {
        "Text" : "#\n",
        "Line" : 1298,
        "CharPositionInLine" : 0
      },
      "174" : {
        "Text" : "#\n",
        "Line" : 1300,
        "CharPositionInLine" : 0
      },
      "175" : {
        "Text" : "################\n\n# SunOS target #\n\n################\n",
        "Line" : 1303,
        "CharPositionInLine" : 0
      },
      "176" : {
        "Text" : "# XXX - this needs to be tested\n",
        "Line" : 1307,
        "CharPositionInLine" : 0
      },
      "177" : {
        "Text" : "#\n",
        "Line" : 1309,
        "CharPositionInLine" : 0
      },
      "178" : {
        "Text" : "#\n",
        "Line" : 1311,
        "CharPositionInLine" : 0
      },
      "179" : {
        "Text" : "#\n",
        "Line" : 1322,
        "CharPositionInLine" : 0
      },
      "180" : {
        "Text" : "#\n",
        "Line" : 1327,
        "CharPositionInLine" : 0
      },
      "181" : {
        "Text" : "#\n",
        "Line" : 1332,
        "CharPositionInLine" : 0
      },
      "182" : {
        "Text" : "#\n",
        "Line" : 1335,
        "CharPositionInLine" : 0
      },
      "183" : {
        "Text" : "#################\n\n# Cygwin target #\n\n#################\n",
        "Line" : 1338,
        "CharPositionInLine" : 0
      },
      "184" : {
        "Text" : "#\n",
        "Line" : 1343,
        "CharPositionInLine" : 0
      },
      "185" : {
        "Text" : "#\n",
        "Line" : 1345,
        "CharPositionInLine" : 0
      },
      "186" : {
        "Text" : "#\n",
        "Line" : 1356,
        "CharPositionInLine" : 0
      },
      "187" : {
        "Text" : "#\n",
        "Line" : 1361,
        "CharPositionInLine" : 0
      },
      "188" : {
        "Text" : "#\n",
        "Line" : 1366,
        "CharPositionInLine" : 0
      },
      "189" : {
        "Text" : "#\n",
        "Line" : 1369,
        "CharPositionInLine" : 0
      },
      "190" : {
        "Text" : "#######################################################\n\n# simple target - values used to form Makefile.simple #\n\n#######################################################\n",
        "Line" : 1372,
        "CharPositionInLine" : 0
      },
      "191" : {
        "Text" : "# NOTE: This is not a real host target.  The simple target\n\n#\texists only to form the Makefile.simple file.\n",
        "Line" : 1376,
        "CharPositionInLine" : 0
      },
      "192" : {
        "Text" : "#endif\t/* end of skip for non-Gnu makefiles */\n\n#\n",
        "Line" : 1380,
        "CharPositionInLine" : 0
      },
      "193" : {
        "Text" : "#\n",
        "Line" : 1383,
        "CharPositionInLine" : 0
      },
      "194" : {
        "Text" : "#\n",
        "Line" : 1390,
        "CharPositionInLine" : 0
      },
      "195" : {
        "Text" : "#\n",
        "Line" : 1395,
        "CharPositionInLine" : 0
      },
      "196" : {
        "Text" : "#\n",
        "Line" : 1400,
        "CharPositionInLine" : 0
      },
      "197" : {
        "Text" : "#\n\n# The simple makefile forces the use of static ${CC} flags\n\n#\n\n# ICFLAGS are given to ${CC} for intermediate progs used to help compile calc\n\n# CFLAGS are given to ${CC} for calc progs other than intermediate progs\n\n# ILDFLAGS for ${CC} in linking intermediate progs used to help compile calc\n\n# LDFLAGS for ${CC} in linking calc progs other than intermediate progs\n\n#\n",
        "Line" : 1403,
        "CharPositionInLine" : 0
      },
      "198" : {
        "Text" : "#\n",
        "Line" : 1413,
        "CharPositionInLine" : 0
      },
      "199" : {
        "Text" : "#\n\n#if 0\t/* start of skip for non-Gnu makefiles */\n",
        "Line" : 1416,
        "CharPositionInLine" : 0
      },
      "200" : {
        "Text" : "###################################################\n\n# MINGW32_NT-5.0 target                           #\n\n###################################################\n",
        "Line" : 1420,
        "CharPositionInLine" : 0
      },
      "201" : {
        "Text" : "#endif\t/* end of skip for non-Gnu makefiles */\n",
        "Line" : 1430,
        "CharPositionInLine" : 0
      },
      "202" : {
        "Text" : "#if 0\t/* start of skip for non-Gnu makefiles */\n",
        "Line" : 1432,
        "CharPositionInLine" : 0
      },
      "203" : {
        "Text" : "#\n",
        "Line" : 1437,
        "CharPositionInLine" : 0
      },
      "204" : {
        "Text" : "#\n",
        "Line" : 1439,
        "CharPositionInLine" : 0
      },
      "205" : {
        "Text" : "#\n",
        "Line" : 1450,
        "CharPositionInLine" : 0
      },
      "206" : {
        "Text" : "#\n",
        "Line" : 1455,
        "CharPositionInLine" : 0
      },
      "207" : {
        "Text" : "#\n",
        "Line" : 1460,
        "CharPositionInLine" : 0
      },
      "208" : {
        "Text" : "#\n",
        "Line" : 1463,
        "CharPositionInLine" : 0
      },
      "209" : {
        "Text" : "###################################################\n\n# default target - when no specific target exists #\n\n###################################################\n",
        "Line" : 1466,
        "CharPositionInLine" : 0
      },
      "210" : {
        "Text" : "# NOTE: This is the default generic host target.  Used when no other\n\n#\thost target matches.\n",
        "Line" : 1470,
        "CharPositionInLine" : 0
      },
      "211" : {
        "Text" : "#\n",
        "Line" : 1474,
        "CharPositionInLine" : 0
      },
      "212" : {
        "Text" : "#\n",
        "Line" : 1476,
        "CharPositionInLine" : 0
      },
      "213" : {
        "Text" : "#\n",
        "Line" : 1487,
        "CharPositionInLine" : 0
      },
      "214" : {
        "Text" : "#\n",
        "Line" : 1492,
        "CharPositionInLine" : 0
      },
      "215" : {
        "Text" : "#\n",
        "Line" : 1497,
        "CharPositionInLine" : 0
      },
      "216" : {
        "Text" : "#\n",
        "Line" : 1500,
        "CharPositionInLine" : 0
      },
      "217" : {
        "Text" : "###########################################\n\n# Set the default compile flags for ${CC} #\n\n###########################################\n",
        "Line" : 1503,
        "CharPositionInLine" : 0
      },
      "218" : {
        "Text" : "# Required flags to compile C files for calc\n\n#\n\n# ICFLAGS are given to ${CC} for intermediate progs used to help compile calc\n\n# CFLAGS are given to ${CC} for calc progs other than intermediate progs\n\n#\n\n# NOTE: This does not work for: make-XYZ-only and BLD_TYPE != make-XYZ-only\n\n#\n",
        "Line" : 1507,
        "CharPositionInLine" : 0
      },
      "219" : {
        "Text" : "# Required flags to link files for calc\n\n#\n\n# ILDFLAGS for ${CC} in linking intermediate progs used to help compile calc\n\n# LDFLAGS for ${CC} in linking calc progs other than intermediate progs\n\n#\n",
        "Line" : 1521,
        "CharPositionInLine" : 0
      },
      "220" : {
        "Text" : "#endif\t/* end of skip for non-Gnu makefiles */\n",
        "Line" : 1528,
        "CharPositionInLine" : 0
      },
      "221" : {
        "Text" : "#######################################################################\n\n#-=-=-=-=-=- end of target section - only make rules below -=-=-=-=-=-#\n\n#######################################################################\n\n# end of host target cut - Do not remove this line\n",
        "Line" : 1530,
        "CharPositionInLine" : 0
      },
      "222" : {
        "Text" : "###############################################################################\n\n#=-=-=-=-=- Be careful if you change something in this next section -=-=-=-=-=#\n\n###############################################################################\n",
        "Line" : 1535,
        "CharPositionInLine" : 0
      },
      "223" : {
        "Text" : "# Makefile debug\n\n#\n\n# Q=@\tdo not echo internal Makefile actions (quiet mode)\n\n# Q=\techo internal Makefile actions (debug / verbose mode)\n\n#\n\n# V=@:\tdo not echo debug statements (quiet mode)\n\n# V=@\tdo echo debug statements (debug / verbose mode)\n\n#\n\n#Q=\n",
        "Line" : 1539,
        "CharPositionInLine" : 0
      },
      "224" : {
        "Text" : "#V=@\n",
        "Line" : 1550,
        "CharPositionInLine" : 0
      },
      "225" : {
        "Text" : "# the source files which are built into a math link library\n\n#\n\n# There MUST be a .o for every .c in LIBOBJS\n\n#\n",
        "Line" : 1552,
        "CharPositionInLine" : 0
      },
      "226" : {
        "Text" : "# the object files which are built into a math link library\n\n#\n\n# There MUST be a .o for every .c in LIBSRC plus calcerr.o\n\n# which is built via this Makefile.\n\n#\n",
        "Line" : 1565,
        "CharPositionInLine" : 0
      },
      "227" : {
        "Text" : "# the calculator source files\n\n#\n\n# There MUST be a .c for every .o in CALCOBJS.\n\n#\n",
        "Line" : 1579,
        "CharPositionInLine" : 0
      },
      "228" : {
        "Text" : "# we build these .o files for calc\n\n#\n\n# There MUST be a .o for every .c in CALCSRC.\n\n#\n",
        "Line" : 1585,
        "CharPositionInLine" : 0
      },
      "229" : {
        "Text" : "# these .h files are needed to build the math link library\n\n#\n",
        "Line" : 1591,
        "CharPositionInLine" : 0
      },
      "230" : {
        "Text" : "# we build these .h files during the make\n\n#\n",
        "Line" : 1599,
        "CharPositionInLine" : 0
      },
      "231" : {
        "Text" : "# we build these .c files during the make\n\n#\n",
        "Line" : 1610,
        "CharPositionInLine" : 0
      },
      "232" : {
        "Text" : "# these .c files may be used in the process of building BUILD_H_SRC\n\n#\n\n# There MUST be a .c for every .o in UTIL_OBJS.\n\n#\n",
        "Line" : 1614,
        "CharPositionInLine" : 0
      },
      "233" : {
        "Text" : "# these awk and sed tools are used in the process of building BUILD_H_SRC\n\n# and BUILD_C_SRC\n\n#\n",
        "Line" : 1625,
        "CharPositionInLine" : 0
      },
      "234" : {
        "Text" : "# these .o files may get built in the process of building BUILD_H_SRC\n\n#\n\n# There MUST be a .o for every .c in UTIL_C_SRC.\n\n#\n",
        "Line" : 1631,
        "CharPositionInLine" : 0
      },
      "235" : {
        "Text" : "# these temp files may be created (and removed) during the build of BUILD_C_SRC\n\n#\n",
        "Line" : 1642,
        "CharPositionInLine" : 0
      },
      "236" : {
        "Text" : "# these utility executables may be created in the process of\n\n# building the BUILD_H_SRC file set\n\n#\n",
        "Line" : 1648,
        "CharPositionInLine" : 0
      },
      "237" : {
        "Text" : "# these utility files and scripts may be created in the process of building\n\n# the BUILD_H_SRC file set\n\n#\n",
        "Line" : 1659,
        "CharPositionInLine" : 0
      },
      "238" : {
        "Text" : "# Any .h files that are needed to compile sample code.\n\n#\n",
        "Line" : 1664,
        "CharPositionInLine" : 0
      },
      "239" : {
        "Text" : "# Any .c files that are needed to compile sample code.\n\n#\n\n# There MUST be a .c in SAMPLE_C_SRC for every .o in SAMPLE_OBJ.\n\n#\n",
        "Line" : 1668,
        "CharPositionInLine" : 0
      },
      "240" : {
        "Text" : "# Any .o files that are needed to compile sample code.\n\n#\n\n# There MUST be a .c in SAMPLE_C_SRC for every .o in SAMPLE_OBJ.\n\n#\n",
        "Line" : 1674,
        "CharPositionInLine" : 0
      },
      "241" : {
        "Text" : "# The complete list of Makefile vars passed down to custom/Makefile.\n\n#\n",
        "Line" : 1680,
        "CharPositionInLine" : 0
      },
      "242" : {
        "Text" : "# The compelte list of Makefile vars passed down to help/Makefile.\n\n#\n",
        "Line" : 1743,
        "CharPositionInLine" : 0
      },
      "243" : {
        "Text" : "# The compelte list of Makefile vars passed down to cal/Makefile.\n\n#\n",
        "Line" : 1780,
        "CharPositionInLine" : 0
      },
      "244" : {
        "Text" : "# The compelte list of Makefile vars passed down to cscript/Makefile.\n\n#\n",
        "Line" : 1808,
        "CharPositionInLine" : 0
      },
      "245" : {
        "Text" : "# complete list of .h files found (but not built) in the distribution\n\n#\n",
        "Line" : 1839,
        "CharPositionInLine" : 0
      },
      "246" : {
        "Text" : "# complete list of .c files found (but not built) in the distribution\n\n#\n",
        "Line" : 1843,
        "CharPositionInLine" : 0
      },
      "247" : {
        "Text" : "# The list of files that describe calc's GNU Lesser General Public License\n\n#\n",
        "Line" : 1847,
        "CharPositionInLine" : 0
      },
      "248" : {
        "Text" : "# These files are found (but not built) in the distribution\n\n#\n",
        "Line" : 1851,
        "CharPositionInLine" : 0
      },
      "249" : {
        "Text" : "# These files are used to make (but not built) a calc .a link library\n\n#\n",
        "Line" : 1857,
        "CharPositionInLine" : 0
      },
      "250" : {
        "Text" : "# complete list of .o files\n\n#\n",
        "Line" : 1862,
        "CharPositionInLine" : 0
      },
      "251" : {
        "Text" : "# static library build\n\n#\n\n#if 0\t/* start of skip for non-Gnu makefiles */\n",
        "Line" : 1866,
        "CharPositionInLine" : 0
      },
      "252" : {
        "Text" : "#endif\t/* end of skip for non-Gnu makefiles */\n",
        "Line" : 1870,
        "CharPositionInLine" : 0
      },
      "253" : {
        "Text" : "#if 0\t/* start of skip for non-Gnu makefiles */\n",
        "Line" : 1872,
        "CharPositionInLine" : 0
      },
      "254" : {
        "Text" : "#endif\t/* end of skip for non-Gnu makefiles */\n",
        "Line" : 1876,
        "CharPositionInLine" : 0
      },
      "255" : {
        "Text" : "# Libaraies created and used to build calc\n\n#\n\n#if 0\t/* start of skip for non-Gnu makefiles */\n",
        "Line" : 1878,
        "CharPositionInLine" : 0
      },
      "256" : {
        "Text" : "#endif\t/* end of skip for non-Gnu makefiles */\n",
        "Line" : 1882,
        "CharPositionInLine" : 0
      },
      "257" : {
        "Text" : "#if 0\t/* start of skip for non-Gnu makefiles */\n",
        "Line" : 1884,
        "CharPositionInLine" : 0
      },
      "258" : {
        "Text" : "#endif\t/* end of skip for non-Gnu makefiles */\n",
        "Line" : 1888,
        "CharPositionInLine" : 0
      },
      "259" : {
        "Text" : "# Symlinks of dymanic shared libraries\n\n#\n\n#if 0\t/* start of skip for non-Gnu makefiles */\n",
        "Line" : 1890,
        "CharPositionInLine" : 0
      },
      "260" : {
        "Text" : "#endif\t/* end of skip for non-Gnu makefiles */\n",
        "Line" : 1894,
        "CharPositionInLine" : 0
      },
      "261" : {
        "Text" : "#if 0\t/* start of skip for non-Gnu makefiles */\n",
        "Line" : 1899,
        "CharPositionInLine" : 0
      },
      "262" : {
        "Text" : "#endif\t/* end of skip for non-Gnu makefiles */\n",
        "Line" : 1904,
        "CharPositionInLine" : 0
      },
      "263" : {
        "Text" : "# list of sample programs to that need to be built to satisfy sample rule\n\n#\n\n# NOTE: The ${SAMPLE_TARGETS} and ${SAMPLE_STATIC_TARGETS} are built but\n\n#\tnot installed at this time.\n\n#\n\n# NOTE: There must be a foo-static${EXT} in SAMPLE_STATIC_TARGETS for\n\n#\tevery foo${EXT} in ${SAMPLE_TARGETS}.\n\n#\n",
        "Line" : 1906,
        "CharPositionInLine" : 0
      },
      "264" : {
        "Text" : "# list of cscript programs to that need to be built to satisfy cscript/.all\n\n#\n\n# NOTE: This list MUST be coordinated with the ${CSCRIPT_TARGETS} variable\n\n#\tin the cscript/Makefile\n\n#\n",
        "Line" : 1917,
        "CharPositionInLine" : 0
      },
      "265" : {
        "Text" : "# dynamic first targets\n\n#\n",
        "Line" : 1925,
        "CharPositionInLine" : 0
      },
      "266" : {
        "Text" : "# static first targets\n\n#\n",
        "Line" : 1929,
        "CharPositionInLine" : 0
      },
      "267" : {
        "Text" : "# early targets - things needed before the main build phase can begin\n\n#\n\n#if 0\t/* start of skip for non-Gnu makefiles */\n",
        "Line" : 1933,
        "CharPositionInLine" : 0
      },
      "268" : {
        "Text" : "#endif\t/* end of skip for non-Gnu makefiles */\n",
        "Line" : 1937,
        "CharPositionInLine" : 0
      },
      "269" : {
        "Text" : "#if 0\t/* start of skip for non-Gnu makefiles */\n",
        "Line" : 1939,
        "CharPositionInLine" : 0
      },
      "270" : {
        "Text" : "#endif\t/* end of skip for non-Gnu makefiles */\n",
        "Line" : 1943,
        "CharPositionInLine" : 0
      },
      "271" : {
        "Text" : "# late targets - things needed after the main build phase is complete\n\n#\n",
        "Line" : 1945,
        "CharPositionInLine" : 0
      },
      "272" : {
        "Text" : "# complete list of targets\n\n#\n",
        "Line" : 1951,
        "CharPositionInLine" : 0
      },
      "273" : {
        "Text" : "###\n\n#\n\n# The reason for this Makefile\t:-)\n\n#\n\n###\n",
        "Line" : 1955,
        "CharPositionInLine" : 0
      },
      "274" : {
        "Text" : "###\n\n#\n\n# calc documentation\n\n#\n\n###\n",
        "Line" : 2075,
        "CharPositionInLine" : 0
      },
      "275" : {
        "Text" : "##\n\n#\n\n# These rules compile the sample code against the calc library\n\n#\n\n##\n",
        "Line" : 2106,
        "CharPositionInLine" : 0
      },
      "276" : {
        "Text" : "###\n\n#\n\n# Special .o files\n\n#\n\n###\n",
        "Line" : 2122,
        "CharPositionInLine" : 0
      },
      "277" : {
        "Text" : "###\n\n#\n\n# The next set of rules cause the .h files BUILD_H_SRC files to be built\n\n# according tot he system and the Makefile variables above.  The hsrc rule\n\n# is a convenient rule to invoke to built all of the BUILD_H_SRC.\n\n#\n\n# We add in the BUILD_C_SRC files because they are similar to the\n\n# BUILD_H_SRC files in terms of the build process.\n\n#\n\n# NOTE: Due to bogus shells found on one common system we must have\n\n#\tan non-empty else clause for every if condition.  *sigh*\n\n#\tWe also place ; ${TRUE} at the end of some commands to avoid\n\n#\tmeaningless cosmetic messages by the same system.\n\n#\n\n###\n",
        "Line" : 2135,
        "CharPositionInLine" : 0
      },
      "278" : {
        "Text" : "#if 0\t/* start of skip for non-Gnu makefiles */\n",
        "Line" : 2184,
        "CharPositionInLine" : 0
      },
      "279" : {
        "Text" : "#endif\t/* end of skip for non-Gnu makefiles */\n",
        "Line" : 2186,
        "CharPositionInLine" : 0
      },
      "280" : {
        "Text" : "#if 0\t/* start of skip for non-Gnu makefiles */\n",
        "Line" : 2192,
        "CharPositionInLine" : 0
      },
      "281" : {
        "Text" : "#endif\t/* end of skip for non-Gnu makefiles */\n",
        "Line" : 2194,
        "CharPositionInLine" : 0
      },
      "282" : {
        "Text" : "###\n\n#\n\n# Build .h files for windoz based systems\n\n#\n\n# This is really a internal utility rule that is used to create the\n\n# win32 sub-directory for distribution.\n\n#\n\n###\n",
        "Line" : 3463,
        "CharPositionInLine" : 0
      },
      "283" : {
        "Text" : "###\n\n#\n\n# These rules are used in the process of building the BUILD_H_SRC.\n\n#\n\n###\n",
        "Line" : 3490,
        "CharPositionInLine" : 0
      },
      "284" : {
        "Text" : "###\n\n#\n\n# These two .all rules are used to determine of the lower level\n\n# directory has had its all rule performed.\n\n#\n\n###\n",
        "Line" : 3510,
        "CharPositionInLine" : 0
      },
      "285" : {
        "Text" : "#if 0\t/* start of skip for non-Gnu makefiles */\n",
        "Line" : 3552,
        "CharPositionInLine" : 0
      },
      "286" : {
        "Text" : "#endif\t/* end of skip for non-Gnu makefiles */\n",
        "Line" : 3554,
        "CharPositionInLine" : 0
      },
      "287" : {
        "Text" : "#if 0\t/* start of skip for non-Gnu makefiles */\n",
        "Line" : 3589,
        "CharPositionInLine" : 0
      },
      "288" : {
        "Text" : "#endif\t/* end of skip for non-Gnu makefiles */\n",
        "Line" : 3591,
        "CharPositionInLine" : 0
      },
      "289" : {
        "Text" : "###\n\n#\n\n# building calc-static and static lib*.a libraires\n\n#\n\n###\n",
        "Line" : 3593,
        "CharPositionInLine" : 0
      },
      "290" : {
        "Text" : "#if 0\t/* start of skip for non-Gnu makefiles */\n",
        "Line" : 3615,
        "CharPositionInLine" : 0
      },
      "291" : {
        "Text" : "#endif\t/* end of skip for non-Gnu makefiles */\n",
        "Line" : 3617,
        "CharPositionInLine" : 0
      },
      "292" : {
        "Text" : "#if 0\t/* start of skip for non-Gnu makefiles */\n",
        "Line" : 3620,
        "CharPositionInLine" : 0
      },
      "293" : {
        "Text" : "#endif\t/* end of skip for non-Gnu makefiles */\n",
        "Line" : 3622,
        "CharPositionInLine" : 0
      },
      "294" : {
        "Text" : "###\n\n#\n\n# Home grown make dependency rules.  Your system make not support\n\n# or have the needed tools.  You can ignore this section.\n\n#\n\n# We will form a skelaton tree of *.c files containing only #include \"foo.h\"\n\n# lines and .h files containing the same lines surrounded by multiple include\n\n# prevention lines.  This allows us to build a static depend list that will\n\n# satisfy all possible cpp symbol definition combinations.\n\n#\n\n###\n",
        "Line" : 3632,
        "CharPositionInLine" : 0
      },
      "295" : {
        "Text" : "# generate the list of h files for lower level depend use\n\n#\n",
        "Line" : 3712,
        "CharPositionInLine" : 0
      },
      "296" : {
        "Text" : "###\n\n#\n\n# calc version\n\n#\n\n# calc_version:\n\n#\tThis rule is the most accurate as it uses calc source to\n\n#\tproduce the version value.  This rule produces a full\n\n#\tversion string.  Note that the full version could be 4\n\n#\tor 3 levels long depending on the minor patch number.\n\n#\n\n# calc_vers:\n\n#\tThis rule is the most accurate as it uses calc source to\n\n#\tproduce the version value.  This rule produces only a\n\n#\t3 level version string.\n\n#\n\n# calc_ver:\n\n#\tThis rule is the most accurate as it uses calc source to\n\n#\tproduce the version value.  This rule produces only a\n\n#\t2 level version string.\n\n#\n\n# calc_ve:\n\n#\tThis rule is the most accurate as it uses calc source to\n\n#\tproduce the version value.  This rule produces only a\n\n#\t1 level version string.\n\n#\n\n# version:\n\n#\tThis rule simply echos the value found in this makefile.\n\n#\tThis rule produces the full version string.  Note that the\n\n#\tfull version could be 4 or 3 levels long depending on the\n\n#\tminor patch number.\n\n#\n\n# vers:\n\n#\tThis rule simply echos the value found in this makefile.\n\n#\tThis rule produces only a 3 level version string.\n\n#\n\n# ver:\n\n#\tThis rule simply echos the value found in this makefile.\n\n#\tThis rule produces only a 2 level version string.\n\n#\n\n# ve:\n\n#\tThis rule simply echos the value found in this makefile.\n\n#\tThis rule produces only a 1 level version string.\n\n#\n\n###\n",
        "Line" : 3721,
        "CharPositionInLine" : 0
      },
      "297" : {
        "Text" : "###\n\n#\n\n# File distribution list generation.  You can ignore this section.\n\n#\n\n# We will form the names of source files as if they were in a\n\n# sub-directory called calc.\n\n#\n\n###\n",
        "Line" : 3794,
        "CharPositionInLine" : 0
      },
      "298" : {
        "Text" : "#if 0\t/* start of skip for non-Gnu makefiles */\n",
        "Line" : 3845,
        "CharPositionInLine" : 0
      },
      "299" : {
        "Text" : "#endif\t/* end of skip for non-Gnu makefiles */\n",
        "Line" : 3870,
        "CharPositionInLine" : 0
      },
      "300" : {
        "Text" : "###\n\n#\n\n# Doing a 'make check' will cause the regression test suite to be executed.\n\n# This rule will try to build anything that needs to be built as well.\n\n#\n\n# Doing a 'make chk' will cause only the context around interesting\n\n# (and error) messages to be printed.  Unlike 'make check', this\n\n# rule does not cause things to be built.  I.e., the all rule is\n\n# not invoked.\n\n#\n\n###\n",
        "Line" : 3872,
        "CharPositionInLine" : 0
      },
      "301" : {
        "Text" : "###\n\n#\n\n# debug\n\n#\n\n# make env:\n\n#\t* print major Makefile variables\n\n#\n\n# make mkdebug:\n\n#\t* print major Makefile variables\n\n#\t* build anything not yet built\n\n#\n\n# make debug:\n\n#\t* remove everything that was previously built\n\n#\t* print major Makefile variables\n\n#\t* make everything\n\n#\t* run the regression tests\n\n###\n",
        "Line" : 3892,
        "CharPositionInLine" : 0
      },
      "302" : {
        "Text" : "###\n\n#\n\n# testing rules\n\n#\n\n# make run\n\n#\t* only run calc interactively with the ${CALC_ENV} environment\n\n#\n\n# make dbx\n\n#\t* run the dbx debugger on calc with the ${CALC_ENV} environment\n\n#\n\n# make gdb\n\n#\t* run the gdb debugger on calc with the ${CALC_ENV} environment\n\n#\n\n###\n",
        "Line" : 4105,
        "CharPositionInLine" : 0
      },
      "303" : {
        "Text" : "###\n\n#\n\n# rpm rules\n\n#\n\n###\n",
        "Line" : 4129,
        "CharPositionInLine" : 0
      },
      "304" : {
        "Text" : "# rpm static rules\n\n#\n",
        "Line" : 4145,
        "CharPositionInLine" : 0
      },
      "305" : {
        "Text" : "###\n\n#\n\n# Utility rules\n\n#\n\n###\n",
        "Line" : 4176,
        "CharPositionInLine" : 0
      },
      "306" : {
        "Text" : "# Form the installed file list\n\n#\n",
        "Line" : 4182,
        "CharPositionInLine" : 0
      },
      "307" : {
        "Text" : "# The olduninstall rule will remove calc files from the older, histroic\n\n# locations under the /usr/local directory.  If you are using the\n\n# new default values for ${BINDIR}, ${CALC_SHAREDIR}, ${INCDIR} and ${LIBDIR}\n\n# then you can use this rule to clean out the older calc stuff under\n\n# the /usr/local directory.\n\n#\n",
        "Line" : 4213,
        "CharPositionInLine" : 0
      },
      "308" : {
        "Text" : "#if 0\t/* start of skip for non-Gnu makefiles */\n",
        "Line" : 4322,
        "CharPositionInLine" : 0
      },
      "309" : {
        "Text" : "#endif\t/* end of skip for non-Gnu makefiles */\n",
        "Line" : 4326,
        "CharPositionInLine" : 0
      },
      "310" : {
        "Text" : "# install everything\n\n#\n\n# NOTE: Keep the uninstall rule in reverse order to the install rule\n\n#\n",
        "Line" : 4330,
        "CharPositionInLine" : 0
      },
      "311" : {
        "Text" : "#if 0\t/* start of skip for non-Gnu makefiles */\n",
        "Line" : 4392,
        "CharPositionInLine" : 0
      },
      "312" : {
        "Text" : "#endif\t/* end of skip for non-Gnu makefiles */\n",
        "Line" : 4394,
        "CharPositionInLine" : 0
      },
      "313" : {
        "Text" : "#if 0\t/* start of skip for non-Gnu makefiles */\n",
        "Line" : 4419,
        "CharPositionInLine" : 0
      },
      "314" : {
        "Text" : "#endif\t/* end of skip for non-Gnu makefiles */\n",
        "Line" : 4421,
        "CharPositionInLine" : 0
      },
      "315" : {
        "Text" : "#if 0\t/* start of skip for non-Gnu makefiles */\n",
        "Line" : 4483,
        "CharPositionInLine" : 0
      },
      "316" : {
        "Text" : "#endif\t/* end of skip for non-Gnu makefiles */\n",
        "Line" : 4485,
        "CharPositionInLine" : 0
      },
      "317" : {
        "Text" : "#if 0\t/* start of skip for non-Gnu makefiles */\n",
        "Line" : 4489,
        "CharPositionInLine" : 0
      },
      "318" : {
        "Text" : "#endif\t/* end of skip for non-Gnu makefiles */\n",
        "Line" : 4491,
        "CharPositionInLine" : 0
      },
      "319" : {
        "Text" : "# NOTE: The this makefile installs libcustcalc${LIB_EXT_VERSION}\n\n#       because we only want to perform one ${LDCONFIG} for both\n\n#       libcalc${LIB_EXT_VERSION} and libcustcalc${LIB_EXT_VERSION}.\n",
        "Line" : 4507,
        "CharPositionInLine" : 5
      },
      "320" : {
        "Text" : "#[ \t]*include[ \t][ \t]*\\)\"/\\1\"calc\\//' \\\n\t              $$i > tmp; \\\n\t    if ${CMP} -s tmp ${T}${CALC_INCDIR}/$$i; then \\\n\t\t${TRUE}; \\\n\t    else \\\n\t\t${RM} -f ${T}${CALC_INCDIR}/$$i.new; \\\n\t\t${CP} -f tmp ${T}${CALC_INCDIR}/$$i.new; \\\n\t\t${CHMOD} 0444 ${T}${CALC_INCDIR}/$$i.new; \\\n\t\t${MV} -f ${T}${CALC_INCDIR}/$$i.new ${T}${CALC_INCDIR}/$$i; \\\n\t\techo \"installed ${T}${CALC_INCDIR}/$$i\"; \\\n\t    fi; \\\n\t    if [ -f \"${T}${CALC_INCDIR}/std_arg.h\" ]; then \\\n\t\t${RM} -f ${T}${CALC_INCDIR}/std_arg.h; \\\n\t\techo \"removed old ${T}${CALC_INCDIR}/std_arg.h\"; \\\n\t    fi; \\\n\t    if [ -f \"${T}${CALC_INCDIR}/win32dll.h\" ]; then \\\n\t\t${RM} -f ${T}${CALC_INCDIR}/win32dll.h; \\\n\t\techo \"removed old ${T}${CALC_INCDIR}/win32dll.h\"; \\\n\t    fi; \\\n\t    if [ -f \"${T}${CALC_INCDIR}/have_malloc.h\" ]; then \\\n\t\t${RM} -f ${T}${CALC_INCDIR}/have_malloc.h; \\\n\t\techo \"removed old ${T}${CALC_INCDIR}/have_malloc.h\"; \\\n\t    fi; \\\n\t    if [ -f \"${T}${CALC_INCDIR}/math_error.h\" ]; then \\\n\t\t${RM} -f ${T}${CALC_INCDIR}/math_error.h; \\\n\t\techo \"removed old ${T}${CALC_INCDIR}/math_error.h\"; \\\n\t    fi; \\\n\t    if [ -f \"${T}${CALC_INCDIR}/string.h\" ]; then \\\n\t\t${RM} -f ${T}${CALC_INCDIR}/string.h; \\\n\t\techo \"removed old ${T}${CALC_INCDIR}/string.h\"; \\\n\t    fi; \\\n\tdone\n",
        "Line" : 4567,
        "CharPositionInLine" : 21
      },
      "321" : {
        "Text" : "# NOTE: misc install cleanup\n",
        "Line" : 4633,
        "CharPositionInLine" : 6
      },
      "322" : {
        "Text" : "# Try to remove everything that was installed\n\n#\n\n# NOTE: Keep the uninstall rule in reverse order to the install rule\n\n#\n",
        "Line" : 4637,
        "CharPositionInLine" : 0
      },
      "323" : {
        "Text" : "# splint - A tool for statically checking C programs\n\n#\n",
        "Line" : 4823,
        "CharPositionInLine" : 0
      },
      "324" : {
        "Text" : "#hsrc\n",
        "Line" : 4825,
        "CharPositionInLine" : 8
      },
      "325" : {
        "Text" : "# strip - for reducing the size of the binary files\n\n#\n",
        "Line" : 4829,
        "CharPositionInLine" : 0
      },
      "326" : {
        "Text" : "# calc-symlink - setup symlinks from stardard locations into the ${T} tree\n\n#\n",
        "Line" : 4843,
        "CharPositionInLine" : 0
      },
      "327" : {
        "Text" : "# remove any symlinks that may have been created by calc-symlink\n\n#\n",
        "Line" : 4895,
        "CharPositionInLine" : 0
      },
      "328" : {
        "Text" : "###\n\n#\n\n# make depend stuff\n\n#\n\n###\n",
        "Line" : 4924,
        "CharPositionInLine" : 0
      },
      "329" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 4930,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 330,
      "Errorlog" : "line 3683:41 token recognition error at: '\\1'\nline 3683:47 token recognition error at: '\\1'\n"
    },
    "c_cpp/etc/calc/cal/Makefile" : {
      "ObjectId" : "6e23b45460efad2ad149ffeaff03da6f7eca7188",
      "LastModified" : "2017-08-21T14:30:11Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#!/bin/make\n\n#\n\n# cal - makefile for calc standard resource files\n\n#\n\n# Copyright (C) 1999-2006  Landon Curt Noll\n\n#\n\n# Calc is open software; you can redistribute it and/or modify it under\n\n# the terms of the version 2.1 of the GNU Lesser General Public License\n\n# as published by the Free Software Foundation.\n\n#\n\n# Calc is distributed in the hope that it will be useful, but WITHOUT\n\n# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE.\tSee the GNU Lesser General\n\n# Public License for more details.\n\n#\n\n# A copy of version 2.1 of the GNU Lesser General Public License is\n\n# distributed with calc under the filename COPYING-LGPL.  You should have\n\n# received a copy with calc; if not, write to Free Software Foundation, Inc.\n\n# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n\n#\n\n# @(#) $Revision: 30.7 $\n\n# @(#) $Id: Makefile,v 30.7 2013/08/11 09:07:26 chongo Exp $\n\n# @(#) $Source: /usr/local/src/bin/calc/cal/RCS/Makefile,v $\n\n#\n\n# Under source code control:\t1991/07/21 05:00:54\n\n# File existed as early as:\t1991\n\n#\n\n# chongo <was here> /\\oo/\\\thttp://www.isthe.com/chongo/\n\n# Share and enjoy!  :-) http://www.isthe.com/chongo/tech/comp/calc/\n\n#\n\n# calculator by David I. Bell with help/mods from others\n\n# Makefile by Landon Curt Noll\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# required vars\n\n#\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "####\n\n# Normally, the upper level makefile will set these values.  We provide\n\n# a default here just in case you want to build from this directory.\n\n####\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Normally certain files depend on the Makefile.  If the Makefile is\n\n# changed, then certain steps should be redone.  If MAKE_FILE is\n\n# set to Makefile, then these files will depend on Makefile.  If\n\n# MAKE_FILE is empty, then they wont.\n\n#\n\n# If in doubt, set MAKE_FILE to Makefile\n\n#\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Controlling file makefile basename (without the path)\n\n#\n\n# This is the basename same of the makefile that may/does/will drive\n\n# this makefile.\n\n#\n\n# If in doubt, set TOP_MAKE_FILE to Makefile\n\n#\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Where the system include (.h) files are kept\n\n#\n\n# For DJGPP, select:\n\n#\n\n#\tINCDIR= /dev/env/DJDIR/include\n\n#\n\n# If in doubt, set:\n\n#\n\n#\tINCDIR= /usr/include\n\n#\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#INCDIR= /usr/local/include\n\n#INCDIR= /dev/env/DJDIR/include\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# where to install calc realted things\n\n#\n\n# ${BINDIR}\t\twhere to install calc binary files\n\n# ${LIBDIR}\t\twhere calc link library (*.a) files are installed\n\n# ${CALC_SHAREDIR}\twhere to install calc help, .cal, startup, config files\n\n#\n\n# NOTE: The install rule prepends installation paths with ${T}, which\n\n#\tby default is empty.  If ${T} is non-empty, then installation\n\n#\tlocations will be relative to the ${T} directory.\n\n#\n\n# For DJGPP, select:\n\n#\n\n#\tBINDIR= /dev/env/DJDIR/bin\n\n#\tLIBDIR= /dev/env/DJDIR/lib\n\n#\tCALC_SHAREDIR= /dev/env/DJDIR/share/calc\n\n#\n\n# If in doubt, set:\n\n#\n\n#\tBINDIR= /usr/bin\n\n#\tLIBDIR= /usr/lib\n\n#\tCALC_SHAREDIR= /usr/share/calc\n\n#\n\n#BINDIR= /usr/local/bin\n\n#BINDIR= /dev/env/DJDIR/bin\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#LIBDIR= /usr/local/lib\n\n#LIBDIR= /dev/env/DJDIR/lib\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#CALC_SHAREDIR= /usr/local/lib/calc\n\n#CALC_SHAREDIR= /dev/env/DJDIR/share/calc\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# By default, these values are based CALC_SHAREDIR, INCDIR, BINDIR\n\n# ---------------------------------------------------------------\n\n# ${HELPDIR}\t\twhere the help directory is installed\n\n# ${CALC_INCDIR}\twhere the calc include files are installed\n\n# ${SCRIPTDIR}\t\twhere calc shell scripts are installed\n\n#\n\n# NOTE: The install rule prepends installation paths with ${T}, which\n\n#\tby default is empty.  If ${T} is non-empty, then installation\n\n#\tlocations will be relative to the ${T} directory.\n\n#\n\n# If in doubt, set:\n\n#\n\n#\tHELPDIR= ${CALC_SHAREDIR}/help\n\n#\tCALC_INCDIR= ${INCDIR}/calc\n\n#\tSCRIPTDIR= ${BINDIR}/cscript\n\n#\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# T - top level directory under which calc will be installed\n\n#\n\n# The calc install is performed under ${T}, the calc build is\n\n# performed under /.\tThe purpose for ${T} is to allow someone\n\n# to install calc somewhere other than into the system area.\n\n#\n\n# For example, if:\n\n#\n\n#     BINDIR= /usr/bin\n\n#     LIBDIR= /usr/lib\n\n#     CALC_SHAREDIR= /usr/share/calc\n\n#\n\n# and if:\n\n#\n\n#     T= /var/tmp/testing\n\n#\n\n# Then the installation locations will be:\n\n#\n\n#     calc binary files:\t/var/tmp/testing/usr/bin\n\n#     calc link library:\t/var/tmp/testing/usr/lib\n\n#     calc help, .cal ...:\t/var/tmp/testing/usr/share/calc\n\n#     ... etc ...\t\t/var/tmp/testing/...\n\n#\n\n# If ${T} is empty, calc is installed under /, which is the same\n\n# top of tree for which it was built.  If ${T} is non-empty, then\n\n# calc is installed under ${T}, as if one had to chroot under\n\n# ${T} for calc to operate.\n\n#\n\n# If in doubt, use T=\n\n#\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Makefile debug\n\n#\n\n# Q=@\tdo not echo internal makefile actions (quiet mode)\n\n# Q=\techo internal makefile actions (debug / verbose mode)\n\n#\n\n#Q=\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# standard tools\n\n#\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# The calc files to install\n\n#\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# These files are found (but not built) in the distribution\n\n#\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# These files are used to make (but not built) a calc .a link library\n\n#\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# used by the upper level Makefile to determine of we have done all\n\n#\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "##\n\n#\n\n# File list generation.\t You can ignore this section.\n\n#\n\n#\n\n# We will form the names of source files as if they were in a\n\n# sub-directory called calc/cal.\n\n#\n\n# NOTE: Due to bogus shells found on one common system we must have\n\n#\tan non-emoty else clause for every if condition.  *sigh*\n\n#\n\n##\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "##\n\n#\n\n# rpm rules\n\n#\n\n##\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "##\n\n#\n\n# Utility rules\n\n#\n\n##\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# install everything\n\n#\n\n# NOTE: Keep the uninstall rule in reverse order to the install rule\n\n#\n",
        "Line" : 271,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Try to remove everything that was installed\n\n#\n\n# NOTE: Keep the uninstall rule in reverse order to the install rule\n\n#\n",
        "Line" : 303,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "c_cpp/etc/calc/cscript/Makefile" : {
      "ObjectId" : "9a75550363c0c7bb2df8f41502da5c0ae17967d3",
      "LastModified" : "2017-08-21T14:30:11Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# cscript - makefile for calc shell script files\n\n#\n\n# Copyright (C) 1999-2006  Landon Curt Noll\n\n#\n\n# Calc is open software; you can redistribute it and/or modify it under\n\n# the terms of the version 2.1 of the GNU Lesser General Public License\n\n# as published by the Free Software Foundation.\n\n#\n\n# Calc is distributed in the hope that it will be useful, but WITHOUT\n\n# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE.\tSee the GNU Lesser General\n\n# Public License for more details.\n\n#\n\n# A copy of version 2.1 of the GNU Lesser General Public License is\n\n# distributed with calc under the filename COPYING-LGPL.  You should have\n\n# received a copy with calc; if not, write to Free Software Foundation, Inc.\n\n# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n\n#\n\n# @(#) $Revision: 30.4 $\n\n# @(#) $Id: Makefile,v 30.4 2013/08/11 08:41:38 chongo Exp $\n\n# @(#) $Source: /usr/local/src/bin/calc/cscript/RCS/Makefile,v $\n\n#\n\n# Under source code control:\t1999/11/29 11:10:26\n\n# File existed as early as:\t1999\n\n#\n\n# chongo <was here> /\\oo/\\\thttp://www.isthe.com/chongo/\n\n# Share and enjoy!  :-) http://www.isthe.com/chongo/tech/comp/calc/\n\n#\n\n# calculator by David I. Bell with help/mods from others\n\n# Makefile by Landon Curt Noll\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# required vars\n\n#\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "####\n\n# Normally, the upper level makefile will set these values.  We provide\n\n# a default here just in case you want to build from this directory.\n\n####\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Normally certain files depend on the Makefile.  If the Makefile is\n\n# changed, then certain steps should be redone.  If MAKE_FILE is\n\n# set to Makefile, then these files will depend on Makefile.  If\n\n# MAKE_FILE is empty, then they wont.\n\n#\n\n# If in doubt, set MAKE_FILE to Makefile\n\n#\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Controlling file makefile basename (without the path)\n\n#\n\n# This is the basename same of the makefile that may/does/will drive\n\n# this makefile.\n\n#\n\n# If in doubt, set TOP_MAKE_FILE to Makefile\n\n#\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Where the system include (.h) files are kept\n\n#\n\n# For DJGPP, select:\n\n#\n\n#\tINCDIR= /dev/env/DJDIR/include\n\n#\n\n# If in doubt, set:\n\n#\n\n#\tINCDIR= /usr/include\n\n#\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#INCDIR= /usr/local/include\n\n#INCDIR= /dev/env/DJDIR/include\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# where to install calc realted things\n\n#\n\n# ${BINDIR}\t\twhere to install calc binary files\n\n# ${LIBDIR}\t\twhere calc link library (*.a) files are installed\n\n# ${CALC_SHAREDIR}\twhere to install calc help, .cal, startup, config files\n\n#\n\n# NOTE: The install rule prepends installation paths with ${T}, which\n\n#\tby default is empty.  If ${T} is non-empty, then installation\n\n#\tlocations will be relative to the ${T} directory.\n\n#\n\n# For DJGPP, select:\n\n#\n\n#\tBINDIR= /dev/env/DJDIR/bin\n\n#\tLIBDIR= /dev/env/DJDIR/lib\n\n#\tCALC_SHAREDIR= /dev/env/DJDIR/share/calc\n\n#\n\n# If in doubt, set:\n\n#\n\n#\tBINDIR= /usr/bin\n\n#\tLIBDIR= /usr/lib\n\n#\tCALC_SHAREDIR= /usr/share/calc\n\n#\n\n#BINDIR= /usr/local/bin\n\n#BINDIR= /dev/env/DJDIR/bin\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#LIBDIR= /usr/local/lib\n\n#LIBDIR= /dev/env/DJDIR/lib\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#CALC_SHAREDIR= /usr/local/lib/calc\n\n#CALC_SHAREDIR= /dev/env/DJDIR/share/calc\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# By default, these values are based CALC_SHAREDIR, INCDIR, BINDIR\n\n# ---------------------------------------------------------------\n\n# ${HELPDIR}\t\twhere the help directory is installed\n\n# ${CALC_INCDIR}\twhere the calc include files are installed\n\n# ${SCRIPTDIR}\t\twhere calc shell scripts are installed\n\n#\n\n# NOTE: The install rule prepends installation paths with ${T}, which\n\n#\tby default is empty.  If ${T} is non-empty, then installation\n\n#\tlocations will be relative to the ${T} directory.\n\n#\n\n# If in doubt, set:\n\n#\n\n#\tHELPDIR= ${CALC_SHAREDIR}/help\n\n#\tCALC_INCDIR= ${INCDIR}/calc\n\n#\tSCRIPTDIR= ${BINDIR}/cscript\n\n#\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# T - top level directory under which calc will be installed\n\n#\n\n# The calc install is performed under ${T}, the calc build is\n\n# performed under /.\tThe purpose for ${T} is to allow someone\n\n# to install calc somewhere other than into the system area.\n\n#\n\n# For example, if:\n\n#\n\n#     BINDIR= /usr/bin\n\n#     LIBDIR= /usr/lib\n\n#     CALC_SHAREDIR= /usr/share/calc\n\n#\n\n# and if:\n\n#\n\n#     T= /var/tmp/testing\n\n#\n\n# Then the installation locations will be:\n\n#\n\n#     calc binary files:\t/var/tmp/testing/usr/bin\n\n#     calc link library:\t/var/tmp/testing/usr/lib\n\n#     calc help, .cal ...:\t/var/tmp/testing/usr/share/calc\n\n#     ... etc ...\t\t/var/tmp/testing/...\n\n#\n\n# If ${T} is empty, calc is installed under /, which is the same\n\n# top of tree for which it was built.  If ${T} is non-empty, then\n\n# calc is installed under ${T}, as if one had to chroot under\n\n# ${T} for calc to operate.\n\n#\n\n# If in doubt, use T=\n\n#\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Makefile debug\n\n#\n\n# Q=@\tdo not echo internal makefile actions (quiet mode)\n\n# Q=\techo internal makefile actions (debug / verbose mode)\n\n#\n\n#Q=\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# standard tools\n\n#\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# The ${SCRIPT} list is the list of calc shell script files (without the .calc\n\n# extension) which will be installed.\n\n#\n\n# The ${SCRIPT_SRC} is built from ${SCRIPT} and has the .calc extensions.\n\n#\n\n# This list is produced by the detaillist rule when no WARNINGS are detected.\n\n# To add a script:\n\n#\n\n#\t1) Name the file with a .calc filename extension\n\n#\t2) Place that file under RCS control\n\n#\t3) Add the name, without the .calc extension to the ${SCRIPT} below\n\n#\t4) Write out this Makefile\n\n#\t5) Replace the ${SCRIPT} and ${SCRIPT_SRC} lines with the output of:\n\n#\n\n#\t\tmake detaillist\n\n#\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# These files are found (but not built) in the distribution\n\n#\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# These files are used to make (but not build) a calc .a library\n\n#\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# complete list of targets\n\n#\n\n# NOTE: This list MUST be coordinated with the ${CSCRIPT_TARGETS} variable\n\n#\tin the upper level ../Makefile\n\n#\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# The reason for this Makefile\n\n#\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# used by the upper level Makefile to determine if we have done all\n\n#\n\n# NOTE: Due to bogus shells found on one common system we must have\n\n#\ta non-empty else clause for every if condition.  *sigh*\n\n#\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "##\n\n#\n\n# File list generation.\t You can ignore this section.\n\n#\n\n#\n\n# We will form the names of source files as if they were in a\n\n# sub-directory called calc/cscript.\n\n#\n\n##\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# These next rule help me form the ${SCRIPT} and ${SCRIPT_SRC} makefile\n\n# variables above.\n\n#\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "##\n\n#\n\n# Home grown make dependency rules.  Your system make not support\n\n# or have the needed tools.  You can ignore this section.\n\n#\n\n# We will form a skelaton tree of *.c files containing only #include \"foo.h\"\n\n# lines and .h files containing the same lines surrounded by multiple include\n\n# prevention lines.  This allows us to build a static depend list that will\n\n# satisfy all possible cpp symbol definition combinations.\n\n#\n\n##\n",
        "Line" : 293,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "##\n\n#\n\n# rpm rules\n\n#\n\n##\n",
        "Line" : 350,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##\n\n#\n\n# Utility rules\n\n#\n\n##\n",
        "Line" : 363,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# install everything\n\n#\n\n# NOTE: Keep the uninstall rule in reverse order to the install rule\n\n#\n",
        "Line" : 376,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Try to remove everything that was installed\n\n#\n\n# NOTE: Keep the uninstall rule in reverse order to the install rule\n\n#\n",
        "Line" : 420,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 445,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 28
    },
    "c_cpp/etc/calc/custom/Makefile" : {
      "ObjectId" : "73594fc6db33de5024d10a39240e34aebbd8e71d",
      "LastModified" : "2017-08-21T14:30:11Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#!/bin/make\n\n#\n\n# custom - makefile for calc custom routines\n\n#\n\n# Copyright (C) 1999-2006  Landon Curt Noll\n\n#\n\n# Calc is open software; you can redistribute it and/or modify it under\n\n# the terms of the version 2.1 of the GNU Lesser General Public License\n\n# as published by the Free Software Foundation.\n\n#\n\n# Calc is distributed in the hope that it will be useful, but WITHOUT\n\n# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE.\tSee the GNU Lesser General\n\n# Public License for more details.\n\n#\n\n# A copy of version 2.1 of the GNU Lesser General Public License is\n\n# distributed with calc under the filename COPYING-LGPL.  You should have\n\n# received a copy with calc; if not, write to Free Software Foundation, Inc.\n\n# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n\n#\n\n# @(#) $Revision: 30.28 $\n\n# @(#) $Id: Makefile.head,v 30.28 2013/08/11 05:40:18 chongo Exp $\n\n# @(#) $Source: /usr/local/src/cmd/calc/custom/RCS/Makefile.head,v $\n\n#\n\n# Under source code control:\t1997/03/09 02:28:54\n\n# File existed as early as:\t1997\n\n#\n\n# chongo <was here> /\\oo/\\\thttp://www.isthe.com/chongo/\n\n# Share and enjoy!  :-) http://www.isthe.com/chongo/tech/comp/calc/\n\n#\n\n# calculator by David I. Bell with help/mods from others\n\n# Makefile by Landon Curt Noll\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#if 0\t/* start of skip for non-Gnu makefiles */\n\n##############################################################################\n\n#-=-=-=-=-=-=-=-=- Identify the target machine, if possible -=-=-=-=-=-=-=-=-#\n\n##############################################################################\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# NOTE: You can force a target value by defining target as in:\n\n#\n\n#\tmake ...__optional_arguments_... target=value\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Try uname -s if the target was not alreadhy set on the make command line\n\n#\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#endif\t/* end of skip for non-Gnu makefiles */\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "##############################################################################\n\n#-=-=-=-=-=-=-=-=- You may want to change some values below -=-=-=-=-=-=-=-=-#\n\n##############################################################################\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The custom calc resource files to install\n\n#\n\n# Put your custom calc resource files here.\n\n#\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# The custom help files to install\n\n#\n\n# Put your custom help files here.\n\n#\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Any .h files that are needed by programs that use\n\n# libcustcalc${LIB_EXT_VERSION}\n\n#\n\n# Put any .h files that you add which might be useful to other\n\n# programs here.\n\n#\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Any .c files that are needed to build libcustcalc${LIB_EXT_VERSION}.\n\n#\n\n# Don't put ${REQUIRED_SRC} files in this list.\n\n#\n\n# There MUST be a .c in CUSTOM_SRC for every .o in CUSTOM_OBJ.\n\n#\n\n# Put your custom .c files here.\n\n#\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Any .o files that are needed by program that use\n\n# libcustcalc${LIB_EXT_VERSION}.\n\n#\n\n# Don't put ${REQUIRED_OBJ} files in this list.\n\n#\n\n# There MUST be a .c in CUSTOM_SRC for every .o in CUSTOM_OBJ.\n\n#\n\n# Put your custom .o files here.\n\n#\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\n\n#-=-=-=-=-=-=- Defaults in case you want to build from this dir -=-=-=-=-=-=-#\n\n##############################################################################\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Normally, the upper level makefile will set these values.  We provide\n\n# a default here just in case you want to build from this directory.\n\n#\n\n# Makefile debug\n\n#\n\n# Q=@\tdo not echo internal makefile actions (quiet mode)\n\n# Q=\techo internal makefile actions (debug / verbose mode)\n\n#\n\n#Q=\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "####\n\n# Normally, the upper level makefile will set these values.  We provide\n\n# a default here just in case you want to build from this directory.\n\n####\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Where the system include (.h) files are kept\n\n#\n\n# For DJGPP, select:\n\n#\n\n#\tINCDIR= /dev/env/DJDIR/include\n\n#\n\n# If in doubt, set:\n\n#\n\n#\tINCDIR= /usr/include\n\n#\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#INCDIR= /usr/local/include\n\n#INCDIR= /dev/env/DJDIR/include\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# where to install calc realted things\n\n#\n\n# ${BINDIR}\t\twhere to install calc binary files\n\n# ${LIBDIR}\t\twhere calc link library (*.a) files are installed\n\n# ${CALC_SHAREDIR}\twhere to install calc help, .cal, startup, config files\n\n#\n\n# NOTE: The install rule prepends installation paths with ${T}, which\n\n#\tby default is empty.  If ${T} is non-empty, then installation\n\n#\tlocations will be relative to the ${T} directory.\n\n#\n\n# For DJGPP, select:\n\n#\n\n#\tBINDIR= /dev/env/DJDIR/bin\n\n#\tLIBDIR= /dev/env/DJDIR/lib\n\n#\tCALC_SHAREDIR= /dev/env/DJDIR/share/calc\n\n#\n\n# If in doubt, set:\n\n#\n\n#\tBINDIR= /usr/bin\n\n#\tLIBDIR= /usr/lib\n\n#\tCALC_SHAREDIR= /usr/share/calc\n\n#\n\n#BINDIR= /usr/local/bin\n\n#BINDIR= /dev/env/DJDIR/bin\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#LIBDIR= /usr/local/lib\n\n#LIBDIR= /dev/env/DJDIR/lib\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#CALC_SHAREDIR= /usr/local/lib/calc\n\n#CALC_SHAREDIR= /dev/env/DJDIR/share/calc\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# By default, these values are based CALC_SHAREDIR, INCDIR, BINDIR\n\n# ---------------------------------------------------------------\n\n# ${HELPDIR}\t\twhere the help directory is installed\n\n# ${CALC_INCDIR}\twhere the calc include files are installed\n\n# ${CUSTOMCALDIR}\twhere custom *.cal files are installed\n\n# ${CUSTOMHELPDIR}\twhere custom help files are installed\n\n# ${CUSTOMINCDIR}\twhere custom .h files are installed\n\n# ${SCRIPTDIR}\t\twhere calc shell scripts are installed\n\n#\n\n# NOTE: The install rule prepends installation paths with ${T}, which\n\n#\tby default is empty.  If ${T} is non-empty, then installation\n\n#\tlocations will be relative to the ${T} directory.\n\n#\n\n# If in doubt, set:\n\n#\n\n#\tHELPDIR= ${CALC_SHAREDIR}/help\n\n#\tCALC_INCDIR= ${INCDIR}/calc\n\n#\tCUSTOMCALDIR= ${CALC_SHAREDIR}/custom\n\n#\tCUSTOMHELPDIR= ${CALC_SHAREDIR}/custhelp\n\n#\tCUSTOMINCDIR= ${CALC_INCDIR}/custom\n\n#\tSCRIPTDIR= ${BINDIR}/cscript\n\n#\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# T - top level directory under which calc will be installed\n\n#\n\n# The calc install is performed under ${T}, the calc build is\n\n# performed under /.\tThe purpose for ${T} is to allow someone\n\n# to install calc somewhere other than into the system area.\n\n#\n\n# For example, if:\n\n#\n\n#     BINDIR= /usr/bin\n\n#     LIBDIR= /usr/lib\n\n#     CALC_SHAREDIR= /usr/share/calc\n\n#\n\n# and if:\n\n#\n\n#     T= /var/tmp/testing\n\n#\n\n# Then the installation locations will be:\n\n#\n\n#     calc binary files:\t/var/tmp/testing/usr/bin\n\n#     calc link library:\t/var/tmp/testing/usr/lib\n\n#     calc help, .cal ...:\t/var/tmp/testing/usr/share/calc\n\n#     ... etc ...\t\t/var/tmp/testing/...\n\n#\n\n# If ${T} is empty, calc is installed under /, which is the same\n\n# top of tree for which it was built.  If ${T} is non-empty, then\n\n# calc is installed under ${T}, as if one had to chroot under\n\n# ${T} for calc to operate.\n\n#\n\n# If in doubt, use T=\n\n#\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Debug/Optimize options for ${CC} and ${LCC}\n\n#\n\n# Select DEBUG= -O2 -gstabs+ -DWINDOZ for DJGPP.\n\n#\n\n#DEBUG=\n\n#\n\n#DEBUG= -O\n\n#DEBUG= -O -g\n\n#DEBUG= -O -g3\n\n#\n\n#DEBUG= -O1\n\n#DEBUG= -O1 -g\n\n#DEBUG= -O1 -g3\n\n#\n\n#DEBUG= -O2\n\n#DEBUG= -O2 -g\n\n#DEBUG= -O2 -g3\n\n#DEBUG= -O2 -ipa\n\n#DEBUG= -O2 -g3 -ipa\n\n#\n\n#DEBUG= -O3\n\n#DEBUG= -O3 -g\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#DEBUG= -O3 -ipa\n\n#DEBUG= -O3 -g3 -ipa\n\n#\n\n#DEBUG= -g\n\n#DEBUG= -g3\n\n#DEBUG= -gx\n\n#DEBUG= -WM,-g\n\n#\n\n#DEBUG= -O2 -gstabs+ -DWINDOZ\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Some systems require one to use ranlib to add a symbol table to\n\n# a *.a link library.  Set RANLIB to the utility that performs this\n\n# action.  Set RANLIB to : if your system does not need such a utility.\n\n#\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#RANLIB=:\n",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Normally certain files depend on the Makefile.  If the Makefile is\n\n# changed, then certain steps should be redone.\t If MAKE_FILE is\n\n# set to Makefile, then these files will depend on Makefile.  If\n\n# MAKE_FILE is empty, then they wont.\n\n#\n\n# If in doubt, set MAKE_FILE to Makefile\n\n#\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#MAKE_FILE=\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Controlling file makefile basename (without the path)\n\n#\n\n# This is the basename same of the makefile that may/does/will drive\n\n# this makefile.\n\n#\n\n# If in doubt, set TOP_MAKE_FILE to Makefile\n\n#\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# If you do not wish to use purify, set PURIFY to an empty string.\n\n#\n\n# If in doubt, use PURIFY=\n\n#\n\n#PURIFY= purify\n\n#PURIFY= purify -m71-engine\n\n#PURIFY= purify -logfile=pure.out\n\n#PURIFY= purify -m71-engine -logfile=pure.out\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# If you want to use a debugging link library such as a malloc debug link\n\n# library, or need to add special ld flags after the calc link libraries\n\n# are included, set ${LD_DEBUG} below.\n\n#\n\n# If in doubt, set LD_DEBUG to empty.\n\n#\n\n#LD_DEBUG= -lmalloc_cv\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# When doing a:\n\n#\n\n#\tmake check\n\n#\tmake chk\n\n#\tmake debug\n\n#\n\n# the ${CALC_ENV} is used to supply the proper environment variables\n\n# to calc.  Most people will simply need 'CALCPATH=./cal' to ensure\n\n# that these debug rules will only use calc resource files under the\n\n# local source directory.  The longer lines (with MALLOC_VERBOSE=1 ...)\n\n# are useful for SGI IRIX people who have 'WorkShop Performance Tools'\n\n# and who also set 'LD_DEBUG= -lmalloc_cv' above.\n\n#\n\n# If in doubt, use CALC_ENV= CALCPATH=./cal.\n\n#\n",
        "Line" : 305,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#CALC_ENV= CALCPATH=./cal MALLOC_VERBOSE=1 MALLOC_TRACING=1 \\\n#\t  MALLOC_FASTCHK=1 MALLOC_FULLWARN=1\n",
        "Line" : 321,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#CALC_ENV= CALCPATH=./cal MALLOC_VERBOSE=1 MALLOC_TRACING=1 \\\n#\t  MALLOC_FASTCHK=1 MALLOC_FULLWARN=1 MALLOC_CLEAR_FREE=1 \\\n#\t  MALLOC_CLEAR_MALLOC=1\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# By default, custom builtin functions may only be executed if calc\n\n# is given the -C option.  This is because custom builtin functions\n\n# may invoke non-standard or non-portable code.\t One may completely\n\n# disable custom builtin functions by not compiling any of code\n\n#\n\n# ALLOW_CUSTOM= -DCUSTOM\t# allow custom only if -C is given\n\n# ALLOW_CUSTOM=\t\t\t# disable custom even if -C is given\n\n#\n\n# If in doubt, use ALLOW_CUSTOM= -DCUSTOM\n\n#\n",
        "Line" : 327,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#ALLOW_CUSTOM=\n",
        "Line" : 338,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# The install rule uses:\n\n#\n\n#\t${MKDIR} ${MKDIR_ARG}\n\n#\n\n# to create directorties.  Normall this amounts to usins mkdir -p dir ...\n\n# Some older systems may not have mkdir -p.  If you system does not\n\n# make mkdir -p, then set MKDIR_ARG to empty.\n\n#\n\n# MKDIR_ARG= -p\t\t\t# use mkdir -p when creating paths\n\n# MKDIR_ARG=\t\t\t# use if system does not understand mkdir -p\n\n#\n",
        "Line" : 340,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#MKDIR_ARG=\n",
        "Line" : 352,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Some out of date operating systems require / want an executable to\n\n# end with a certain file extension.  Some compile systems such as\n\n# Cygwin build calc as calc.exe.  The EXT variable is used to denote\n\n# the extension required by such.\n\n#\n\n# EXT=\t\t\t\t# normal Un*x / Linux / GNU/Linux systems\n\n# EXT=.exe\t\t\t# windoz / Cygwin\n\n#\n\n# If in doubt, use EXT=\n\n#\n",
        "Line" : 354,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#EXT=.exe\n",
        "Line" : 365,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# The default calc versions\n\n#\n",
        "Line" : 367,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Names of shared libraries with versions\n\n#\n",
        "Line" : 374,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# standard tools\n\n#\n",
        "Line" : 382,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# EXTRA_CFLAGS are flags given to ${CC} when compiling C files\n\n# EXTRA_LDFLAGS are flags given to ${CC} when linking progs\n\n#\n\n# Both CFLAGS and LDFLAGS are left blank in this Makefile by\n\n# default so that users may use them on the make command line\n\n# to always the way that C is compiled and files are linked\n\n# respectively.  For example:\n\n#\n\n#\tmake all EXTRA_CFLAGS=\"-DMAGIC\" EXTRA_LDFLAGS=\"-lmagic\"\n\n#\n\n# NOTE: These should be left blank in this Makefile to make it\n\n#       easier to add stuff on the command line.  If you want to\n\n#\tto change the way calc is compiled by this Makefile, change\n\n#\tthe appropirate host target section below or a flag above.\n\n#\n",
        "Line" : 405,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# COMMON_CFLAGS are the common ${CC} flags used for all progs, both\n\n#\t    intermediate and final calc and calc related progs\n\n#\n",
        "Line" : 423,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# COMMON_LDFLAGS are the common flags used for linking all progs, both\n\n#\t     intermediate and final calc and calc related progs\n\n#\n",
        "Line" : 428,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "###########################################\n\n# Set the default compile flags for ${CC} #\n\n###########################################\n",
        "Line" : 433,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#if 0\t/* start of skip for non-Gnu makefiles */\n",
        "Line" : 437,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Required flags to compile C files for calc\n\n#\n\n# ICFLAGS are given to ${CC} for intermediate progs used to help compile calc\n\n# CFLAGS are given to ${CC} for calc progs other than intermediate progs\n\n#\n\n# NOTE: This does not work for: make-XYZ-only and BLD_TYPE != make-XYZ-only\n\n#\n",
        "Line" : 439,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# Required flags to link files for calc\n\n#\n\n# ILDFLAGS for ${CC} in linking intermediate progs used to help compile calc\n\n# LDFLAGS for ${CC} in linking calc progs other than intermediate progs\n\n#\n",
        "Line" : 453,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "#endif\t/* end of skip for non-Gnu makefiles */\n\n# start of host target cut - Do not remove this line\n\n##############################################################################\n\n#-=-=-=-=-=- host target section - targets that override defaults -=-=-=-=-=-#\n\n##############################################################################\n",
        "Line" : 461,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Common values set in targets\n\n#\n\n# BLD_TYPE determines if calc is built with static and/or dynamic libs.\n\n#\t       Set this value to one of:\n\n#\n\n#\tBLD_TYPE= calc-dynamic-only\n\n#\tBLD_TYPE= calc-static-only\n\n#\n\n# CC_SHARE are flags given to ${CC} to build .o files suitable for shared libs\n\n# DEFAULT_LIB_INSTALL_PATH is where calc progs look for calc shared libs\n\n# LD_SHARE are common flags given to ${CC} to link with shared libraries\n\n# LIBCALC_SHLIB are flags given to ${CC} to build libcalc shared lib\n\n# LIBCUSTCALC_SHLIB are flags given to ${CC} to build libcustcalc shared lib\n\n#\n\n#\tNOTE: The above 4 values are unused if BLD_TYPE= calc-static-only\n\n#\n\n# CC_STATIC are flags given to ${CC} to build .o files suitable for static libs\n\n# LD_STATIC are common flags given to ${CC} to link with static libraries\n\n# LIBCALC_STATIC are flags given to ${CC} to build libcalc static lib\n\n# LIBCUSTCALC_STATIC are flags given to ${CC} to build libcustcalc static lib\n\n#\n\n#\tNOTE: The above 4 values are unused if BLD_TYPE= calc-dynamic-only\n\n#\n\n# CCOPT are flags given to ${CC} for optimization\n\n# CCWARN are flags given to ${CC} for warning message control\n\n# CCWERR are flags given to ${CC} to make warnings fatal errors\n\n#\tNOTE: CCWERR is only set in development Makefiles and must only be\n\n#\t      used with ${CC}, not ${LCC}.  If you do not want the compiler\n\n#\t      to abort on warnings, then leave CCWERR blank.\n\n# CCMISC are misc flags given to ${CC}\n\n#\n\n# LCC how the C compiler is invoked on locally executed intermediate progs\n\n# CC is how the C compiler is invoked (with an optional Purify)\n\n#\n\n# Specific target overrides or modifications to default values\n",
        "Line" : 467,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "##########################################################################\n\n# NOTE: If your target is not supported below and the default target\t #\n\n#\tis not suitable for your needs, please send to the:\t\t #\n\n#\t\t\t\t\t\t\t\t\t #\n\n#\t\tcalc-contrib at asthe dot com\t\t\t\t #\n\n#\t\t\t\t\t\t\t\t\t #\n\n#\tEMail address an \"ifeq ($(target),YOUR_TARGET_NAME)\" ... \"endif\" #\n\n#\tset of lines so that we can consider them for the next release.  #\n\n##########################################################################\n",
        "Line" : 503,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "#if 0\t/* start of skip for non-Gnu makefiles */\n\n################\n\n# Linux target #\n\n################\n",
        "Line" : 513,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "#\n",
        "Line" : 519,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "#\n",
        "Line" : 521,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "#\n",
        "Line" : 532,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "#\n",
        "Line" : 537,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "#\n",
        "Line" : 542,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "#\n",
        "Line" : 545,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "#################################\n\n# Apple MacOS X / Darwin target #\n\n#################################\n",
        "Line" : 548,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "#\n",
        "Line" : 553,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "#\n",
        "Line" : 555,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "#\n",
        "Line" : 565,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "#\n",
        "Line" : 570,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "#\n",
        "Line" : 575,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "#\n\n# Darmin dynamic shared lib filenames\n",
        "Line" : 578,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# LDCONFIG not required on this platform, so we redefine it to an empty string\n",
        "Line" : 585,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# DARWIN_ARCH= -arch i386 -arch ppc\t# Universal binary\n\n# DARWIN_ARCH= -arch i386\t\t# Intel binary\n\n# DARWIN_ARCH= -arch ppc\t\t# PPC binary\n",
        "Line" : 587,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# native binary\n",
        "Line" : 590,
        "CharPositionInLine" : 16
      },
      "69" : {
        "Text" : "#\n",
        "Line" : 592,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "##################\n\n# FreeBSD target #\n\n##################\n",
        "Line" : 595,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "########################################################################\n\n# NOTE: You MUST either use gmake (GNU Make) or you must try your luck #\n\n#       with Makefile.simple and custom/Makefile.simple versions.      #\n\n#\tSee HOWTO.INSTALL for more information.                        #\n\n########################################################################\n",
        "Line" : 599,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "#\n",
        "Line" : 606,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "#\n",
        "Line" : 608,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "#\n",
        "Line" : 619,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "#\n",
        "Line" : 624,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "#\n",
        "Line" : 629,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "#\n",
        "Line" : 632,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "#\n",
        "Line" : 634,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "##################\n\n# OpenBSD target #\n\n##################\n",
        "Line" : 637,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "########################################################################\n\n# NOTE: You MUST either use gmake (GNU Make) or you must try your luck #\n\n#       with Makefile.simple and custom/Makefile.simple versions.      #\n\n#\tSee HOWTO.INSTALL for more information.                        #\n\n########################################################################\n",
        "Line" : 641,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "#\n",
        "Line" : 648,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "#\n",
        "Line" : 650,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "#\n",
        "Line" : 661,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "#\n",
        "Line" : 666,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "#\n",
        "Line" : 671,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "#\n",
        "Line" : 674,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "#\n",
        "Line" : 676,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "################\n\n# SunOS target #\n\n################\n",
        "Line" : 679,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# XXX - this needs to be tested\n",
        "Line" : 683,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "#\n",
        "Line" : 685,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "#\n",
        "Line" : 687,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "#\n",
        "Line" : 698,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "#\n",
        "Line" : 703,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "#\n",
        "Line" : 708,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "#\n",
        "Line" : 711,
        "CharPositionInLine" : 0
      },
      "96" : {
        "Text" : "#################\n\n# Cygwin target #\n\n#################\n",
        "Line" : 714,
        "CharPositionInLine" : 0
      },
      "97" : {
        "Text" : "#\n",
        "Line" : 719,
        "CharPositionInLine" : 0
      },
      "98" : {
        "Text" : "#\n",
        "Line" : 721,
        "CharPositionInLine" : 0
      },
      "99" : {
        "Text" : "#\n",
        "Line" : 732,
        "CharPositionInLine" : 0
      },
      "100" : {
        "Text" : "#\n",
        "Line" : 737,
        "CharPositionInLine" : 0
      },
      "101" : {
        "Text" : "#\n",
        "Line" : 742,
        "CharPositionInLine" : 0
      },
      "102" : {
        "Text" : "#\n",
        "Line" : 745,
        "CharPositionInLine" : 0
      },
      "103" : {
        "Text" : "#######################################################\n\n# simple target - values used to form Makefile.simple #\n\n#######################################################\n",
        "Line" : 748,
        "CharPositionInLine" : 0
      },
      "104" : {
        "Text" : "# NOTE: This is not a real host target.  The simple target\n\n#\texists only to form the Makefile.simple file.\n",
        "Line" : 752,
        "CharPositionInLine" : 0
      },
      "105" : {
        "Text" : "#endif\t/* end of skip for non-Gnu makefiles */\n\n#\n",
        "Line" : 756,
        "CharPositionInLine" : 0
      },
      "106" : {
        "Text" : "#\n",
        "Line" : 759,
        "CharPositionInLine" : 0
      },
      "107" : {
        "Text" : "#\n",
        "Line" : 766,
        "CharPositionInLine" : 0
      },
      "108" : {
        "Text" : "#\n",
        "Line" : 771,
        "CharPositionInLine" : 0
      },
      "109" : {
        "Text" : "#\n",
        "Line" : 776,
        "CharPositionInLine" : 0
      },
      "110" : {
        "Text" : "#\n\n# The simple makefile forces the use of static ${CC} flags\n\n#\n\n# ICFLAGS are given to ${CC} for intermediate progs used to help compile calc\n\n# CFLAGS are given to ${CC} for calc progs other than intermediate progs\n\n# ILDFLAGS for ${CC} in linking intermediate progs used to help compile calc\n\n# LDFLAGS for ${CC} in linking calc progs other than intermediate progs\n\n#\n",
        "Line" : 779,
        "CharPositionInLine" : 0
      },
      "111" : {
        "Text" : "#\n",
        "Line" : 789,
        "CharPositionInLine" : 0
      },
      "112" : {
        "Text" : "#\n\n#if 0\t/* start of skip for non-Gnu makefiles */\n",
        "Line" : 792,
        "CharPositionInLine" : 0
      },
      "113" : {
        "Text" : "###################################################\n\n# MINGW32_NT-5.0 target                           #\n\n###################################################\n",
        "Line" : 796,
        "CharPositionInLine" : 0
      },
      "114" : {
        "Text" : "#endif\t/* end of skip for non-Gnu makefiles */\n",
        "Line" : 806,
        "CharPositionInLine" : 0
      },
      "115" : {
        "Text" : "#if 0\t/* start of skip for non-Gnu makefiles */\n",
        "Line" : 808,
        "CharPositionInLine" : 0
      },
      "116" : {
        "Text" : "#\n",
        "Line" : 813,
        "CharPositionInLine" : 0
      },
      "117" : {
        "Text" : "#\n",
        "Line" : 815,
        "CharPositionInLine" : 0
      },
      "118" : {
        "Text" : "#\n",
        "Line" : 826,
        "CharPositionInLine" : 0
      },
      "119" : {
        "Text" : "#\n",
        "Line" : 831,
        "CharPositionInLine" : 0
      },
      "120" : {
        "Text" : "#\n",
        "Line" : 836,
        "CharPositionInLine" : 0
      },
      "121" : {
        "Text" : "#\n",
        "Line" : 839,
        "CharPositionInLine" : 0
      },
      "122" : {
        "Text" : "###################################################\n\n# default target - when no specific target exists #\n\n###################################################\n",
        "Line" : 842,
        "CharPositionInLine" : 0
      },
      "123" : {
        "Text" : "# NOTE: This is the default generic host target.  Used when no other\n\n#\thost target matches.\n",
        "Line" : 846,
        "CharPositionInLine" : 0
      },
      "124" : {
        "Text" : "#\n",
        "Line" : 850,
        "CharPositionInLine" : 0
      },
      "125" : {
        "Text" : "#\n",
        "Line" : 852,
        "CharPositionInLine" : 0
      },
      "126" : {
        "Text" : "#\n",
        "Line" : 863,
        "CharPositionInLine" : 0
      },
      "127" : {
        "Text" : "#\n",
        "Line" : 868,
        "CharPositionInLine" : 0
      },
      "128" : {
        "Text" : "#\n",
        "Line" : 873,
        "CharPositionInLine" : 0
      },
      "129" : {
        "Text" : "#\n",
        "Line" : 876,
        "CharPositionInLine" : 0
      },
      "130" : {
        "Text" : "###########################################\n\n# Set the default compile flags for ${CC} #\n\n###########################################\n",
        "Line" : 879,
        "CharPositionInLine" : 0
      },
      "131" : {
        "Text" : "# Required flags to compile C files for calc\n\n#\n\n# ICFLAGS are given to ${CC} for intermediate progs used to help compile calc\n\n# CFLAGS are given to ${CC} for calc progs other than intermediate progs\n\n#\n\n# NOTE: This does not work for: make-XYZ-only and BLD_TYPE != make-XYZ-only\n\n#\n",
        "Line" : 883,
        "CharPositionInLine" : 0
      },
      "132" : {
        "Text" : "# Required flags to link files for calc\n\n#\n\n# ILDFLAGS for ${CC} in linking intermediate progs used to help compile calc\n\n# LDFLAGS for ${CC} in linking calc progs other than intermediate progs\n\n#\n",
        "Line" : 897,
        "CharPositionInLine" : 0
      },
      "133" : {
        "Text" : "#endif\t/* end of skip for non-Gnu makefiles */\n",
        "Line" : 904,
        "CharPositionInLine" : 0
      },
      "134" : {
        "Text" : "#######################################################################\n\n#-=-=-=-=-=- end of target section - only make rules below -=-=-=-=-=-#\n\n#######################################################################\n\n# end of host target cut - Do not remove this line\n\n##############################################################################\n\n#-=-=-=-=-=-=-=-=- Be careful if you change something below -=-=-=-=-=-=-=-=-#\n\n##############################################################################\n",
        "Line" : 906,
        "CharPositionInLine" : 0
      },
      "135" : {
        "Text" : "# These .c files are required for the main custom interface and\n\n# for the custom support functions for libcustcalc${LIB_EXT_VERSION}.\n\n#\n\n# There MUST be a .c for every .o in REQUIRED_OBJ.\n\n#\n",
        "Line" : 914,
        "CharPositionInLine" : 0
      },
      "136" : {
        "Text" : "# These .o files correspond to the .c files in REQUIRED_SRC\n\n# for libcustcalc${LIB_EXT_VERSION}.\n\n#\n\n# There MUST be a .o for every .c in REQUIRED_SRC.\n\n#\n",
        "Line" : 921,
        "CharPositionInLine" : 0
      },
      "137" : {
        "Text" : "# These .h files are installed under ${CUSTOMCALDIR} by the install rule.\n\n#\n",
        "Line" : 928,
        "CharPositionInLine" : 0
      },
      "138" : {
        "Text" : "# These .c files are used to form libcustcalc${LIB_EXT_VERSION}.\n\n#\n",
        "Line" : 932,
        "CharPositionInLine" : 0
      },
      "139" : {
        "Text" : "# These .o files are used to form libcustcalc${LIB_EXT_VERSION}.\n\n#\n",
        "Line" : 936,
        "CharPositionInLine" : 0
      },
      "140" : {
        "Text" : "# These .c files are used to build the dependency list\n\n#\n",
        "Line" : 940,
        "CharPositionInLine" : 0
      },
      "141" : {
        "Text" : "# These .h files are used to build the dependecy list\n\n#\n",
        "Line" : 944,
        "CharPositionInLine" : 0
      },
      "142" : {
        "Text" : "# These files are found (but not built) in the distribution\n\n#\n\n# The CUSTOM_CAL and HOW_TO_ADD are files distributed from this\n\n# directory but are installed as help files from the help/Makefile.\n\n#\n",
        "Line" : 948,
        "CharPositionInLine" : 0
      },
      "143" : {
        "Text" : "# These files are used to make (but not built) a calc .a link library\n\n#\n",
        "Line" : 957,
        "CharPositionInLine" : 0
      },
      "144" : {
        "Text" : "# This is the custom dynbamic shared library that is build\n\n#\n",
        "Line" : 961,
        "CharPositionInLine" : 0
      },
      "145" : {
        "Text" : "# This is the custom static library that is build\n\n#\n",
        "Line" : 965,
        "CharPositionInLine" : 0
      },
      "146" : {
        "Text" : "# complete list of targets\n\n#\n",
        "Line" : 969,
        "CharPositionInLine" : 0
      },
      "147" : {
        "Text" : "###\n\n#\n\n# The reason for this Makefile\t:-)\n\n#\n\n###\n",
        "Line" : 973,
        "CharPositionInLine" : 0
      },
      "148" : {
        "Text" : "##\n\n#\n\n# Special .o files\n\n#\n\n##\n",
        "Line" : 992,
        "CharPositionInLine" : 0
      },
      "149" : {
        "Text" : "##\n\n#\n\n# used by the upper level Makefile\n\n#\n\n##\n",
        "Line" : 1001,
        "CharPositionInLine" : 0
      },
      "150" : {
        "Text" : "# to determine of we have done all\n\n#\n",
        "Line" : 1007,
        "CharPositionInLine" : 0
      },
      "151" : {
        "Text" : "###\n\n#\n\n# building calc-static and static lib*.a libraires\n\n#\n\n###\n",
        "Line" : 1013,
        "CharPositionInLine" : 0
      },
      "152" : {
        "Text" : "##\n\n#\n\n# File list generation.\t You can ignore this section.\n\n#\n\n#\n\n# We will form the names of source files as if they were in a\n\n# sub-directory called calc/lib.\n\n#\n\n# NOTE: Due to bogus shells found on one common system we must have\n\n#\tan non-emoty else clause for every if condition.  *sigh*\n\n#\n\n##\n",
        "Line" : 1025,
        "CharPositionInLine" : 0
      },
      "153" : {
        "Text" : "#if 0\t/* start of skip for non-Gnu makefiles */\n",
        "Line" : 1055,
        "CharPositionInLine" : 0
      },
      "154" : {
        "Text" : "#endif\t/* end of skip for non-Gnu makefiles */\n",
        "Line" : 1066,
        "CharPositionInLine" : 0
      },
      "155" : {
        "Text" : "##\n\n#\n\n# Home grown make dependency rules.  Your system make not support\n\n# or have the needed tools.  You can ignore this section.\n\n#\n\n# We will form a skelaton tree of *.c files containing only #include \"foo.h\"\n\n# lines and .h files containing the same lines surrounded by multiple include\n\n# prevention lines.  This allows us to build a static depend list that will\n\n# satisfy all possible cpp symbol definition combinations.\n\n#\n\n##\n",
        "Line" : 1068,
        "CharPositionInLine" : 0
      },
      "156" : {
        "Text" : "##\n\n#\n\n# rpm rules\n\n#\n\n##\n",
        "Line" : 1160,
        "CharPositionInLine" : 0
      },
      "157" : {
        "Text" : "##\n\n#\n\n# Utility rules\n\n#\n\n##\n",
        "Line" : 1188,
        "CharPositionInLine" : 0
      },
      "158" : {
        "Text" : "#if 0\t/* start of skip for non-Gnu makefiles */\n",
        "Line" : 1206,
        "CharPositionInLine" : 0
      },
      "159" : {
        "Text" : "#endif\t/* end of skip for non-Gnu makefiles */\n",
        "Line" : 1208,
        "CharPositionInLine" : 0
      },
      "160" : {
        "Text" : "# install everything\n\n#\n\n# NOTE: Keep the uninstall rule in reverse order to the install rule\n\n#\n",
        "Line" : 1210,
        "CharPositionInLine" : 0
      },
      "161" : {
        "Text" : "# NOTE: The upper level makefile installs the file\n\n#\t    libcustcalc${LIB_EXT_VERSION} because we only want to\n\n#\t    perform one ${LDCONFIG} for both libcalc${LIB_EXT_VERSION}\n\n#\t    and libcustcalc${LIB_EXT_VERSION}.\n",
        "Line" : 1361,
        "CharPositionInLine" : 5
      },
      "162" : {
        "Text" : "# Try to remove everything that was installed\n\n#\n\n# NOTE: Keep the uninstall rule in reverse order to the install rule\n\n#\n",
        "Line" : 1366,
        "CharPositionInLine" : 0
      },
      "163" : {
        "Text" : "##\n\n#\n\n# make depend stuff\n\n#\n\n##\n",
        "Line" : 1426,
        "CharPositionInLine" : 0
      },
      "164" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 1432,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 165,
      "Errorlog" : "line 1130:36 token recognition error at: '\\1'\nline 1130:42 token recognition error at: '\\1'\n"
    },
    "c_cpp/etc/calc/help/Makefile" : {
      "ObjectId" : "b9ea207531188672621a19701c0c3974aef410a0",
      "LastModified" : "2017-08-21T14:30:11Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#!/bin/make\n\n#\n\n# help - makefile for calc help files\n\n#\n\n# Copyright (C) 1999-2006  Landon Curt Noll\n\n#\n\n# Calc is open software; you can redistribute it and/or modify it under\n\n# the terms of the version 2.1 of the GNU Lesser General Public License\n\n# as published by the Free Software Foundation.\n\n#\n\n# Calc is distributed in the hope that it will be useful, but WITHOUT\n\n# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE.\tSee the GNU Lesser General\n\n# Public License for more details.\n\n#\n\n# A copy of version 2.1 of the GNU Lesser General Public License is\n\n# distributed with calc under the filename COPYING-LGPL.  You should have\n\n# received a copy with calc; if not, write to Free Software Foundation, Inc.\n\n# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n\n#\n\n# @(#) $Revision: 30.5 $\n\n# @(#) $Id: Makefile,v 30.5 2007/09/21 01:27:27 chongo Exp $\n\n# @(#) $Source: /usr/local/src/cmd/calc/help/RCS/Makefile,v $\n\n#\n\n# Under source code control:\t1991/07/23 06:47:57\n\n# File existed as early as:\t1991\n\n#\n\n# chongo <was here> /\\oo/\\\thttp://www.isthe.com/chongo/\n\n# Share and enjoy!  :-) http://www.isthe.com/chongo/tech/comp/calc/\n\n#\n\n# calculator by David I. Bell with help/mods from others\n\n# Makefile by Landon Curt Noll\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# required vars\n\n#\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "####\n\n# Normally, the upper level makefile will set these values.  We provide\n\n# a default here just in case you want to build from this directory.\n\n####\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Normally certain files depend on the Makefile.  If the Makefile is\n\n# changed, then certain steps should be redone.  If MAKE_FILE is\n\n# set to Makefile, then these files will depend on Makefile.  If\n\n# MAKE_FILE is empty, then they wont.\n\n#\n\n# If in doubt, set MAKE_FILE to Makefile\n\n#\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Controlling file makefile basename (without the path)\n\n#\n\n# This is the basename same of the makefile that may/does/will drive\n\n# this makefile.\n\n#\n\n# If in doubt, set TOP_MAKE_FILE to Makefile\n\n#\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Where the system include (.h) files are kept\n\n#\n\n# For DJGPP, select:\n\n#\n\n#\tINCDIR= /dev/env/DJDIR/include\n\n#\n\n# If in doubt, set:\n\n#\n\n#\tINCDIR= /usr/include\n\n#\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#INCDIR= /usr/local/include\n\n#INCDIR= /dev/env/DJDIR/include\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# where to install calc realted things\n\n#\n\n# ${BINDIR}\t\twhere to install calc binary files\n\n# ${LIBDIR}\t\twhere calc link library (*.a) files are installed\n\n# ${CALC_SHAREDIR}\twhere to install calc help, .cal, startup, config files\n\n#\n\n# NOTE: The install rule prepends installation paths with ${T}, which\n\n#\tby default is empty.  If ${T} is non-empty, then installation\n\n#\tlocations will be relative to the ${T} directory.\n\n#\n\n# For DJGPP, select:\n\n#\n\n#\tBINDIR= /dev/env/DJDIR/bin\n\n#\tLIBDIR= /dev/env/DJDIR/lib\n\n#\tCALC_SHAREDIR= /dev/env/DJDIR/share/calc\n\n#\n\n# If in doubt, set:\n\n#\n\n#\tBINDIR= /usr/bin\n\n#\tLIBDIR= /usr/lib\n\n#\tCALC_SHAREDIR= /usr/share/calc\n\n#\n\n#BINDIR= /usr/local/bin\n\n#BINDIR= /dev/env/DJDIR/bin\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#LIBDIR= /usr/local/lib\n\n#LIBDIR= /dev/env/DJDIR/lib\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#CALC_SHAREDIR= /usr/local/lib/calc\n\n#CALC_SHAREDIR= /dev/env/DJDIR/share/calc\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# By default, these values are based CALC_SHAREDIR, INCDIR, BINDIR\n\n# ---------------------------------------------------------------\n\n# ${HELPDIR}\t\twhere the help directory is installed\n\n# ${CALC_INCDIR}\twhere the calc include files are installed\n\n# ${SCRIPTDIR}\t\twhere calc shell scripts are installed\n\n#\n\n# NOTE: The install rule prepends installation paths with ${T}, which\n\n#\tby default is empty.  If ${T} is non-empty, then installation\n\n#\tlocations will be relative to the ${T} directory.\n\n#\n\n# If in doubt, set:\n\n#\n\n#\tHELPDIR= ${CALC_SHAREDIR}/help\n\n#\tCALC_INCDIR= ${INCDIR}/calc\n\n#\tSCRIPTDIR= ${BINDIR}/cscript\n\n#\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# T - top level directory under which calc will be installed\n\n#\n\n# The calc install is performed under ${T}, the calc build is\n\n# performed under /.\tThe purpose for ${T} is to allow someone\n\n# to install calc somewhere other than into the system area.\n\n#\n\n# For example, if:\n\n#\n\n#     BINDIR= /usr/bin\n\n#     LIBDIR= /usr/lib\n\n#     CALC_SHAREDIR= /usr/share/calc\n\n#\n\n# and if:\n\n#\n\n#     T= /var/tmp/testing\n\n#\n\n# Then the installation locations will be:\n\n#\n\n#     calc binary files:\t/var/tmp/testing/usr/bin\n\n#     calc link library:\t/var/tmp/testing/usr/lib\n\n#     calc help, .cal ...:\t/var/tmp/testing/usr/share/calc\n\n#     ... etc ...\t\t/var/tmp/testing/...\n\n#\n\n# If ${T} is empty, calc is installed under /, which is the same\n\n# top of tree for which it was built.  If ${T} is non-empty, then\n\n# calc is installed under ${T}, as if one had to chroot under\n\n# ${T} for calc to operate.\n\n#\n\n# If in doubt, use T=\n\n#\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Makefile debug\n\n#\n\n# Q=@\tdo not echo internal makefile actions (quiet mode)\n\n# Q=\techo internal makefile actions (debug / verbose mode)\n\n#\n\n#Q=\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# standard tools\n\n#\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Some out of date operating systems require / want an executable to\n\n# end with a certain file extension.  Some compile systems such as\n\n# Cygwin build calc as calc.exe.  The EXT variable is used to denote\n\n# the extension required by such.\n\n#\n\n# EXT=\t\t\t\t# normal Un*x / Linux / GNU/Linux systems\n\n# EXT=.exe\t\t\t# windoz / Cygwin\n\n#\n\n# If in doubt, use EXT=\n\n#\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#EXT=.exe\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Standard and Builtin help files\n\n#\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# beacuse obj is built special (due to confusion with it as\n\n# a symlink for some built environments, we treat obj specially\n\n# and call it obj.file\n\n#\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# These files are used in the following order to construct full\n\n#\n",
        "Line" : 243,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# These full files are those who are not built or constrcuted\n\n#\n",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# These full files are those who are built by this Makefile\n\n#\n\n# Note that ${SPECIAL_HELP_7} is not included in this list\n\n# because of problems with its name.\n\n#\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# This list is prodiced by the detaillist rule when no WARNINGS are detected.\n\n#\n\n# Please use:\n\n#\n\n#\tmake detaillist\n\n#\n\n# to keep this list in nice sorted order and to check that these\n\n# non-special help files are under RCS control.\n\n#\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# This list is of files that are clones of DETAIL_HELP files.  They are\n\n# built from DETAIL_HELP files.\n\n#\n",
        "Line" : 313,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Singular files\n\n#\n\n# These files are copies of their plural form.\n\n#\n",
        "Line" : 318,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# These files are found (but not built) in the distribution\n\n#\n",
        "Line" : 325,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# These files are used to make (but not built) a calc .a link library\n\n#\n",
        "Line" : 331,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# used by the upper level Makefile to determine of we have done all\n\n#\n\n# NOTE: Due to bogus shells found on one common system we must have\n\n#\tan non-emoty else clause for every if condition.  *sigh*\n\n#\n",
        "Line" : 338,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Singular files are the same files as their plural form.\n\n#\n",
        "Line" : 542,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Form the builtin file\n\n#\n\n# We ave a \"chicken-and-egg\" problem.  We want the builtn help file to\n\n# accurately reflect the function list.\t It would be nice if we could\n\n# just execute calc show builtin, but calc may not have been built or\n\n# buildable at this point.  The hack-a-round used is to convert ../func.c\n\n# into a standalone program that generates a suitable function list\n\n# that is standwiched between the top and bottom builtin help text.\n\n#\n\n# We form funclist.c by sedding out unwanted stuff from builtins table,\n\n# converting NUMBER* and VALUE into harmless types and converting\n\n# the showbuiltins() function into main().  Combined with the -DFUNCLIST\n\n# we will avoid all of the complex calc types, macros and defines and\n\n# be left with just main() and a mininal builtins table.\n\n#\n\n# Building funclist.o a portable fashion is ugly because some systems\n\n# do not treat -I.. correctly!\n\n#\n",
        "Line" : 561,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "##\n\n#\n\n# File list generation.\t You can ignore this section.\n\n#\n\n#\n\n# We will form the names of source files as if they were in a\n\n# sub-directory called calc/help.\n\n#\n\n##\n",
        "Line" : 601,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# The BSDI cdrom makefile expects all help files to be pre-built.  This rule\n\n# creats these fils so that the release can be shipped off to BSDI.  You can\n\n# ignore this rule.\n\n#\n",
        "Line" : 628,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# These next rule help me form the ${DETAIL_HELP} makefile variables above.\n\n#\n",
        "Line" : 636,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "##\n\n#\n\n# rpm rules\n\n#\n\n##\n",
        "Line" : 652,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "##\n\n#\n\n# Utility rules\n\n#\n\n##\n",
        "Line" : 667,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# install everything\n\n#\n\n# NOTE: Keep the uninstall rule in reverse order to the install rule\n\n#\n",
        "Line" : 681,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Try to remove everything that was installed\n\n#\n\n# NOTE: Keep the uninstall rule in reverse order to the install rule\n\n#\n",
        "Line" : 743,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 36
    },
    "c_cpp/etc/jellyfish/Makefile.am" : {
      "ObjectId" : "76c1fbf6bed2902defef2252643924b6d085588e",
      "LastModified" : "2017-08-21T14:30:11Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# What to build\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########################################\n\n# Build Jellyfish the exec\n\n########################################\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "########################################\n\n# Build Jellyfish the shared library\n\n########################################\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "########################################\n\n# Build tests\n\n########################################\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "########################################\n\n# Tests\n\n########################################\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "########################################\n\n# Unit tests\n\n########################################\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "c_cpp/etc/mVicuna/CMakeLists.txt" : {
      "ObjectId" : "3f877707d95729fc289a2f6ec7aec856189e0436",
      "LastModified" : "2017-08-21T14:30:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "c_cpp/etc/mVicuna/src/Makefile" : {
      "ObjectId" : "9c7b7225504dc6263b44f9395e0c3a3d770faf42",
      "LastModified" : "2017-08-21T14:30:11Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#COMPILER=/opt/local/bin/g++\n\n# server \n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "c_cpp/etc/md5_sha/Makefile" : {
      "ObjectId" : "3c8343af2c3f19e3eb1c72693f82113ea972ee65",
      "LastModified" : "2017-08-21T14:30:11Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#!/usr/bin/make\n\n#\n\n# hash - combined shs and md5 makefile\n\n#\n\n# @(#) $Revision: 13.5 $\n\n# @(#) $Id: Makefile,v 13.5 2010/10/12 21:08:53 chongo Exp $\n\n# @(#) $Source: /usr/local/src/cmd/hash/RCS/Makefile,v $\n\n#\n\n# This file was written by Landon Curt Noll.\n\n#\n\n# This makefile has been placed in the public domain.  Please do not\n\n# copyright this makefile.\n\n#\n\n# LANDON CURT NOLL DISCLAIMS ALL WARRANTIES WITH  REGARD  TO\n\n# THIS  SOFTWARE,  INCLUDING  ALL IMPLIED WARRANTIES OF MER-\n\n# CHANTABILITY AND FITNESS.  IN NO EVENT SHALL  LANDON  CURT\n\n# NOLL  BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL\n\n# DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM  LOSS  OF\n\n# USE,  DATA  OR  PROFITS, WHETHER IN AN ACTION OF CONTRACT,\n\n# NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR  IN\n\n# CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n\n#\n\n# chongo (was here) /\\oo/\\\n# http://www.isthe.com/chongo/index.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Share and enjoy! :-)\n\n#\n\n# See shsdrvr.c, shs1drvr.c and md5drvr.c for version and modification history.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# standard tools\n\n#\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# where to install binary files\n\n#\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#BINDIR= /usr/bin\n\n#BINDIR= /usr/contrib/bin\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# where to install the shs, shs1 and md5 test file dirs\n\n#\n\n# ${TOPDIR} is the directory under which the shs and md5 dirs will be placed.\n\n# ${SHSLIB} is where the readonly shs and shs1 test files are kept\n\n# ${MD5LIB} is where the readonly md5 test files are kept\n\n#\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#TOPDIR= /usr/lib\n\n#TOPDIR= /usr/libdata\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# where man pages are installed\n\n#\n\n# Use MANDIR= to disable installation of the calc man (source) page.\n\n#\n\n#MANDIR=\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#MANDIR=/usr/man/man1\n\n#MANDIR=/usr/share/man/man1\n\n#MANDIR=/usr/man/u_man/man1\n\n#MANDIR=/usr/contrib/man/man1\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# extenstion to add on to the calc man page filename\n\n#\n\n# This is ignored if MANDIR is empty.\n\n#\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#MANEXT= l\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# select the proper compiler\n\n#\n\n# If you use a non-ANSI cc, you may have to edit md5.c to change the\n\n# UL constant suffixes in MD5Transform() to just L and see if test works.\n\n#\n\n# Under BSD/OS 2.0, we cannot compile with -ansi because <sys/resource.h>\n\n# uses struct timeval which is not defined by <sys/time.h> under -ansi.\n\n#\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#CC= gcc -ansi\n\n#CC= gcc -ansi -fcaller-saves\n\n#CC= gcc2 -ansi -fcaller-saves\n\n#CC= gcc\n\n#CC= gcc -fcaller-saves\n\n#CC= gcc2 -fcaller-saves\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# select the proper optimization or debug level\n\n#\n\n#OPT_DEBUG=\n\n#OPT_DEBUG= -DDEBUG\n\n#OPT_DEBUG= -g3\n\n#OPT_DEBUG= -g3 -DDEBUG\n\n#OPT_DEBUG= -g3 -DDEBUG -DDETAILED_DEBUG\n\n#OPT_DEBUG= -O\n\n#OPT_DEBUG= -O -DDEBUG\n\n#OPT_DEBUG= -O -g3\n\n#OPT_DEBUG= -O -g3 -DDEBUG\n\n#OPT_DEBUG= -O2\n\n#OPT_DEBUG= -O2 -DDEBUG\n\n#OPT_DEBUG= -O2 -g3\n\n#OPT_DEBUG= -O2 -g3 -DDEBUG\n\n#OPT_DEBUG= -O3\n\n#OPT_DEBUG= -O3 -DDEBUG\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#OPT_DEBUG= -O3 -g3 -DDEBUG\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#CFLAGS= ${OPT_DEBUG} -Wall -W -Werror\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Some architectures such as Sparc do not allow one to access long that\n\n# are not alligned.  If make test dumpds core or fails to produce no\n\n# output, use only -DMUST_ALIGN.\n\n#\n\n# ALIGN=\t\tlet must_align.c figure out if alignment is needed\n\n# ALIGN=-DMUST_ALIGN \tforce alignment (at the cost of performance}\n\n# ALIGN=-UMUST_ALIGN\tallow non-aligment (usually at a performance gain}\n\n#\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#ALIGN=-DMUST_ALIGN\n\n#ALIGN=-UMUST_ALIGN\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# perform all tests\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# perform the shs1 test\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# perform the old extended shs digest test\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# perform the extended md5 digest test\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 22,
      "Errorlog" : "line 202:22 token recognition error at: '\\0'\n"
    },
    "c_cpp/etc/rarcrack/Makefile" : {
      "ObjectId" : "40048c3d4e3e40876d93bba23f2b5ef0d4719eb1",
      "LastModified" : "2017-08-21T14:30:11Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "c_cpp/etc/tiny/Makefile" : {
      "ObjectId" : "da1f7d6d1e0666a845920c1a60eadd812d883745",
      "LastModified" : "2017-08-21T14:30:11Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# learned from http://sourceforge.net/projects/gcmakefile/\n\n# The options used in linking as well as in any direct use of ld.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-lpthread\n",
        "Line" : 3,
        "CharPositionInLine" : 12
      },
      "2" : {
        "Text" : "# The directories in which source files reside.\n\n# If not specified, only the current directory will be serached.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Implicit Section: change the following only when necessary.\n\n##==========================================================================\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The source file types (headers excluded).\n\n# .c indicates C source files, and others C++ ones.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# .C .cc .cpp .CPP .c++ .cxx .cp\n",
        "Line" : 15,
        "CharPositionInLine" : 12
      },
      "6" : {
        "Text" : "#-pedantic\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#$(patsubst $.c,%,$(SOURCES))\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#@echo [$(SOURCES)] to [$(SOURCES:.c=)].\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#@gcc $(CFLAGS) $(OLevel) $(LDFLAGS) $(ASMFLAGS) -o - $< | as -alhnd > ./asm/$@.asm\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "c_cpp/faststater/Makefile" : {
      "ObjectId" : "c086dc804ad06b493faa82fbf0aceea6293bd67c",
      "LastModified" : "2017-08-21T14:30:11Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "c_cpp/fromOthers/PEAR/Makefile.am" : {
      "ObjectId" : "9f0d41925158e4e92d154f105fd887cbc3beb145",
      "LastModified" : "2017-08-21T14:30:11Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "c_cpp/fromOthers/PEAR/man/Makefile.am" : {
      "ObjectId" : "83e03731256aa90a3cfcd869b3187d048085645d",
      "LastModified" : "2017-08-21T14:30:11Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "c_cpp/fromOthers/PEAR/src/Makefile.am" : {
      "ObjectId" : "868d123cf7b8338ad7a2e40991424137af301ee4",
      "LastModified" : "2017-08-21T14:30:11Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "c_cpp/gcmakefile/Makefile" : {
      "ObjectId" : "9799a7df90ac53872bda12386a2109a3129dafcc",
      "LastModified" : "2017-08-21T14:30:11Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#############################################################################\n\n#\n\n# Generic Makefile for C/C++ Program\n\n#\n\n# License: GPL (General Public License)\n\n# Author:  whyglinux <whyglinux AT gmail DOT com>\n\n# Date:    2006/03/04 (version 0.1)\n\n#          2007/03/24 (version 0.2)\n\n#          2007/04/09 (version 0.3)\n\n#          2007/06/26 (version 0.4)\n\n#          2008/04/05 (version 0.5)\n\n#\n\n# Description:\n\n# ------------\n\n# This is an easily customizable makefile template. The purpose is to\n\n# provide an instant building environment for C/C++ programs.\n\n#\n\n# It searches all the C/C++ source files in the specified directories,\n\n# makes dependencies, compiles and links to form an executable.\n\n#\n\n# Besides its default ability to build C/C++ programs which use only\n\n# standard C/C++ libraries, you can customize the Makefile to build\n\n# those using other libraries. Once done, without any changes you can\n\n# then build programs using the same or less libraries, even if source\n\n# files are renamed, added or removed. Therefore, it is particularly\n\n# convenient to use it to build codes for experimental or study use.\n\n#\n\n# GNU make is expected to use the Makefile. Other versions of makes\n\n# may or may not work.\n\n#\n\n# Usage:\n\n# ------\n\n# 1. Copy the Makefile to your program directory.\n\n# 2. Customize in the \"Customizable Section\" only if necessary:\n\n#    * to use non-standard C/C++ libraries, set pre-processor or compiler\n\n#      options to <MY_CFLAGS> and linker ones to <MY_LIBS>\n\n#      (See Makefile.gtk+-2.0 for an example)\n\n#    * to search sources in more directories, set to <SRCDIRS>\n\n#    * to specify your favorite program name, set to <PROGRAM>\n\n# 3. Type make to start building your program.\n\n#\n\n# Make Target:\n\n# ------------\n\n# The Makefile provides the following targets to make:\n\n#   $ make           compile and link\n\n#   $ make NODEP=yes compile and link without generating dependencies\n\n#   $ make objs      compile only (no linking)\n\n#   $ make tags      create tags for Emacs editor\n\n#   $ make ctags     create ctags for VI editor\n\n#   $ make clean     clean objects and the executable file\n\n#   $ make distclean clean objects, the executable and dependencies\n\n#   $ make help      get the usage of the makefile\n\n#\n\n#===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Customizable Section: adapt those variables to suit your program.\n\n##==========================================================================\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The pre-processor and compiler options.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The linker options.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The pre-processor options used by the cpp (man cpp for more).\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The options used in linking as well as in any direct use of ld.\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The directories in which source files reside.\n\n# If not specified, only the current directory will be serached.\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# The executable file name.\n\n# If not specified, current directory name or `a.out' will be used.\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Implicit Section: change the following only when necessary.\n\n##==========================================================================\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# The source file types (headers excluded).\n\n# .c indicates C source files, and others C++ ones.\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# The header file types.\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# The pre-processor and compiler options.\n\n# Users can override those variables from the command line.\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# The C program compiler.\n\n#CC     = gcc\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# The C++ program compiler.\n\n#CXX    = g++\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Un-comment the following line to compile C programs as C++ ones.\n\n#CC     = $(CXX)\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# The command used to delete file.\n\n#RM     = rm -f\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## Stable Section: usually no need to be changed. But you can add more.\n\n##==========================================================================\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "## Define some useful variables.\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Delete the default suffixes\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Rules for creating dependency files (.d).\n\n#------------------------------------------\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Rules for generating object files (.o).\n\n#----------------------------------------\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Rules for generating the tags.\n\n#-------------------------------------\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Rules for generating the executable.\n\n#-------------------------------------\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# C program\n",
        "Line" : 224,
        "CharPositionInLine" : 32
      },
      "24" : {
        "Text" : "# C++ program\n",
        "Line" : 227,
        "CharPositionInLine" : 32
      },
      "25" : {
        "Text" : "# Show help.\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Show variables (for debug use only.)\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "## End of the Makefile ##  Suggestions are welcome  ## All rights reserved ##\n\n#############################################################################\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 28
    },
    "c_cpp/illuminaQC/filter_adapter/filter_adapter_by_local_alignment/Makefile" : {
      "ObjectId" : "d0cd00ce23377d6d661becbced8e2fc39733d6b7",
      "LastModified" : "2017-08-21T14:30:11Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "c_cpp/illuminaQC/filter_adapter/filter_lowqual_reads_by_error_ranking/Makefile" : {
      "ObjectId" : "9243f2c2669f7cadc54ec6752f0501f83134df30",
      "LastModified" : "2017-08-21T14:30:11Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "c_cpp/lib/cstring/Makefile" : {
      "ObjectId" : "54e664f5b8c0d44cf753834f07acba2aa70b66e1",
      "LastModified" : "2017-08-21T14:30:11Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "c_cpp/lib/gnulib/Makefile" : {
      "ObjectId" : "c36d1c0b01f88413a42e55e7b40d2c1e70900f3e",
      "LastModified" : "2017-08-21T14:30:11Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# GNU Makefile for gnulib central.\n\n# Copyright (C) 2006, 2009-2015 Free Software Foundation, Inc.\n\n#\n\n# Copying and distribution of this file, with or without modification,\n\n# in any medium, are permitted without royalty provided the copyright\n\n# notice and this notice are preserved.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This Makefile requires the use of GNU make.  Some targets require\n\n# that you have tools like git, makeinfo and cppi installed.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Required for the use of <(...) below.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Produce some files that are not stored in the repository.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Produce the documentation in readable form.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Collect the names of rules starting with 'sc_'.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Perform some platform independent checks on the gnulib code.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# It's easy to forget the noise-suppressing \"@\" at the beginning\n\n# of each sc_ rule.  Check for it both in maint.mk and in this file.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Run all maint.mk syntax-check tests on gnulib's sources.\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Files in m4/ that (exceptionally) may use AC_LIBOBJ.\n\n# Do not include their \".m4\" suffix.\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Verify that certain (for now, only Jim Meyering and Eric Blake's)\n\n# *.c files are consistently cpp indented.\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Ensure that the list of symbols checked for by the\n\n# sc_prohibit_intprops_without_use rule match those in the actual file.\n\n# Extract the symbols from the .h file and compare with the list of\n\n# symbols extracted from the rule in maint.mk.\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# *define ([A-Z]\\w+)\\(/ and print $$1' $$i|fmt) \\\n\t  <(sed -n /^_intprops_name/,/^_intprops_syms_re/p top/maint.mk \\\n\t    |sed '/^_/d;s/^  //;s/\t*\\\\$$//')\n",
        "Line" : 135,
        "CharPositionInLine" : 24
      },
      "13" : {
        "Text" : "# Ensure that the copyright statements in files and in the module descriptions\n\n# are consistent.\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Regenerate some files that are stored in the repository.\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# MODULES.html is periodically being generated and copied to the web pages at\n\n# :ext:USER@cvs.savannah.gnu.org:/web/gnulib/gnulib/\n\n# where it then appears at <http://www.gnu.org/software/gnulib/MODULES.html>.\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Run this rule once per year (usually early in January)\n\n# to update all FSF copyright year lists here.\n\n# We exclude the files listed in srclist.txt (maintained elsewhere)\n\n# as well as those in tests/unictype (generated).\n\n# Also exclude any file that includes the \"GENERATED AUTOMATICALLY\" comment,\n\n# being careful not to exclude code that merely generates the comment.\n\n# Also exclude doc/INSTALL*, since they too are generated.\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17,
      "Errorlog" : "line 22:73 token recognition error at: '\\1'\nline 58:40 token recognition error at: '\\1'\n"
    },
    "c_cpp/lib/gnulib/doc/Makefile" : {
      "ObjectId" : "9b1ac79e9fd2ade9ed4e71e837874e3a24d97680",
      "LastModified" : "2017-08-21T14:30:11Z",
      "FileType" : "MAKEFILE",
      "Errorlog" : "line 51:8 token recognition error at: '\"s/\\`\\([^']*\\)'/'\\1'\nline 55:25 token recognition error at: '\\1'\n"
    }
  }
}