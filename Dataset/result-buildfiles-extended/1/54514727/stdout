{
  "Repository" : "54514727",
  "Revision" : "HEAD",
  "ObjectId" : "b6d91b8107bfeae1431dfd11af5a20545b3e7643",
  "CommitTime" : "2019-04-18T16:22:24Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "3a991b87d401d29686cc85714f6b7f1d0a0af20d",
      "LastModified" : "2018-06-30T23:23:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Vim - You Complete Me\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# clang-format\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# cmake -DCMAKE_TOOLCHAIN_FILE=\"/usr/lib/emscripten/cmake/Modules/Platform/Emscripten.cmake\" ..\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Usage: cmake -DANDROID_NDK=$NDK -DCMAKE_TOOLCHAIN_FILE=$NDK/cmake/toolchain.cmake -DANDROID_ABI=armeabi-v7a -DANDROID_NATIVE_API_LEVEL=23 -DLIBRARY_OUTPUT_PATH=. ..\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# BGFX file reader needs to know this\n",
        "Line" : 42,
        "CharPositionInLine" : 37
      },
      "5" : {
        "Text" : "# Some like \"ANDROID\", like in the toolhain file, some expect __ANDROID__\n",
        "Line" : 43,
        "CharPositionInLine" : 35
      },
      "6" : {
        "Text" : "# imgui doesn't seem to take the crystax header from this\n",
        "Line" : 44,
        "CharPositionInLine" : 47
      },
      "7" : {
        "Text" : "# Need GLES3 for instancing\n",
        "Line" : 45,
        "CharPositionInLine" : 56
      },
      "8" : {
        "Text" : "# Fix other libraries\n",
        "Line" : 47,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# No SSE2 on android\n",
        "Line" : 48,
        "CharPositionInLine" : 58
      },
      "10" : {
        "Text" : "# Make Apk.cmake compatible\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "#include_directories(src/android/compat)\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# TODO: Add a dummy file to supress a warning here\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "#${ANDROID_NDK}/sources/android/native_app_glue/android_native_app_glue.c\n\n#src/android/compat/*.c\n",
        "Line" : 61,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -mno-unaligned-access\") # Unaligned access not supported on ARM\n",
        "Line" : 65,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -O0 -g\")\n\n#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++0x -ffor-scope -fno-rtti -pipe -ffunction-sections -fdata-sections -ffast-math -Wnon-virtual-dtor -Wreorder -Wsign-promo -fvisibility=hidden -fvisibility-inlines-hidden -Wstrict-null-sentinel -Os -funroll-all-loops -fpeel-loops -ftree-vectorize\")\n",
        "Line" : 67,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Stuff all android libraries in here\n",
        "Line" : 73,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# add warning flags\n",
        "Line" : 84,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# missing return is error\n",
        "Line" : 87,
        "CharPositionInLine" : 66
      },
      "19" : {
        "Text" : "# Fix up C++ standard\n",
        "Line" : 89,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Setup BGFX\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Need to up this since everything got it's own matrix right now\n",
        "Line" : 106,
        "CharPositionInLine" : 55
      },
      "22" : {
        "Text" : "# FIXME: Flush some times at loading, so we don't exhaust the default setting of 64k\n",
        "Line" : 107,
        "CharPositionInLine" : 62
      },
      "23" : {
        "Text" : "# TODO: Don't mess around with memory so much\n",
        "Line" : 109,
        "CharPositionInLine" : 56
      },
      "24" : {
        "Text" : "# Set up GLM\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# FIXME: glm crashes using SSE because of some alignment issues\n",
        "Line" : 112,
        "CharPositionInLine" : 34
      },
      "26" : {
        "Text" : "# Quaternions\n",
        "Line" : 113,
        "CharPositionInLine" : 43
      },
      "27" : {
        "Text" : "# Temp\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Setup OpenMP\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Setup bullet\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# ------------------ Config-Header ------------------\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Set up bullet\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Don't statically link this\n",
        "Line" : 159,
        "CharPositionInLine" : 59
      },
      "33" : {
        "Text" : "# No samples\n\n# No samples\n",
        "Line" : 160,
        "CharPositionInLine" : 51
      },
      "34" : {
        "Text" : "# No tests\n",
        "Line" : 162,
        "CharPositionInLine" : 48
      },
      "35" : {
        "Text" : "# No samples\n",
        "Line" : 163,
        "CharPositionInLine" : 47
      },
      "36" : {
        "Text" : "# Can use bullet2, bullet3 wants to build examples...\n",
        "Line" : 169,
        "CharPositionInLine" : 45
      },
      "37" : {
        "Text" : "# ------------------ Engine lib ------------------\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#set_target_properties(engine PROPERTIES LINKER_LANGUAGE C)\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# ------------------ OpenAL ------------------\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Set up OpenAL\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# ---------------- libdmusic ----------------\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Disable unused utilities\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# ------------------ Other ------------------\n",
        "Line" : 290,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 44
    },
    "REGoth-Android/app/proguard-rules.pro" : {
      "ObjectId" : "984d2b5d91cbd4a8e1c59aea89d334cd1748036e",
      "LastModified" : "2017-06-17T18:30:37Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# By default, the flags in this file are appended to flags specified\n\n# in /home/desktop/Android/Sdk/tools/proguard/proguard-android.txt\n\n# You can edit the include path and order by changing the proguardFiles\n\n# directive in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add any project specific keep options here:\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/clang-format.cmake" : {
      "ObjectId" : "8c92647f90e560a8116d8cb2f3cb71c53423f0fd",
      "LastModified" : "2017-09-22T21:14:46Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/adpcm/CMakeLists.txt" : {
      "ObjectId" : "c70e5291948316e3ac7e60c06ea809a7c59217b6",
      "LastModified" : "2017-09-22T21:14:46Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/android/Apk.cmake" : {
      "ObjectId" : "bbdf62a6e4c1203a8ae9ce9737b2d816c32204ed",
      "LastModified" : "2017-09-22T21:14:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#*********************************************************#\n\n#*  File: Apk.cmake                                      *\n\n#*    Android apk tools\n\n#*\n\n#*  Copyright (C) 2002-2013 The PixelLight Team (http://www.pixellight.org/)\n\n#*\n\n#*  This file is part of PixelLight.\n\n#*\n\n#*  Permission is hereby granted, free of charge, to any person obtaining a copy of this software\n\n#*  and associated documentation files (the \"Software\"), to deal in the Software without\n\n#*  restriction, including without limitation the rights to use, copy, modify, merge, publish,\n\n#*  distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the\n\n#*  Software is furnished to do so, subject to the following conditions:\n\n#*\n\n#*  The above copyright notice and this permission notice shall be included in all copies or\n\n#*  substantial portions of the Software.\n\n#*\n\n#*  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n\n#*  BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\n#*  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\n#*  DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\n#*  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n#*********************************************************#\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##################################################\n\n## Options\n\n##################################################\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##################################################\n\n## Variables\n\n##################################################\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Directory this CMake file is in\n",
        "Line" : 45,
        "CharPositionInLine" : 54
      },
      "4" : {
        "Text" : "##################################################\n\n## MACRO: android_create_apk\n\n##\n\n## Create/copy Android apk related files\n\n##\n\n## @param name\n\n##   Name of the project (e.g. \"MyProject\"), this will also be the name of the created apk file\n\n## @param apk_directory\n\n##   Directory were to construct the apk file in (e.g. \"${CMAKE_BINARY_DIR}/apk\")\n\n## @param shared_libraries\n\n##   List of shared libraries (absolute filenames) this application is using, these libraries are copied into the apk file and will be loaded automatically within a generated Java file - Lookout! The order is important due to shared library dependencies!\n\n## @param assets\n\n##   List of assets to copy into the apk file (absolute filenames, wildcards like \"*.*\" are allowed)\n\n## @param data_directory\n\n##   Subdirectory within the apk asset directory to copy the \"assets\"-files into (e.g. \"Data\")\n\n##\n\n## @remarks\n\n##   Requires the following tools to be found automatically\n\n##   - \"android\" (part of the Android SDK)\n\n##   - \"adb\" (part of the Android SDK)\n\n##   - \"ant\" (type e.g. \"sudo apt-get install ant\" on your Linux system to install Ant)\n\n##   - \"jarsigner\" (part of the JDK)\n\n##   - \"zipalign\" (part of the Android SDK)\n\n##################################################\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Construct the current package name and theme\n",
        "Line" : 74,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Create \"AndroidManifest.xml\"\n",
        "Line" : 90,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Create \"res/values/strings.xml\"\n",
        "Line" : 93,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Get a list of libraries to load in (e.g. \"PLCore;PLMath\" etc.)\n",
        "Line" : 96,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# \"value\" is e.g. \"/home/cofenberg/pl_ndk/Bin-Linux-ndk/Runtime/armeabi/libPLCore.so\"\n",
        "Line" : 99,
        "CharPositionInLine" : 3
      },
      "10" : {
        "Text" : "# \"shared_library_filename\" is e.g. \"libPLCore\", but we need \"PLCore\"\n",
        "Line" : 102,
        "CharPositionInLine" : 3
      },
      "11" : {
        "Text" : "# \"shared_library_filename\" is now e.g. \"PLCore\", this is what we want -> Add it to the list\n",
        "Line" : 107,
        "CharPositionInLine" : 3
      },
      "12" : {
        "Text" : "# Create Java file which is responsible for loading in the required shared libraries (the content of \"ANDROID_SHARED_LIBRARIES_TO_LOAD\" is used for this)\n",
        "Line" : 111,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Create the directory for the libraries\n",
        "Line" : 114,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Copy the used shared libraries\n",
        "Line" : 124,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Create \"build.xml\", \"default.properties\", \"local.properties\" and \"proguard.cfg\" files\n",
        "Line" : 132,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Copy assets\n",
        "Line" : 137,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# In case of debug build, do also copy gdbserver\n",
        "Line" : 150,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Uninstall previous version from the device/emulator (else we may get e.g. signature conflicts)\n",
        "Line" : 158,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Build the apk file\n",
        "Line" : 163,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Let Ant create the unsigned apk file\n",
        "Line" : 165,
        "CharPositionInLine" : 3
      },
      "21" : {
        "Text" : "# Sign the apk file\n",
        "Line" : 171,
        "CharPositionInLine" : 3
      },
      "22" : {
        "Text" : "# Align the apk file\n",
        "Line" : 177,
        "CharPositionInLine" : 3
      },
      "23" : {
        "Text" : "# Install current version on the device/emulator\n",
        "Line" : 183,
        "CharPositionInLine" : 3
      },
      "24" : {
        "Text" : "# Let Ant create the unsigned apk file\n",
        "Line" : 191,
        "CharPositionInLine" : 3
      },
      "25" : {
        "Text" : "# Install current version on the device/emulator\n",
        "Line" : 197,
        "CharPositionInLine" : 3
      },
      "26" : {
        "Text" : "# Start the application\n",
        "Line" : 206,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "##################################################\n\n## MACRO: android_copy_files\n\n##\n\n## Copy files from one place to another using wildcards\n\n##################################################\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Get path\n",
        "Line" : 221,
        "CharPositionInLine" : 1
      },
      "29" : {
        "Text" : "# Get exclude option\n",
        "Line" : 224,
        "CharPositionInLine" : 1
      },
      "30" : {
        "Text" : "# Find files\n",
        "Line" : 230,
        "CharPositionInLine" : 1
      },
      "31" : {
        "Text" : "# Find files\n",
        "Line" : 233,
        "CharPositionInLine" : 1
      },
      "32" : {
        "Text" : "# Get source and destination file\n",
        "Line" : 238,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# Check exclude expression\n",
        "Line" : 242,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# Process file\n",
        "Line" : 250,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# Create output directory\n",
        "Line" : 252,
        "CharPositionInLine" : 3
      },
      "36" : {
        "Text" : "# Copy file\n",
        "Line" : 256,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 37
    },
    "src/android/CMakeLists.txt" : {
      "ObjectId" : "f0569724a035e4641e0bcdd56f0b14bdb0b59ab2",
      "LastModified" : "2017-09-22T21:14:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Usage:\n\n# cmake -DANDROID_NDK=$NDK -DCMAKE_TOOLCHAIN_FILE=$NDK/cmake/toolchain.cmake -DANDROID_ABI=armeabi-v7a -DANDROID_NATIVE_API_LEVEL=23 ..\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(APP_SHARED_LIBRARIES \"${APP_SHARED_LIBRARIES};${CMAKE_CURRENT_SOURCE_DIR}/lib/armeabi-v7a/libcrystax.so\")\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/android/android.toolchain.cmake" : {
      "ObjectId" : "dd6e393ca3ff04311d54dc75c20fc4063b3eb159",
      "LastModified" : "2017-09-22T21:14:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Changes in the following third party script\n\n# [CHANGED] Changed default Android API level from 8 to 9 (we need native EGL and native activity introduced in this version)\n\n# [CHANGED] Added \"CMAKE_GDB\"-variable\n\n# [CHANGED] Added \"CMAKE_GDBSERVER\"-variable\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n#  Android CMake toolchain file, for use with the ndk r5,r6\n\n#  See home page: http://code.google.com/p/android-cmake/\n\n#\n\n#  The file is mantained by the OpenCV project. And also can be found at\n\n#  http://code.opencv.org/svn/opencv/trunk/opencv/android/android.toolchain.cmake\n\n#\n\n#  Usage Linux:\n\n#   $ export ANDROID_NDK=/absolute/path/to/the/android-ndk\n\n#   $ mkdir build && cd build\n\n#   $ cmake -DCMAKE_TOOLCHAIN_FILE=path/to/the/android.toolchain.cmake ..\n\n#   $ make -j8\n\n#\n\n#  Usage Linux (using standalone toolchain):\n\n#   $ export ANDROID_STANDALONE_TOOLCHAIN=/absolute/path/to/android-toolchain\n\n#   $ mkdir build && cd build\n\n#   $ cmake -DCMAKE_TOOLCHAIN_FILE=path/to/the/android.toolchain.cmake ..\n\n#   $ make -j8\n\n#\n\n#  Usage Windows:\n\n#     You need native port of make to build your project.\n\n#     Android NDK r7 already has make.exe on board.\n\n#     For older NDK you have to install it separately.\n\n#     For example, this one: http://gnuwin32.sourceforge.net/packages/make.htm\n\n#\n\n#   $ SET ANDROID_NDK=C:\\absolute\\path\\to\\the\\android-ndk\n\n#   $ mkdir build && cd build\n\n#   $ cmake.exe -G\"MinGW Makefiles\"\n\n#       -DCMAKE_TOOLCHAIN_FILE=path\\to\\the\\android.toolchain.cmake\n\n#       -DCMAKE_MAKE_PROGRAM=\"%ANDROID_NDK%\\prebuilt\\windows\\bin\\make.exe\" ..\n\n#   $ \"%ANDROID_NDK%\\prebuilt\\windows\\bin\\make.exe\"\n\n#\n\n#\n\n#  Options (can be set as cmake parameters: -D<option_name>=<value>):\n\n#    ANDROID_NDK=/opt/android-ndk - path to the NDK root.\n\n#      Can be set as environment variable. Can be set only at first cmake run.\n\n#\n\n#    ANDROID_STANDALONE_TOOLCHAIN=/opt/android-toolchain - path to the \n\n#      standalone toolchain. This option is not used if full NDK is found\n\n#      (ignored if ANDROID_NDK is set).\n\n#      Can be set as environment variable. Can be set only at first cmake run.\n\n#\n\n#    ANDROID_ABI=armeabi-v7a -  specifies the target Application Binary\n\n#      Interface (ABI). This option nearly matches to the APP_ABI variable \n\n#      used by ndk-build tool from Android NDK.\n\n#      Possible values are:\n\n#        \"armeabi\" - matches to the NDK ABI with the same name.\n\n#           See ${ANDROID_NDK}/docs/CPU-ARCH-ABIS.html for the documentation.\n\n#        \"armeabi-v7a\" - matches to the NDK ABI with the same name.\n\n#           See ${ANDROID_NDK}/docs/CPU-ARCH-ABIS.html for the documentation.\n\n#        \"armeabi-v7a with NEON\" - same as armeabi-v7a, but\n\n#            sets NEON as floating-point unit\n\n#        \"armeabi-v7a with VFPV3\" - same as armeabi-v7a, but\n\n#            sets VFPV3 as floating-point unit (has 32 registers instead of 16).\n\n#        \"armeabi-v6 with VFP\" - tuned for ARMv6 processors having VFP.\n\n#        \"x86\" - matches to the NDK ABI with the same name.\n\n#           See ${ANDROID_NDK}/docs/CPU-ARCH-ABIS.html for the documentation.\n\n#\n\n#    ANDROID_NATIVE_API_LEVEL=android-8 - level of Android API compile for.\n\n#      Option is read-only when standalone toolchain used.\n\n#\n\n#    ANDROID_FORCE_ARM_BUILD=OFF - set true to generate 32-bit ARM instructions\n\n#      instead of Thumb-1. Is not available for \"x86\" (inapplicable) and\n\n#      \"armeabi-v6 with VFP\" (forced) ABIs.\n\n#\n\n#    ANDROID_NO_UNDEFINED=ON - set true to show all undefined symbols as linker\n\n#      errors even if they are not used.\n\n#\n\n#    ANDROID_SO_UNDEFINED=OFF - set true to allow undefined symbols in shared\n\n#      libraries. Automatically turned on for NDK r5x and r6x due to GLESv2\n\n#      problems.\n\n#\n\n#    LIBRARY_OUTPUT_PATH_ROOT=${CMAKE_SOURCE_DIR} - where to output binary\n\n#      files. See additional details below.\n\n#\n\n#    ANDROID_SET_OBSOLETE_VARIABLES=ON - it set, then toolchain defines some\n\n#      obsolete variables which were set by previous versions of this file for\n\n#      backward compatibility.\n\n#\n\n#\n\n#  What?:\n\n#    android-cmake toolchain searches for NDK/toolchain in the following order:\n\n#      ANDROID_NDK - cmake parameter\n\n#      ANDROID_NDK - environment variable\n\n#      ANDROID_STANDALONE_TOOLCHAIN - cmake parameter\n\n#      ANDROID_STANDALONE_TOOLCHAIN - environment variable\n\n#      ANDROID_NDK - default locations\n\n#      ANDROID_STANDALONE_TOOLCHAIN - default locations\n\n#\n\n#    Make sure to do the following in your scripts:\n\n#      SET( CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${my_cxx_flags}\" )\n\n#      SET( CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} ${my_cxx_flags}\" )\n\n#      The flags will be prepopulated with critical flags, so don't loose them.\n\n#      Also be aware that toolchain also sets configuration-specific compiler\n\n#      flags and linker flags.\n\n#    \n\n#    ANDROID and BUILD_ANDROID will be set to true, you may test any of these \n\n#    variables to make necessary Android-specific configuration changes.\n\n#    \n\n#    Also ARMEABI or ARMEABI_V7A or X86 will be set true, mutually exclusive.\n\n#    NEON option will be set true if VFP is set to NEON.\n\n#\n\n#    LIBRARY_OUTPUT_PATH_ROOT should be set in cache to determine where Android\n\n#    libraries will be installed.\n\n#    Default is ${CMAKE_SOURCE_DIR}, and the android libs will always be\n\n#    under the ${LIBRARY_OUTPUT_PATH_ROOT}/libs/${ANDROID_NDK_ABI_NAME}\n\n#    (depending on the target ABI). This is convenient for Android packaging.\n\n#\n\n#\n\n#  Change Log:\n\n#   - initial version December 2010 Ethan Rublee ethan.ruble@gmail.com\n\n#   - modified April 2011 Andrey Kamaev andrey.kamaev@itseez.com\n\n#     [+] added possibility to build with NDK (without standalone toolchain)\n\n#     [+] support cross-compilation on Windows (native, no cygwin support)\n\n#     [+] added compiler option to force \"char\" type to be signed\n\n#     [+] added toolchain option to compile to 32-bit ARM instructions\n\n#     [+] added toolchain option to disable SWIG search\n\n#     [+] added platform \"armeabi-v7a with VFPV3\"\n\n#     [~] ARM_TARGETS renamed to ARM_TARGET\n\n#     [+] EXECUTABLE_OUTPUT_PATH is set by toolchain (required on Windows)\n\n#     [~] Fixed bug with ANDROID_API_LEVEL variable\n\n#     [~] turn off SWIG search if it is not found first time\n\n#   - modified May 2011 Andrey Kamaev andrey.kamaev@itseez.com\n\n#     [~] ANDROID_LEVEL is renamed to ANDROID_API_LEVEL\n\n#     [+] ANDROID_API_LEVEL is detected by toolchain if not specified\n\n#     [~] added guard to prevent changing of output directories on the first\n\n#         cmake pass\n\n#     [~] toolchain exits with error if ARM_TARGET is not recognized\n\n#   - modified June 2011 Andrey Kamaev andrey.kamaev@itseez.com\n\n#     [~] default NDK path is updated for version r5c \n\n#     [+] variable CMAKE_SYSTEM_PROCESSOR is set based on ARM_TARGET\n\n#     [~] toolchain install directory is added to linker paths\n\n#     [-] removed SWIG-related stuff from toolchain\n\n#     [+] added macro find_host_package, find_host_program to search\n\n#         packages/programs on the host system\n\n#     [~] fixed path to STL library\n\n#   - modified July 2011 Andrey Kamaev andrey.kamaev@itseez.com\n\n#     [~] fixed options caching\n\n#     [~] search for all supported NDK versions\n\n#     [~] allowed spaces in NDK path\n\n#   - modified September 2011 Andrey Kamaev andrey.kamaev@itseez.com\n\n#     [~] updated for NDK r6b\n\n#   - modified November 2011 Andrey Kamaev andrey.kamaev@itseez.com\n\n#     [*] rewritten for NDK r7\n\n#     [+] x86 toolchain support (experimental)\n\n#     [+] added \"armeabi-v6 with VFP\" ABI for ARMv6 processors.\n\n#     [~] improved compiler and linker flags management\n\n#     [+] support different build flags for Release and Debug configurations\n\n#     [~] by default compiler flags the same as used by ndk-build (but only\n\n#         where reasonable)\n\n#     [~] ANDROID_NDK_TOOLCHAIN_ROOT is splitted to ANDROID_STANDALONE_TOOLCHAIN\n\n#         and ANDROID_TOOLCHAIN_ROOT\n\n#     [~] ARM_TARGET is renamed to ANDROID_ABI\n\n#     [~] ARMEABI_NDK_NAME is renamed to ANDROID_NDK_ABI_NAME\n\n#     [~] ANDROID_API_LEVEL is renamed to ANDROID_NATIVE_API_LEVEL\n\n#   - modified January 2012 Andrey Kamaev andrey.kamaev@itseez.com\n\n#     [+] added stlport_static support (experimental)\n\n#     [+] added special check for cygwin\n\n#     [+] filtered out hidden files (starting with .) while globbing inside NDK\n\n#     [+] automatically applied GLESv2 linkage fix for NDK revisions 5-6\n\n#     [+] added ANDROID_GET_ABI_RAWNAME to get NDK ABI names by CMake flags\n\n#   - modified February 2012 Andrey Kamaev andrey.kamaev@itseez.com\n\n#     [+] updated for NDK r7b\n\n#     [~] fixed cmake try_compile() command\n\n#     [~] Fix for missing install_name_tool on OS X\n\n# ------------------------------------------------------------------------------\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# this one is important\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#this one not so much\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#stl version: by default gnustl_static will be used\n",
        "Line" : 306,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#fight against cygwin\n",
        "Line" : 310,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#remove cygwin from PATH\n",
        "Line" : 319,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#detect current host platform\n",
        "Line" : 327,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#see if we have path to Android NDK\n",
        "Line" : 340,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#see if we have path to Android standalone toolchain\n",
        "Line" : 343,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "#try to find Android NDK in one of the the default locations\n",
        "Line" : 347,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "#try to find Android standalone toolchain in one of the the default locations\n",
        "Line" : 361,
        "CharPositionInLine" : 3
      },
      "12" : {
        "Text" : "#remember found paths\n",
        "Line" : 372,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#try to detect change\n",
        "Line" : 375,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "#try to detect change\n",
        "Line" : 389,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "#get all the details about standalone toolchain\n",
        "Line" : 413,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#do not run gcc every time because it is relatevely expencive\n",
        "Line" : 427,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "#get all the details about NDK\n",
        "Line" : 436,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#build list of available ABIs\n",
        "Line" : 462,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#choose target ABI\n",
        "Line" : 477,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#verify that target ABI is supported\n",
        "Line" : 479,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#remember target ABI\n",
        "Line" : 489,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#set target ABI options\n",
        "Line" : 492,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#need always fallback to older platform\n",
        "Line" : 508,
        "CharPositionInLine" : 1
      },
      "24" : {
        "Text" : "#choose toolchain\n",
        "Line" : 546,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#choose native API level\n",
        "Line" : 591,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#validate\n",
        "Line" : 594,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#setup paths\n",
        "Line" : 613,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# specify the cross compiler\n",
        "Line" : 631,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#there may be a way to make cmake deduce these TODO deduce the rest of the tools\n",
        "Line" : 635,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# [CHANGED] Added\n",
        "Line" : 642,
        "CharPositionInLine" : 142
      },
      "31" : {
        "Text" : "# [CHANGED] Added\n",
        "Line" : 643,
        "CharPositionInLine" : 134
      },
      "32" : {
        "Text" : "#export directories\n",
        "Line" : 651,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#setup output directories\n",
        "Line" : 655,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#includes\n",
        "Line" : 670,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#STL bits includes\n",
        "Line" : 676,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#flags and definitions\n",
        "Line" : 690,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# quotes will break try_compile and compiler identification\n",
        "Line" : 693,
        "CharPositionInLine" : 1
      },
      "38" : {
        "Text" : "# Force set compilers because standard identification works badly for us\n",
        "Line" : 702,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# NDK flags\n",
        "Line" : 710,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# NDK also defines -ffunction-sections -funwind-tables but they result in worse OpenCV performance\n",
        "Line" : 712,
        "CharPositionInLine" : 1
      },
      "41" : {
        "Text" : "# extra arm-specific flags\n",
        "Line" : 724,
        "CharPositionInLine" : 1
      },
      "42" : {
        "Text" : "#release and debug flags\n",
        "Line" : 741,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "#It is recommended to use the -mthumb compiler flag to force the generation\n\n#of 16-bit Thumb-1 instructions (the default being 32-bit ARM ones).\n\n# O3 instead of O2/Os in release mode - like cmake sets for desktop gcc\n",
        "Line" : 744,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# always compile ARMEABI_V6 in arm mode; otherwise there is no difference from ARMEABI\n\n# O3 instead of O2/Os in release mode - like cmake sets for desktop gcc\n",
        "Line" : 752,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "#ABI-specific flags\n",
        "Line" : 770,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#sse?\n",
        "Line" : 785,
        "CharPositionInLine" : 48
      },
      "47" : {
        "Text" : "#linker flags\n",
        "Line" : 788,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "#STL\n",
        "Line" : 791,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "#gcc exception & rtti support\n",
        "Line" : 815,
        "CharPositionInLine" : 1
      },
      "50" : {
        "Text" : "#cleanup for STL search\n",
        "Line" : 832,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "#other linker flags\n",
        "Line" : 836,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "#libGLESv2.so in NDK's prior to r7 refers to exteranal symbols. So this flag option is required for all projects using OpenGL from native.\n",
        "Line" : 845,
        "CharPositionInLine" : 1
      },
      "53" : {
        "Text" : "# this is *required* to use the following linker flags that routes around\n\n# a CPU bug in some Cortex-A8 implementations:\n",
        "Line" : 857,
        "CharPositionInLine" : 1
      },
      "54" : {
        "Text" : "#cache flags\n",
        "Line" : 862,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "#finish flags\n",
        "Line" : 876,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "#set these global flags for cmake client scripts to change behavior\n",
        "Line" : 881,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# where is the target environment \n",
        "Line" : 885,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# only search for libraries and includes in the ndk toolchain\n",
        "Line" : 888,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "#macro to find packages on the host OS\n",
        "Line" : 894,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "#macro to find programs on the host OS\n",
        "Line" : 916,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# export toolchain settings for the try_compile() command\n",
        "Line" : 951,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# set some obsolete variables for backward compatibility\n",
        "Line" : 964,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# Variables controlling behavior or set by cmake toolchain:\n\n#   ANDROID_ABI : \"armeabi-v7a\" (default), \"armeabi\", \"armeabi-v7a with NEON\", \"armeabi-v7a with VFPV3\", \"armeabi-v6 with VFP\", \"x86\"\n\n#   ANDROID_FORCE_ARM_BUILD : ON/OFF\n\n#   ANDROID_NATIVE_API_LEVEL : 3,4,5,8,9,14 (depends on NDK version)\n\n#   ANDROID_NO_UNDEFINED : ON/OFF\n\n#   ANDROID_SO_UNDEFINED : OFF/ON  (default depends on NDK version)\n\n#   ANDROID_SET_OBSOLETE_VARIABLES : ON/OFF\n\n#   LIBRARY_OUTPUT_PATH_ROOT : <any valid path>\n\n#   ANDROID_USE_STLPORT : OFF/ON - EXPERIMENTAL!!! \n\n#   ANDROID_FORBID_SYGWIN : ON/OFF\n\n# Can be set only at the first run:\n\n#   ANDROID_NDK\n\n#   ANDROID_STANDALONE_TOOLCHAIN\n\n# Obsolete:\n\n#   ANDROID_API_LEVEL : superseded by ANDROID_NATIVE_API_LEVEL\n\n#   ARM_TARGET : superseded by ANDROID_ABI\n\n#   ARM_TARGETS : superseded by ANDROID_ABI (can be set only)\n\n#   ANDROID_NDK_TOOLCHAIN_ROOT : superseded by ANDROID_STANDALONE_TOOLCHAIN (can be set only)\n\n#   ANDROID_LEVEL : superseded by ANDROID_NATIVE_API_LEVEL (completely removed)\n\n#\n\n# Primary read-only variables:\n\n#   ANDROID : always TRUE\n\n#   ARMEABI : TRUE for arm v6 and older devices\n\n#   ARMEABI_V6 : TRUE for arm v6\n\n#   ARMEABI_V7A : TRUE for arm v7a\n\n#   NEON : TRUE if NEON unit is enabled\n\n#   VFPV3 : TRUE if VFP version 3 is enabled\n\n#   X86 : TRUE if configured for x86\n\n#   BUILD_ANDROID : always TRUE\n\n#   BUILD_WITH_ANDROID_NDK : TRUE if NDK is used\n\n#   BUILD_WITH_STANDALONE_TOOLCHAIN : TRUE if standalone toolchain is used\n\n#   ANDROID_NDK_HOST_SYSTEM_NAME : \"windows\", \"linux-x86\" or \"darwin-x86\" depending on host platform\n\n#   ANDROID_NDK_ABI_NAME : \"armeabi\", \"armeabi-v7a\" or \"x86\" depending on ANDROID_ABI\n\n#   ANDROID_ARCH_NAME : \"arm\" or \"x86\" depending on ANDROID_ABI\n\n#   TOOL_OS_SUFFIX : \"\" or \".exe\" depending on host platform\n\n#   ANDROID_SYSTEM_INCLUDE_DIRS\n\n#   ANDROID_SYSTEM_LIB_DIRS\n\n# Obsolete:\n\n#   ARMEABI_NDK_NAME : superseded by ANDROID_NDK_ABI_NAME\n\n#\n\n# Secondary (less stable) read-only variables:\n\n#   ANDROID_COMPILER_VERSION : GCC version used\n\n#   ANDROID_CXX_FLAGS : C/C++ compiler flags required by Android platform\n\n#   ANDROID_SUPPORTED_ABIS : list of currently allowed values for ANDROID_ABI\n\n#   ANDROID_SYSROOT : path to the compiler sysroot\n\n#   ANDROID_TOOLCHAIN_NAME : \"standalone\", \"arm-linux-androideabi-4.4.3\" or \"x86-4.4.3\" or something similar.\n\n#   ANDROID_TOOLCHAIN_MACHINE_NAME : \"arm-linux-androideabi\", \"arm-eabi\" or \"i686-android-linux\"\n\n#   ANDROID_TOOLCHAIN_ROOT : path to the top level of toolchain (standalone or placed inside NDK)\n\n#   ANDROID_SUPPORTED_NATIVE_API_LEVELS : list of native API levels found inside NDK\n\n#\n\n# Defaults:\n\n#   ANDROID_DEFAULT_NDK_API_LEVEL\n\n#   ANDROID_DEFAULT_NDK_API_LEVEL_${ARCH}\n\n#   ANDROID_NDK_SEARCH_PATHS\n\n#   ANDROID_STANDALONE_TOOLCHAIN_SEARCH_PATH\n\n#   ANDROID_SUPPORTED_ABIS_${ARCH}\n\n#   ANDROID_SUPPORTED_NDK_VERSIONS\n",
        "Line" : 973,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 64
    },
    "src/target/CMakeLists.txt" : {
      "ObjectId" : "eadf0db9f31d36eea447fdb18f72e22afc7c8808",
      "LastModified" : "2017-09-22T21:14:46Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "toolchain/toolchain-cross-compile-mingw32.cmake" : {
      "ObjectId" : "b262dd471985273cfea36523990f10326e87e6c0",
      "LastModified" : "2017-09-22T21:14:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Which compilers to use for C and C++\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Adjust the default behaviour of the FIND_XXX() commands:\n\n# Search headers and libraries in the target environment; search\n\n# programs in the host environment.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "CMAKE" : 8,
    "QMAKE" : 1
  },
  "ElapsedTime" : 1198
}