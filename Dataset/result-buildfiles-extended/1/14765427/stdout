{
  "Repository" : "14765427",
  "Revision" : "HEAD",
  "ObjectId" : "cbf61bcb6d7affd5831f975263d98c79c8e8ce79",
  "CommitTime" : "2018-01-07T02:10:13Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "27d98fdbd3afff1a498e137c492654de79d53594",
      "LastModified" : "2018-01-04T00:32:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# HACK: Apparently not set automatically either\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# HACK: Apparently not set automatically?\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Modules/FindBox2D.cmake" : {
      "ObjectId" : "28405a068c93481e6c7407e0baa4ab5793120482",
      "LastModified" : "2016-05-26T03:35:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Box2D\n\n# Once done this will define\n\n#  BOX2D_FOUND - System has Box2D\n\n#  BOX2D_INCLUDE_DIRS - The Box2D include directories\n\n#  BOX2D_LIBRARIES - The libraries needed to use Box2D\n\n#  BOX2D_DEFINITIONS - Compiler switches required for using Box2D\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindFMOD.cmake" : {
      "ObjectId" : "b23f621c3262be43b49d392274d36183078a9b39",
      "LastModified" : "2018-01-05T01:11:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find FMOD includes and library\n\n#\n\n# This module defines\n\n#  FMOD_INCLUDE_DIRS\n\n#  FMOD_LIBRARIES, the libraries to link against to use FMOD.\n\n#  FMOD_LIBRARY_DIRS, the location of the libraries\n\n#  FMOD_FOUND, If false, do not try to use FMOD\n\n#\n\n# Copyright Â© 2007-2008, Matt Williams\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Windows\n",
        "Line" : 44,
        "CharPositionInLine" : 11
      },
      "2" : {
        "Text" : "#Unix\n",
        "Line" : 49,
        "CharPositionInLine" : 13
      },
      "3" : {
        "Text" : "# TODO i don't know how this would be registered in pkg-config\n",
        "Line" : 52,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#If PkgConfig couldn't find OGRE...\n",
        "Line" : 58,
        "CharPositionInLine" : 20
      },
      "5" : {
        "Text" : "#Do some preparation\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/Modules/FindSDL2.cmake" : {
      "ObjectId" : "06c1e99671b641a7a0dd4ec583a8e7e3ab2a9bf6",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Locate SDL2 library\n\n# This module defines\n\n#  SDL2_LIBRARY, the name of the library to link against\n\n#  SDL2_FOUND, if false, do not try to link to SDL\n\n#  SDL2_INCLUDE_DIR, where to find SDL.h\n\n#  SDL2_VERSION_STRING, human-readable string containing the version of SDL2\n\n#\n\n# This module responds to the the flag:\n\n#  SDL2_BUILDING_LIBRARY\n\n#    If this is defined, then no SDL2_main will be linked in because\n\n#    only applications need main().\n\n#    Otherwise, it is assumed you are building an application and this\n\n#    module will attempt to locate and set the the proper link flags\n\n#    as part of the returned SDL2_LIBRARY variable.\n\n#\n\n# Don't forget to include SDL2main.h and SDL2main.m your project for the\n\n# OS X framework based version. (Other versions link to -lSDL2main which\n\n# this module will try to find on your behalf.) Also for OS X, this\n\n# module will automatically add the -framework Cocoa on your behalf.\n\n#\n\n#\n\n# Additional Note: If you see an empty SDL2_LIBRARY_TEMP in your configuration\n\n# and no SDL2_LIBRARY, it means CMake did not find your SDL2 library\n\n# (SDL2.dll, libsdl2.so, SDL2.framework, etc).\n\n# Set SDL2_LIBRARY_TEMP to point to your SDL library, and configure again.\n\n# Similarly, if you see an empty SDL2MAIN_LIBRARY, you should set this value\n\n# as appropriate. These values are used to generate the final SDL2_LIBRARY\n\n# variable, but when these values are unset, SDL2_LIBRARY does not get created.\n\n#\n\n#\n\n# $SDL2DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$SDL2DIR\n\n# used in building SDL2.\n\n# l.e.galup  9-20-02\n\n#\n\n# Modified by Eric Wing.\n\n# Added code to assist with automated building by using environmental variables\n\n# and providing a more controlled/consistent search behavior.\n\n# Added new modifications to recognize OS X frameworks and\n\n# additional Unix paths (FreeBSD, etc).\n\n# Also corrected the header search path to follow \"proper\" SDL guidelines.\n\n# Added a search for SDLmain which is needed by some platforms.\n\n# Added a search for threads which is needed by some platforms.\n\n# Added needed compile switches for MinGW.\n\n#\n\n# On OSX, this will prefer the Framework version (if found) over others.\n\n# People will have to manually change the cache values of\n\n# SDL2_LIBRARY to override this selection or set the CMake environment\n\n# CMAKE_INCLUDE_PATH to modify the search paths.\n\n#\n\n# Note that the header path has changed from SDL/SDL.h to just SDL.h\n\n# This needed to change because \"proper\" SDL convention\n\n# is #include \"SDL.h\", not <SDL/SDL.h>. This is done for portability\n\n# reasons because not all systems place things in SDL/ (see FreeBSD).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2003-2009 Kitware, Inc.\n\n# Copyright 2012 Benjamin Eikel\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# SDL-1.1 is the name used by FreeBSD ports...\n\n# don't confuse it for the version number.\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# SDL-1.1\n",
        "Line" : 79,
        "CharPositionInLine" : 13
      },
      "4" : {
        "Text" : "# Non-OS X framework versions expect you to also dynamically link to\n\n# SDLmain. This is mainly for Windows and OS X. Other (Unix) platforms\n\n# seem to provide SDLmain for compatibility even though they don't\n\n# necessarily need it.\n",
        "Line" : 87,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# SDLmain-1.1\n",
        "Line" : 92,
        "CharPositionInLine" : 21
      },
      "6" : {
        "Text" : "# SDL may require threads on your system.\n\n# The Apple build may not need an explicit flag because one of the\n\n# frameworks may already provide it.\n\n# But for non-OSX systems, I will use the CMake Threads package.\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# MinGW needs an additional library, mwindows\n\n# It's total link flags should look like -lmingw32 -lSDLmain -lSDL -lmwindows\n\n# (Actually on second look, I think it only needs one of the m* libraries.)\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# For SDLmain\n",
        "Line" : 121,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# For OS X, SDL uses Cocoa as a backend so it must link to Cocoa.\n\n# CMake doesn't display the -framework Cocoa string in the UI even\n\n# though it actually is there if I modify a pre-used variable.\n\n# I think it has something to do with the CACHE STRING.\n\n# So I use a temporary variable until the end so I can set the\n\n# \"real\" variable in one-shot.\n",
        "Line" : 130,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# For threads, as mentioned Apple doesn't need this.\n\n# In fact, there seems to be a problem if I used the Threads package\n\n# and try using this line, so I'm just skipping it entirely for OS X.\n",
        "Line" : 140,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# For MinGW library\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Set the final string here so the GUI reflects the final state.\n",
        "Line" : 152,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Set the temp variable to INTERNAL so it is not seen in the CMake GUI\n",
        "Line" : 154,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 14
    },
    "cmake/Modules/Findglm.cmake" : {
      "ObjectId" : "e2d45a8939eeac36c624a22f7fac706a5695ae9d",
      "LastModified" : "2018-01-05T01:14:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Find GLM\n\n#\n\n# Try to find GLM : OpenGL Mathematics.\n\n# This module defines \n\n# - GLM_INCLUDE_DIRS\n\n# - GLM_FOUND\n\n#\n\n# The following variables can be set as arguments for the module.\n\n# - GLM_ROOT_DIR : Root library directory of GLM \n\n#\n\n# References:\n\n# - https://github.com/Groovounet/glm/blob/master/util/FindGLM.cmake\n\n# - https://bitbucket.org/alfonse/gltut/src/28636298c1c0/glm-0.9.0.7/FindGLM.cmake\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Additional modules\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find include files\n",
        "Line" : 21,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# Find include files\n",
        "Line" : 30,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# Handle REQUIRD argument, define *_FOUND variable\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Define GLM_INCLUDE_DIRS\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Hide some variables\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "dep/CMakeLists.txt" : {
      "ObjectId" : "ab47fae88b25c44c786a7e69e6c8af9d568a8ec5",
      "LastModified" : "2018-01-05T01:14:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dep/imgui/CMakeLists.txt" : {
      "ObjectId" : "10e5692ea5123d2ae923a8b0f09abc82aff6cfe4",
      "LastModified" : "2016-06-13T01:22:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# for automatic ImVec<->glm::vec conversion\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#target_link_libraries(imgui)\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "dep/lua/CMakeLists.txt" : {
      "ObjectId" : "c3e92ca8eb44f9963321357a4c35fa8290cdc90b",
      "LastModified" : "2016-06-13T01:22:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dep/lua/Makefile" : {
      "ObjectId" : "e2233c699ece437f18d8043e03b225d882b479db",
      "LastModified" : "2016-06-13T01:22:27Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Simple makefile for building lua as static lib\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "dep/squish/CMakeLists.txt" : {
      "ObjectId" : "5722ea76edbb82c46899e47f05d4334806429d61",
      "LastModified" : "2018-01-05T01:14:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "engine/CMakeLists.txt" : {
      "ObjectId" : "e7ed7d532203542cdcb69157e5baedd1a19202eb",
      "LastModified" : "2018-01-05T01:14:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#imgui_impl_opengl2.cpp\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "game/CMakeLists.txt" : {
      "ObjectId" : "472e22b8009ecda11148bc271110e59ffa2f47ea",
      "LastModified" : "2018-01-05T01:14:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "io/CMakeLists.txt" : {
      "ObjectId" : "b2d8bd8f9a0ff5a082d70ff6f953b400e9507e16",
      "LastModified" : "2018-01-05T01:14:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "net/CMakeLists.txt" : {
      "ObjectId" : "68aeb40817a3c32544295d3213a7e52889c3aa8f",
      "LastModified" : "2018-01-05T01:14:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#target_link_libraries(engine imgui lua53 io ${BOX2D_LIBRARY} ${SDL2_LIBRARY})\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/CMakeLists.txt" : {
      "ObjectId" : "50c76c7d4a8e368be23dd8a9ed8395432802267d",
      "LastModified" : "2016-07-10T23:28:50Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/compressor/CMakeLists.txt" : {
      "ObjectId" : "e9328d9058897b0d44c142bb0478687d8f81eb40",
      "LastModified" : "2018-01-05T01:14:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 15,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 1477
}