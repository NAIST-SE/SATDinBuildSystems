{
  "Repository" : "33566427",
  "Revision" : "HEAD",
  "ObjectId" : "1020e483853de9195375a8f5be2a203f050c3a7e",
  "CommitTime" : "2019-03-16T02:04:41Z",
  "Files" : {
    "sdk/_docsgen_common/Makefile" : {
      "ObjectId" : "3149d71eee5bc4a33b6e2b4a98cbe6a06653e254",
      "LastModified" : "2017-07-10T17:18:42Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# User-friendly check for sphinx-build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Internal variables.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "sdk/cpp/core/CMakeLists.txt" : {
      "ObjectId" : "11b3639a1cdcb818f1ce0948f7a4d26c3804115f",
      "LastModified" : "2019-03-07T00:03:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CPack Dynamic Settings\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set (CPACK_PACKAGE_DESCRIPTION_SUMMARY ${YDK_DESCRIPTION})\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CPack Static Settings\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# MAC OS -- not working\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# set(CPACK_GENERATOR \"productbuild\")\n\n# set(CPACK_COMMAND_PKGBUILD \"/usr/bin/pkgbuild\")\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Linux Debian\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# <foo>_<VersionNumber>-<DebianRevisionNumber>_<DebianArchitecture>.deb\n\n# libydk_0.6.0-0.1.alpha_amd64.deb   // Debian\n",
        "Line" : 64,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Linux Fedora\n",
        "Line" : 69,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# <name>-<version>-<release>.<architecture>.(src).rpm\n\n# libydk-0.6.0-0.1.alpha.x86_64.rpm  // RPM\n",
        "Line" : 88,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# include custom Modules\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# set default build type if not specified by user\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Set LibYDK variables\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Set LibNetconf variables\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Set LibYang variables\n",
        "Line" : 294,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Find dependent libraries\n",
        "Line" : 350,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Add LibNetconf\n",
        "Line" : 361,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Add LibYang\n",
        "Line" : 404,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# generate doxygen documentation for ydk_core API\n",
        "Line" : 486,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# clean cmake cache\n",
        "Line" : 498,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "sdk/cpp/core/CMakeModules/FindLibSSH.cmake" : {
      "ObjectId" : "18e80faa89cfcd742f81d887ea1c94cbdf4b10b2",
      "LastModified" : "2017-07-10T17:18:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find LibSSH\n\n# Once done this will define\n\n#\n\n#  LIBSSH_FOUND - system has LibSSH\n\n#  LIBSSH_INCLUDE_DIRS - the LibSSH include directory\n\n#  LIBSSH_LIBRARIES - Link these to use LibSSH\n\n#  LIBSSH_DEFINITIONS - Compiler switches required for using LibSSH\n\n#\n\n#  Copyright (c) 2009 Andreas Schneider <asn@cryptomilk.org>\n\n#\n\n#  Redistribution and use in source and binary forms, with or without\n\n#  modification, are permitted provided that the following conditions\n\n#  are met:\n\n#\n\n#  1. Redistributions of source code must retain the copyright\n\n#     notice, this list of conditions and the following disclaimer.\n\n#  2. Redistributions in binary form must reproduce the copyright\n\n#     notice, this list of conditions and the following disclaimer in the\n\n#     documentation and/or other materials provided with the distribution.\n\n#  3. The name of the author may not be used to endorse or promote products \n\n#     derived from this software without specific prior written permission.\n\n#\n\n#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n\n#  IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n\n#  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n\n#  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\n\n#  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n\n#  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n\n#  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Older versions of libssh like libssh-0.2 have LIBSSH_VERSION but not LIBSSH_VERSION_MAJOR\n",
        "Line" : 82,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# If the version is too old, but libs and includes are set,\n\n# find_package_handle_standard_args will set LIBSSH_FOUND to TRUE again,\n\n# so we need this if() here.\n",
        "Line" : 103,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# show the LIBSSH_INCLUDE_DIRS and LIBSSH_LIBRARIES variables only in the advanced view\n",
        "Line" : 111,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "sdk/cpp/core/CMakeModules/FindPCRE.cmake" : {
      "ObjectId" : "a28ff11758861e6037c55c601f4edfdf960501d8",
      "LastModified" : "2017-07-10T17:18:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2007-2009 LuaDist.\n\n# Created by Peter Kapec <kapecp@gmail.com>\n\n# Redistribution and use of this file is allowed according to the terms of the MIT license.\n\n# Note:\n\n# Searching headers and libraries is very simple and is NOT as powerful as scripts\n\n# distributed with CMake, because LuaDist defines directories to search for.\n\n# Everyone is encouraged to contact the author with improvements. Maybe this file\n\n# becomes part of CMake distribution sometimes.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Find pcre\n\n# Find the native PCRE headers and libraries.\n\n#\n\n# PCRE_INCLUDE_DIRS - where to find pcre.h, etc.\n\n# PCRE_LIBRARIES - List of libraries when using pcre.\n\n# PCRE_FOUND - True if pcre found.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look for the header file.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Look for the library.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set PCRE_FOUND to TRUE if all listed variables are TRUE.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Copy the results to the output variables.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "sdk/cpp/core/docsgen/Makefile" : {
      "ObjectId" : "dbaa787ae2da2dd716686046b497442206ade2bc",
      "LastModified" : "2017-07-10T17:18:42Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# User-friendly check for sphinx-build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Internal variables.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "sdk/cpp/core/samples/CMakeLists.txt" : {
      "ObjectId" : "3c2ecd3865b0a54440b972ebe1f961f91d109dd6",
      "LastModified" : "2018-12-02T16:05:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "sdk/cpp/core/tests/CMakeLists.txt" : {
      "ObjectId" : "c72668de48e7bbee699a4829e9206c8c8b32c5a7",
      "LastModified" : "2018-12-02T16:05:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "sdk/cpp/core/tests/confd/augmentation/Makefile" : {
      "ObjectId" : "53f2dfd57c22657e64b422cfc667ee305498951f",
      "LastModified" : "2017-10-20T17:27:42Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "######################################################################\n\n# Where is ConfD installed? Make sure CONFD_DIR points it out\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Include standard ConfD build definitions and rules\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# In case CONFD_DIR is not set (correctly), this rule will trigger\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "######################################################################\n\n# Example specific definitions and rules\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "######################################################################\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "######################################################################\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "######################################################################\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "######################################################################\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "### Killing any confd daemon or DHCP confd agents\n",
        "Line" : 89,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "######################################################################\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "sdk/cpp/core/tests/confd/deviation/Makefile" : {
      "ObjectId" : "4f625223218a4372614e121ec1616f6b60795492",
      "LastModified" : "2018-12-02T16:05:02Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "######################################################################\n\n# Where is ConfD installed? Make sure CONFD_DIR points it out\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Include standard ConfD build definitions and rules\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# In case CONFD_DIR is not set (correctly), this rule will trigger\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "######################################################################\n\n# Example specific definitions and rules\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "######################################################################\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "######################################################################\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "######################################################################\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "######################################################################\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "######################################################################\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "sdk/cpp/core/tests/confd/ydktest/Makefile" : {
      "ObjectId" : "1c1c7dfece4fadf485685014a19c189e8c905d44",
      "LastModified" : "2018-12-02T16:05:02Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "######################################################################\n\n# Where is ConfD installed? Make sure CONFD_DIR points it out\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Include standard ConfD build definitions and rules\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# In case CONFD_DIR is not set (correctly), this rule will trigger\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "######################################################################\n\n# Example specific definitions and rules\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "######################################################################\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "######################################################################\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "######################################################################\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "######################################################################\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "### Killing any confd daemon or DHCP confd agents\n",
        "Line" : 184,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "######################################################################\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "sdk/cpp/gnmi/CMakeLists.txt" : {
      "ObjectId" : "9448449f634183f90b4402ce5020ae7dafceac89",
      "LastModified" : "2019-03-06T21:44:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CPack Dynamic Settings\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CPack Static Settings\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# MAC OS -- not working\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Linux Debian\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# <foo>_<VersionNumber>-<DebianRevisionNumber>_<DebianArchitecture>.deb\n\n# libydk_0.6.0-0.1.alpha_amd64.deb   // Debian\n",
        "Line" : 56,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Linux Fedora\n",
        "Line" : 61,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# <name>-<version>-<release>.<architecture>.(src).rpm\n\n# libydk-0.6.0-0.1.alpha.x86_64.rpm  // RPM\n",
        "Line" : 80,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "#include(FindProtobuf)\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# include custom Modules\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# set default build type if not specified by user\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Set LibYDK variables\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Set gNMI variables\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Find dependent libraries\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Add LibgNMI\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#    ydk\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# generate doxygen documentation for ydk_gnmi API\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# clean cmake cache\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "sdk/cpp/gnmi/CMakeModules/FindGRPC.cmake" : {
      "ObjectId" : "1326a4eee1e8d420b7eb7d6226685980285b448d",
      "LastModified" : "2018-12-02T16:05:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Locate and configure the gRPC library\n\n#\n\n# Adds the following targets:\n\n#\n\n#  gRPC::grpc - gRPC library\n\n#  gRPC::grpc++ - gRPC C++ library\n\n#  gRPC::grpc++_reflection - gRPC C++ reflection library\n\n#  gRPC::grpc_cpp_plugin - C++ generator plugin for Protocol Buffers\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Generates C++ sources from the .proto files\n\n#\n\n# grpc_generate_cpp (<SRCS> <HDRS> <DEST> [<ARGN>...])\n\n#\n\n#  SRCS - variable to define with autogenerated source files\n\n#  HDRS - variable to define with autogenerated header files\n\n#  DEST - directory where the source files will be created\n\n#  ARGN - .proto files\n\n#\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find gRPC include directory\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find gRPC library\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Find gRPC C++ library\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Find gRPC C++ reflection library\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Find gRPC CPP generator\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "sdk/cpp/gnmi/CMakeModules/FindLibSSH.cmake" : {
      "ObjectId" : "18e80faa89cfcd742f81d887ea1c94cbdf4b10b2",
      "LastModified" : "2018-12-02T16:05:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find LibSSH\n\n# Once done this will define\n\n#\n\n#  LIBSSH_FOUND - system has LibSSH\n\n#  LIBSSH_INCLUDE_DIRS - the LibSSH include directory\n\n#  LIBSSH_LIBRARIES - Link these to use LibSSH\n\n#  LIBSSH_DEFINITIONS - Compiler switches required for using LibSSH\n\n#\n\n#  Copyright (c) 2009 Andreas Schneider <asn@cryptomilk.org>\n\n#\n\n#  Redistribution and use in source and binary forms, with or without\n\n#  modification, are permitted provided that the following conditions\n\n#  are met:\n\n#\n\n#  1. Redistributions of source code must retain the copyright\n\n#     notice, this list of conditions and the following disclaimer.\n\n#  2. Redistributions in binary form must reproduce the copyright\n\n#     notice, this list of conditions and the following disclaimer in the\n\n#     documentation and/or other materials provided with the distribution.\n\n#  3. The name of the author may not be used to endorse or promote products \n\n#     derived from this software without specific prior written permission.\n\n#\n\n#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n\n#  IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n\n#  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n\n#  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\n\n#  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n\n#  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n\n#  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Older versions of libssh like libssh-0.2 have LIBSSH_VERSION but not LIBSSH_VERSION_MAJOR\n",
        "Line" : 82,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# If the version is too old, but libs and includes are set,\n\n# find_package_handle_standard_args will set LIBSSH_FOUND to TRUE again,\n\n# so we need this if() here.\n",
        "Line" : 103,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# show the LIBSSH_INCLUDE_DIRS and LIBSSH_LIBRARIES variables only in the advanced view\n",
        "Line" : 111,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "sdk/cpp/gnmi/CMakeModules/FindProtobuf.cmake" : {
      "ObjectId" : "4cef90a35f9bc6e59d4a8161505e06578d636fda",
      "LastModified" : "2018-12-02T16:05:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Locate and configure the Google Protocol Buffers library\n\n#\n\n# Adds the following targets:\n\n#\n\n#  protobuf::libprotobuf - Protobuf library\n\n#  protobuf::libprotobuf-lite - Protobuf lite library\n\n#  protobuf::libprotoc - Protobuf Protoc Library\n\n#  protobuf::protoc - protoc executable\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Generates C++ sources from the .proto files\n\n#\n\n# protobuf_generate_cpp (<SRCS> <HDRS> <DEST> [<ARGN>...])\n\n#\n\n#  SRCS - variable to define with autogenerated source files\n\n#  HDRS - variable to define with autogenerated header files\n\n#  DEST - directory where the source files will be created\n\n#  ARGN - .proto files\n\n#\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Create an include path for each file specified\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# By default have PROTOBUF_GENERATE_CPP macro pass -I to protoc\n\n# for each directory where a proto file is referenced.\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Find the include directory\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The Protobuf library\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The Protobuf lite library\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# The Protobuf Protoc Library\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Find the protoc Executable\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "sdk/cpp/gnmi/samples/CMakeLists.txt" : {
      "ObjectId" : "729514bda623618f267d257f19ada20903ad4b54",
      "LastModified" : "2018-12-09T01:10:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set default build type if not specified by user\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find dependent libraries\n\n#find_library(ydk_openconfig_location ydk_openconfig)\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#find_library(ydk_cisco_ios_xe_location ydk_cisco_ios_xe)\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# set default build type if not specified by user\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "sdk/cpp/gnmi/samples/CMakeModules/FindGRPC.cmake" : {
      "ObjectId" : "1326a4eee1e8d420b7eb7d6226685980285b448d",
      "LastModified" : "2018-12-02T16:05:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Locate and configure the gRPC library\n\n#\n\n# Adds the following targets:\n\n#\n\n#  gRPC::grpc - gRPC library\n\n#  gRPC::grpc++ - gRPC C++ library\n\n#  gRPC::grpc++_reflection - gRPC C++ reflection library\n\n#  gRPC::grpc_cpp_plugin - C++ generator plugin for Protocol Buffers\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Generates C++ sources from the .proto files\n\n#\n\n# grpc_generate_cpp (<SRCS> <HDRS> <DEST> [<ARGN>...])\n\n#\n\n#  SRCS - variable to define with autogenerated source files\n\n#  HDRS - variable to define with autogenerated header files\n\n#  DEST - directory where the source files will be created\n\n#  ARGN - .proto files\n\n#\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find gRPC include directory\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find gRPC library\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Find gRPC C++ library\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Find gRPC C++ reflection library\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Find gRPC CPP generator\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "sdk/cpp/gnmi/samples/CMakeModules/FindProtobuf.cmake" : {
      "ObjectId" : "4cef90a35f9bc6e59d4a8161505e06578d636fda",
      "LastModified" : "2018-12-02T16:05:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Locate and configure the Google Protocol Buffers library\n\n#\n\n# Adds the following targets:\n\n#\n\n#  protobuf::libprotobuf - Protobuf library\n\n#  protobuf::libprotobuf-lite - Protobuf lite library\n\n#  protobuf::libprotoc - Protobuf Protoc Library\n\n#  protobuf::protoc - protoc executable\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Generates C++ sources from the .proto files\n\n#\n\n# protobuf_generate_cpp (<SRCS> <HDRS> <DEST> [<ARGN>...])\n\n#\n\n#  SRCS - variable to define with autogenerated source files\n\n#  HDRS - variable to define with autogenerated header files\n\n#  DEST - directory where the source files will be created\n\n#  ARGN - .proto files\n\n#\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Create an include path for each file specified\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# By default have PROTOBUF_GENERATE_CPP macro pass -I to protoc\n\n# for each directory where a proto file is referenced.\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Find the include directory\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The Protobuf library\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The Protobuf lite library\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# The Protobuf Protoc Library\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Find the protoc Executable\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "sdk/cpp/gnmi/tests/CMakeLists.txt" : {
      "ObjectId" : "2f89e8ab950d7e1214acb13bb0b814de9e9def64",
      "LastModified" : "2018-12-02T16:05:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set default build type if not specified by user\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#include_directories(\n\n#    ${PROJECT_SOURCE_DIR}/../core/src\n\n#)\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "sdk/cpp/gnmi/tests/CMakeModules/FindGRPC.cmake" : {
      "ObjectId" : "1326a4eee1e8d420b7eb7d6226685980285b448d",
      "LastModified" : "2018-12-02T16:05:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Locate and configure the gRPC library\n\n#\n\n# Adds the following targets:\n\n#\n\n#  gRPC::grpc - gRPC library\n\n#  gRPC::grpc++ - gRPC C++ library\n\n#  gRPC::grpc++_reflection - gRPC C++ reflection library\n\n#  gRPC::grpc_cpp_plugin - C++ generator plugin for Protocol Buffers\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Generates C++ sources from the .proto files\n\n#\n\n# grpc_generate_cpp (<SRCS> <HDRS> <DEST> [<ARGN>...])\n\n#\n\n#  SRCS - variable to define with autogenerated source files\n\n#  HDRS - variable to define with autogenerated header files\n\n#  DEST - directory where the source files will be created\n\n#  ARGN - .proto files\n\n#\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find gRPC include directory\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find gRPC library\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Find gRPC C++ library\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Find gRPC C++ reflection library\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Find gRPC CPP generator\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "sdk/cpp/gnmi/tests/CMakeModules/FindLibYDK.cmake" : {
      "ObjectId" : "01a88a7d896f1c49b014332efd8acdb446b15c82",
      "LastModified" : "2018-12-02T16:05:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find LibYDK\n\n# Once done this will define\n\n#\n\n#  LIBYDK_FOUND - system has LibYDK\n\n#  LIBYDK_INCLUDE_DIRS - the LibYDK include directory\n\n#  LIBYDK_LIBRARIES - Link these to use LibYANG LibPCRE Lib\n\n#\n\n# ####################################################################\n\n# Licensed to the Apache Software Foundation (ASF) under one\n\n# or more contributor license agreements.  See the NOTICE file\n\n# distributed with this work for additional information\n\n# regarding copyright ownership.  The ASF licenses this file\n\n# to you under the Apache License, Version 2.0 (the\n\n# \"License\"); you may not use this file except in compliance\n\n# with the License.  You may obtain a copy of the License at\n\n#\n\n#    http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing,\n\n# software distributed under the License is distributed on an\n\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n\n# KIND, either express or implied.  See the License for the\n\n# specific language governing permissions and limitations\n\n# under the License.\n\n#\n\n######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# show the LIBYDK_INCLUDE_DIRS and LIBYDK_LIBRARIES variables only in the advanced view\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "sdk/cpp/gnmi/tests/CMakeModules/FindLibYDKgnmi.cmake" : {
      "ObjectId" : "733e02d5f1d61f1ffb852ec6d0dc3fce934f143d",
      "LastModified" : "2018-12-02T16:05:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find LibYDK\n\n# Once done this will define\n\n#\n\n#  LIBYDK_GNMI_FOUND - system has LibYDK\n\n#  LIBYDK_GNMI_INCLUDE_DIRS - the LibYDK include directory\n\n#  LIBYDK_GNMI_LIBRARIES - Link these to use LibYANG LibPCRE Lib\n\n#\n\n# ####################################################################\n\n# Licensed to the Apache Software Foundation (ASF) under one\n\n# or more contributor license agreements.  See the NOTICE file\n\n# distributed with this work for additional information\n\n# regarding copyright ownership.  The ASF licenses this file\n\n# to you under the Apache License, Version 2.0 (the\n\n# \"License\"); you may not use this file except in compliance\n\n# with the License.  You may obtain a copy of the License at\n\n#\n\n#    http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing,\n\n# software distributed under the License is distributed on an\n\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n\n# KIND, either express or implied.  See the License for the\n\n# specific language governing permissions and limitations\n\n# under the License.\n\n#\n\n######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# show the LIBYDK_INCLUDE_DIRS and LIBYDK_LIBRARIES variables only in the advanced view\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "sdk/cpp/gnmi/tests/CMakeModules/FindProtobuf.cmake" : {
      "ObjectId" : "4cef90a35f9bc6e59d4a8161505e06578d636fda",
      "LastModified" : "2018-12-02T16:05:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Locate and configure the Google Protocol Buffers library\n\n#\n\n# Adds the following targets:\n\n#\n\n#  protobuf::libprotobuf - Protobuf library\n\n#  protobuf::libprotobuf-lite - Protobuf lite library\n\n#  protobuf::libprotoc - Protobuf Protoc Library\n\n#  protobuf::protoc - protoc executable\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Generates C++ sources from the .proto files\n\n#\n\n# protobuf_generate_cpp (<SRCS> <HDRS> <DEST> [<ARGN>...])\n\n#\n\n#  SRCS - variable to define with autogenerated source files\n\n#  HDRS - variable to define with autogenerated header files\n\n#  DEST - directory where the source files will be created\n\n#  ARGN - .proto files\n\n#\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Create an include path for each file specified\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# By default have PROTOBUF_GENERATE_CPP macro pass -I to protoc\n\n# for each directory where a proto file is referenced.\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Find the include directory\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The Protobuf library\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The Protobuf lite library\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# The Protobuf Protoc Library\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Find the protoc Executable\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "sdk/cpp/packages/CMakeLists.txt" : {
      "ObjectId" : "e05af3bf659d2ef86bbcfa1726a7a9cb7dd18e99",
      "LastModified" : "2019-03-06T21:44:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CPack Dynamic Settings\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set (CPACK_PACKAGE_DESCRIPTION_SUMMARY ${YDK_DESCRIPTION})\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CPack Static Settings\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# MAC OS -- not working\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# set(CPACK_GENERATOR \"productbuild\")\n\n# set(CPACK_COMMAND_PKGBUILD \"/usr/bin/pkgbuild\")\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Linux Debian\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# <foo>_<VersionNumber>-<DebianRevisionNumber>_<DebianArchitecture>.deb\n\n# libydk_0.6.0-0.1.alpha_amd64.deb   // Debian\n",
        "Line" : 64,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Linux Fedora\n",
        "Line" : 69,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# <name>-<version>-<release>.<architecture>.(src).rpm\n\n# libydk-0.6.0-0.1.alpha.x86_64.rpm  // RPM\n",
        "Line" : 88,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# include custom Modules\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# set default build type if not specified by user\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# generate doxygen documentation for ydk_core API\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# clean cmake cache\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "sdk/cpp/packages/CMakeModules/FindLibYDK.cmake" : {
      "ObjectId" : "01a88a7d896f1c49b014332efd8acdb446b15c82",
      "LastModified" : "2018-12-02T16:05:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find LibYDK\n\n# Once done this will define\n\n#\n\n#  LIBYDK_FOUND - system has LibYDK\n\n#  LIBYDK_INCLUDE_DIRS - the LibYDK include directory\n\n#  LIBYDK_LIBRARIES - Link these to use LibYANG LibPCRE Lib\n\n#\n\n# ####################################################################\n\n# Licensed to the Apache Software Foundation (ASF) under one\n\n# or more contributor license agreements.  See the NOTICE file\n\n# distributed with this work for additional information\n\n# regarding copyright ownership.  The ASF licenses this file\n\n# to you under the Apache License, Version 2.0 (the\n\n# \"License\"); you may not use this file except in compliance\n\n# with the License.  You may obtain a copy of the License at\n\n#\n\n#    http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing,\n\n# software distributed under the License is distributed on an\n\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n\n# KIND, either express or implied.  See the License for the\n\n# specific language governing permissions and limitations\n\n# under the License.\n\n#\n\n######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# show the LIBYDK_INCLUDE_DIRS and LIBYDK_LIBRARIES variables only in the advanced view\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "sdk/cpp/packages/docsgen/Makefile" : {
      "ObjectId" : "11a23c377806709bd735dee540ba82d85e360095",
      "LastModified" : "2018-12-02T16:05:02Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "sdk/cpp/packages/tests/CMakeLists.txt" : {
      "ObjectId" : "ee9b54f8d13020f6559b2f8ce47cff695dfafd2a",
      "LastModified" : "2018-12-02T16:05:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# May be a solution if unittest-cpp was installed with brew (instead of github clone) and cannot be found\n\n# find_library(unittest_location UnitTest++)\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# May be a solution if unittest-cpp was installed with brew (instead of github clone) and cannot be found\n\n# /usr/local/include/UnitTest++\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# May be a solution if unittest-cpp was installed with brew (instead of github clone) and cannot be found\n\n# ${unittest_location}\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "sdk/cpp/packages/tests/Makefile" : {
      "ObjectId" : "4f8ab87713bd91005442907c1dd4572ff57ce87c",
      "LastModified" : "2018-12-02T16:05:02Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#  ----------------------------------------------------------------\n\n# Copyright 2016 Cisco Systems\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#    http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "sdk/cpp/samples/CMakeLists.txt" : {
      "ObjectId" : "ae0ec8e2d01d95c37564620c93597d9223211fec",
      "LastModified" : "2018-12-02T16:05:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# uncomment this line if you want to build this XE native sample which takes a while\n",
        "Line" : 22,
        "CharPositionInLine" : 31
      },
      "1" : {
        "Text" : "# set default build type if not specified by user\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find dependent libraries\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# set default build type if not specified by user\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "sdk/cpp/samples/bgp_xr_json/CMakeLists.txt" : {
      "ObjectId" : "be4025ee6c76382e2a7362b7b05a6891f1254321",
      "LastModified" : "2018-12-02T16:05:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set default build type if not specified by user\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find dependent libraries\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# set default build type if not specified by user\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "sdk/cpp/tests/CMakeLists.txt" : {
      "ObjectId" : "f6807a92ad334e5ef0d17e1100d96c754e118b30",
      "LastModified" : "2019-03-06T21:44:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#        test_netconf_tcp_client.cpp\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set default build type if not specified by user\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "sdk/cpp/tests/CMakeModules/FindGRPC.cmake" : {
      "ObjectId" : "1326a4eee1e8d420b7eb7d6226685980285b448d",
      "LastModified" : "2018-12-02T16:05:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Locate and configure the gRPC library\n\n#\n\n# Adds the following targets:\n\n#\n\n#  gRPC::grpc - gRPC library\n\n#  gRPC::grpc++ - gRPC C++ library\n\n#  gRPC::grpc++_reflection - gRPC C++ reflection library\n\n#  gRPC::grpc_cpp_plugin - C++ generator plugin for Protocol Buffers\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Generates C++ sources from the .proto files\n\n#\n\n# grpc_generate_cpp (<SRCS> <HDRS> <DEST> [<ARGN>...])\n\n#\n\n#  SRCS - variable to define with autogenerated source files\n\n#  HDRS - variable to define with autogenerated header files\n\n#  DEST - directory where the source files will be created\n\n#  ARGN - .proto files\n\n#\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find gRPC include directory\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find gRPC library\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Find gRPC C++ library\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Find gRPC C++ reflection library\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Find gRPC CPP generator\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "sdk/cpp/tests/CMakeModules/FindLibYDK.cmake" : {
      "ObjectId" : "01a88a7d896f1c49b014332efd8acdb446b15c82",
      "LastModified" : "2018-12-02T16:05:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find LibYDK\n\n# Once done this will define\n\n#\n\n#  LIBYDK_FOUND - system has LibYDK\n\n#  LIBYDK_INCLUDE_DIRS - the LibYDK include directory\n\n#  LIBYDK_LIBRARIES - Link these to use LibYANG LibPCRE Lib\n\n#\n\n# ####################################################################\n\n# Licensed to the Apache Software Foundation (ASF) under one\n\n# or more contributor license agreements.  See the NOTICE file\n\n# distributed with this work for additional information\n\n# regarding copyright ownership.  The ASF licenses this file\n\n# to you under the Apache License, Version 2.0 (the\n\n# \"License\"); you may not use this file except in compliance\n\n# with the License.  You may obtain a copy of the License at\n\n#\n\n#    http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing,\n\n# software distributed under the License is distributed on an\n\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n\n# KIND, either express or implied.  See the License for the\n\n# specific language governing permissions and limitations\n\n# under the License.\n\n#\n\n######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# show the LIBYDK_INCLUDE_DIRS and LIBYDK_LIBRARIES variables only in the advanced view\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "sdk/cpp/tests/CMakeModules/FindProtobuf.cmake" : {
      "ObjectId" : "4cef90a35f9bc6e59d4a8161505e06578d636fda",
      "LastModified" : "2018-12-02T16:05:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Locate and configure the Google Protocol Buffers library\n\n#\n\n# Adds the following targets:\n\n#\n\n#  protobuf::libprotobuf - Protobuf library\n\n#  protobuf::libprotobuf-lite - Protobuf lite library\n\n#  protobuf::libprotoc - Protobuf Protoc Library\n\n#  protobuf::protoc - protoc executable\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Generates C++ sources from the .proto files\n\n#\n\n# protobuf_generate_cpp (<SRCS> <HDRS> <DEST> [<ARGN>...])\n\n#\n\n#  SRCS - variable to define with autogenerated source files\n\n#  HDRS - variable to define with autogenerated header files\n\n#  DEST - directory where the source files will be created\n\n#  ARGN - .proto files\n\n#\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Create an include path for each file specified\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# By default have PROTOBUF_GENERATE_CPP macro pass -I to protoc\n\n# for each directory where a proto file is referenced.\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Find the include directory\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The Protobuf library\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The Protobuf lite library\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# The Protobuf Protoc Library\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Find the protoc Executable\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "sdk/go/core/docsgen/Makefile" : {
      "ObjectId" : "acbe2dd641e79c29b81c51d564b80cc795f56fc6",
      "LastModified" : "2018-12-02T16:05:02Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "sdk/go/packages/docsgen/Makefile" : {
      "ObjectId" : "acbe2dd641e79c29b81c51d564b80cc795f56fc6",
      "LastModified" : "2018-12-02T16:05:02Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "sdk/python/core/CMakeLists.txt" : {
      "ObjectId" : "867d8c33938ec10d42cccc822fb41220160a5bcb",
      "LastModified" : "2019-03-07T00:03:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set default build type if not specified by user\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# include custom Modules\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find dependent libraries\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# set default build type if not specified by user\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "sdk/python/core/CMakeModules/FindGRPC.cmake" : {
      "ObjectId" : "1326a4eee1e8d420b7eb7d6226685980285b448d",
      "LastModified" : "2018-12-02T16:05:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Locate and configure the gRPC library\n\n#\n\n# Adds the following targets:\n\n#\n\n#  gRPC::grpc - gRPC library\n\n#  gRPC::grpc++ - gRPC C++ library\n\n#  gRPC::grpc++_reflection - gRPC C++ reflection library\n\n#  gRPC::grpc_cpp_plugin - C++ generator plugin for Protocol Buffers\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Generates C++ sources from the .proto files\n\n#\n\n# grpc_generate_cpp (<SRCS> <HDRS> <DEST> [<ARGN>...])\n\n#\n\n#  SRCS - variable to define with autogenerated source files\n\n#  HDRS - variable to define with autogenerated header files\n\n#  DEST - directory where the source files will be created\n\n#  ARGN - .proto files\n\n#\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find gRPC include directory\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find gRPC library\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Find gRPC C++ library\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Find gRPC C++ reflection library\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Find gRPC CPP generator\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "sdk/python/core/CMakeModules/FindProtobuf.cmake" : {
      "ObjectId" : "4cef90a35f9bc6e59d4a8161505e06578d636fda",
      "LastModified" : "2018-12-02T16:05:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Locate and configure the Google Protocol Buffers library\n\n#\n\n# Adds the following targets:\n\n#\n\n#  protobuf::libprotobuf - Protobuf library\n\n#  protobuf::libprotobuf-lite - Protobuf lite library\n\n#  protobuf::libprotoc - Protobuf Protoc Library\n\n#  protobuf::protoc - protoc executable\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Generates C++ sources from the .proto files\n\n#\n\n# protobuf_generate_cpp (<SRCS> <HDRS> <DEST> [<ARGN>...])\n\n#\n\n#  SRCS - variable to define with autogenerated source files\n\n#  HDRS - variable to define with autogenerated header files\n\n#  DEST - directory where the source files will be created\n\n#  ARGN - .proto files\n\n#\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Create an include path for each file specified\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# By default have PROTOBUF_GENERATE_CPP macro pass -I to protoc\n\n# for each directory where a proto file is referenced.\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Find the include directory\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The Protobuf library\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The Protobuf lite library\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# The Protobuf Protoc Library\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Find the protoc Executable\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "sdk/python/core/docsgen/Makefile" : {
      "ObjectId" : "dbaa787ae2da2dd716686046b497442206ade2bc",
      "LastModified" : "2018-12-02T16:05:02Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# User-friendly check for sphinx-build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Internal variables.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "sdk/python/gnmi/CMakeLists.txt" : {
      "ObjectId" : "3f9ebb000691094eac098c93aa855a6eeac54235",
      "LastModified" : "2018-12-02T16:05:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set default build type if not specified by user\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# include custom Modules\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find dependent libraries\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# set default build type if not specified by user\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "sdk/python/gnmi/CMakeModules/FindGRPC.cmake" : {
      "ObjectId" : "1326a4eee1e8d420b7eb7d6226685980285b448d",
      "LastModified" : "2018-12-02T16:05:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Locate and configure the gRPC library\n\n#\n\n# Adds the following targets:\n\n#\n\n#  gRPC::grpc - gRPC library\n\n#  gRPC::grpc++ - gRPC C++ library\n\n#  gRPC::grpc++_reflection - gRPC C++ reflection library\n\n#  gRPC::grpc_cpp_plugin - C++ generator plugin for Protocol Buffers\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Generates C++ sources from the .proto files\n\n#\n\n# grpc_generate_cpp (<SRCS> <HDRS> <DEST> [<ARGN>...])\n\n#\n\n#  SRCS - variable to define with autogenerated source files\n\n#  HDRS - variable to define with autogenerated header files\n\n#  DEST - directory where the source files will be created\n\n#  ARGN - .proto files\n\n#\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find gRPC include directory\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find gRPC library\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Find gRPC C++ library\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Find gRPC C++ reflection library\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Find gRPC CPP generator\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "sdk/python/gnmi/CMakeModules/FindProtobuf.cmake" : {
      "ObjectId" : "4cef90a35f9bc6e59d4a8161505e06578d636fda",
      "LastModified" : "2018-12-02T16:05:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Locate and configure the Google Protocol Buffers library\n\n#\n\n# Adds the following targets:\n\n#\n\n#  protobuf::libprotobuf - Protobuf library\n\n#  protobuf::libprotobuf-lite - Protobuf lite library\n\n#  protobuf::libprotoc - Protobuf Protoc Library\n\n#  protobuf::protoc - protoc executable\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Generates C++ sources from the .proto files\n\n#\n\n# protobuf_generate_cpp (<SRCS> <HDRS> <DEST> [<ARGN>...])\n\n#\n\n#  SRCS - variable to define with autogenerated source files\n\n#  HDRS - variable to define with autogenerated header files\n\n#  DEST - directory where the source files will be created\n\n#  ARGN - .proto files\n\n#\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Create an include path for each file specified\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# By default have PROTOBUF_GENERATE_CPP macro pass -I to protoc\n\n# for each directory where a proto file is referenced.\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Find the include directory\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The Protobuf library\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The Protobuf lite library\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# The Protobuf Protoc Library\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Find the protoc Executable\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "sdk/python/packages/docsgen/Makefile" : {
      "ObjectId" : "c0587f1554776ab7daeb6e59ed582f8cbe0e7dce",
      "LastModified" : "2018-12-02T16:05:02Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "test/gnmi_server/CMakeLists.txt" : {
      "ObjectId" : "709673ec45b8bcbfcfa092942caab5ec37d7d6d0",
      "LastModified" : "2018-12-02T16:05:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add LibgNMI\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/gnmi_server/CMakeModules/FindGRPC.cmake" : {
      "ObjectId" : "1326a4eee1e8d420b7eb7d6226685980285b448d",
      "LastModified" : "2018-12-02T16:05:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Locate and configure the gRPC library\n\n#\n\n# Adds the following targets:\n\n#\n\n#  gRPC::grpc - gRPC library\n\n#  gRPC::grpc++ - gRPC C++ library\n\n#  gRPC::grpc++_reflection - gRPC C++ reflection library\n\n#  gRPC::grpc_cpp_plugin - C++ generator plugin for Protocol Buffers\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Generates C++ sources from the .proto files\n\n#\n\n# grpc_generate_cpp (<SRCS> <HDRS> <DEST> [<ARGN>...])\n\n#\n\n#  SRCS - variable to define with autogenerated source files\n\n#  HDRS - variable to define with autogenerated header files\n\n#  DEST - directory where the source files will be created\n\n#  ARGN - .proto files\n\n#\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find gRPC include directory\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find gRPC library\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Find gRPC C++ library\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Find gRPC C++ reflection library\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Find gRPC CPP generator\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "test/gnmi_server/CMakeModules/FindProtobuf.cmake" : {
      "ObjectId" : "4cef90a35f9bc6e59d4a8161505e06578d636fda",
      "LastModified" : "2018-12-02T16:05:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Locate and configure the Google Protocol Buffers library\n\n#\n\n# Adds the following targets:\n\n#\n\n#  protobuf::libprotobuf - Protobuf library\n\n#  protobuf::libprotobuf-lite - Protobuf lite library\n\n#  protobuf::libprotoc - Protobuf Protoc Library\n\n#  protobuf::protoc - protoc executable\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Generates C++ sources from the .proto files\n\n#\n\n# protobuf_generate_cpp (<SRCS> <HDRS> <DEST> [<ARGN>...])\n\n#\n\n#  SRCS - variable to define with autogenerated source files\n\n#  HDRS - variable to define with autogenerated header files\n\n#  DEST - directory where the source files will be created\n\n#  ARGN - .proto files\n\n#\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Create an include path for each file specified\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# By default have PROTOBUF_GENERATE_CPP macro pass -I to protoc\n\n# for each directory where a proto file is referenced.\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Find the include directory\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The Protobuf library\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The Protobuf lite library\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# The Protobuf Protoc Library\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Find the protoc Executable\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    }
  },
  "FileTypes" : {
    "CMAKE" : 35,
    "MAKEFILE" : 11
  },
  "ElapsedTime" : 2145
}