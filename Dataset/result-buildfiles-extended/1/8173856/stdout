{
  "Repository" : "8173856",
  "Revision" : "HEAD",
  "ObjectId" : "63db2cda6271b7807ff2b20e117e1164818e5670",
  "CommitTime" : "2019-01-22T13:04:12Z",
  "Files" : {
    "beanstalkd/Makefile" : {
      "ObjectId" : "12f2d959ce0cdedd0de627984848d880964a8a4d",
      "LastModified" : "2014-06-27T12:03:33Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "cfengine-promises/Makefile" : {
      "ObjectId" : "b1486fe8120566039475a5d7089d497a257db5ca",
      "LastModified" : "2018-11-06T22:03:09Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# network profile\n",
        "Line" : 57,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# create empty crontab so that the cron service starts\n",
        "Line" : 64,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "cfengine/Makefile" : {
      "ObjectId" : "d695e818003e2dea2291c6507c1ac74b1b517b89",
      "LastModified" : "2014-09-24T09:10:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# we will never use those keys for server communication, so this is just for speedup at boot\n",
        "Line" : 55,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "cjdns-master/Makefile" : {
      "ObjectId" : "24632736d2a09d318a056f4ef6df731c6c8fb772",
      "LastModified" : "2015-12-02T09:40:27Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "## NEON\n\n#define Build/Compile\n\n#\tCROSS=\"true\" \\\n#\tCFLAGS=\"-O2 -march=armv7-a -mtune=cortex-a8 -mfpu=neon -ftree-vectorize -ffast-math -mfloat-abi=hard -marm -Wno-error=maybe-uninitialized\" \\\n#\tNO_PIE=\"true\" \\\n#\tSeccomp_NO=\"true\" \\\n#\tCC=\"$(TARGET_CC)\" \\\n#\tARCH=\"$(ARCH)\" \\\n#\tLDFLAGS=\"$(CFLAGS)\" \\\n#\t$(PKG_BUILD_DIR)/do\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#endef\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# regular\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cjdns-v16-avx/Makefile" : {
      "ObjectId" : "6804eb155f498253ab1914580a86e2418c1585da",
      "LastModified" : "2016-02-02T10:18:18Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# regular\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cjdns-v16/Makefile" : {
      "ObjectId" : "f20f9e27de78b57543d97f41bb7a429ac202e4f4",
      "LastModified" : "2016-02-02T10:18:18Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "## NEON\n\n#define Build/Compile\n\n#\tCROSS=\"true\" \\\n#\tCFLAGS=\"-O2 -march=armv7-a -mtune=cortex-a8 -mfpu=neon -ftree-vectorize -ffast-math -mfloat-abi=hard -marm -Wno-error=maybe-uninitialized\" \\\n#\tNO_PIE=\"true\" \\\n#\tSeccomp_NO=\"true\" \\\n#\tCC=\"$(TARGET_CC)\" \\\n#\tARCH=\"$(ARCH)\" \\\n#\tLDFLAGS=\"$(CFLAGS)\" \\\n#\t$(PKG_BUILD_DIR)/do\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#endef\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# regular\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cjdns-v6/Makefile" : {
      "ObjectId" : "80e9cdad48d61158ea92d7d38780fb9ff9debc6f",
      "LastModified" : "2016-02-02T10:18:18Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "## NEON\n\n#define Build/Compile\n\n#\tCROSS=\"true\" \\\n#\tCFLAGS=\"-O2 -march=armv7-a -mtune=cortex-a8 -mfpu=neon -ftree-vectorize -ffast-math -mfloat-abi=hard -marm -Wno-error=maybe-uninitialized\" \\\n#\tNO_PIE=\"true\" \\\n#\tSeccomp_NO=\"true\" \\\n#\tCC=\"$(TARGET_CC)\" \\\n#\tARCH=\"$(ARCH)\" \\\n#\tLDFLAGS=\"$(CFLAGS)\" \\\n#\t$(PKG_BUILD_DIR)/do\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#endef\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# regular\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "django-south/Makefile" : {
      "ObjectId" : "84ce888dcb65cd4f3660e8586579debe0a1c8209",
      "LastModified" : "2016-02-02T10:18:18Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "dokuwiki/Makefile" : {
      "ObjectId" : "5b44babf2fb09946ed834a217411f2d7d54e7762",
      "LastModified" : "2016-02-02T10:18:18Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "exim4/Makefile" : {
      "ObjectId" : "1dc25033735521ada04855a6de1507fecc1178ca",
      "LastModified" : "2016-02-02T10:18:18Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "exim4/files/Makefile" : {
      "ObjectId" : "bc747f0583532cce6a79b55158c1164d3194e4da",
      "LastModified" : "2016-02-02T10:18:18Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##################################################\n\n#          The Exim mail transport agent         #\n\n##################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is the template for Exim's main build-time configuration file. It\n\n# contains settings that are independent of any operating system. These are\n\n# things that are mostly sysadmin choices. The items below are divided into\n\n# those you must specify, those you probably want to specify, those you might\n\n# often want to specify, and those that you almost never need to mention.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Edit this file and save the result to a file called Local/Makefile within the\n\n# Exim distribution directory before running the \"make\" command.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Things that depend on the operating system have default settings in\n\n# OS/Makefile-Default, but these are overridden for some OS by files called\n\n# called OS/Makefile-<osname>. You can further override these by creating files\n\n# called Local/Makefile-<osname>, where \"<osname>\" stands for the name of your\n\n# operating system - look at the names in the OS directory to see which names\n\n# are recognized.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# However, if you are building Exim for a single OS only, you don't need to\n\n# worry about setting up Local/Makefile-<osname>. Any build-time configuration\n\n# settings you require can in fact be placed in the one file called\n\n# Local/Makefile. It is only if you are building for several OS from the same\n\n# source files that you need to worry about splitting off your own OS-dependent\n\n# settings into separate files. (There's more explanation about how this all\n\n# works in the toplevel README file, under \"Modifying the building process\", as\n\n# well as in the Exim specification.)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# One OS-specific thing that may need to be changed is the command for running\n\n# the C compiler; the overall default is gcc, but some OS Makefiles specify cc.\n\n# You can override anything that is set by putting CC=whatever in your\n\n# Local/Makefile.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# NOTE: You should never need to edit any of the distributed Makefiles; all\n\n# overriding can be done in your Local/Makefile(s). This will make it easier\n\n# for you when the next release comes along.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# The location of the X11 libraries is something else that is quite variable\n\n# even between different versions of the same operating system (and indeed\n\n# there are different versions of X11 as well, of course). The four settings\n\n# concerned here are X11, XINCLUDE, XLFLAGS (linking flags) and X11_LD_LIB\n\n# (dynamic run-time library). You need not worry about X11 unless you want to\n\n# compile the Exim monitor utility. Exim itself does not use X11.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Another area of variability between systems is the type and location of the\n\n# DBM library package. Exim has support for ndbm, gdbm, tdb, and Berkeley DB.\n\n# By default the code assumes ndbm; this often works with gdbm or DB, provided\n\n# they are correctly installed, via their compatibility interfaces. However,\n\n# Exim can also be configured to use the native calls for Berkeley DB (obsolete\n\n# versions 1.85, 2.x, 3.x, or the current 4.x version) and also for gdbm.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# For some operating systems, a default DBM library (other than ndbm) is\n\n# selected by a setting in the OS-specific Makefile. Most modern OS now have\n\n# a DBM library installed as standard, and in many cases this will be selected\n\n# for you by the OS-specific configuration. If Exim compiles without any\n\n# problems, you probably do not have to worry about the DBM library. If you\n\n# do want or need to change it, you should first read the discussion in the\n\n# file doc/dbm.discuss.txt, which also contains instructions for testing Exim's\n\n# interface to the DBM library.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# In Local/Makefiles blank lines and lines starting with # are ignored. It is\n\n# also permitted to use the # character to add a comment to a setting, for\n\n# example\n\n#\n\n# EXIM_GID=42   # the \"mail\" group\n\n#\n\n# However, with some versions of \"make\" this works only if there is no white\n\n# space between the end of the setting and the #, so perhaps it is best\n\n# avoided. A consequence of this facility is that it is not possible to have\n\n# the # character present in any setting, but I can't think of any cases where\n\n# this would be wanted.\n\n###############################################################################\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "###############################################################################\n\n#                    THESE ARE THINGS YOU MUST SPECIFY                        #\n\n###############################################################################\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Exim will not build unless you specify BIN_DIRECTORY, CONFIGURE_FILE, and\n\n# EXIM_USER. You also need EXIM_GROUP if EXIM_USER specifies a uid by number.\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# If you don't specify SPOOL_DIRECTORY, Exim won't fail to build. However, it\n\n# really is a very good idea to specify it here rather than at run time. This\n\n# is particularly true if you let the logs go to their default location in the\n\n# spool directory, because it means that the location of the logs is known\n\n# before Exim has read the run time configuration file.\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# BIN_DIRECTORY defines where the exim binary will be installed by \"make\n\n# install\". The path is also used internally by Exim when it needs to re-invoke\n\n# itself, either to send an error message, or to recover root privilege. Exim's\n\n# utility binaries and scripts are also installed in this directory. There is\n\n# no \"standard\" place for the binary directory. Some people like to keep all\n\n# the Exim files under one directory such as /usr/exim; others just let the\n\n# Exim binaries go into an existing directory such as /usr/sbin or\n\n# /usr/local/sbin. The installation script will try to create this directory,\n\n# and any superior directories, if they do not exist.\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# CONFIGURE_FILE defines where Exim's run time configuration file is to be\n\n# found. It is the complete pathname for the file, not just a directory. The\n\n# location of all other run time files and directories can be changed in the\n\n# run time configuration file. There is a lot of variety in the choice of\n\n# location in different OS, and in the preferences of different sysadmins. Some\n\n# common locations are in /etc or /etc/mail or /usr/local/etc or\n\n# /usr/local/etc/mail. Another possibility is to keep all the Exim files under\n\n# a single directory such as /usr/exim. Whatever you choose, the installation\n\n# script will try to make the directory and any superior directories if they\n\n# don't exist. It will also install a default runtime configuration if this\n\n# file does not exist.\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# It is possible to specify a colon-separated list of files for CONFIGURE_FILE.\n\n# In this case, Exim will use the first of them that exists when it is run.\n\n# However, if a list is specified, the installation script no longer tries to\n\n# make superior directories or to install a default runtime configuration.\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# The Exim binary must normally be setuid root, so that it starts executing as\n\n# root, but (depending on the options with which it is called) it does not\n\n# always need to retain the root privilege. These settings define the user and\n\n# group that is used for Exim processes when they no longer need to be root. In\n\n# particular, this applies when receiving messages and when doing remote\n\n# deliveries. (Local deliveries run as various non-root users, typically as the\n\n# owner of a local mailbox.) Specifying these values as root is not supported.\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# If you specify EXIM_USER as a name, this is looked up at build time, and the\n\n# uid number is built into the binary. However, you can specify that this\n\n# lookup is deferred until runtime. In this case, it is the name that is built\n\n# into the binary. You can do this by a setting of the form:\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# EXIM_USER=ref:exim\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# In other words, put \"ref:\" in front of the user name. If you set EXIM_USER\n\n# like this, any value specified for EXIM_GROUP is also passed \"by reference\".\n\n# Although this costs a bit of resource at runtime, it is convenient to use\n\n# this feature when building binaries that are to be run on multiple systems\n\n# where the name may refer to different uids. It also allows you to build Exim\n\n# on a system where there is no Exim user defined.\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# If the setting of EXIM_USER is numeric (e.g. EXIM_USER=42), there must\n\n# also be a setting of EXIM_GROUP. If, on the other hand, you use a name\n\n# for EXIM_USER (e.g. EXIM_USER=exim), you don't need to set EXIM_GROUP unless\n\n# you want to use a group other than the default group for the given user.\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Many sites define a user called \"exim\", with an appropriate default group,\n\n# and use\n\n#\n\n# EXIM_USER=exim\n\n#\n\n# while leaving EXIM_GROUP unspecified (commented out).\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# SPOOL_DIRECTORY defines the directory where all the data for messages in\n\n# transit is kept. It is strongly recommended that you define it here, though\n\n# it is possible to leave this till the run time configuration.\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Exim creates the spool directory if it does not exist. The owner and group\n\n# will be those defined by EXIM_USER and EXIM_GROUP, and this also applies to\n\n# all the files and directories that are created in the spool directory.\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Almost all installations choose this:\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#TODO\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "###############################################################################\n\n#           THESE ARE THINGS YOU PROBABLY WANT TO SPECIFY                     #\n\n###############################################################################\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# If you need extra header file search paths on all compiles, put the -I\n\n# options in INCLUDE.  If you want the extra searches only for certain\n\n# parts of the build, see more specific xxx_INCLUDE variables below.\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# INCLUDE=-I/example/include\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# You need to specify some routers and transports if you want the Exim that you\n\n# are building to be capable of delivering mail. You almost certainly need at\n\n# least one type of lookup. You should consider whether you want to build\n\n# the Exim monitor or not.\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# These settings determine which individual router drivers are included in the\n\n# Exim binary. There are no defaults in the code; those routers that are wanted\n\n# must be defined here by setting the appropriate variables to the value \"yes\".\n\n# Including a router in the binary does not cause it to be used automatically.\n\n# It has also to be configured in the run time configuration file. By\n\n# commenting out those you know you don't want to use, you can make the binary\n\n# a bit smaller. If you are unsure, leave all of these included for now.\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# This one is very special-purpose, so is not included by default.\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# ROUTER_IPLOOKUP=yes\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# These settings determine which individual transport drivers are included in\n\n# the Exim binary. There are no defaults; those transports that are wanted must\n\n# be defined here by setting the appropriate variables to the value \"yes\".\n\n# Including a transport in the binary does not cause it to be used\n\n# automatically. It has also to be configured in the run time configuration\n\n# file. By commenting out those you know you don't want to use, you can make\n\n# the binary a bit smaller. If you are unsure, leave all of these included for\n\n# now.\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# This one is special-purpose, and commonly not required, so it is not\n\n# included by default.\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# TRANSPORT_LMTP=yes\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# The appendfile transport can write messages to local mailboxes in a number\n\n# of formats. The code for three specialist formats, maildir, mailstore, and\n\n# MBX, is included only when requested. If you do not know what this is about,\n\n# leave these settings commented out.\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# SUPPORT_MAILSTORE=yes\n\n# SUPPORT_MBX=yes\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# See below for dynamic lookup modules.\n\n#\n\n# If not using package management but using this anyway, then think about how\n\n# you perform upgrades and revert them. You should consider the benefit of\n\n# embedding the Exim version number into LOOKUP_MODULE_DIR, so that you can\n\n# maintain two concurrent sets of modules.\n\n# \n\n# *BEWARE*: ability to modify the files in LOOKUP_MODULE_DIR is equivalent to\n\n# the ability to modify the Exim binary, which is often setuid root!  The Exim\n\n# developers only intend this functionality be used by OS software packagers\n\n# and we suggest that such packagings' integrity checks should be paranoid\n\n# about the permissions of the directory and the files within.\n",
        "Line" : 251,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# LOOKUP_MODULE_DIR=/usr/lib/exim/lookups/\n",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# To build a module dynamically, you'll need to define CFLAGS_DYNAMIC for\n\n# your platform.  Eg:\n\n# CFLAGS_DYNAMIC=-shared -rdynamic\n\n# CFLAGS_DYNAMIC=-shared -rdynamic -fPIC\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# These settings determine which file and database lookup methods are included\n\n# in the binary. See the manual chapter entitled \"File and database lookups\"\n\n# for discussion. DBM and lsearch (linear search) are included by default. If\n\n# you are unsure about the others, leave them commented out for now.\n\n# LOOKUP_DNSDB does *not* refer to general mail routing using the DNS. It is\n\n# for the specialist case of using the DNS as a general database facility (not\n\n# common).\n\n# If set to \"2\" instead of \"yes\" then the corresponding lookup will be\n\n# built as a module and must be installed into LOOKUP_MODULE_DIR. You need to\n\n# add -export-dynamic -rdynamic to EXTRALIBS. You may also need to add -ldl to\n\n# EXTRALIBS so that dlopen() is available to Exim. You need to define\n\n# LOOKUP_MODULE_DIR above so the exim binary actually loads dynamic lookup\n\n# modules.\n\n# Also, instead of adding all the libraries/includes to LOOKUP_INCLUDE and\n\n# LOOKUP_LIBS, add them to the respective LOOKUP_*_INCLUDE and LOOKUP_*_LIBS\n\n# (where * is the name as given here in this list). That ensures that only\n\n# the dynamic library and not the exim binary will be linked against the\n\n# library.\n\n# NOTE: LDAP cannot be built as a module!\n\n#\n\n# If your system has pkg-config then the _INCLUDE/_LIBS setting can be\n\n# handled for you automatically by also defining the _PC variable to reference\n\n# the name of the pkg-config package, if such is available.\n",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# LOOKUP_CDB=yes\n\n# LOOKUP_DSEARCH=yes\n\n# LOOKUP_IBASE=yes\n\n# LOOKUP_LDAP=yes\n\n# LOOKUP_MYSQL=yes\n\n# LOOKUP_NIS=yes\n\n# LOOKUP_NISPLUS=yes\n\n# LOOKUP_ORACLE=yes\n\n# LOOKUP_PASSWD=yes\n\n# LOOKUP_PGSQL=yes\n\n# LOOKUP_SQLITE=yes\n\n# LOOKUP_SQLITE_PC=sqlite3\n\n# LOOKUP_WHOSON=yes\n",
        "Line" : 301,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# These two settings are obsolete; all three lookups are compiled when\n\n# LOOKUP_LSEARCH is enabled. However, we retain these for backward\n\n# compatibility. Setting one forces LOOKUP_LSEARCH if it is not set.\n",
        "Line" : 315,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# LOOKUP_WILDLSEARCH=yes\n\n# LOOKUP_NWILDLSEARCH=yes\n",
        "Line" : 319,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# If you have set LOOKUP_LDAP=yes, you should set LDAP_LIB_TYPE to indicate\n\n# which LDAP library you have. Unfortunately, though most of their functions\n\n# are the same, there are minor differences. Currently Exim knows about four\n\n# LDAP libraries: the one from the University of Michigan (also known as\n\n# OpenLDAP 1), OpenLDAP 2, the Netscape SDK library, and the library that comes\n\n# with Solaris 7 onwards. Uncomment whichever of these you are using.\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# LDAP_LIB_TYPE=OPENLDAP1\n\n# LDAP_LIB_TYPE=OPENLDAP2\n\n# LDAP_LIB_TYPE=NETSCAPE\n\n# LDAP_LIB_TYPE=SOLARIS\n",
        "Line" : 331,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# If you don't set any of these, Exim assumes the original University of\n\n# Michigan (OpenLDAP 1) library.\n",
        "Line" : 336,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# The PCRE library is required for exim.  There is no longer an embedded\n\n# version of the PCRE library included with the source code, instead you\n\n# must use a system library or build your own copy of PCRE.\n\n# In either case you must specify the library link info here.  If the\n\n# PCRE header files are not in the standard search path you must also\n\n# modify the INCLUDE path (above)\n\n#\n\n# Use PCRE_CONFIG to query the pcre-config command (first found in $PATH)\n\n# to find the include files and libraries, else use PCRE_LIBS and set INCLUDE\n\n# too if needed.\n",
        "Line" : 340,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# PCRE_LIBS=-lpcre\n",
        "Line" : 353,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Additional libraries and include directories may be required for some\n\n# lookup styles (e.g. LDAP, MYSQL or PGSQL). LOOKUP_LIBS is included only on\n\n# the command for linking Exim itself, not on any auxiliary programs. You\n\n# don't need to set LOOKUP_INCLUDE if the relevant directories are already\n\n# specified in INCLUDE. The settings below are just examples; -lpq is for\n\n# PostgreSQL, -lgds is for Interbase, -lsqlite3 is for SQLite.\n\n#\n\n# You do not need to use this for any lookup information added via pkg-config.\n",
        "Line" : 356,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# LOOKUP_INCLUDE=-I /usr/local/ldap/include -I /usr/local/mysql/include -I /usr/local/pgsql/include\n\n# LOOKUP_LIBS=-L/usr/local/lib -lldap -llber -lmysqlclient -lpq -lgds -lsqlite3\n",
        "Line" : 366,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Compiling the Exim monitor: If you want to compile the Exim monitor, a\n\n# program that requires an X11 display, then EXIM_MONITOR should be set to the\n\n# value \"eximon.bin\". Comment out this setting to disable compilation of the\n\n# monitor. The locations of various X11 directories for libraries and include\n\n# files are defaulted in the OS/Makefile-Default file, but can be overridden in\n\n# local OS-specific make files.\n",
        "Line" : 370,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "#EXIM_MONITOR=eximon.bin\n",
        "Line" : 378,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Compiling Exim with content scanning support: If you want to compile Exim\n\n# with support for message body content scanning, set WITH_CONTENT_SCAN to\n\n# the value \"yes\". This will give you malware and spam scanning in the DATA ACL,\n\n# and the MIME ACL. Please read the documentation to learn more about these\n\n# features.\n",
        "Line" : 381,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# WITH_CONTENT_SCAN=yes\n",
        "Line" : 388,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# If you want to use the deprecated \"demime\" condition in the DATA ACL,\n\n# uncomment the line below. Doing so will also explicitly turn on the\n\n# WITH_CONTENT_SCAN option. If possible, use the MIME ACL instead of\n\n# the \"demime\" condition.\n",
        "Line" : 390,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# WITH_OLD_DEMIME=yes\n",
        "Line" : 395,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# If you're using ClamAV and are backporting fixes to an old version, instead\n\n# of staying current (which is the more usual approach) then you may need to\n\n# use an older API which uses a STREAM command, now deprecated, instead of\n\n# zINSTREAM.  If you need to set this, please let the Exim developers know, as\n\n# if nobody reports a need for it, we'll remove this option and clean up the\n\n# code.  zINSTREAM was introduced with ClamAV 0.95.\n\n#\n\n# WITH_OLD_CLAMAV_STREAM=yes\n",
        "Line" : 397,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# By default Exim includes code to support DKIM (DomainKeys Identified\n\n# Mail, RFC4871) signing and verification.  Verification of signatures is\n\n# turned on by default.  See the spec for information on conditionally\n\n# disabling it.  To disable the inclusion of the entire feature, set\n\n# DISABLE_DKIM to \"yes\"\n",
        "Line" : 406,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# DISABLE_DKIM=yes\n",
        "Line" : 413,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# By default, Exim has support for checking the AD bit in a DNS response, to\n\n# determine if DNSSEC validation was successful.  If your system libraries\n\n# do not support that bit, then set DISABLE_DNSSEC to \"yes\"\n",
        "Line" : 416,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# DISABLE_DNSSEC=yes\n",
        "Line" : 421,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Compiling Exim with experimental features. These are documented in\n\n# experimental-spec.txt. \"Experimental\" means that the way these features are\n\n# implemented may still change. Backward compatibility is not guaranteed.\n",
        "Line" : 424,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# Uncomment the following line to add support for talking to dccifd.  This\n\n# defaults the socket path to /usr/local/dcc/var/dccifd.\n",
        "Line" : 429,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# EXPERIMENTAL_DCC=yes\n",
        "Line" : 432,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# Uncomment the following lines to add SPF support. You need to have libspf2\n\n# installed on your system (www.libspf2.org). Depending on where it is installed\n\n# you may have to edit the CFLAGS and LDFLAGS lines.\n",
        "Line" : 434,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# EXPERIMENTAL_SPF=yes\n\n# CFLAGS  += -I/usr/local/include\n\n# LDFLAGS += -lspf2\n",
        "Line" : 438,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# Uncomment the following lines to add SRS (Sender rewriting scheme) support.\n\n# You need to have libsrs_alt installed on your system (srs.mirtol.com).\n\n# Depending on where it is installed you may have to edit the CFLAGS and\n\n# LDFLAGS lines.\n",
        "Line" : 442,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# EXPERIMENTAL_SRS=yes\n\n# CFLAGS  += -I/usr/local/include\n\n# LDFLAGS += -lsrs_alt\n",
        "Line" : 447,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Uncomment the following lines to add Brightmail AntiSpam support. You need\n\n# to have the Brightmail client SDK installed. Please check the experimental\n\n# documentation for implementation details. You need to edit the CFLAGS and\n\n# LDFLAGS lines.\n",
        "Line" : 451,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# EXPERIMENTAL_BRIGHTMAIL=yes\n\n# CFLAGS  += -I/opt/brightmail/bsdk-6.0/include\n\n# LDFLAGS += -lxml2_single -lbmiclient_single -L/opt/brightmail/bsdk-6.0/lib\n",
        "Line" : 456,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# Uncomment the following line to add OCSP stapling support in TLS, if Exim\n\n# was built using OpenSSL.\n",
        "Line" : 460,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# EXPERIMENTAL_OCSP=yes\n",
        "Line" : 463,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# Uncomment the following line to add DMARC checking capability, implemented\n\n# using libopendmarc libraries.\n\n# EXPERIMENTAL_DMARC=yes\n\n# CFLAGS += -I/usr/local/include\n\n# LDFLAGS += -lopendmarc\n",
        "Line" : 465,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# Uncomment the following line to add Per-Recipient-Data-Response support.\n\n# EXPERIMENTAL_PRDR=yes\n",
        "Line" : 471,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# Uncomment the following line to support Transport post-delivery actions,\n\n# eg. for logging to a database.\n\n# EXPERIMENTAL_TPDA=yes\n",
        "Line" : 474,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# Uncomment the following line to add Redis lookup support\n\n# You need to have hiredis installed on your system (https://github.com/redis/hiredis).\n\n# Depending on where it is installed you may have to edit the CFLAGS and LDFLAGS lines.\n\n# EXPERIMENTAL_REDIS=yes\n\n# CFLAGS += -I/usr/local/include\n\n# LDFLAGS += -lhiredis\n",
        "Line" : 478,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "###############################################################################\n\n#                 THESE ARE THINGS YOU MIGHT WANT TO SPECIFY                  #\n\n###############################################################################\n",
        "Line" : 486,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# The items in this section are those that are commonly changed according to\n\n# the sysadmin's preferences, but whose defaults are often acceptable. The\n\n# first five are concerned with security issues, where differing levels of\n\n# paranoia are appropriate in different environments. Sysadmins also vary in\n\n# their views on appropriate levels of defence in these areas. If you do not\n\n# understand these issues, go with the defaults, which are used by many sites.\n",
        "Line" : 490,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Although Exim is normally a setuid program, owned by root, it refuses to run\n\n# local deliveries as root by default. There is a runtime option called\n\n# \"never_users\" which lists the users that must never be used for local\n\n# deliveries. There is also the setting below, which provides a list that\n\n# cannot be overridden at runtime. This guards against problems caused by\n\n# unauthorized changes to the runtime configuration. You are advised not to\n\n# remove \"root\" from this option, but you can add other users if you want. The\n\n# list is colon-separated. It must NOT contain any spaces.\n",
        "Line" : 498,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "# FIXED_NEVER_USERS=root:bin:daemon\n",
        "Line" : 508,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# By default, Exim insists that its configuration file be owned by root. You\n\n# can specify one additional permitted owner here.\n",
        "Line" : 512,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# CONFIGURE_OWNER=\n",
        "Line" : 516,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# If the configuration file is group-writeable, Exim insists by default that it\n\n# is owned by root. You can specify one additional permitted group owner here.\n",
        "Line" : 518,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# CONFIGURE_GROUP=\n",
        "Line" : 521,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# If you specify CONFIGURE_OWNER or CONFIGURE_GROUP as a name, this is looked\n\n# up at build time, and the uid or gid number is built into the binary.\n\n# However, you can specify that the lookup is deferred until runtime. In this\n\n# case, it is the name that is built into the binary. You can do this by a\n\n# setting of the form:\n",
        "Line" : 523,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "# CONFIGURE_OWNER=ref:mail\n\n# CONFIGURE_GROUP=ref:sysadmin\n",
        "Line" : 529,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# In other words, put \"ref:\" in front of the user or group name. Although this\n\n# costs a bit of resource at runtime, it is convenient to use this feature when\n\n# building binaries that are to be run on multiple systems where the names may\n\n# refer to different uids or gids. It also allows you to build Exim on a system\n\n# where the relevant user or group is not defined.\n",
        "Line" : 532,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# The -C option allows Exim to be run with an alternate runtime configuration\n\n# file. When this is used by root, root privilege is retained by the binary\n\n# (for any other caller including the Exim user, it is dropped). You can\n\n# restrict the location of alternate configurations by defining a prefix below.\n\n# Any file used with -C must then start with this prefix (except that /dev/null\n\n# is also permitted if the caller is root, because that is used in the install\n\n# script). If the prefix specifies a directory that is owned by root, a\n\n# compromise of the Exim account does not permit arbitrary alternate\n\n# configurations to be used. The prefix can be more restrictive than just a\n\n# directory (the second example).\n",
        "Line" : 539,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "# ALT_CONFIG_PREFIX=/some/directory/\n\n# ALT_CONFIG_PREFIX=/some/directory/exim.conf-\n",
        "Line" : 551,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# When a user other than root uses the -C option to override the configuration\n\n# file (including the Exim user when re-executing Exim to regain root\n\n# privileges for local message delivery), this will normally cause Exim to\n\n# drop root privileges. The TRUSTED_CONFIG_LIST option, specifies a file which\n\n# contains a list of trusted configuration filenames, one per line. If the -C\n\n# option is used by the Exim user or by the user specified in the\n\n# CONFIGURE_OWNER setting, to specify a configuration file which is listed in\n\n# the TRUSTED_CONFIG_LIST file, then root privileges are not dropped by Exim.\n",
        "Line" : 555,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "# TRUSTED_CONFIG_LIST=/usr/exim/trusted_configs\n",
        "Line" : 565,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Uncommenting this option disables the use of the -D command line option,\n\n# which changes the values of macros in the runtime configuration file.\n\n# This is another protection against somebody breaking into the Exim account.\n",
        "Line" : 568,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "# DISABLE_D_OPTION=yes\n",
        "Line" : 573,
        "CharPositionInLine" : 0
      },
      "96" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# By contrast, you might be maintaining a system which relies upon the ability\n\n# to override values with -D and assumes that these will be passed through to\n\n# the delivery processes.  As of Exim 4.73, this is no longer the case by\n\n# default.  Going forward, we strongly recommend that you use a shim Exim\n\n# configuration file owned by root stored under TRUSTED_CONFIG_LIST.\n\n# That shim can set macros before .include'ing your main configuration file.\n\n#\n\n# As a strictly transient measure to ease migration to 4.73, the\n\n# WHITELIST_D_MACROS value definies a colon-separated list of macro-names\n\n# which are permitted to be overridden from the command-line which will be\n\n# honoured by the Exim user.  So these are macros that can persist to delivery\n\n# time.\n\n# Examples might be -DTLS or -DSPOOL=/some/dir.  The values on the\n\n# command-line are filtered to only permit: [A-Za-z0-9_/.-]*\n\n#\n\n# This option is highly likely to be removed in a future release.  It exists\n\n# only to make 4.73 as easy as possible to migrate to.  If you use it, we\n\n# encourage you to schedule time to rework your configuration to not depend\n\n# upon it.  Most people should not need to use this.\n\n#\n\n# By default, no macros are whitelisted for -D usage.\n",
        "Line" : 576,
        "CharPositionInLine" : 0
      },
      "97" : {
        "Text" : "# WHITELIST_D_MACROS=TLS:SPOOL\n",
        "Line" : 599,
        "CharPositionInLine" : 0
      },
      "98" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Exim has support for the AUTH (authentication) extension of the SMTP\n\n# protocol, as defined by RFC 2554. If you don't know what SMTP authentication\n\n# is, you probably won't want to include this code, so you should leave these\n\n# settings commented out. If you do want to make use of SMTP authentication,\n\n# you must uncomment at least one of the following, so that appropriate code is\n\n# included in the Exim binary. You will then need to set up the run time\n\n# configuration to make use of the mechanism(s) selected.\n",
        "Line" : 601,
        "CharPositionInLine" : 0
      },
      "99" : {
        "Text" : "# AUTH_CYRUS_SASL=yes\n\n# AUTH_DOVECOT=yes\n\n# AUTH_GSASL=yes\n\n# AUTH_GSASL_PC=libgsasl\n\n# AUTH_HEIMDAL_GSSAPI=yes\n\n# AUTH_HEIMDAL_GSSAPI_PC=heimdal-gssapi\n",
        "Line" : 611,
        "CharPositionInLine" : 0
      },
      "100" : {
        "Text" : "# AUTH_SPA=yes\n",
        "Line" : 618,
        "CharPositionInLine" : 0
      },
      "101" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# If you specified AUTH_CYRUS_SASL above, you should ensure that you have the\n\n# Cyrus SASL library installed before trying to build Exim, and you probably\n\n# want to uncomment the first line below.\n\n# Similarly for GNU SASL, unless pkg-config is used via AUTH_GSASL_PC.\n\n# Ditto for AUTH_HEIMDAL_GSSAPI(_PC).\n",
        "Line" : 621,
        "CharPositionInLine" : 0
      },
      "102" : {
        "Text" : "# AUTH_LIBS=-lsasl2\n\n# AUTH_LIBS=-lgsasl\n\n# AUTH_LIBS=-lgssapi -lheimntlm -lkrb5 -lhx509 -lcom_err -lhcrypto -lasn1 -lwind -lroken -lcrypt\n",
        "Line" : 628,
        "CharPositionInLine" : 0
      },
      "103" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# When Exim is decoding MIME \"words\" in header lines, most commonly for use\n\n# in the $header_xxx expansion, it converts any foreign character sets to the\n\n# one that is set in the headers_charset option. The default setting is\n\n# defined by this setting:\n",
        "Line" : 633,
        "CharPositionInLine" : 0
      },
      "104" : {
        "Text" : "# If you are going to make use of $header_xxx expansions in your configuration\n\n# file, or if your users are going to use them in filter files, and the normal\n\n# character set on your host is something other than ISO-8859-1, you might\n\n# like to specify a different default here. This value can be overridden in\n\n# the runtime configuration, and it can also be overridden in individual filter\n\n# files.\n\n#\n\n# IMPORTANT NOTE: The iconv() function is needed for character code\n\n# conversions. Please see the next item...\n",
        "Line" : 641,
        "CharPositionInLine" : 0
      },
      "105" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Character code conversions are possible only if the iconv() function is\n\n# installed on your operating system. There are two places in Exim where this\n\n# is relevant: (a) The $header_xxx expansion (see the previous item), and (b)\n\n# the Sieve filter support. For those OS where iconv() is known to be installed\n\n# as standard, the file in OS/Makefile-xxxx contains\n\n#\n\n# HAVE_ICONV=yes\n\n#\n\n# If you are not using one of those systems, but have installed iconv(), you\n\n# need to uncomment that line above. In some cases, you may find that iconv()\n\n# and its header file are not in the default places. You might need to use\n\n# something like this:\n\n#\n",
        "Line" : 652,
        "CharPositionInLine" : 0
      },
      "106" : {
        "Text" : "# CFLAGS=-O -I/usr/local/include\n\n# EXTRALIBS_EXIM=-L/usr/local/lib -liconv\n\n#\n\n# but of course there may need to be other things in CFLAGS and EXTRALIBS_EXIM\n\n# as well.\n\n#CFLAGS=\"-Os -pipe -march=i486 -fno-caller-saves -fhonour-copts -Wno-error=unused-but-set-variable\"\n\n#CFLAGS=\"$(TARGET_CFLAGS)\"\n\n# todo: Makefile.arch with -march=XYZ if it doesn't compile correctly\n",
        "Line" : 667,
        "CharPositionInLine" : 0
      },
      "107" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# The passwords for user accounts are normally encrypted with the crypt()\n\n# function. Comparisons with encrypted passwords can be done using Exim's\n\n# \"crypteq\" expansion operator. (This is commonly used as part of the\n\n# configuration of an authenticator for use with SMTP AUTH.) At least one\n\n# operating system has an extended function called crypt16(), which uses up to\n\n# 16 characters of a password (the normal crypt() uses only the first 8). Exim\n\n# supports the use of crypt16() as well as crypt() but note the warning below.\n",
        "Line" : 678,
        "CharPositionInLine" : 0
      },
      "108" : {
        "Text" : "# You can always indicate a crypt16-encrypted password by preceding it with\n\n# \"{crypt16}\". If you want the default handling (without any preceding\n\n# indicator) to use crypt16(), uncomment the following line:\n",
        "Line" : 687,
        "CharPositionInLine" : 0
      },
      "109" : {
        "Text" : "# DEFAULT_CRYPT=crypt16\n",
        "Line" : 691,
        "CharPositionInLine" : 0
      },
      "110" : {
        "Text" : "# If you do that, you can still access the basic crypt() function by preceding\n\n# an encrypted password with \"{crypt}\". For more details, see the description\n\n# of the \"crypteq\" condition in the manual chapter on string expansions.\n",
        "Line" : 693,
        "CharPositionInLine" : 0
      },
      "111" : {
        "Text" : "# Some operating systems do not include a crypt16() function, so Exim has one\n\n# of its own, which it uses unless HAVE_CRYPT16 is defined. Normally, that will\n\n# be set in an OS-specific Makefile for the OS that have such a function, so\n\n# you should not need to bother with it.\n",
        "Line" : 697,
        "CharPositionInLine" : 0
      },
      "112" : {
        "Text" : "# *** WARNING *** WARNING *** WARNING *** WARNING *** WARNING ***\n\n# It turns out that the above is not entirely accurate. As well as crypt16()\n\n# there is a function called bigcrypt() that some operating systems have. This\n\n# may or may not use the same algorithm, and both of them may be different to\n\n# Exim's built-in crypt16() that is used unless HAVE_CRYPT16 is defined.\n\n#\n\n# However, since there is now a move away from the traditional crypt()\n\n# functions towards using SHA1 and other algorithms, tidying up this area of\n\n# Exim is seen as very low priority. In practice, if you need to, you can\n\n# define DEFAULT_CRYPT to the name of any function that has the same interface\n\n# as the traditional crypt() function.\n\n# *** WARNING *** WARNING *** WARNING *** WARNING *** WARNING ***\n",
        "Line" : 702,
        "CharPositionInLine" : 0
      },
      "113" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Exim can be built to support the SMTP STARTTLS command, which implements\n\n# Transport Layer Security using SSL (Secure Sockets Layer). To do this, you\n\n# must install the OpenSSL library package or the GnuTLS library. Exim contains\n\n# no cryptographic code of its own. Uncomment the following lines if you want\n\n# to build Exim with TLS support. If you don't know what this is all about,\n\n# leave these settings commented out.\n",
        "Line" : 716,
        "CharPositionInLine" : 0
      },
      "114" : {
        "Text" : "# This setting is required for any TLS support (either OpenSSL or GnuTLS)\n\n# SUPPORT_TLS=yes\n",
        "Line" : 724,
        "CharPositionInLine" : 0
      },
      "115" : {
        "Text" : "# Uncomment one of these settings if you are using OpenSSL; pkg-config vs not\n\n# USE_OPENSSL_PC=openssl\n\n# TLS_LIBS=-lssl -lcrypto\n",
        "Line" : 727,
        "CharPositionInLine" : 0
      },
      "116" : {
        "Text" : "# Uncomment the first and either the second or the third of these if you\n\n# are using GnuTLS.  If you have pkg-config, then the second, else the third.\n\n# USE_GNUTLS=yes\n\n# USE_GNUTLS_PC=gnutls\n\n# TLS_LIBS=-lgnutls -ltasn1 -lgcrypt\n",
        "Line" : 731,
        "CharPositionInLine" : 0
      },
      "117" : {
        "Text" : "# The security fix we provide with the gnutls_allow_auto_pkcs11 option\n\n# (4.82 PP/09) introduces a compatibility regression.  The symbol is\n\n# not available if GnuTLS is build without p11-kit (--without-p11-kit\n\n# configure option).  In this case use AVOID_GNUTLS_PKCS11=yes when\n\n# building Exim.\n\n# AVOID_GNUTLS_PKCS11=yes\n",
        "Line" : 737,
        "CharPositionInLine" : 0
      },
      "118" : {
        "Text" : "# If you are running Exim as a server, note that just building it with TLS\n\n# support is not all you need to do. You also need to set up a suitable\n\n# certificate, and tell Exim about it by means of the tls_certificate\n\n# and tls_privatekey run time options. You also need to set tls_advertise_hosts\n\n# to specify the hosts to which Exim advertises TLS support. On the other hand,\n\n# if you are running Exim only as a client, building it with TLS support\n\n# is all you need to do.\n",
        "Line" : 744,
        "CharPositionInLine" : 0
      },
      "119" : {
        "Text" : "# If you are using pkg-config then you should not need to worry where the\n\n# libraries and headers are installed, as the pkg-config .pc specification\n\n# should include all -L/-I information necessary.  If not using pkg-config\n\n# then you might need to specify the locations too.\n",
        "Line" : 752,
        "CharPositionInLine" : 0
      },
      "120" : {
        "Text" : "# Additional libraries and include files are required for both OpenSSL and\n\n# GnuTLS. The TLS_LIBS settings above assume that the libraries are installed\n\n# with all your other libraries. If they are in a special directory, you may\n\n# need something like\n",
        "Line" : 757,
        "CharPositionInLine" : 0
      },
      "121" : {
        "Text" : "# TLS_LIBS=-L/usr/local/openssl/lib -lssl -lcrypto\n\n# or\n\n# TLS_LIBS=-L/opt/gnu/lib -lgnutls -ltasn1 -lgcrypt\n",
        "Line" : 762,
        "CharPositionInLine" : 0
      },
      "122" : {
        "Text" : "# TLS_LIBS is included only on the command for linking Exim itself, not on any\n\n# auxiliary programs. If the include files are not in a standard place, you can\n\n# set TLS_INCLUDE to specify where they are, for example:\n",
        "Line" : 766,
        "CharPositionInLine" : 0
      },
      "123" : {
        "Text" : "# TLS_INCLUDE=-I/usr/local/openssl/include/\n\n# or\n\n# TLS_INCLUDE=-I/opt/gnu/include\n",
        "Line" : 770,
        "CharPositionInLine" : 0
      },
      "124" : {
        "Text" : "# You don't need to set TLS_INCLUDE if the relevant directories are already\n\n# specified in INCLUDE.\n",
        "Line" : 774,
        "CharPositionInLine" : 0
      },
      "125" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# The default distribution of Exim contains only the plain text form of the\n\n# documentation. Other forms are available separately. If you want to install\n\n# the documentation in \"info\" format, first fetch the Texinfo documentation\n\n# sources from the ftp directory and unpack them, which should create files\n\n# with the extension \"texinfo\" in the doc directory. You may find that the\n\n# version number of the texinfo files is different to your Exim version number,\n\n# because the main documentation isn't updated as often as the code. For\n\n# example, if you have Exim version 4.43, the source tarball upacks into a\n\n# directory called exim-4.43, but the texinfo tarball unpacks into exim-4.40.\n\n# In this case, move the contents of exim-4.40/doc into exim-4.43/doc after you\n\n# have unpacked them. Then set INFO_DIRECTORY to the location of your info\n\n# directory. This varies from system to system, but is often /usr/share/info.\n\n# Once you have done this, \"make install\" will build the info files and\n\n# install them in the directory you have defined.\n",
        "Line" : 778,
        "CharPositionInLine" : 0
      },
      "126" : {
        "Text" : "# INFO_DIRECTORY=/usr/share/info\n",
        "Line" : 794,
        "CharPositionInLine" : 0
      },
      "127" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Exim log directory and files: Exim creates several log files inside a\n\n# single log directory. You can define the directory and the form of the\n\n# log file name here. If you do not set anything, Exim creates a directory\n\n# called \"log\" inside its spool directory (see SPOOL_DIRECTORY above) and uses\n\n# the filenames \"mainlog\", \"paniclog\", and \"rejectlog\". If you want to change\n\n# this, you can set LOG_FILE_PATH to a path name containing one occurrence of\n\n# %s. This will be replaced by one of the strings \"main\", \"panic\", or \"reject\"\n\n# to form the final file names. Some installations may want something like this:\n",
        "Line" : 797,
        "CharPositionInLine" : 0
      },
      "128" : {
        "Text" : "# LOG_FILE_PATH=/var/log/exim_%slog\n",
        "Line" : 807,
        "CharPositionInLine" : 0
      },
      "129" : {
        "Text" : "# which results in files with names /var/log/exim_mainlog, etc. The directory\n\n# in which the log files are placed must exist; Exim does not try to create\n\n# it for itself. It is also your responsibility to ensure that Exim is capable\n\n# of writing files using this path name. The Exim user (see EXIM_USER above)\n\n# must be able to create and update files in the directory you have specified.\n",
        "Line" : 809,
        "CharPositionInLine" : 0
      },
      "130" : {
        "Text" : "# You can also configure Exim to use syslog, instead of or as well as log\n\n# files, by settings such as these\n",
        "Line" : 815,
        "CharPositionInLine" : 0
      },
      "131" : {
        "Text" : "# LOG_FILE_PATH=syslog\n\n# LOG_FILE_PATH=syslog:/var/log/exim_%slog\n",
        "Line" : 818,
        "CharPositionInLine" : 0
      },
      "132" : {
        "Text" : "# The first of these uses only syslog; the second uses syslog and also writes\n\n# to log files. Do not include white space in such a setting as it messes up\n\n# the building process.\n",
        "Line" : 821,
        "CharPositionInLine" : 0
      },
      "133" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# When logging to syslog, the following option caters for syslog replacements\n\n# that are able to accept log entries longer than the 1024 characters allowed\n\n# by RFC 3164. It is up to you to make sure your syslog daemon can handle this.\n\n# Non-printable characters are usually unacceptable regardless, so log entries\n\n# are still split on newline characters.\n",
        "Line" : 826,
        "CharPositionInLine" : 0
      },
      "134" : {
        "Text" : "# SYSLOG_LONG_LINES=yes\n",
        "Line" : 833,
        "CharPositionInLine" : 0
      },
      "135" : {
        "Text" : "# If you are not interested in the process identifier (pid) of the Exim that is\n\n# making the call to syslog, then comment out the following line.\n",
        "Line" : 835,
        "CharPositionInLine" : 0
      },
      "136" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Cycling log files: this variable specifies the maximum number of old\n\n# log files that are kept by the exicyclog log-cycling script. You don't have\n\n# to use exicyclog. If your operating system has other ways of cycling log\n\n# files, you can use them instead. The exicyclog script isn't run by default;\n\n# you have to set up a cron job for it if you want it.\n",
        "Line" : 841,
        "CharPositionInLine" : 0
      },
      "137" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# The compress command is used by the exicyclog script to compress old log\n\n# files. Both the name of the command and the suffix that it adds to files\n\n# need to be defined here. See also the EXICYCLOG_MAX configuration.\n",
        "Line" : 851,
        "CharPositionInLine" : 0
      },
      "138" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# If the exigrep utility is fed compressed log files, it tries to uncompress\n\n# them using this command.\n",
        "Line" : 860,
        "CharPositionInLine" : 0
      },
      "139" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Compiling in support for embedded Perl: If you want to be able to\n\n# use Perl code in Exim's string manipulation language and you have Perl\n\n# (version 5.004 or later) installed, set EXIM_PERL to perl.o. Using embedded\n\n# Perl costs quite a lot of resources. Only do this if you really need it.\n",
        "Line" : 867,
        "CharPositionInLine" : 0
      },
      "140" : {
        "Text" : "# EXIM_PERL=perl.o\n",
        "Line" : 873,
        "CharPositionInLine" : 0
      },
      "141" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Support for dynamically-loaded string expansion functions via ${dlfunc. If\n\n# you are using gcc the dynamically-loaded object must be compiled with the\n\n# -shared option, and you will need to add -export-dynamic to EXTRALIBS so\n\n# that the local_scan API is made available by the linker. You may also need\n\n# to add -ldl to EXTRALIBS so that dlopen() is available to Exim.\n",
        "Line" : 876,
        "CharPositionInLine" : 0
      },
      "142" : {
        "Text" : "# EXPAND_DLFUNC=yes\n",
        "Line" : 883,
        "CharPositionInLine" : 0
      },
      "143" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Exim has support for PAM (Pluggable Authentication Modules), a facility\n\n# which is available in the latest releases of Solaris and in some GNU/Linux\n\n# distributions (see http://ftp.kernel.org/pub/linux/libs/pam/). The Exim\n\n# support, which is intended for use in conjunction with the SMTP AUTH\n\n# facilities, is included only when requested by the following setting:\n",
        "Line" : 886,
        "CharPositionInLine" : 0
      },
      "144" : {
        "Text" : "# SUPPORT_PAM=yes\n",
        "Line" : 893,
        "CharPositionInLine" : 0
      },
      "145" : {
        "Text" : "# You probably need to add -lpam to EXTRALIBS, and in some releases of\n\n# GNU/Linux -ldl is also needed.\n",
        "Line" : 895,
        "CharPositionInLine" : 0
      },
      "146" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Support for authentication via Radius is also available. The Exim support,\n\n# which is intended for use in conjunction with the SMTP AUTH facilities,\n\n# is included only when requested by setting the following parameter to the\n\n# location of your Radius configuration file:\n",
        "Line" : 899,
        "CharPositionInLine" : 0
      },
      "147" : {
        "Text" : "# RADIUS_CONFIG_FILE=/etc/radiusclient/radiusclient.conf\n\n# RADIUS_CONFIG_FILE=/etc/radius.conf\n",
        "Line" : 905,
        "CharPositionInLine" : 0
      },
      "148" : {
        "Text" : "# If you have set RADIUS_CONFIG_FILE, you should also set one of these to\n\n# indicate which RADIUS library is used:\n",
        "Line" : 908,
        "CharPositionInLine" : 0
      },
      "149" : {
        "Text" : "# RADIUS_LIB_TYPE=RADIUSCLIENT\n\n# RADIUS_LIB_TYPE=RADIUSCLIENTNEW\n\n# RADIUS_LIB_TYPE=RADLIB\n",
        "Line" : 911,
        "CharPositionInLine" : 0
      },
      "150" : {
        "Text" : "# RADIUSCLIENT is the radiusclient library; you probably need to add\n\n#   -lradiusclient to EXTRALIBS.\n\n#\n\n# The API for the radiusclient library was changed at release 0.4.0.\n\n# Unfortunately, the header file does not define a version number that clients\n\n# can use to support both the old and new APIs. If you are using version 0.4.0\n\n# or later of the radiusclient library, you should use RADIUSCLIENTNEW.\n\n#\n\n# RADLIB is the Radius library that comes with FreeBSD (the header file is\n\n#   called radlib.h); you probably need to add -lradius to EXTRALIBS.\n\n#\n\n# If you do not set RADIUS_LIB_TYPE, Exim assumes the radiusclient library,\n\n# using the original API.\n",
        "Line" : 915,
        "CharPositionInLine" : 0
      },
      "151" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Support for authentication via the Cyrus SASL pwcheck daemon is available.\n\n# Note, however, that pwcheck is now deprecated in favour of saslauthd (see\n\n# next item). The Exim support for pwcheck, which is intented for use in\n\n# conjunction with the SMTP AUTH facilities, is included only when requested by\n\n# setting the following parameter to the location of the pwcheck daemon's\n\n# socket.\n\n#\n\n# There is no need to install all of SASL on your system. You just need to run\n\n# ./configure --with-pwcheck, cd to the pwcheck directory within the sources,\n\n# make and make install. You must create the socket directory (default\n\n# /var/pwcheck) and chown it to exim's user and group. Once you have installed\n\n# pwcheck, you should arrange for it to be started by root at boot time.\n",
        "Line" : 930,
        "CharPositionInLine" : 0
      },
      "152" : {
        "Text" : "# CYRUS_PWCHECK_SOCKET=/var/pwcheck/pwcheck\n",
        "Line" : 944,
        "CharPositionInLine" : 0
      },
      "153" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Support for authentication via the Cyrus SASL saslauthd daemon is available.\n\n# The Exim support, which is intented for use in conjunction with the SMTP AUTH\n\n# facilities, is included only when requested by setting the following\n\n# parameter to the location of the saslauthd daemon's socket.\n\n#\n\n# There is no need to install all of SASL on your system. You just need to run\n\n# ./configure --with-saslauthd (and any other options you need, for example, to\n\n# select or deselect authentication mechanisms), cd to the saslauthd directory\n\n# within the sources, make and make install. You must create the socket\n\n# directory (default /var/state/saslauthd) and chown it to exim's user and\n\n# group. Once you have installed saslauthd, you should arrange for it to be\n\n# started by root at boot time.\n",
        "Line" : 947,
        "CharPositionInLine" : 0
      },
      "154" : {
        "Text" : "# CYRUS_SASLAUTHD_SOCKET=/var/state/saslauthd/mux\n",
        "Line" : 961,
        "CharPositionInLine" : 0
      },
      "155" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# TCP wrappers: If you want to use tcpwrappers from within Exim, uncomment\n\n# this setting. See the manual section entitled \"Use of tcpwrappers\" in the\n\n# chapter on building and installing Exim.\n\n#\n\n# USE_TCP_WRAPPERS=yes\n\n#\n\n# You may well also have to specify a local \"include\" file and an additional\n\n# library for TCP wrappers, so you probably need something like this:\n\n#\n\n# USE_TCP_WRAPPERS=yes\n\n# CFLAGS=-O -I/usr/local/include\n\n# EXTRALIBS_EXIM=-L/usr/local/lib -lwrap\n\n#\n\n# but of course there may need to be other things in CFLAGS and EXTRALIBS_EXIM\n\n# as well.\n\n#\n\n# To use a name other than exim in the tcpwrappers config file,\n\n# e.g. if you're running multiple daemons with different access lists,\n\n# or multiple MTAs with the same access list, define\n\n# TCP_WRAPPERS_DAEMON_NAME accordingly\n\n#\n\n# TCP_WRAPPERS_DAEMON_NAME=\"exim\"\n",
        "Line" : 964,
        "CharPositionInLine" : 0
      },
      "156" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# The default action of the exim_install script (which is run by \"make\n\n# install\") is to install the Exim binary with a unique name such as\n\n# exim-4.43-1, and then set up a symbolic link called \"exim\" to reference it,\n\n# moving the symbolic link from any previous version. If you define NO_SYMLINK\n\n# (the value doesn't matter), the symbolic link is not created or moved. You\n\n# will then have to \"turn Exim on\" by setting up the link manually.\n",
        "Line" : 989,
        "CharPositionInLine" : 0
      },
      "157" : {
        "Text" : "# NO_SYMLINK=yes\n",
        "Line" : 997,
        "CharPositionInLine" : 0
      },
      "158" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Another default action of the install script is to install a default runtime\n\n# configuration file if one does not exist. This configuration has a router for\n\n# expanding system aliases. The default assumes that these aliases are kept\n\n# in the traditional file called /etc/aliases. If such a file does not exist,\n\n# the installation script creates one that contains just comments (no actual\n\n# aliases). The following setting can be changed to specify a different\n\n# location for the system alias file.\n",
        "Line" : 1000,
        "CharPositionInLine" : 0
      },
      "159" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# There are some testing options (-be, -bt, -bv) that read data from the\n\n# standard input when no arguments are supplied. By default, the input lines\n\n# are read using the standard fgets() function. This does not support line\n\n# editing during interactive input (though the terminal's \"erase\" character\n\n# works as normal). If your operating system has the readline() function, and\n\n# in addition supports dynamic loading of library functions, you can cause\n\n# Exim to use readline() for the -be testing option (only) by uncommenting the\n\n# following setting. Dynamic loading is used so that the library is loaded only\n\n# when the -be testing option is given; by the time the loading occurs,\n\n# Exim has given up its root privilege and is running as the calling user. This\n\n# is the reason why readline() is NOT supported for -bt and -bv, because Exim\n\n# runs as root or as exim, respectively, for those options. When USE_READLINE\n\n# is \"yes\", as well as supporting line editing, a history of input lines in the\n\n# current run is maintained.\n",
        "Line" : 1012,
        "CharPositionInLine" : 0
      },
      "160" : {
        "Text" : "# USE_READLINE=yes\n",
        "Line" : 1028,
        "CharPositionInLine" : 0
      },
      "161" : {
        "Text" : "# You may need to add -ldl to EXTRALIBS when you set USE_READLINE=yes.\n\n# Note that this option adds to the size of the Exim binary, because the\n\n# dynamic loading library is not otherwise included.\n",
        "Line" : 1030,
        "CharPositionInLine" : 0
      },
      "162" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Uncomment this setting to include IPv6 support.\n",
        "Line" : 1035,
        "CharPositionInLine" : 0
      },
      "163" : {
        "Text" : "###############################################################################\n\n#              THINGS YOU ALMOST NEVER NEED TO MENTION                        #\n\n###############################################################################\n",
        "Line" : 1040,
        "CharPositionInLine" : 0
      },
      "164" : {
        "Text" : "# The settings in this section are available for use in special circumstances.\n\n# In the vast majority of installations you need not change anything below.\n",
        "Line" : 1044,
        "CharPositionInLine" : 0
      },
      "165" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# The following commands live in different places in some OS. Either the\n\n# ultimate default settings, or the OS-specific files should already point to\n\n# the right place, but they can be overridden here if necessary. These settings\n\n# are used when building various scripts to ensure that the correct paths are\n\n# used when the scripts are run. They are not used in the Makefile itself. Perl\n\n# is not necessary for running Exim unless you set EXIM_PERL (see above) to get\n\n# it embedded, but there are some utilities that are Perl scripts. If you\n\n# haven't got Perl, Exim will still build and run; you just won't be able to\n\n# use those utilities.\n",
        "Line" : 1048,
        "CharPositionInLine" : 0
      },
      "166" : {
        "Text" : "# CHOWN_COMMAND=/usr/bin/chown\n\n# CHGRP_COMMAND=/usr/bin/chgrp\n\n# CHMOD_COMMAND=/usr/bin/chmod\n\n# MV_COMMAND=/bin/mv\n\n# RM_COMMAND=/bin/rm\n\n# TOUCH_COMMAND=/usr/bin/touch\n\n# PERL_COMMAND=/usr/bin/perl\n",
        "Line" : 1059,
        "CharPositionInLine" : 0
      },
      "167" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# The following macro can be used to change the command for building a library\n\n# of functions. By default the \"ar\" command is used, with options \"cq\".\n\n# Only in rare circumstances should you need to change this.\n",
        "Line" : 1068,
        "CharPositionInLine" : 0
      },
      "168" : {
        "Text" : "# AR=ar cq\n",
        "Line" : 1073,
        "CharPositionInLine" : 0
      },
      "169" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# In some operating systems, the value of the TMPDIR environment variable\n\n# controls where temporary files are created. Exim does not make use of\n\n# temporary files, except when delivering to MBX mailboxes. However, if Exim\n\n# calls any external libraries (e.g. DBM libraries), they may use temporary\n\n# files, and thus be influenced by the value of TMPDIR. For this reason, when\n\n# Exim starts, it checks the environment for TMPDIR, and if it finds it is set,\n\n# it replaces the value with what is defined here. Commenting this setting\n\n# suppresses the check altogether.\n",
        "Line" : 1076,
        "CharPositionInLine" : 0
      },
      "170" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# The following macros can be used to change the default modes that are used\n\n# by the appendfile transport. In most installations the defaults are just\n\n# fine, and in any case, you can change particular instances of the transport\n\n# at run time if you want.\n",
        "Line" : 1089,
        "CharPositionInLine" : 0
      },
      "171" : {
        "Text" : "# APPENDFILE_MODE=0600\n\n# APPENDFILE_DIRECTORY_MODE=0700\n\n# APPENDFILE_LOCKFILE_MODE=0600\n",
        "Line" : 1095,
        "CharPositionInLine" : 0
      },
      "172" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# In some installations there may be multiple machines sharing file systems,\n\n# where a different configuration file is required for Exim on the different\n\n# machines. If CONFIGURE_FILE_USE_NODE is defined, then Exim will first look\n\n# for a configuration file whose name is that defined by CONFIGURE_FILE,\n\n# with the node name obtained by uname() tacked on the end, separated by a\n\n# period (for example, /usr/exim/configure.host.in.some.domain). If this file\n\n# does not exist, then the bare configuration file name is tried.\n",
        "Line" : 1100,
        "CharPositionInLine" : 0
      },
      "173" : {
        "Text" : "# CONFIGURE_FILE_USE_NODE=yes\n",
        "Line" : 1109,
        "CharPositionInLine" : 0
      },
      "174" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# In some esoteric configurations two different versions of Exim are run,\n\n# with different setuid values, and different configuration files are required\n\n# to handle the different cases. If CONFIGURE_FILE_USE_EUID is defined, then\n\n# Exim will first look for a configuration file whose name is that defined\n\n# by CONFIGURE_FILE, with the effective uid tacked on the end, separated by\n\n# a period (for eximple, /usr/exim/configure.0). If this file does not exist,\n\n# then the bare configuration file name is tried. In the case when both\n\n# CONFIGURE_FILE_USE_EUID and CONFIGURE_FILE_USE_NODE are set, four files\n\n# are tried: <name>.<euid>.<node>, <name>.<node>, <name>.<euid>, and <name>.\n",
        "Line" : 1112,
        "CharPositionInLine" : 0
      },
      "175" : {
        "Text" : "# CONFIGURE_FILE_USE_EUID=yes\n",
        "Line" : 1123,
        "CharPositionInLine" : 0
      },
      "176" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# The size of the delivery buffers: These specify the sizes (in bytes) of\n\n# the buffers that are used when copying a message from the spool to a\n\n# destination. There is rarely any need to change these values.\n",
        "Line" : 1126,
        "CharPositionInLine" : 0
      },
      "177" : {
        "Text" : "# DELIVER_IN_BUFFER_SIZE=8192\n\n# DELIVER_OUT_BUFFER_SIZE=8192\n",
        "Line" : 1131,
        "CharPositionInLine" : 0
      },
      "178" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# The mode of the database directory: Exim creates a directory called \"db\"\n\n# in its spool directory, to hold its databases of hints. This variable\n\n# determines the mode of the created directory. The default value in the\n\n# source is 0750.\n",
        "Line" : 1135,
        "CharPositionInLine" : 0
      },
      "179" : {
        "Text" : "# EXIMDB_DIRECTORY_MODE=0750\n",
        "Line" : 1141,
        "CharPositionInLine" : 0
      },
      "180" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Database file mode: The mode of files created in the \"db\" directory defaults\n\n# to 0640 in the source, and can be changed here.\n",
        "Line" : 1144,
        "CharPositionInLine" : 0
      },
      "181" : {
        "Text" : "# EXIMDB_MODE=0640\n",
        "Line" : 1148,
        "CharPositionInLine" : 0
      },
      "182" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Database lock file mode: The mode of zero-length files created in the \"db\"\n\n# directory to use for locking purposes defaults to 0640 in the source, and\n\n# can be changed here.\n",
        "Line" : 1151,
        "CharPositionInLine" : 0
      },
      "183" : {
        "Text" : "# EXIMDB_LOCKFILE_MODE=0640\n",
        "Line" : 1156,
        "CharPositionInLine" : 0
      },
      "184" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# This parameter sets the maximum length of the header portion of a message\n\n# that Exim is prepared to process. The default setting is one megabyte. The\n\n# limit exists in order to catch rogue mailers that might connect to your SMTP\n\n# port, start off a header line, and then just pump junk at it for ever. The\n\n# message_size_limit option would also catch this, but it may not be set.\n\n# The value set here is the default; it can be changed at runtime.\n",
        "Line" : 1159,
        "CharPositionInLine" : 0
      },
      "185" : {
        "Text" : "# HEADER_MAXSIZE=\"(1024*1024)\"\n",
        "Line" : 1167,
        "CharPositionInLine" : 0
      },
      "186" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# The mode of the input directory: The input directory is where messages are\n\n# kept while awaiting delivery. Exim creates it if necessary, using a mode\n\n# which can be defined here (default 0750).\n",
        "Line" : 1170,
        "CharPositionInLine" : 0
      },
      "187" : {
        "Text" : "# INPUT_DIRECTORY_MODE=0750\n",
        "Line" : 1175,
        "CharPositionInLine" : 0
      },
      "188" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# The mode of Exim's log directory, when it is created by Exim inside the spool\n\n# directory, defaults to 0750 but can be changed here.\n",
        "Line" : 1178,
        "CharPositionInLine" : 0
      },
      "189" : {
        "Text" : "# LOG_DIRECTORY_MODE=0750\n",
        "Line" : 1182,
        "CharPositionInLine" : 0
      },
      "190" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# The log files themselves are created as required, with a mode that defaults\n\n# to 0640, but which can be changed here.\n",
        "Line" : 1185,
        "CharPositionInLine" : 0
      },
      "191" : {
        "Text" : "# LOG_MODE=0640\n",
        "Line" : 1189,
        "CharPositionInLine" : 0
      },
      "192" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# The TESTDB lookup is for performing tests on the handling of lookup results,\n\n# and is not useful for general running. It should be included only when\n\n# debugging the code of Exim.\n",
        "Line" : 1192,
        "CharPositionInLine" : 0
      },
      "193" : {
        "Text" : "# LOOKUP_TESTDB=yes\n",
        "Line" : 1197,
        "CharPositionInLine" : 0
      },
      "194" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# /bin/sh is used by default as the shell in which to run commands that are\n\n# defined in the makefiles. This can be changed if necessary, by uncommenting\n\n# this line and specifying another shell, but note that a Bourne-compatible\n\n# shell is expected.\n",
        "Line" : 1200,
        "CharPositionInLine" : 0
      },
      "195" : {
        "Text" : "# MAKE_SHELL=/bin/sh\n",
        "Line" : 1206,
        "CharPositionInLine" : 0
      },
      "196" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# The maximum number of named lists of each type (address, domain, host, and\n\n# local part) can be increased by changing this value. It should be set to\n\n# a multiple of 16.\n",
        "Line" : 1209,
        "CharPositionInLine" : 0
      },
      "197" : {
        "Text" : "# MAX_NAMED_LIST=16\n",
        "Line" : 1214,
        "CharPositionInLine" : 0
      },
      "198" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Network interfaces: Unless you set the local_interfaces option in the runtime\n\n# configuration file to restrict Exim to certain interfaces only, it will run\n\n# code to find all the interfaces there are on your host. Unfortunately,\n\n# the call to the OS that does this requires a buffer large enough to hold\n\n# data for all the interfaces - it was designed in the days when a host rarely\n\n# had more than three or four interfaces. Nowadays hosts can have very many\n\n# virtual interfaces running on the same hardware. If you have more than 250\n\n# virtual interfaces, you will need to uncomment this setting and increase the\n\n# value.\n",
        "Line" : 1217,
        "CharPositionInLine" : 0
      },
      "199" : {
        "Text" : "# MAXINTERFACES=250\n",
        "Line" : 1228,
        "CharPositionInLine" : 0
      },
      "200" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Per-message logs: While a message is in the process of being delivered,\n\n# comments on its progress are written to a message log, for the benefit of\n\n# human administrators. These logs are held in a directory called \"msglog\"\n\n# in the spool directory. Its mode defaults to 0750, but can be changed here.\n\n# The message log directory is also used for storing files that are used by\n\n# transports for returning data to a message's sender (see the \"return_output\"\n\n# option for transports).\n",
        "Line" : 1231,
        "CharPositionInLine" : 0
      },
      "201" : {
        "Text" : "# MSGLOG_DIRECTORY_MODE=0750\n",
        "Line" : 1240,
        "CharPositionInLine" : 0
      },
      "202" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# There are three options which are used when compiling the Perl interface and\n\n# when linking with Perl. The default values for these are placed automatically\n\n# at the head of the Makefile by the script which builds it. However, if you\n\n# want to override them, you can do so here.\n",
        "Line" : 1243,
        "CharPositionInLine" : 0
      },
      "203" : {
        "Text" : "# PERL_CC=\n\n# PERL_CCOPTS=\n\n# PERL_LIBS=\n",
        "Line" : 1249,
        "CharPositionInLine" : 0
      },
      "204" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# If you wish to disable valgrind in the binary, define NVALGRIND=1.\n\n# This should not be needed.\n",
        "Line" : 1254,
        "CharPositionInLine" : 0
      },
      "205" : {
        "Text" : "# NVALGRIND=1\n",
        "Line" : 1258,
        "CharPositionInLine" : 0
      },
      "206" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Identifying the daemon: When an Exim daemon starts up, it writes its pid\n\n# (process id) to a file so that it can easily be identified. The path of the\n\n# file can be specified here. Some installations may want something like this:\n",
        "Line" : 1260,
        "CharPositionInLine" : 0
      },
      "207" : {
        "Text" : "# If PID_FILE_PATH is not defined, Exim writes a file in its spool directory\n\n# using the name \"exim-daemon.pid\".\n",
        "Line" : 1267,
        "CharPositionInLine" : 0
      },
      "208" : {
        "Text" : "# If you start up a daemon without the -bd option (for example, with just\n\n# the -q15m option), a pid file is not written. Also, if you override the\n\n# configuration file with the -oX option, no pid file is written. In other\n\n# words, the pid file is written only for a \"standard\" daemon.\n",
        "Line" : 1270,
        "CharPositionInLine" : 0
      },
      "209" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# If Exim creates the spool directory, it is given this mode, defaulting in the\n\n# source to 0750.\n",
        "Line" : 1276,
        "CharPositionInLine" : 0
      },
      "210" : {
        "Text" : "# SPOOL_DIRECTORY_MODE=0750\n",
        "Line" : 1280,
        "CharPositionInLine" : 0
      },
      "211" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# The mode of files on the input spool which hold the contents of messages can\n\n# be changed here. The default is 0640 so that information from the spool is\n\n# available to anyone who is a member of the Exim group.\n",
        "Line" : 1283,
        "CharPositionInLine" : 0
      },
      "212" : {
        "Text" : "# SPOOL_MODE=0640\n",
        "Line" : 1288,
        "CharPositionInLine" : 0
      },
      "213" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Moving frozen messages: If the following is uncommented, Exim is compiled\n\n# with support for automatically moving frozen messages out of the main spool\n\n# directory, a facility that is found useful by some large installations. A\n\n# run time option is required to cause the moving actually to occur. Such\n\n# messages become \"invisible\" to the normal management tools.\n",
        "Line" : 1291,
        "CharPositionInLine" : 0
      },
      "214" : {
        "Text" : "# SUPPORT_MOVE_FROZEN_MESSAGES=yes\n",
        "Line" : 1298,
        "CharPositionInLine" : 0
      },
      "215" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Expanding match_* second paramters: BE CAREFUL IF ENABLING THIS!\n\n# It has proven too easy in practice for administrators to configure security\n\n# problems into their Exim install, by treating match_domain{}{} and friends\n\n# as a form of string comparison, where the second string comes from untrusted\n\n# data. Because these options take lists, which can include lookup;LOOKUPDATA\n\n# style elements, a foe can then cause Exim to, eg, execute an arbitrary MySQL\n\n# query, dropping tables.\n\n# From Exim 4.77 onwards, the second parameter is not expanded; it can still\n\n# be a list literal, or a macro, or a named list reference.  There is also\n\n# the new expansion condition \"inlisti\" which does expand the second parameter,\n\n# but treats it as a list of strings; also, there's \"eqi\" which is probably\n\n# what is normally wanted.\n\n#\n\n# If you really need to have the old behaviour, know what you are doing and\n\n# will not complain if your system is compromised as a result of doing so, then\n\n# uncomment this option to get the old behaviour back.\n",
        "Line" : 1301,
        "CharPositionInLine" : 0
      },
      "216" : {
        "Text" : "# EXPAND_LISTMATCH_RHS=yes\n",
        "Line" : 1319,
        "CharPositionInLine" : 0
      },
      "217" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Disabling the use of fsync(): DO NOT UNCOMMENT THE FOLLOWING LINE unless you\n\n# really, really, really know what you are doing. And even then, think again.\n\n# You should never uncomment this when compiling a binary for distribution.\n\n# Use it only when compiling Exim for your own use.\n\n#\n\n# Uncommenting this line enables the use of a runtime option called\n\n# disable_fsync, which can be used to stop Exim using fsync() to ensure that\n\n# files are written to disc before proceeding. When this is disabled, crashes\n\n# and hardware problems such as power outages can cause data to be lost. This\n\n# feature should only be used in very exceptional circumstances. YOU HAVE BEEN\n\n# WARNED.\n",
        "Line" : 1321,
        "CharPositionInLine" : 0
      },
      "218" : {
        "Text" : "# ENABLE_DISABLE_FSYNC=yes\n",
        "Line" : 1334,
        "CharPositionInLine" : 0
      },
      "219" : {
        "Text" : "# End of EDITME for Exim 4.\n",
        "Line" : 1336,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 220
    },
    "golang/Makefile" : {
      "ObjectId" : "4eb448d6a05df2686d87670bfda646f9586f8714",
      "LastModified" : "2018-07-12T22:20:28Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "hypesites/Makefile" : {
      "ObjectId" : "354399a863444eca86a7c7cd5f262a593372523b",
      "LastModified" : "2018-07-12T22:20:28Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "owncloud-documents/Makefile" : {
      "ObjectId" : "402ffe8ed649efd8114cc5b7a418964fc619f3f8",
      "LastModified" : "2018-07-12T22:20:28Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "owncloud/Makefile" : {
      "ObjectId" : "9c5df740e846f501422fe25df8aaa7a3bc14a4ef",
      "LastModified" : "2018-07-12T22:20:28Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "provision-grandstream/Makefile" : {
      "ObjectId" : "9c67250a001eeb5c523eec3bda3eaf27fdc39f8b",
      "LastModified" : "2018-07-12T22:20:28Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "python-beanstalkc/Makefile" : {
      "ObjectId" : "9789d422d332f5d9102244e50d12061a0d0b291b",
      "LastModified" : "2018-07-12T22:20:28Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "python-cython/Makefile" : {
      "ObjectId" : "e6870e01c0436ddbfa72cda6131a2ec0a2a95588",
      "LastModified" : "2018-07-12T22:20:28Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Copyright (C) 2009-2010 OpenWrt.org\n\n#\n\n# This is free software, licensed under the GNU General Public License v2.\n\n# See /LICENSE for more information.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# <--no-cython-compile> required, otherwise setup.py calls the target-gcc to create so-files which obviously can't be used by <python> on the host system.\n",
        "Line" : 43,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "#$(call Build/Compile/PyMod,,install --single-version-externally-managed --no-cython-compile --prefix=\"/usr\" --root=\"$(PKG_INSTALL_DIR)\")\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TODO: this should be moved to python package\n\n# $(1) => build subdir\n\n# $(2) => additional arguments to setup.py\n\n# $(3) => additional variables\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#$(call Host/Compile/PyMod,,install --single-version-externally-managed --no-cython-compile --prefix=\"/usr\" --root=\"$(STAGING_DIR_HOST)\")\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "python-django-1.4/Makefile" : {
      "ObjectId" : "3e10c966074cbc17278fe9d4f4a1614495ffceb0",
      "LastModified" : "2018-07-12T22:20:28Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "python-gevent/Makefile" : {
      "ObjectId" : "1e95b322eca49dca7a567c15ec2723d2488480d3",
      "LastModified" : "2018-07-12T22:20:28Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Copyright (C) 2013 OpenWrt.org\n\n#\n\n# This is free software, licensed under the GNU General Public License v2.\n\n# See /LICENSE for more information.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is required in addition to PKG_USE_MIPS16:=0 because otherwise MIPS16\n\n# flags are inherited from the Python base package (via sysconfig module)\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "python-greenlet/Makefile" : {
      "ObjectId" : "8f0425178123a08892a89179d2e80b1cb8644dee",
      "LastModified" : "2018-07-12T22:20:28Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Copyright (C) 2013 OpenWrt.org\n\n#\n\n# This is free software, licensed under the GNU General Public License v2.\n\n# See /LICENSE for more information.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "python-gunicorn/Makefile" : {
      "ObjectId" : "79de6b38cbfac691c6a71ac90f1780a3b7b03962",
      "LastModified" : "2018-07-12T22:20:28Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "python-requests/Makefile" : {
      "ObjectId" : "b8ebbba0ece7176b3599d5171e330e1b035314bf",
      "LastModified" : "2018-07-12T22:20:28Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "python-setuptools/Makefile" : {
      "ObjectId" : "502fe9e3af733c47b23b8a645199372308ddcafe",
      "LastModified" : "2018-07-12T22:20:28Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "python-six/Makefile" : {
      "ObjectId" : "1027abce94f49b091ad8e7110d244d4b9875133c",
      "LastModified" : "2018-07-12T22:20:28Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "python-unidecode/Makefile" : {
      "ObjectId" : "119bac418b8bbe0c269e4f2dd93a11800f404d50",
      "LastModified" : "2018-07-12T22:20:28Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "roundcube/Makefile" : {
      "ObjectId" : "88b5c13c70afe9b4350f279808347d4ca7f55f1a",
      "LastModified" : "2018-07-12T22:20:28Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "stikked/Makefile" : {
      "ObjectId" : "605be5e521027804520a02034e96de2959e20f13",
      "LastModified" : "2018-07-12T22:20:28Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# stikked config\n",
        "Line" : 40,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "teletext/Makefile" : {
      "ObjectId" : "6a48f929594c7cf8164003d7ce6929d1570df902",
      "LastModified" : "2018-07-12T22:20:28Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "webinterface/Makefile" : {
      "ObjectId" : "29dbab1fc248b524a1a46ebd953757d788f618e4",
      "LastModified" : "2019-01-21T20:02:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# APU\n\n#  DEPENDS+= +kmod-e1000 +kmod-r8169 +kmod-via-rhine\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# APU2\n\n#  DEPENDS+= +kmod-i2c-core +kmod-igb +cjdns-v16-avx\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#doesn't work, set it manually!\n",
        "Line" : 40,
        "CharPositionInLine" : 30
      },
      "CommentCount" : 3
    },
    "webinterface/files/root/opt/enigmabox/webinterface/Makefile" : {
      "ObjectId" : "a3c3e32c374beedeaba7d4ea96a67c3d43b5e07f",
      "LastModified" : "2018-07-12T22:20:28Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 31
  },
  "ElapsedTime" : 1137
}