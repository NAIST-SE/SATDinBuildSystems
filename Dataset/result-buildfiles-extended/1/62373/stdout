{
  "Repository" : "62373",
  "Revision" : "HEAD",
  "ObjectId" : "f231731af6c96a35e14d4486d194a6da50dba404",
  "CommitTime" : "2016-01-17T08:46:41Z",
  "Files" : {
    "build.xml" : {
      "ObjectId" : "0387f121f4028d497064af1c0a3290ab3572f251",
      "LastModified" : "2015-08-20T17:33:36Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " The Java source files for the compiler ",
        "Line" : 32,
        "CharPositionInLine" : 52
      },
      "1" : {
        "Text" : " Directories everything gets built into ",
        "Line" : 39,
        "CharPositionInLine" : 52
      },
      "2" : {
        "Text" : " Jarfiles everything ends up in ",
        "Line" : 51,
        "CharPositionInLine" : 44
      },
      "3" : {
        "Text" : " The directory that parser tests live in, and\n       the directory test results get written into ",
        "Line" : 61,
        "CharPositionInLine" : 55
      },
      "4" : {
        "Text" : " ################################################################## ",
        "Line" : 106,
        "CharPositionInLine" : 80
      },
      "5" : {
        "Text" : " constant to declare a file binary for checksumsum ",
        "Line" : 108,
        "CharPositionInLine" : 63
      },
      "6" : {
        "Text" : " Helper target, used to create a sha1 checksum file  ",
        "Line" : 110,
        "CharPositionInLine" : 65
      },
      "7" : {
        "Text" : " Requires 'file' as a parameter. ",
        "Line" : 111,
        "CharPositionInLine" : 45
      },
      "8" : {
        "Text" : " Rule to clean everything up ",
        "Line" : 121,
        "CharPositionInLine" : 41
      },
      "9" : {
        "Text" : " Repository targets ",
        "Line" : 128,
        "CharPositionInLine" : 32
      },
      "10" : {
        "Text" : " Rule to compile and test ",
        "Line" : 153,
        "CharPositionInLine" : 38
      },
      "11" : {
        "Text" : " Rule to build compiler classes from their Java sources ",
        "Line" : 156,
        "CharPositionInLine" : 68
      },
      "12" : {
        "Text" : " \n          We need a second compilation step to compile entry points compatible with Java 5\n          to be able to produce nice error messages for older Java versions. Same for ant\n          tasks, so that they can run on Java 5 and the error messages are left to the\n          programs they spawn.\n        ",
        "Line" : 176,
        "CharPositionInLine" : 12
      },
      "13" : {
        "Text" : " Rule to build compiler test classes from their Java sources ",
        "Line" : 209,
        "CharPositionInLine" : 73
      },
      "14" : {
        "Text" : " Rule to build compiler jar ",
        "Line" : 237,
        "CharPositionInLine" : 40
      },
      "15" : {
        "Text" : " Rule to build ant jar ",
        "Line" : 263,
        "CharPositionInLine" : 35
      },
      "16" : {
        "Text" : " Rule to build bootstrap jar ",
        "Line" : 275,
        "CharPositionInLine" : 41
      },
      "17" : {
        "Text" : " Rule to build bootstrap module ",
        "Line" : 288,
        "CharPositionInLine" : 44
      },
      "18" : {
        "Text" : " Rule to build compiler jar ",
        "Line" : 306,
        "CharPositionInLine" : 40
      },
      "19" : {
        "Text" : " Runs the JUnit tests ",
        "Line" : 338,
        "CharPositionInLine" : 34
      },
      "20" : {
        "Text" : " Runs the JUnit tests ",
        "Line" : 352,
        "CharPositionInLine" : 34
      },
      "21" : {
        "Text" : "\n            <test fork=\"yes\" todir=\"${test.reports}\"\n            \tname=\"com.redhat.ceylon.compiler.java.test.model.ModelLoaderTests\"\n            \tmethods=\"loadJavaKeywords\">\n            </test>\n            ",
        "Line" : 369,
        "CharPositionInLine" : 16
      },
      "CommentCount" : 22
    },
    "langtools/make/Makefile" : {
      "ObjectId" : "5735a549c2a3b59c204bae380b3b585a04219bea",
      "LastModified" : "2012-04-25T12:40:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2007, 2010, Oracle and/or its affiliates. All rights reserved.\n\n# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n\n#\n\n# This code is free software; you can redistribute it and/or modify it\n\n# under the terms of the GNU General Public License version 2 only, as\n\n# published by the Free Software Foundation.  Oracle designates this\n\n# particular file as subject to the \"Classpath\" exception as provided\n\n# by Oracle in the LICENSE file that accompanied this code.\n\n#\n\n# This code is distributed in the hope that it will be useful, but WITHOUT\n\n# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n\n# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n\n# version 2 for more details (a copy is included in the LICENSE file that\n\n# accompanied this code).\n\n#\n\n# You should have received a copy of the GNU General Public License version\n\n# 2 along with this work; if not, write to the Free Software Foundation,\n\n# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n\n#\n\n# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n\n# or visit www.oracle.com if you need additional information or have any\n\n# questions.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Makefile for langtools: wrapper around Ant build.xml file\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# On Solaris, the standard 'make' utility will not work with these makefiles.\n\n#    This little rule is only understood by Solaris make, and is harmless\n\n#    when seen by the GNU make tool. If using Solaris make, this causes the\n\n#    make command to fail.\n\n#\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Minimal platform defs\n\n# Need FullPath because we can't rely on gnumake abspath, until we use v3.81\n\n#\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Where is unwanted output to be delivered?\n\n# On Windows, MKS uses the special file \"NUL\", cygwin uses the customary unix file.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# Makefile args\n\n#\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Default target and expected 'do everything' target\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Standard make clobber target\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# All ant targets of interest\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# for now\n",
        "Line" : 190,
        "CharPositionInLine" : 74
      },
      "10" : {
        "Text" : "# Create diagnostics log (careful, ant 1.8.0 -diagnostics always does an exit 1)\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Create a make target for each\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#-------------------------------------------------------------------\n\n#\n\n# Targets for Oracle's internal JPRT build system\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#-------------------------------------------------------------------\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Declare these phony (not filenames)\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "langtools/make/build.xml" : {
      "ObjectId" : "5141cfdad583233026fa154d73bf13cb5b131557",
      "LastModified" : "2012-04-25T12:40:12Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n Copyright (c) 2007, 2011, Oracle and/or its affiliates. All rights reserved.\n DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n\n This code is free software; you can redistribute it and/or modify it\n under the terms of the GNU General Public License version 2 only, as\n published by the Free Software Foundation.  Oracle designates this\n particular file as subject to the \"Classpath\" exception as provided\n by Oracle in the LICENSE file that accompanied this code.\n\n This code is distributed in the hope that it will be useful, but WITHOUT\n ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n version 2 for more details (a copy is included in the LICENSE file that\n accompanied this code).\n\n You should have received a copy of the GNU General Public License version\n 2 along with this work; if not, write to the Free Software Foundation,\n Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n\n Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n or visit www.oracle.com if you need additional information or have any\n questions.\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "\n This is the main build file for the complete langtools repository.\n It is used when building JDK (in which case it is invoked from the\n Makefile), and it can be used when working on the tools themselves,\n in an IDE such as NetBeans.\n\n External dependencies are specified via properties. These can be given\n on the command line, or by providing a local build.properties file.\n (They can also be edited into make/build.properties, although that is not\n recommended.)  At a minimum, boot.java.home must be set to the installed\n location of the version of JDK used to build this repository. Additional\n properties may be required, depending on the targets that are built.\n For example, to run any of the jtreg tests you must set jtreg.home,\n to run findbugs on the code you must set findbugs.home, and so on.\n\n For the most part, javac can be built using the previous version of JDK.\n However, a small number of javac files require access to the latest JDK,\n which may not yet have been compiled. To compile these files, you can do\n one of the following:\n - Set boot.java.home to a recent build of the latest version of JDK.\n - Set import.jdk to either a recent build (containing jre/lib/rt.jar)\n   or to jdk source repository.  In the latter case, stub files will\n   automatically be generated and used for the required API, to avoid\n   unnecessary compilation of the source repository.\n If you do neither, the relevant files will not be built.\n\n The main build happens in two phases:\n - First, javac and other tools as needed are built using ${boot.java.home}.\n   (This implies a constraint on the source code that they can be compiled\n   with the previous version of JDK.\n - Second, all required classes are compiled with the latest javac, created\n   in the previous step.\n The first phase is called the bootstrap phase. All targets, properties and\n tasks that are specific to that phase have \"bootstrap\" in their name.\n\n For more details on the JDK build, see\n    http://blogs.sun.com/kto/entry/anatomy_of_the_jdk_build\n    http://openjdk.java.net/groups/build/\n For more details on the stub generator, see\n    http://blogs.sun.com/jjg/entry/building_javac_for_jdk7\n\n Internal details ...\n\n Interim build products are created in the build/ directory.\n Final build products are created in the dist/ directory.\n When building JDK, the dist/directory will contain:\n - A bootstrap compiler suitable for running with ${boot.java.home}\n   suitable for compiling downstream parts of JDK\n - Source files and class files for inclusion in the JDK being built\n When building standalone, the dist/directory will contain:\n - Separate jar files for each of the separate langtools components\n - Simple scripts to invoke the tools by executing the corresponding\n   jar files.\n These jar files and scripts are \"for developer use only\".\n\n This file is organized into sections as follows:\n - global property definitions\n - general top level targets\n - general diagnostic/debugging targets\n - groups of targets for each tool: javac, javadoc, doclets, javah, javap, apt\n    Within each group, the following targets are provided, where applicable\n      build-bootstrap-TOOL      build the bootstrap version of the tool\n      build-classes-TOOL        build the classes for the tool\n      build-TOOL                build the jar file and script for the tool\n      jtreg-TOOL                build the tool and run the appropriate tests\n      findbugs-TOOL             run findbugs on the tool's source oode\n      TOOL                      build the tool, run the tests, and run findbugs\n - utility definitions\n ",
        "Line" : 95,
        "CharPositionInLine" : 5
      },
      "2" : {
        "Text" : "\n    **** Global property definitions.\n    ",
        "Line" : 100,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : " Force full debuginfo for javac if the debug.classfiles\n    property is set.  This must be BEFORE the include of\n    build.properties because it sets javac.debuglevel.  ",
        "Line" : 104,
        "CharPositionInLine" : 60
      },
      "4" : {
        "Text" : " The following locations can be used to override default property values. ",
        "Line" : 109,
        "CharPositionInLine" : 86
      },
      "5" : {
        "Text" : " Use this location for customizations specific to this instance of this workspace ",
        "Line" : 111,
        "CharPositionInLine" : 94
      },
      "6" : {
        "Text" : " Use this location for customizations common to all OpenJDK langtools workspaces ",
        "Line" : 114,
        "CharPositionInLine" : 93
      },
      "7" : {
        "Text" : " Use this location for customizations common to all OpenJDK workspaces ",
        "Line" : 117,
        "CharPositionInLine" : 83
      },
      "8" : {
        "Text" : " Convenient shorthands for standard locations within the workspace. ",
        "Line" : 120,
        "CharPositionInLine" : 80
      },
      "9" : {
        "Text" : " java.marker is set to a marker file to check for within a Java install dir.\n         The best file to check for across Solaris/Linux/Windows/MacOS is one of the\n         executables; regrettably, that is OS-specific. ",
        "Line" : 144,
        "CharPositionInLine" : 60
      },
      "10" : {
        "Text" : " Standard property values, if not overriden by earlier settings. ",
        "Line" : 152,
        "CharPositionInLine" : 77
      },
      "11" : {
        "Text" : " launcher.java is used in the launcher scripts provided to run\n        the tools' jar files.  If it has not already been set, then\n        default it to use ${target.java.home}, if available, otherwise\n        quietly default to simply use \"java\". ",
        "Line" : 158,
        "CharPositionInLine" : 50
      },
      "12" : {
        "Text" : " Logic for handling access import jdk classes, if available.\n        import.jdk should be unset, or set to jdk home (to use rt.jar)\n        or to jdk repo (to use src/share/classes).\n        Based on the value, if any, set up default values for javac's sourcepath,\n        classpath and bootclasspath. Note: the default values are overridden\n        in the build-bootstrap-classes macro. ",
        "Line" : 169,
        "CharPositionInLine" : 50
      },
      "13" : {
        "Text" : " Set the default bootclasspath option used for javac.\n        Note that different variants of the option are used, meaning we can't just\n        define the value for the option.\n        Note the explicit use of the standard property ${path.separator} in the following.\n        This is because Ant is not clever enough to handle direct use of : or ; ",
        "Line" : 181,
        "CharPositionInLine" : 84
      },
      "14" : {
        "Text" : " Set the default value of the sourcepath used for javac. ",
        "Line" : 214,
        "CharPositionInLine" : 69
      },
      "15" : {
        "Text" : " Set the default value of the classpath used for javac. ",
        "Line" : 219,
        "CharPositionInLine" : 68
      },
      "16" : {
        "Text" : "\n    **** General top level targets.\n    ",
        "Line" : 225,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : " Standard target to build deliverables for JDK build. ",
        "Line" : 227,
        "CharPositionInLine" : 66
      },
      "18" : {
        "Text" : " clean ",
        "Line" : 253,
        "CharPositionInLine" : 19
      },
      "19" : {
        "Text" : " Additional targets for running tools on the build ",
        "Line" : 260,
        "CharPositionInLine" : 63
      },
      "20" : {
        "Text" : " only define the following property when we want coverage info ",
        "Line" : 297,
        "CharPositionInLine" : 79
      },
      "21" : {
        "Text" : " can override the following on the command line if desired. ",
        "Line" : 327,
        "CharPositionInLine" : 76
      },
      "22" : {
        "Text" : " a patching facility to speed up incorporating the langtools' classfiles\n         into a jdk of your choice. Either target.java.home or patch.jdk can be\n         set on the command line; setting target.java.home has the advantage of\n         patching the jdk used for jtreg and other tests.\n    ",
        "Line" : 359,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "\n    **** Debugging/diagnostic targets.\n    ",
        "Line" : 397,
        "CharPositionInLine" : 8
      },
      "24" : {
        "Text" : " standard JDK target ",
        "Line" : 399,
        "CharPositionInLine" : 33
      },
      "25" : {
        "Text" : " use vizant tool to generate graphical image of this Ant file.",
        "Line" : 421,
        "CharPositionInLine" : 74
      },
      "26" : {
        "Text" : "\n    **** javac targets.\n    ",
        "Line" : 448,
        "CharPositionInLine" : 8
      },
      "27" : {
        "Text" : "\n    **** javadoc targets.\n    ",
        "Line" : 483,
        "CharPositionInLine" : 8
      },
      "28" : {
        "Text" : "\n    **** doclets targets.\n    ",
        "Line" : 519,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : " just jar, no bin for doclets ",
        "Line" : 533,
        "CharPositionInLine" : 46
      },
      "30" : {
        "Text" : " (no javadoc for doclets) ",
        "Line" : 537,
        "CharPositionInLine" : 38
      },
      "31" : {
        "Text" : "\n    **** javah targets.\n    ",
        "Line" : 552,
        "CharPositionInLine" : 8
      },
      "32" : {
        "Text" : " (no javadoc for javah) ",
        "Line" : 570,
        "CharPositionInLine" : 36
      },
      "33" : {
        "Text" : "\n    **** javap targets.\n    ",
        "Line" : 585,
        "CharPositionInLine" : 8
      },
      "34" : {
        "Text" : " (no javadoc for javap) ",
        "Line" : 606,
        "CharPositionInLine" : 36
      },
      "35" : {
        "Text" : "\n    **** apt targets.\n    ",
        "Line" : 621,
        "CharPositionInLine" : 8
      },
      "36" : {
        "Text" : "\n    **** Create import JDK stubs.\n    ",
        "Line" : 657,
        "CharPositionInLine" : 8
      },
      "37" : {
        "Text" : "\n    **** Check targets.\n    **** \"-check-*\" targets check that a required property is set, and set to a reasonable value.\n    **** A user friendly message is generated if not, and the build exits.\n    ",
        "Line" : 673,
        "CharPositionInLine" : 8
      },
      "38" : {
        "Text" : "\n    **** Targets for Ant macro and task definitions.\n    ",
        "Line" : 703,
        "CharPositionInLine" : 8
      },
      "39" : {
        "Text" : " FIXME ",
        "Line" : 888,
        "CharPositionInLine" : 68
      },
      "40" : {
        "Text" : " default, can be overridden per user or per project ",
        "Line" : 890,
        "CharPositionInLine" : 120
      },
      "41" : {
        "Text" : " Note: even with this default value, includes\n                from src.classes.dir get javadoc'd; see packageset below ",
        "Line" : 892,
        "CharPositionInLine" : 77
      },
      "42" : {
        "Text" : " default, can be overridden per user or per project ",
        "Line" : 893,
        "CharPositionInLine" : 129
      },
      "43" : {
        "Text" : " XXX just <fileset> (restricted further to **/*.java) and no <packageset> ",
        "Line" : 913,
        "CharPositionInLine" : 102
      },
      "44" : {
        "Text" : " means that {@link some.package} will not work, which is no good. ",
        "Line" : 914,
        "CharPositionInLine" : 94
      },
      "45" : {
        "Text" : " (It correctly skips excluded single classes, but not if packageset is also included, ",
        "Line" : 915,
        "CharPositionInLine" : 114
      },
      "46" : {
        "Text" : " which also causes duplicates in the class index for included files.) ",
        "Line" : 916,
        "CharPositionInLine" : 98
      },
      "47" : {
        "Text" : " default ",
        "Line" : 948,
        "CharPositionInLine" : 91
      },
      "48" : {
        "Text" : " default ",
        "Line" : 949,
        "CharPositionInLine" : 91
      },
      "49" : {
        "Text" : " default ",
        "Line" : 950,
        "CharPositionInLine" : 91
      },
      "50" : {
        "Text" : " default ",
        "Line" : 951,
        "CharPositionInLine" : 91
      },
      "51" : {
        "Text" : " the next two properties are for convenience, when only\n                     a single instance of jtreg will be invoked. ",
        "Line" : 966,
        "CharPositionInLine" : 69
      },
      "CommentCount" : 52
    },
    "langtools/make/netbeans/langtools/build.xml" : {
      "ObjectId" : "d7e8f37bf41eba326ff00ef518a1dffdc3baf8fe",
      "LastModified" : "2012-04-25T12:40:12Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n Copyright (c) 2007, 2010, Oracle and/or its affiliates. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions\n are met:\n\n   - Redistributions of source code must retain the above copyright\n     notice, this list of conditions and the following disclaimer.\n\n   - Redistributions in binary form must reproduce the above copyright\n     notice, this list of conditions and the following disclaimer in the\n     documentation and/or other materials provided with the distribution.\n\n   - Neither the name of Oracle nor the names of its\n     contributors may be used to endorse or promote products derived\n     from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "\n        Instead of importing the main build file, we could call it when needed.\n        That would reduce the list of Ant targets that get displayed for this\n        file, but it also complicates the interface between the project build\n        file and the main build file. For example, some imported targets\n        would have to be reclared, properties would have to be restructured,\n        and it would be harder to run results (e.g. in properties) from nested\n        targets.\n     ",
        "Line" : 46,
        "CharPositionInLine" : 9
      },
      "2" : {
        "Text" : " Build project. (action: build; F11)\n        If langtools.tool.name is set, then just build that tool; otherwise\n        build all tools.\n    ",
        "Line" : 52,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : " Compile a single file. (action: compile.single; F9) ",
        "Line" : 70,
        "CharPositionInLine" : 65
      },
      "4" : {
        "Text" : " Run tool. (action: run; F6)\n        Use langtools.tool.name and langtools.tool.args properties if set; otherwise prompt\n        the user.\n    ",
        "Line" : 88,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : " Run a selected class. (action: run.single;  shift-F6) ",
        "Line" : 96,
        "CharPositionInLine" : 67
      },
      "6" : {
        "Text" : " Test project, and display results if tests failed. (action: test; Alt-F6)\n        If langtools.tool.name is set, then just test that tool; otherwise\n        test all tools.\n    ",
        "Line" : 107,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : " Debug tool in NetBeans. ",
        "Line" : 136,
        "CharPositionInLine" : 37
      },
      "8" : {
        "Text" : " Debug a selected class . ",
        "Line" : 144,
        "CharPositionInLine" : 38
      },
      "9" : {
        "Text" : " Debug a jtreg test. ",
        "Line" : 151,
        "CharPositionInLine" : 33
      },
      "10" : {
        "Text" : " Update a class being debugged. ",
        "Line" : 158,
        "CharPositionInLine" : 44
      },
      "11" : {
        "Text" : " Generate javadoc for one or all tools. (action: javadoc; Alt-F6)\n        If langtools.tool.name is set, then just test that tool; otherwise\n        test all tools.\n    ",
        "Line" : 176,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : " what if doing javadoc for all? ",
        "Line" : 201,
        "CharPositionInLine" : 48
      },
      "13" : {
        "Text" : " Prompt for values. ",
        "Line" : 205,
        "CharPositionInLine" : 32
      },
      "14" : {
        "Text" : " Macro to run a tool or selected class - used by run* and debug* tasks ",
        "Line" : 224,
        "CharPositionInLine" : 83
      },
      "15" : {
        "Text" : " Macro to start the debugger and set a property containg the args needed by the run task ",
        "Line" : 240,
        "CharPositionInLine" : 101
      },
      "CommentCount" : 16
    },
    "langtools/test/Makefile" : {
      "ObjectId" : "7f6435f037c6b9ca20ec33a0571acbe92a2cce51",
      "LastModified" : "2012-04-25T12:40:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Makefile to run jtreg and other tests\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Product builds and langtools builds\n\n#\n\n# A full product build (or \"control\" build) creates a complete JDK image.\n\n# To test a product build, set TESTJAVA to the path for the image.\n\n#\n\n# A langtools build just builds the langtools components of a JDK. \n\n# To test a langtools build, set TESTJAVA to the path for a recent JDK\n\n# build, and set TESTBOOTCLASSPATH to the compiled langtools classes --\n\n# for example build/classes or dist/lib/classes.jar.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# JPRT\n\n# JPRT may invoke this Makefile directly, as part of a langtools build,\n\n# or indirectly, via FOREST/test/Makefile, as part of a control build.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Get OS/ARCH specifics\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Root of this test area (important to use full paths in some places)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Default bundle of all test results (passed or not) (JPRT only)\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Default JTREG to run\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Default JCK to run\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Default JDK for JTREG and JCK\n\n#\n\n# JT_JAVA is the version of java used to run jtreg/JCK. Since it is now\n\n# standard to execute tests in sameVM mode, it should normally be set the\n\n# same as TESTJAVA (although not necessarily so.)\n\n#\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Default JDK to test\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# PRODUCT_HOME is a JPRT variable pointing to a directory containing the output from \n\n# make/Makefile\n\n# For langtools, this is a directory containing build and dist\n\n# For a control build, this is build/$(PRODUCT)-$(ARCH)/XYZ-image \n\n#\t(i.e, j2sdk-image or jdk-module-image)\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "### In the following, -refvmoptions is an undocumented option\n\n### The following does not work JCK 7 b30 2/6/2010. Awaiting b31. \n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Concurrency is the number of tests that can execute at once. \n\n# Supported for JCK, not supported for jtreg.\n\n# On an otherwise empty machine, suggest setting to (#cpus + 2)\n\n# If unset, the default is (#cpus)\n\n### RFE: determine and use #cpus\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# JCK is executed using \"Multi-JVM Group Mode\", which is a hybrid\n\n# of otherVM and sameVM modes. New JVMs are created and reused for\n\n# a number of tests, then eventually discarded and a new one started.\n\n# This amortizes the JVM startup time.  The \"group size\" defines\n\n# how many tests are run in a JVM before it is replaced.\n\n# If unset, the default is 100.\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "### The following is not supported. Awaiting RFE 6924287\n\n### 6924287: Jck4Jdk: Allow to configure test group size for group mode via simple command line option\n\n###  JCK_RUNTIME_OPTIONS += \\\n###    -jtoptions:-Ejck.env.runtime.testCompile.groupMode.groupSize=$(JCK_GROUP_SIZE)\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Timeouts -- by default, increase test timeouts when running on JPRT\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Assertions: some tests show failures when assertions are enabled.\n\n# Since javac is typically loaded via the bootclassloader (either via TESTJAVA\n\n# or TESTBOOTCLASSPATH), you may need -esa to enable assertions in javac.\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Include shared options\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Exit codes:\n\n# jtreg, jck:   0: OK, 1: tests failed, 2: tests error; 3+: SERIOUS\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# jtdiff: 0: OK, 1: differences found; 2+: SERIOUS\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#\n\n# Exit -- used for final \"normal\" exit from \"make\". Redefine to \"true\" to avoid\n\n# having make exit with non-zero return code.\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Function to exit shell if exit code of preceding command is greater than or equal \n\n# to a given level. Redefine function or preceding FATAL_*_EXIT codes as needed.\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# The test directories to run\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Root of all test results\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Subdirectories for different test runs\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Default make rule -- warning, may take a while\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# for use with JPRT -testrule\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Run jtreg tests\n\n#\n\n# JTREG_HOME\n\n#\tInstalled location of jtreg\n\n# JT_JAVA\n\n#\tVersion of java used to run jtreg.  Should normally be the same as TESTJAVA\n\n# TESTJAVA\n\n# \tVersion of java to be tested.  \n\n# JTREG_OPTIONS\n\n#\tAdditional options for jtreg\n\n# JTREG_TESTDIRS\n\n#\tDirectories of tests to be run\n\n# JTREG_OUTPUT_DIR\n\n#\tWhere to write the results\n\n# JTREG_REFERENCE\n\n#\t(Optional) reference results (e.g. work, report or summary.txt)\n\n#\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Check to make sure these directories exist\n",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Run JCK-compiler tests\n\n#\n\n# JCK_HOME\n\n#\tInstalled location of JCK: should include JCK-compiler, and JCK-extras\n\n# JT_JAVA\n\n#\tVersion of java used to run JCK.  Should normally be the same as TESTJAVA\n\n# TESTJAVA\n\n# \tVersion of java to be tested.  \n\n# JCK_COMPILER_OPTIONS\n\n#\tAdditional options for JCK-compiler\n\n# JCK_COMPILER_TESTDIRS\n\n#\tDirectories of tests to be run\n\n# JCK_COMPILER_OUTPUT_DIR\n\n#\tWhere to write the results\n\n# JCK_COMPILER_REFERENCE\n\n#\t(Optional) reference results (e.g. work, report or summary.txt)\n\n#\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Run JCK-runtime tests in -Xcompile mode\n\n# This is a special mode to test javac by compiling the tests in the JCK-runtime test suite\n\n# Normal JCK-runtime invocation belongs in the jdk/ repository.\n\n#\n\n# JCK_HOME\n\n#\tInstalled location of JCK: should include JCK-compiler, JCK-runtime and JCK-extras\n\n# JT_JAVA\n\n#\tVersion of java used to run JCK.  Should normally be the same as TESTJAVA\n\n# TESTJAVA\n\n# \tVersion of java to be tested.  \n\n# JCK_RUNTIME_OPTIONS\n\n#\tAdditional options for JCK-runtime\n\n# JCK_RUNTIME_TESTDIRS\n\n#\tDirectories of tests to be run\n\n# JCK_RUNTIME_OUTPUT_DIR\n\n#\tWhere to write the results\n\n# JCK_RUNTIME_REFERENCE\n\n#\t(Optional) reference results (e.g. work, report or summary.txt)\n\n#\n",
        "Line" : 325,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Check to make sure these directories exist\n",
        "Line" : 375,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Bundle up the results\n",
        "Line" : 387,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Cleanup\n",
        "Line" : 393,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Used to force a target rules to run\n",
        "Line" : 397,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Phony targets (e.g. these are not filenames)\n",
        "Line" : 400,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# No use of suffix rules\n",
        "Line" : 406,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 37
    },
    "test/java8/build.xml" : {
      "ObjectId" : "b63ee3db2a9e39be7df863c1922f125ff3b547b2",
      "LastModified" : "2014-04-29T12:38:41Z",
      "FileType" : "ANT",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 2,
    "ANT" : 4
  },
  "ElapsedTime" : 5895
}