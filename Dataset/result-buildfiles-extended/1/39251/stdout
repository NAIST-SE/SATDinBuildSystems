{
  "Repository" : "39251",
  "Revision" : "HEAD",
  "ObjectId" : "cc23de7cb1f0cf79a430e6bc1d44685e6cbbb92c",
  "CommitTime" : "2014-05-08T13:45:54Z",
  "Files" : {
    "docs/src/Makefile" : {
      "ObjectId" : "277ae6391b324aff243dc39d166580355f9f0196",
      "LastModified" : "2011-07-11T04:11:40Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#include $(patsubst %,%.dep,$(LARGE))\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#$(patsubst %,%.html,$(DOCS_DE)) :: %.html: %.txt\n\n#\tasciidoc -a stylesheet=$(shell pwd)/linuxcnc.css -f xhtml11.conf -d book -a toc -a numbered -b xhtml11 $< || (X=$$?; rm $@; exit $$X)\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#$(patsubst %,%.html,$(DOCS_ES)) :: %.html: %.txt\n\n#\tasciidoc -a stylesheet=$(shell pwd)/linuxcnc.css -f xhtml11.conf -d book -a toc -a numbered -b xhtml11 $< || (X=$$?; rm $@; exit $$X)\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#$(patsubst %,%.html,$(DOCS_FR)) :: %.html: %.txt\n\n#\tasciidoc -a stylesheet=$(shell pwd)/linuxcnc.css -f xhtml11.conf -d book -a toc -a numbered -b xhtml11 $< || (X=$$?; rm $@; exit $$X)\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#$(patsubst %,%.html,$(LARGE_DE)) :: %.html: %.txt\n\n#\t$(A2X) --stylesheet=../linuxcnc.css -L -d book -vf xhtml $< || (X=$$?; rm $@; exit $$X)\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#$(patsubst %,%.html,$(LARGE_ES)) :: %.html: %.txt\n\n#\t$(A2X) --stylesheet=../linuxcnc.css -L -d book -vf xhtml $< || (X=$$?; rm $@; exit $$X)\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#$(patsubst %,%.html,$(LARGE_FR)) :: %.html: %.txt\n\n#\t$(A2X) --stylesheet=../linuxcnc.css -L -d book -vf xhtml $< || (X=$$?; rm $@; exit $$X)\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "docs/src/remap/Makefile" : {
      "ObjectId" : "7318c744dbfdf11222281c39ddc4f709c9b89e6b",
      "LastModified" : "2011-12-14T07:53:48Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# rebuild svg and eps files from mscgen inputs\n\n# see http://www.mcternan.me.uk/mscgen/\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# include in docs like so:\n\n#image::images/iocontrol-prepare.{basebackend-docbook!svg}{basebackend-docbook?eps}[]\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "docs/src/source-highlight/Makefile" : {
      "ObjectId" : "cffa6b6dfdd087a25635f0e84b9bfe4b781b9dd4",
      "LastModified" : "2011-12-14T07:53:48Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# the source-highlight language defs and lang.map dir\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# languages for which we provide our own .lang files\n\n# this includes overriding languages listed in HL_DIR\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# grep arg to suppress user defined langs already in lang.map\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# examples\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# tests with HTML output without going through asciidoc\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n",
        "Line" : 29,
        "CharPositionInLine" : 54
      },
      "CommentCount" : 6
    },
    "src/Makefile" : {
      "ObjectId" : "39238a0d2b40c25b2ae51dd8ae486accad232fd2",
      "LastModified" : "2014-05-08T13:45:54Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Delete the default suffix rules\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# A \"trivial build\" is one which should not include dependency information\n\n# either because it should be usable before dependency information can be\n\n# generated or when it is invalid (clean, docclean) or when running as root\n\n# when the user must guarantee in advance that everything is built\n\n# (setuid, install)\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Beautify output\n\n# ---------------------------------------------------------------------------\n\n#\n\n# A simple variant is to prefix commands with $(Q) - that's useful\n\n# for commands that shall be hidden in non-verbose mode.\n\n#\n\n#\t$(Q)ln $@ :<\n\n#\n\n# If BUILD_VERBOSE equals 0 then the above command will be hidden.\n\n# If BUILD_VERBOSE equals 1 then the above command is displayed.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# When KERNELRELEASE is not defined, this is the userspace build.\n\n# The \"modules\" target is the gateway to the kernel module build.\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# list of supported hostmot2 boards\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Print 'entering' all the time\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Create the variables with := so that subsequent += alterations keep it\n\n# as a \"substitute at assignment time\" variable\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Submakefiles from each of these directories will be included if they exist\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# \\\n    # ../docs/src\n",
        "Line" : 116,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Each item in INCLUDES is transformed into a -I directive later on\n\n# The top directory is always included\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# When used like $(call TOxxx, ...) these turn a list of source files\n\n# into the corresponding list of object files, dependency files,\n\n# or both.  When a source file has to be compiled with special flags,\n\n# TOOBJSDEPS is used.  See Submakefile.skel for an example.\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# This checks that all the things listed in USERSRCS are either C files\n\n# or C++ files\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Find the list of object files for each type of source file\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Find the dependency filenames, then include them all\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Each directory in $(INCLUDES) is passed as a -I directory when compiling.\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Compilation options.  Perhaps some of these should come from Makefile.inc?\n\n# original: OPT := -Os $(call cc-option,-fno-strict-aliasing) $(call cc-option,-fno-stack-protector)\n\n# for debug: \n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# for release: \n\n# OPT := -Os\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# for debug: \n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# for release: \n\n# DEBUG := -Wall\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# UNAME_M = $(shell sh -c 'uname -m 2>/dev/null || echo not')\n\n# ifeq ($(UNAME_M),armv7l)\n\n# # need -fPIC for arm with -O0\n\n# CFLAGS += -fPIC\n\n# CXXFLAGS += -fPIC\n\n# OPT += -fPIC\n\n# endif\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Rules to make .d (dependency) files.\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Rules to make .o (object) files\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Rules to make .i (preprocessed) files\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# For each file to be copied to ../include, its location in the source tree\n\n# is listed here.  Note that due to $(INCLUDE), defined above, the include\n\n# files in the source tree are the ones used when building linuxcnc.  The copy\n\n# in ../include is used when building external components of linuxcnc.\n",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Make each include file a target\n",
        "Line" : 377,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Add converting of %.po files\n",
        "Line" : 380,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# ngcgui as standalone app:\n",
        "Line" : 384,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# And make userspace depend on $(TARGETS)\n",
        "Line" : 390,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# clean: docclean pythonclean\n",
        "Line" : 399,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# This is the gateway into the crazy world of \"kbuild\", the linux 2.6 system\n\n# for building kernel modules.\tOther kernel module build styles need to be\n\n# accomodated here.\n",
        "Line" : 408,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# These rules clean things up.\t'modclean' cleans files generated by 'modules'\n\n# (except that it doesn't remove the modules that were copied to rtlib)\n\n# 'clean' cleans everything but dependency files, and 'depclean' cleans them\n\n# too.\n",
        "Line" : 418,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# So that nothing is built as root, this rule does not depend on the touched\n\n# files (Note that files in depends/ might be rebuilt, and there's little that\n\n# can be done about it)\n",
        "Line" : 440,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# These rules allows a header file from this directory to be installed into\n\n# ../include.  A pair of rules like these will exist in the Submakefile\n\n# of each file that contains headers.\n",
        "Line" : 456,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# install all the sample configs, including subdirs (tar is required on debian systems, and common on others)\n",
        "Line" : 548,
        "CharPositionInLine" : 1
      },
      "34" : {
        "Text" : "# RUN_IN_PLACE\n",
        "Line" : 627,
        "CharPositionInLine" : 6
      },
      "35" : {
        "Text" : "# userspace\n",
        "Line" : 657,
        "CharPositionInLine" : 6
      },
      "36" : {
        "Text" : "# KERNELRELEASE is nonempty, therefore we are building modules using the\n\n# \"kbuild\" system.  $(BASEPWD) is used here, instead of relative paths, because\n\n# that's what kbuild seems to require\n",
        "Line" : 663,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#not for sim: $(call cc-option,-Wframe-larger-than=2560)\n",
        "Line" : 674,
        "CharPositionInLine" : 1
      },
      "38" : {
        "Text" : "# for libwou\n",
        "Line" : 684,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# for kernel module build:\n",
        "Line" : 690,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# For each module, there's an addition to obj-m or obj-$(CONFIG_foo)\n\n# plus a definition of foo-objs, which contains the full path to the\n\n# object file(s) that the module contains.  Unfortunately, this setup pollutes\n\n# the source directory with object files and other temporaries, but I can't\n\n# find a way around it.\n",
        "Line" : 704,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Subdirectory:  rtapi\n",
        "Line" : 710,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Subdirectory: rtapi/examples (unneeded?)\n",
        "Line" : 716,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Subdirectory: hal/components\n",
        "Line" : 718,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# WOU: wishbone over usb\n\n# wou.o is composed of (multiple) wou-objs\n",
        "Line" : 731,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# obj-$(CONFIG_WOU_SIM) += wou_sim.o\n\n# wou_sim-objs := hal/drivers/ar-usb/wou_sim.o $(MATHSTUB)\n",
        "Line" : 735,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Subdirectory: hal/drivers\n",
        "Line" : 764,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# motmod-objs += emc/motion/homing.o\n",
        "Line" : 927,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# for libwou\n",
        "Line" : 935,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# homing procedure that compensats the properties of USB device\n",
        "Line" : 937,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Rules to make .o (object) files\n",
        "Line" : 964,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Rules to make .o (object) files\n",
        "Line" : 982,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# ../rtlib/wou_sim$(MODULE_EXT): $(addprefix objects/rt,$(wou_sim-objs))\n",
        "Line" : 1005,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# Phony so that it is always rebuilt when requested, not because it\n\n# shouldn't exist as a file\n",
        "Line" : 1061,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# When you depend on objects/var-ZZZ you are depending on the contents of the\n\n# variable ZZZ, which is assumed to depend on a Makefile, a Submakefile, or\n\n# Makefile.inc\n",
        "Line" : 1101,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# vim:ts=8:sts=8:sw=8:noet:\n",
        "Line" : 1112,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 56
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 4
  },
  "ElapsedTime" : 5392
}