{
  "Repository" : "2391501",
  "Revision" : "HEAD",
  "ObjectId" : "849184f8cedcd5b21490402730556b1446f21638",
  "CommitTime" : "2019-04-04T08:39:39Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "e949dbea8a1a7946ec2b4e5240c8c395a4b767a8",
      "LastModified" : "2018-11-26T11:15:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set librepo log domain\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add path with own cmake modules\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find necessare libraries\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Enable large file support\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Check libraries\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add include dirs\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#INCLUDE_DIRECTORIES(${CHECK_INCLUDE_DIR})\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Python stuff\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Subdirs\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "VERSION.cmake" : {
      "ObjectId" : "2c7acc19eab1f94e1db320bc3b9cec06e7a88672",
      "LastModified" : "2019-03-27T11:26:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Modules/FindGpgme.cmake" : {
      "ObjectId" : "a563c5689f9ebd060e94543aa276af70e750d475",
      "LastModified" : "2015-09-06T16:26:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Code is taken from KDE project:\n\n# http://code.metager.de/source/xref/kde/kdepimlibs/cmake/modules/FindGpgme.cmake\n\n#\n\n# - Try to find the gpgme library\n\n#\n\n# Algorithm:\n\n#  - Windows:\n\n#    On Windows, there's three gpgme variants: gpgme{,-glib,-qt}.\n\n#    - The variant used determines the event loop integration possible:\n\n#      - gpgme:      no event loop integration possible, only synchronous operations supported\n\n#      - gpgme-glib: glib event loop integration possible, only asynchronous operations supported\n\n#      - gpgme-qt:   qt event loop integration possible, only asynchronous operations supported\n\n#    - GPGME_{VANILLA,GLIB,QT}_{FOUND,LIBRARIES} will be set for each of the above\n\n#    - GPGME_INCLUDES is the same for all of the above\n\n#    - GPGME_FOUND is set if any of the above was found\n\n#  - *nix:\n\n#    There's also three variants: gpgme{,-pthread,-pth}.\n\n#    - The variant used determines the multithreaded use possible:\n\n#      - gpgme:         no multithreading support available\n\n#      - gpgme-pthread: multithreading available using POSIX threads\n\n#      - gpgme-pth:     multithreading available using GNU PTH (cooperative multithreading)\n\n#    - GPGME_{VANILLA,PTH,PTHREAD}_{FOUND,LIBRARIES} will be set for each of the above\n\n#    - GPGME_INCLUDES is the same for all of the above\n\n#    - GPGME_FOUND is set if any of the above was found\n\n#\n\n#  GPGME_LIBRARY_DIR - the directory where the libraries are located\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# THIS IS ALMOST A 1:1 COPY OF FindAssuan.cmake in kdepim.\n\n# Any changes here likely apply there, too.\n\n#\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# do away with crappy condition repetition on else/endfoo\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#if this is built-in, please replace, if it isn't, export into a MacroToBool.cmake of it's own\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#include (MacroEnsureVersion)\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# On Windows, we don't have a gpgme-config script, so we need to\n\n# look for the stuff ourselves:\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# in cmake, AND and OR have the same precedence, there's no\n\n# subexpressions, and expressions are evaluated short-circuit'ed\n\n# IOW: CMake if() suxx.\n\n# Starting with CMake 2.6.3 you can group if expressions with (), but we \n\n# don't require 2.6.3 but 2.6.2, we can't use it. Alex\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# this would have been preferred:\n\n#set( GPGME_*_FOUND macro_bool_to_bool(GPGME_*_LIBRARIES) )\n",
        "Line" : 74,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# is this needed, of just unreflected cut'n'paste?\n\n# this isn't a KDE library, after all!\n",
        "Line" : 85,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# these are Unix-only:\n",
        "Line" : 159,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# not WIN32\n",
        "Line" : 170,
        "CharPositionInLine" : 7
      },
      "11" : {
        "Text" : "# On *nix, we have the gpgme-config script which can tell us all we\n\n# need to know:\n",
        "Line" : 172,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# see WIN32 case for an explanation of what this does:\n",
        "Line" : 175,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# if gpgme-config has been found\n",
        "Line" : 204,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "#      set( _GPGME_MIN_VERSION \"1.1.7\" )\n\n#      macro_ensure_version( ${_GPGME_MIN_VERSION} ${GPGME_VERSION} _GPGME_INSTALLED_VERSION_OK )\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#      if ( NOT _GPGME_INSTALLED_VERSION_OK )\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#        message( STATUS \"The installed version of gpgme is too old: ${GPGME_VERSION} (required: >= ${_GPGME_MIN_VERSION})\" )\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#      else()\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# append -lgpg-error to the list of libraries, if necessary\n",
        "Line" : 237,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# if -L options were given, look only there\n",
        "Line" : 278,
        "CharPositionInLine" : 16
      },
      "20" : {
        "Text" : "# if not found there, look in system directories\n",
        "Line" : 283,
        "CharPositionInLine" : 16
      },
      "21" : {
        "Text" : "# if still not found, then the whole flavour isn't found\n",
        "Line" : 288,
        "CharPositionInLine" : 16
      },
      "22" : {
        "Text" : "#check_c_library_exists_explicit( gpgme         gpgme_check_version \"${_GPGME_CFLAGS}\" \"${GPGME_LIBRARIES}\"         GPGME_FOUND         )\n",
        "Line" : 299,
        "CharPositionInLine" : 14
      },
      "23" : {
        "Text" : "# ensure that they are cached\n\n# This comment above doesn't make sense, the four following lines seem to do nothing. Alex\n",
        "Line" : 310,
        "CharPositionInLine" : 10
      },
      "24" : {
        "Text" : "#        endif()\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# these are Windows-only:\n",
        "Line" : 331,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "#  macro_bool_to_01( GPGME_FOUND         HAVE_GPGME         )\n\n#  macro_bool_to_01( GPGME_VANILLA_FOUND HAVE_GPGME_VANILLA )\n\n#  macro_bool_to_01( GPGME_PTHREAD_FOUND HAVE_GPGME_PTHREAD )\n\n#  macro_bool_to_01( GPGME_PTH_FOUND     HAVE_GPGME_PTH     )\n",
        "Line" : 337,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# WIN32 | Unix\n",
        "Line" : 342,
        "CharPositionInLine" : 8
      },
      "28" : {
        "Text" : "# determine the library in one of the found flavours, can be reused e.g. by FindQgpgme.cmake, Alex\n",
        "Line" : 367,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#  macro_log_feature(\n\n#   GPGME_FOUND\n\n#  \"gpgme\"\n\n#  \"GNU Privacy Guard (GPG/PGP) support\"\n\n#  ${_gpgme_homepage}\n\n#  ${_req}\n\n#  \"${_GPGME_MIN_VERSION} or greater\"\n\n#  \"Necessary to compile many PIM applications, including KMail\"\n\n#)\n",
        "Line" : 390,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 30
    },
    "doc/CMakeLists.txt" : {
      "ObjectId" : "13f96a4d4d782a8d094086ab4555f3322865e698",
      "LastModified" : "2013-01-16T09:51:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/c/CMakeLists.txt" : {
      "ObjectId" : "d466f609e34ba9d45be1a2e8f6faf19ddecbc3d9",
      "LastModified" : "2013-01-16T09:51:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/python/CMakeLists.txt" : {
      "ObjectId" : "74bf55c8876ab2ea2ffbb8b838330d1ad76765dd",
      "LastModified" : "2018-08-01T14:24:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/c/Makefile" : {
      "ObjectId" : "cda0a1496c1e92d55cf40bcc683d52ffddefe5ad",
      "LastModified" : "2015-09-06T16:26:13Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# export LD_LIBRARY_PATH=\"../../build/librepo/\"\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "librepo/CMakeLists.txt" : {
      "ObjectId" : "73edf708278d6cb55e5988f08c934383fdedfdb9",
      "LastModified" : "2018-11-26T11:15:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#SET_TARGET_PROPERTIES(librepo PROPERTIES VERSION \"0\")\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "librepo/librepo.pc.cmake" : {
      "ObjectId" : "6ac4e3259199f67ffd88fa583dad4071b3cdb7fd",
      "LastModified" : "2018-08-01T14:24:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "librepo/python/CMakeLists.txt" : {
      "ObjectId" : "38e6c9ff982f0ece192982e024ee518b8999f632",
      "LastModified" : "2018-08-01T14:24:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "librepo/python/python2/CMakeLists.txt" : {
      "ObjectId" : "a0f1f9ad0ce107b71e78ef3f4d5840d86add0c6e",
      "LastModified" : "2018-08-01T14:24:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "librepo/python/python3/CMakeLists.txt" : {
      "ObjectId" : "52ba44e6b8fad6a3689c99d01774c650a6704a86",
      "LastModified" : "2018-08-01T14:24:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "584e56e79d6a9e5e1b9cd3e41e1913d167208fa5",
      "LastModified" : "2019-03-05T08:37:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ADD_LIBRARY(testsys STATIC testsys.c)\n\n#SET_TARGET_PROPERTIES(testsys PROPERTIES COMPILE_FLAGS -fPIC)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/python/CMakeLists.txt" : {
      "ObjectId" : "64ccc72249cd6e4602be007b3b794d81f1bcb539",
      "LastModified" : "2015-09-06T16:26:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/python/tests/CMakeLists.txt" : {
      "ObjectId" : "cab63c682c32be621bb3c580433c79a79cf58504",
      "LastModified" : "2015-09-06T16:26:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "utils/FindLibrepo.cmake" : {
      "ObjectId" : "9fd0fe6b19264680d4af5b5c513f069c1a50d9eb",
      "LastModified" : "2015-09-06T16:26:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Librepo\n\n# Once done this will define\n\n#  LIBREPO_FOUND - System has Librepo\n\n#  LIBREPO_INCLUDE_DIRS - The Librepo include directories\n\n#  LIBREPO_LIBRARIES - The libraries needed to use Librepo\n\n#  LIBREPO_DEFINITIONS - Compiler switches required for using Librepo\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LIBREPO_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "CMAKE" : 15,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 1436
}