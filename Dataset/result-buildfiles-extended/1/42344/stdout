{
  "Repository" : "42344",
  "Revision" : "HEAD",
  "ObjectId" : "6ec28cd6c0f37c67d451d815ca5ff643e00b0a0a",
  "CommitTime" : "2019-03-21T22:27:05Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "9b27928f551da9b12f491c5d8afcc169efd707ed",
      "LastModified" : "2019-02-17T09:36:59Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Karakara - Karaoke event system\n\n#\n\n# This Makefile is being reconsidered - try `docker-compose up`\n",
        "Line" : 11,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Docker ----------------------------------------------------------------------\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Import comunity user notes\n\n#docker-compose run -v ~/karakara_users.sql:/data/karakara_users.sql:ro postgres /bin/bash\n\n#  psql -h postgres -U karakara karakara -f /data/karakara_users.sql\n",
        "Line" : 27,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# Rsync -----------------------------------------------------------------------\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#--update --copy-links --checksum --bwlimit=100 --inplace --partial --timeout 30 --checksum\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Test ------------------------------------------------------------------------\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Cloc ------------------------------------------------------------------------\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Clean ------------------------------------------------------------------------\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "dashboard/Makefile" : {
      "ObjectId" : "ea2ee61af1b8b79d3ddabcab7eb9ba2edf2ee368",
      "LastModified" : "2019-03-08T10:45:20Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# TODO\n",
        "Line" : 4,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# TODO\n",
        "Line" : 7,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# TODO\n",
        "Line" : 10,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# setup alias or path to /opt/logstash/bin/logstash\n",
        "Line" : 20,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# Assuming elasticsearch is running\n",
        "Line" : 26,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# http://stackoverflow.com/questions/19546900/how-to-force-logstash-to-reparse-a-file\n\n# Logstash will keep the record in $HOME/.sincedb_* . You can delete all the .sincedb and restart logstash, Logstash will reparse the file. \n\n#start_position => 'beginning' sincedb_path=>'/dev/null'\n\n#logstash -f logstash.conf -e \"input {stdin { } }\"\n",
        "Line" : 28,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 6
    },
    "processmedia2/Makefile" : {
      "ObjectId" : "e5c21169a4c4f466def8c5f9920d72b02d758071",
      "LastModified" : "2019-03-21T22:27:05Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Usage: make <target>, where target is\n\n# install        -- just install python virtualenv\n\n# install_os     -- Install os dependencies and setup python virtualenv\n\n# run            -- Alias for 'install + scan + encode + import_media'\n\n#\n\n# scan           -- Scan source media folder + create metadata cache\n\n# encode         -- Perform video encoding on required items\n\n# import_media   -- Import processed media into currently active website\n\n# cleanup        -- Remove unassociated processed files\n\n#\n\n# upgrade        -- Upgrade os + python dependencys\n\n# test           -- Run integration tests\n\n# clean          -- Reset to clean checkout\n",
        "Line" : 3,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Variables --------------------------------------------------------------------\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Installation -----------------------------------------------------------------\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# OSX ----\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Linux ----\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# TODO: install upgraded apt versions\n",
        "Line" : 67,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# Python/Virtualenv ----\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Config -----------------------------------------------------------------------\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Run --------------------------------------------------------------------------\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# temp addition to document event import step\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Test -------------------------------------------------------------------------\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#$(MAKE) all --directory tests/source\n",
        "Line" : 112,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# Clean ------------------------------------------------------------------------\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#$(MAKE) clean --directory tests/source\n",
        "Line" : 124,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 14,
      "Errorlog" : "line 21:95 token recognition error at: '\\1'\n"
    },
    "processmedia2/tests/source/Makefile" : {
      "ObjectId" : "4cc41543301530cb325b84946673ce2d3daefc1a",
      "LastModified" : "2019-03-21T22:27:05Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# deprecated\n\n# Makefile is deprecated because the test suite should be able to generate this itself\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Generate test audio of 10 seconds silence\n\n# -b 16\n",
        "Line" : 10,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "website/Makefile" : {
      "ObjectId" : "0f1ccf6cf09b0432f66ef17d21108ab5faf30b02",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#DEPENDENCY_FETCHER=$(EXTERNAL_PATH)/dependency_fetcher.py\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#PATH_LOCAL_LIBS:=../../libs/python3\n\n#PATH_REMOTE_LIBS:=https://raw.githubusercontent.com/calaldees/libs/master/python3\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Help -------------------------------------------------------------------------\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Usage: make <target>, where target is\n\n# install        -- \n\n# test           -- run all nosetests\n\n# run            -- run the site in development mode\n\n# run_production -- run in production mode\n\n# clean          -- reset the folder to clean git checkout (removes virtual python env)\n\n# import_tracks_local_filesystem  -- crawl all mediaserver to import tracks data into local Db\n\n# import_tracks_local_mediaserver -- crawl http server for to import\n\n# insert_random_tracks            -- insert random named tracks for dev/testing\n\n#\n\n# Typical first use should be: setup, init_db, import_tracks_local_filesystem, run\n\n# Dpendencies - make python3-dev (pip3 install venv)\n",
        "Line" : 39,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# Installation -----------------------------------------------------------------\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#python3-dev curl\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#.PRECIOUS: $(ENV)\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#python$(PYTHON_VERSION) -m virtualenv $(ENV)\n",
        "Line" : 59,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# Link local calaldees library for debugging\n",
        "Line" : 64,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# Experiments\n\n#env/bin/node: env\n\n#\tenv/bin/pip install nodeenv\n\n#\tsource env/bin/activate && nodeenv --python-virtualenv --prebuilt\n\n#env/lib/node_modules/bower: env/bin/node\n\n#\tsource env/bin/activate && npm install -g bower\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# in docker this is `ro` mount. Attempted to surpress a conflict when starting container\n",
        "Line" : 76,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# Force reexecution of setup.py dependenys (this must be done from the Makefile or make gets confused and repetedy runs the task)\n\n#setup: KaraKara.egg-info\n\n#\t$(PYTHON) setup.py develop\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Trigger dependency check on every startup\n",
        "Line" : 91,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# Ini files --------------------------------------------------------------------\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Upload paths -----------------------------------------------------------------\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Run --------------------------------------------------------------------------\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Daemon -----------------------------------------------------------------------\n\n#.PHONY: start_webapp_daemon stop_webapp_daemon\n\n#\n\n#start_webapp_daemon: ini\n\n#\tstart-stop-daemon --start --pidfile webapp.pid --name $(PROJECT) --make-pidfile --background --exec /bin/bash -- -c \"$(CURDIR)/env/bin/pserve $(CURDIR)/production.ini\"\n\n#stop_webapp_daemon:\n\n#\tstart-stop-daemon --stop  --pidfile webapp.pid && rm webapp.pid\n\n#\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Test -------------------------------------------------------------------------\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#$(PYTEST) $(PROJECT) --ini_file=$(INI_TEST)\n\n# Temp modification to reporduce failing test\n",
        "Line" : 158,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "# --capture=sys\n",
        "Line" : 161,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "#env/bin/py.test $(PROJECT) --runslow -k crawl_production -s\n",
        "Line" : 168,
        "CharPositionInLine" : 1
      },
      "21" : {
        "Text" : "# I18N -------------------------------------------------------------------------\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Data -------------------------------------------------------------------------\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#$(PYTHON) -mkarakara.scripts.badge_name_importer --source $(BADGENAME_SOURCE) --cache_filename $@.cache > $@\n",
        "Line" : 198,
        "CharPositionInLine" : 1
      },
      "24" : {
        "Text" : "# Logs -------------------------------------------------------------------------\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Cleanup ----------------------------------------------------------------------\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#rm -f $(INI_DEV)\n",
        "Line" : 213,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 27
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 5
  },
  "ElapsedTime" : 948
}