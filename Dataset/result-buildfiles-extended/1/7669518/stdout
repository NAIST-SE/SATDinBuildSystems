{
  "Repository" : "7669518",
  "Revision" : "HEAD",
  "ObjectId" : "4ffdeb114b801b5e420595baeba5701625981fb5",
  "CommitTime" : "2019-02-13T06:41:04Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "98046c211aefdca13aee472d76f1e36ab1851d8d",
      "LastModified" : "2018-06-10T06:28:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wreturn-type -Wno-deprecated -std=c++11\")\n",
        "Line" : 16,
        "CharPositionInLine" : 20
      },
      "1" : {
        "Text" : "#set(CMAKE_SHARED_LINKER_FLAGS \"${CMAKE_SHARED_LINKER_FLAGS} \"-Wno-deprecated -std=c++11\"\")\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#http://stackoverflow.com/questions/34996295/trying-to-get-cuda-7-5-to-work-with-gcc-5-x\n",
        "Line" : 47,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#-G\n\n#-g\n\n#--keep\n\n#-lineinfo\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#-gencode arch=compute_30,code=sm_30 \n\n#-gencode arch=compute_35,code=sm_35 \n\n#-gencode arch=compute_50,code=sm_50 \n\n#-gencode arch=compute_52,code=sm_52 \n",
        "Line" : 61,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#   if (CMAKE_BUILD_TYPE STREQUAL Debug)\n\n#       set(CUDA_NVCC_FLAGS ${CUDA_NVCC_FLAGS};-G)\n\n#   endif()\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#export compiler flags for code completion engines\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#set(COVERAGE_FLAGS --coverage)\n",
        "Line" : 137,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "cmake/FindCairo.cmake" : {
      "ObjectId" : "8b058c09fc1b14c7a66fe29a27f2804dcf4b389f",
      "LastModified" : "2018-01-30T11:47:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the cairo library\n\n# taken from https://github.com/stevedekorte/io. BSD licence\n\n# Once done this will define\n\n#\n\n#  CAIRO_FOUND - system has cairo\n\n#  CAIRO_INCLUDE_DIRS - the cairo include directory\n\n#  CAIRO_LIBRARIES - Link these to use cairo\n\n#\n\n# Define CAIRO_MIN_VERSION for which version desired.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Report results\n",
        "Line" : 30,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Hide advanced variables from CMake GUIs\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/FindEigen3.cmake" : {
      "ObjectId" : "cd7422c5d15128fc8c7a98dc3e672df5c90ab60a",
      "LastModified" : "2018-01-30T11:47:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Eigen3 lib\n\n#\n\n# This module supports requiring a minimum version, e.g. you can do\n\n#   find_package(Eigen3 3.1.2)\n\n# to require version 3.1.2 or newer of Eigen3.\n\n#\n\n# Once done this will define\n\n#\n\n#  EIGEN3_FOUND - system has eigen lib with correct version\n\n#  EIGEN3_INCLUDE_DIR - the eigen include directory\n\n#  EIGEN3_VERSION - eigen version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Copyright (c) 2009 Benoit Jacob <jacob.benoit.1@gmail.com>\n\n# Redistribution and use is allowed according to the terms of the 2-clause BSD license.\n\n# \n\n# Taken from https://github.com/RainerKuemmerle/g2o on the 25th May 2016\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# specific additional paths for some OS\n",
        "Line" : 66,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "cmake/FindGROMACS.cmake" : {
      "ObjectId" : "67a8a65299bd8e109b46d6c0e73af4603755b6d6",
      "LastModified" : "2018-01-30T11:47:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# This file is part of the GROMACS molecular simulation package.\n\n#\n\n# Copyright (c) 2014, by the GROMACS development team, led by\n\n# Mark Abraham, David van der Spoel, Berk Hess, and Erik Lindahl,\n\n# and including many others, as listed in the AUTHORS file in the\n\n# top-level source directory and at http://www.gromacs.org.\n\n#\n\n# GROMACS is free software; you can redistribute it and/or\n\n# modify it under the terms of the GNU Lesser General Public License\n\n# as published by the Free Software Foundation; either version 2.1\n\n# of the License, or (at your option) any later version.\n\n#\n\n# GROMACS is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n\n# Lesser General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU Lesser General Public\n\n# License along with GROMACS; if not, see\n\n# http://www.gnu.org/licenses, or write to the Free Software Foundation,\n\n# Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA.\n\n#\n\n# If you want to redistribute modifications to GROMACS, please\n\n# consider that scientific software is very special. Version\n\n# control is crucial - bugs must be traceable. We will be happy to\n\n# consider code for inclusion in the official distribution, but\n\n# derived work must not be called official GROMACS. Details are found\n\n# in the README & COPYING files - if they are missing, get the\n\n# official version at http://www.gromacs.org.\n\n#\n\n# To help us fund GROMACS development, we humbly ask that you cite\n\n# the research papers on the package. Check out http://www.gromacs.org.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This file should remain version-agnostic, with all things specific to a\n\n# particular GROMACS version remaining in the package configuration files.\n\n# This find module only provides some convenience functionality to manage the\n\n# suffixes etc.\n\n# That should allow using the same FindGROMACS.cmake file with multiple\n\n# different GROMACS installations on the same machine.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Propagate all flags passed to parent find_package() to the config call below.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Determine the actual name of the package configuration files.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Delegate all the actual work to the package configuration files.\n\n# The CONFIGS option is not really necessary, but provides a bit better error\n\n# messages, since we actually know what the config file should be called.\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/FindGperftools.cmake" : {
      "ObjectId" : "4fcfefe9bab6e6beebee20485fbfd9744d72c379",
      "LastModified" : "2018-01-30T11:47:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Acknowledgement: This file is based on the FindGperftools.cmake file from the GitHub repo https://github.com/mavam/vast (License below)\n\n# \n\n# Copyright (c) 2014, Matthias Vallentin\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# 1. Redistributions of source code must retain the above copyright\n\n#    notice, this list of conditions and the following disclaimer.\n\n#\n\n# 2. Redistributions in binary form must reproduce the above copyright\n\n#    notice, this list of conditions and the following disclaimer in the\n\n#    documentation and/or other materials provided with the distribution.\n\n#\n\n# 3. Neither the name of the copyright holder nor the names of its\n\n#    contributors may be used to endorse or promote products derived from\n\n#    this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n\n# \n\n# Tries to find Gperftools.\n\n#\n\n# Usage of this module as follows:\n\n#\n\n#     find_package(Gperftools)\n\n#\n\n# Variables used by this module, they can change the default behaviour and need\n\n# to be set before calling find_package:\n\n#\n\n#  Gperftools_ROOT_DIR  Set this variable to the root installation of\n\n#                       Gperftools if the module has problems finding\n\n#                       the proper installation path.\n\n#\n\n# Variables defined by this module:\n\n#\n\n#  GPERFTOOLS_FOUND              System has Gperftools libs/headers\n\n#  GPERFTOOLS_LIBRARIES          The Gperftools libraries (tcmalloc & profiler)\n\n#  GPERFTOOLS_INCLUDE_DIR        The location of Gperftools headers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindGromacs.cmake" : {
      "ObjectId" : "7855c6efd8797f82e44f04e318a13afbc06e0f14",
      "LastModified" : "2018-01-30T11:47:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# FindGromacs\n\n#\n\n# This module finds the Gromacs library\n\n#\n\n# GROMACS_LIBRARIES -  libraries to link against\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check for required components\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindH2Lib.cmake" : {
      "ObjectId" : "e2ec0880a92cd6834b51947585f96a75254e073b",
      "LastModified" : "2018-02-05T12:52:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the h2lib library\n\n# Define a path using H2Lib_ROOT\n\n# Once done this will define\n\n#\n\n#  H2Lib_FOUND - system has h2lib\n\n#  H2Lib_INCLUDE_DIRS - the h2lib include directory\n\n#  H2Lib_LIBRARIES - Link these to use h2lib\n\n#  H2Lib_LINKER_FLAGS - add these to your CMAKE_EXE_LINKER_FLAGS\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Hide advanced variables from CMake GUIs\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindThrust.cmake" : {
      "ObjectId" : "8e5aa73999e1a8c606b34127e9436cd773f4fa21",
      "LastModified" : "2018-01-30T11:47:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##=============================================================================\n\n##\n\n##  Copyright (c) Kitware, Inc.\n\n##  All rights reserved.\n\n##  See LICENSE.txt for details.\n\n##\n\n##  This software is distributed WITHOUT ANY WARRANTY; without even\n\n##  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n\n##  PURPOSE.  See the above copyright notice for more information.\n\n##\n\n##  Copyright 2012 Sandia Corporation.\n\n##  Under the terms of Contract DE-AC04-94AL85000 with Sandia Corporation,\n\n##  the U.S. Government retains certain rights in this software.\n\n##\n\n##=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# FindThrust\n\n#\n\n# This module finds the Thrust header files and extrats their version.  It\n\n# sets the following variables.\n\n#\n\n# THRUST_INCLUDE_DIR -  Include directory for thrust header files.  (All header\n\n#                       files will actually be in the thrust subdirectory.)\n\n# THRUST_VERSION -      Version of thrust in the form \"major.minor.patch\".\n\n#\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find thrust version\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Check for required components\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cxxtest/build_tools/cmake/CxxTest.cmake" : {
      "ObjectId" : "bb62494bc87a7230316669ea5041abce780a2e7e",
      "LastModified" : "2018-01-30T11:47:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cxxtest/build_tools/cmake/FindCxxTest.cmake" : {
      "ObjectId" : "e1e4404c3d28a3dbb0fa64d2e20c1fce8abab720",
      "LastModified" : "2018-01-30T11:47:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/CMakeLists.txt" : {
      "ObjectId" : "16b87aad57fa08756e85c912c8262cbecf5453a1",
      "LastModified" : "2018-12-02T07:41:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Building of Documentation is tested on Linux only\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# adapted from http://github.com/purpleKarrot/CToolBox.git\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# PARAMETERS : http://docbook.sourceforge.net/release/xsl/current/doc/\n",
        "Line" : 123,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#  quickstart.cpp\n",
        "Line" : 125,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#boost.root=./\n",
        "Line" : 130,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#<xsl:param>chunk.first.sections=1\n\n#toc.section.depth=3\n\n#toc.max.depth=2\n\n#generate.section.toc.level=4\n",
        "Line" : 138,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#admon.graphics.path=images/admonition/\n\n#navig.graphics.path=images/navigation/\n\n#callout.graphics.path=images/callout/\n\n#boost.doxygen.strip_from_path=.\n\n#img.src.path=../images/useless_directory/\n",
        "Line" : 143,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "doc/cmake/FindBoostBook.cmake" : {
      "ObjectId" : "7f3eb7288ed8f4877d850ea499e4a5f839bc8cfe",
      "LastModified" : "2018-01-30T11:47:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the QuickBook executable\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find the DocBook DTD (version 4.2)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find the DocBook XSL stylesheets\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Find the BoostBook DTD\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Find the BoostBook XSL stylesheets\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Transform Quickbook into BoostBook XML\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# If INPUT is not a full path, it's in the current source directory.\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Transform BoostBook XML into DocBook\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Transform Quickbook into BoostBook XML, then BoostBook XML into DocBook\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "doc/cmake/FindDocumentation.cmake" : {
      "ObjectId" : "ce1115a46845319880eb172f90724a9049421648",
      "LastModified" : "2018-01-30T11:47:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Transform Quickbook into BoostBook XML\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If INPUT is not a full path, it's in the current source directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# copy to destination directory because quickbook screws up xinclude paths \n\n# when the output is not in the source directory\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# copy all dependencies that are not built\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# copy images into different locations... quick and dirty...\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#STYLESHEET ${BOOSTBOOK_XSL_DIR}/html.xsl\n",
        "Line" : 63,
        "CharPositionInLine" : 5
      },
      "CommentCount" : 6
    },
    "doc/cmake/FindFOP.cmake" : {
      "ObjectId" : "0d5bd43b6250f4523f0c5187fdad085182a2f506",
      "LastModified" : "2018-01-30T11:47:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n# Copyright (c) 2010 Daniel Pfeifer                                            #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "doc/cmake/FindParseArguments.cmake" : {
      "ObjectId" : "4a7c7997816f77e7a6cb573b4894b4eaa21c8b45",
      "LastModified" : "2018-01-30T11:47:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The PARSE_ARGUMENTS macro will take the arguments of another macro and\n\n# define several variables. The first argument to PARSE_ARGUMENTS is a\n\n# prefix to put on all variables it creates. The second argument is a\n\n# list of names, and the third argument is a list of options. Both of\n\n# these lists should be quoted. The rest of PARSE_ARGUMENTS are\n\n# arguments from another macro to be parsed.\n\n# \n\n#     PARSE_ARGUMENTS(prefix arg_names options arg1 arg2...) \n\n# \n\n# For each item in options, PARSE_ARGUMENTS will create a variable with\n\n# that name, prefixed with prefix_. So, for example, if prefix is\n\n# MY_MACRO and options is OPTION1;OPTION2, then PARSE_ARGUMENTS will\n\n# create the variables MY_MACRO_OPTION1 and MY_MACRO_OPTION2. These\n\n# variables will be set to true if the option exists in the command line\n\n# or false otherwise.\n\n# \n\n# For each item in arg_names, PARSE_ARGUMENTS will create a variable\n\n# with that name, prefixed with prefix_. Each variable will be filled\n\n# with the arguments that occur after the given arg_name is encountered\n\n# up to the next arg_name or the end of the arguments. All options are\n\n# removed from these lists. PARSE_ARGUMENTS also creates a\n\n# prefix_DEFAULT_ARGS variable containing the list of all arguments up\n\n# to the first arg_name encountered.\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "doc/cmake/FindReference.cmake" : {
      "ObjectId" : "4011e8ca59077a3657bffbf1bd1593850c81d15f",
      "LastModified" : "2018-01-30T11:47:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use Doxygen to parse header files and produce BoostBook output.\n\n#\n\n#   add_reference(output header1 header2 ...\n\n#     [DOXYGEN param1=value1 param2=value2 ... ])\n\n#     [BOOSTBOOK param1=value1 param2=value2 ... ])\n\n#\n\n# This macro sets up rules to transform a set of C/C++ header files\n\n# into BoostBook reference documentation. The resulting BoostBook XML\n\n# file will be named by the \"output\" parameter, and the set of headers\n\n# is provided following the output file. The actual parsing of header\n\n# files is provided by Doxygen, and is transformed into XML through\n\n# various XSLT transformations.\n\n#\n\n# Doxygen has a variety of configuration parameters. One can supply\n\n# extra Doxygen configuration parameters by providing NAME=VALUE pairs\n\n# following the PARAMETERS argument. These parameters will be added to\n\n# the Doxygen configuration file.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create a Doxygen configuration file template\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Update the Doxygen configuration file for XML generation\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# to generate latex images\n",
        "Line" : 49,
        "CharPositionInLine" : 51
      },
      "4" : {
        "Text" : "# Generate Doxygen XML\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Collect Doxygen XML into a single XML file\n",
        "Line" : 66,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Transform single Doxygen XML file into BoostBook XML\n",
        "Line" : 77,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    },
    "doc/cmake/FindXSLTransform.cmake" : {
      "ObjectId" : "70e9477e76d871c6727c4894b3fd31bd8c0e2bf6",
      "LastModified" : "2018-01-30T11:47:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find xsltproc to transform XML documents via XSLT\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Transforms the source XML file by applying the given XSL stylesheet.\n\n#\n\n#   xsl_transform(output input [input2 input3 ...]\n\n#                 STYLESHEET stylesheet\n\n#                 [CATALOG catalog]\n\n#                 [DIRECTORY mainfile]\n\n#                 [PARAMETERS param1=value1 param2=value2 ...]\n\n#                 [[MAKE_ALL_TARGET | MAKE_TARGET] target]\n\n#                 [COMMENT comment])\n\n#\n\n# This macro builds a custom command that transforms an XML file\n\n# (input) via the given XSL stylesheet. The output will either be a\n\n# single file (the default) or a directory (if the DIRECTION argument\n\n# is specified). The STYLESHEET stylesheet must be a valid XSL\n\n# stylesheet. Any extra input files will be used as additional\n\n# dependencies for the target. For example, these extra input files\n\n# might refer to other XML files that are included by the input file\n\n# through XInclude.\n\n#\n\n# When the XSL transform output is going to a directory, the mainfile\n\n# argument provides the name of a file that will be generated within\n\n# the output directory. This file will be used for dependency tracking.\n\n# \n\n# XML catalogs can be used to remap parts of URIs within the\n\n# stylesheet to other (typically local) entities. To provide an XML\n\n# catalog file, specify the name of the XML catalog file via the\n\n# CATALOG argument. It will be provided to the XSL transform.\n\n# \n\n# The PARAMETERS argument is followed by param=value pairs that set\n\n# additional parameters to the XSL stylesheet. The parameter names\n\n# that can be used correspond to the <xsl:param> elements within the\n\n# stylesheet.\n\n# \n\n# To associate a target name with the result of the XSL\n\n# transformation, use the MAKE_TARGET or MAKE_ALL_TARGET option and\n\n# provide the name of the target. The MAKE_ALL_TARGET option only\n\n# differs from MAKE_TARGET in that MAKE_ALL_TARGET will make the\n\n# resulting target a part of the default build.\n\n#\n\n# If a COMMENT argument is provided, it will be used as the comment\n\n# CMake provides when running this XSL transformation. Otherwise, the\n\n# comment will be \"Generating \"output\" via XSL transformation...\".\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO: Is this the best way to handle catalogs? The alternative is\n\n# that we could provide explicit remappings to the xsl_transform\n\n# macro, and it could generate a temporary XML catalog file.\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Translate XSL parameters into a form that xsltproc can use.\n",
        "Line" : 73,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# If the user didn't provide a comment for this transformation,\n\n# create a default one.\n",
        "Line" : 88,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Figure out the actual output file that we tell CMake about\n\n# (THIS_XSL_OUTPUT_FILE) and the output file or directory that we\n\n# tell xsltproc about (THIS_XSL_OUTPUT).\n",
        "Line" : 94,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Run the XSLT processor to do the XML transformation.\n",
        "Line" : 110,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Create a custom target to refer to the result of this\n\n# transformation.\n",
        "Line" : 121,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "40936b547683d2cd437b70b7abfbdf51d40977b0",
      "LastModified" : "2018-12-02T07:41:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#RbfStokesTest\n",
        "Line" : 59,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "#test_thrust_vector_CellList\n",
        "Line" : 230,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "#aboria_cxx_test(tests_cuda tests_cuda.cu ${test_files})\n",
        "Line" : 359,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 3
    }
  },
  "FileTypes" : {
    "CMAKE" : 18
  },
  "ElapsedTime" : 1085
}