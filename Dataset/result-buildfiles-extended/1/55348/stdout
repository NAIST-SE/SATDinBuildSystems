{
  "Repository" : "55348",
  "Revision" : "HEAD",
  "ObjectId" : "a1d26a5c9edf4269176f957ffada1deec9de37ba",
  "CommitTime" : "2019-04-11T10:45:24Z",
  "Files" : {
    "Applications/CMakeLists.txt" : {
      "ObjectId" : "35f9732a938a3b073bdf94e86007916ffcd31b49",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Applications/Cxx/CMakeLists.txt" : {
      "ObjectId" : "1e1b5c0b324174b0b98f5d87c2a97300c97042a2",
      "LastModified" : "2019-03-08T08:30:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build the GDCM applications\n\n# Namely:\n\n# gdcmdump\n\n# gdcminfo\n\n# gdcmconv\n\n# gdcmanon\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add the include paths\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# FIXME:\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# local.h\n\n# config.h\n",
        "Line" : 32,
        "CharPositionInLine" : 53
      },
      "4" : {
        "Text" : "#gdcmoverlay\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#deflate\n",
        "Line" : 52,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#gdcmstream\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# poppler people have the worse API backward compatibility I know of.\n\n# there is absolutely no way to check the version of poppler\n\n# they change the API during a minor change of the version\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#if(BUILD_TESTING)\n\n#  if(GDCM_DATA_ROOT)\n\n#    file(MAKE_DIRECTORY ${GDCM_TEMP_DIRECTORY}/gdcmanon-gdcmdata)\n\n#    add_test(NAME gdcmanon-gdcmdata COMMAND gdcmanon\n\n#      --continue  # skip LIBIDO-16-ACR_NEMA-Volume.dcm\n\n#      --certificate ${GDCM_SOURCE_DIR}/Testing/Source/Data/certificate.pem\n\n#      ${GDCM_DATA_ROOT}\n\n#      ${GDCM_TEMP_DIRECTORY}/gdcmanon-gdcmdata\n\n#      )\n\n#  endif()\n\n#endif()\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# http://www.na-mic.org/Wiki/index.php/CTSC:ARRA:Mockup\n\n# http://www.dicomserver.co.uk/\n\n# the NAMIC server is offline, Steve Pieper has volunteered his servers, but they are intermittent\n\n# IP Address: common.bwh.harvard.edu (155.52.248.49)\n\n# Port: 11112\n\n# AE Title: CTK_AE\n\n# and\n\n# IP Address: joe.bwh.harvard.edu (155.52.248.50)\n\n# Port: 5678\n\n# AE Title: CONQUESTSRV1\n\n#since these servers have no guaranteed uptime, these tests should be changed to some other, known-to-be-up server\n\n#add_test(NAME gdcmscu-echo-CONQUEST COMMAND gdcmscu --echo --call CONQUESTSRV1 joe.bwh.harvard.edu 5678)\n",
        "Line" : 195,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# CR-MONO1-10-chest.dcm gets rejected by www.dicomserver.co.uk:\n\n# Tag 0x0,0x902 reported as Incorrect VM (1) - Minimum value is 2 : 'Array of N Elements' (error 42752)\n\n# CR-MONO1-10-chest.dcm gets rejected by mi2b2.slicer.org\n\n# Tag 0x0,0x902 reported as Acceptance of objects without Patient ID is disabled (error 43264)\n\n#add_test(NAME gdcmscu-store-CONQUEST COMMAND gdcmscu --store --call CONQUESTSRV1 joe.bwh.harvard.edu 11112 ${GDCM_DATA_ROOT}/SIEMENS_MAGNETOM-12-MONO2-FileSeq1.dcm)\n",
        "Line" : 209,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "#add_test(NAME gdcmscu-find-CONQUEST COMMAND gdcmscu --find --patient --call CONQUESTSRV1 joe.bwh.harvard.edu 11112 --patientroot -k 10,10=X*)\n",
        "Line" : 216,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Let's C-STORE a limited subset of gdcmData for now:\n",
        "Line" : 221,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Implicit VR Little Endian: Default Transfer Syntax for DICOM\n\n# JPEG Lossless, Non-Hierarchical, First-Order Prediction\n",
        "Line" : 223,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 14
    },
    "CMake/CMakeCSharpInformation.cmake" : {
      "ObjectId" : "c6dd1b3f23d6b1d4b250326a6a599484c87c4961",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file sets the basic flags for the CSharp language in CMake.\n\n# It also loads the available platform file for the system-compiler\n\n# if it exists.\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(CMAKE_BASE_NAME)\n\n#get_filename_component(CMAKE_BASE_NAME ${CMAKE_CSharp_COMPILER} NAME_WE)\n\n#set(CMAKE_SYSTEM_AND_CSharp_COMPILER_INFO_FILE\n\n#  #${CMAKE_ROOT}/Modules/Platform/${CMAKE_SYSTEM_NAME}-${CMAKE_BASE_NAME}.cmake)\n\n#  ${CMAKE_ROOT}/Modules/Platform/${CMAKE_SYSTEM_NAME}-${CMAKE_BASE_NAME}.cmake)\n\n#message(${CMAKE_SYSTEM_AND_CSharp_COMPILER_INFO_FILE})\n\n#include(Platform/${CMAKE_SYSTEM_NAME}-${CMAKE_BASE_NAME} OPTIONAL)\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This should be included before the _INIT variables are\n\n# used to initialize the cache.  Since the rule variables\n\n# have if blocks on them, users can still define them here.\n\n# But, it should still be after the platform file so changes can\n\n# be made to those values.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Copy from CSharp, ref CXX ???\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# <TARGET>\n\n# <TARGET_BASE> the target without the suffix\n\n# <OBJECTS>\n\n# <OBJECT>\n\n# <LINK_LIBRARIES>\n\n# <FLAGS>\n\n# <LINK_FLAGS>\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# this is a place holder if java needed flags for javac they would go here.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#  if(WIN32)\n\n#    set(class_files_mask \"*.class\")\n\n#  else()\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#  endif()\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\"<CMAKE_CSharp_ARCHIVE> -cf <TARGET> -C <OBJECT_DIR> <OBJECTS>\")\n",
        "Line" : 46,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# compile a CSharp file into an object file\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# there is no such thing as intermediate representation (object file) in C#.\n\n# Instead to avoid multiple recompilation of the same src file, I could use the .dll form, since\n\n# one can add src / .dll that same way\n",
        "Line" : 52,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# copy src version\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# I could not references 'SOURCES' so I simply copy all source to fake OBJECTS\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# .exe is required otherwise I get:\n\n#  Unhandled Exception: System.ArgumentException: Module file name\n\n#  'cmTryCompileExec' must have file extension.\n\n#\"<CMAKE_CSharp_COMPILER> <FLAGS> <OBJECTS> -out:<TARGET>.exe <LINK_FLAGS> <LINK_LIBRARIES>\")\n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "#\"<CMAKE_CSharp_COMPILER> /target:library <OBJECTS> -out:<TARGET>\")\n",
        "Line" : 73,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# set java include flag option and the separator for multiple include paths\n\n#set(CMAKE_INCLUDE_FLAG_CSharp \"-classpath \")\n\n#if(WIN32 AND NOT CYGWIN)\n\n#  set(CMAKE_INCLUDE_FLAG_SEP_CSharp \";\")\n\n#else()\n\n#  set(CMAKE_INCLUDE_FLAG_SEP_CSharp \":\")\n\n#endif()\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# avoid just having a space as the initial value for the cache\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "CMake/CMakeDetermineCSharpCompiler.cmake" : {
      "ObjectId" : "dd183c61c6f8dcb855e1a9ad8e4227250bb65d0c",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# determine the compiler to use for CSharp programs\n\n# NOTE, a generator may set CMAKE_CSharp_COMPILER before\n\n# loading this file to force a compiler.\n\n# use environment variable CSHARP first if defined by user, next use\n\n# the cmake variable CMAKE_GENERATOR_CSHARP which can be defined by a generator\n\n# as a default compiler\n\n#\n\n# Sets the following variables:\n\n#   CMAKE_CSharp_COMPILER\n\n#   CMAKE_AR\n\n#   CMAKE_RANLIB\n\n#   CMAKE_COMPILER_IS_GNUGNAT\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# prefer the environment variable CSHARP\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# next prefer the generator-specified compiler\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# finally list compilers to try\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Known compilers:\n\n# mcs/gmcs/smcs # mono\n\n# csc: DotNet\n",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Find the compiler.\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#include(CMakeFindBinUtils)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# configure variables set in this file for fast reload later on\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#${CMAKE_ROOT}/Modules/CMakeCSharpCompiler.cmake.in\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#  \"${CMAKE_PLATFORM_ROOT_BIN}/CMakeCSharpCompiler.cmake\"\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 10
    },
    "CMake/CMakeTestCSharpCompiler.cmake" : {
      "ObjectId" : "b90e52ebfd1afea9f8f12fe08d01a9d8c8beddce",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is used by EnableLanguage in cmGlobalGenerator to\n\n# determine that that selected CShapr compiler can actually compile\n\n# and link the most basic of programs.   If not, a fatal error\n\n# is set and cmake stops processing commands and will not generate\n\n# any makefiles or projects.\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The compiler configuration was forced by the user.\n\n# Assume the user has configured all compiler information.\n",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Try to identify the ABI and configure it into CMakeCSharpCompiler.cmake\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#${CMAKE_ROOT}/Modules/CMakeCSharpCompiler.cmake.in\n",
        "Line" : 45,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 4
    },
    "CMake/ExportConfiguration/CMakeLists.txt" : {
      "ObjectId" : "69342297d7e391b76edab2ba6b880177e5263646",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### Build the configuration file for external projects using GDCM and cmake:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# install all targets referenced as ${GDCM_TARGETS_NAME}\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# [Prevent viral CMake dep]\n\n# See the following ref, which explain this mess.\n\n# http://cmake.org/Bug/view.php?id=9822\n\n# 0009822: Please expose: cmGlobalGenerator::GetExportSet at cmake level\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# I cannot retrieve the lists of exported targets, so read them from the file instead\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#set(gdcmtarget_cmake\n\n#  \"${CMAKE_CURRENT_BINARY_DIR}/CMakeFiles/Export/${GDCM_INSTALL_PACKAGE_DIR}/${GDCM_TARGETS_NAME}.cmake\")\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#configure_file(\n\n# ${GDCM_BINARY_DIR}/CMakeCache.txt\n\n#  ${CMAKE_CURRENT_BINARY_DIR}/gdcmtarget_cmake.dep\n\n#COPYONLY\n\n#)\n\n# CMake Error at CMake/ExportConfiguration/CMakeLists.txt:59 (export):\n\n#   export given target \"gdcmopenjpeg\" which is not built by this project.\n\n#add_custom_command(\n\n#  OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/gdcmtarget_cmake.dep\n\n#  COMMAND ${CMAKE_COMMAND} -E copy_if_different ${GDCM_BINARY_DIR}/CMakeCache.txt ${CMAKE_CURRENT_BINARY_DIR}/gdcmtarget_cmake.dep\n\n#  COMMAND ${CMAKE_COMMAND} -E remove ${gdcmtarget_cmake}\n\n#  COMMAND ${CMAKE_COMMAND} -E remove ${GDCM_BINARY_DIR}/GDCMExports.cmake\n\n#  #DEPENDS ${GDCM_BINARY_DIR}/CMakeCache.txt\n\n#  #DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/gdcmtarget_cmake.dep\n\n#  DEPENDS ${gdcmtarget_cmake}\n\n#)\n\n#add_custom_target(clean_t ALL\n\n#  COMMAND echo \"Execute\"\n\n#  #COMMAND ${CMAKE_COMMAND} -E remove ${gdcmtarget_cmake}\n\n#  COMMAND ${CMAKE_COMMAND} -E remove ${GDCM_BINARY_DIR}/GDCMExports.cmake\n\n#  DEPENDS ${gdcmtarget_cmake} ${GDCM_BINARY_DIR}/GDCMExports.cmake\n\n#  COMMENT \"Crazy\"\n\n#)\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#set( targets )\n\n##file(REMOVE ${gdcmtarget_cmake})\n\n#if(EXISTS ${gdcmtarget_cmake})\n\n#  #message( \"reading: ${gdcmtarget_cmake}\" )\n\n#  file(READ ${gdcmtarget_cmake} ENT)\n\n#  string(REGEX REPLACE \"\\r?\\n\" \";\" ENT \"${ENT}\")\n\n#  foreach(line ${ENT})\n\n#    string(REGEX MATCH \"ADD_LIBRARY\\\\(.*SHARED IMPORTED\\\\)\" m ${line})\n\n#    if( m )\n\n#      string(REGEX REPLACE \"ADD_LIBRARY\\\\((.*) SHARED IMPORTED\\\\)\" \"\\\\1\" out ${m})\n\n#      list(APPEND targets ${out})\n\n#    endif()\n\n#  endforeach()\n\n#endif()\n\n#\n\n#set( exports )\n\n#set(gdcmexport_cmake ${GDCM_BINARY_DIR}/GDCMExports.cmake)\n\n#if(EXISTS ${gdcmexport_cmake})\n\n#  file(READ ${gdcmexport_cmake} ENT)\n\n#  string(REGEX REPLACE \"\\r?\\n\" \";\" ENT \"${ENT}\")\n\n#  foreach(line ${ENT})\n\n#    string(REGEX MATCH \"ADD_LIBRARY\\\\(.*SHARED IMPORTED\\\\)\" m ${line})\n\n#    if( m )\n\n#      string(REGEX REPLACE \"ADD_LIBRARY\\\\((.*) SHARED IMPORTED\\\\)\" \"\\\\1\" out ${m})\n\n#      list(APPEND exports ${out})\n\n#    endif()\n\n#  endforeach()\n\n#endif()\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#list(LENGTH targets targets_len)\n\n#list(LENGTH exports exports_len)\n\n#if( ${targets_len} EQUAL ${exports_len} )\n\n#  message(\"equal\")\n\n#else()\n\n#  message(\"diff\")\n\n#  message( \"${targets}\" )\n\n#  message( \"${exports}\" )\n\n##set(targets ${exports})\n\n##  execute_process(\n\n##    COMMAND ${CMAKE_COMMAND} -E remove ${gdcmtarget_cmake}\n\n##  )\n\n#endif()\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "CMake/FindACTIVIZ.cmake" : {
      "ObjectId" : "4787fac50f5f158dee19ebc66abd1ce079498b02",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n#  Copyright (c) 2006-2011 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Testing on Linux with:\n\n# ActiViz.NET-5.4.0.455-Linux-x86_64-Personal\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Note:\n\n# IMHO I cannot use FIND_LIBRARY on Linux because of the .dll extension...\n\n# instead switch to FIND_FILE\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "CMake/FindCSharp.cmake" : {
      "ObjectId" : "a61216621ef3f92c5c294d0397dc5c85015fc12d",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# A C# Module for cmake\n\n#\n\n# TODO:\n\n# Should I inspect the ENV{CSC} var first ?\n\n#\n\n#\n\n#  Copyright (c) 2006-2011 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#TODO handle CSharp_FIND_QUIETLY\n\n#TODO handle CSharp_FIND_REQUIRED\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# http://public.kitware.com/Bug/view.php?id=7757\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "CMake/FindCharLS.cmake" : {
      "ObjectId" : "b0e8df5aad99f4dd23edb72a8bb36a78166f72d8",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n#  Copyright (c) 2006-2011 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/FindDCMTK.cmake" : {
      "ObjectId" : "d08cde5f4c67ef5b6a9275d9a59aa7505ba68ef4",
      "LastModified" : "2011-06-08T12:42:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - find DCMTK libraries and applications\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#  DCMTK_INCLUDE_DIRS   - Directories to include to use DCMTK\n\n#  DCMTK_LIBRARIES     - Files to link against to use DCMTK\n\n#  DCMTK_FOUND         - If false, don't try to use DCMTK\n\n#  DCMTK_DIR           - (optional) Source directory for DCMTK\n\n#\n\n# DCMTK_DIR can be used to make it simpler to find the various include\n\n# directories and compiled libraries if you've just compiled it in the\n\n# source tree. Just set it to the root of the tree where you extracted\n\n# the source (default to /usr/include/dcmtk/)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#=============================================================================\n\n# Copyright 2004-2009 Kitware, Inc.\n\n# Copyright 2009-2011 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n# Copyright 2010 Thomas Sondergaard <ts@medical-insight.com>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distributed this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Written for VXL by Amitha Perera.\n\n# Upgraded for GDCM by Mathieu Malaterre.\n\n# Modified for EasyViz by Thomas Sondergaard.\n\n#\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Compatibility: This variable is deprecated\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "CMake/FindDICOM3TOOLS.cmake" : {
      "ObjectId" : "c179b474e52a9d427f6f8605625377a9c30f89ba",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# this module looks for Dicom3Tools, well right now only dciodvfy, dcuncat,\n\n# dcmulti\n\n#\n\n# DCIODVFY_EXECUTABLE - the full path to the dciodvfy\n\n# DCIODVFY_FOUND      - If false, don't attempt to use dciodvfy\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# dicom3tools are funny to build you'll need imake\n\n# Anyway in order not to pollute your system, you can do an in-source build and\n\n# install which should be clean enough:\n\n#\n\n# ./Configure\n\n# imake -I./config -DInstallInTopDir\n\n# make World\n\n# make install (will copy in ./bin)\n\n#\n\n# then all you need to do is export an env var DICOM3TOOLS pointing to that dir\n\n#\n\n#  Copyright (c) 2006-2011 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#if (NOT DCIODVFY_EXECUTABLE)\n\n#  set(DCIODVFY_FOUND \"NO\")\n\n#else ()\n\n#  set(DCIODVFY_FOUND \"YES\")\n\n#endif ()\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "CMake/FindDotNETFrameworkSDK.cmake" : {
      "ObjectId" : "2b1de6f2864ab8355eea62c1ea91bf8b6b50915f",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find .NET Software Development Kit\n\n# This module finds an installed .NET Software Development Kit.  It sets the following variables:\n\n#\n\n#  Copyright (c) 2006-2011 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Note:\n\n# .NET Framework SDK Version 1.1\n\n# http://www.microsoft.com/downloads/details.aspx?FamilyID=9b3a2ca6-3647-4070-9f41-a333c6b9181d&displaylang=en\n\n# .NET Framework 2.0 Software Development Kit (SDK) (x86)\n\n# http://www.microsoft.com/downloads/details.aspx?FamilyID=fe6f2099-b7b4-4f47-a244-c96d69c35dec&displaylang=en\n\n# Microsoft .NET Framework 3.5\n\n# http://www.microsoft.com/downloads/details.aspx?familyid=333325FD-AE52-4E35-B531-508D977D32A6&displaylang=en\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Comparison Between C++ and C#\n\n# http://msdn.microsoft.com/en-us/library/yyaad03b(VS.71).aspx\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# http://www.akadia.com/services/dotnet_assemblies.html\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Visual C# Language Concepts\n\n# Building from the Command Line\n\n# http://msdn.microsoft.com/en-us/library/1700bbwd(VS.71).aspx\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# FIXME, path are hardcoded.\n\n# http://www.walkernews.net/2007/07/30/how-to-verify-dot-net-framework-version/\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "CMake/FindJSON.cmake" : {
      "ObjectId" : "955564f3c48acc35a643e7514597bafaf56c8440",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find json\n\n# Find the native JSON headers and libraries.\n\n# This module defines\n\n#  JSON_INCLUDE_DIRS - the json include directory\n\n#  JSON_LIBRARIES    - the libraries needed to use json\n\n#  JSON_FOUND        - system has the json library\n\n#\n\n#  Copyright (c) 2013 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# See:\n\n# https://github.com/json-c/json-c/wiki\n\n# $ sudo apt-get install libjson0-dev\n\n# in sid:\n\n# $ sudo apt-get install libjson-c-dev\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# hack to get old and new layout working:\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "CMake/FindJavaProperties.cmake" : {
      "ObjectId" : "85ceafcfa2481337b80cd9ae792ca66c7398a9d0",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  Copyright (c) 2006-2011 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module will populate the following cmake variables:\n\n# JavaProp_JAVA_LIBRARY_PATH\n\n# JavaProp_OS_ARCH\n\n# JavaProp_OS_NAME\n\n# JavaProp_JAVA_HOME\n\n# JavaProp_SUN_BOOT_LIBRARY_PATH\n\n# JavaProp_PATH_SEPARATOR\n\n# JavaProp_SUN_ARCH_DATA_MODEL\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# I can't get FindJNI.cmake to work, so instead re-write one more robust\n\n# which only requires javac and java being in the PATH\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# need to re-run everytime the setting for Java has changed:\n\n# There is technically one caveat still, when one only modify\n\n# Java_JAVA_EXECUTABLE from cmake-gui, everything is re-run properly except the\n\n# FIND_PATH for jar and javac\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# For some reason I have to use two execute_process instead of a chained one...\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#message(\"${current_list_path}/GetSystemProperty.java\")\n\n#message(\"${CMAKE_CURRENT_BINARY_DIR}/GetSystemProperty.class\")\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# populate the following list of java properties into CMake properties:\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# : / ;\n",
        "Line" : 65,
        "CharPositionInLine" : 19
      },
      "8" : {
        "Text" : "# 32 / 64\n",
        "Line" : 66,
        "CharPositionInLine" : 24
      },
      "9" : {
        "Text" : "#message(STATUS \"${property} : ${property_cmake_name} : ${${property_cmake_name}}\")\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 10
    },
    "CMake/FindKAKADU.cmake" : {
      "ObjectId" : "3e0409df3f3bdb6f5d3caa12a358a902f21fcea8",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# this module looks for KAKADu\n\n# http://www.kakadusoftware.com/\n\n#\n\n#\n\n#  Copyright (c) 2006-2011 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/FindKWStyle.cmake" : {
      "ObjectId" : "a3511866fea808c0e7c23b28f4f41ac3b17c2bed",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# this module looks for KWStyle\n\n# https://kitware.github.io/KWStyle/\n\n#\n\n#\n\n#  Copyright (c) 2009-2011 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#  option(KWSTYLE_USE_VIM_FORMAT \"Set KWStyle to generate errors with a VIM-compatible format.\" OFF)\n\n#  option(KWSTYLE_USE_MSVC_FORMAT \"Set KWStyle to generate errors with a VisualStudio-compatible format.\" OFF)\n\n#  mark_as_advanced(KWSTYLE_USE_VIM_FORMAT)\n\n#  mark_as_advanced(KWSTYLE_USE_MSVC_FORMAT)\n\n#\n\n#  if(KWSTYLE_USE_VIM_FORMAT)\n\n#    set(KWSTYLE_ARGUMENTS -vim ${KWSTYLE_ARGUMENTS})\n\n#  endif()\n\n#\n\n#  if(KWSTYLE_USE_MSVC_FORMAT)\n\n#    set(KWSTYLE_ARGUMENTS -msvc ${KWSTYLE_ARGUMENTS})\n\n#  endif()\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMake/FindLJPEG.cmake" : {
      "ObjectId" : "214b7c729ff0e85854ca5d893061f96d4b846722",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n#  Copyright (c) 2006-2011 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/FindMAGIC.cmake" : {
      "ObjectId" : "39b1665502c7f50c2495d843e885b1f8832bb212",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n#  Copyright (c) 2006-2011 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# $ sudo apt-get install libmagic-dev\n\n# $ dpkg -L libmagic-dev\n\n# ...\n\n# /usr/include/magic.h\n\n# /usr/lib/libmagic.so\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMake/FindMONO.cmake" : {
      "ObjectId" : "ed5fa8d84fd9da8afbc08756aaf34f04ec9c65ea",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find MONO\n\n# This module finds an installed MONO.  It sets the following variables:\n\n#  MONO_FOUND - set to true if MONO is found\n\n#  MONO_DIR - the directory where swig is installed\n\n#  MONO_EXECUTABLE - the path to the swig executable\n\n#  MONO_VERSION   - the version number of the swig executable\n\n#\n\n# All information are collected from the MONO_EXECUTABLE so the\n\n# version to be found can be changed from the command line by\n\n# means of setting MONO_EXECUTABLE\n\n#\n\n#  Copyright (c) 2006-2011 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# apt-get install mono-jit mono-mcs mono-gac mono-gmcs\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# eg.\n\n# $ gmcs HelloWorld.cs\n\n# $ mono HelloWorld.exe\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TODO: what are 'cscc' and 'ilrun' ?\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# 1.0\n",
        "Line" : 29,
        "CharPositionInLine" : 37
      },
      "5" : {
        "Text" : "# 2.0\n",
        "Line" : 30,
        "CharPositionInLine" : 45
      },
      "6" : {
        "Text" : "# Moonlight\n",
        "Line" : 31,
        "CharPositionInLine" : 36
      },
      "7" : {
        "Text" : "# mono-gac: /usr/bin/gacutil\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# gacutil - Global Assembly Cache management utility.\n",
        "Line" : 33,
        "CharPositionInLine" : 42
      },
      "9" : {
        "Text" : "# mono-1.0-devel: /usr/bin/ilasm\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#  ilasm, ilasm2 - Mono IL assembler\n",
        "Line" : 35,
        "CharPositionInLine" : 38
      },
      "11" : {
        "Text" : "# mono-1.0-devel: /usr/bin/sn\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#  sn - Digitally sign/verify/compare strongnames on CLR assemblies.\n",
        "Line" : 37,
        "CharPositionInLine" : 32
      },
      "13" : {
        "Text" : "# We decide to declare mono found when both interpreter and compiler 1.0 are found.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# TODO get version\n\n# TODO: there are multiple 'mcs' command on unix, need to check this is Mono:\n\n# mcs --version should return \"Mono C# compiler version 1.9.1.0\"\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "CMake/FindMd5sum.cmake" : {
      "ObjectId" : "507093057f48a26043e60d66e901828e115cece9",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n#  Copyright (c) 2006-2011 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# find md5sum\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Compute the md5sums file by doing a recursion of directory: `DIRECTORY`\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Super ugly and barely readable but you need that in order to\n\n# work around a deficiency in EXECUTE_PROCESS which does not have dependencie scanning\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Report the results.\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "CMake/FindOpenJPEG.cmake" : {
      "ObjectId" : "bdd5773fbd3fc58e80985d38e78e13b46afd4368",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the OpenJPEG (JPEG 2000) library\n\n#\n\n# Read-Only variables:\n\n#  OPENJPEG_FOUND - system has the OpenJPEG library\n\n#  OPENJPEG_INCLUDE_DIR - the OpenJPEG include directory\n\n#  OPENJPEG_LIBRARIES - The libraries needed to use OpenJPEG\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2006-2011 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Try with pkg-config first\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "CMake/FindOpenSSL.cmake" : {
      "ObjectId" : "ee71d823a2984c79612e60f84622e04b84e6612d",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the OpenSSL encryption library\n\n# Once done this will define\n\n#\n\n#  OPENSSL_ROOT_DIR - Set this variable to the root installation of OpenSSL\n\n#\n\n# Read-Only variables:\n\n#  OPENSSL_FOUND - system has the OpenSSL library\n\n#  OPENSSL_INCLUDE_DIR - the OpenSSL include directory\n\n#  OPENSSL_LIBRARIES - The libraries needed to use OpenSSL\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2006-2009 Kitware, Inc.\n\n# Copyright 2006 Alexander Neundorf <neundorf@kde.org>\n\n# Copyright 2009-2011 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distributed this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# http://www.slproweb.com/products/Win32OpenSSL.html\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Re-use the previous path:\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# MINGW should go here too\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# /MD and /MDd are the standard values - if someone wants to use\n\n# others, the libnames have to change here too\n\n# use also ssl and ssleay32 in debug as fallback for openssl < 0.9.8b\n\n# TODO: handle /MT and static lib\n\n# In Visual C++ naming convention each of these four kinds of Windows libraries has it's standard suffix:\n\n#   * MD for dynamic-release\n\n#   * MDd for dynamic-debug\n\n#   * MT for static-release\n\n#   * MTd for static-debug\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Implementation details:\n\n# We are using the libraries located in the VC subdir instead of the parent directory eventhough :\n\n# libeay32MD.lib is identical to ../libeay32.lib, and\n\n# ssleay32MD.lib is identical to ../ssleay32.lib\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# same player, for MingW\n",
        "Line" : 87,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Not sure what to pick for -say- intel, let's use the toplevel ones and hope someone report issues:\n",
        "Line" : 97,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 9
    },
    "CMake/FindPAPYRUS3.cmake" : {
      "ObjectId" : "ff848f56396a6196b1dfd9f5eabf9a9a813ed18b",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find papyrus3\n\n# Find the native PAPYRUS3 headers and libraries.\n\n# This module defines\n\n#  PAPYRUS3_INCLUDE_DIRS - the json include directory\n\n#  PAPYRUS3_LIBRARIES    - the libraries needed to use json\n\n#  PAPYRUS3_FOUND        - system has the json library\n\n#\n\n#  Copyright (c) 2013 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/FindPHP5.cmake" : {
      "ObjectId" : "99820af8216b8b3aeee1a3ab1a04fc1d4aea5bf7",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find PHP5\n\n# This module finds if PHP5 is installed and determines where the include files\n\n# and libraries are. It also determines what the name of the library is. This\n\n# code sets the following variables:\n\n#\n\n#  PHP5_INCLUDE_PATH       = path to where php.h can be found\n\n#  PHP5_EXECUTABLE         = full path to the php5 binary\n\n#\n\n#  Copyright (c) 2006-2011 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/FindPVRGJPEG.cmake" : {
      "ObjectId" : "94a20ad99a360b90b876b895ec3bdeb601872ba8",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# this module looks for PVRG-JPEG\n\n#\n\n# PVRG_JPEG_EXECUTABLE - the full path to pvrg-jpeg\n\n# PVRG_JPEG_FOUND      - If false, don't attempt to use pvrg-jpeg\n\n#\n\n#  Copyright (c) 2006-2011 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/FindPoppler.cmake" : {
      "ObjectId" : "9fb5136531423e3da28de3b74fe3418bb302e676",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n#  Copyright (c) 2006-2011 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/FindRsync.cmake" : {
      "ObjectId" : "929f3292e521637183af08d1f5e384518839050a",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# This module finds if rsync is installed\n\n#\n\n#  RSYNC_EXECUTABLE         = full path to the pike binary\n\n#\n\n# Typical usage for gdcm is:\n\n# rsync -avH --delete [options] rsync.creatis.insa-lyon.fr::module localdir\n\n# Compression option is: -z\n\n#\n\n#  Copyright (c) 2006-2011 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/FindSOCKET++.cmake" : {
      "ObjectId" : "0f4105941c84d54b214b53c36fa9869e1b950c32",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find socket++\n\n# Find the native socket++ headers and libraries.\n\n# This module defines\n\n#  SOCKETXX_INCLUDE_DIRS - the json include directory\n\n#  SOCKETXX_LIBRARIES    - the libraries needed to use json\n\n#  SOCKETXX_FOUND        - system has the json library\n\n#\n\n#  Copyright (c) 2013 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/FindSQLITE3.cmake" : {
      "ObjectId" : "e3377d85ce7e52cf6ce28c485e7213a121305239",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n#  Copyright (c) 2006-2011 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/FindUUID.cmake" : {
      "ObjectId" : "f72ddca57ae29a1a1a5c5084b8c5379387a13b38",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find UUID\n\n# Find the native UUID includes and library\n\n# This module defines\n\n#  UUID_INCLUDE_DIR, where to find jpeglib.h, etc.\n\n#  UUID_LIBRARIES, the libraries needed to use UUID.\n\n#  UUID_FOUND, If false, do not try to use UUID.\n\n# also defined, but not for general use are\n\n#  UUID_LIBRARY, where to find the UUID library.\n\n#\n\n#  Copyright (c) 2006-2016 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# On Mac OS X the uuid functions are in the System library.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Linux type:\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Must be *after* the lib itself\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Deprecated declarations.\n\n#set (NATIVE_UUID_INCLUDE_PATH ${UUID_INCLUDE_DIR} )\n\n#get_filename_component (NATIVE_UUID_LIB_PATH ${UUID_LIBRARY} PATH)\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "CMake/InstallMacros.cmake" : {
      "ObjectId" : "d1fddd8007fea3713b7f19cc27ed0dc4f312c27c",
      "LastModified" : "2019-03-08T08:30:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# This module install PDB files.\n\n#\n\n# Based on users posts:\n\n# http://www.cmake.org/pipermail/cmake/2007-October/016924.html\n\n#\n\n#  Copyright (c) 2006-2011 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The following trick permits installation of module to the right destination:\n\n# binary path for dll (on windows)\n\n# library for non-dll platform\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# if user sets a GDCM_INSTALL_PYTHONMODULE_DIR\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Runtime\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# need recent cmake: http://cmake.org/gitweb?p=cmake.git;a=commitdiff;h=cbe7e8fa\n\n#export(EXPORT ${GDCM_TARGETS_NAME} APPEND FILE \"${CMAKE_CURRENT_BINARY_DIR}/foo.cmake\")\n\n#Development\n",
        "Line" : 47,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# At least one argument is required\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "CMake/InstallRequiredVTKLibraries.cmake" : {
      "ObjectId" : "a79c2bd58a53b37097d6b49a45d970d5da4713e7",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Install VTK required libs for GDCM\n\n#\n\n#  Copyright (c) 2006-2011 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# utilities\n",
        "Line" : 19,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "CMake/Toolchain-gcc-arm-linux-gnueabi.cmake" : {
      "ObjectId" : "e77326703b51dd0b93ab23297d96af5a66854279",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# http://wiki.debian.org/BuildingCrossCompilers\n\n# Usage:\n\n#\n\n#  $ cmake ../gdcm -DCMAKE_TOOLCHAIN_FILE=../gdcm/CMake/Toolchain-gcc-arm-linux-gnueabi.cmake\n\n#\n\n# For gdcm you need at least the following three packages (squeeze suite)\n\n#\n\n# fix /etc/apt/source.lists\n\n#  + deb http://www.emdebian.org/debian squeeze main\n\n#\n\n#  // prebuilt Emdebian project\n\n#  sudo apt-get install g++-4.4-arm-linux-gnueabi\n\n#\n\n#  sudo xapt -S squeeze -M http://ftp.fr.debian.org/debian/ -a armel -m zlib1g-dev uuid-dev libexpat1-dev\n\n#\n\n#  qemu-arm -L /usr/arm-linux-gnueabi/ ./bin/gdcminfo test.acr\n\n#\n\n#  Copyright (c) 2006-2011 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# the name of the target operating system\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# which compilers to use for C and C++\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# here is the target environment located\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# adjust the default behaviour of the FIND_XXX() commands:\n\n# search headers and libraries in the target environment, search\n\n# programs in the host environment\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "CMake/Toolchain-gcc-m32.cmake" : {
      "ObjectId" : "fcd1805c660f2fd139b6891497ccaf5434586ab1",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# http://www.cmake.org/Wiki/CmakeMingw\n\n# Usage:\n\n#\n\n#  $ cmake ../trunk -DCMAKE_TOOLCHAIN_FILE=../trunk/CMake/Toolchain-mingw32.cmake\n\n#\n\n# For gdcm you need at least the following three package (2008/08/19):\n\n#\n\n#  apt-cross --arch i386 -i zlib1g-dev\n\n#  apt-cross --arch i386 -i uuid-dev\n\n#  apt-cross --arch i386 -i libexpat1-dev\n\n#\n\n# Do not forget to set to on the following:\n\n# GDCM_USE_SYSTEM_EXPAT / GDCM_USE_SYSTEM_ZLIB / GDCM_USE_SYSTEM_UUID\n\n#\n\n#  Copyright (c) 2006-2011 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# the name of the target operating system\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# which compilers to use for C and C++\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# here is the target environment located\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# adjust the default behaviour of the FIND_XXX() commands:\n\n# search headers and libraries in the target environment, search\n\n# programs in the host environment\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "CMake/Toolchain-gcc-powerpc.cmake" : {
      "ObjectId" : "fa9d17e5f3bbdcd1dd751b67f08459e3de18c370",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# http://www.cmake.org/Wiki/CmakeMingw\n\n# http://doc.cliss21.com/index.php?title=QEMU\n\n# Usage:\n\n#\n\n#  $ cmake ../trunk -DCMAKE_TOOLCHAIN_FILE=../trunk/CMake/Toolchain-mingw32.cmake\n\n#\n\n# For gdcm you need at least the following three package (2008/08/19):\n\n#\n\n# fix /etc/apt/source.lists\n\n#  + deb http://www.emdebian.org/debian/ unstable main\n\n#\n\n#  // prebuilt Emdebian project\n\n#  sudo apt-get install g++-4.1-powerpc-linux-gnu\n\n#\n\n#  apt-cross --arch powerpc -i zlib1g-dev\n\n#  apt-cross --arch powerpc -i uuid-dev\n\n#  apt-cross --arch powerpc -i libexpat1-dev\n\n#\n\n#I was getting:\n\n#$ qemu-ppc ./a.out\n\n#/lib/ld.so.1: No such file or directory\n\n#\n\n#Two approach for solving it:\n\n#1.\n\n#CMAKE_EXE_LINKER_FLAGS:STRING=-static\n\n#2.\n\n#$ qemu-ppc -L /usr/powerpc-linux-gnu/ ./a.out\n\n#Hello cross-compiling world!\n\n#\n\n#\n\n# Do not forget to set to on the following:\n\n# GDCM_USE_SYSTEM_EXPAT / GDCM_USE_SYSTEM_ZLIB / GDCM_USE_SYSTEM_UUID\n\n#\n\n#  Copyright (c) 2006-2011 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# the name of the target operating system\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# which compilers to use for C and C++\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# here is the target environment located\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# adjust the default behaviour of the FIND_XXX() commands:\n\n# search headers and libraries in the target environment, search\n\n# programs in the host environment\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "CMake/Toolchain-mingw32.cmake" : {
      "ObjectId" : "ebca29c44359f10b18a9048774a934cbe1eeb2b0",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# http://www.cmake.org/Wiki/CmakeMingw\n\n# Usage:\n\n#\n\n# mingw32 does not seems to be updated in Debian, switch to mingw-w64 target\n\n# i686 instead:\n\n#\n\n#  $ sudo apt-get install g++-mingw-w64-i686\n\n#  $ cmake -DCMAKE_TOOLCHAIN_FILE=../gdcm/CMake/Toolchain-mingw32.cmake ../gdcm\n\n#\n\n#\n\n#  Copyright (c) 2006-2011 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# the name of the target operating system\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# which compilers to use for C and C++\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# here is the target environment located\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# adjust the default behaviour of the FIND_XXX() commands:\n\n# search headers and libraries in the target environment, search\n\n# programs in the host environment\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "CMake/Toolchain-mingw64.cmake" : {
      "ObjectId" : "928ee89acbd99ebfc56576bc4e32f2ae7df21f8d",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# http://www.cmake.org/Wiki/CmakeMingw\n\n# Usage:\n\n#\n\n#  $ sudo apt-get install mingw-w64\n\n#  $ cmake -DCMAKE_TOOLCHAIN_FILE=../gdcm/CMake/Toolchain-mingw64.cmake ../gdcm\n\n#\n\n#\n\n#  Copyright (c) 2006-2011 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# the name of the target operating system\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# which compilers to use for C and C++\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# here is the target environment located\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# adjust the default behaviour of the FIND_XXX() commands:\n\n# search headers and libraries in the target environment, search\n\n# programs in the host environment\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "CMake/UseCSharp.cmake" : {
      "ObjectId" : "793780e05bc0214a0757fec4c8fa80fa8492d5e8",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - C# module for CMake\n\n# Defines the following macros:\n\n#   CSHARP_ADD_EXECUTABLE(name [ files ])\n\n#     - Define C# executable with given name\n\n#   CSHARP_ADD_LIBRARY(name [ files ])\n\n#     - Define C# library with given name\n\n#   CSHARP_LINK_LIBRARIES(name [ libraries ])\n\n#     - Link libraries to csharp library\n\n#\n\n#  Copyright (c) 2006-2011 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO:\n\n# http://www.cs.nuim.ie/~jpower/Research/csharp/Index.html\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# remap\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#set(CMAKE_CSHARP3_INTERPRETER ${MONO_EXECUTABLE})\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# default to v1:\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# CMAKE_CSHARP_COMPILER /platform and anycpu\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# There is a subttle issue when compiling on 64bits platform using a 32bits compiler\n\n# See bug ID: 3510023 (BadImageFormatException: An attempt was made to load a progr)\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# get version (no /version, so use /help output):\n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# when cmd locale is in French it displays: \"/platform:<chaine>\" in english: \"/platform:<string>\"\n\n# so only regex match in /platform:\n",
        "Line" : 69,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Check something is found:\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# status message only for now:\n",
        "Line" : 90,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "#if (NOT CSHARP_FIND_QUIETLY)\n",
        "Line" : 93,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "#endif ()\n",
        "Line" : 95,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#message(\"Could not find: ${it}\")\n",
        "Line" : 110,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "#set(SHARP #)\n",
        "Line" : 116,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "#message(\"Could not find: ${it}\")\n",
        "Line" : 140,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "#\"/out:${name}.dll\" ${csharp_cs_sources}\n\n#\"/r:gdcm_csharp.dll\"\n",
        "Line" : 147,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "#if(EXISTS ${it}.dll)\n",
        "Line" : 158,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "#  set(csharp_libraries_depends ${it}.dll)\n\n#else()\n\n#  if(EXISTS ${CMAKE_CURRENT_BINARY_DIR}/${it}.dll)\n\n#    set(csharp_libraries \"${csharp_libraries} /r:${it}.dll\")\n\n#    set(csharp_libraries_depends ${CMAKE_CURRENT_BINARY_DIR}/${it}.dll)\n\n#  else()\n\n#    message(\"Could not find: ${it}\")\n\n#  endif()\n\n#endif()\n",
        "Line" : 160,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "#message( \"DEBUG: ${CSHARP_EXECUTABLE_${name}_ARGS}\" )\n",
        "Line" : 171,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# BAD DESIGN !\n\n# This should be in the _ADD_EXECUTABLE...\n",
        "Line" : 173,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "#ARGS \"/r:gdcm_csharp.dll\" \"/out:${name}.exe\" ${csharp_cs_sources}\n",
        "Line" : 179,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "#DEPENDS ${csharp_cs_sources}\n",
        "Line" : 182,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "#message(\"DEBUG2:${csharp_libraries_depends}\")\n",
        "Line" : 186,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 24
    },
    "CMake/UseCSharpTest.cmake" : {
      "ObjectId" : "30b59e25c5d86c22878eb25a2ab2d83d063b6652",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add a python test from a python file\n\n# One cannot simply do:\n\n# set(ENV{PYTHONPATH} ${LIBRARY_OUTPUT_PATH})\n\n# set(my_test \"from test_mymodule import *\\;test_mymodule()\")\n\n# add_test(PYTHON-TEST-MYMODULE  python -c ${my_test})\n\n# Since cmake is only transmitting the ADD_TEST line to ctest thus you are loosing\n\n# the env var. The only way to store the env var is to physically write in the cmake script\n\n# whatever PYTHONPATH you want and then add the test as 'cmake -P python_test.cmake'\n\n#\n\n# Usage:\n\n# set_source_files_properties(test.py PROPERTIES PYTHONPATH\n\n#   \"${LIBRARY_OUTPUT_PATH}:${VTK_DIR}\")\n\n# ADD_PYTHON_TEST(PYTHON-TEST test.py)\n\n#\n\n#  Copyright (c) 2006-2011 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# UseCSharp.cmake\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# I cannot use CMAKE_CFG_INTDIR since it expand to \"$(OutDir)\"\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#set(pyenv ${LIBRARY_OUTPUT_PATH}/${CMAKE_CFG_INTDIR})\n\n#set(pyenv ${LIBRARY_OUTPUT_PATH}/${CMAKE_CONFIG_TYPE})\n\n#set(pyenv ${LIBRARY_OUTPUT_PATH}/\\${CMAKE_CONFIG_TYPE})\n",
        "Line" : 33,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 4
    },
    "CMake/UseCopyright.cmake" : {
      "ObjectId" : "fb4fe1fad4cc72da5639d8e545573fc8ff705570",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Handy macro to gather all copyright in a single file (to pass to cpack)\n\n#\n\n#  Copyright (c) 2006-2011 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Always cleanup the file:\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Append copyright file\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# need to raise an error if COPYRIGHT_MODULE_FILENAME is not set...\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "CMake/UseDebian.cmake" : {
      "ObjectId" : "e1e90ba06f01d73df9273f1a17ac6980292f058e",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# create .deb file\n\n# You need to setup CPack first !\n\n# UGLY: I reuse CPACK_NSIS_CONTACT to get the contact name for the debian package...\n\n# TODO: How do I transmit the 'Depends' line ?\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# DOCUMENTATION; You need to fill these values to set the control file:\n\n# \"Package: ${DEBIAN_PACKAGE_NAME}\n\n# Version: ${DEBIAN_PACKAGE_VERSION}\n\n# Architecture: ${DEBIAN_ARCHITECTURE}\n\n# Depends: ${DEBIAN_PACKAGE_DEPENDS}\n\n# Maintainer: ${CPACK_NSIS_CONTACT}\n\n# Description: ${CPACK_PACKAGE_DESCRIPTION_SUMMARY}\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Thanks:\n\n# Eric Noulard for initial UseRpmTools used as template\n\n#\n\n#  Copyright (c) 2006-2011 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Detect if CPack was included or not\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# $ ar tv cmake_2.4.5-1_i386.deb\n\n# rw-r--r-- 0/0      4 Dec  4 22:58 2006 debian-binary\n\n# rw-r--r-- 0/0   8981 Dec  4 22:58 2006 control.tar.gz\n\n# rw-r--r-- 0/0 4893146 Dec  4 22:58 2006 data.tar.gz\n",
        "Line" : 36,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Need a newline:\n\n# dpkg-deb: archive has no newlines in header\n",
        "Line" : 41,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# seems better to ADD_CUSTOM_COMMAND this way debian-binary may\n\n# be regenerated when make is called.\n\n#      file(WRITE ${CMAKE_BINARY_DIR}/debian-binary \"2.0\n\n#\" )\n",
        "Line" : 50,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# debian policy enforce lower case for package name\n",
        "Line" : 55,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# There is no such thing as i686 architecture on debian, you should use i386 instead\n\n# $ dpkg --print-architecture\n",
        "Line" : 68,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "#message(${CMAKE_SYSTEM_PROCESSOR})\n",
        "Line" : 77,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# FIXME:\n\n# I have no friggin clue how cpack works, let's reinvent the wheel instead\n",
        "Line" : 94,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "#include(${CMAKE_BINARY_DIR}/CPackConfig.cmake)\n\n#add_custom_target(data_tgz\n\n#  COMMAND cpack -G TGZ --config CPackConfig.cmake\n\n## TODO: How to get the cpack package name ?\n\n#  COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_BINARY_DIR}/${CPACK_PACKAGE_FILE_NAME}.tar.gz ${CMAKE_BINARY_DIR}/data.tar.gz\n\n#)\n",
        "Line" : 97,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# let's create a temp directory to call 'DESTDIR=... make install' into:\n\n# cleanup\n",
        "Line" : 104,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# make dir:\n",
        "Line" : 107,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# calling cmake -P cmake_install.cmake is the same as calling make install:\n",
        "Line" : 110,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# create data.tar.gz from the make install stuff\n\n# all files starts with: ./usr\n",
        "Line" : 118,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# get all the files to be installed:\n",
        "Line" : 130,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# create a tarball (control.tar.gz) of control and md5sums\n\n# files need to be in relative path: ./md5sums ./control ...\n",
        "Line" : 137,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# Warning order is important:\n\n# ar -r your-package-name.deb debian-binary control.tar.gz data.tar.gz\n\n# eg: cmake_2.4.5-1_i386.deb\n",
        "Line" : 150,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "# the final target:\n",
        "Line" : 163,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "# BUG: debian_package is not removed during a 'make clean':\n",
        "Line" : 170,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 21
    },
    "CMake/UseDotNETFrameworkSDK.cmake" : {
      "ObjectId" : "78509e895907655ebc67098668b040bd1264a8a7",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  Copyright (c) 2006-2011 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/UseJavaTest.cmake" : {
      "ObjectId" : "ea2ca65c4cfba916cb0f34ea8044b05b0b2be254",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add a java test from a java file\n\n#\n\n# Usage:\n\n# set_source_files_properties(test.py PROPERTIES PYTHONPATH\n\n#   \"${LIBRARY_OUTPUT_PATH}:${VTK_DIR}\")\n\n# ADD_PYTHON_TEST(PYTHON-TEST test.py)\n\n#\n\n#  Copyright (c) 2006-2011 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Need python interpreter:\n\n#find_package(PythonInterp REQUIRED)\n\n#mark_as_advanced(PYTHON_EXECUTABLE)\n\n# UseCSharp.cmake\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# I cannot use CMAKE_CFG_INTDIR since it expand to \"$(OutDir)\"\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#set(pyenv ${LIBRARY_OUTPUT_PATH}/${CMAKE_CFG_INTDIR})\n\n#set(pyenv ${LIBRARY_OUTPUT_PATH}/${CMAKE_CONFIG_TYPE})\n\n#set(pyenv ${LIBRARY_OUTPUT_PATH}/\\${CMAKE_CONFIG_TYPE})\n",
        "Line" : 37,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# Byte compile recursively a directory (DIRNAME)\n\n#macro(ADD_PYTHON_COMPILEALL_TEST DIRNAME)\n\n#  # First get the path:\n\n#  get_filename_component(temp_path \"${PYTHON_LIBRARIES}\" PATH)\n\n#  # Find the python script:\n\n#  get_filename_component(PYTHON_COMPILE_ALL_PY \"${temp_path}/../compileall.py\" ABSOLUTE)\n\n#  # add test, use DIRNAME to create uniq name for the test:\n\n#  add_test(COMPILE_ALL-${DIRNAME} ${PYTHON_EXECUTABLE} \"${PYTHON_COMPILE_ALL_PY}\" -q ${DIRNAME})\n\n#endmacro()\n\n#\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "CMake/UseMONO.cmake" : {
      "ObjectId" : "af95f89a677c020163562f75c2ec0d14020d20ec",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - MONO module for CMake\n\n# Defines the following macros:\n\n#   MONO_ADD_MODULE(name language [ files ])\n\n#     - Define swig module with given name and specified language\n\n#   MONO_LINK_LIBRARIES(name [ libraries ])\n\n#     - Link libraries to swig module\n\n# All other macros are for internal use only.\n\n# To get the actual name of the swig module,\n\n# use: ${MONO_MODULE_name_REAL_NAME}.\n\n# Set Source files properties such as CPLUSPLUS and MONO_FLAGS to specify\n\n# special behavior of MONO. Also global CMAKE_MONO_FLAGS can be used to add\n\n# special flags to all swig calls.\n\n# Another special variable is CMAKE_MONO_OUTDIR, it allows one to specify\n\n# where to write all the swig generated module (swig -outdir option)\n\n# The name-specific variable MONO_MODULE_<name>_EXTRA_DEPS may be used\n\n# to specify extra dependencies for the generated modules.\n\n#\n\n#  Copyright (c) 2006-2011 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Create Swig module\n\n#\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Like TARGET_LINK_LIBRARIES but for swig modules\n\n#\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "CMake/UsePythonTest.cmake" : {
      "ObjectId" : "7bf576c4bdc95698b9d37820ab915995dbfed04a",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add a python test from a python file\n\n# One cannot simply do:\n\n# set(ENV{PYTHONPATH} ${LIBRARY_OUTPUT_PATH})\n\n# set(my_test \"from test_mymodule import *\\;test_mymodule()\")\n\n# add_test(PYTHON-TEST-MYMODULE  python -c ${my_test})\n\n# Since cmake is only transmitting the ADD_TEST line to ctest thus you are loosing\n\n# the env var. The only way to store the env var is to physically write in the cmake script\n\n# whatever PYTHONPATH you want and then add the test as 'cmake -P python_test.cmake'\n\n#\n\n# Usage:\n\n# set_source_files_properties(test.py PROPERTIES PYTHONPATH\n\n#   \"${LIBRARY_OUTPUT_PATH}:${VTK_DIR}\")\n\n# ADD_PYTHON_TEST(PYTHON-TEST test.py)\n\n#\n\n#  Copyright (c) 2006-2011 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Need python interpreter:\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# I cannot use CMAKE_CFG_INTDIR since it expand to \"$(OutDir)\"\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#set(pyenv ${LIBRARY_OUTPUT_PATH}/${CMAKE_CFG_INTDIR})\n\n#set(pyenv ${LIBRARY_OUTPUT_PATH}/${CMAKE_CONFIG_TYPE})\n\n#set(pyenv ${LIBRARY_OUTPUT_PATH}/\\${CMAKE_CONFIG_TYPE})\n",
        "Line" : 39,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# Byte compile recursively a directory (DIRNAME)\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# First get the path:\n",
        "Line" : 90,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Find the python script:\n",
        "Line" : 92,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# add test, use DIRNAME to create uniq name for the test:\n",
        "Line" : 94,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "CMakeLists.txt" : {
      "ObjectId" : "45b19078b5fa8c9c6941904393f492616bff44bc",
      "LastModified" : "2019-03-08T08:30:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# As of 2018-12-04 GDCM has been validated to build with cmake version 3.13.1 new policies.\n\n# Set and use the newest cmake policies that are validated to work\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# GDCM version 3.0.0 will only support C++11 and greater\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#----------------------------------------------------------------------------\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## NOTE: the \"DESCRIPTION\" feature of project() was introduced in cmake 3.10.0\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Set aliases for backwards compatibility.  GDCM_VERSION_XXX are configured by the project() command \n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ${GDCM_VERSION_TWEAK}\n",
        "Line" : 41,
        "CharPositionInLine" : 86
      },
      "6" : {
        "Text" : "# TODO\n\n# http://www.vtk.org/pipermail/vtkusers/2007-May/090968.html\n\n#\n\n# False memory leak reports are caused by VTK dlls loading *before* MFC dlls.\n\n# You have to use the linker's /delayload flag to avoid this issue.\n\n#\n\n# The /delayload flag should be correct by default in the MFC examples if you\n\n# are using CVS VTK... If you are using a previous version of VTK (5.0 or\n\n# earlier) then you will have to figure out a way to link with that flag.\n\n#\n\n# See the CVS version of files in VTK/GUISupport/MFC for details. Or grep the\n\n# VTK source tree for \"DELAYLOAD\"\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# let advanced user the option to define GDCM_API_VERSION:\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#set(GDCM_EXECUTABLE_PROPERTIES ${GDCM_EXECUTABLE_PROPERTIES}\n\n#  VERSION \"${GDCM_VERSION_MAJOR}.${GDCM_VERSION_MINOR}\"\n\n#)\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Top level project (eg. ITK) should set GDCM_TARGETS_NAME\n\n# to define a particular behavior where GDCM does not call\n\n# install(EXPORT...)\n\n# This sets the default value for GDCM_STANDALONE\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# PDB handling + Module handling\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Are we building a release branch / tag (read: even number)?\n\n# By default dashboard are expected to run with Design by Contract on\n\n# to trigger any of the assert, but on the other hand no user really\n\n# can figure out they need to change this value\n\n# So unless the user *specifically* requested a particular cmake_build_type\n\n# do the work internally and append the NDEBUG def flag (hopefully portable)\n",
        "Line" : 102,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Since we are on a release branch, chance is that people don't care about testing\n\n# let's disable it for them\n",
        "Line" : 111,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Disable deprecation warnings for standard C and STL functions in VS2005\n\n# and later\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Build shared lib by default\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Adding GDCM_DATA_ROOT\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# You can define a path where you extra the famous D. Clunie spacing dataset\n\n# http://www.dclunie.com/images/pixelspacingtestimages.zip\n\n# for example:\n\n# find $HOME/pixelspacingtestimages\n\n# $HOME/pixelspacingtestimages\n\n# $HOME/pixelspacingtestimages/DISCIMG\n\n# $HOME/pixelspacingtestimages/DISCIMG/DICOMDIR\n\n# $HOME/pixelspacingtestimages/DISCIMG/IMAGES\n\n# $HOME/pixelspacingtestimages/DISCIMG/IMAGES/DXIMAGE\n\n# $HOME/pixelspacingtestimages/DISCIMG/IMAGES/MGIMAGE\n\n# $HOME/pixelspacingtestimages/DISCIMG/IMAGES/CRIMAGE\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Define a temp directory in which we can output stuff\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Check if header file exists and add it to the list.\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#Avoid polluting Win32 cmakecache\n",
        "Line" : 199,
        "CharPositionInLine" : 9
      },
      "25" : {
        "Text" : "#include(${GDCM_SOURCE_DIR}/CMake/gdcmPlatformCxxTests.cmake)\n\n#\n\n#GDCM_PLATFORM_CXX_TEST(GDCM_CXX_HAS_FUNCTION\n\n#    \"Checking whether compiler has __FUNCTION__\" DIRECT)\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Build the main lib...\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Process the install rules from C99\n",
        "Line" : 216,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# Configure the export configuration\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# You will also need to define a value for the following variables:\n\n# GDCM_INSTALL_BIN_DIR          - binary dir (executables)\n\n# GDCM_INSTALL_LIB_DIR          - library dir (libs)\n\n# GDCM_INSTALL_DATA_DIR         - share dir (say, examples, data, etc)\n\n# GDCM_INSTALL_INCLUDE_DIR      - include dir (headers)\n\n# GDCM_INSTALL_PACKAGE_DIR      - package/export configuration files\n\n# GDCM_VTK_INSTALL_PACKAGE_DIR  - VTK package/export configuration files\n\n# GDCM_INSTALL_NO_DEVELOPMENT   - do not install development files\n\n# GDCM_INSTALL_NO_RUNTIME       - do not install runtime files\n\n# GDCM_INSTALL_NO_DOCUMENTATION - do not install documentation files\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# GDCM_INSTALL_PYTHONMODULE_DIR     - Python Module install dir\n\n# GDCM_VTK_INSTALL_PYTHONMODULE_DIR - VTK/Python Module install dir\n\n# GDCM_INSTALL_CSHARPMODULE_DIR     - C# Module install dir\n\n# GDCM_VTK_INSTALL_CSHARPMODULE_DIR - VTK/C# Module install dir\n\n# GDCM_INSTALL_JAVAMODULE_DIR       - Java Module install dir (JNI glue)\n\n# GDCM_INSTALL_JARMODULE_DIR        - Java Module install dir (JAR)\n\n# GDCM_VTK_INSTALL_JAVAMODULE_DIR   - VTK/Java Module install dir (JNI glue)\n\n# GDCM_VTK_INSTALL_JARMODULE_DIR    - VTK/Java Module install dir (JAR)\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# Install directories\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#set(GDCM_INSTALL_LIB_DIR \"lib/${PROJECT_NAME}\")\n",
        "Line" : 255,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#System stuff, mainly for packager or paranoid people with up-to-date lib moto\n",
        "Line" : 332,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Will search for the uuid_generate symbols.\n\n# Can be in libSystem.dylib or libuuid.so\n",
        "Line" : 337,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# Very advanced user option:\n\n# This will cause building of the broken JPEG library released by the Standford PVRG group:\n",
        "Line" : 393,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Very advanced behavior only use if you want to keep backward compatible\n\n# behavior but possibly incorrect behavior.\n",
        "Line" : 409,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# If user say so, then this is a requirement !\n",
        "Line" : 425,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# If user say so, then this is a requirement !\n",
        "Line" : 438,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "# If user say so, then this is a requirement !\n",
        "Line" : 446,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 460,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Add the testing directories\n",
        "Line" : 468,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# CACHE BOOL \"\" FORCE)\n",
        "Line" : 472,
        "CharPositionInLine" : 43
      },
      "43" : {
        "Text" : "# Hide BUILD_TESTING as user tend to always turn all options on and then complains when something\n\n# does not work 'by default'\n",
        "Line" : 477,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# GDCM_BUILD_TESTING)\n",
        "Line" : 479,
        "CharPositionInLine" : 32
      },
      "45" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 481,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Python install\n\n#find_package(PythonInterp REQUIRED)\n\n#macro(GET_PYTHON_SITE_PACKAGE dir)\n\n#  execute_process(\n\n#  COMMAND ${PYTHON_EXECUTABLE} \"-c\" \"from distutils import sysconfig; print sysconfig.get_python_lib()\"\n\n#  #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@\n\n#  RESULT_VARIABLE import_res\n\n#  OUTPUT_VARIABLE import_output\n\n#  ERROR_VARIABLE  import_error\n\n#    OUTPUT_STRIP_TRAILING_WHITESPACE\n\n#  )\n\n#  #set(dir ${import_output})\n\n#endmacro()\n\n#\n\n#\n\n#GET_PYTHON_SITE_PACKAGE(python_site_package)\n\n#if(import_output)\n\n#string(LENGTH ${import_output} len)\n\n## let's remove the \"/usr/lib\" part...\n\n#math(EXPR fileend \"${len} - 9\")\n\n#string(SUBSTRING ${import_output} 9 ${fileend} dummy1)\n\n#if(UNIX)\n\n#  set(python_site_package ${dummy1})\n\n#  message(${python_site_package})\n\n#endif()\n\n#endif()\n",
        "Line" : 488,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# On unix one have: \"python2.4/site-packages\"\n\n# while on Win32: \"c:/Python24/Lib/site-packages/\"\n\n# give up for now and place python modules stuff in a general 'python' subdir\n",
        "Line" : 516,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# Typical runtime env should be then\n\n# (assuming CMAKE_INSTALL_PREFIX:PATH=/tmp/local)\n\n# One would do:\n\n#   export PYTHONPATH=/tmp/local/lib/python/site-packages/gdcm-2.1\n\n#   export LD_LIBRARY_PATH=/tmp/local/lib/\n\n#   python\n\n#   > import gdcm\n",
        "Line" : 520,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Wrapping\n",
        "Line" : 529,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# override with cmake -DGDCM_DEFAULT_JAVA_VERSION:STRING=1.5 if you dare\n",
        "Line" : 543,
        "CharPositionInLine" : 4
      },
      "51" : {
        "Text" : "# Expose a way to pass -fPIC to static libs of gdcm core, while still build wrapped language as shared lib:\n",
        "Line" : 555,
        "CharPositionInLine" : 2
      },
      "52" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# we need to link against CoreFoundation so that we can use CFBundle to get the executable path.\n",
        "Line" : 577,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Allow user to set a postfix symbol to a target library name (eg. 'd')\n",
        "Line" : 586,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 595,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# Add a target so that the documentation can be build from the\n\n# root dir\n",
        "Line" : 597,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# Need to add_subdirectory in Source/Common before Wrapping\n\n# to have gdcmConfigure.h around\n",
        "Line" : 607,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# After Wrapping please\n",
        "Line" : 625,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Need pthread for the following class:\n",
        "Line" : 631,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# Big endian thing:\n",
        "Line" : 635,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 659,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 668,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# needed here so that we have VTK_WRAP_PYTHON and al. available\n",
        "Line" : 677,
        "CharPositionInLine" : 4
      },
      "63" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 686,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 697,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# CPack stuff\n",
        "Line" : 704,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# disabled for ITK distribution of gdcm\n",
        "Line" : 706,
        "CharPositionInLine" : 20
      },
      "67" : {
        "Text" : "# There is a bug in NSIS that does not handle full UNIX paths properly. Make\n\n# sure there is at least one set of four (4) backlashes.\n",
        "Line" : 728,
        "CharPositionInLine" : 4
      },
      "68" : {
        "Text" : "# if(${CMAKE_INSTALL_PREFIX} MATCHES ${CPACK_PACKAGE_INSTALL_DIRECTORY})\n\n# else()\n\n# string(REPLACE ${PROJECT_NAME} ${CPACK_PACKAGE_INSTALL_DIRECTORY} dummy ${CMAKE_INSTALL_PREFIX} )\n\n# set(CMAKE_INSTALL_PREFIX ${dummy} CACHE PATH \"\" FORCE)\n\n# endif()\n",
        "Line" : 735,
        "CharPositionInLine" : 4
      },
      "69" : {
        "Text" : "# cygwin stff also copied from cmake\n\n#if(NOT DEFINED CPACK_PACKAGE_FILE_NAME)\n\n#  # if the CPACK_PACKAGE_FILE_NAME is not defined by the cache\n\n#  # default to source package - system, on cygwin system is not\n\n#  # needed\n\n#  if(CYGWIN)\n\n#    set(CPACK_PACKAGE_FILE_NAME \"${CPACK_SOURCE_PACKAGE_FILE_NAME}\")\n\n#  else()\n\n#    set(CPACK_PACKAGE_FILE_NAME\n\n#      \"${CPACK_SOURCE_PACKAGE_FILE_NAME}-${CPACK_SYSTEM_NAME}\")\n\n#  endif()\n\n#endif()\n",
        "Line" : 747,
        "CharPositionInLine" : 2
      },
      "70" : {
        "Text" : "#Cygwin stuff copied from cmake\n",
        "Line" : 760,
        "CharPositionInLine" : 2
      },
      "71" : {
        "Text" : "# make sure package is not Cygwin-unknown, for Cygwin just\n\n# cygwin is good for the system name\n",
        "Line" : 762,
        "CharPositionInLine" : 4
      },
      "72" : {
        "Text" : "#set(CMAKE_SYSTEM_PROCESSOR \"x86_64\")\n\n#set(CPACK_GENERATOR \"TGZ;TBZ2\")\n\n#set(CPACK_SOURCE_GENERATOR \"TGZ;TBZ2\")\n",
        "Line" : 767,
        "CharPositionInLine" : 6
      },
      "73" : {
        "Text" : "# Need to set the architecture for debian package\n",
        "Line" : 774,
        "CharPositionInLine" : 2
      },
      "74" : {
        "Text" : "# bug: missing dep to python...\n",
        "Line" : 776,
        "CharPositionInLine" : 139
      },
      "75" : {
        "Text" : "# List executables\n\n#set(CPACK_PACKAGE_EXECUTABLES \"gdcmviewer\" \"VIEWER\")\n",
        "Line" : 781,
        "CharPositionInLine" : 2
      },
      "76" : {
        "Text" : "# Tell CPack all of the components to install. The \"ALL\"\n\n# refers to the fact that this is the set of components that\n\n# will be included when CPack is instructed to put everything\n\n# into the binary installer (the default behavior).\n",
        "Line" : 793,
        "CharPositionInLine" : 2
      },
      "77" : {
        "Text" : "# Ok this is the complete list of all components:\n",
        "Line" : 834,
        "CharPositionInLine" : 2
      },
      "78" : {
        "Text" : "# Set the displayed names for each of the components to install.\n\n# These will be displayed in the list of components inside the installer.\n",
        "Line" : 837,
        "CharPositionInLine" : 2
      },
      "79" : {
        "Text" : "# Provide descriptions for each of the components to install.\n\n# When the user hovers the mouse over the name of a component,\n\n# the description will be shown in the \"Description\" box in the\n\n# installer. If no descriptions are provided, the \"Description\"\n\n# box will be removed.\n",
        "Line" : 856,
        "CharPositionInLine" : 2
      },
      "80" : {
        "Text" : "# Put the components into two different groups: \"Runtime\" and \"Development\"\n",
        "Line" : 895,
        "CharPositionInLine" : 2
      },
      "81" : {
        "Text" : "# Expand the \"Development\" group by default, since we have so few components.\n\n# Also, provide this group with a description.\n",
        "Line" : 912,
        "CharPositionInLine" : 2
      },
      "82" : {
        "Text" : "# The following is needed for CMake 2.8.3 and above to preserve backward compat\n",
        "Line" : 915,
        "CharPositionInLine" : 4
      },
      "83" : {
        "Text" : "# It doesn't make sense to install the headers without the libraries\n\n# (because you could never use the headers!), so make the headers component\n\n# depend on the libraries component.\n",
        "Line" : 922,
        "CharPositionInLine" : 2
      },
      "84" : {
        "Text" : "# Create two installation types with pre-selected components.\n\n# The \"Developer\" installation has just the library and headers,\n\n# while the \"Full\" installation has everything.\n",
        "Line" : 941,
        "CharPositionInLine" : 2
      },
      "85" : {
        "Text" : "#message(\"${file} is git dir\")\n",
        "Line" : 976,
        "CharPositionInLine" : 8
      },
      "86" : {
        "Text" : "#message(\"${file} is dir\")\n",
        "Line" : 978,
        "CharPositionInLine" : 8
      },
      "87" : {
        "Text" : "#message(\"${file} is file\")\n",
        "Line" : 983,
        "CharPositionInLine" : 6
      },
      "88" : {
        "Text" : "#message(\"${filename} is test, ${filename_length}\")\n",
        "Line" : 987,
        "CharPositionInLine" : 8
      },
      "89" : {
        "Text" : "# Need to remove 'Test' and '.cxx'\n",
        "Line" : 988,
        "CharPositionInLine" : 56
      },
      "90" : {
        "Text" : "#message(\"${classname} is tested\")\n",
        "Line" : 990,
        "CharPositionInLine" : 8
      },
      "91" : {
        "Text" : "#PROCESSONEDIR(\n\n#  ${CMAKE_CURRENT_SOURCE_DIR}/Testing/Source/Common\n\n#  theoutput\n\n#)\n\n#message(\"${theoutput}\")\n",
        "Line" : 997,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "# For DICOM Q/R testing\n",
        "Line" : 1003,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Need to be the last operation:\n",
        "Line" : 1019,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 94
    },
    "CTestConfig.cmake" : {
      "ObjectId" : "15924fb59faac46bcc1a110bba832b87c31908a3",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/CMakeLists.txt" : {
      "ObjectId" : "ca76e1badf2427097de6ceae19b89b2092b195e2",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Choose behavior based on whether we are building inside the GDCM tree.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We are building outside the GDCM tree.  Build the examples directly.\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Find and load the VTK configuration.\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "Examples/Csharp/CMakeLists.txt" : {
      "ObjectId" : "54a0f533c8be98a4c72606bc1805dbfb6a6c2c68",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# C# examples\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#SortImage2\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# http://www.cmake.org/Wiki/CMake_FAQ#How_can_I_add_a_dependency_to_a_source_file_which_is_generated_in_a_subdirectory.3F\n\n# Tell CMake the source won't be available until build time.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make sure the source is generated before the executable builds.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Make sure the gdcm-sharp.dll is generated before the exampls builds.\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# TODO:\n\n#if(BUILD_EXAMPLES)\n\n#  ADD_CSHARP_TEST(HelloWorldCSharp ${GDCM_EXECUTABLE_DIR}/HelloWorld.exe ${GDCM_DATA_ROOT}/012345.002.050.dcm)\n\n#endif()\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "Examples/Cxx/CMakeLists.txt" : {
      "ObjectId" : "ff2cefafd9144a1c48df7aa28a6008ea07621743",
      "LastModified" : "2019-03-08T08:30:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build the GDCM examples\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add the include paths\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# FIXME:\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# error C1083: Cannot open include file: 'zconf.h'\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# cmake 2.6.4 does not set it to advanced\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#ReadAndDumpDICOMDIR2 # commented out since requires C++11\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#set(EXAMPLES_SRCS\n\n#  ${EXAMPLES_SRCS}\n\n#  StreamImageReaderTest\n\n#  Extracting_All_Resolution\n\n#  Fake_Image_Using_Stream_Image_Writer\n\n#  )\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# qtGUI will resolved QImage symbol\n\n# qtcore will resolve qstring symbols\n",
        "Line" : 111,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#../../bin/libgdcmDSED.dll.a(d000469.o)(.text+0x0): multiple definition of `gdcm::VL gdcm::Item::GetLength<gdcm::ImplicitDataElement>() const'\n\n#CMakeFiles/ReadExplicitLengthSQIVR.dir/ReadExplicitLengthSQIVR.obj(.text$_ZNK4gdcm4Item9GetLengthINS_19ImplicitDataElementEEENS_2VLEv[gdcm::VL gdcm::Item::GetLength<gdcm::ImplicitDataElement>() const]+0x0):ReadExplicitLengthSQIVR.cxx: first defined here\n\n#../../bin/libgdcmDSED.dll.a(d000252.o)(.text+0x0): multiple definition of `std::istream& gdcm::DataSet::ReadNested<gdcm::ImplicitDataElement, gdcm::SwapperDoOp>(std::istream&)'\n\n#CMakeFiles/ReadExplicitLengthSQIVR.dir/ReadExplicitLengthSQIVR.obj(.text$_ZN4gdcm7DataSet10ReadNestedINS_19ImplicitDataElementENS_11SwapperDoOpEEERSiS4_[std::basic_istream<char, std::char_traits<char> >& gdcm::DataSet::ReadNested<gdcm::ImplicitDataElement, gdcm::SwapperDoOp>(std::basic_istream<char, std::char_traits<char> >&)]+0x0):ReadExplicitLengthSQIVR.cxx: first defined here\n\n#../../bin/libgdcmDSED.dll.a(d000253.o)(.text+0x0): multiple definition of `std::istream& gdcm::DataSet::ReadNested<gdcm::ImplicitDataElement, gdcm::SwapperNoOp>(std::istream&)'\n\n#CMakeFiles/ReadExplicitLengthSQIVR.dir/ReadExplicitLengthSQIVR.obj(.text$_ZN4gdcm7DataSet10ReadNestedINS_19ImplicitDataElementENS_11SwapperNoOpEEERSiS4_[std::basic_istream<char, std::char_traits<char> >& gdcm::DataSet::ReadNested<gdcm::ImplicitDataElement, gdcm::SwapperNoOp>(std::basic_istream<char, std::char_traits<char> >&)]+0x0):ReadExplicitLengthSQIVR.cxx: first defined here\n\n#../../bin/libgdcmDSED.dll.a(d000271.o)(.text+0x0): multiple definition of `std::istream& gdcm::DataSet::ReadWithLength<gdcm::ImplicitDataElement, gdcm::SwapperDoOp>(std::istream&, gdcm::VL&)'\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "Examples/Java/CMakeLists.txt" : {
      "ObjectId" : "1acd96335cd2180a981e815470359c3f9a7faffb",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# javac, jar\n",
        "Line" : 1,
        "CharPositionInLine" : 57
      },
      "1" : {
        "Text" : "#${JNI_INCLUDE_PATH}\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# 3. ok now add the target\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# make sure gdcm.jar is built\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Examples/Python/CMakeLists.txt" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Source/Attribute/CMakeLists.txt" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Source/CMakeLists.txt" : {
      "ObjectId" : "8281ebf1cfa5e0a4c39006947e16b1aacaa7592c",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ...\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Source/Common/CMakeLists.txt" : {
      "ObjectId" : "fe67c06e625ff9b65cc401f65d62e7319066d01c",
      "LastModified" : "2019-03-08T08:30:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Rebuild gdcm whenever a file starting with gdcm* is modified\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# configure the .h file\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#if(WIN32)\n\n#  if (BUILD_SHARED_LIBS)\n\n#    add_definitions(-DPOLARSSL_DLL)\n\n#  endif ()\n\n#endif()\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# see bug #324\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# See http://public.kitware.com/Bug/view.php?id=8246\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#C99\n\n#CHECK_FUNCTION_EXISTS(strcasecmp  GDCM_HAVE_STRCASECMP)\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#CHECK_FUNCTION_EXISTS(strncasecmp GDCM_HAVE_STRNCASECMP)\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#CHECK_FUNCTION_EXISTS(snprintf    GDCM_HAVE_SNPRINTF)\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#CHECK_SYMBOL_EXISTS(strptime \"time.h\"    GDCM_HAVE_STRPTIME)\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#M$ extension:\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# This is C99\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#include(CheckSymbolExists)\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# json-c API changed:\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# FIXME ??\n",
        "Line" : 78,
        "CharPositionInLine" : 19
      },
      "14" : {
        "Text" : "#  \"\\#include <openssl/cms.h>\\nint main() { CMS_add0_recipient_key(0); return 0;}\"\n\n#HAVE_CMS_RECIPIENT_KEY)\n",
        "Line" : 81,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Provide compatibility options.\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Add the include paths\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#if(NOT GDCM_USE_SYSTEM_POLARSSL)\n\n#include_directories(\n\n#  \"${GDCM_SOURCE_DIR}/Utilities/gdcmpolarssl/include\"\n\n#)\n\n#endif()\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#gdcmCryptographicMessageSyntax.cxx\n",
        "Line" : 141,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "#target_link_libraries(gdcmCommon ${GDCM_ZLIB_LIBRARIES}) # ${GDCM_POLARSSL_LIBRARIES})\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#set_target_properties(gdcmCommon PROPERTIES INTERFACE_LINK_LIBRARIES \"\" LINK_INTERFACE_LIBRARIES \"\")\n",
        "Line" : 216,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# libs\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# PDB\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# include files\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Install generated files\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "Source/DataDictionary/CMakeLists.txt" : {
      "ObjectId" : "8b071dd0548588c3d63632d83c4dde3a27ab8692",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the srcs for Data Dictionary\n\n# DICT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add the include paths\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# DICOM dictionary stuff\n\n#set(PREP_DICT_SRCS\n\n#  ${GDCM_SOURCE_DIR}/Source/DataDictionary/gdcmDictConverter.cxx\n\n#  ${GDCM_SOURCE_DIR}/Source/DataDictionary/gdcmPrepDict.cxx\n\n#  )\n\n#\n\n#add_executable(PrepDict ${PREP_DICT_SRCS}\n\n#  \"${GDCM_SOURCE_DIR}/Source/Common/gdcmSwapCode.cxx\"\n\n#  \"${GDCM_SOURCE_DIR}/Source/DataStructureAndEncodingDefinition/gdcmVR.cxx\"\n\n#  \"${GDCM_SOURCE_DIR}/Source/DataStructureAndEncodingDefinition/gdcmVM.cxx\"\n\n#  )\n\n#\n\n#add_executable(PrepGroupName\n\n#  ${GDCM_SOURCE_DIR}/Source/DataDictionary/gdcmPrepGroupName.cxx\n\n#  )\n\n#\n\n#  get_target_property( PREP_DICT\n\n#    PrepDict\n\n#    LOCATION\n\n#    )\n\n#  get_target_property( PREP_GROUPNAME\n\n#    PrepGroupName\n\n#    LOCATION\n\n#    )\n\n#set(DICT_LIST\n\n#  DICOMV3\n\n#  NIH\n\n#  SPI\n\n#  )\n\n#\n\n## List of file needed to get all dict into c++ code\n\n#set(DICT_SRCS)\n\n#set(DEFAULT_DICTS)\n\n#foreach(dict ${DICT_LIST})\n\n#  set(CXX_DICT ${GDCM_BINARY_DIR}/Source/DataDictionary/gdcm${dict}.cxx)\n\n#  set(DICT_SRCS ${DICT_SRCS} ${CXX_DICT})\n\n#  add_custom_command(\n\n#    OUTPUT    ${CXX_DICT}\n\n#    COMMAND   ${PREP_DICT}\n\n#    ARGS      ${GDCM_SOURCE_DIR}/Source/DataDictionary/${dict}.dic\n\n#              ${CXX_DICT}\n\n#              ${dict}\n\n#    DEPENDS   ${GDCM_SOURCE_DIR}/Source/DataDictionary/${dict}.dic\n\n#              ${PREP_DICT}\n\n#    COMMENT   \"Generating gdcm${dict}.cxx based on ${dict}.dic\"\n\n#    )\n\n#endforeach()\n\n#\n\n#add_custom_command(\n\n#  OUTPUT    ${GDCM_BINARY_DIR}/Source/DataDictionary/gdcmDefaultGroupNames.cxx\n\n#  COMMAND   ${PREP_GROUPNAME}\n\n#  ARGS      ${GDCM_SOURCE_DIR}/Source/DataDictionary/GroupName.dic\n\n#            ${GDCM_BINARY_DIR}/Source/DataDictionary/gdcmDefaultGroupNames.cxx\n\n#  DEPENDS   ${GDCM_SOURCE_DIR}/Source/DataDictionary/GroupName.dic\n\n#            ${PREP_GROUPNAME}\n\n#  COMMENT   \"Generating gdcmDefaultGroupNames.cxx based on GroupName.dic\"\n\n#  )\n\n#\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Since the file gdcmDefaultDicts.cxx does not exist, mark it as GENERATED:\n\n#set_source_files_properties(\n\n#  \"${GDCM_BINARY_DIR}/Source/gdcmDefaultDicts.cxx\" GENERATED)\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#configure_file(\n\n#  ${GDCM_SOURCE_DIR}/Source/DataDictionary/gdcmDefaultDicts.cxx\n\n#  ${GDCM_BINARY_DIR}/Source/DataDictionary/gdcmDefaultDicts.cxx\n\n#  @ONLY\n\n#  )\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#${DICT_SRCS} # All the dicts cxx resources\n",
        "Line" : 85,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# pseudo generated file\n",
        "Line" : 88,
        "CharPositionInLine" : 23
      },
      "7" : {
        "Text" : "# pseudo generated file\n",
        "Line" : 89,
        "CharPositionInLine" : 30
      },
      "8" : {
        "Text" : "#set_target_properties(gdcmDICT PROPERTIES INTERFACE_LINK_LIBRARIES \"\" LINK_INTERFACE_LIBRARIES \"\")\n",
        "Line" : 102,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# libs\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# PDB\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# include files\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Install Part6.xml\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "Source/DataStructureAndEncodingDefinition/CMakeLists.txt" : {
      "ObjectId" : "af9a2407a8da4d61086c149a3eab02b0982ab2ab",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the srcs for Data Structure and Encoding Definitions\n\n# DSED\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# dual compilation (namespace gdcm_ns), all the following either directly\n\n# reference code using GDCM_SUPPORT_BROKEN_IMPLEMENTATION or indirectly\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# FileMeta is class member\n",
        "Line" : 11,
        "CharPositionInLine" : 15
      },
      "3" : {
        "Text" : "# subclass of DataSet\n",
        "Line" : 12,
        "CharPositionInLine" : 30
      },
      "4" : {
        "Text" : "# SetFromModality takes a DataSet\n",
        "Line" : 16,
        "CharPositionInLine" : 23
      },
      "5" : {
        "Text" : "# friend decl\n",
        "Line" : 21,
        "CharPositionInLine" : 16
      },
      "6" : {
        "Text" : "# need to prepare duplicate files to help cmake handle setting compile\n\n# definitions (cmake cannot handle duplicate source file in same target).\n\n# this trick allows us to avoid a static compilation which may not be portable\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# the following source code do not need a duplicate compilation to handle\n\n# GDCM_SUPPORT_BROKEN_IMPLEMENTATION\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# hook to call gdcmstrict API\n",
        "Line" : 45,
        "CharPositionInLine" : 24
      },
      "9" : {
        "Text" : "#gdcmParser.cxx\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Add the include paths\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Bin:\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# src:\n",
        "Line" : 73,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# zlib stuff are actually included (template) so we need to link them here.\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#set(_ill \"gdcmCommon\")\n\n#set_target_properties(gdcmDSED PROPERTIES INTERFACE_LINK_LIBRARIES \"${_ill}\" LINK_INTERFACE_LIBRARIES \"${_ill}\")\n",
        "Line" : 93,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# libs\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# PDB\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# include files\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "Source/InformationObjectDefinition/CMakeLists.txt" : {
      "ObjectId" : "24d547ba748fef7ea0736d6d1d1f78eb77e8c9cc",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the srcs for the Information Object Definition\n\n# IOD\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#gdcmXMLDictReader.cxx\n\n#gdcmXMLPrivateDictReader.cxx\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# expat stuff\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add the include paths\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# expat_mangle.h\n",
        "Line" : 40,
        "CharPositionInLine" : 43
      },
      "5" : {
        "Text" : "#set(_ill \"gdcmDSED;gdcmCommon\")\n\n#set_target_properties(gdcmIOD PROPERTIES INTERFACE_LINK_LIBRARIES \"${_ill}\" LINK_INTERFACE_LIBRARIES \"${_ill}\")\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# libs\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# PDB\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# include files\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Install Part3.xml / Part4.xml\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Populate GDCM_DATA_IMAGES:\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "Source/MediaStorageAndFileFormat/CMakeLists.txt" : {
      "ObjectId" : "b444bf27c62206973b9be1101fa8af353260800d",
      "LastModified" : "2019-03-08T08:30:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the srcs for Media Storage And FileFormat\n\n# MSFF\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#gdcmStreamImageWriter.cxx\n",
        "Line" : 86,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Do the proper thing when building static...if only there was configured\n\n# headers or def files instead\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add the include paths\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# FIXME:\n",
        "Line" : 134,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# CharLS\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#include_directories(\"${GDCM_BINARY_DIR}/Utilities/gdcmcharls\")\n",
        "Line" : 141,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# uuid_mangle.h\n",
        "Line" : 174,
        "CharPositionInLine" : 44
      },
      "8" : {
        "Text" : "# gdcmPVRGCodec calls gdcmjpeg\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# main libs:\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# I am getting:\n",
        "Line" : 200,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# CMakeFiles/gdcmMSFF.dir/gdcmScanner.obj(.text$_ZN4gdcm6ReaderC1Ev[gdcm::Reader::Reader()]+0x3a):gdcmScanner.cxx: variable 'vtable for gdcm::Reader' can't be auto-imported. Please read the documentation for ld's --enable-auto-import for details.\n\n# CMakeFiles/gdcmMSFF.dir/gdcmImageReader.obj(.text$_ZN4gdcm6ReaderC2Ev[gdcm::Reader::Reader()]+0x3a):gdcmImageReader.cxx: variable 'vtable for gdcm::Reader' can't be auto-imported. Please read the documentation for ld's --enable-auto-import for details.\n\n# CMakeFiles/gdcmMSFF.dir/gdcmImageWriter.obj(.text$_ZN4gdcm6WriterC2Ev[gdcm::Writer::Writer()]+0x3a):gdcmImageWriter.cxx: variable 'vtable for gdcm::Writer' can't be auto-imported. Please read the documentation for ld's --enable-auto-import for details.\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#if(HAVE_UUIDCREATE)\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# For UuidCreate\n\n# http://msdn.microsoft.com/en-us/library/aa379205(VS.85).aspx\n",
        "Line" : 209,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "#endif()\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# handling of static lib within shared is a mess:\n\n#target_link_libraries(gdcmMSFF gdcmrle)\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#set(_ill \"gdcmDSED;gdcmDICT;gdcmIOD\")\n\n#set_target_properties(gdcmMSFF PROPERTIES INTERFACE_LINK_LIBRARIES \"${_ill}\" LINK_INTERFACE_LIBRARIES \"${_ill}\")\n",
        "Line" : 223,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# libs\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# PDB\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# include files\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "Source/MessageExchangeDefinition/CMakeLists.txt" : {
      "ObjectId" : "4f19dbd45a96411a661af072c2dee98a430cd694",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the include paths\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# local.h\n\n# config.h\n",
        "Line" : 19,
        "CharPositionInLine" : 53
      },
      "2" : {
        "Text" : "#set_target_properties(gdcmMEXD PROPERTIES INTERFACE_LINK_LIBRARIES \"\" LINK_INTERFACE_LIBRARIES \"\")\n",
        "Line" : 106,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# libs\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# PDB\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# include files\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "Testing/CMakeLists.txt" : {
      "ObjectId" : "2f4ba4388997b7bda4e87ca68fc67f84e929adf1",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Here is one cool test: you can pretty much test all configuration using\n\n# ctest...well except one, the case where a user set BUILD_TESTING=OFF\n\n# since this would deactivate the dashboard and would not submit...doh!\n\n# So instead let's create a test that would build gdcm with this option\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Testing/Source/Attribute/CMakeLists.txt" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Testing/Source/CMakeLists.txt" : {
      "ObjectId" : "2f4151ab72c89a46bf6e4bb914c5a51ea74e4b5e",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# All the tests\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ADD_SUBDIRECTORY is required here to properly get the definition variables later on:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Get the variables defined in Data add_subdirectory:\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Testing/Source/Common/CMakeLists.txt" : {
      "ObjectId" : "1577b6b2acefe0fe55b4487058f5741844e5a576",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Testing/Source/Common/Cxx/CMakeLists.txt" : {
      "ObjectId" : "7130b18788f437c1a1f0c06b22e463650d0553fe",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the tests for Common\n\n# Common\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add the include paths\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Loop over files and create executables\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Testing/Source/Common/Python/CMakeLists.txt" : {
      "ObjectId" : "629709ff8b9b7ca76f7ea01237dc46be590114cb",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the tests for gdcm-python\n\n# gdcm-python\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Loop over files and create executables\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Testing/Source/Data/CMakeLists.txt" : {
      "ObjectId" : "166e2d80dc5bb3310ff53745227dddb8259b9b8e",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We need to test the reading of all dicom images in the gdcmData directory\n\n# First parse this directory and extract all images\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Those files do not have any extension, special regex:\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Case sensitive system:\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# GLOB expression !\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Same for DICOMDIR:\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# List of images that are technically difficult to read\n\n# Hopefully we will soon be able to read them\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# grrrrrr do not handle swapping correctly (implicit dataset are such a pain)\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Papyrus:\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# No way to read this image:\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Toshiba US Private Data Storage 1.2.392.200036.9116.7.8.1.1.1\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# TODO, nasty:\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# This file is incorrect\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Problem with RLE\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# TestImageChangeTransferSyntax1\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Openjpeg / Part 2:\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Remove this one for now:\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# https://github.com/team-charls/charls/issues/16\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# MITRA_CORNELL\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# The following should really fails according to JPEG spec, IJG is failing and even when forcing\n\n# decompression using IJG output is different from PVRG...\n\n# Apparently pvrg likes it this way...\n\n#  PHILIPS_Gyroscan-12-Jpeg_Extended_Process_2_4.dcm\n",
        "Line" : 76,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# can't read odd length\n",
        "Line" : 98,
        "CharPositionInLine" : 44
      },
      "21" : {
        "Text" : "# odd length\n",
        "Line" : 99,
        "CharPositionInLine" : 28
      },
      "22" : {
        "Text" : "# odd length\n",
        "Line" : 100,
        "CharPositionInLine" : 48
      },
      "23" : {
        "Text" : "# odd length\n",
        "Line" : 101,
        "CharPositionInLine" : 57
      },
      "24" : {
        "Text" : "# odd length\n",
        "Line" : 102,
        "CharPositionInLine" : 46
      },
      "25" : {
        "Text" : "# odd length\n",
        "Line" : 103,
        "CharPositionInLine" : 34
      },
      "26" : {
        "Text" : "# odd length\n",
        "Line" : 105,
        "CharPositionInLine" : 44
      },
      "27" : {
        "Text" : "# odd length\n",
        "Line" : 109,
        "CharPositionInLine" : 27
      },
      "28" : {
        "Text" : "# Populate GDCM_DATA_FILENAMES:\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 29
    },
    "Testing/Source/DataDictionary/CMakeLists.txt" : {
      "ObjectId" : "1577b6b2acefe0fe55b4487058f5741844e5a576",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Testing/Source/DataDictionary/Cxx/CMakeLists.txt" : {
      "ObjectId" : "771e5ceae7e4b67bf50b6c9717b75d9367ec4914",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the tests for Data Dictionary\n\n# DICT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add the include paths\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Loop over files and create executables\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Testing/Source/DataDictionary/Python/CMakeLists.txt" : {
      "ObjectId" : "5c3e62c034270c1cfa78e8bc17bfa332bcd525ce",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the tests for gdcm-python\n\n# gdcm-python\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Loop over files and create executables\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Testing/Source/DataStructureAndEncodingDefinition/CMakeLists.txt" : {
      "ObjectId" : "583adbe2f84ef65969e9a7c13f2130eddc578212",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Testing/Source/DataStructureAndEncodingDefinition/Cxx/CMakeLists.txt" : {
      "ObjectId" : "c07770b665171b72e825c9293859cab0c9d54cc9",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the tests for Data Structure and Encoding Definitions\n\n# DSED\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#TestReadPatientName\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#TestByteBuffer\n\n#TestByteValue\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#TestReader4 # FIXME\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#TestVRDS\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#TestExplicitDataElement\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#TestImplicitDataElement\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#TestParser\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#TestValue\n\n#TestTorture\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# The test expect to be able to set fr as locale only turn if user\n\n# set the appropriate & hidden cmake variable\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Need mmap\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Add the include paths\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Loop over files and create executables\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# FIXME\n\n#add_executable(TestAttribute2 TestAttribute2.cxx)\n\n#add_executable(TestAttribute3 TestAttribute3.cxx)\n\n#add_executable(TestAttribute4 TestAttribute4.cxx)\n\n#add_executable(TestAttribute5 TestAttribute5.cxx)\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "Testing/Source/DataStructureAndEncodingDefinition/Java/CMakeLists.txt" : {
      "ObjectId" : "6e07cdd9861e13d99201f5f592654880b5cbf116",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the tests for gdcm-java\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Do not change anything after here:\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# javac, jar\n",
        "Line" : 9,
        "CharPositionInLine" : 57
      },
      "3" : {
        "Text" : "# 3. ok now add the target\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# make sure gdcm.jar is built\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Testing/Source/DataStructureAndEncodingDefinition/Python/CMakeLists.txt" : {
      "ObjectId" : "89d9e38c0cfd0191ad5b1de4130bf6d553b5d1b2",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the tests for gdcm-python\n\n# gdcm-python\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Loop over files and create executables\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Testing/Source/InformationObjectDefinition/CMakeLists.txt" : {
      "ObjectId" : "1577b6b2acefe0fe55b4487058f5741844e5a576",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Testing/Source/InformationObjectDefinition/Cxx/CMakeLists.txt" : {
      "ObjectId" : "b84f12f2a44ec7189c2f786e08ce2a3167ec09db",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the tests for Information Object Definition\n\n# IOD\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#TestXMLDictReader\n\n#TestXMLPrivateDictReader\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Add the include paths\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# gdcmTables.h\n",
        "Line" : 33,
        "CharPositionInLine" : 58
      },
      "4" : {
        "Text" : "# Loop over files and create executables\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Testing/Source/InformationObjectDefinition/Python/CMakeLists.txt" : {
      "ObjectId" : "8408758988b8dd8fb00b82d5a14c14f31c020d1c",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the tests for gdcm-python\n\n# gdcm-python\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Loop over files and create executables\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Testing/Source/MediaStorageAndFileFormat/CMakeLists.txt" : {
      "ObjectId" : "aa144f958da998ae54e29f10404bb505168ec0cc",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Always\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Testing/Source/MediaStorageAndFileFormat/Csharp/CMakeLists.txt" : {
      "ObjectId" : "adb42871d7b47849e2567bb7c69307e373df54e0",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# C# MSFF tests\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add test\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "Testing/Source/MediaStorageAndFileFormat/Cxx/CMakeLists.txt" : {
      "ObjectId" : "10d21203409f139056930e53962530b186b94b8c",
      "LastModified" : "2019-03-08T08:30:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the tests for Media Storage and File Format\n\n# MSFF\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#TestIconImageGenerator\n\n#TestIconImageGenerator2\n\n#TestIconImageGenerator3\n\n#TestIconImageGenerator4\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#TestImageChangePhotometricInterpretation\n\n#TestImageChangePhotometricInterpretation2 # does not compile on mingw...\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# see below\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#TestUIDGenerator3\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#TestStreamImageWriter\n",
        "Line" : 74,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Must be after TestImageChangeTransferSyntax4\n\n# Must be after TestImageChangeTransferSyntax4\n",
        "Line" : 120,
        "CharPositionInLine" : 27
      },
      "7" : {
        "Text" : "# Those tests requires that openssl be linked in:\n",
        "Line" : 123,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# gdcmDataExtra\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Add the include paths\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Loop over files and create executables\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# We can only run the dcmtk cross-checking test *only* after all the tests have run\n\n# in particular once the TestWriter is done.\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# -M : load short tags\n\n# -dc: disable correction\n",
        "Line" : 207,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# Repeat for dcdump\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# There is a new test that compress all images using the jpeg compression alg:\n\n# try to decompress them with dcmtk:\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Special handling of the DICOMDIR files:\n",
        "Line" : 243,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "#message(\"IS DICOMDIR ${filename_name}\")\n",
        "Line" : 246,
        "CharPositionInLine" : 10
      },
      "17" : {
        "Text" : "# Special handling of the DICOMDIR files:\n",
        "Line" : 265,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "#message(\"IS DICOMDIR ${filename_name}\")\n",
        "Line" : 268,
        "CharPositionInLine" : 10
      },
      "19" : {
        "Text" : "#\n",
        "Line" : 271,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "#if(EXISTS \"${GDCM_TEMP_DIRECTORY}/TestImageChangeTransferSyntax5/${filename_name}\")\n",
        "Line" : 285,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "# Special handling of the DICOMDIR files:\n",
        "Line" : 289,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "#message(\"IS DICOMDIR ${filename_name}\")\n",
        "Line" : 292,
        "CharPositionInLine" : 10
      },
      "23" : {
        "Text" : "#endif()\n\n#\n",
        "Line" : 295,
        "CharPositionInLine" : 8
      },
      "24" : {
        "Text" : "# Need to SET_TESTS_PROPERTIES only *after* the loop is done (test need to have been declared first)\n",
        "Line" : 302,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# No pixel data\n",
        "Line" : 306,
        "CharPositionInLine" : 6
      },
      "26" : {
        "Text" : "# No pixel data\n",
        "Line" : 310,
        "CharPositionInLine" : 6
      },
      "27" : {
        "Text" : "# No pixel data\n",
        "Line" : 314,
        "CharPositionInLine" : 6
      },
      "28" : {
        "Text" : "# It is missing the very last pixel, so technically is illegal\n",
        "Line" : 316,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 29
    },
    "Testing/Source/MediaStorageAndFileFormat/Java/CMakeLists.txt" : {
      "ObjectId" : "f966b0daaed0fb59a5985761de54a422b0ffad4d",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the tests for gdcm-java\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Do not change anything after here:\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# javac, jar\n",
        "Line" : 7,
        "CharPositionInLine" : 57
      },
      "3" : {
        "Text" : "# 3. ok now add the target\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# make sure gdcm.jar is built\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Testing/Source/MediaStorageAndFileFormat/Python/CMakeLists.txt" : {
      "ObjectId" : "2f6397454587946762f1db7bce89ed50d22090cf",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the tests for gdcm-python\n\n# gdcm-python\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#TestPythonFilter\n\n#TestStringFilter\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# need dcmdrle and dcmdjpeg\n",
        "Line" : 25,
        "CharPositionInLine" : 19
      },
      "3" : {
        "Text" : "# Loop over files and create executables\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Special test that need extra arg:\n\n# TestKakaduDecompressionMD5\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Testing/Source/MessageExchangeDefinition/CMakeLists.txt" : {
      "ObjectId" : "35f9732a938a3b073bdf94e86007916ffcd31b49",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Testing/Source/MessageExchangeDefinition/Cxx/CMakeLists.txt" : {
      "ObjectId" : "a053bda41e4339a75f023619cf6fd8c6c0651dd8",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# MEXD Testing\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#TestULTransitionTable # symbols are not exported, mainly used for debugging\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Add the include paths\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Loop over files and create executables\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# execute_process(COMMAND ${DCMTK_DCMQRSCP_EXECUTABLE}\n\n#   --verbose --debug -c ${CMAKE_CURRENT_BINARY_DIR}/dcmqrscp.cfg)\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Utilities/C99/CMakeLists.txt" : {
      "ObjectId" : "bab77595d7cab0ede47864945aec9bdd453aa0a6",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# C99 install rules:\n\n#if(WIN32 AND NOT CYGWIN)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Utilities/CMakeLists.txt" : {
      "ObjectId" : "054ec525b06aad400c40dfe3109b81a08b0c2643",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Wrapping and stuff\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Do jpeg (8,12, 16 lossly lossless). From ijg\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Do expat\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Do openjpeg (jpeg2000 implementation)\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Do jpegls (JPEG-LS aka near lossless implementation)\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Do md5\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Do zlib\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Do getopt\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# you could be running mingw32 on linux in which case you do NOT want the gdcmuuid lib\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Do C99\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#if(NOT GDCM_INSTALL_NO_DEVELOPMENT)\n\n##  file(GLOB header_files \"*.h\" \"*.txx\")\n\n#  install(FILES\n\n##${header_files}\n\n#gdcm_expat.h\n\n##gdcm_md5.h # In an install tree there should not be the need for the md5 lib...\n\n#gdcm_openjpeg.h\n\n#gdcm_uuid.h\n\n#gdcm_zlib.h\n\n#    DESTINATION ${GDCM_INSTALL_INCLUDE_DIR} COMPONENT Headers\n\n#  )\n\n#endif()\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#if(GDCM_USE_KWSTYLE)\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#endif()\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#set(SOCKETXX_NAMESPACE \"GDCMSOCKETXX\")\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "Utilities/KWStyle/CMakeLists.txt" : {
      "ObjectId" : "228d5009579f93dea23f3ab5c6015a1b60638ea8",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# GDCM uses KWStyle for checking the coding style\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#configure_file(${GDCM_SOURCE_DIR}/Utilities/KWStyle/GDCMMoreChecks.kws.xml.in\n\n#             ${GDCM_BINARY_DIR}/GDCMMoreChecks.kws.xml)\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#add_custom_target(MoreStyleChecks\n\n#  COMMAND ${KWSTYLE_EXECUTABLE}\n\n#  -xml ${GDCM_BINARY_DIR}/GDCMMoreChecks.kws.xml -html ${GDCM_BINARY_DIR}/html -o ${GDCM_SOURCE_DIR}/Utilities/KWStyle/GDCMOverwrite.txt -v ${KWSTYLE_ARGUMENTS} -D ${GDCM_BINARY_DIR}/GDCMKWSFiles.txt\n\n#  COMMENT \"Coding Style Checker, more checks enabled\"\n\n#  )\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "Utilities/VTK/Applications/CMakeLists.txt" : {
      "ObjectId" : "c7f1ad963a1fcab66c3fcb461288eb13608b1c59",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build the vtk-gdcm simple viewer\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# vtkImageViewer2\n",
        "Line" : 23,
        "CharPositionInLine" : 15
      },
      "2" : {
        "Text" : "# >= 6.0\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "Utilities/VTK/CMakeLists.txt" : {
      "ObjectId" : "6c3fed0e7f94c6828d366defb8b32e987e2da0ee",
      "LastModified" : "2019-03-08T08:30:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We need VTK\n\n# Technically we require VTK 5.0 and above\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define the src for the vtk-gdcm bridge\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#if( ${VTK_VERSION_MAJOR} LESS 7 )\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#endif()\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# FIXME: temp fix\n\n#if(UNIX)\n\n#  link_directories(/usr/X11R6/lib)\n\n#endif()\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# List the kits from VTK that are needed by this project.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#vtksys\n",
        "Line" : 73,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Use wrapping hints for this project.\n\n#set(VTK_WRAP_HINTS \"${PROJECT_SOURCE_DIR}/hints\")\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Create the instantiator for these classes.\n\n# FIXME: Are instantiator really needed when only doing python wrapping ?\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Setup vtkInstantiator registration for this library's classes.\n",
        "Line" : 110,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#GDCM_EXPORT\n",
        "Line" : 120,
        "CharPositionInLine" : 20
      },
      "11" : {
        "Text" : "#${CMAKE_CURRENT_SOURCE_DIR}/vtkImagePlanarComponentsToComponents.cxx\n",
        "Line" : 133,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "#if(GDCM_HAVE_PTHREAD_H)\n",
        "Line" : 142,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#endif()\n",
        "Line" : 146,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "#\"VTK_${VTKGDCM_NAME}_EXPORT\"\n",
        "Line" : 154,
        "CharPositionInLine" : 9
      },
      "15" : {
        "Text" : "#\"${VTKGDCM_NAME}Configure.h\"\n",
        "Line" : 156,
        "CharPositionInLine" : 9
      },
      "16" : {
        "Text" : "#Hum... not sure why this is needed.\n\n#if(NOT VTK_BUILD_SHARED_LIBS AND GDCM_BUILD_SHARED_LIBS)\n\n#  add_library(vtkgdcm STATIC ${vtkgdcm_SRCS} ${vtkgdcmInstantiator_SRCS})\n\n#else()\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#endif()\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# prevent viral dep of vtkgdcm\n\n#set_property(TARGET ${VTKGDCM_NAME} PROPERTY LINK_INTERFACE_LIBRARIES \"\")\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#${NAMELINK_SKIP}\n",
        "Line" : 179,
        "CharPositionInLine" : 71
      },
      "20" : {
        "Text" : "#if(NAMELINK_ONLY)\n\n#  install(TARGETS vtkgdcm\n\n#    LIBRARY DESTINATION ${GDCM_INSTALL_LIB_DIR} COMPONENT DebugDevel ${NAMELINK_ONLY}\n\n#  )\n\n#  endif()\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#set_source_files_properties(vtkgdcm.i PROPERTIES COMPILE_FLAGS -DUSEACTIVIZ)\n\n#if(GDCM_USE_ACTIVIZ)\n\n#set(CMAKE_SWIG_FLAGS \"-namespace vtkgdcm -dllimport vtkgdcmsharpglue -DUSEACTIVIZ\")\n\n#else()\n\n#set(CMAKE_SWIG_FLAGS \"-namespace vtkgdcm -dllimport vtkgdcmsharpglue\")\n\n#endif()\n\n#separate_arguments(CMAKE_SWIG_FLAGS)\n",
        "Line" : 216,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "#set_target_properties(${SWIG_MODULE_php_vtkgdcm_REAL_NAME} PROPERTIES LINK_INTERFACE_LIBRARIES \"\")\n",
        "Line" : 231,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "#if(NAMELINK_ONLY)\n\n#  install(TARGETS ${SWIG_MODULE_vtkgdcmsharpglue_REAL_NAME}\n\n#    LIBRARY DESTINATION ${GDCM_INSTALL_LIB_DIR} COMPONENT DebugDevel ${NAMELINK_ONLY}\n\n#  )\n\n#  endif()\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# See gdcm bug #3175803\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Let's copy vtkgdcm.php into the bin dir:\n",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#set_source_files_properties(vtkgdcm.i PROPERTIES COMPILE_FLAGS -DUSEACTIVIZ)\n",
        "Line" : 285,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "#set(CMAKE_SWIG_FLAGS \"-namespace vtkgdcm -dllimport vtkgdcmsharpglue -DUSEACTIVIZ\")\n",
        "Line" : 288,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# Stupid cmake-swig module is doing that for us, when not needed\n",
        "Line" : 294,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "#vtkImagePlanarComponentsToComponents\n",
        "Line" : 359,
        "CharPositionInLine" : 6
      },
      "30" : {
        "Text" : "# foreach kit\n",
        "Line" : 366,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "#set(header \"${VTK_${ukit}_HEADER_DIR}/${class}.h\")\n",
        "Line" : 370,
        "CharPositionInLine" : 8
      },
      "32" : {
        "Text" : "# handle full paths\n",
        "Line" : 374,
        "CharPositionInLine" : 8
      },
      "33" : {
        "Text" : "# Build one master in-memory table so that we don't have to re-do all the\n\n# logic in this nested FOREACH loop later on... Instead we'll simply iterate\n\n# the in-memory table built here:\n\n#\n",
        "Line" : 389,
        "CharPositionInLine" : 8
      },
      "34" : {
        "Text" : "#message(FATAL_ERROR \"error: Source file '${source}' does not exist...\")\n",
        "Line" : 401,
        "CharPositionInLine" : 10
      },
      "35" : {
        "Text" : "# Remove the \"Converter\" and \"Destructor\" XML tags that are\n\n# generated by \"castxml\" with a format that is different\n\n# from that of \"gccxml\", and thus that are not properly\n\n# understood by \"mummy\". Removing these tags does not seem\n\n# to modify the output of \"mummy\".\n",
        "Line" : 419,
        "CharPositionInLine" : 10
      },
      "36" : {
        "Text" : "#\n\n# *before* custom command re-arranging:\n\n#\n\n#          OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/csharp/${cxxclass}.cs\n\n#            ${CMAKE_CURRENT_BINARY_DIR}/export-layer/${cxxclass}EL.cxx\n\n#\n\n# Do not list the *.cs or *EL.cxx files as outputs of this custom command.\n\n# If you do, the custom command chains out into other targets rather than\n\n# being defined solely in the \"generate wrappers\" custom target.\n\n#\n\n# The output of this command is the generated sentinel file that the\n\n# \"generate wrappers\" target depends on. The other files are generated as an\n\n# intentional \"side effect\" and after the target is done building, the other\n\n# targets that build the generated source code may build... That is controlled\n\n# by target level dependencies to reduce complexity.\n\n#\n",
        "Line" : 436,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#set(AVDN_INSTALL_TARGETS ${AVDN_INSTALL_TARGETS} \"Kitware.VTK.Unmanaged\")\n\n#add_library(Kitware.VTK.Unmanaged SHARED ${ALLKITS_EL_SOURCES})\n\n#set(unmanaged_targets ${unmanaged_targets} \"Kitware.VTK.Unmanaged\")\n\n#set(unmanaged_dlls ${unmanaged_dlls} \"${CMAKE_SHARED_LIBRARY_PREFIX}Kitware.VTK.Unmanaged${CMAKE_SHARED_LIBRARY_SUFFIX}\")\n\n#if(WIN32)\n\n#  target_link_libraries(Kitware.VTK.Unmanaged \"${exe_dir}/Kitware.mummy.Runtime.Unmanaged.lib\")\n\n#else()\n\n#  target_link_libraries(Kitware.VTK.Unmanaged \"${exe_dir}/${CMAKE_SHARED_LIBRARY_PREFIX}Kitware.mummy.Runtime.Unmanaged${CMAKE_SHARED_LIBRARY_SUFFIX}\")\n\n#endif()\n\n## TODO -- rename this CopyLibraries here too...\n\n#add_dependencies(Kitware.VTK.Unmanaged Kitware.mummy.CopyLibraries2)\n\n#foreach(kit ${kits})\n\n#  target_link_libraries(Kitware.VTK.Unmanaged vtk${kit})\n\n#  add_dependencies(Kitware.VTK.Unmanaged \"vtk${kit}GenerateWrappers\")\n\n#endforeach()\n",
        "Line" : 497,
        "CharPositionInLine" : 6
      },
      "38" : {
        "Text" : "# TODO -- rename this CopyLibraries here too...\n",
        "Line" : 527,
        "CharPositionInLine" : 8
      },
      "39" : {
        "Text" : "# Set list of export-layer dlls in C# syntax as CMake variable\n\n# MV_EXPORTLAYER_DLL_VARIABLES. This gets configured into\n\n# WrappedObject.cs below.\n\n#\n",
        "Line" : 534,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# name of library\n",
        "Line" : 567,
        "CharPositionInLine" : 25
      },
      "41" : {
        "Text" : "# list of CMake targets that need to build first\n\n# list of csc \"/reference:\" args\n",
        "Line" : 568,
        "CharPositionInLine" : 29
      },
      "42" : {
        "Text" : "# list of csc \"/linkresource:\" args\n\n# strong name signing keyfile\n",
        "Line" : 570,
        "CharPositionInLine" : 26
      },
      "43" : {
        "Text" : "# Source files:\n",
        "Line" : 572,
        "CharPositionInLine" : 6
      },
      "44" : {
        "Text" : "#    add_custom_command(\n\n#      OUTPUT ${GDCM_LIBRARY_DIR}/vtkgdcm-sharp.dll\n\n#      COMMAND ${CMAKE_CSHARP_COMPILER} ARGS \"/r:${ACTIVIZ_KITWARE_VTK_LIBRARY}\" \"/r:${ACTIVIZ_KITWARE_MUMMY_RUNTIME_LIBRARY}\" \"/t:library\" \"/out:${GDCM_LIBRARY_DIR}/vtkgdcm-sharp.dll\" \"*.cs\"\n\n#      #COMMAND ${CMAKE_CSHARP_COMPILER} ARGS \"/t:library\" \"/out:${GDCM_LIBRARY_DIR}/vtkgdcm-sharp.dll\" \"*.cs\"\n\n#      WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}\n\n#      DEPENDS \"${swig_generated_file_fullname}\"\n\n#      ${CMAKE_CURRENT_BINARY_DIR}/AssemblyInfo.cs\n\n#      COMMENT \"csc *.cs\"\n\n#      )\n",
        "Line" : 580,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "#${NAMELINK_SKIP}\n",
        "Line" : 598,
        "CharPositionInLine" : 73
      },
      "46" : {
        "Text" : "#${GDCM_LIBRARY_DIR}/vtkgdcm-sharp.dll.config\n\n#${GDCM_EXECUTABLE_DIR}/HelloWorld.exe\n",
        "Line" : 618,
        "CharPositionInLine" : 6
      },
      "47" : {
        "Text" : "# because vtkgdcm-sharp.dll is constructed with custom commands, it need the install(FILES signature:\n",
        "Line" : 622,
        "CharPositionInLine" : 4
      },
      "48" : {
        "Text" : "#${GDCM_LIBRARY_DIR2}/vtkgdcm-sharp.dll.config\n",
        "Line" : 626,
        "CharPositionInLine" : 6
      },
      "49" : {
        "Text" : "#add_custom_command(\n\n#  OUTPUT  ${GDCM_LIBRARY_DIR}/vtkgdcm-sharp.dll.config\n\n#  COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_SOURCE_DIR}/vtkgdcm-sharp.dll.config ${GDCM_LIBRARY_DIR}\n\n#  DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/vtkgdcm-sharp.dll.config\n\n#  COMMENT \"Copying vtkgdcm-sharp.dll.config\"\n\n#)\n",
        "Line" : 631,
        "CharPositionInLine" : 2
      },
      "50" : {
        "Text" : "# javac, jar\n",
        "Line" : 642,
        "CharPositionInLine" : 61
      },
      "51" : {
        "Text" : "# Lars Matthaus patch (package vtk => imply vtk subdir )\n",
        "Line" : 646,
        "CharPositionInLine" : 4
      },
      "52" : {
        "Text" : "# This is *required* don't ask\n",
        "Line" : 648,
        "CharPositionInLine" : 4
      },
      "53" : {
        "Text" : "# libvtk-java is a pain to handle...\n",
        "Line" : 653,
        "CharPositionInLine" : 4
      },
      "54" : {
        "Text" : "# http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=533193\n",
        "Line" : 655,
        "CharPositionInLine" : 6
      },
      "55" : {
        "Text" : "# http://bugs.debian.org/834493\n",
        "Line" : 658,
        "CharPositionInLine" : 6
      },
      "56" : {
        "Text" : "# http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=533198\n",
        "Line" : 664,
        "CharPositionInLine" : 6
      },
      "57" : {
        "Text" : "# special jnilib extension:\n",
        "Line" : 672,
        "CharPositionInLine" : 4
      },
      "58" : {
        "Text" : "# By default link those module since APPLE and WIN32 needs fully resolved\n\n# shared lib allow advanced users to skip the link step:\n",
        "Line" : 678,
        "CharPositionInLine" : 4
      },
      "59" : {
        "Text" : "# Create the jar file:\n\n# I am pretty sure this *.java thingy will bite me one day, when someone will try\n\n# to recompile from an existing build tree with invalid generated *.java file...\n",
        "Line" : 685,
        "CharPositionInLine" : 4
      },
      "60" : {
        "Text" : "#COMMAND ${Java_JAVAC_EXECUTABLE} ARGS -cp ${GDCM_VTK_JAVA_JAR} \"vtk/*.java\"\n\n# No such thing as -cp for javac only java is listed:\n\n# http://java.sun.com/j2se/1.5.0/docs/tooldocs/windows/classpath.html\n",
        "Line" : 691,
        "CharPositionInLine" : 6
      },
      "61" : {
        "Text" : "#${VTK_JAVA_DEPENDENCIES}\n\n#vtkgdcmJavaJavaClasses\n",
        "Line" : 698,
        "CharPositionInLine" : 6
      },
      "62" : {
        "Text" : "# Target to execute custom command:\n",
        "Line" : 702,
        "CharPositionInLine" : 4
      },
      "63" : {
        "Text" : "# Install rules:\n",
        "Line" : 709,
        "CharPositionInLine" : 4
      },
      "64" : {
        "Text" : "#DebugDevel\n\n#if(NAMELINK_ONLY)\n\n#  install(TARGETS ${VTKGDCM_NAME}Java\n\n#    LIBRARY DESTINATION ${GDCM_INSTALL_LIB_DIR} COMPONENT VTKJavaModule ${NAMELINK_ONLY}\n\n#  )\n\n#endif()\n",
        "Line" : 716,
        "CharPositionInLine" : 2
      },
      "65" : {
        "Text" : "# because vtkgdcm.jar is constructed with custom commands, it need the\n\n# install(FILES signature:\n",
        "Line" : 723,
        "CharPositionInLine" : 4
      },
      "66" : {
        "Text" : "# this is a library set the version:\n\n# do not set the version on the Python module:\n",
        "Line" : 754,
        "CharPositionInLine" : 4
      },
      "67" : {
        "Text" : "# do not set the version on the Python module:\n\n#set_target_properties(${VTKGDCM_NAME}Python PROPERTIES ${GDCM_LIBRARY_PROPERTIES})\n",
        "Line" : 758,
        "CharPositionInLine" : 4
      },
      "68" : {
        "Text" : "#set_property(TARGET ${VTKGDCM_NAME}PythonD PROPERTY LINK_INTERFACE_LIBRARIES \"\")\n",
        "Line" : 771,
        "CharPositionInLine" : 4
      },
      "69" : {
        "Text" : "#set_property(TARGET ${VTKGDCM_NAME}PythonD PROPERTY NO_SONAME 1)\n\n# Removing lib prefix if we are at VTK7. Based on a reply by David Gobbi to\n\n# this Thread\n\n# http://vtk.1045678.n5.nabble.com/python-wrapping-with-VTK-7-td5737442.html\n",
        "Line" : 773,
        "CharPositionInLine" : 4
      },
      "70" : {
        "Text" : "# Python extension modules on Windows must have the extension \".pyd\"\n\n# instead of \".dll\" as of Python 2.5.  Older python versions do support\n\n# this suffix.\n",
        "Line" : 780,
        "CharPositionInLine" : 4
      },
      "71" : {
        "Text" : "#${NAMELINK_SKIP}\n",
        "Line" : 798,
        "CharPositionInLine" : 91
      },
      "72" : {
        "Text" : "#${NAMELINK_ONLY}\n",
        "Line" : 803,
        "CharPositionInLine" : 78
      },
      "73" : {
        "Text" : "# the python file is not a dev file, but part of the gdcm module...\n",
        "Line" : 805,
        "CharPositionInLine" : 4
      },
      "74" : {
        "Text" : "# http://www.cmake.org/Wiki/Plugin_HowTo#Adding_a_Reader\n",
        "Line" : 829,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 75
    },
    "Utilities/VTK/Examples/CMakeLists.txt" : {
      "ObjectId" : "9e52e344612b81a4d275665531112d3f48d5f8f2",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_subdirectory(Cxx Python)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Utilities/VTK/Examples/Csharp/CMakeLists.txt" : {
      "ObjectId" : "8bb304613b9c605e3aab9b7372716c08fc2f5707",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#HelloActiviz\n",
        "Line" : 4,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# WORKING_DIRECTORY is set to the src dir because of a strange issue with CSC compiler on Win32 system:\n\n# http://groups.google.com/group/microsoft.public.dotnet.languages.csharp/browse_thread/thread/9d3ac7eb9f7f56be\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "Utilities/VTK/Examples/Cxx/CMakeLists.txt" : {
      "ObjectId" : "b62e73600c42bf731c2447490f76d8597eaa1d23",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set_target_properties(${app} PROPERTIES ${GDCM_EXECUTABLE_PROPERTIES})\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# gdcmTesting is in Common:\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Dev only: I dont need to install that one:\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#add_executable(gdcm2vtk gdcm2vtk.cxx)\n\n#target_link_libraries(gdcm2vtk gdcmMSFF pthread)\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Utilities/VTK/Examples/Java/CMakeLists.txt" : {
      "ObjectId" : "5dbd77a65790ecff1f97a8a963a26044c511cd23",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#AWTMedical3\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# 3. ok now add the target\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#set_source_files_properties(${EXECUTABLE_OUTPUT_PATH}/${test}.class PROPERTIES RUNTIMEPATH \"${EXECUTABLE_OUTPUT_PATH}\")\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#set_source_files_properties(${EXECUTABLE_OUTPUT_PATH}/AWTMedical3.class PROPERTIES CLASSPATH \"${EXECUTABLE_OUTPUT_PATH}/vtkgdcm.jar:${GDCM_VTK_JAVA_JAR}\")\n\n#ADD_JAVA_TEST(TestAWTMedical3Java ${EXECUTABLE_OUTPUT_PATH}/AWTMedical3)\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "Utilities/VTK/Testing/CMakeLists.txt" : {
      "ObjectId" : "5118d274318c459f98e6f5f63d15aec1e2cd86d2",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Utilities/VTK/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "a6f4ef09c8bc1f89e52dce0b1406180a4c906fc1",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the tests for vtk-gdcm\n\n# vtkGDCM\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#TestvtkImageChangeInformation\n\n#TestvtkGDCMImageActor\n\n#TestvtkGDCMImageViewer\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Need gdcmData\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Need gdcmDataExtra\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add the include paths\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# for gdcmDataImages.h\n",
        "Line" : 60,
        "CharPositionInLine" : 43
      },
      "6" : {
        "Text" : "# VTK 6.0 does not set VTK_USE_RENDERING anymore ?\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Need full path to executable:\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Loop over files and create executables\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "Utilities/VTK/Testing/Java/CMakeLists.txt" : {
      "ObjectId" : "828cd85aa06cf4158f9486b6c28b72362d5fda07",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the tests for vtkgdcm-java\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# this is a build-tree VTK\n",
        "Line" : 10,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# 3. ok now add the target\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Utilities/VTK/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "5e0c32887bdb24e84651cad2b08237b53c2ea8b9",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# VTK-Python testing\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#message(${VTK_PYTHONPATH_DIRS})\n\n#string(REGEX REPLACE \";\" \";\" UNIX_VTK_PYTHONPATH_DIRS \"${VTK_PYTHONPATH_DIRS}\")\n",
        "Line" : 5,
        "CharPositionInLine" : 7
      },
      "2" : {
        "Text" : "# if VTK_PYTHONPATH_DIRS is not given (very old VTK) then simply hope the user set his pythonpath properly:\n\n#  set(UNIX_VTK_PYTHONPATH_DIRS \"$ENV{PYTHONPATH}\")\n\n# previous solution was not safe, let's hope the following are set properly:\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# FIXME: hardcoded\n",
        "Line" : 23,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "#TestvtkGDCMThreadedImageReader\n",
        "Line" : 35,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "#message(${UNIX_VTK_PYTHONPATH_DIRS})\n",
        "Line" : 41,
        "CharPositionInLine" : 10
      },
      "CommentCount" : 6
    },
    "Utilities/doxygen/CMakeLists.txt" : {
      "ObjectId" : "47356c972cb243c003c2dc1cf26286eacc451659",
      "LastModified" : "2019-03-08T08:30:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Documentation\n\n# http://www.stack.nl/~dimitri/doxygen\n\n# http://www.stack.nl/~dimitri/doxygen/commands.html#cmdsa\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Otherwise use gdcm/piwik/sf.net footer:\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#\"${GDCM_SOURCE_DIR}/Utilities/doxygen/man/*.dox\"\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#message(${headerfiles})\n\n# We are depending only on header files and README.txt but other files\n\n# could be needed for complete dependencies\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# epstopdf is needed: sudo apt-get install texlive-extra-utils\n\n# pdflatex is needed: sudo apt-get install texlive-latex-extra\n",
        "Line" : 77,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# let's create the tarball within the same custom command to avoid complex dep. rules.\n",
        "Line" : 82,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# output #1 (fake)\n",
        "Line" : 84,
        "CharPositionInLine" : 58
      },
      "7" : {
        "Text" : "# 1. first thing first let's run doxygen\n",
        "Line" : 85,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# 2. tarball gen.\n",
        "Line" : 88,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}\n",
        "Line" : 96,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# PDF building part:\n\n# When building latex, we have to run a custom command to produce the pdf file:\n",
        "Line" : 99,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Let's customize the pdf tags a little usind sed:\n\n# Apparently egrep is also needed...\n\n# BAD: there is a circular dependency where refman.tex depend on refman.tex in the sed steps...\n\n# hack our way in anyway by simply removing the dep...\n\n#add_custom_command(\n\n#  ${CMAKE_COMMAND} -P ${CMAKE_CURRENT_SOURCE_DIR}/patchtex.cmake\n\n#)\n\n# TODO, foreach(*.tex)\n\n# sed -i -e \"/home/mmalaterre/Projects/\" ...\n",
        "Line" : 106,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "#message(${sed_gdcm_source_dir})\n",
        "Line" : 116,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "#${CMAKE_CURRENT_BINARY_DIR}/latex/refman.tex # output #1 (fake)\n",
        "Line" : 118,
        "CharPositionInLine" : 15
      },
      "14" : {
        "Text" : "# output #2\n",
        "Line" : 119,
        "CharPositionInLine" : 60
      },
      "15" : {
        "Text" : "# Command #1\n",
        "Line" : 120,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# Command #2\n",
        "Line" : 123,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# Command #3\n",
        "Line" : 126,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "#${CMAKE_CURRENT_BINARY_DIR}/latex/refman.tex\n",
        "Line" : 128,
        "CharPositionInLine" : 15
      },
      "19" : {
        "Text" : "#${GDCM_DOC_TARBALL}\n",
        "Line" : 130,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# add target to 'ALL'\n",
        "Line" : 155,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# make DoxygenDoc depends on the final tarball thus all file are garantee to be generated\n",
        "Line" : 166,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Install html pages:\n\n#install(FILES\n\n#  ${CMAKE_CURRENT_BINARY_DIR}/html/gdcm2vtk.html\n\n#  ${CMAKE_CURRENT_BINARY_DIR}/html/gdcmconv.html\n\n#  ${CMAKE_CURRENT_BINARY_DIR}/html/gdcmanon.html\n\n#  ${CMAKE_CURRENT_BINARY_DIR}/html/gdcmgendir.html\n\n#  ${CMAKE_CURRENT_BINARY_DIR}/html/gdcmdump.html\n\n#  ${CMAKE_CURRENT_BINARY_DIR}/html/gdcmimg.html\n\n#  ${CMAKE_CURRENT_BINARY_DIR}/html/gdcminfo.html\n\n#  ${CMAKE_CURRENT_BINARY_DIR}/html/gdcmpdf.html\n\n#  ${CMAKE_CURRENT_BINARY_DIR}/html/gdcmraw.html\n\n#  ${CMAKE_CURRENT_BINARY_DIR}/html/gdcmscanner.html\n\n#  ${CMAKE_CURRENT_BINARY_DIR}/html/gdcmtar.html\n\n#  ${CMAKE_CURRENT_BINARY_DIR}/html/gdcmviewer.html\n\n#  DESTINATION ${GDCM_INSTALL_DOC_DIR} COMPONENT DebugDevel\n\n#)\n\n#install(FILES\n\n#  ${CMAKE_CURRENT_BINARY_DIR}/man/man1/gdcm2vtk.1\n\n#  ${CMAKE_CURRENT_BINARY_DIR}/man/man1/gdcm2pnm.1\n\n#  ${CMAKE_CURRENT_BINARY_DIR}/man/man1/gdcmconv.1\n\n#  ${CMAKE_CURRENT_BINARY_DIR}/man/man1/gdcmpap3.1\n\n#  ${CMAKE_CURRENT_BINARY_DIR}/man/man1/gdcmxml.1\n\n#  ${CMAKE_CURRENT_BINARY_DIR}/man/man1/gdcmanon.1\n\n#  ${CMAKE_CURRENT_BINARY_DIR}/man/man1/gdcmgendir.1\n\n#  ${CMAKE_CURRENT_BINARY_DIR}/man/man1/gdcmdump.1\n\n#  ${CMAKE_CURRENT_BINARY_DIR}/man/man1/gdcmdiff.1\n\n#  ${CMAKE_CURRENT_BINARY_DIR}/man/man1/gdcmimg.1\n\n#  ${CMAKE_CURRENT_BINARY_DIR}/man/man1/gdcminfo.1\n\n#  ${CMAKE_CURRENT_BINARY_DIR}/man/man1/gdcmpdf.1\n\n#  ${CMAKE_CURRENT_BINARY_DIR}/man/man1/gdcmraw.1\n\n#  ${CMAKE_CURRENT_BINARY_DIR}/man/man1/gdcmscu.1\n\n#  ${CMAKE_CURRENT_BINARY_DIR}/man/man1/gdcmscanner.1\n\n#  ${CMAKE_CURRENT_BINARY_DIR}/man/man1/gdcmtar.1\n\n#  ${CMAKE_CURRENT_BINARY_DIR}/man/man1/gdcmviewer.1\n\n#  DESTINATION ${GDCM_INSTALL_MAN_DIR}/man1 COMPONENT DebugDevel\n\n#)\n",
        "Line" : 174,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# http://lists.debian.org/debian-italian/2006/12/msg00878.html\n\n# man2txt : man man | col -b | less\n",
        "Line" : 215,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Make this option a hidden option as vtkgdcm/doxygen stuff is a mess (copy/paste\n\n# from paraview). It always rerun -sigh-\n",
        "Line" : 219,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# need an XSLT 1.0 processor, use xsltproc, maybe add more implementations later\n",
        "Line" : 251,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# http://docbook.sourceforge.net/release/xsl/current/doc/manpages/man.output.quietly.html\n",
        "Line" : 254,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# User can change the behavior at cmake time:\n",
        "Line" : 256,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# By default I want nonet on Debian (docbook-xsl-ns)\n\n# on fedora you need to install docbook-style-xsl\n",
        "Line" : 259,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# https://cmake.org/pipermail/cmake/2007-May/014317.html\n",
        "Line" : 262,
        "CharPositionInLine" : 6
      },
      "30" : {
        "Text" : "#<rewriteSystem systemIdStartString=\"http://docbook.sourceforge.net/release/xsl-ns/\" rewritePrefix=\"file:///usr/share/sgml/docbook/xsl-ns-stylesheets-1.78.1\"/>\n\n#<rewriteURI uriStartString=\"http://docbook.sourceforge.net/release/xsl-ns/\" rewritePrefix=\"file:///usr/share/sgml/docbook/xsl-ns-stylesheets-1.78.1\"/>\n",
        "Line" : 264,
        "CharPositionInLine" : 6
      },
      "31" : {
        "Text" : "# Need both the catalog and the docbook installation\n",
        "Line" : 277,
        "CharPositionInLine" : 6
      },
      "32" : {
        "Text" : "# msxsl.exe -pi gdcmimg.xml\n\n#\n\n#Error occurred while executing stylesheet 'http://docbook.sourceforge.net/release/xsl-ns/current/manpages/docbook.xsl'.\n\n#\n\n#Code:   0x80004005\n\n#Namespace 'http://exslt.org/common' does not contain any functions.\n\n# -> http://stackoverflow.com/a/16605034/136285 ??\n",
        "Line" : 298,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# GDCM_BUILD_DOCBOOK_MANPAGES\n",
        "Line" : 333,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 34
    },
    "Utilities/doxygen/patchtex.cmake" : {
      "ObjectId" : "6cfff4a026964a5bc151d6157e095830a04be359",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Utilities/doxygen/vtk/CMakeLists.txt" : {
      "ObjectId" : "b5ef2677ddff8322bdb5504fc05086f19e5a0ab1",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Build the documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(DOXYGEN_SOURCE_DIR \"${vtkgdcm_SOURCE_DIR}/VTK/Utilities/Doxygen\")\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# sudo apt-get install vtk-doc\n",
        "Line" : 33,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "#\n\n# Configure the script and the doxyfile, then add target\n\n#\n",
        "Line" : 91,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "Utilities/gdcmcharls/CMakeLists.txt" : {
      "ObjectId" : "69f093c0477e19a6a344eeb1c8e69c46d55ef09b",
      "LastModified" : "2019-03-08T08:30:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# In all cases:\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# CHARLS version number\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#set (EXECUTABLE_OUTPUT_PATH ${CHARLS_BINARY_DIR}/bin CACHE PATH \"Single output directory for building all executables.\")\n\n#set (LIBRARY_OUTPUT_PATH ${CHARLS_BINARY_DIR}/bin CACHE PATH \"Single output directory for building all libraries.\")\n\n#mark_as_advanced(LIBRARY_OUTPUT_PATH EXECUTABLE_OUTPUT_PATH)\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#set(MANGLE_PREFIX ${JPEGLS_LIBRARY_NAME})\n\n#configure_file(${CMAKE_CURRENT_SOURCE_DIR}/jpegls_mangle.h.in\n\n#               ${CMAKE_CURRENT_BINARY_DIR}/jpegls_mangle.h\n\n#               @ONLY )\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# When user specify build type do not override settings:\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The following compiler option are only meant for GCC:\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#set(CMAKE_CXX_FLAGS \"-Wall -O3 -g\" )\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#option(charls_BUILD_SHARED_LIBS \"Build CharLS with shared libraries.\" OFF)\n\n#set(BUILD_SHARED_LIBS ${charls_BUILD_SHARED_LIBS})\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# PUBLIC cxx_strong_enums\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Install library\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Runtime\n",
        "Line" : 86,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "#Development\n",
        "Line" : 93,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 12
    },
    "Utilities/gdcmexpat/CMakeLists.txt" : {
      "ObjectId" : "b654d86446614db86d4dde18736bec7a5581d3e5",
      "LastModified" : "2019-03-08T08:30:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# In all cases:\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Do full dependency headers.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#if(WIN32)\n\n#  if(BUILD_SHARED_LIBS)\n\n#    set(EXPATDLL 1)\n\n#  else()\n\n#    set (EXPATSTATIC 1)\n\n#  endif()\n\n#endif()\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# FIXME not the right way of doing it:\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# for expat_config.h\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "Utilities/gdcmexpat/lib/CMakeLists.txt" : {
      "ObjectId" : "87884d3a38df8cbddc05405460e56486bf3707c1",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# technically xmlparse.c does not need this compile definition flag:\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Utilities/gdcmjpeg/12/CMakeLists.txt" : {
      "ObjectId" : "58c8b7404b0d262dad48e65afb7faa41476432a5",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# JPEG 12 bits project\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Utilities/gdcmjpeg/16/CMakeLists.txt" : {
      "ObjectId" : "2127eeaeb2fc41cc6a69c398e5fdf719fbf1fbfc",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# JPEG 16 bits project\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Utilities/gdcmjpeg/8/CMakeLists.txt" : {
      "ObjectId" : "4669543ad3946dd06073e330c863de0f543b9abb",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# JPEG 8 bits project\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Utilities/gdcmjpeg/CMakeLists.txt" : {
      "ObjectId" : "bbb8ac923a4e15d2c35aea12c285259d0426d47e",
      "LastModified" : "2019-03-08T08:30:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# In all cases:\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Do full dependency headers.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# let advanced user the option to define JPEG_API_VERSION:\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# memmgr back ends: compile only one of these into a working library\n\n# (For now, let's use the mode that requires the image fit into memory.\n\n# This is the recommended mode for Win32 anyway.)\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# library object files common to compression and decompression\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#jmemsrc.c\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# compression library object files\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Lossy (DCT) codec:\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# lossless\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#jdarith.c\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# decompression library object files\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#jcarith.c\n",
        "Line" : 89,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# By default support DICOMObjects bug, if this is a speed penalty for you\n\n# you should consider disabling it\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Generate three libraries: jpeg 8bits, 12bits and 16bits\n\n# using only one source directory\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Particular case jpegcmake.h needs to be specified either 8, 12 or 16 bits:\n\n# also configure the name mangling\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# FIXME FIXME FIXME\n",
        "Line" : 159,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# I could not get the depencencies in CMake to work properly so instead\n\n# have multiple directory for each target that will ensure proper recompilation\n\n# of the objects files\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "Utilities/gdcmmd5/CMakeLists.txt" : {
      "ObjectId" : "176887694ddfdfdfe0194d40d693ea15255c1fa0",
      "LastModified" : "2019-03-08T08:30:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# In all cases:\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Do full dependency headers.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO\n\n# Optimized function needs to define:\n\n# ARCH_IS_BIG_ENDIAN\n\n# Big endian thing:\n\n#include (TestBigEndian)\n\n#TEST_BIG_ENDIAN(MD5_WORDS_BIGENDIAN)\n\n#set_source_files_properties(${MD5_SOURCES}\n\n#  PROPERTIES COMPILE_FLAGS -DARCH_IS_BIG_ENDIAN\n\n#  )\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# for md5_mangle.h\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# md5main\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# md5cmp\n",
        "Line" : 76,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# tst2md5\n",
        "Line" : 79,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    },
    "Utilities/gdcmopenjpeg/CMakeLists.txt" : {
      "ObjectId" : "0687797f22e05d0b85f32e35343765d29182d70f",
      "LastModified" : "2019-03-08T08:30:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Main CMakeLists.txt to build the OpenJPEG project using CMake (www.cmake.org)\n\n# Written by Mathieu Malaterre\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This CMake project will by default create a library called openjpeg\n\n# But if you want to use this project within your own (CMake) project\n\n# you will eventually like to prefix the library to avoid linking confusion\n\n# For this purpose you can define a CMake var: OPENJPEG_NAMESPACE to whatever you like\n\n# e.g.:\n\n# set(OPENJPEG_NAMESPACE \"GDCMOPENJPEG\")\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# In all cases:\n\n#string(TOLOWER ${OPENJPEG_NAMESPACE} OPENJPEG_LIBRARY_NAME)\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Do full dependency headers.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# OPENJPEG version number, useful for packaging and doxygen doc:\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Because autotools does not support X.Y notation for SOVERSION, we have to use\n\n# two numbering, one for the openjpeg version and one for openjpeg soversion\n\n# version | soversion\n\n#   1.0   |  0\n\n#   1.1   |  1\n\n#   1.2   |  2\n\n#   1.3   |  3\n\n#   1.4   |  4\n\n#   1.5   |  5\n\n#   1.5.1 |  5\n\n#   2.0   |  6\n\n#   2.0.1 |  6\n\n#   2.1   |  7\n\n#   2.1.1 |  7\n\n# above is the recommendation by the OPJ team. If you really need to override this default,\n\n# you can specify your own OPENJPEG_SOVERSION at cmake configuration time:\n\n# cmake -DOPENJPEG_SOVERSION:STRING=42 /path/to/openjpeg\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# Path to additional CMake modules\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# On Visual Studio 8 MS deprecated C. This removes all 1.276E1265 security\n\n# warnings\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# Install directories\n\n# Build DOCUMENTATION (not in ALL target and only if Doxygen is found)\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# We could install *.cmake files in share/ however those files contains\n\n# hardcoded path to libraries on a multi-arch system (fedora/debian) those\n\n# path will be different (lib/i386-linux-gnu vs lib/x86_64-linux-gnu)\n",
        "Line" : 158,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Big endian test:\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Setup file for setting custom ctest vars\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# OpenJPEG build configuration options.\n\n#option(BUILD_SHARED_LIBS \"Build OpenJPEG shared library and link executables against it.\" ON)\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# configure name mangling to allow multiple libraries to coexist\n\n# peacefully\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Compiler specific flags:\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# For all builds, make sure openjpeg is std99 compliant:\n\n# set(CMAKE_C_FLAGS \"-Wall -std=c99 ${CMAKE_C_FLAGS}\") # FIXME: this setting prevented us from setting a coverage build.\n\n# Do not use ffast-math for all build, it would produce incorrect results, only set for release:\n",
        "Line" : 202,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# opj_config.h generation (1/2)\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Check if some include files are provided by the system\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# These files are mandatory\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# For the following files, we provide an alternative, they are not mandatory\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# why check this one ? for openjpip ?\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Enable Large file support\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Allocating Aligned Memory Blocks\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# _aligned_alloc https://msdn.microsoft.com/en-us/library/8z34s9c6.aspx\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# posix_memalign (needs _POSIX_C_SOURCE >= 200112L on Linux)\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# memalign (obsolete)\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Build Library\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Build Applications\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# OFF: It will only build 3rd party libs if they are not found on the system\n\n# ON: 3rd party libs will ALWAYS be build, and used\n",
        "Line" : 281,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "#add_subdirectory(wrapping)\n",
        "Line" : 287,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# opj_config.h generation (2/2)\n",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# build documentation in doc subdir:\n",
        "Line" : 303,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Buld Testing\n",
        "Line" : 309,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Search openjpeg data needed for the tests\n\n# They could be found via git on the OpenJPEG GitHub code project\n\n# git clone https://github.com/uclouvain/openjpeg-data.git\n",
        "Line" : 317,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# Add repository where to find tests\n",
        "Line" : 325,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "#message(FATAL_ERROR \"You need build codec to run the tests\")\n",
        "Line" : 329,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# install all targets referenced as OPENJPEGTargets\n\n#install(EXPORT OpenJPEGTargets DESTINATION ${OPENJPEG_INSTALL_PACKAGE_DIR})\n",
        "Line" : 333,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# install CHANGES and LICENSE\n",
        "Line" : 344,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#include (cmake/OpenJPEGCPack.cmake)\n",
        "Line" : 354,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# pkgconfig support\n\n# enabled by default on Unix, disabled by default on other platforms\n",
        "Line" : 356,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# install in lib and not share (see multi-arch note above)\n",
        "Line" : 365,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "#\n",
        "Line" : 370,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# install in lib and not share (see multi-arch note above)\n",
        "Line" : 372,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "#\n",
        "Line" : 378,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# install in lib and not share (see multi-arch note above)\n",
        "Line" : 380,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "#\n",
        "Line" : 386,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# install in lib and not share (see multi-arch note above)\n",
        "Line" : 388,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 396,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "Utilities/gdcmopenjpeg/cmake/EnsureFileInclude.cmake" : {
      "ObjectId" : "a4c064bbecaf0faf45a249096cc897654479ecd2",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Ensure that an include file is provided by the system\n\n# Add the check about the mandatory status to the check_include_file macro\n\n# provided by cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#message(WARNING \"INCLUDE_FILENAME=${INCLUDE_FILENAME} \\n\"\n\n#                \"VARIABLE_NAME=${VARIABLE_NAME} \\n\"\n\n#                \"MANDATORY_STATUS=${MANDATORY_STATUS}\")\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#message(WARNING \"INCLUDE_FILENAME=${INCLUDE_FILENAME} \\n\"\n\n#                \"VARIABLE_NAME=${VARIABLE_NAME} \\n\"\n\n#                \"VARIABLE_NAME_VALUE=${${VARIABLE_NAME}} \\n\"\n\n#                \"MANDATORY_STATUS=${MANDATORY_STATUS}\")\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Utilities/gdcmopenjpeg/cmake/FindCPPCHECK.cmake" : {
      "ObjectId" : "6e11bf73089680b1b490c03319767991489d7e22",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# cppcheck\n\n#\n\n#  Copyright (c) 2011 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Utilities/gdcmopenjpeg/cmake/FindFCGI.cmake" : {
      "ObjectId" : "309bdd4d646490f755b2a32d623604dd2a6ab27d",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Look for the header file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Look for the library.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set FCGI_FOUND to TRUE if all listed variables are TRUE.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Copy the results to the output variables.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Utilities/gdcmopenjpeg/cmake/FindJPYLYZER.cmake" : {
      "ObjectId" : "4fbbaa85f5b42ba5b8e155cb4c1c2416a1bc4e42",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# this module looks for JPYLYZER\n\n# http://jpylyzer.openpreservation.org\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Utilities/gdcmopenjpeg/cmake/FindKAKADU.cmake" : {
      "ObjectId" : "0564a0e683ba9a69dfccb0c6cbbafea402685b92",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# this module looks for KAKADU\n\n# http://www.kakadusoftware.com/\n\n#\n\n#\n\n#  Copyright (c) 2006-2014 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Utilities/gdcmopenjpeg/cmake/FindLCMS.cmake" : {
      "ObjectId" : "e659895d2b50b931da3ffe310f37c8de72ead6d9",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find LCMS library\n\n# Find the native LCMS includes and library\n\n# Once done this will define\n\n#\n\n#  LCMS_INCLUDE_DIR    - Where to find lcms.h, etc.\n\n#  LCMS_LIBRARIES      - Libraries to link against to use LCMS.\n\n#  LCMS_FOUND          - If false, do not try to use LCMS.\n\n#\n\n# also defined, but not for general use are\n\n#  LCMS_LIBRARY, where to find the LCMS library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n#=============================================================================\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LCMS_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Utilities/gdcmopenjpeg/cmake/FindLCMS2.cmake" : {
      "ObjectId" : "65b6525cacb407d196b64c0cbd391531bf14d283",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find LCMS2 library\n\n# Find the native LCMS2 includes and library\n\n# Once done this will define\n\n#\n\n#  LCMS2_INCLUDE_DIR    - Where to find lcms2.h, etc.\n\n#  LCMS2_LIBRARIES      - Libraries to link against to use LCMS2.\n\n#  LCMS2_FOUND          - If false, do not try to use LCMS2.\n\n#\n\n# also defined, but not for general use are\n\n#  LCMS2_LIBRARY        - Where to find the LCMS2 library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n#=============================================================================\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LCMS2_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Utilities/gdcmopenjpeg/cmake/JPIPTestDriver.cmake" : {
      "ObjectId" : "2147c4649a07969c78a053e707818aa6646172b0",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# JPIP test driver\n\n#message(STATUS \"${D_URL}\")\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Utilities/gdcmopenjpeg/cmake/OpenJPEGCPack.cmake" : {
      "ObjectId" : "a6e9a866e2b80cbcb84ee38cb5fd08f96416cac0",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# package bundler\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For PackageMaker on MacOSX it is important to have a file extension:\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Make this explicit here, rather than accepting the CPack default value,\n\n# so we can refer to it:\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# make sure package is not Cygwin-unknown, for Cygwin just\n\n# cygwin is good for the system name\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# if the CPACK_PACKAGE_FILE_NAME is not defined by the cache\n\n# default to source package - system, on cygwin system is not\n\n# needed\n",
        "Line" : 51,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#include(BundleUtilities)\n",
        "Line" : 68,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "Utilities/gdcmopenjpeg/cmake/TestLargeFiles.cmake" : {
      "ObjectId" : "01e4ea70f77b0d26e751226aa9a8a0e68f893e80",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Define macro to check large file support\n\n#\n\n#  OPJ_TEST_LARGE_FILES(VARIABLE)\n\n#\n\n#  VARIABLE will be set to true if off_t is 64 bits, and fseeko/ftello present.\n\n#  This macro will also defines the necessary variable enable large file support, for instance\n\n#  _LARGE_FILES\n\n#  _LARGEFILE_SOURCE\n\n#  _FILE_OFFSET_BITS 64\n\n#  OPJ_HAVE_FSEEKO\n\n#\n\n#  However, it is YOUR job to make sure these defines are set in a #cmakedefine so they\n\n#  end up in a config.h file that is included in your source if necessary!\n\n#\n\n#  Adapted from Gromacs project (http://www.gromacs.org/)\n\n#  by Julien Malik\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# On most platforms it is probably overkill to first test the flags for 64-bit off_t,\n\n# and then separately fseeko. However, in the future we might have 128-bit filesystems\n\n# (ZFS), so it might be dangerous to indiscriminately set e.g. _FILE_OFFSET_BITS=64.\n",
        "Line" : 22,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# First check without any special flags\n",
        "Line" : 28,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Test with _FILE_OFFSET_BITS=64\n",
        "Line" : 36,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "# Test with _LARGE_FILES\n",
        "Line" : 47,
        "CharPositionInLine" : 12
      },
      "5" : {
        "Text" : "# Test with _LARGEFILE_SOURCE\n",
        "Line" : 58,
        "CharPositionInLine" : 12
      },
      "6" : {
        "Text" : "#if(NOT FILE64_OK)\n\n#    # now check for Windows stuff\n\n#    try_compile(FILE64_OK \"${PROJECT_BINARY_DIR}\"\n\n#                \"${PROJECT_SOURCE_DIR}/cmake/TestWindowsFSeek.c\")\n\n#    if(FILE64_OK)\n\n#        message(STATUS \"Checking for 64-bit off_t - present with _fseeki64\")\n\n#        set(HAVE__FSEEKI64 1)\n\n#    endif()\n\n#endif()\n",
        "Line" : 69,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Set the flags we might have determined to be required above\n",
        "Line" : 87,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# Test if ftello/fseeko are\tavailable\n",
        "Line" : 93,
        "CharPositionInLine" : 5
      },
      "9" : {
        "Text" : "# glibc 2.2 needs _LARGEFILE_SOURCE for fseeko (but not for 64-bit off_t...)\n",
        "Line" : 103,
        "CharPositionInLine" : 16
      },
      "CommentCount" : 10
    },
    "Utilities/gdcmopenjpeg/src/lib/CMakeLists.txt" : {
      "ObjectId" : "da8846b65b7023f99587b482f5e206f5095d5851",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# source code for openjpeg project:\n\n# Part 1 & 2:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# optionals components:\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Utilities/gdcmopenjpeg/src/lib/openjp2/CMakeLists.txt" : {
      "ObjectId" : "a503354842cf131953bbce889f19fe58499fb9be",
      "LastModified" : "2019-04-03T11:46:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# configure name mangling to allow multiple libraries to coexist\n\n# peacefully\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# opj_config.h and opj_config_private.h\n",
        "Line" : 17,
        "CharPositionInLine" : 54
      },
      "3" : {
        "Text" : "# Defines the source code for the library\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Special case for old i586-mingw32msvc-gcc cross compiler\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Build the library\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Builds both static and dynamic libs\n",
        "Line" : 104,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Install library\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Install includes files\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# install man page of the library\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# internal utility to generate t1_luts.h (part of the jp2 lib)\n\n# no need to install:\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Experimental option; let's how cppcheck performs\n\n# Implementation details:\n\n# I could not figure out how to easily upload a file to CDash. Instead simply\n\n# pretend cppcheck is part of the Build step. Technically cppcheck can even\n\n# output gcc formatted error/warning report\n\n# Another implementation detail: I could not redirect error to the error\n\n# catching mechanism something is busted in cmake 2.8.5, I had to use the\n\n# warning regex to catch them.\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# cppcheck complains about too many configuration, pretend to be WIN32:\n",
        "Line" : 162,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "#################################################################################\n\n# threading configuration\n\n#################################################################################\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "Utilities/gdcmrle/CMakeLists.txt" : {
      "ObjectId" : "6b67f825519d8d575485549b80e9753955ebc93e",
      "LastModified" : "2019-04-03T11:46:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# librle, a minimal RLE implementatin for DICOM supporting streaming\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#add_library(gdcmrle STATIC ${librle_SRCS})\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#add_executable(main main.cxx ${librle_SRCS})\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Utilities/gdcmuuid/CMakeLists.txt" : {
      "ObjectId" : "4c6d8cc0bd910d57f507c2cc59c84af74afac7cf",
      "LastModified" : "2019-04-03T11:46:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# In all cases:\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Do full dependency headers.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#include (${CMAKE_ROOT}/Modules/CheckIncludeFile.cmake)\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Avoid polluting Win32 cmakecache\n",
        "Line" : 60,
        "CharPositionInLine" : 9
      },
      "4" : {
        "Text" : "#Avoid polluting UNIX cmakecache\n",
        "Line" : 73,
        "CharPositionInLine" : 10
      },
      "5" : {
        "Text" : "#HAVE_SYS_TIME_H\n",
        "Line" : 82,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Pass all -D :\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# for uuid_mangle.h\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "Utilities/gdcmzlib/CMakeLists.txt" : {
      "ObjectId" : "cd8451efb13a49b58aed859403a67ebcc651b30b",
      "LastModified" : "2019-04-03T11:46:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# In all cases:\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Do full dependency headers.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# source files for zlib\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#example.c\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#minigzip.c\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# for windows add the .def and .rc files to the source list if building shared libs\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "Utilities/getopt/CMakeLists.txt" : {
      "ObjectId" : "ea4878b0ff769a50948e4c1cf4214805fc3338d6",
      "LastModified" : "2019-04-03T11:46:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# In all cases:\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(BUILD_SHARED_LIBS OFF)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#include_directories(BEFORE\n\n#  ${CMAKE_CURRENT_SOURCE_DIR}\n\n#  )\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Only build this lib static. On most unix system\n\n# we will be using the standart getopt\n\n# so this lib will be for the poor Win32 user (those\n\n# guys really need help)\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# For some reason mingw fails to export the optind which is clearly marked as exported (using extern symbol)\n\n# ... for now use this flag :\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#if(BUILD_EXAMPLES)\n\n#if(GDCM_BUILD_TESTING)\n\n#add_executable(ex_getopt ex_getopt.c)\n\n#target_link_libraries(ex_getopt ${GETOPT_LIBRARY_NAME})\n\n#if(NOT GETOPT_INSTALL_NO_LIBRARIES)\n\n#  install(TARGETS ex_getopt\n\n#    RUNTIME DESTINATION ${GETOPT_INSTALL_BIN_DIR} COMPONENT Applications\n\n#    LIBRARY DESTINATION ${GETOPT_INSTALL_LIB_DIR} COMPONENT Libraries\n\n#    ARCHIVE DESTINATION ${GETOPT_INSTALL_LIB_DIR} COMPONENT DebugDevel\n\n#  ${CPACK_NAMELINK_TYPE}\n\n#  )\n\n#endif()\n\n#endif()\n\n#endif()\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#${NAMELINK_SKIP}\n",
        "Line" : 72,
        "CharPositionInLine" : 70
      },
      "7" : {
        "Text" : "#if(NAMELINK_ONLY)\n\n#  install(TARGETS ${GETOPT_LIBRARY_NAME}\n\n#    LIBRARY DESTINATION ${GETOPT_INSTALL_LIB_DIR} COMPONENT DebugDevel ${NAMELINK_ONLY}\n\n#  )\n\n#endif()\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "Utilities/pvrg/CMakeLists.txt" : {
      "ObjectId" : "f976926b9e6714216e74a5eaea1a7396ebed1b06",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# might not be portable, so simply rename the function in the code itself...\n\n#set_source_files_properties(jpeg.c\n\n#  PROPERTIES\n\n#  COMPILE_FLAGS -Dmain=pvrgmain\n\n#)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#add_definitions(-DIO_DEBUG)\n\n#add_library(pvrg ${PVRG_SRCS})\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#target_link_libraries(pvrgjpeg pvrg)\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Should you wish to modify the interpreter\n\n# modify this portion here.\n\n#\n\n# Make sure that you move the first comment from the start to\n\n# within the braces %{ /* */ %} in lexer.l,\n\n# otherwise it will give you a error (definitions too long).\n\n#\n\n#  Caution: Sometimes -ll is required.\n\n#\n\n#\n\n#lexer.c: lexer.l\n\n#\tlex lexer.l\n\n#\tmv lex.yy.c lexer.c\n\n#\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Utilities/socketxx/CMakeLists.txt" : {
      "ObjectId" : "ce15b8aa4a74df725e01e80f77cc01de460d3b07",
      "LastModified" : "2019-04-03T11:46:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake 3.3.2\n",
        "Line" : 8,
        "CharPositionInLine" : 12
      },
      "1" : {
        "Text" : "# http://www.linuxhacker.at/socketxx\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# In all cases:\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# configure.in:LIBSOCKET_SO_VERSION\n\n# LIBSOCKET_SO_VERSION=1:2:0\n\n# SOCKET_VERSION=1.12.12\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# SOCKETXX version number\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#option(BUILD_SHARED_LIBS \"Build with shared libraries.\" ON)\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#add_subdirectory(test)  #these just don't work on windows\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Utilities/socketxx/socket++/CMakeLists.txt" : {
      "ObjectId" : "bbda9b794d9c1577d2705978b51f92f2e52110c9",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# common\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(CMAKE_REQUIRED_INCLUDES \"string.h\")\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# specific\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# FIXME this should be try_compile:\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#pipestream.cpp pipestream.h\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#smtp.cpp smtp.h\n\n#ftp.cpp ftp.h\n\n#sig.cpp sig.h\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#sockunix.cpp sockunix.h\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Install library\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Runtime\n",
        "Line" : 88,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#Development\n",
        "Line" : 95,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 10
    },
    "Wrapping/CMakeLists.txt" : {
      "ObjectId" : "aca078b1372345108ccd0fa068e27019b0f996c8",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# python\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# java\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# php\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# perl\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# C#\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#  add_subdirectory(Csharp)\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "Wrapping/Csharp/CMakeLists.txt" : {
      "ObjectId" : "c4ddce0b7bc4b74e7da22d42257f88855550d246",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Special CMake Module required when doing C# Testing\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# C# Cmd line options:\n\n# http://msdn.microsoft.com/en-us/library/ms379563(VS.80).aspx\n\n# http://msdn.microsoft.com/en-us/library/aa288436(VS.71).aspx\n\n# http://msdn.microsoft.com/en-us/library/aa288481(VS.71).aspx\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# See sf.net bug #2895067\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# libgdksharpglue.so\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Module are always place in the library destination but for poor win32 user I\n\n# decided to place them right next to the other dlls\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# From Mirco Bauer on debian-cli\n\n# Hm? You wrote the C# binding for gdcm? Using C# in the lib name is\n\n# very wrong in all cases. The CIL bytecode can be used by any language\n\n# that targets the CLI. To give some examples: VB.NET, Boo, Nemerle (yes,\n\n# those are all in debian already :)).\n\n#\n\n# There is a common prefix of nFOO (like nunit or nant) and for\n\n# bindings even more common is the suffix of FOO-sharp (not -csharp)\n\n# like gtk-sharp, gnome-sharp, evolution-sharp.\n\n#\n\n# /usr/lib/mono/gtk-sharp/gtk-sharp.dll\n\n# /usr/lib/mono/gtk-sharp/gdk-sharp.dll\n\n# /usr/lib/mono/gtk-sharp/atk-sharp.dll\n",
        "Line" : 63,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# building HelloCSharpWorld:\n",
        "Line" : 87,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# $ export MONO_LOG_LEVEL=\"debug\"; export MONO_LOG_MASK=\"dll\"\n\n# $ export LD_LIBRARY_PATH=/home/mmalaterre/Projects/gdcm/debug-gcc43/Wrapping/Csharp/:/home/mmalaterre/Projects/gdcm/debug-gcc43/bin\n",
        "Line" : 98,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# GDCMCSharp from the outside rebuild the C# binding not just the *.dll but the glue\n",
        "Line" : 103,
        "CharPositionInLine" : 43
      },
      "9" : {
        "Text" : "# because gdcm-sharp.dll is constructed with custom commands, it need the\n\n# install(FILES signature:\n",
        "Line" : 119,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 10
    },
    "Wrapping/Java/CMakeLists.txt" : {
      "ObjectId" : "a0c33cb8ede8c996d87c73d50250a74f72c62257",
      "LastModified" : "2019-04-03T11:46:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Special CMake Module required when doing Java Testing\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# $ export JAVA_HOME=/usr/lib/j2sdk1.6-sun/\n\n# $ export JAVA_HOME=/usr/lib/jvm/java-1.5.0-sun/\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# javac, jar\n",
        "Line" : 25,
        "CharPositionInLine" : 57
      },
      "3" : {
        "Text" : "# http://www.debian.org/doc/packaging-manuals/java-policy/x105.html\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# There is no real point in linking explicitly to jni libraries. This is a java module\n\n# it could contains undefined symbols after all.\n\n#${JNI_LIBRARIES}\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# disable lib prefix on windows with mingw\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# swig-java dummy run:\n\n# the following execute_process is a dummy run and generate all *.java files in a directory\n\n# we can then glob all *.java to build rules in case the java wrapper becomes broken\n\n#execute_process(COMMAND ${SWIG_EXECUTABLE}\n\n#  -java\n\n#  -I${GDCM_BINARY_DIR}/Source/Common\n\n#  -I${GDCM_SOURCE_DIR}/Source/Common\n\n#  -I${GDCM_SOURCE_DIR}/Source/DataStructureAndEncodingDefinition\n\n#  -I${GDCM_SOURCE_DIR}/Source/MediaStorageAndFileFormat\n\n#  -I${GDCM_SOURCE_DIR}/Source/DataDictionary\n\n#  -c++\n\n#  -o dummy.o\n\n#  ${CMAKE_CURRENT_SOURCE_DIR}/gdcm.i\n\n#  WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}\n\n#  RESULT_VARIABLE res\n\n#)\n\n#message(\"res:${res}\")\n\n#file(GLOB javafiles \"${CMAKE_CURRENT_BINARY_DIR}/*.java\")\n\n#message(\"javafile:${javafiles}\")\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# http://www.swig.org/Doc2.0/Java.html#Java_typemaps_c_to_java_types\n",
        "Line" : 74,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# 1. run the custom command only when the gdcmJAVA_wrap.cxx has been generated\n\n# (which means all *.java should be there) Some compiler are picky about Java\n\n# version. For instance covariant return type was only added to Java 5, so to\n\n# please compiler such as ecj (Eclipse Java Compiler 0.894_R34x) explicitly\n\n# state we want 1.5 version to compile gdcm::ImageToImageFilter::GetOutput()\n\n# const as covariant return type\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#${javafiles}\n",
        "Line" : 92,
        "CharPositionInLine" : 126
      },
      "10" : {
        "Text" : "# 2. now that the *.class have been generated construct the jar file. We can\n\n# only rely on the gdcm.java / gdcm.class to build dependencie, I am pretty\n\n# sure it will break parallel builds... oh well\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#COMMAND ${CMAKE_COMMAND} ARGS -E make_directory ${CMAKE_CURRENT_BINARY_DIR}/java/lib\n",
        "Line" : 113,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# 3. ok now add the target\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# because gdcm.jar is constructed with custom commands, it need the install(FILES signature:\n",
        "Line" : 133,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 14
    },
    "Wrapping/PHP/CMakeLists.txt" : {
      "ObjectId" : "0f91205dcd1d0bb5dde7155ee88494bf669fcb51",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Required:\n\n# sudo apt-get install php5-dev\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#find_package(PHP4 REQUIRED)\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Some old swig 1.3 did not support this option:\n\n#set(CMAKE_SWIG_OUTDIR \"${CMAKE_CURRENT_BINARY_DIR}\")\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# swig expect a name like that: php_gdcm.so\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# warning, by default there are undefined symbols in the generated php/gdcm module\n\n# one would need to actually link to : /usr/lib/apache2/modules/libphp5.so\n\n# I do not believe this is correct, instead make sure that\n\n# CMAKE_MODULE_LINKER_FLAGS = -Wl,--no-undefined\n\n# will make gdcm fails to compile:\n\n# with something like undefined reference to `zend_error'\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Remove 'lib' prefix :no-op on windows and valid for UNIX based syste\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# For some reason the php glue module name is odd using swig 1.3.40, it is php_gdcm on windows\n\n# while simply gdcm on other unix system:\n\n# ...\n\n#    if (!dl('php_gdcm.dll')) return;\n\n#  } else {\n\n#    // PHP_SHLIB_SUFFIX gives 'dylib' on MacOS X but modules are 'so'.\n\n#    if (PHP_SHLIB_SUFFIX === 'dylib') {\n\n#      if (!dl('gdcm.so')) return;\n\n#    } else {\n\n#      if (!dl('gdcm.'.PHP_SHLIB_SUFFIX)) return;\n\n# ...\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# See gdcm bug #3175803\n\n# This is fixed in SWIG 2.0.2:\n\n# http://sourceforge.net/tracker/?func=detail&atid=101645&aid=3166423&group_id=1645\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Let's copy gdcm.php into the bin dir:\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Module are always place in the library destination\n\n# but for poor win32 user I decided to place them\n\n# right next to the other dlls\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# because gdcm.php is constructed with custom commands, it need the install(FILES signature:\n",
        "Line" : 87,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 11
    },
    "Wrapping/Perl/CMakeLists.txt" : {
      "ObjectId" : "b4a097a84daf17ef90cc63e7707e818aeb71ec3c",
      "LastModified" : "2018-01-06T15:36:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Required:\n\n# sudo apt-get install libperl-dev\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# http://www.swig.org/Doc2.0/Perl5.html\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO check convetion for perl module name:\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#set_target_properties(${SWIG_MODULE_perl_gdcm_REAL_NAME} PROPERTIES LINK_INTERFACE_LIBRARIES \"\")\n\n# Remove 'lib' prefix :no-op on windows and valid for UNIX based syste\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Let's copy gdcm.pm into the bin dir:\n\n#add_custom_command(\n\n#  OUTPUT ${LIBRARY_OUTPUT_PATH}/gdcm.pm\n\n#  COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINARY_DIR}/gdcm.php ${LIBRARY_OUTPUT_PATH}/gdcm.pm\n\n#  DEPENDS \"${swig_generated_file_fullname}\"\n\n#  COMMENT \"copying gdcm.pm\"\n\n#)\n\n#add_custom_target(GDCMPERL ALL\n\n#  DEPENDS ${LIBRARY_OUTPUT_PATH}/gdcm.pm\n\n#  COMMENT \"building gdcm.pm\"\n\n#)\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Module are always place in the library destination\n\n# but for poor win32 user I decided to place them\n\n# right next to the other dlls\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# because gdcm.pm is constructed with custom commands, it need the install(FILES signature:\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    },
    "Wrapping/Python/CMakeLists.txt" : {
      "ObjectId" : "1160d2498f75fd4a9c23ee2bccd7423ad911ae2a",
      "LastModified" : "2019-04-03T11:46:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Special CMake Module required when doing Python Testing\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Try to rebuild wrapping a little more often:\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO:\n\n# SWIG is really a pain in the neck to use, a better alternative is Py++ which is using\n\n# gccxml for the C++ parser and allow a full ANSI C++ support\n\n# Note gcc has some issue with RTTI stuff:\n\n# http://groups.google.com/group/comp.lang.c++.moderated/browse_thread/thread/ac889a7d9eac902f\n\n# http://gcc.gnu.org/ml/gcc-help/2007-10/msg00239.html\n\n# http://wiki.python.org/moin/boost.python/CrossExtensionModuleDependencies\n\n# http://www.boost-consulting.com/writing/bpl.html\n\n# http://gcc.gnu.org/ml/gcc/2002-05/msg00866.html\n\n# http://mail.python.org/pipermail/c++-sig/2002-May/001021.html\n\n# http://mail.python.org/pipermail/python-dev/2002-May/023923.html\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# 2.0.5 is required here to solve the issue with wrapping of vector<int>::size_type\n\n# see full thread at:\n\n# http://sourceforge.net/mailarchive/message.php?msg_id=29217941\n\n# 2.0.5 cannot be used because of the error\n\n#  error: invalid initialization of reference of type 'ptrdiff_t& {aka int&}' from expression of type 'long int'\n\n# http://sourceforge.net/mailarchive/message.php?msg_id=29294773\n\n# 2.0.6 cannot be used because of a serious typemap bug in 2.0.5\n\n# http://sourceforge.net/mailarchive/message.php?msg_id=29305946\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Do not cover this lib\n\n#\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Note:\n\n# python -c \"from struct import pack; print  pack('5b', (41*len('99')), pow(8,2)+20, 4900**0.5, range(78)[-1], 10)\"\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# TODO Need to check consistency python interp and python libs...\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Lamest excuse ever:\n\n# http://mail.python.org/pipermail/python-list/2002-April/141189.html\n\n# So here come craziest hack ever, since I cannot control the output of swig,\n\n# I need to fake a Python.h file only for MSVC compilers...insane !\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# just plain including pyconfig.h is working...until one crazy python dev decide otherwise...\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# BUG: DO NOT USE -interface flag it is NOT supported in cmake and in cmake > 2.6 will cause infinite rebuild\n\n# Ref: http://www.cmake.org/pipermail/cmake/2008-August/023237.html\n\n# UseSWIG and -interface flag (was: Re: CMake 2.6.1 available for download)\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# http://swig.org/Doc2.0/SWIGDocumentation.html#Python_python3support\n",
        "Line" : 82,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# TODO: PythonInterp and PythonLibs are not working together well\n\n# see: http://bugs.debian.org/677598\n\n#message(${PYTHONLIBS_VERSION_STRING})\n\n#message(${PYTHON_VERSION_MAJOR})\n\n#separate_arguments(CMAKE_SWIG_FLAGS)\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# While trying to get rid of the compilation warning in swig generated c++ code, I thought I could\n\n# simply do the following:\n\n#set(CMAKE_CXX_FLAGS \"\")\n\n# well no, you cannot, it get rid of some important flags, and make the _gdcm.so incompatible with\n\n# the other gdcm lib. bad !!!\n\n#set (SWIG_MODULE_${MODULE_NAME}_EXTRA_DEPS ${SWIG_MODULE_${MODULE_NAME}_EXTRA_DEPS} ${CMAKE_CURRENT_SOURCE_DIR}/docstrings.i)\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Apparently on my UNIX, python module (/usr/lib/pyshared/pythonX.Y/*/*.so) do not explicitly\n\n# link to python libraries...Leave default to always link to python libraries since\n\n# this is required at least on Apple & Win32, but leave the option to advanced user to explicitly\n\n# refuse linking to python libs (set GDCM_NO_PYTHON_LIBS_LINKING to ON):\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Python extension modules on Windows must have the extension \".pyd\"\n\n# instead of \".dll\" as of Python 2.5.  Older python versions do support\n\n# this suffix.\n\n# http://docs.python.org/whatsnew/ports.html#SECTION0001510000000000000000\n\n# <quote>\n\n# Windows: .dll is no longer supported as a filename extension for extension modules.\n\n# .pyd is now the only filename extension that will be searched for.\n\n# </quote>\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# shared libs on windows needs to be fully resolved\n",
        "Line" : 126,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# swig generates a _gdcm.so and a gdcm.py, we need to copy gdcm.py to the proper place:\n\n# gdcm.py is the interface name != implementation name, so we need to keep 'gdcm', so that 'import gdcm'\n\n# from a python script always work\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#Module are always place in the library destination\n\n#but for poor win32 user I decided to place them\n\n# right next to the other dlls\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# the python file is not a dev file, but part of the gdcm module...\n",
        "Line" : 151,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Test that will try to load any class in the target language: python\n\n# it make sure swig was not broken accidentally\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# TODO\n\n# python -c \"from distutils import sysconfig; print sysconfig.get_python_lib()\"\n\n# /usr/lib/python2.4/site-packages\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    }
  },
  "FileTypes" : {
    "CMAKE" : 134
  },
  "ElapsedTime" : 5675
}