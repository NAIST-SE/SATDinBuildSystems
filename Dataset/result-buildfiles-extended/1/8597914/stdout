{
  "Repository" : "8597914",
  "Revision" : "HEAD",
  "ObjectId" : "6d95f3ceb262ce51e46014baf86365b47bab498e",
  "CommitTime" : "2019-03-31T20:15:05Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "0a5507b924c38620bb9845e332e1af0b72b4972c",
      "LastModified" : "2019-03-19T13:10:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set up CMAKE path\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### Useful functions\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Prepend sources with current source directory\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Macro to add OSX framework\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Macro to copy Windows DLLs to Debug/Release folder for easy debugging\n\n# Note: this is general purpose, we could copy anything. Just using for DLLs on MSVC though\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# http://stackoverflow.com/a/26983405/3064195\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# bitness check\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# OS macros\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Set EXE names so the assets CMakeLists can refer to its target\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## config.h generation\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "##### PACKAGE CONFIGURATION #####\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#set(CPACK_PACKAGE_DESCRIPTION_FILE )\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "assets/CMakeLists.txt" : {
      "ObjectId" : "6edb3df130de0d7dd28c4d6d8431ea425a3fd227",
      "LastModified" : "2018-11-25T13:12:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Assets Target Configuration ##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# MD5 generation\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Installation\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/Modules/CMakeASM_YASMInformation.cmake" : {
      "ObjectId" : "1765180853bb2d23217a1eb785f97737411e68b1",
      "LastModified" : "2015-02-02T03:25:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n# Copyright 2010 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# support for the yasm assembler\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Load the generic ASMInformation file:\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/Modules/CMakeDetermineASM_YASMCompiler.cmake" : {
      "ObjectId" : "a5e7c9e5801121f04411e5f1b1c6efa98736bcc1",
      "LastModified" : "2015-02-02T03:25:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n# Copyright 2010 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find the nasm assembler. yasm (http://www.tortall.net/projects/yasm/) is nasm compatible\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Load the generic DetermineASM compiler file with the DIALECT set properly:\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/Modules/CMakeTestASM_YASMCompiler.cmake" : {
      "ObjectId" : "745f7125c4a2f7a003c488b89d977b75a8eb3ebc",
      "LastModified" : "2015-02-02T03:25:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n# Copyright 2010 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This file is used by EnableLanguage in cmGlobalGenerator to\n\n# determine that the selected ASM_NASM \"compiler\" works.\n\n# For assembler this can only check whether the compiler has been found,\n\n# because otherwise there would have to be a separate assembler source file\n\n# for each assembler on every architecture.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Modules/FindGME.cmake" : {
      "ObjectId" : "ea80af45442c098f21cef962082ce0602546cd29",
      "LastModified" : "2018-11-25T13:12:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Modules/FindSDL2.cmake" : {
      "ObjectId" : "2fc833cefcd01c34e2430c2ecd2bd999ca85d82b",
      "LastModified" : "2018-11-25T13:12:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find SDL2\n\n# Once done, this will define\n\n#\n\n#  SDL2_FOUND - system has SDL2\n\n#  SDL2_INCLUDE_DIRS - SDL2 include directories\n\n#  SDL2_LIBRARIES - link libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# includes\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# library\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# set include dir variables\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/Modules/FindSDL2_main.cmake" : {
      "ObjectId" : "d4cbdeb11e199517fe53a6669e0850a6018dd11b",
      "LastModified" : "2018-11-25T13:12:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find SDL2\n\n# Once done, this will define\n\n#\n\n#  SDL2_MAIN_FOUND - system has SDL2\n\n#  SDL2_MAIN_INCLUDE_DIRS - SDL2 include directories\n\n#  SDL2_MAIN_LIBRARIES - link libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# includes\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# library\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# set include dir variables\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/Modules/FindSDL2_mixer.cmake" : {
      "ObjectId" : "9af3e26dd85895d2ebac39030eb3b0f2b3cfea0f",
      "LastModified" : "2018-11-25T13:12:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find SDL2\n\n# Once done, this will define\n\n#\n\n#  SDL2_MIXER_FOUND - system has SDL2\n\n#  SDL2_MIXER_INCLUDE_DIRS - SDL2 include directories\n\n#  SDL2_MIXER_LIBRARIES - link libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# includes\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# library\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# set include dir variables\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/Modules/GitUtilities.cmake" : {
      "ObjectId" : "d29e6b509dd27015f429c9e8f4de12e20fcc5b12",
      "LastModified" : "2018-12-04T17:18:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Git utilities\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/LibFindMacros.cmake" : {
      "ObjectId" : "81fef7d8e7bd5e9adcfd42cc3fe6a06924b8ab38",
      "LastModified" : "2018-11-25T13:12:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Version 2.2\n\n# Public Domain, originally written by Lasse Kärkkäinen <tronic>\n\n# Maintained at https://github.com/Tronic/cmake-modules\n\n# Please send your improvements as pull requests on Github.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find another package and make it a dependency of the current package.\n\n# This also automatically forwards the \"REQUIRED\" argument.\n\n# Usage: libfind_package(<prefix> <another package> [extra args to find_package])\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# A simple wrapper to make pkg-config searches a bit easier.\n\n# Works the same as CMake's internal pkg_check_modules but is always quiet.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Avoid useless copy&pasta by doing what most simple libraries do anyway:\n\n# pkg-config, find headers, find library.\n\n# Usage: libfind_pkg_detect(<prefix> <pkg-config args> FIND_PATH <name> [other args] FIND_LIBRARY <name> [other args])\n\n# E.g. libfind_pkg_detect(SDL2 sdl2 FIND_PATH SDL.h PATH_SUFFIXES SDL2 FIND_LIBRARY SDL2)\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Parse arguments\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Find library\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Extracts a version #define from a version.h file, output stored to <PREFIX>_VERSION.\n\n# Usage: libfind_version_header(Foobar foobar/version.h FOOBAR_VERSION_STR)\n\n# Fourth argument \"QUIET\" may be used for silently testing different define names.\n\n# This function does nothing if the version variable is already defined.\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Skip processing if we already have a version or if the include dir was not found\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Process optional arguments\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Read the header and parse for version number\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# No regex match?\n",
        "Line" : 85,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Export the version string\n",
        "Line" : 92,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Do the final processing once the paths have been detected.\n\n# If include dirs are needed, ${PREFIX}_PROCESS_INCLUDES should be set to contain\n\n# all the variables, each of which contain one include directory.\n\n# Ditto for ${PREFIX}_PROCESS_LIBS and library files.\n\n# Will set ${PREFIX}_FOUND, ${PREFIX}_INCLUDE_DIRS and ${PREFIX}_LIBRARIES.\n\n# Also handles errors in case library detection was required, etc.\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Skip processing if already processed during this configuration run\n",
        "Line" : 103,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Start with the assumption that the package was found\n",
        "Line" : 108,
        "CharPositionInLine" : 19
      },
      "15" : {
        "Text" : "# Did we find any files? Did we miss includes? These are for formatting better error messages.\n",
        "Line" : 110,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Shorthands for some variables that we need often\n",
        "Line" : 114,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Lists of config option names (all, includes, libs)\n",
        "Line" : 121,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Process deps to add to\n",
        "Line" : 126,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# The package seems to export option lists that we can use, woohoo!\n",
        "Line" : 129,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "# If plural forms don't exist or they equal singular forms\n",
        "Line" : 133,
        "CharPositionInLine" : 6
      },
      "21" : {
        "Text" : "# Singular forms can be used\n",
        "Line" : 136,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# Oh no, we don't know the option names\n",
        "Line" : 144,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "# Include/library names separated by spaces (notice: not CMake lists)\n",
        "Line" : 163,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Process all includes and set found false if any are missing\n",
        "Line" : 167,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Process all libraries and set found false if any are missing\n",
        "Line" : 178,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Version checks\n",
        "Line" : 188,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# If all-OK, hide all config options, export variables, print status and exit\n",
        "Line" : 198,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# Format messages for debug info and the type of error\n",
        "Line" : 221,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# Fatal error out if REQUIRED\n",
        "Line" : 256,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# Otherwise just print a nasty warning\n",
        "Line" : 261,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 31
    },
    "libs/SDL2/Makefile" : {
      "ObjectId" : "9edfd003e83e0fc85e28622d61634d5475551dd8",
      "LastModified" : "2018-11-25T13:12:34Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Makefile for installing the mingw32 version of the SDL library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "libs/SDL2/i686-w64-mingw32/lib/cmake/SDL2/sdl2-config.cmake" : {
      "ObjectId" : "ee347fcb9bbafc54f19abc1bd9dac7bfcfbb57e1",
      "LastModified" : "2018-11-25T13:12:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# sdl2 cmake project-config input for ./configure scripts\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "libs/SDL2/include/SDL_config.h.cmake" : {
      "ObjectId" : "c57266c413081c253f3e5526e025e3cb8d1bf53c",
      "LastModified" : "2018-11-25T13:12:34Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/*\n  Simple DirectMedia Layer\n  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>\n\n  This software is provided 'as-is', without any express or implied\n  warranty.  In no event will the authors be held liable for any damages\n  arising from the use of this software.\n\n  Permission is granted to anyone to use this software for any purpose,\n  including commercial applications, and to alter it and redistribute it\n  freely, subject to the following restrictions:\n\n  1. The origin of this software must not be misrepresented; you must not\n     claim that you wrote the original software. If you use this software\n     in a product, an acknowledgment in the product documentation would be\n     appreciated but is not required.\n  2. Altered source versions must be plainly marked as such, and must not be\n     misrepresented as being the original software.\n  3. This notice may not be removed or altered from any source distribution.\n*/",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/**\n *  \\file SDL_config.h.in\n *\n *  This is a set of defines to configure the SDL features\n */",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/* General platform specific identifiers */",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* C language features */",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* C datatypes */\n/* Define SIZEOF_VOIDP for 64/32 architectures */",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* Comment this if you want to build without any C library requirements */",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/* Useful headers */",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/* C library functions */",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "/* We may need some replacement for stdarg.h here */",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "/* SDL internal assertion support */",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "/* Allow disabling of core subsystems */",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "/* Enable various audio drivers */",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "/* Enable various input drivers */",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "/* Enable various shared object loading systems */",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "/* Enable various threading systems */",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "/* Enable various timer systems */",
        "Line" : 282,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "/* Enable various video drivers */",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "/* Enable OpenGL support */",
        "Line" : 345,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "/* Enable Vulkan support */",
        "Line" : 357,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "/* Enable system power support */",
        "Line" : 360,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "/* Enable system filesystem support */",
        "Line" : 369,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "/* Enable assembly routines */",
        "Line" : 378,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "/* Enable dynamic libsamplerate support */",
        "Line" : 382,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "/* Platform specific definitions */",
        "Line" : 385,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "/* Older Visual C++ headers don't have the Win64-compatible typedefs... */",
        "Line" : 420,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "libs/SDL2/test/CMakeLists.txt" : {
      "ObjectId" : "3c25c5c7c98790944cc22c408cec58152544b0e6",
      "LastModified" : "2018-11-25T13:12:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Global settings for all of the test targets\n\n# FIXME: is this wrong?\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FIXME: Parent directory CMakeLists.txt only sets these for mingw/cygwin,\n\n# but we need them for VS as well.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# HACK: Dummy target to cause the resource files to be copied to the build directory.\n\n# Need to make it an executable so we can use the TARGET_FILE_DIR generator expression.\n\n# This is needed so they get copied to the correct Debug/Release subdirectory in Xcode.\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TODO: Might be easier to make all targets depend on the resources...?\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "libs/SDL2/test/nacl/Makefile" : {
      "ObjectId" : "9ca166c12742e3c6ae23d6c7ac84a421244e9c1d",
      "LastModified" : "2018-11-25T13:12:34Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (c) 2013 The Chromium Authors. All rights reserved.\n\n# Use of this source code is governed by a BSD-style license that can be\n\n# found in the LICENSE file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# GNU Makefile based on shared rules provided by the Native Client SDK.\n\n# See README.Makefiles for more details.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# NACL_SDK_ROOT ?= $(abspath $(CURDIR)/../../..)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ppapi_simple and SDL2 end up being listed twice due to dependency solving issues -- Gabriel\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Build rules generated by macros from common.mk:\n\n# Overriden macro from NACL SDK to be able to customize the library search path -- Gabriel\n\n# Specific Link Macro \n\n#\n\n# $1 = Target Name\n\n# $2 = List of inputs\n\n# $3 = List of libs\n\n# $4 = List of deps\n\n# $5 = List of lib dirs\n\n# $6 = Other Linker Args\n\n#\n\n# For debugging, we translate the pre-finalized .bc file.\n\n#\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "libs/SDL2/x86_64-w64-mingw32/lib/cmake/SDL2/sdl2-config.cmake" : {
      "ObjectId" : "455d8ed55aa4860f8c85b7be139afe131a36c4fd",
      "LastModified" : "2018-11-25T13:12:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# sdl2 cmake project-config input for ./configure scripts\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "libs/SDL2_mixer/Makefile" : {
      "ObjectId" : "244056513ff6435431142e6699b8d3e9aad8dd3d",
      "LastModified" : "2018-11-25T13:12:34Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Makefile for installing the mingw32 version of the SDL2_mixer library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "libs/gme/CMakeLists.txt" : {
      "ObjectId" : "392b01856da89e07ac5430d4db0df223194152f3",
      "LastModified" : "2019-02-27T18:49:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake project definition file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# When version is changed, also change the one in gme/gme.h to match\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# 2.6+ always assumes FATAL_ERROR, but 2.4 and below don't.\n\n# Of course, 2.4 might work, in which case you're welcome to drop\n\n# down the requirement, but I can't test that.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Default emulators to build (all of them! ;)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Check for GCC \"visibility\" support.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# get the gcc version\n",
        "Line" : 67,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# gcc <4.1 had poor support for symbol visibility\n",
        "Line" : 71,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# GCC >= 4.2 also correctly supports making inline members have hidden\n\n# visibility by default.\n",
        "Line" : 77,
        "CharPositionInLine" : 9
      },
      "8" : {
        "Text" : "# test visibility\n",
        "Line" : 83,
        "CharPositionInLine" : 11
      },
      "9" : {
        "Text" : "# Cache this result\n",
        "Line" : 85,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Shared library defined here\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# EXCLUDE_FROM_ALL adds build rules but keeps it out of default build\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "libs/gme/demo/CMakeLists.txt" : {
      "ObjectId" : "024e9e9732bb5e95e60eb0b670f46d35678bfec9",
      "LastModified" : "2018-11-25T13:12:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Rules for building the demo.  Doesn't use an installed gme if you've already\n\n# installed the project so if you're copying these rules you probably don't\n\n# even need these next two lines if you're building against system-installed\n\n# gme.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add command to copy build file over.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# VERBATIM is essentially required, \"please use correct command line kthx\"\n",
        "Line" : 15,
        "CharPositionInLine" : 14
      },
      "CommentCount" : 3
    },
    "libs/gme/gme/CMakeLists.txt" : {
      "ObjectId" : "534be8a858b4c2d0e546d8096318aff4346e434a",
      "LastModified" : "2019-02-27T18:49:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# List of source files required by libgme and any emulators\n\n# This is not 100% accurate (Fir_Resampler for instance) but\n\n# you'll be OK.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Ay_Apu is very popular around here\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# so is Ym2612_Emu\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# But none are as popular as Sms_Apu\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Ay_Apu.cpp included earlier\n",
        "Line" : 40,
        "CharPositionInLine" : 14
      },
      "5" : {
        "Text" : "# Sms_Apu.cpp included earlier\n\n# Ym2612_Emu.cpp included earlier\n",
        "Line" : 57,
        "CharPositionInLine" : 14
      },
      "6" : {
        "Text" : "# Ay_Apu.cpp included earlier\n\n# Sms_Apu.cpp included earlier\n",
        "Line" : 73,
        "CharPositionInLine" : 14
      },
      "7" : {
        "Text" : "# Sms_Apu.cpp included earlier\n\n# Ym2612_Emu.cpp included earlier\n",
        "Line" : 119,
        "CharPositionInLine" : 14
      },
      "8" : {
        "Text" : "# These headers are part of the generic gme interface.\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Run during cmake phase, so this is available during make\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# On some platforms we may need to change headers or whatnot based on whether\n\n# we're building the library or merely using the library. The following is\n\n# only defined when building the library to allow us to tell which is which.\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# For the gme_types.h\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Add library to be compiled.\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# The version is the release.  The \"soversion\" is the API version.  As long\n\n# as only build fixes are performed (i.e. no backwards-incompatible changes\n\n# to the API), the SOVERSION should be the same even when bumping up VERSION.\n\n# The way gme.h is designed, SOVERSION should very rarely be bumped, if ever.\n\n# Hopefully the API can stay compatible with old versions.\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# DLL platforms\n\n# DLL platforms\n",
        "Line" : 158,
        "CharPositionInLine" : 45
      },
      "CommentCount" : 15
    },
    "libs/gme/player/CMakeLists.txt" : {
      "ObjectId" : "c37e277199f1672dd6abdb82a0c946eff1c41ff3",
      "LastModified" : "2018-11-25T13:12:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Is not to be installed though\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "libs/libpng-src/CMakeLists.txt" : {
      "ObjectId" : "a3ab4649b7f1f33406e254cee588470b35989d45",
      "LastModified" : "2018-11-25T13:12:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2007-2010 Glenn Randers-Pehrson\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This code is released under the libpng license.\n\n# For conditions of distribution and use, see the disclaimer\n\n# and license in png.h\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# needed packages\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# not needed on windows\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# COMMAND LINE OPTIONS\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#TODO:\n\n# PNG_CONSOLE_IO_SUPPORTED\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# maybe needs improving, but currently I don't know when we can enable what :)\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# this env var is normally only set on win64\n",
        "Line" : 86,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# SET LIBNAME\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# to distinguish between debug and release lib\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# OUR SOURCES\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# SOME NEEDED DEFINITIONS\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#if building msvc static this has NOT to be defined\n",
        "Line" : 136,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# NOW BUILD OUR TARGET\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# msvc does not append 'lib' - do it here to have consistent name\n",
        "Line" : 170,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# does not work without changing name\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# msvc does not append 'lib' - do it here to have consistent name\n",
        "Line" : 181,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# does not work with msvc due to png_lib_ver issue\n",
        "Line" : 192,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# CREATE PKGCONFIG FILES\n\n# we use the same files like ./configure, so we have to set its vars\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# SET UP LINKS\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#   VERSION 0.${PNGLIB_RELEASE}.1.2.46\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# that's uncool on win32 - it overwrites our static import lib...\n",
        "Line" : 225,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# INSTALL\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Install man pages\n",
        "Line" : 257,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Install pkg-config files\n",
        "Line" : 260,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# what's with libpng.txt and all the extra files?\n",
        "Line" : 271,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# UNINSTALL\n\n# do we need this?\n",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# DIST\n\n# do we need this?\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# to create msvc import lib for mingw compiled shared lib\n\n# pexports libpng.dll > libpng.def\n\n# lib /def:libpng.def /machine:x86\n",
        "Line" : 281,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 29
    },
    "libs/libpng-src/Makefile.am" : {
      "ObjectId" : "d3289ca95370cb417e0db92e426ef03e2a848981",
      "LastModified" : "2018-11-25T13:12:34Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Makefile.am:\n\n#   Source file for Makefile.in (and hence Makefile)\n\n#\n\n# Makefile.am need only be changed on a major version number\n\n# change (e.g. libpng12 --> libpng14).  In that case seach\n\n# this file for every instance of the old base name (libpng12)\n\n# and change to the new one (libpng14), then change the\n\n# -version-number settings below so that the new values have\n\n# the correct major part (first field).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# libpng does not follow GNU file name conventions\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# test programs - run on make check, make distcheck\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# man pages\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# generate the -config scripts if required\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# rules to build libpng, only build the old library on request\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# MAJOR UPGRADE: the version-number settings below must be changed.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# -rpath is needed as automake doesn't know the directory\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Versioned symbols and restricted exports\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Only restricted exports when possible\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Avoid depending upon Character Ranges.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#distribute headers in /usr/include/libpng/*\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# pkg-config stuff, note that libpng.pc is always required in order\n\n# to get the correct library\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#extra source distribution files.\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# install the .../include headers as links to the new ones\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# do evil things to libpng to cause libpng12 to be used\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16,
      "Errorlog" : "line 110:65 token recognition error at: '\\1'\nline 111:64 token recognition error at: '\\1'\n"
    },
    "libs/miniupnpc/CMakeLists.txt" : {
      "ObjectId" : "082b653a9fcf29bafae49d46b5b5f800557d2b69",
      "LastModified" : "2018-11-25T13:12:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# XP or higher for getnameinfo and friends\n",
        "Line" : 34,
        "CharPositionInLine" : 42
      },
      "1" : {
        "Text" : "# Set compiler specific build flags\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set our own default flags at first run.\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# CMAKE_C_FLAGS gets appended to the other C flags\n",
        "Line" : 50,
        "CharPositionInLine" : 52
      },
      "4" : {
        "Text" : "#elseif (CMAKE_SYSTEM_NAME STREQUAL \"Solaris\")\n\n#  find_library (SOCKET_LIBRARY NAMES socket)\n\n#  find_library (NSL_LIBRARY NAMES nsl)\n\n#  find_library (RESOLV_LIBRARY NAMES resolv)\n\n#  set (LDLIBS ${SOCKET_LIBRARY} ${NSL_LIBRARY} ${RESOLV_LIBRARY} ${LDLIBS})\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# set (UPNPC_INSTALL_TARGETS ${UPNPC_INSTALL_TARGETS} testminixml minixmlvalid testupnpreplyparse testigddescparse testminiwget)\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# vim: ts=2:sw=2\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "libs/miniupnpc/Makefile" : {
      "ObjectId" : "2f46e6d19855a4039e686bad80e420eb3d05795a",
      "LastModified" : "2018-11-25T13:12:34Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# $Id: Makefile,v 1.81 2011/06/21 15:24:14 nanard Exp $\n\n# MiniUPnP Project\n\n# http://miniupnp.free.fr/\n\n# (c) 2005-2011 Thomas Bernard\n\n# to install use :\n\n# $ PREFIX=/tmp/dummylocation make install\n\n# or\n\n# $ INSTALLPREFIX=/usr/local make install\n\n# or \n\n# make install (will go to /usr/bin, /usr/lib, etc...)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#AR = gar\n\n#CFLAGS = -O -Wall -g -DDEBUG\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# -DNO_GETADDRINFO\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# see http://code.google.com/p/jnaerator/\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#following libs are needed on Solaris\n\n#LDLIBS=-lsocket -lnsl -lresolv\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# APIVERSION is used to build SONAME\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# HEADERS to install\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# library names\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# install directories\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\tvalidateminixml validateminiwget\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# clean python stuff\n",
        "Line" : 124,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "#python setup.py clean\n",
        "Line" : 127,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "libs/miniupnpc/miniupnpcstrings.h.cmake" : {
      "ObjectId" : "a3726350ce791f0f4f4cdaf2bba4e05b0ae2a56b",
      "LastModified" : "2018-11-25T13:12:34Z",
      "FileType" : "CMAKESOURCE",
      "CommentCount" : 0
    },
    "libs/win-iconv/CMakeLists.txt" : {
      "ObjectId" : "35fc6385aa3b9e2aed2fc4c2cba92b319cd20897",
      "LastModified" : "2018-11-25T13:12:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# tests:\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "libs/win-iconv/FindWcecompat.cmake" : {
      "ObjectId" : "42769750933dde84603637b9adfa546abc6d8be3",
      "LastModified" : "2018-11-25T13:12:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find Wcecompat functionality\n\n# Once done this will define\n\n#\n\n#  WCECOMPAT_FOUND - system has Wcecompat\n\n#  WCECOMPAT_INCLUDE_DIR - Wcecompat include directory\n\n#  WCECOMPAT_LIBRARIES - Libraries needed to use Wcecompat\n\n#\n\n# Copyright (c) 2010, Andreas Holzammer, <andy@kdab.com>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# I have no idea what this is about, but it seems to be used quite often, so I add this here\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "libs/win-iconv/Makefile" : {
      "ObjectId" : "50bffbb74a325117dba37ca553591792c449774c",
      "LastModified" : "2018-11-25T13:12:34Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# comma separated list (e.g. \"iconv.dll,libiconv.dll\")\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "libs/zlib/CMakeLists.txt" : {
      "ObjectId" : "0a56ff6f2992150e55f77366fa8af1bf95c3837b",
      "LastModified" : "2018-11-25T13:12:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Check to see if we have large file support\n\n#\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We add these other definitions here because CheckTypeSize.cmake\n\n# in CMake 2.4.x does not automatically do so and we want\n\n# compatibility with CMake 2.4.x.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# clear variable\n",
        "Line" : 40,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "#\n\n# Check for fseeko\n\n#\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Check for unistd.h\n\n#\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If we're doing an out of source build and the user has a zconf.h\n\n# in their source tree...\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#============================================================================\n\n# zlib\n\n#============================================================================\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# If present will override custom build rule below.\n",
        "Line" : 117,
        "CharPositionInLine" : 23
      },
      "8" : {
        "Text" : "# parse the full version number from zlib.h and include in ZLIB_FULL_VERSION\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# This gets us DLL resource information when compiling on MinGW.\n",
        "Line" : 127,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# This property causes shared libraries on Linux to have the full version\n\n# encoded into their final filename.  We disable this on Cygwin because\n\n# it causes cygz-${ZLIB_FULL_VERSION}.dll to be created when cygz.dll\n\n# seems to be the default.\n\n#\n\n# This has no effect with MSVC, on that platform the version info for\n\n# the DLL comes from the resource file win32/zlib1.rc\n",
        "Line" : 148,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# On unix-like platforms the library is almost always called libz\n",
        "Line" : 159,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Creates zlib1.dll when building shared library version\n",
        "Line" : 162,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "#============================================================================\n\n# Example binaries\n\n#============================================================================\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "libs/zlib/Makefile" : {
      "ObjectId" : "6bba86c73fca2abda416baa1a7cf883b3494fb29",
      "LastModified" : "2018-11-25T13:12:34Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "libs/zlib/contrib/blast/Makefile" : {
      "ObjectId" : "9be80bafe050eed57029ef2e690f36677a3003c0",
      "LastModified" : "2018-11-25T13:12:34Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "libs/zlib/contrib/minizip/Makefile" : {
      "ObjectId" : "84eaad20d4fb19b00965268dd75d7e9b66c8cc21",
      "LastModified" : "2018-11-25T13:12:34Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "libs/zlib/contrib/puff/Makefile" : {
      "ObjectId" : "b6b69404c7453bd3707f1c258ac238fe93dac867",
      "LastModified" : "2018-11-25T13:12:34Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "libs/zlib/contrib/untgz/Makefile" : {
      "ObjectId" : "b54266fba20a167a1d83b7afd503dfd2f849ca57",
      "LastModified" : "2018-11-25T13:12:34Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "libs/zlib/nintendods/Makefile" : {
      "ObjectId" : "21337d01ab2fe20743682125994666e20af6b7e7",
      "LastModified" : "2018-11-25T13:12:34Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# TARGET is the name of the output\n\n# BUILD is the directory where object files & intermediate files will be placed\n\n# SOURCES is a list of directories containing source code\n\n# DATA is a list of directories containing data files\n\n# INCLUDES is a list of directories containing header files\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# options for code generation\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# list of directories containing libraries, this must be the top level containing\n\n# include and lib\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# no real need to edit anything past this point unless you need to add additional\n\n# rules for different file extensions\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# use CXX for linking C++ projects, CC for standard C\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# main targets\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#---------------------------------------------------------------------------------------\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#---------------------------------------------------------------------------------------\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "a6fab34ff621af052079ac5c8acb145f7ab8f65e",
      "LastModified" : "2019-03-01T16:04:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# SRB2 Core\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Core sources\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#string.c\n",
        "Line" : 42,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "### Configuration\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "### use internal libraries?\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "###set on Windows only\n",
        "Line" : 231,
        "CharPositionInLine" : 38
      },
      "6" : {
        "Text" : "# 32-bit\n",
        "Line" : 329,
        "CharPositionInLine" : 9
      },
      "7" : {
        "Text" : "# 32-bit\n",
        "Line" : 349,
        "CharPositionInLine" : 9
      },
      "8" : {
        "Text" : "# 32-bit\n",
        "Line" : 370,
        "CharPositionInLine" : 10
      },
      "9" : {
        "Text" : "#SRB2_ASM_FLAGS can be used to pass flags to either nasm or yasm.\n",
        "Line" : 439,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# Targets\n",
        "Line" : 460,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Compatibility flag with later versions of GCC\n\n# We should really fix our code to not need this\n",
        "Line" : 462,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#add_library(SRB2Core STATIC\n\n#\t${SRB2_CORE_SOURCES}\n\n#\t${SRB2_CORE_HEADERS}\n\n#\t${SRB2_CORE_RENDER_SOURCES}\n\n#\t${SRB2_CORE_GAME_SOURCES}\n\n#\t${SRB2_LUA_SOURCES}\n\n#\t${SRB2_LUA_HEADERS}\n\n#\t${SRB2_BLUA_SOURCES}\n\n#\t${SRB2_BLUA_HEADERS}\n\n#)\n",
        "Line" : 474,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "src/Makefile" : {
      "ObjectId" : "6363ab7dc2cf907db106e9f0ffae5813044732cf",
      "LastModified" : "2019-03-01T16:04:08Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#     GNU Make makefile for SRB2\n\n#############################################################################\n\n# Copyright (C) 1998-2000 by DooM Legacy Team.\n\n# Copyright (C) 2003-2018 by Sonic Team Junior.\n\n#\n\n# This program is free software distributed under the\n\n# terms of the GNU General Public License, version 2.\n\n# See the 'LICENSE' file for more details.\n\n#\n\n#     -DPC_DOS    -> use DOS specific code (eg:textmode stuff)...\n\n#     -DLINUX     -> use for the GNU/Linux specific\n\n#     -D_WINDOWS  -> use for the Win32/DirectX specific\n\n#     -DHAVE_SDL  -> use for the SDL interface\n\n#\n\n# Sets:\n\n#     Compile the DGJPP/DOS version with 'make WATTCP=1'\n\n#     Compile the DirectX/Mingw version with 'make MINGW=1'\n\n#     Compile the SDL/Mingw version with 'make MINGW=1 SDL=1'\n\n#     Compile the SDL/Linux version with 'make LINUX=1'\n\n#     Compile the SDL/Solaris version with 'make SOLARIS=1'\n\n#     Compile the SDL/FreeBSD version with 'gmake FREEBSD=1'\n\n#     Compile the SDL/Cygwin version with 'make CYGWIN32=1'\n\n#     Compile the SDL/other version try with 'make SDL=1'\n\n#\n\n# 'Targets':\n\n#     clean\n\n#       Remove all object files\n\n#     cleandep\n\n#       Remove depend.dep\n\n#     dll\n\n#       compile primary HW render DLL/SO\n\n#     all_dll\n\n#       compile all HW render and 3D sound DLLs for the set\n\n#     opengl_dll\n\n#       Pure Mingw only, compile OpenGL HW render DLL\n\n#     minigl_dll\n\n#       Pure Mingw only, compile MiniGL HW render DLL\n\n#     ds3d_dll\n\n#       Pure Mingw only, compile DirectX DirectSound HW sound DLL\n\n#     fmod_dll\n\n#       Pure Mingw only, compile FMOD HW sound DLL\n\n#     openal_dll\n\n#       Pure Mingw only, compile OpenAL HW sound DLL\n\n#     fmod_so\n\n#       Non-Mingw, compile FMOD HW sound SO\n\n#     openal_so\n\n#       Non-Mingw, compile OpenAL HW sound SO\n\n#\n\n#\n\n# Addon:\n\n#     To Cross-Compile, CC=gcc-version make * PREFIX=<dir>\n\n#     Compile with GCC 2.97 version, add 'GCC29=1'\n\n#     Compile with GCC 4.0x version, add 'GCC40=1'\n\n#     Compile with GCC 4.1x version, add 'GCC41=1'\n\n#     Compile with GCC 4.2x version, add 'GCC42=1'\n\n#     Compile with GCC 4.3x version, add 'GCC43=1'\n\n#     Compile with GCC 4.4x version, add 'GCC44=1'\n\n#     Compile with GCC 4.5x version, add 'GCC45=1'\n\n#     Compile with GCC 4.6x version, add 'GCC46=1'\n\n#     Compile a profile version, add 'PROFILEMODE=1'\n\n#     Compile a debug version, add 'DEBUGMODE=1'\n\n#     Compile with extra warnings, add 'WARNINGMODE=1'\n\n#     Compile without NASM's tmap.nas, add 'NOASM=1'\n\n#     Compile without 3D hardware support, add 'NOHW=1'\n\n#     Compile without 3D sound support, add 'NOHS=1'\n\n#     Compile with GDBstubs, add 'RDB=1'\n\n#     Compile without PNG, add 'NOPNG=1'\n\n#     Compile without zlib, add 'NOZLIB=1'\n\n#\n\n# Addon for SDL:\n\n#     To Cross-Compile, add 'SDL_CONFIG=/usr/*/bin/sdl-config'\n\n#     Compile without SDL_Mixer, add 'NOMIXER=1'\n\n#     Compile without BSD API, add 'NONET=1'\n\n#     Compile without IPX/SPX, add 'NOIPX=1'\n\n#     Compile Mingw/SDL with S_DS3S, add 'DS3D=1'\n\n#     Compile with S_FMOD3D, add 'FMOD=1' (WIP)\n\n#     Compile with S_OPENAL, add 'OPENAL=1' (WIP)\n\n#     To link with the whole SDL_Image lib to load Icons, add 'SDL_IMAGE=1' but it isn't not realy needed\n\n#     To link with SDLMain to hide console or make on a console-less binary, add 'SDLMAIN=1'\n\n#\n\n#############################################################################\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# SRB2 data files\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# LINUX64 does not imply X86_64=1; could mean ARM64 or Itanium\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# MINGW64 should not necessarily imply X86_64=1, but we make that assumption elsewhere\n\n# Once that changes, remove this\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#ifdef MINGW64\n",
        "Line" : 117,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Include this before the main Makefile.cfg\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#ifdef MINGW\n",
        "Line" : 187,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "#NOHW=1\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#SDL 2.0\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#SDL 1.2\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#ifndef SDL12\n\n#ifdef SDL\n",
        "Line" : 232,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "#Hurdler: not really supported and not tested recently\n\n#OPTS+=-DUSE_PALETTED_TEXTURE\n",
        "Line" : 277,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# build with debugging information\n",
        "Line" : 418,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# build a normal optimised version\n",
        "Line" : 429,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# build with profiling information\n",
        "Line" : 446,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# default EXENAME if all else fails\n",
        "Line" : 457,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# $(OBJDIR)/dstrings.o \\\n\n",
        "Line" : 461,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# not too sophisticated dependency\n",
        "Line" : 463,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# List of languages to compile.\n\n# For reference, this is the command I use to build a srb2.pot file from the source code.\n\n# (The listed source files are the ones containing translated strings).\n\n# FILES=\"\"; for file in `find ./ | grep \"\\.c\" | grep -v svn`; do [ \"`grep \"M_GetText(\" $file`\" ] && FILES=\"$FILES $file\"; done; xgettext -d srb2 -o locale/srb2.pot -kM_GetText -F --no-wrap $FILES\n",
        "Line" : 540,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#make a big srb2.s that is the disasm of the exe (dos only ?)\n",
        "Line" : 625,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# executable\n\n# NOTE: DJGPP's objcopy do not have --add-gnu-debuglink\n",
        "Line" : 631,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# mac os x lsdlsrb2 does not like objcopy\n",
        "Line" : 648,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#dependecy made by gcc itself !\n",
        "Line" : 752,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#############################################################\n\n#\n\n#############################################################\n",
        "Line" : 986,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24,
      "Errorlog" : "line 608:4 token recognition error at: '\\c'\n"
    },
    "src/sdl/CMakeLists.txt" : {
      "ObjectId" : "7f8f052bab673069732a7b01bee833cb3348eb55",
      "LastModified" : "2019-03-01T16:04:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Declare SDL2 interface sources\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# 32-bit\n",
        "Line" : 11,
        "CharPositionInLine" : 9
      },
      "2" : {
        "Text" : "#IMG_xpm.c\n",
        "Line" : 39,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# Dependency\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# 32-bit\n",
        "Line" : 61,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "#target_link_libraries(SRB2SDL2 PRIVATE SRB2Core)\n",
        "Line" : 175,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# using assembler with msvc doesn't work, must do it manually\n",
        "Line" : 189,
        "CharPositionInLine" : 3
      },
      "7" : {
        "Text" : "# 32-bit\n",
        "Line" : 218,
        "CharPositionInLine" : 10
      },
      "8" : {
        "Text" : "# something about string functions.\n",
        "Line" : 230,
        "CharPositionInLine" : 29
      },
      "9" : {
        "Text" : "# Don't care\n",
        "Line" : 233,
        "CharPositionInLine" : 37
      },
      "10" : {
        "Text" : "## strip debug symbols into separate file when using gcc\n",
        "Line" : 254,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "#### Installation ####\n",
        "Line" : 266,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# We also want to copy those DLLs to build directories on MSVC.\n\n# So we'll add a post_build step.\n",
        "Line" : 333,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Mac bundle fixup\n",
        "Line" : 339,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 14
    },
    "src/sdl12/SRB2PSP/psp-prxsign/Makefile" : {
      "ObjectId" : "4a9b7da0f29b4cad9972d099ea87490113bc91e4",
      "LastModified" : "2018-11-25T13:12:34Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# replaces the .c from SRC with .o\n",
        "Line" : 3,
        "CharPositionInLine" : 16
      },
      "1" : {
        "Text" : "# .PHONY ignores files named all\n",
        "Line" : 12,
        "CharPositionInLine" : 17
      },
      "2" : {
        "Text" : "# all is dependent on $(BIN) to be complete\n",
        "Line" : 14,
        "CharPositionInLine" : 17
      },
      "3" : {
        "Text" : "# $(EXE) is dependent on all of the files in $(OBJ) to exist\n",
        "Line" : 17,
        "CharPositionInLine" : 15
      },
      "4" : {
        "Text" : "# .PHONY ignores files named clean\n",
        "Line" : 20,
        "CharPositionInLine" : 17
      },
      "CommentCount" : 5
    },
    "src/win32/CMakeLists.txt" : {
      "ObjectId" : "39b01588b28c622a65f40ea63f9b2e541df220ec",
      "LastModified" : "2018-11-25T13:12:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/LevelConverter/Makefile" : {
      "ObjectId" : "23b8a1106343407e45765686d5acc8c17f72d0d9",
      "LastModified" : "2018-11-25T13:12:34Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makfile for SRB2 Level Converter\n\n# by Alam Arias et al.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# replaces the .c from SRC with .o\n",
        "Line" : 5,
        "CharPositionInLine" : 16
      },
      "2" : {
        "Text" : "# .PHONY ignores files named all\n\n# all is dependent on $(BIN) to be complete\n",
        "Line" : 8,
        "CharPositionInLine" : 17
      },
      "3" : {
        "Text" : "# $(EXE) is dependent on all of the files in $(OBJ) to exist\n",
        "Line" : 11,
        "CharPositionInLine" : 15
      },
      "4" : {
        "Text" : "# .PHONY ignores files named clean\n",
        "Line" : 14,
        "CharPositionInLine" : 17
      },
      "CommentCount" : 5
    },
    "tools/SRB2MP/Makefile" : {
      "ObjectId" : "92e112d7aca366ae756a6bda52e0005d67e0a1b1",
      "LastModified" : "2018-11-25T13:12:34Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makfile of SRB2MP\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# replaces the .c from SRC with .o\n",
        "Line" : 17,
        "CharPositionInLine" : 17
      },
      "2" : {
        "Text" : "# .PHONY ignores files named all\n\n# all is dependent on $(EXE) to be complete\n",
        "Line" : 36,
        "CharPositionInLine" : 17
      },
      "3" : {
        "Text" : "# $(EXE) is dependent on all of the files in $(OBJ) to exist\n",
        "Line" : 39,
        "CharPositionInLine" : 27
      },
      "4" : {
        "Text" : "# .PHONY ignores files named clean\n",
        "Line" : 42,
        "CharPositionInLine" : 17
      },
      "CommentCount" : 5
    },
    "tools/gdbst03/Makefile" : {
      "ObjectId" : "5279e5b5558da2c38b277048348ddd5493dca571",
      "LastModified" : "2018-11-25T13:12:34Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Makefile for GDB Stub for DJGPP/Mingw 0.3 source distribution\n\n#\n\n# Copyright 2000 by Jonathan Brogdon\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Inform make of phony targets\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Create blank depend.dep files to avoid errors\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Now carry on as usual\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Blank all the dependencies too\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "tools/libwad/Makefile" : {
      "ObjectId" : "3c93a25479a4524d1f36500e84009bceb71ef9c3",
      "LastModified" : "2018-11-25T13:12:34Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#!/usr/bin/env make -f\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## libwad: Doom WAD format interface library.\n\n## Copyright (C) 2011 by Callum Dickinson.\n\n#\n\n## This program is free software; you can redistribute it and/or\n\n## modify it under the terms of the GNU General Public License\n\n## as published by the Free Software Foundation; either version 2\n\n## of the License, or (at your option) any later version.\n\n#\n\n## This program is distributed in the hope that it will be useful,\n\n## but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n## GNU General Public License for more details.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Library name.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Library version.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Library default options.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Source files and directory.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Compiled files directory.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n## Variables that shouldn't be edited unless\n\n## you know what you are doing start here.\n\n#\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Makefile pretty text output variables.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Library name prefix.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Library installation directory.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Variables created during compilation.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Compilation programs.\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Shell programs.\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Quiet compiling programs during pretty text output.\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Compiler default flags.\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Linker flags.\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#\n\n## Makefile targets.\n\n#\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# all is dependent on $(BIN) to be complete\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# $(EXE) is dependent on all of the files in $(OBJ) to exist\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "tools/libwad/examples/wadexample/Makefile" : {
      "ObjectId" : "773733b06d99f19beadcc4b765f8353921894590",
      "LastModified" : "2018-11-25T13:12:34Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#!/usr/bin/env make -f\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## wadexample: libwad example program.\n\n## Copyright (C) 2011 by Callum Dickinson.\n\n#\n\n## This program is free software; you can redistribute it and/or\n\n## modify it under the terms of the GNU General Public License\n\n## as published by the Free Software Foundation; either version 2\n\n## of the License, or (at your option) any later version.\n\n#\n\n## This program is distributed in the hope that it will be useful,\n\n## but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n## GNU General Public License for more details.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Program name.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Program version.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Program default options.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Source files and directory.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Required libraries.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n## Variables that shouldn't be edited unless\n\n## you know what you are doing start here.\n\n#\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Makefile pretty text output variables.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Library name prefix.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Library installation directory.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Variables created during compilation.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Compilation programs.\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Shell programs.\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Quiet compiling programs during pretty text output.\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Compiler default flags.\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Linker flags.\n\n#LDFLAGS +=\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#\n\n## Makefile targets.\n\n#\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "tools/lumpmod/Makefile" : {
      "ObjectId" : "a01f8027821523b276f67b63340eb5da21aaaf80",
      "LastModified" : "2018-11-25T13:12:34Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makfile for SRB2 Lumpmod\n\n# by Alam Arias et al.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# replaces the .c from SRC with .o\n",
        "Line" : 5,
        "CharPositionInLine" : 16
      },
      "2" : {
        "Text" : "# .PHONY ignores files named all\n\n# all is dependent on $(BIN) to be complete\n",
        "Line" : 8,
        "CharPositionInLine" : 17
      },
      "3" : {
        "Text" : "# $(EXE) is dependent on all of the files in $(OBJ) to exist\n",
        "Line" : 11,
        "CharPositionInLine" : 15
      },
      "4" : {
        "Text" : "# .PHONY ignores files named clean\n",
        "Line" : 14,
        "CharPositionInLine" : 17
      },
      "CommentCount" : 5
    },
    "tools/masterserver/Makefile" : {
      "ObjectId" : "7e66ab210f4126de0070eda196d3ec0ec3b0543e",
      "LastModified" : "2018-11-25T13:12:34Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (C) 2000 by DooM Legacy Team.\n\n#\n\n# This program is free software; you can redistribute it and/or\n\n# modify it under the terms of the GNU General Public License\n\n# as published by the Free Software Foundation; either version 2\n\n# of the License, or (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# DESCRIPTION:\n\n#   Makefile for DooM Legacy Master Server\n\n#   Created on 06/23/2000 by Thierry Van Elsuwe\n\n#   e-mail: hurdler@newdoom.com\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#PORT=7896\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#*******************************************************************#\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#client.cpp\n",
        "Line" : 26,
        "CharPositionInLine" : 24
      },
      "4" : {
        "Text" : "#******************************************************************#\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#####################################################################\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#####################################################################\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#####################################################################\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#####################################################################\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#mrproper:      dep clean default\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "tools/wadconv/Makefile" : {
      "ObjectId" : "d11fbf6ced771ac8846447e35aae15bf43bdb634",
      "LastModified" : "2018-11-25T13:12:34Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#!/usr/bin/env make -f\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## wadconv: SRB2 WAD Converter.\n\n## Copyright (C) 2011 by Callum Dickinson.\n\n#\n\n## This program is free software; you can redistribute it and/or\n\n## modify it under the terms of the GNU General Public License\n\n## as published by the Free Software Foundation; either version 2\n\n## of the License, or (at your option) any later version.\n\n#\n\n## This program is distributed in the hope that it will be useful,\n\n## but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n## GNU General Public License for more details.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Program name.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Program version.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Program default options.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Source files and directory.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Required libraries.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n## Variables that shouldn't be edited unless\n\n## you know what you are doing start here.\n\n#\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Makefile pretty text output variables.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Library name prefix.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Library installation directory.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Variables created during compilation.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Compilation programs.\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Shell programs.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Quiet compiling programs during pretty text output.\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Compiler default flags.\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Linker flags.\n\n#LDFLAGS +=\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#\n\n## Makefile targets.\n\n#\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    }
  },
  "FileTypes" : {
    "CMAKE" : 26,
    "CMAKESOURCE" : 2,
    "MAKEFILE" : 21,
    "AUTOMAKE" : 1
  },
  "ElapsedTime" : 5300
}