{
  "Repository" : "40451137",
  "Revision" : "HEAD",
  "ObjectId" : "ca92b44b47c3129783ee4b61be3c6090ec35ec03",
  "CommitTime" : "2019-04-11T15:48:35Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "d3b745783bfb9246b3825385d561b387dc867218",
      "LastModified" : "2017-11-29T05:49:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt for UCorrelator \n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You need to tell CMake where to find the ROOT installation. This can be done in a number of ways:\n\n#   - ROOT built with classic configure/make use the provided $ROOTSYS/etc/cmake/FindROOT.cmake\n\n#   - ROOT built with CMake. Add in CMAKE_PREFIX_PATH the installation prefix for ROOT\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#---Locate the ROOT package and defines a number of variables (e.g. ROOT_INCLUDE_DIRS)\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#---Define useful ROOT functions and macros (e.g. ROOT_GENERATE_DICTIONARY)\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#    include(RootNewMacros)\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#---Create a shared library with geneated dictionary\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#  install (FILES ${PROJECT_BINARY_DIR}/lib${libname}.rootmap DESTINATION ${UTIL_LIB_DIR})\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#################################################################################3\n\n### The default build configuration is INSANE. No optimization? What is this 1971? \n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "### someone should do this for clang if they want it to be as fast as possible \n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#define in anitaBuildTool, default on\n",
        "Line" : 134,
        "CharPositionInLine" : 18
      },
      "CommentCount" : 10
    },
    "Makefile" : {
      "ObjectId" : "cfa62d328b54cbc9738f5fb653327d24a2bf98a7",
      "LastModified" : "2017-03-31T20:29:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "### Makefile that delegates building either to cmake or legacy Makefile \n\n### Cmake is default, if you don't want to use CMake, you can do make legacy   \n\n### ( or move this file and rename Makefile.legacy to Makefile,\n\n###  or modify the all/clean/install targets below  ) \n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### TODO add doxygen into CMakelists \n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindLibConfig.cmake" : {
      "ObjectId" : "7a818420b87039536530d5a5304938c1b61140f5",
      "LastModified" : "2016-10-27T19:24:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This module defines\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# LIBCONFIG_INCLUDE_DIR\n\n# LIBCONFIG_LIBRARIES\n\n# LIBCONFIG_FOUND\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "CMAKE" : 2,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 1027
}