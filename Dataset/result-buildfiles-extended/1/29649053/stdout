{
  "Repository" : "29649053",
  "Revision" : "HEAD",
  "ObjectId" : "9254e794e1ee3fd2687f1c2e207e24e227babb1e",
  "CommitTime" : "2019-04-14T12:01:18Z",
  "Files" : {
    "code/CMakeLists.txt" : {
      "ObjectId" : "681f7a95997e0f8ace6bdbc6582c896fe26bd482",
      "LastModified" : "2018-08-07T14:02:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n# Ryzom Core\n\n#  Authors: Nevrax and the Ryzom Core Community\n\n#  Version: 0.12.0\n\n#\n\n# Notes:\n\n#   * Changing install location: add -DCMAKE_INSTALL_PREFIX:PATH=/my/new/path\n\n#   * Changing specific install location variables:\n\n#       * NL_ETC_PREFIX (default: $CMAKE_INSTALL_PREFIX/etc)\n\n#       * NL_SHARE_PREFIX (default: $CMAKE_INSTALL_PREFIX/share)\n\n#       * NL_BIN_PREFIX (default: $CMAKE_INSTALL_PREFIX/bin)\n\n#       * NL_SBIN_PREFIX  (default: $CMAKE_INSTALL_PREFIX/sbin)\n\n#       * NL_LIB_PREFIX  (default: $CMAKE_INSTALL_PREFIX/lib)\n\n#       * NL_DRIVER_PREFIX  (default: $CMAKE_INSTALL_PREFIX/lib (windows) or $CMAKE_INSTALL_PREFIX/lib/nel)\n\n#   * Enable building of documentation: add -DBUILD_DOCUMENTATION:BOOL=ON - new make target: DoxygenDoc\n\n#   * Updating version: update header (above) but also update NL_VERSION below.\n\n#   * To build binary archive, use the 'package' target.\n\n#     To build source archive, use the 'package_source' target.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Load some macros.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Set CMake 2.6 Policies.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Works around warnings libraries linked against that don't\n\n# have absolute paths (e.g. -lpthread)\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# allow to link to qtmain automatically under Windows\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Force out of source builds.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# To be able to specify a different deployment target on Mac OS X :\n\n# export MACOSX_DEPLOYMENT_TARGET=10.6\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Redirect output files\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# DLL should be in the same directory as EXE under Windows\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Set default config options\n\n#\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#Platform specifics\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# libxml2 could need winsock2 library\n",
        "Line" : 140,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# under Linux and OS X, recent libxml2 versions are linked against liblzma\n",
        "Line" : 146,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Find codesign_allocate\n",
        "Line" : 173,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Xcode 7.0 and later versions\n",
        "Line" : 175,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Xcode 6.4 and previous versions\n",
        "Line" : 179,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# System path\n",
        "Line" : 184,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# Use Qt 4\n",
        "Line" : 204,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# CURL depends on libidn\n",
        "Line" : 236,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# CURL Macports version can depend on libidn, libidn2, libintl, libpsl and libiconv too\n",
        "Line" : 242,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# Aliases for targets\n",
        "Line" : 273,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "#  FIND_PACKAGE(NeL COMPONENTS 3d misc pacs sound nimp REQUIRED)\n",
        "Line" : 282,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# To build the documention, you will have to enable it\n\n# and then do the equivalent of \"make DoxygenDoc\".\n",
        "Line" : 311,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# This processes our Doxyfile.in and substitutes paths to generate\n\n# a final Doxyfile\n",
        "Line" : 319,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# packaging information\n",
        "Line" : 337,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# NSIS Specific Packing Setup\n",
        "Line" : 349,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "## Source Packages\n",
        "Line" : 360,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#SET(CPACK_GENERATOR \"NSIS\")\n",
        "Line" : 364,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# Install CEGUI and its dependencies.\n",
        "Line" : 400,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# Only the tools require MFC.\n",
        "Line" : 410,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "#INCLUDE(InstallRequiredSystemLibraries)\n",
        "Line" : 414,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "## Debian Packages\n\n#INCLUDE(UseDebian)\n\n#IF(DEBIAN_FOUND)\n\n#  ADD_DEBIAN_TARGETS(nel)\n\n#ENDIF()\n",
        "Line" : 421,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 32
    },
    "code/CMakeModules/AndroidToolChain.cmake" : {
      "ObjectId" : "4ca7022958d3d4d582ce8f681fc5db6fb4f4d800",
      "LastModified" : "2017-10-01T13:18:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# subsequent toolchain loading is not really needed\n",
        "Line" : 2,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Standard settings\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO: determine target Linux version\n",
        "Line" : 8,
        "CharPositionInLine" : 28
      },
      "3" : {
        "Text" : "# clang\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# gcc\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# NDK\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# include dirs\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# NDK version >= 8b\n",
        "Line" : 163,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "code/CMakeModules/CheckDepends.cmake" : {
      "ObjectId" : "701dcd48b0707624b2db799c5b4706ce7d24232f",
      "LastModified" : "2017-10-01T13:18:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros to check if a library needs to be manually linked to another one\r\n\n# because it's using a symbol from it but it's not linked to\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CHECK_UNDEFINED_SYMBOL\r\n\n# Macro to check if a library is calling an undefined symbol\r\n\n#\r\n\n# Syntax:\r\n\n# CHECK_UNDEFINED_SYMBOL(MYLIBRARY SYMBOL SYMBOL_FOUND)\r\n\n# SYMBOL_FOUND will be set to TRUE if UNDEFINED\r\n\n#\r\n\n# Example:\r\n\n# CHECK_UNDEFINED_SYMBOL(PNG_LIBRARY inflate INFLATE_FOUND)\r\n\n#\r\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Always TRUE under Windows because we are using static libraries\r\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Use nm to check if a library is using an external symbol\r\n",
        "Line" : 21,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "#      MESSAGE(STATUS \"Checking for undefined symbol ${SYMBOL} in ${${MYLIBRARY}}\")\r\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#        MESSAGE(STATUS \"Defined symbol ${SYMBOL} detected in ${${MYLIBRARY}}\")\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Use objdump to check if a library is using an external symbol\r\n\n#MESSAGE(STATUS \"exec ${CMAKE_OBJDUMP} -T ${${MYLIBRARY}} | grep ${SYMBOL}\")\r\n",
        "Line" : 32,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "#MESSAGE(STATUS \"${${MYLIBRARY}} does not use symbol ${SYMBOL}\")\r\n",
        "Line" : 36,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "#MESSAGE(STATUS \"${${MYLIBRARY}} uses symbol ${SYMBOL}\")\r\n",
        "Line" : 39,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# CHECK_LINKED_LIBRARY\r\n\n# Macro to check if a library is linked to another one\r\n\n#\r\n\n# Syntax:\r\n\n# CHECK_LINKED_LIBRARY(MYLIBRARY OTHERLIBRARY LIBRARY_FOUND)\r\n\n# LIBRARY_FOUND will be set to TRUE if LINKED\r\n\n#\r\n\n# Example:\r\n\n# CHECK_LINKED_LIBRARY(PNG_LIBRARY ZLIB_LIBRARY ZLIB_FOUND)\r\n\n#\r\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Always FALSE under Windows because we are using static libraries\r\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Use otool to check if a library is linked to another library\r\n",
        "Line" : 62,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "#      MESSAGE(STATUS \"Checking if ${LIBNAME} is linked to ${${MYLIBRARY}}\")\r\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#        MESSAGE(STATUS \"Library ${LIBNAME} already linked to ${${MYLIBRARY}}\")\r\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# TODO: under Solaris use dump -Lv <lib>\r\n\n# Use objdump to check if a library is linked to another library\r\n\n#MESSAGE(STATUS \"exec ${CMAKE_OBJDUMP} -p ${${MYLIBRARY}} | grep ${LIBNAME}\")\r\n",
        "Line" : 75,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "#MESSAGE(STATUS \"${${MYLIBRARY}} references to ${LIBNAME}.\")\r\n",
        "Line" : 80,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "#MESSAGE(STATUS \"${${MYLIBRARY}} does not reference to ${LIBNAME}!\")\r\n",
        "Line" : 83,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# LINK_DEPENDS\r\n\n# Macro to link a library if a symbol is used but is not already linked to it\r\n\n#\r\n\n# Syntax:\r\n\n# LINK_DEPENDS(LIBRARIES MYLIBRARY OTHERLIBRARY SYMBOL)\r\n\n# OTHERLIBRARY_LINKED will be set to TRUE or FALSE\r\n\n#\r\n\n# Example:\r\n\n# LINK_DEPENDS(PNG_LIBRARIES PNG_LIBRARY ZLIB_LIBRARY inflate)\r\n\n#\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# In static, we link all libraries because it will keep only used symbols\r\n",
        "Line" : 117,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 19
    },
    "code/CMakeModules/ConfigureChecks.cmake" : {
      "ObjectId" : "1eade142ccbe19308f2ea5e2ebe47a9d104a126c",
      "LastModified" : "2017-10-01T13:18:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# 3D drivers\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# sound drivers\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "code/CMakeModules/Find3dsMaxSDK.cmake" : {
      "ObjectId" : "cf49a90d36272e4414bdfbf0a7b19bd2345611cc",
      "LastModified" : "2017-10-01T13:18:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find DirectInput\r\n\n# Find the DirectSound includes and libraries\r\n\n#\r\n\n#  MAXSDK_DIR         - 3DSMAX SDK root directory\r\n\n#  MAXSDK_INCLUDE_DIR - where to find baseinterface.h\r\n\n#  MAXSDK_LIBRARIES   - List of libraries when using 3DSMAX.\r\n\n#  MAXSDK_FOUND       - True if MAX SDK found.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\r\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set MAXSDK_FOUND to TRUE if\r\n\n# all listed variables are TRUE.\r\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# parse maxversion.h to determine SDK version\r\n",
        "Line" : 79,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# 3ds Max 2013 and later are always Unicode\r\n",
        "Line" : 91,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "code/CMakeModules/FindCEGUI.cmake" : {
      "ObjectId" : "3259574fc20842f21c794128a1bd069f34f333b5",
      "LastModified" : "2017-10-01T13:18:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Locate CEGUI library\n\n# This module defines\n\n#  CEGUI_LIBRARY, the library to link against\n\n#  CEGUI_FOUND, if false, do not try to link to CEGUI\n\n#  CEGUI_INCLUDE_DIRS, where to find headers.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "code/CMakeModules/FindCppTest.cmake" : {
      "ObjectId" : "7dc2aa35d53b489103b281e3addd5a3f5566e7e1",
      "LastModified" : "2017-10-01T13:18:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Find the CppTest includes and library\n\n#\n\n# This module defines\n\n# CPPTEST_INCLUDE_DIR, where to find tiff.h, etc.\n\n# CPPTEST_LIBRARIES, where to find the CppTest libraries.\n\n# CPPTEST_FOUND, If false, do not try to use CppTest.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# also defined, but not for general use are\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "code/CMakeModules/FindCustomMFC.cmake" : {
      "ObjectId" : "b71e4a8d80409815b3e8ae036e525e9b250fbe52",
      "LastModified" : "2017-10-01T13:18:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Locate MFC libraries\r\n\n# This module defines\r\n\n#  MFC_FOUND, if false, do not try to link to MFC\r\n\n#  MFC_LIBRARY_DIR, where to find libraries\r\n\n#  MFC_INCLUDE_DIR, where to find headers\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If MFC have been found, remember their directory\r\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Display an error message if MFC are not found, MFC_FOUND is updated\r\n\n# User will be able to update MFC_DIR to the correct directory\r\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Using 32 or 64 bits libraries\r\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Add MFC libraries directory to default library path\r\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Set definitions for using MFC in DLL\r\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Set CMake flag to use MFC DLL\r\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# TODO: create a macro which set MFC_DEFINITIONS, MFC_LIBRARY_DIR and MFC_INCLUDE_DIR for a project\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "code/CMakeModules/FindDSound.cmake" : {
      "ObjectId" : "dde5212ab82ef2f55355d5b8d780435d7ec1471c",
      "LastModified" : "2017-10-01T13:18:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find DirectSound\r\n\n# Find the DirectSound includes and libraries\r\n\n#\r\n\n#  DSOUND_INCLUDE_DIR - where to find dsound.h\r\n\n#  DSOUND_LIBRARIES   - List of libraries when using dsound.\r\n\n#  DSOUND_FOUND       - True if dsound found.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\r\n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set DSOUND_FOUND to TRUE if\r\n\n# all listed variables are TRUE.\r\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "code/CMakeModules/FindDirectXSDK.cmake" : {
      "ObjectId" : "4519ef16d0ad26366c84d487609a4743d2fc8525",
      "LastModified" : "2017-10-01T13:18:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find DirectX\r\n\n# Find the DirectX includes and libraries\r\n\n#\r\n\n#  DXSDK_INCLUDE_DIR - where to find baseinterface.h\r\n\n#  DXSDK_LIBRARIES   - List of libraries when using 3DSMAX.\r\n\n#  DXSDK_FOUND       - True if MAX SDK found.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\r\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set DXSDK_FOUND to TRUE if\r\n\n# all listed variables are TRUE.\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "code/CMakeModules/FindEFXUtil.cmake" : {
      "ObjectId" : "628a0eba50adc5757e605b2667f910b0d60f4567",
      "LastModified" : "2017-10-01T13:18:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Locate EFX-Util library\n\n# This module defines\n\n#  EFXUTIL_LIBRARY, the library to link against\n\n#  EFXUTIL_FOUND, if false, do not try to link to EFX-Util\n\n#  EFXUTIL_INCLUDE_DIR, where to find headers.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "code/CMakeModules/FindExternal.cmake" : {
      "ObjectId" : "8364026cd2b7995e5bc6f8e7741a29d6aef3b1c6",
      "LastModified" : "2017-10-01T13:18:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Look for a directory containing external libraries.\r\n\n#\r\n\n# The following values are defined\r\n\n# EXTERNAL_PATH         - where to find external\r\n\n# EXTERNAL_INCLUDE_PATH - where to find external includes\r\n\n# EXTERNAL_BINARY_PATH  - where to find external binaries\r\n\n# EXTERNAL_LIBRARY_PATH - where to find external libraries\r\n\n# EXTERNAL_FOUND        - True if the external libraries are available\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If using STLport preprend external_stlport\r\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Using 32 or 64 bits binaries\r\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Using 32 or 64 bits libraries\r\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Stupid hack for FindOpenAL.cmake\r\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "code/CMakeModules/FindFFmpeg.cmake" : {
      "ObjectId" : "96cbb6ed021dfbf50c1b0f04768c6b9f7699dffa",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# vim: ts=2 sw=2\n\n# - Try to find the required ffmpeg components(default: AVFORMAT, AVUTIL, AVCODEC)\n\n#\n\n# Once done this will define\n\n#  FFMPEG_FOUND         - System has the all required components.\n\n#  FFMPEG_INCLUDE_DIRS  - Include directory necessary for using the required components headers.\n\n#  FFMPEG_LIBRARIES     - Link these to use the required ffmpeg components.\n\n#  FFMPEG_DEFINITIONS   - Compiler switches required for using the required ffmpeg components.\n\n#\n\n# For each of the components it will additionaly set.\n\n#   - AVCODEC\n\n#   - AVDEVICE\n\n#   - AVFORMAT\n\n#   - AVUTIL\n\n#   - POSTPROC\n\n#   - SWSCALE\n\n#   - SWRESAMPLE\n\n# the following variables will be defined\n\n#  <component>_FOUND        - System has <component>\n\n#  <component>_INCLUDE_DIRS - Include directory necessary for using the <component> headers\n\n#  <component>_LIBRARIES    - Link these to use <component>\n\n#  <component>_DEFINITIONS  - Compiler switches required for using <component>\n\n#  <component>_VERSION      - The components version\n\n#\n\n# Copyright (c) 2006, Matthias Kretz, <kretz@kde.org>\n\n# Copyright (c) 2008, Alexander Neundorf, <neundorf@kde.org>\n\n# Copyright (c) 2011, Michael Jansen, <kde@michael-jansen.biz>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n### Macro: set_component_found\n\n#\n\n# Marks the given component as found if both *_LIBRARIES AND *_INCLUDE_DIRS is present.\n\n#\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# message(STATUS \"  - ${_component} found.\")\n",
        "Line" : 44,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# message(STATUS \"  - ${_component} not found.\")\n",
        "Line" : 47,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "#\n\n### Macro: find_component\n\n#\n\n# Checks for the given component by invoking pkgconfig and then looking up the libraries and\n\n# include directories.\n\n#\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 59,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Check for all possible components.\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Check if the required components were found and add their stuff to the FFMPEG_* vars.\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# message(STATUS \"Required component ${_component} present.\")\n",
        "Line" : 136,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# message(STATUS \"Required component ${_component} missing.\")\n",
        "Line" : 141,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Build the include path and library list with duplicates removed.\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# cache the vars.\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Now set the noncached _FOUND vars for the components.\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Compile the list of required vars\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Give a nice error message if some of the required vars are missing.\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "code/CMakeModules/FindFMOD.cmake" : {
      "ObjectId" : "b28f77b1e38b07a79dfb499b30d9de7f1975c4b2",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Locate FMOD library\r\n\n# This module defines\r\n\n#  FMOD_LIBRARY, the library to link against\r\n\n#  FMOD_FOUND, if false, do not try to link to FMOD\r\n\n#  FMOD_INCLUDE_DIR, where to find headers.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\r\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "code/CMakeModules/FindFreeType.cmake" : {
      "ObjectId" : "d101607b481ee21b4afd97eaedb1b6af601e85e4",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Locate FreeType library\n\n# This module defines\n\n#  FREETYPE_LIBRARIES, libraries to link against\n\n#  FREETYPE_FOUND, if false, do not try to link to FREETYPE\n\n#  FREETYPE_INCLUDE_DIRS, where to find headers.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# ft2build.h does not reside in the freetype include dir\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# combine both include directories into one variable\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Case where both Release and Debug versions are provided\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Normal case\n",
        "Line" : 85,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Case where Freetype is compiled from sources (debug version is compiled by default)\n",
        "Line" : 89,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "code/CMakeModules/FindGTK2.cmake" : {
      "ObjectId" : "e3e91ed21927a96ad0ab52d727412bcde7bb5c62",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find GTK2\n\n# Once done this will define\n\n#\n\n#  GTK2_FOUND - System has GTK2\n\n#  GTK2_INCLUDE_DIRS - GTK2 include directory\n\n#  GTK2_LIBRARIES - Link these to use GTK2\n\n#  GTK2_LIBRARY_DIRS - The path to where the GTK2 library files are.\n\n#  GTK2_DEFINITIONS - Compiler switches required for using GTK2\n\n#\n\n#  Copyright (c) 2007 Andreas Schneider <mail@cynapses.org>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Some Linux distributions (e.g. Red Hat) have glibconfig.h\n\n# and glib.h in different directories, so we need to look\n\n# for both.\n\n#  - Atanas Georgiev <atanas@cs.columbia.edu>\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# set GTK2 libraries\n",
        "Line" : 394,
        "CharPositionInLine" : 22
      },
      "5" : {
        "Text" : "# check for gtkgl support\n",
        "Line" : 408,
        "CharPositionInLine" : 22
      },
      "6" : {
        "Text" : "# show the GTK2_INCLUDE_DIRS and GTK2_LIBRARIES variables only in the advanced view\n",
        "Line" : 465,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "code/CMakeModules/FindHelpers.cmake" : {
      "ObjectId" : "bc38354f408751c6770d0f921b976f57c71250c6",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#fixes escaping\r\n",
        "Line" : 13,
        "CharPositionInLine" : 63
      },
      "1" : {
        "Text" : "# macro to define FIND_PACKAGE options with a different package name\r\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# append other options if needed\r\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# process each options\r\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Looks for a directory containing NAME.\r\n\n#\r\n\n# NAME is the name of the library, lowercase and uppercase can be mixed\r\n\n# It should be EXACTLY (same case) the same part as XXXX in FindXXXX.cmake\r\n\n#\r\n\n# INCLUDE is the file to check for includes\r\n\n#\r\n\n# Following parameters are optional variables and must be prefixed by:\r\n\n#\r\n\n# RELEASE is the list of libraries to check in release mode\r\n\n# DEBUG is the list of libraries to check in debug mode\r\n\n# SUFFIXES is the PATH_SUFFIXES to check for include file\r\n\n# QUIET don't display anything\r\n\n# VERBOSE display more details if not found\r\n\n# REQUIRED throw an error if not found\r\n\n# DIR is the base directory where to look for\r\n\n#\r\n\n# The first match will be used in the specified order and next matches will be ignored\r\n\n#\r\n\n# The following values are defined\r\n\n# NAME_INCLUDE_DIR - where to find NAME\r\n\n# NAME_LIBRARIES   - link against these to use NAME\r\n\n# NAME_FOUND       - True if NAME is available.\r\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Fixes names if invalid characters are found\r\n",
        "Line" : 150,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# if invalid characters are detected, replace them by valid ones\r\n",
        "Line" : 154,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Create uppercase and lowercase versions of NAME\r\n",
        "Line" : 158,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Don't use pkg-config\r\n\n#  IF(NOT WIN32 AND NOT IOS)\r\n\n#    FIND_PACKAGE(PkgConfig QUIET)\r\n\n#    SET(_MODULES ${_LOWNAME} ${_RELEASE_LIBRARIES})\r\n\n#    LIST(REMOVE_DUPLICATES _MODULES)\r\n\n#    IF(PKG_CONFIG_EXECUTABLE)\r\n\n#      PKG_SEARCH_MODULE(PKG_${_NAME_FIXED} QUIET ${_MODULES})\r\n\n#    ENDIF()\r\n\n#  ENDIF()\r\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Check for root directories passed to CMake with -DXXX_DIR=...\r\n",
        "Line" : 180,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Append UNIX standard include paths\r\n",
        "Line" : 216,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Append multiarch include paths\r\n",
        "Line" : 219,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Search for include directory\r\n",
        "Line" : 239,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Append environment variables XXX_DIR\r\n",
        "Line" : 264,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Append multiarch libraries paths\r\n",
        "Line" : 272,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Append UNIX standard libraries paths\r\n",
        "Line" : 280,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Under Windows, some libs may need the lib prefix\r\n",
        "Line" : 297,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Search for release library\r\n",
        "Line" : 313,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Search for debug library\r\n",
        "Line" : 332,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Set also _INCLUDE_DIRS\r\n",
        "Line" : 354,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Library has been found if at least only one library and include are found\r\n",
        "Line" : 358,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Release and debug libraries found\r\n",
        "Line" : 360,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Release library found\r\n",
        "Line" : 365,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# Debug library found\r\n",
        "Line" : 370,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# Looks for libraries.\r\n\n#\r\n\n# NAME is the name of the library, lowercase and uppercase can be mixed\r\n\n#\r\n\n# Following parameters are optional variables and must be prefixed by:\r\n\n#\r\n\n# RELEASE is the list of libraries to check in release mode\r\n\n# DEBUG is the list of libraries to check in debug mode\r\n\n# VERBOSE display more details if not found\r\n\n# REQUIRED throw an error if not found\r\n\n# DIR is the base directory where to look for\r\n\n#\r\n\n# The first match will be used in the specified order and next matches will be ignored\r\n\n#\r\n\n# The following values are defined\r\n\n# NAME_LIBRARIES   - link against these to use NAME\r\n",
        "Line" : 397,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Fixes names if invalid characters are found\r\n",
        "Line" : 463,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# if invalid characters are detected, replace them by valid ones\r\n",
        "Line" : 467,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# Create uppercase and lowercase versions of NAME\r\n",
        "Line" : 471,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# Check for root directories passed to CMake with -DXXX_DIR=...\r\n",
        "Line" : 480,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# Append environment variables XXX_DIR\r\n",
        "Line" : 512,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# Append multiarch libraries paths\r\n",
        "Line" : 520,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# Append UNIX standard libraries paths\r\n",
        "Line" : 528,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# Under Windows, some libs may need the lib prefix\r\n",
        "Line" : 545,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# Search for release library\r\n",
        "Line" : 561,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# Search for debug library\r\n",
        "Line" : 580,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# Library has been found if at least only one library and include are found\r\n",
        "Line" : 599,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# Release and debug libraries found\r\n",
        "Line" : 601,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "# Release library found\r\n",
        "Line" : 605,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# Debug library found\r\n",
        "Line" : 609,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "# CURL can depend on libidn\r\n",
        "Line" : 631,
        "CharPositionInLine" : 8
      },
      "40" : {
        "Text" : "# CURL Macports version can depend on libidn, libintl and libiconv too\r\n",
        "Line" : 637,
        "CharPositionInLine" : 8
      },
      "41" : {
        "Text" : "# Only used by libcurl under Linux\r\n",
        "Line" : 644,
        "CharPositionInLine" : 10
      },
      "42" : {
        "Text" : "#IF(WIN32)\r\n\n#  SET(OPENSSL_LIBRARIES ${OPENSSL_LIBRARIES} Crypt32.lib)\r\n\n#ENDIF()\r\n",
        "Line" : 647,
        "CharPositionInLine" : 10
      },
      "43" : {
        "Text" : "# Only Linux version of libcurl depends on OpenSSL\r\n",
        "Line" : 651,
        "CharPositionInLine" : 10
      },
      "44" : {
        "Text" : "#      LIST(APPEND CURL_INCLUDE_DIRS ${ICONV_INCLUDE_DIR})\r\n",
        "Line" : 670,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# libxml2 could need winsock2 library\r\n",
        "Line" : 675,
        "CharPositionInLine" : 6
      },
      "46" : {
        "Text" : "# under Linux and OS X, recent libxml2 versions are linked against liblzma\r\n",
        "Line" : 689,
        "CharPositionInLine" : 8
      },
      "47" : {
        "Text" : "# Save default suffixes\r\n",
        "Line" : 737,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "# Define specific suffixes\r\n",
        "Line" : 740,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "# Find the library with specified suffixes\r\n",
        "Line" : 743,
        "CharPositionInLine" : 2
      },
      "50" : {
        "Text" : "# Restore default suffixes\r\n",
        "Line" : 746,
        "CharPositionInLine" : 2
      },
      "51" : {
        "Text" : "# Check if we are using Qt static or shared libraries\r\n",
        "Line" : 766,
        "CharPositionInLine" : 4
      },
      "52" : {
        "Text" : "# These variables are not defined with Qt5 CMake modules\r\n",
        "Line" : 782,
        "CharPositionInLine" : 4
      },
      "53" : {
        "Text" : "# Fix wrong include directories with Qt 5 under Mac OS X\r\n",
        "Line" : 788,
        "CharPositionInLine" : 4
      },
      "54" : {
        "Text" : "# Gui\r\n",
        "Line" : 806,
        "CharPositionInLine" : 6
      },
      "55" : {
        "Text" : "# Cups needs .dylib\r\n",
        "Line" : 819,
        "CharPositionInLine" : 8
      },
      "56" : {
        "Text" : "# order is very important there\r\n",
        "Line" : 841,
        "CharPositionInLine" : 8
      },
      "57" : {
        "Text" : "# always link these in dynamic, API never changes\r\n",
        "Line" : 860,
        "CharPositionInLine" : 8
      },
      "58" : {
        "Text" : "# harfbuzz is needed since Qt 5.3\r\n",
        "Line" : 879,
        "CharPositionInLine" : 6
      },
      "59" : {
        "Text" : "# freetype is needed since Qt 5.5\r\n",
        "Line" : 892,
        "CharPositionInLine" : 6
      },
      "60" : {
        "Text" : "# Network\r\n",
        "Line" : 912,
        "CharPositionInLine" : 6
      },
      "61" : {
        "Text" : "# Core\r\n",
        "Line" : 923,
        "CharPositionInLine" : 6
      },
      "62" : {
        "Text" : "# pcre is needed since Qt 5.5\r\n",
        "Line" : 926,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 63
    },
    "code/CMakeModules/FindIconv.cmake" : {
      "ObjectId" : "e96fe40543056cff5d3764a0d233be47e5ba217a",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Iconv \n\n# Once done this will define \n\n# \n\n#  ICONV_FOUND - system has Iconv \n\n#  ICONV_INCLUDE_DIR - the Iconv include directory \n\n#  ICONV_LIBRARIES - Link these to use Iconv \n\n#  ICONV_SECOND_ARGUMENT_IS_CONST - the second argument for iconv() is const\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "code/CMakeModules/FindJpeg.cmake" : {
      "ObjectId" : "b77eba41baf6e4fffd4c31884086d008a021b956",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Locate Jpeg library\n\n# This module defines\n\n#  JPEG_LIBRARY, the library to link against\n\n#  JPEG_FOUND, if false, do not try to link to JPEG\n\n#  JPEG_INCLUDE_DIR, where to find headers.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "code/CMakeModules/FindLibOVR.cmake" : {
      "ObjectId" : "081fa0bca1f1724a51205476b1e2c01eacda98d6",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Locate LibOVR library\n\n# This module defines\n\n#  LIBOVR_LIBRARIES, the libraries to link against\n\n#  LIBOVR_FOUND, if false, do not try to link to LIBOVR\n\n#  LIBOVR_INCLUDE_DIR, where to find headers.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "code/CMakeModules/FindLibVR.cmake" : {
      "ObjectId" : "5e9da0342eb2f14797167fb22e9127aaa6280658",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Locate LibVR library\n\n# This module defines\n\n#  LIBVR_LIBRARIES, the libraries to link against\n\n#  LIBVR_FOUND, if false, do not try to link to LIBVR\n\n#  LIBVR_INCLUDE_DIR, where to find headers.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "code/CMakeModules/FindLua52.cmake" : {
      "ObjectId" : "0c25ea84048d20b8882bb5dad3b252864c989709",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate Lua library\n\n# This module defines\n\n#  LUA52_FOUND, if false, do not try to link to Lua\n\n#  LUA_LIBRARIES\n\n#  LUA_INCLUDE_DIR, where to find lua.h\n\n#  LUA_VERSION_STRING, the version of Lua found (since CMake 2.8.8)\n\n#\n\n# Note that the expected include convention is\n\n#  #include \"lua.h\"\n\n# and not\n\n#  #include <lua/lua.h>\n\n# This is because, the lua location is not standardized and may exist\n\n# in locations other than lua/\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2007-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fink\n",
        "Line" : 35,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 36,
        "CharPositionInLine" : 13
      },
      "4" : {
        "Text" : "# Blastwave\n",
        "Line" : 37,
        "CharPositionInLine" : 11
      },
      "5" : {
        "Text" : "# include the math library for Unix\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# For Windows and Mac, don't need to explicitly include the math library\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LUA_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "code/CMakeModules/FindLua53.cmake" : {
      "ObjectId" : "012f27c3f7675d47fde4fd1a3087eea779a3b37b",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate Lua library\n\n# This module defines\n\n#  LUA53_FOUND, if false, do not try to link to Lua\n\n#  LUA_LIBRARIES\n\n#  LUA_INCLUDE_DIR, where to find lua.h\n\n#  LUA_VERSION_STRING, the version of Lua found (since CMake 2.8.8)\n\n#\n\n# Note that the expected include convention is\n\n#  #include \"lua.h\"\n\n# and not\n\n#  #include <lua/lua.h>\n\n# This is because, the lua location is not standardized and may exist\n\n# in locations other than lua/\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2007-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fink\n",
        "Line" : 35,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 36,
        "CharPositionInLine" : 13
      },
      "4" : {
        "Text" : "# Blastwave\n",
        "Line" : 37,
        "CharPositionInLine" : 11
      },
      "5" : {
        "Text" : "# include the math library for Unix\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# For Windows and Mac, don't need to explicitly include the math library\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LUA_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "code/CMakeModules/FindLuabind.cmake" : {
      "ObjectId" : "5511379a33c27df8fa6224372395d652fe23e3c2",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Locate Luabind library\n\n# This module defines\n\n#  LUABIND_LIBRARIES, the libraries to link against\n\n#  LUABIND_FOUND, if false, do not try to link to LUABIND\n\n#  LUABIND_INCLUDE_DIR, where to find headers.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check Lua version linked to Luabind under Linux\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# check for Lua 5.3\n",
        "Line" : 12,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# check for Lua 5.2\n",
        "Line" : 25,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# check for Lua 5.1\n",
        "Line" : 39,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# check for Lua 5.0\n",
        "Line" : 53,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# TODO: find a way to detect Lua version\n",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# in cache already\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# generic libraries names\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Case where both Release and Debug versions are provided\n",
        "Line" : 186,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Normal case\n",
        "Line" : 190,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Case where Luabind is compiled from sources (debug version is compiled by default)\n",
        "Line" : 194,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Check if luabind/version.hpp exists\n",
        "Line" : 202,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 13
    },
    "code/CMakeModules/FindMSVC.cmake" : {
      "ObjectId" : "5dbc4f6a8b6f10057556fa109494500e45c9f3b6",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find MS Visual C++\r\n\n#\r\n\n#  VC_INCLUDE_DIR  - where to find headers\r\n\n#  VC_INCLUDE_DIRS - where to find headers\r\n\n#  VC_LIBRARY_DIR  - where to find libraries\r\n\n#  VC_FOUND        - True if MSVC found.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# put content in a new variable\r\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# get length of the string\r\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# convert length to last pos\r\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# get last character of the string\r\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# compare it with a slash\r\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# not a slash, append it\r\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# already a slash\r\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Software/Wow6432Node/...\r\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# be sure it's finishing by a /\r\n",
        "Line" : 35,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# If you plan to use VC++ compilers with WINE, set VC_DIR environment variable\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Fix path\r\n",
        "Line" : 126,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# If you have VC++ 2017 Express, put x64/Microsoft.VC141.CRT/*.dll in ${EXTERNAL_PATH}/redist\r\n\n# original files whould be in ${VC_DIR}/Redist/MSVC/14.11.25325/x64/Microsoft.VC141.CRT\r\n",
        "Line" : 158,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# If you have VC++ 2013 Express, put x64/Microsoft.VC120.CRT/*.dll in ${EXTERNAL_PATH}/redist\r\n",
        "Line" : 164,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# If you have VC++ 2012 Express, put x64/Microsoft.VC110.CRT/*.dll in ${EXTERNAL_PATH}/redist\r\n",
        "Line" : 167,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# If you have VC++ 2010 Express, put x64/Microsoft.VC100.CRT/*.dll in ${EXTERNAL_PATH}/redist\r\n",
        "Line" : 170,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 16
    },
    "code/CMakeModules/FindMercurial.cmake" : {
      "ObjectId" : "4e6429357294207b2429df606f91037edc505267",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Extract information from a subversion working copy\r\n\n# The module defines the following variables:\r\n\n#  Mercurial_HG_EXECUTABLE - path to hg command line client\r\n\n#  Mercurial_VERSION_HG - version of hg command line client\r\n\n#  Mercurial_FOUND - true if the command line client was found\r\n\n#  MERCURIAL_FOUND - same as Mercurial_FOUND, set for compatiblity reasons\r\n\n#\r\n\n# The minimum required version of Mercurial can be specified using the\r\n\n# standard syntax, e.g. FIND_PACKAGE(Mercurial 1.4)\r\n\n#\r\n\n# If the command line client executable is found two macros are defined:\r\n\n#  Mercurial_WC_INFO(<dir> <var-prefix>)\r\n\n#  Mercurial_WC_LOG(<dir> <var-prefix>)\r\n\n# Mercurial_WC_INFO extracts information of a subversion working copy at\r\n\n# a given location. This macro defines the following variables:\r\n\n#  <var-prefix>_WC_URL - url of the repository (at <dir>)\r\n\n#  <var-prefix>_WC_ROOT - root url of the repository\r\n\n#  <var-prefix>_WC_REVISION - current revision\r\n\n#  <var-prefix>_WC_LAST_CHANGED_AUTHOR - author of last commit\r\n\n#  <var-prefix>_WC_LAST_CHANGED_DATE - date of last commit\r\n\n#  <var-prefix>_WC_LAST_CHANGED_REV - revision of last commit\r\n\n#  <var-prefix>_WC_INFO - output of command `hg info <dir>'\r\n\n# Mercurial_WC_LOG retrieves the log message of the base revision of a\r\n\n# subversion working copy at a given location. This macro defines the\r\n\n# variable:\r\n\n#  <var-prefix>_LAST_CHANGED_LOG - last log of base revision\r\n\n# Example usage:\r\n\n#  FIND_PACKAGE(Mercurial)\r\n\n#  IF(MERCURIAL_FOUND)\r\n\n#    Mercurial_WC_INFO(${PROJECT_SOURCE_DIR} Project)\r\n\n#    MESSAGE(\"Current revision is ${Project_WC_REVISION}\")\r\n\n#    Mercurial_WC_LOG(${PROJECT_SOURCE_DIR} Project)\r\n\n#    MESSAGE(\"Last changed log is ${Project_LAST_CHANGED_LOG}\")\r\n\n#  ENDIF()\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\r\n\n# Copyright 2006-2009 Kitware, Inc.\r\n\n# Copyright 2006 Tristan Carel\r\n\n#\r\n\n# Distributed under the OSI-approved BSD License (the \"License\");\r\n\n# see accompanying file Copyright.txt for details.\r\n\n#\r\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\r\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n\n# See the License for more information.\r\n\n#=============================================================================\r\n\n# (To distribute this file outside of CMake, substitute the full\r\n\n#  License text for the above reference.)\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This macro can block if the certificate is not signed:\r\n\n# hg ask you to accept the certificate and wait for your answer\r\n\n# This macro requires a hg server network access (Internet most of the time)\r\n\n# and can also be slow since it access the hg server\r\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "code/CMakeModules/FindMySQL.cmake" : {
      "ObjectId" : "8a92cb0c45e5002053b185937d5543a6bd263aed",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find MySQL\n\n# Find the MySQL includes and client library\n\n# This module defines\n\n#  MYSQL_INCLUDE_DIR, where to find mysql.h\n\n#  MYSQL_LIBRARIES, the libraries needed to use MySQL.\n\n#  MYSQL_FOUND, If false, do not try to use MySQL.\n\n#\n\n# Copyright (c) 2006, Jaroslaw Staniek, <js@iidea.pl>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "code/CMakeModules/FindNeL.cmake" : {
      "ObjectId" : "e75163cce4cd771a64c2280443b50906b0c85811",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# NEL_DIR can be specified as root directory\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Returned variables\r\n\n# NELDRIVER_XXX_BINARY_DEBUG\r\n\n# NELDRIVER_XXX_BINARY_RELEASE\r\n\n# NELDRIVER_XXX_LIBRARY_DEBUG\r\n\n# NELDRIVER_XXX_LIBRARY_RELEASE\r\n\n# NELDRIVER_XXX_FOUND\r\n\n# NEL_DEFINITIONS\r\n\n# NEL_INCLUDE_DIR\r\n\n# NEL_INCLUDE_DIRS\r\n\n# NEL_LIBRARIES\r\n\n# NELXXX_FOUND\r\n\n# NELXXX_LIBRARIES\r\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Init all variables we'll set\r\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# cegui pipeline\r\n",
        "Line" : 33,
        "CharPositionInLine" : 68
      },
      "4" : {
        "Text" : "# Force search of NELMISC\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# define NEL_DIR if not specified\r\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Aliases for include directory\r\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# TODO: implement static version checks for Windows\r\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# static libraries\r\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# check for static drivers\r\n",
        "Line" : 87,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# We can skip not installed modules\r\n",
        "Line" : 221,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# module is required\r\n",
        "Line" : 229,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "#  ELSEIF(COMPONENT STREQUAL \"cegui\")\r\n\n#    SET(HEADER_FILE shape.h)\r\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#  ELSEIF(COMPONENT STREQUAL \"pipeline\")\r\n\n#    SET(HEADER_FILE shape.h)\r\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# display if a component has a wrong name\r\n",
        "Line" : 256,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# 3rd party dependencies\r\n",
        "Line" : 272,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# Append static 3D drivers\r\n",
        "Line" : 278,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# Direct3D driver (only under Windows)\r\n",
        "Line" : 280,
        "CharPositionInLine" : 10
      },
      "18" : {
        "Text" : "# OpenGL driver\r\n",
        "Line" : 291,
        "CharPositionInLine" : 10
      },
      "19" : {
        "Text" : "# TODO: remove complately OpenSSL requirement on Windows\r\n",
        "Line" : 313,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "# Only used by libcurl under Linux\r\n",
        "Line" : 315,
        "CharPositionInLine" : 6
      },
      "21" : {
        "Text" : "# Only Linux version of libcurl depends on OpenSSL\r\n",
        "Line" : 322,
        "CharPositionInLine" : 6
      },
      "22" : {
        "Text" : "# Link to snd_lowlevel\r\n",
        "Line" : 342,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "# DirectSound, XAudio2 and FMod drivers (only under Windows)\r\n",
        "Line" : 351,
        "CharPositionInLine" : 12
      },
      "24" : {
        "Text" : "# DirectSound\r\n",
        "Line" : 353,
        "CharPositionInLine" : 14
      },
      "25" : {
        "Text" : "# FMod\r\n",
        "Line" : 362,
        "CharPositionInLine" : 14
      },
      "26" : {
        "Text" : "# XAudio2\r\n",
        "Line" : 371,
        "CharPositionInLine" : 14
      },
      "27" : {
        "Text" : "# OpenAL driver\r\n",
        "Line" : 381,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 28
    },
    "code/CMakeModules/FindOgg.cmake" : {
      "ObjectId" : "c1f4492e1366d24f7c4863a84b395180c55a87c8",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Locate Ogg library\n\n# This module defines\n\n#  OGG_LIBRARY, the library to link against\n\n#  OGG_FOUND, if false, do not try to link to OGG\n\n#  OGG_INCLUDE_DIR, where to find headers.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "code/CMakeModules/FindOpenGLES.cmake" : {
      "ObjectId" : "74a5b40210b5c6f340f2caa68c6d32c5ee7138bd",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find OpenGL ES\r\n\n# Once done this will define\r\n\n#  \r\n\n#  OPENGLES_FOUND        - system has OpenGL ES\r\n\n#  OPENGLES_EGL_FOUND    - system has EGL\r\n\n#  OPENGLES_LIBRARIES    - Link these to use OpenGL ES and EGL\r\n\n#   \r\n\n# If you want to use just GL ES you can use these values\r\n\n#  OPENGLES_GLES_LIBRARY - Path to OpenGL ES Library\r\n\n#  OPENGLES_EGL_LIBRARY  - Path to EGL Library\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "code/CMakeModules/FindRyzomGameShare.cmake" : {
      "ObjectId" : "f76e4dd935b7aeb164c658a63cdbfe28693f6857",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/CMakeModules/FindSTLport.cmake" : {
      "ObjectId" : "68e542ea5df04aa735151fc10a8a34f38a59fe54",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Look for a directory containing STLport.\r\n\n#\r\n\n# The following values are defined\r\n\n# STLPORT_INCLUDE_DIR - where to find vector, etc.\r\n\n# STLPORT_LIBRARIES   - link against these to use STLport\r\n\n# STLPORT_FOUND       - True if the STLport is available.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# also defined, but not for general use are\r\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\r\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "code/CMakeModules/FindSquish.cmake" : {
      "ObjectId" : "4242f4055cfc2648479e64f852758393724e1da8",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Find the LibSquish includes and library\n\n#\n\n# This module defines\n\n# SQUISH_INCLUDE_DIR, where to find squish.h\n\n# SQUISH_LIBRARIES, where to find the Squish libraries.\n\n# SQUISH_FOUND, If false, do not try to use Squish.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# also defined, but not for general use are\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "code/CMakeModules/FindSteam.cmake" : {
      "ObjectId" : "8d9b12372a8b1d7c0ecbdda16e893a28e33e4abc",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Locate Steam API\n\n# This module defines\n\n#  STEAM_LIBRARY, the library to link against\n\n#  STEAM_FOUND, if false, do not try to link to STEAM\n\n#  STEAM_INCLUDE_DIR, where to find headers.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# universal binary\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Don't need to check STEAM_LIBRARY because we're dynamically loading Steam DLL\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "code/CMakeModules/FindVorbis.cmake" : {
      "ObjectId" : "234d2d31aa113b33e69bc2ceab08fe6e5e994b7f",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Locate Vorbis library\n\n# This module defines\n\n#  VORBIS_LIBRARY, the library to link against\n\n#  VORBIS_FOUND, if false, do not try to link to VORBIS\n\n#  VORBIS_INCLUDE_DIR, where to find headers.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "code/CMakeModules/FindWindowsSDK.cmake" : {
      "ObjectId" : "3d9c43bd9967a056e6a09532b270239fc7be7f09",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find Windows Platform SDK\r\n\n# Find the Windows includes\r\n\n#\r\n\n#  WINSDK_INCLUDE_DIR - where to find Windows.h\r\n\n#  WINSDK_INCLUDE_DIRS - where to find all Windows headers\r\n\n#  WINSDK_LIBRARY_DIR - where to find libraries\r\n\n#  WINSDK_FOUND       - True if Windows SDK found.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If Windows SDK already found, skip it\r\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Values can be CURRENT or any existing versions 7.1, 8.0A, etc...\r\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Fixed versions for Windows Kits (VC++ from 2012)\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# For VC++ up to 2010\r\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Search all supported Windows SDKs\r\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Search version in headers\r\n",
        "Line" : 101,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Look for Windows SDK 8.1\r\n",
        "Line" : 110,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# Look for Windows SDK 8.0\r\n",
        "Line" : 119,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Look for Windows SDK 7.0\r\n",
        "Line" : 128,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Load WinSDKVer.h content\r\n",
        "Line" : 139,
        "CharPositionInLine" : 12
      },
      "11" : {
        "Text" : "# Get NTDDI_MAXVER value\r\n",
        "Line" : 142,
        "CharPositionInLine" : 12
      },
      "12" : {
        "Text" : "# In Windows SDK 7.1, NTDDI_MAXVER is wrong\r\n",
        "Line" : 145,
        "CharPositionInLine" : 12
      },
      "13" : {
        "Text" : "# Look for Windows SDK 6.0\r\n",
        "Line" : 160,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Look for Windows SDK 5.2\r\n",
        "Line" : 169,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# Look for Windows SDK 5.1\r\n",
        "Line" : 178,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# Look for Windows SDK 5.0\r\n",
        "Line" : 187,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# Use WINSDK environment variable\r\n",
        "Line" : 205,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Use INCLUDE environment variable\r\n",
        "Line" : 214,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Look for Windows.h because there are several paths\r\n",
        "Line" : 219,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "# Compare WINSDK_DIR with registered Windows SDKs\r\n",
        "Line" : 229,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Use Windows SDK versions installed with VC++ when possible\r\n",
        "Line" : 242,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Special case, use Kits for SDK\r\n",
        "Line" : 244,
        "CharPositionInLine" : 6
      },
      "23" : {
        "Text" : "# look for each Windows SDK supported by VC++ 2005 (7.1 is the latest)\r\n",
        "Line" : 264,
        "CharPositionInLine" : 6
      },
      "24" : {
        "Text" : "# look if this version of Windows SDK is installed\r\n",
        "Line" : 266,
        "CharPositionInLine" : 8
      },
      "25" : {
        "Text" : "# Use installed Windows SDK\r\n",
        "Line" : 281,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# Look for correct registered Windows SDK version\r\n",
        "Line" : 300,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# Under VC++ 2015 and 2017, stdio.h, stdlib.h, etc... are part of UCRT\r\n",
        "Line" : 312,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# Look for correct UCRT\r\n",
        "Line" : 316,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# determine exact UCRT version\r\n",
        "Line" : 322,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# directory where UCRT headers are found\r\n",
        "Line" : 341,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# directory where UCRT libraries are found\r\n",
        "Line" : 347,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# directory where Win32 headers are found\r\n",
        "Line" : 372,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# directory where WinRT headers are found\r\n",
        "Line" : 383,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# directory where DirectX headers are found\r\n",
        "Line" : 393,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# directory where OpenGL headers are found\r\n",
        "Line" : 403,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# directory where all libraries are found\r\n",
        "Line" : 428,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# signtool is used to sign executables\r\n",
        "Line" : 444,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# midl is used to generate IDL interfaces\r\n",
        "Line" : 451,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Fix for using Windows SDK 7.1 with Visual C++ 2012, 2013, 2015 and 2017\r\n",
        "Line" : 487,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 40
    },
    "code/CMakeModules/FindXF86VidMode.cmake" : {
      "ObjectId" : "15dae03de9efb3d1937f3ca10f92c6ab248d4638",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Locate Jpeg library\n\n# This module defines\n\n#  XF86VidMode_LIBRARY, the library to link against\n\n#  XF86VidMode_FOUND, if false, do not try to link to XF86VidMode\n\n#  XF86VidMode_INCLUDE_DIR, where to find headers.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "code/CMakeModules/Findassimp.cmake" : {
      "ObjectId" : "b4bf0da9941d99184dd923a377510be7a07cf342",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/CMakeModules/GetRevision.cmake" : {
      "ObjectId" : "dba90c76577ee382a90d98aa210bde5b21196fe2",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ROOT_DIR should be set to root of the repository (where to find the .svn or .hg directory)\r\n\n# SOURCE_DIR should be set to root of your code (where to find CMakeLists.txt)\r\n\n# BINARY_DIR should be set to root of your build directory\r\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Replace spaces by semi-columns\r\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# convert ROOT_DIR to absolute path\r\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# if processing exported sources, use \"revision\" file if exists\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "code/CMakeModules/OSXToolChain.cmake" : {
      "ObjectId" : "3169aec7888813f927898dacfa48e4931fa5a1e9",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define OSX_SDK to force a specific version such as : -DOSX_SDK=10.11\r\n\n#\r\n\n# Example:\r\n\n# cmake ../code -DCMAKE_TOOLCHAIN_FILE=../code/CMakeModules/OSXToolChain.cmake -DWITH_NEL_TESTS=OFF -DWITH_RYZOM_SERVER=OFF -DWITH_NEL_TOOLS=OFF -DWITH_RYZOM_TOOLS=OFF -DWITH_LUA51=OFF -DWITH_LUA53=ON -DCMAKE_BUILD_TYPE=Release -DWITH_RYZOM_INSTALLER=OFF -DWITH_RYZOM_PATCH=ON -DWITH_NEL_TESTS=OFF -DWITH_NEL_TOOLS=OFF -DWITH_TOOLS=OFF -DWITH_NEL_SAMPLES=OFF -DWITH_WARNINGS=OFF -DWITH_QT5=OFF -DWITH_STATIC=ON -DWITH_STATIC_DRIVERS=ON -DWITH_STATIC_EXTERNAL=ON -DWITH_UNIX_STRUCTURE=OFF -DWITH_INSTALL_LIBRARIES=OFF -DWITH_RYZOM_SANDBOX=OFF -DOSX_SDK=10.11\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Don't forget to define environment variables:\r\n\n#\r\n\n# export MACOSX_DEPLOYMENT_TARGET=10.7\r\n\n# export OSXCROSS_GCC_NO_STATIC_RUNTIME=1\r\n\n# export PATH=$PATH:/home/src/osxcross/target/bin\r\n\n#\r\n\n# ln -s /usr/bin/hg /home/src/osxcross/target/bin/hg\r\n\n#\r\n\n# To install all dependencies:\r\n\n# ./osxcross-macports install libxml2 jpeg curl libogg libvorbis freetype boost openssl zlib lua-5.3 giflib\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# to compile Luabind\r\n\n# export CMAKE_MODULE_PATH=$HOME/shard/tools/external/cmake/modules\r\n\n# cmake .. -DCMAKE_TOOLCHAIN_FILE=$HOME/ryzomcore/code/CMakeModules/OSXToolChain.cmake -DWITH_SHARED=OFF -DWITH_STATIC=ON -DWITH_LUA51=OFF -DWITH_LUA53=ON -DCMAKE_INSTALL_PREFIX=$HOME/osxcross/target/external\r\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# subsequent toolchain loading is not really needed\r\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Force the compilers to Clang for OS X\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# C\r\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# C++\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# make\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Skip the platform compiler checks for cross compiling.\r\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Check if osxcross is installed\r\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Default paths\r\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Parent directory\r\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# List of all SDKs that have been found\r\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Find and use the most recent OS X sdk\r\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# if a specific SDK is defined, try to use it\r\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# if specified SDK doesn't exist, use the last one\r\n",
        "Line" : 90,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# use the last SDK\r\n",
        "Line" : 94,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Define final OS X sysroot\r\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Standard settings\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Set the find root to the OS X developer roots and to user defined paths\r\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# default to searching for frameworks first\r\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# set up the default search directories for frameworks\r\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# only search the OS X sdks, not the remainder of the host filesystem\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# determinate location for bin utils based on CMAKE_FIND_ROOT_PATH\r\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24
    },
    "code/CMakeModules/PCHSupport.cmake" : {
      "ObjectId" : "e0794ad9dd138fb5ba8efe55c27f244b96364408",
      "LastModified" : "2019-04-14T09:31:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find precompiled headers support for GCC 3.4 and 4.x (and MSVC)\n\n# Once done this will define:\n\n#\n\n# Variable:\n\n#   PCHSupport_FOUND\n\n#\n\n#   ADD_PRECOMPILED_HEADER  _targetName _inputh _inputcpp\n\n#   ADD_PRECOMPILED_HEADER_TO_TARGET _targetName _input _pch_output_to_use\n\n#   ADD_NATIVE_PRECOMPILED_HEADER _targetName _inputh _inputcpp\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO: make tests for other compilers than GCC\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# don't support logical expressions, append definition\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# support logical expressions, use them\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Set PCH_FLAGS for common flags, PCH_ARCH_XXX_FLAGS for specific archs flags and PCH_ARCHS for archs\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Append target for clang if defined\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# C++ flags\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# C++ config flags\n",
        "Line" : 71,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# NOTE: As cmake files (eg FindQT4) may now use generator expressions around their defines that evaluate\n\n#       to an empty string, wrap all \"items\" in an expression that outputs a -D IFF the generated\n\n#       expression is not empty.\n",
        "Line" : 99,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Required for CMake 2.6\n",
        "Line" : 103,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# use same include directories\n",
        "Line" : 184,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# use same compile definitions\n",
        "Line" : 193,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# Special Qt 5 cases\n",
        "Line" : 205,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Hack to define missing QT_NO_DEBUG with Qt 5.2\n",
        "Line" : 207,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Qt5_POSITION_INDEPENDENT_CODE should be true if Qt was compiled with PIC\n",
        "Line" : 212,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Already in list form and items may contain non-leading spaces that should not be split on\n",
        "Line" : 246,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# If parameter is really a flag (starts with -)\n",
        "Line" : 259,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Append previous flag\n",
        "Line" : 262,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# Append previous flag and its parameter\n\n# TODO: escape them only if there is an space\n",
        "Line" : 269,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# Shouldn't happen\n",
        "Line" : 274,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# Remove flags that don't work with PCH\n",
        "Line" : 286,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Remove all empty parameters\n",
        "Line" : 289,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Remove duplicate parameters\n",
        "Line" : 292,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# create a command-line string\n",
        "Line" : 295,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# and separate arguments\n",
        "Line" : 298,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# remove leading space in compiler argument\n",
        "Line" : 304,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# Ninja PCH Support\n\n# http://public.kitware.com/pipermail/cmake-developers/2012-March/003653.html\n",
        "Line" : 324,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# Copy .h to output dir\n",
        "Line" : 362,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# For GCC and Clang, PCH needs to be in the same directory as .h\n",
        "Line" : 376,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# Add common flags\n",
        "Line" : 381,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Ninja PCH Support\n\n# http://public.kitware.com/pipermail/cmake-developers/2012-March/003653.html\n",
        "Line" : 391,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# NMAKE-VS2012 Error LNK2011 (NMAKE-VS2010 do not complain)\n\n# we need to link the pch.obj file, see http://msdn.microsoft.com/en-us/library/3ay26wa2(v=vs.110).aspx\n",
        "Line" : 395,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# for use with distcc and gcc >4.0.1 if preprocessed files are accessible\n\n# on all remote machines set\n\n# PCH_ADDITIONAL_COMPILER_FLAGS to -fpch-preprocess\n",
        "Line" : 411,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# If no arch is specified, create common flags\n",
        "Line" : 417,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# Add specific flags for an arch\n",
        "Line" : 437,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# 0 => creating a new target for PCH, works for all makefiles\n\n# 1 => setting PCH for VC++ project, works for VC++ projects\n\n# 2 => setting PCH for XCode project, works for XCode projects\n",
        "Line" : 500,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# Auto include the precompile (useful for moc processing, since the use of\n\n# precompiled is specified at the target level\n\n# and I don't want to specifiy /F- for each moc/res/ui generated files (using Qt)\n",
        "Line" : 512,
        "CharPositionInLine" : 6
      },
      "37" : {
        "Text" : "#also inlude ${oldProps} to have the same compile options\n",
        "Line" : 524,
        "CharPositionInLine" : 6
      },
      "38" : {
        "Text" : "# For Xcode, cmake needs my patch to process\n\n# GCC_PREFIX_HEADER and GCC_PRECOMPILE_PREFIX_HEADER as target properties\n",
        "Line" : 527,
        "CharPositionInLine" : 6
      },
      "39" : {
        "Text" : "# When buiding out of the tree, precompiled may not be located\n\n# Use full path instead.\n",
        "Line" : 530,
        "CharPositionInLine" : 6
      },
      "40" : {
        "Text" : "#Fallback to the \"old\" precompiled suppport\n",
        "Line" : 537,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 41
    },
    "code/CMakeModules/iOSToolChain.cmake" : {
      "ObjectId" : "7bcb57227e42fc512dc683214c4470e72d5d1e5f",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is based off of the Platform/Darwin.cmake and Platform/UnixPaths.cmake\n\n# files which are included with CMake 2.8.4\n\n# It has been altered for iOS development\n\n#\n\n# Options:\n\n#\n\n# IOS_VERSION = last(default) or specific one (4.3, 5.0, 4.1)\n\n#   This decides if SDKS will be selected from the iPhoneOS.platform or iPhoneSimulator.platform folders\n\n#   OS - the default, used to build for iPhone and iPad physical devices, which have an arm arch.\n\n#   SIMULATOR - used to build for the Simulator platforms, which have an x86 arch.\n\n#\n\n# IOS_PLATFORM = OS (default) or SIMULATOR or ALL\n\n#   This decides if SDKS will be selected from the iPhoneOS.platform or iPhoneSimulator.platform folders\n\n#   OS - the default, used to build for iPhone and iPad physical devices, which have an arm arch.\n\n#   SIMULATOR - used to build for the Simulator platforms, which have an x86 arch.\n\n#\n\n# CMAKE_IOS_DEVELOPER_ROOT = automatic(default) or /path/to/platform/Developer folder\n\n#   By default this location is automatcially chosen based on the IOS_PLATFORM value above.\n\n#   If set manually, it will override the default location and force the user of a particular Developer Platform\n\n#\n\n# CMAKE_IOS_SDK_ROOT = automatic(default) or /path/to/platform/Developer/SDKs/SDK folder\n\n#   By default this location is automatcially chosen based on the CMAKE_IOS_DEVELOPER_ROOT value.\n\n#   In this case it will always be the most up-to-date SDK found in the CMAKE_IOS_DEVELOPER_ROOT path.\n\n#   If set manually, this will force the use of a specific SDK version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# subsequent toolchain loading is not really needed\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Standard settings\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TODO: determine target Darwin version\n",
        "Line" : 33,
        "CharPositionInLine" : 28
      },
      "4" : {
        "Text" : "# Setup iOS platform\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Check the platform selection and setup for developer root\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# This causes the installers to properly locate the output libraries\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# This causes the installers to properly locate the output libraries\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# This causes the installers to properly locate the output libraries\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Setup iOS developer location unless specified manually with CMAKE_IOS_DEVELOPER_ROOT\n\n# Note Xcode 4.3 changed the installation location, choose the most recent one available\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Find and use the most recent iOS sdk\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Search for a specific version of a SDK\n",
        "Line" : 104,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Set the sysroot default to the most recent SDK\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# iPhone simulator targets i386\n",
        "Line" : 151,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# set the architecture for iOS - using ARCHS_STANDARD_32_BIT sets armv7,armv7s and appears to be XCode's standard.\n\n# The other value that works is ARCHS_UNIVERSAL_IPHONE_OS but that sets armv7 only\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Set the find root to the iOS developer roots and to user defined paths\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# default to searching for frameworks first\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# set up the default search directories for frameworks\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# only search the iOS sdks, not the remainder of the host filesystem\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Force the compilers to Clang for iOS\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Skip the platform compiler checks for cross compiling.\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# determinate location for bin utils based on CMAKE_FIND_ROOT_PATH\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 22
    },
    "code/CMakeModules/nel.cmake" : {
      "ObjectId" : "abe41ca1fe51b98620ff842b0fa4b20543ccfdb5",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Force Release configuration for compiler checks\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Force Release configuration by default\r\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Declare CMAKE_CONFIGURATION_TYPES before PROJECT\r\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\r\n\n# Helper macro that generates .pc and installs it.\r\n\n# Argument: name - the name of the .pc package, e.g. \"nel-pacs.pc\"\r\n\n###\r\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###\r\n\n#\r\n\n###\r\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "###\r\n\n#\r\n\n###\r\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "###\r\n\n# Helper macro that sets the default library properties.\r\n\n# Argument: name - the target name whose properties are being set\r\n\n# Argument:\r\n\n###\r\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# explicitly say that the target depends on revision.h\r\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Note: This is just a workaround for a CMake bug generating VS10 files with a colon in the project name.\r\n\n# CMake Bug ID: http://www.cmake.org/Bug/view.php?id=11819\r\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Set versions only if target is a shared library\r\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# check if using a GUI\r\n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Target Windows XP 64 bits\r\n",
        "Line" : 75,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# Target Windows XP\r\n",
        "Line" : 78,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# GUI\r\n",
        "Line" : 83,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# Console\r\n",
        "Line" : 86,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "###\r\n\n# Adds the target suffix on Windows.\r\n\n# Argument: name - the library's target name.\r\n\n###\r\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "###\r\n\n# Adds the runtime link flags for Win32 binaries and links STLport.\r\n\n# Argument: name - the target to add the link flags to.\r\n\n###\r\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#    SET_TARGET_PROPERTIES(${name} PROPERTIES\r\n\n#      LINK_FLAGS_DEBUG \"${CMAKE_LINK_FLAGS_DEBUG}\"\r\n\n#      LINK_FLAGS_RELEASE \"${CMAKE_LINK_FLAGS_RELEASE}\")\r\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "###\r\n\n# Checks build vs. source location. Prevents In-Source builds.\r\n\n###\r\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "###\r\n\n# Features\r\n\n###\r\n",
        "Line" : 204,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Default to static building on Windows.\r\n",
        "Line" : 213,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "###\r\n\n# GUI toolkits\r\n\n###\r\n",
        "Line" : 251,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "###\r\n\n# Optional support\r\n\n###\r\n",
        "Line" : 264,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# only enable STLport for VC++ 2010 and less\r\n",
        "Line" : 269,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "###\r\n\n# Core libraries\r\n\n###\r\n",
        "Line" : 286,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "###\r\n\n# Drivers Support\r\n\n###\r\n",
        "Line" : 298,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "###\r\n\n# Optional support\r\n\n###\r\n",
        "Line" : 309,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "###\r\n\n# Core libraries\r\n\n###\r\n",
        "Line" : 331,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "###\r\n\n# Core libraries\r\n\n###\r\n",
        "Line" : 339,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "###\r\n\n# Optional support\r\n\n###\r\n",
        "Line" : 347,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "###\r\n\n# Core libraries\r\n\n###\r\n",
        "Line" : 361,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "#-----------------------------------------------------------------------------\r\n\n# Setup the buildmode variables.\r\n\n#\r\n\n# None                  = NL_RELEASE\r\n\n# Debug                 = NL_DEBUG\r\n\n# Release               = NL_RELEASE\r\n",
        "Line" : 385,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# enforce release mode if it's neither Debug nor Release\r\n",
        "Line" : 399,
        "CharPositionInLine" : 6
      },
      "33" : {
        "Text" : "# Determine target CPU\r\n",
        "Line" : 416,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# If not specified, use the same CPU as host\r\n",
        "Line" : 418,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# If target and host CPU are the same\r\n",
        "Line" : 449,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# x86-compatible CPU\r\n",
        "Line" : 451,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "# Using 32 or 64 bits libraries\r\n",
        "Line" : 458,
        "CharPositionInLine" : 6
      },
      "38" : {
        "Text" : "# TODO: add checks for PPC\r\n",
        "Line" : 470,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "# Use values from environment variables\r\n",
        "Line" : 475,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# Remove -g and -O flag because we are managing them ourself\r\n",
        "Line" : 480,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# Strip spaces\r\n",
        "Line" : 486,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# Fix library paths suffixes for Debian MultiArch\r\n",
        "Line" : 551,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# Ignore default include paths\r\n",
        "Line" : 571,
        "CharPositionInLine" : 4
      },
      "44" : {
        "Text" : "# /Ox is working with VC++ 2015 and 2017, but custom optimizations don't exist\r\n",
        "Line" : 576,
        "CharPositionInLine" : 6
      },
      "45" : {
        "Text" : "# without inlining it's unusable, use custom optimizations again\r\n",
        "Line" : 578,
        "CharPositionInLine" : 6
      },
      "46" : {
        "Text" : "# Special cases for VC++ 2017\r\n",
        "Line" : 581,
        "CharPositionInLine" : 6
      },
      "47" : {
        "Text" : "# /Ox is working with VC++ 2013, but custom optimizations don't exist\r\n",
        "Line" : 589,
        "CharPositionInLine" : 6
      },
      "48" : {
        "Text" : "# without inlining it's unusable, use custom optimizations again\r\n",
        "Line" : 591,
        "CharPositionInLine" : 6
      },
      "49" : {
        "Text" : "# /Ox is working with VC++ 2012, but custom optimizations don't exist\r\n",
        "Line" : 595,
        "CharPositionInLine" : 6
      },
      "50" : {
        "Text" : "# without inlining it's unusable, use custom optimizations again\r\n",
        "Line" : 597,
        "CharPositionInLine" : 6
      },
      "51" : {
        "Text" : "# /Ox is working with VC++ 2010, but custom optimizations don't exist\r\n",
        "Line" : 601,
        "CharPositionInLine" : 6
      },
      "52" : {
        "Text" : "# without inlining it's unusable, use custom optimizations again\r\n",
        "Line" : 603,
        "CharPositionInLine" : 6
      },
      "53" : {
        "Text" : "# don't use a /O[012x] flag if you want custom optimizations\r\n",
        "Line" : 607,
        "CharPositionInLine" : 6
      },
      "54" : {
        "Text" : "# without inlining it's unusable, use custom optimizations again\r\n",
        "Line" : 609,
        "CharPositionInLine" : 6
      },
      "55" : {
        "Text" : "# don't use a /O[012x] flag if you want custom optimizations\r\n",
        "Line" : 613,
        "CharPositionInLine" : 6
      },
      "56" : {
        "Text" : "# without inlining it's unusable, use custom optimizations again\r\n",
        "Line" : 615,
        "CharPositionInLine" : 6
      },
      "57" : {
        "Text" : "# huge PCH\r\n",
        "Line" : 623,
        "CharPositionInLine" : 4
      },
      "58" : {
        "Text" : "# Fix a bug with Intellisense\r\n",
        "Line" : 627,
        "CharPositionInLine" : 6
      },
      "59" : {
        "Text" : "# Fix a compilation error for some big C++ files\r\n",
        "Line" : 629,
        "CharPositionInLine" : 6
      },
      "60" : {
        "Text" : "# Allows 32 bits applications to use 3 GB of RAM\r\n",
        "Line" : 632,
        "CharPositionInLine" : 6
      },
      "61" : {
        "Text" : "# Exceptions are only set for C++\r\n",
        "Line" : 636,
        "CharPositionInLine" : 4
      },
      "62" : {
        "Text" : "# Not using CMAKE_OSX_ARCHITECTURES, HAVE_XXX already defined before\r\n",
        "Line" : 754,
        "CharPositionInLine" : 10
      },
      "63" : {
        "Text" : "# Always force -mmacosx-version-min to override environement variable\r\n",
        "Line" : 860,
        "CharPositionInLine" : 10
      },
      "64" : {
        "Text" : "# use libc++ under OX X to be able to use new C++ features (and else it'll use GCC 4.2.1 STL)\r\n\n# minimum target is now OS X 10.7\r\n",
        "Line" : 869,
        "CharPositionInLine" : 8
      },
      "65" : {
        "Text" : "# use c++0x standard to use std::unique_ptr and std::shared_ptr\r\n",
        "Line" : 889,
        "CharPositionInLine" : 4
      },
      "66" : {
        "Text" : "# hardening\r\n",
        "Line" : 896,
        "CharPositionInLine" : 4
      },
      "67" : {
        "Text" : "# Check wrong formats in printf-like functions\r\n",
        "Line" : 910,
        "CharPositionInLine" : 6
      },
      "68" : {
        "Text" : "# never display these warnings because they are minor\r\n",
        "Line" : 914,
        "CharPositionInLine" : 4
      },
      "69" : {
        "Text" : "# Optimizations for Intel Atom\r\n",
        "Line" : 948,
        "CharPositionInLine" : 8
      },
      "70" : {
        "Text" : "# Fix \"relocation R_X86_64_32 against..\" error on x64 platforms\r\n",
        "Line" : 963,
        "CharPositionInLine" : 4
      },
      "71" : {
        "Text" : "# hardening\r\n",
        "Line" : 968,
        "CharPositionInLine" : 4
      },
      "72" : {
        "Text" : "# If -fstack-protector or -fstack-protector-all enabled, enable too new warnings and fix possible link problems\r\n",
        "Line" : 971,
        "CharPositionInLine" : 4
      },
      "73" : {
        "Text" : "# Fix undefined reference to `__stack_chk_fail' error\r\n",
        "Line" : 976,
        "CharPositionInLine" : 4
      },
      "74" : {
        "Text" : "# hardening\r\n",
        "Line" : 988,
        "CharPositionInLine" : 6
      },
      "75" : {
        "Text" : "## Debug\r\n",
        "Line" : 1014,
        "CharPositionInLine" : 2
      },
      "76" : {
        "Text" : "## Release\r\n",
        "Line" : 1021,
        "CharPositionInLine" : 2
      },
      "77" : {
        "Text" : "# Macro to create x_ABSOLUTE_PREFIX from x_PREFIX\r\n",
        "Line" : 1029,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "## Allow override of install_prefix/etc path.\r\n",
        "Line" : 1049,
        "CharPositionInLine" : 2
      },
      "79" : {
        "Text" : "## Allow override of install_prefix/share path.\r\n",
        "Line" : 1059,
        "CharPositionInLine" : 2
      },
      "80" : {
        "Text" : "## Allow override of install_prefix/sbin path.\r\n",
        "Line" : 1069,
        "CharPositionInLine" : 2
      },
      "81" : {
        "Text" : "## Allow override of install_prefix/bin path.\r\n",
        "Line" : 1079,
        "CharPositionInLine" : 2
      },
      "82" : {
        "Text" : "## Allow override of install_prefix/lib path.\r\n",
        "Line" : 1089,
        "CharPositionInLine" : 2
      },
      "83" : {
        "Text" : "## Allow override of install_prefix/lib path.\r\n",
        "Line" : 1099,
        "CharPositionInLine" : 2
      },
      "84" : {
        "Text" : "## Allow override of install_prefix/etc path.\r\n",
        "Line" : 1119,
        "CharPositionInLine" : 2
      },
      "85" : {
        "Text" : "## Allow override of install_prefix/share path.\r\n",
        "Line" : 1129,
        "CharPositionInLine" : 2
      },
      "86" : {
        "Text" : "## Allow override of install_prefix/sbin path.\r\n",
        "Line" : 1139,
        "CharPositionInLine" : 2
      },
      "87" : {
        "Text" : "## Allow override of install_prefix/bin path.\r\n",
        "Line" : 1149,
        "CharPositionInLine" : 2
      },
      "88" : {
        "Text" : "## Allow override of install_prefix/lib path.\r\n",
        "Line" : 1159,
        "CharPositionInLine" : 2
      },
      "89" : {
        "Text" : "## Allow override of install_prefix/games path.\r\n",
        "Line" : 1169,
        "CharPositionInLine" : 2
      },
      "90" : {
        "Text" : "# If using custom boost, we need to define the right variables used by official boost CMake module\r\n",
        "Line" : 1189,
        "CharPositionInLine" : 4
      },
      "91" : {
        "Text" : "# Look only for static libraries because systems libraries are using Frameworks\r\n",
        "Line" : 1199,
        "CharPositionInLine" : 8
      },
      "92" : {
        "Text" : "# Android, iOS and Mac OS X have pthread, but no need to link to libpthread\r\n",
        "Line" : 1213,
        "CharPositionInLine" : 2
      },
      "93" : {
        "Text" : "# TODO: replace all -l<lib> by absolute path to <lib> in CMAKE_THREAD_LIBS_INIT\r\n",
        "Line" : 1220,
        "CharPositionInLine" : 4
      },
      "94" : {
        "Text" : "# Must include DXSDK before WINSDK\r\n",
        "Line" : 1229,
        "CharPositionInLine" : 4
      },
      "95" : {
        "Text" : "# IF(DXSDK_INCLUDE_DIR)\r\n\n#   INCLUDE_DIRECTORIES(${DXSDK_INCLUDE_DIR})\r\n\n# ENDIF()\r\n",
        "Line" : 1231,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 96
    },
    "code/CTestConfig.cmake" : {
      "ObjectId" : "eb459f4a272ba580874ec8bfa5aa1d3aafd340b1",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## This file should be placed in the root directory of your project.\n\n## Then modify the CMakeLists.txt file in the root directory of your\n\n## project to incorporate the testing dashboard.\n\n## # The following are required to uses Dart and the Cdash dashboard\n\n##   ENABLE_TESTING()\n\n##   INCLUDE(Dart)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "code/config.h.cmake" : {
      "ObjectId" : "69171cf68ba2594ee0a7ad86572b9f4dca23b789",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKESOURCE",
      "CommentCount" : 0
    },
    "code/nel/CMakeLists.txt" : {
      "ObjectId" : "3470fcebbd9ec34fdde1e034127b8a0ff8712f61",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# On Win32 we can also build the MAX plugins.\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "code/nel/include/CMakeLists.txt" : {
      "ObjectId" : "b234f8fdeb36a4c510294cb816a0df12d69acc22",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/include/nel/3d/CMakeLists.txt" : {
      "ObjectId" : "d2fd7e423c891f11e02f5958124cf22b69a20fef",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/include/nel/CMakeLists.txt" : {
      "ObjectId" : "4df9413b5f3347b8d216a6f8d94c2d31f16740a5",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/include/nel/cegui/CMakeLists.txt" : {
      "ObjectId" : "9ca5daa0b50c72f44df7ef43d443598e704bc49f",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/include/nel/georges/CMakeLists.txt" : {
      "ObjectId" : "58b21860c091f27f2545e48de57b2c5af64fc46b",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/include/nel/gui/CMakeLists.txt" : {
      "ObjectId" : "cae6dae6f73cb85381143491d8a6726a0545ad67",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/include/nel/ligo/CMakeLists.txt" : {
      "ObjectId" : "f4a13bad5940d6a1eda4daf98ad22bcd8e74c03f",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/include/nel/logic/CMakeLists.txt" : {
      "ObjectId" : "e0fd8ba7ef5d5e7bc7b7c24ccf0f4d02ce255698",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/include/nel/misc/CMakeLists.txt" : {
      "ObjectId" : "85d8914f5342c384f1134bd10d01c6e92988f79d",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/include/nel/misc/version_nl.cmake" : {
      "ObjectId" : "2e650486ec528314cb150dc8a4846cce0d5302c2",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ifndef NL_VERSION_H\r\n\n#define NL_VERSION_H\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#define NL_VERSION \"${NL_VERSION}\"\r\n\n#define NL_VERSION_MAJOR ${NL_VERSION_MAJOR}\r\n\n#define NL_VERSION_MINOR ${NL_VERSION_MINOR}\r\n\n#define NL_VERSION_PATCH ${NL_VERSION_PATCH}\r\n\n#define NL_VERSION_NUM ${NL_VERSION_NUM}\r\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#define NL_REVISION ${REVISION}\r\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#define NL_BUILD_DATE \"${BUILD_DATE}\"\r\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#endif\r\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "code/nel/include/nel/net/CMakeLists.txt" : {
      "ObjectId" : "45673a8372fa394273f4b47809108dc018df8982",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/include/nel/pacs/CMakeLists.txt" : {
      "ObjectId" : "f1036e31cf544816ba62ec04caad01c8f7cd3120",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/include/nel/sound/CMakeLists.txt" : {
      "ObjectId" : "93559ad5d22793dfb8851c8c59ee8d9da31a4a9b",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/include/nel/sound/driver/CMakeLists.txt" : {
      "ObjectId" : "f35196632ce6e898e50e698531a30c1c06d18e70",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/samples/3d/CMakeLists.txt" : {
      "ObjectId" : "772ab005666d23ebe064dcb56bccfa84be867195",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#IF(WITH_QT)\n\n#  ADD_SUBDIRECTORY(qtnel)\n\n#ENDIF()\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "code/nel/samples/3d/cegui/CMakeLists.txt" : {
      "ObjectId" : "3a8650a19cfa71dfc3b8936a06d99362ba7c029b",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/samples/3d/cluster_viewer/CMakeLists.txt" : {
      "ObjectId" : "ad8bdb98d6ef4e3cc6de920732d948719f9ac58a",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/samples/3d/font/CMakeLists.txt" : {
      "ObjectId" : "a944ef643cfa7a5bc551ea7b0e92af2e944c5e31",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/samples/3d/qtnel/CMakeLists.txt" : {
      "ObjectId" : "1730cd4b36567a5ca4d3f79a9ee07c6f563ceeca",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#SET(TILE_EDIT_UIS tile_widget_qt.ui tile_rotation_qt.ui qtnel.ui tile_browser_qt.ui items_edit_qt.ui)\n\n#SET(TILE_EDIT_RCS qtnel.qrc)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#QT4_ADD_RESOURCES( TILE_EDIT_RC_SRCS ${TILE_EDIT_RCS} )\n\n#QT4_WRAP_UI( TILE_EDIT_UI_HDRS ${TILE_EDIT_UIS} )\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#ADD_EXECUTABLE(qtnel ${TILE_EDIT_SRC} ${TILE_EDIT_MOC_SRCS} ${TILE_EDIT_RC_SRCS} ${TILE_EDIT_UI_HDRS})\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "code/nel/samples/3d/shape_viewer/CMakeLists.txt" : {
      "ObjectId" : "9262a7cd7f3472b0faf364ed343f9300e461391c",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/samples/CMakeLists.txt" : {
      "ObjectId" : "84c4e3f11421fb088632fb1c0e45e9ae80961114",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/samples/georges/CMakeLists.txt" : {
      "ObjectId" : "ed83e9ce3b58d417b361f1377b16c55198d4e6ef",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/samples/misc/CMakeLists.txt" : {
      "ObjectId" : "d00a549528a46e0a1a16478c472d23dc50d7cb77",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/samples/misc/callback/CMakeLists.txt" : {
      "ObjectId" : "62626b0a7db9b3bf68120cb8a360e75b035728bf",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/samples/misc/command/CMakeLists.txt" : {
      "ObjectId" : "8069e8bd031c20433ed334362360516d35eba977",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/samples/misc/configfile/CMakeLists.txt" : {
      "ObjectId" : "3d29c082cf5cc9350c5396e1bdccd155c9d51150",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/samples/misc/debug/CMakeLists.txt" : {
      "ObjectId" : "c2cd617a31ebd6f4d31087827fa78044a524b1f2",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/samples/misc/i18n/CMakeLists.txt" : {
      "ObjectId" : "5238b618035e84d72d1ff541d84b10dd830d1cb9",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/samples/misc/log/CMakeLists.txt" : {
      "ObjectId" : "dca8c76a89176a9e924b08d363ccaef634680058",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/samples/misc/strings/CMakeLists.txt" : {
      "ObjectId" : "d4ffc3c1a317d27135d25794da3ef7652d358b77",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/samples/misc/types_check/CMakeLists.txt" : {
      "ObjectId" : "9b3172eb2ff0b3dd3a61857abb3e8c82bd4d06be",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/samples/net/CMakeLists.txt" : {
      "ObjectId" : "df19489cb5d94180a6cda55f8175fe05462a8efd",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#multi_shards\n\n#net_layer3\n\n#net_layer4\n\n#net_layer5\n\n#service\n\n#udp_ping\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "code/nel/samples/net/chat/CMakeLists.txt" : {
      "ObjectId" : "b5c66d67c7e9d9c7ad2de077a97e5da373b4c82f",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/samples/net/class_transport/CMakeLists.txt" : {
      "ObjectId" : "3561221d426abdeaee4fa281ea22c8cc3187d1a4",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/samples/net/login_system/CMakeLists.txt" : {
      "ObjectId" : "97436fc9099c8e3e8cb6c41f58fce0028b9a2ad3",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/samples/net/udp/CMakeLists.txt" : {
      "ObjectId" : "21ef87015ab393b30ec94b87127774eb2153d334",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/samples/pacs/CMakeLists.txt" : {
      "ObjectId" : "79839c1267dd836515e152fa5d02ad05f3c899f2",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/samples/sound/CMakeLists.txt" : {
      "ObjectId" : "fb21c7de5906eb490b2252156d2cb2b67c4feffa",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/samples/sound/sound_sources/CMakeLists.txt" : {
      "ObjectId" : "4c7c3d9cfcc2c2bfcc74564d295ed7ee4bce7e85",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/samples/sound/stream_file/CMakeLists.txt" : {
      "ObjectId" : "54f09a2e1a334da51f5983972d594b71f6bd7bf0",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/samples/sound/stream_ogg_vorbis/CMakeLists.txt" : {
      "ObjectId" : "691d0fbe3ef1bb502ca59b7ac68e83a9d9b47e0e",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/src/3d/CMakeLists.txt" : {
      "ObjectId" : "e79d26f574871513a68f437440222339a810d530",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/src/3d/driver/CMakeLists.txt" : {
      "ObjectId" : "8f1693716c2d38229e4f1d9fa502dee53a0ca197",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/src/3d/driver/direct3d/CMakeLists.txt" : {
      "ObjectId" : "d74bdeceb73d39a2c3f3bd955c0c13e0b0382ecd",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/src/3d/driver/opengl/CMakeLists.txt" : {
      "ObjectId" : "8b5aabeb19146bbed09b936f7661e3396d5cdaf3",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This helps to debug issue 310\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# libraries needed to be linked while linking to static X11 libraries\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#  FIND_LIBRARY(XCB_LIBRARY\n\n#    NAMES xcb\n\n#    HINTS ${X11_LIB_SEARCH_PATH})\n\n#  IF(XCB_LIBRARY)\n\n#    TARGET_LINK_LIBRARIES(${NLDRV_OGL_LIB} ${XCB_LIBRARY})\n\n#  ENDIF()\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "code/nel/src/3d/driver/opengles/CMakeLists.txt" : {
      "ObjectId" : "8cac2dfeac625bf3a103c97388af13dc0038ffbc",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/src/CMakeLists.txt" : {
      "ObjectId" : "2b140340afa417a01a1603d6afe90f0eb56ae38d",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/src/cegui/CMakeLists.txt" : {
      "ObjectId" : "0a94d78924444cb3b10c829432ed81c0f90de312",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/src/georges/CMakeLists.txt" : {
      "ObjectId" : "802324d310fb870f640c1e4d553c8c4b61ca5b35",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# SOURCE_GROUP(headers FILES ${HEADERS})\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "code/nel/src/gui/CMakeLists.txt" : {
      "ObjectId" : "cb7bbe23a074918421f2efa5e244634a63975f2f",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/src/ligo/CMakeLists.txt" : {
      "ObjectId" : "39823c4d55b8baadd418fd581e273faf87e7b9d7",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/src/logic/CMakeLists.txt" : {
      "ObjectId" : "0b5bc443b1424984a66122f3cdc3fa0a514b5d7e",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/src/misc/CMakeLists.txt" : {
      "ObjectId" : "ec0dcd3577c93ebc58a7495014b475362fbf5565",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Link only with libpng shared library\n",
        "Line" : 199,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "code/nel/src/net/CMakeLists.txt" : {
      "ObjectId" : "a3a909ea6b19ec6ffc4923a663000dad593333ad",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/src/pacs/CMakeLists.txt" : {
      "ObjectId" : "70a80500a55616e8067473f2af1f88400de390cd",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/src/pipeline/CMakeLists.txt" : {
      "ObjectId" : "d6e5705de1a5825ba37c25f28b72847d051261de",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/src/sound/CMakeLists.txt" : {
      "ObjectId" : "d2c47387ea3cd8228d191c3eaedfa1f21448479e",
      "LastModified" : "2019-04-14T09:31:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add libogg dependency only if target is static because to libvorbisfile\n",
        "Line" : 100,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "code/nel/src/sound/driver/CMakeLists.txt" : {
      "ObjectId" : "320c4ee055710732e230b7bee1badb7f0e55ef78",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/src/sound/driver/dsound/CMakeLists.txt" : {
      "ObjectId" : "e3a81fb853a0a5c664127749c017f124b8423aea",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/src/sound/driver/fmod/CMakeLists.txt" : {
      "ObjectId" : "59cc544c1663ae011e38327bcc7beda34a28aaa2",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/src/sound/driver/openal/CMakeLists.txt" : {
      "ObjectId" : "911214a57ebffacb37dbb17c12bc41b6f1fef013",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find and include EFX-Util on Windows.\n",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "code/nel/src/sound/driver/xaudio2/CMakeLists.txt" : {
      "ObjectId" : "62bbdcb5504ccfb80df76ef651fee1e2c615fb7e",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/3d/CMakeLists.txt" : {
      "ObjectId" : "08fd9e776ddb144720a0193ce45c5edeaf8d1e5b",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# For tools selection of only max plugins\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#    ADD_SUBDIRECTORY(lightmap_optimizer)\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#crash_log_analyser\n",
        "Line" : 87,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "code/nel/tools/3d/anim_builder/CMakeLists.txt" : {
      "ObjectId" : "61188b461339b9692673b0ad0de8e6613c803e40",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/3d/animation_set_builder/CMakeLists.txt" : {
      "ObjectId" : "da81b1de3eeaea645cff88227341e17b09a8e1cd",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/3d/build_clod_bank/CMakeLists.txt" : {
      "ObjectId" : "2bd4846d762a9e66e82ab46c8966c87bf02604e6",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/3d/build_clodtex/CMakeLists.txt" : {
      "ObjectId" : "5589624210c95b2efae857b7e07339024002e776",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/3d/build_coarse_mesh/CMakeLists.txt" : {
      "ObjectId" : "93eba1bfc2768186a6f37c62267dcbfabd5baaaa",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/3d/build_far_bank/CMakeLists.txt" : {
      "ObjectId" : "7a858d560ffb07a7d8303033089f40d956b31daf",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/3d/build_interface/CMakeLists.txt" : {
      "ObjectId" : "243bc326db11011ed23cdfe963c131b15da820d1",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/3d/build_shadow_skin/CMakeLists.txt" : {
      "ObjectId" : "78bbd712da4c834290af499c69063b97f7b9bf4f",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/3d/build_smallbank/CMakeLists.txt" : {
      "ObjectId" : "260f6b9aa77da90d21e8df92bc5d35e865f7d939",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/3d/cluster_viewer/CMakeLists.txt" : {
      "ObjectId" : "a0db8cd6846c1423ffafb57c81c94518f198095a",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/3d/file_info/CMakeLists.txt" : {
      "ObjectId" : "43cb359fd05e8675b84cc4a5d78fd59ae1eacf1f",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/3d/get_neighbors/CMakeLists.txt" : {
      "ObjectId" : "d8de69ff57abd4ac702c2ae62aa973accdd5b063",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/3d/hls_bank_maker/CMakeLists.txt" : {
      "ObjectId" : "d2482c2767968d8fda0fa6d66cb5f4820b0a534f",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/3d/ig_add/CMakeLists.txt" : {
      "ObjectId" : "2ae993d51b1201a40abc73c1e801356bc96f55af",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/3d/ig_elevation/CMakeLists.txt" : {
      "ObjectId" : "fc584883c42720d5f1e975889196099277abba04",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/3d/ig_info/CMakeLists.txt" : {
      "ObjectId" : "59f32f9cae9ffd9bea93ac4225d1fe6b6f6b47d3",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/3d/ig_lighter/CMakeLists.txt" : {
      "ObjectId" : "54f703566d5d368a03b5c9308762a65aee7a6397",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/3d/lightmap_optimizer/CMakeLists.txt" : {
      "ObjectId" : "36e5b2aa47fbf0919759c0b89bbfabdefa6b10a0",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/3d/ligo/CMakeLists.txt" : {
      "ObjectId" : "4aa27ce5bd91fbc072d01ad178e309ac5f5c9985",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO add install for the .txt and .cfg\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "code/nel/tools/3d/ligo/plugin_max/CMakeLists.txt" : {
      "ObjectId" : "cd2539ee4e98c733969caf83196e1dac261cc9a8",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/3d/mesh_export/CMakeLists.txt" : {
      "ObjectId" : "838ce49c20dca646a846853a926a22c3661e5654",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/3d/mesh_utils/CMakeLists.txt" : {
      "ObjectId" : "d8a5b29d9ff9d94568dbef99b19e184a620d7c1f",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/3d/object_viewer/CMakeLists.txt" : {
      "ObjectId" : "962f0b5bb73b78d6ca42e05dc6506a9c5f65b88a",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/3d/object_viewer_exe/CMakeLists.txt" : {
      "ObjectId" : "a57a3788a95cdf62218a56798144b08b238323e6",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/3d/object_viewer_widget/CMakeLists.txt" : {
      "ObjectId" : "20e5b69e862d99f4db963c2213d34610c8c93530",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#   Object Viewer Widget\n\n#   Copyright (C) 2010 Adrian J�kel <aj at elane2k dot com>\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This tells the application(s) where to find the installed data.\n\n#ADD_DEFINITIONS(-DDATA_DIR=\"\\\\\"${NL_SHARE_ABSOLUTE_PREFIX}/georges_editor_qt/\\\\\"\")\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#INSTALL(DIRECTORY data/\n\n#        DESTINATION share/georges_editor_qt/data\n\n#        COMPONENT data\n\n#        PATTERN \"CVS\" EXCLUDE\n\n#        PATTERN \".svn\" EXCLUDE\n\n#        PATTERN \"Makefile*\" EXCLUDE)\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "code/nel/tools/3d/object_viewer_widget/src/CMakeLists.txt" : {
      "ObjectId" : "0287751141dc43b65fec231eb5e1101fa2330e99",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ADD_DEFINITIONS(-DQT_NO_DEBUG)\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#INSTALL(TARGETS object_viewer_widget_qt RUNTIME DESTINATION ${NL_BIN_PREFIX} COMPONENT runtime)\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "code/nel/tools/3d/panoply_maker/CMakeLists.txt" : {
      "ObjectId" : "8fd25fef6ca6caa3d394be56334dae890cf0481e",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/3d/panoply_preview/CMakeLists.txt" : {
      "ObjectId" : "3c7e1705032c247d6b865f4e8e6b4c94b2173f76",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/3d/plugin_max/CMakeLists.txt" : {
      "ObjectId" : "04aee4a9e793392a7b9ee393b4017922806294c3",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/3d/plugin_max/nel_3dsmax_shared/CMakeLists.txt" : {
      "ObjectId" : "9a14d59a663e69925a37f641378075fb30148eb6",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#SET_TARGET_PROPERTIES(nel_export PROPERTIES SUFFIX \".dlx\")\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "code/nel/tools/3d/plugin_max/nel_export/CMakeLists.txt" : {
      "ObjectId" : "2787a7645888f31b83eb8f4eb443df4d6f5a2825",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/3d/plugin_max/nel_mesh_lib/CMakeLists.txt" : {
      "ObjectId" : "e8222ad546c5e66007ce597f6c5327440e78c647",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/3d/plugin_max/nel_patch_converter/CMakeLists.txt" : {
      "ObjectId" : "178e70f5dbc981de6a9639ac9ad041a5be71e42c",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/3d/plugin_max/nel_patch_edit/CMakeLists.txt" : {
      "ObjectId" : "bc2f81f339f781859e2133e32ff84cec47eabc9a",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/3d/plugin_max/nel_patch_lib/CMakeLists.txt" : {
      "ObjectId" : "127b7fba29e72950c4e1d25eccc71ec2c7f22367",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/3d/plugin_max/nel_patch_paint/CMakeLists.txt" : {
      "ObjectId" : "388e8b8ef52cd4c87e1f35d1670bb1d82f095822",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/3d/plugin_max/nel_vertex_tree_paint/CMakeLists.txt" : {
      "ObjectId" : "dc5b6a284d4be3d5265b3d3524baa822e223bdc0",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/3d/plugin_max/tile_utility/CMakeLists.txt" : {
      "ObjectId" : "1ea546e3833e7d61b1bf4e88afa773950c2c3ee2",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/3d/s3tc_compressor_lib/CMakeLists.txt" : {
      "ObjectId" : "48c14fb3b07d4d9c88421cecd7cb0ab638e72062",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/3d/shape2obj/CMakeLists.txt" : {
      "ObjectId" : "c6fb25ec7484c4bf3e0cf8e8cc7a7de4937d661e",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/3d/shapes_exporter/CMakeLists.txt" : {
      "ObjectId" : "1df5eafa0b88d14fbce2eaab13fdc71e400120ef",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/3d/shared_widgets/CMakeLists.txt" : {
      "ObjectId" : "ff0794d8bac9f93904314b644af38eab4130e7c6",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/3d/textures_optimizer/CMakeLists.txt" : {
      "ObjectId" : "469592ec4fc175c861441bea51750219868f7a00",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/3d/textures_tool/CMakeLists.txt" : {
      "ObjectId" : "20316716235c4a8ab8a9ea29169b73b86727b57a",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/3d/tga_2_dds/CMakeLists.txt" : {
      "ObjectId" : "10620af5b30c621554413cf35b1b370225e9809f",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/3d/tga_cut/CMakeLists.txt" : {
      "ObjectId" : "6d0147328b02cd27786d93f4c97d0bd0ca422173",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/3d/tga_resize/CMakeLists.txt" : {
      "ObjectId" : "48642473ebc94d0aa1458b8a26da156303bced3a",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/3d/tile_edit/CMakeLists.txt" : {
      "ObjectId" : "bd29fea377afdcd8e9132d6d8a57b10eee49a7f7",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ENABLE_LANGUAGE(RC)\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "code/nel/tools/3d/tile_edit_qt/CMakeLists.txt" : {
      "ObjectId" : "0fd5e72a0c6bb14bf1260f4a2356d3fb5fa3762d",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/3d/zone_check_bind/CMakeLists.txt" : {
      "ObjectId" : "212f7e18bb81cb56734b9974603adc3d5ea41222",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/3d/zone_dependencies/CMakeLists.txt" : {
      "ObjectId" : "9efb49f0e9913b12d08a592ce166d34f5168211d",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/3d/zone_dump/CMakeLists.txt" : {
      "ObjectId" : "8bc10b81150864fc6ce45c3422afe53029861134",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/3d/zone_ig_lighter/CMakeLists.txt" : {
      "ObjectId" : "30f84cea8d1792f1d70880231683a0c5ac6a6d47",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/3d/zone_lighter/CMakeLists.txt" : {
      "ObjectId" : "e0c15f9e8a87a4533f673856d712b6c1d3c825d3",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/3d/zone_welder/CMakeLists.txt" : {
      "ObjectId" : "396d22f58f548956f8ed8cacd59ab5b8d4d39732",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/3d/zviewer/CMakeLists.txt" : {
      "ObjectId" : "c4222c9927250288c1eced7085b56da686c69bfc",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/CMakeLists.txt" : {
      "ObjectId" : "8734bf103010c02c4e9bc5b4c220ed0683ef87c3",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Don't add other subdirectories if only max plugins are selected.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Max plugins are under the 3d directory as well.\n\n# Allow to compile only max plugins without other tools.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Don't add other subdirectories if only max plugins are selected.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "code/nel/tools/georges/CMakeLists.txt" : {
      "ObjectId" : "6e288466dc4aa0caea1122fba3cf569842617b24",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/georges/georges2csv/CMakeLists.txt" : {
      "ObjectId" : "efb489f829c2dff8e29430c092b1d1bc042dcfd3",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/logic/CMakeLists.txt" : {
      "ObjectId" : "0f65ab8f6749a9f642ab2a6e8251c14b11d447f0",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/logic/logic_editor_dll/CMakeLists.txt" : {
      "ObjectId" : "8bf325694fb98eea3186d200e0758c3dfe80ccac",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/logic/logic_editor_exe/CMakeLists.txt" : {
      "ObjectId" : "455cb2d8f4ce00bea230750924d0796a050de9dd",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/memory/CMakeLists.txt" : {
      "ObjectId" : "458a4cc66849c12bb3ef67303875aaebb6cea74c",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/memory/memlog/CMakeLists.txt" : {
      "ObjectId" : "f479a1579dcd0cd8a546965b6a0b14c7f825b075",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/misc/CMakeLists.txt" : {
      "ObjectId" : "8f962d1f2a4ebe5c1e340e009061e62c4c557565",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# always compile crash report\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "code/nel/tools/misc/bnp_make/CMakeLists.txt" : {
      "ObjectId" : "d27252fb6121422b8c17e6a352e1274e57dab6ac",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/misc/branch_patcher/CMakeLists.txt" : {
      "ObjectId" : "010e7defd471ccd37ab6a94916b71bfb1d820a14",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#TARGET_LINK_LIBRARIES(branch_patcher ${PLATFORM_LINKFLAGS})\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "code/nel/tools/misc/crash_report/CMakeLists.txt" : {
      "ObjectId" : "1169aab8d18b1bd10d91b1470218e90a1e26b80b",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/misc/data_mirror/CMakeLists.txt" : {
      "ObjectId" : "9727576baec085668387782a0699c491a1b23922",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/misc/disp_sheet_id/CMakeLists.txt" : {
      "ObjectId" : "0ab03d7360b99737ff26b5cc2ddf96c90b156996",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/misc/exec_timeout/CMakeLists.txt" : {
      "ObjectId" : "18654e1698a2857aefbf8e4ade23094063c98ec3",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/misc/extract_filename/CMakeLists.txt" : {
      "ObjectId" : "7f20cc6d60fda09c62e4de6552bc0683c48beca7",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/misc/lock/CMakeLists.txt" : {
      "ObjectId" : "52afeee246f4c8ef46003ddc1fe3f7189894d3eb",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/misc/log_analyser/CMakeLists.txt" : {
      "ObjectId" : "e852de2bcb692b5760d787fa6978a733349ae17a",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/misc/log_analyser_plug_ins/CMakeLists.txt" : {
      "ObjectId" : "c77374211077a5da5252568163667176127e4327",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/misc/log_analyser_plug_ins/extract_warnings/CMakeLists.txt" : {
      "ObjectId" : "9fc5706230b94cc9e5e925f5c6c0243e01d769ff",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/misc/make_sheet_id/CMakeLists.txt" : {
      "ObjectId" : "553f7fddbd8fc8fc3021da1e82dc1dcebffcd688",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/misc/message_box/CMakeLists.txt" : {
      "ObjectId" : "764071d9dd9901724e797e6822ff337247154735",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#TARGET_LINK_LIBRARIES(message_box ${PLATFORM_LINKFLAGS})\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "code/nel/tools/misc/message_box_qt/CMakeLists.txt" : {
      "ObjectId" : "be4dd2b6330da8e7e4f4c66fc82844c35f14a022",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/misc/multi_cd_setup_fix/CMakeLists.txt" : {
      "ObjectId" : "3a5f7da4e18441283c034af1c5d2b19a87c655ae",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#TARGET_LINK_LIBRARIES(multi_cd_setup_fix ${PLATFORM_LINKFLAGS})\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "code/nel/tools/misc/probe_timers/CMakeLists.txt" : {
      "ObjectId" : "cb17490df7b440f446ac4b9a08132e4b3273b307",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/misc/words_dic/CMakeLists.txt" : {
      "ObjectId" : "a2d0293ad5d2ec701d83df478b510c8508b31d10",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/misc/words_dic_qt/CMakeLists.txt" : {
      "ObjectId" : "fc2ced95e9c159a8ec35b411a85ea81f1fdab49d",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/misc/xml_packer/CMakeLists.txt" : {
      "ObjectId" : "c9dcd4c6b41ecb63d0d6a01d6684c2c7415f5d42",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/nel_unit_test/CMakeLists.txt" : {
      "ObjectId" : "6abc06a490e082799ff04493f81db468777ca847",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/pacs/CMakeLists.txt" : {
      "ObjectId" : "c3a5a71f6568e51669ffe86e46d77105ff689d11",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/pacs/build_ig_boxes/CMakeLists.txt" : {
      "ObjectId" : "fb2feedbec0becb6df1527fe6a66caf4e9d0621b",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/pacs/build_indoor_rbank/CMakeLists.txt" : {
      "ObjectId" : "85f1984bf67c4ee79832a907ba46f66d3f2e3205",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/pacs/build_rbank/CMakeLists.txt" : {
      "ObjectId" : "65e86394d8faf52ef5c5d0ac1dacd45e6a20ae91",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/sound/CMakeLists.txt" : {
      "ObjectId" : "d81d5d081fd71dc5a9d6a87aa0b2c6c440f322c5",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Deprecated tool - no longer useful, valid or buildable.\n\n#ADD_SUBDIRECTORY(source_sounds_builder)\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "code/nel/tools/sound/build_samplebank/CMakeLists.txt" : {
      "ObjectId" : "b86e1e3e71cb1508f198471e0bd191e4664f4c7e",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/sound/build_sound/CMakeLists.txt" : {
      "ObjectId" : "5a5d81e8189e283327c86ebfb7880a79758dc125",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nel/tools/sound/build_soundbank/CMakeLists.txt" : {
      "ObjectId" : "310e6a2c50e03f972585f7221502e54a88d1e76a",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nelns/CMakeLists.txt" : {
      "ObjectId" : "d45111118517ed3971db715da8dd47d9f31b40c5",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nelns/admin_executor_service/CMakeLists.txt" : {
      "ObjectId" : "24a9efa2fe39941dcc20545486327c903e3222b0",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nelns/admin_service/CMakeLists.txt" : {
      "ObjectId" : "22dd846c90cc0488cfdba46bd4290b0331e849f5",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nelns/login_service/CMakeLists.txt" : {
      "ObjectId" : "31ba82143945dd691e42553f5fcb34b1aeacead5",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nelns/login_system/CMakeLists.txt" : {
      "ObjectId" : "ac79f857c75d4be37b6a9b4277203e7ce4bcb815",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nelns/login_system/nel_launcher_qt/CMakeLists.txt" : {
      "ObjectId" : "02cd438b76764bbc9f61d1c216ef8bfee354a7ea",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nelns/login_system/nel_launcher_windows_ext2/CMakeLists.txt" : {
      "ObjectId" : "b283624d1cbad0add1d6c6852d0687afaee538e0",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nelns/naming_service/CMakeLists.txt" : {
      "ObjectId" : "596bb5b48f2117791f36aa29f55c1704cf16253b",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/nelns/welcome_service/CMakeLists.txt" : {
      "ObjectId" : "3817b20765010c189f91087480f2b87459fafe84",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/CMakeLists.txt" : {
      "ObjectId" : "5ce8118729a24ffd559e1289664befe846d37229",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#Platform specifics\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Need servershare for build packed collision tool\n\n# Need aishare for build wmap tool\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "code/ryzom/client/CMakeLists.txt" : {
      "ObjectId" : "43897c905192a2b1286f52839b46ee1c1e78bc9b",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Need clientsheets lib for sheets packer tool\n\n# Need seven_zip for patch_gen and ryzom_installer\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#ADD_SUBDIRECTORY(data)\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "code/ryzom/client/data/CMakeLists.txt" : {
      "ObjectId" : "ffd3a32677674a645c0af08810e2840e4a360c2c",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Uncomment next lines if you want to create gamedev.bnp\n\n#ADD_CUSTOM_COMMAND(OUTPUT \"${CMAKE_BINARY_DIR}/share/gamedev.bnp\"\n\n#  COMMAND bnp_make -p ${CMAKE_CURRENT_SOURCE_DIR}/gamedev ${CMAKE_BINARY_DIR}/share > /dev/null)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#ADD_CUSTOM_TARGET(gamedev ALL DEPENDS \"${CMAKE_BINARY_DIR}/share/gamedev.bnp\")\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "code/ryzom/client/src/CMakeLists.txt" : {
      "ObjectId" : "26b208c67842ac363e2e4575da3128f96eb5a24d",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Need clientsheets lib for sheets packer tool\n",
        "Line" : 2,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Need seven_zip lib for patch_gen tool\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Patch should never be enabled on Steam\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Filter out the source files not actually compiled.\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# on Mac, create a .App Bundle\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# We could force another build version for the bundle\n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# remove any present installscript_osx.vdf before signing\n",
        "Line" : 92,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# copy crash_report to bundle\n",
        "Line" : 108,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# copy ryzom_client_patcher to bundle\n",
        "Line" : 119,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# copy ryzom_configuration_qt to bundle\n",
        "Line" : 130,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 10
    },
    "code/ryzom/client/src/client_sheets/CMakeLists.txt" : {
      "ObjectId" : "6dc7973a9096f4c67903f26cf45e5d18330ba601",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/client/src/seven_zip/CMakeLists.txt" : {
      "ObjectId" : "625544edb10554a15a41bca64322e3ae437ccc4d",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/client/unix/CMakeLists.txt" : {
      "ObjectId" : "3e8d1254079dd32a28512b42993b0f6951dc143b",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# in case of local client, only copy 48x48 icon\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "code/ryzom/common/CMakeLists.txt" : {
      "ObjectId" : "82e5030a7568a5c8f8b8d0a53d49bfba4c0993cf",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ADD_CUSTOM_COMMAND(OUTPUT \"${CMAKE_BINARY_DIR}/share/data_common.bnp\"\n\n#  COMMAND bnp_make -p ${CMAKE_CURRENT_SOURCE_DIR}/data_common ${CMAKE_BINARY_DIR}/share > /dev/null)\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#ADD_CUSTOM_TARGET(data_common ALL\n\n#  DEPENDS \"${CMAKE_BINARY_DIR}/share/data_common.bnp\")\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#INSTALL(TARGETS data_common ARCHIVE DESTINATION ${RYZOM_SHARE_PREFIX}/data)\n\n#INSTALL(FILES \"${CMAKE_BINARY_DIR}/share/data_common.bnp\" DESTINATION \"${RYZOM_SHARE_PREFIX}/data\")\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "code/ryzom/common/src/CMakeLists.txt" : {
      "ObjectId" : "3f2cee90452f53ee3b15f50847728db0c1fb21ea",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/common/src/game_share/CMakeLists.txt" : {
      "ObjectId" : "1a0b0da3f7a0e1f8e13700a4e21093844a9f5ff8",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Filter out the source files not actually compiled.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "code/ryzom/server/CMakeLists.txt" : {
      "ObjectId" : "4b7537b554d723abc731b10f483f955a82e47103",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/server/src/CMakeLists.txt" : {
      "ObjectId" : "fc91decc436fd2bafb9af9c47ecdcaacd8e06a85",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Supporting modules and libraries.\n\n# Need servershare for build packed collision tool\n\n# Need aishare for build wmap tool\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Supporting modules and libraries.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Ryzom Services\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Deprecated, no longer used.\n\n#ADD_SUBDIRECTORY(ags_test)\n\n#ADD_SUBDIRECTORY(ai_data_service)\n\n#ADD_SUBDIRECTORY(entity_view_service)\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Not sure, no longer used maybe?\n\n#sabrina\n\n#simulation_service\n\n#testing_tool_service\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "code/ryzom/server/src/admin_modules/CMakeLists.txt" : {
      "ObjectId" : "a47ec10374bea58c0e1d28a6d1e12e471bb76a5d",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/server/src/ai_data_service/CMakeLists.txt" : {
      "ObjectId" : "0292b2895a065ad1a17e51b62577fcc81cbe306d",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#LIST(REMOVE_ITEM SRC\t${CMAKE_CURRENT_SOURCE_DIR}/ai_entity_id.cpp))\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "code/ryzom/server/src/ai_service/CMakeLists.txt" : {
      "ObjectId" : "fb439820d2fe277a9eca1f330347b9fc9a9a7259",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/server/src/ai_share/CMakeLists.txt" : {
      "ObjectId" : "3444ed7a1b6fb2c17be3baebec5a1a256655effb",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/server/src/backup_service/CMakeLists.txt" : {
      "ObjectId" : "bb8669e5cdb025fedef1f750a28e5b915e210df7",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/server/src/dynamic_scenario_service/CMakeLists.txt" : {
      "ObjectId" : "190ff9adf9f575859a7efaa73a825fd150b78812",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/server/src/entities_game_service/CMakeLists.txt" : {
      "ObjectId" : "d601d34614bf39a0353fb2a5a37c250ddb80844c",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIXME: PCH too large (> 130MB), crashes cc1plus under MinGW\n",
        "Line" : 115,
        "CharPositionInLine" : 27
      },
      "CommentCount" : 1
    },
    "code/ryzom/server/src/entity_view_service/CMakeLists.txt" : {
      "ObjectId" : "0aa8e7e41c70c33ffbe6473b11c3b71fe03252e9",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#LIST(REMOVE_ITEM SRC ${CMAKE_CURRENT_SOURCE_DIR}/service.cpp ${CMAKE_CURRENT_SOURCE_DIR}/service.h)\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "code/ryzom/server/src/frontend_service/CMakeLists.txt" : {
      "ObjectId" : "2b1dc4bd849c9252c5ebf19d1cf3a1f38b581792",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/server/src/gameplay_module_lib/CMakeLists.txt" : {
      "ObjectId" : "7b185ba4f3ddcab6dece0741fc87c0d1b1fe4db5",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/server/src/general_utilities_service/CMakeLists.txt" : {
      "ObjectId" : "5a7dc047e9e8db39a3f4f99379f82a28844c755d",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/server/src/gpm_service/CMakeLists.txt" : {
      "ObjectId" : "0eeb851273abb32015119e2237ce1a1581c8c769",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/server/src/input_output_service/CMakeLists.txt" : {
      "ObjectId" : "c9e1d7a45083d25699c235d64edc47c7e04962af",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/server/src/log_analyser_service/CMakeLists.txt" : {
      "ObjectId" : "5b28a495345145b58f784fbfff0feabf859f68ee",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/server/src/logger_service/CMakeLists.txt" : {
      "ObjectId" : "36cc92a2df67e1d5ad81114010574c1c2fa20841",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/server/src/mail_forum_service/CMakeLists.txt" : {
      "ObjectId" : "da0f61f6f2c6e24cc5a8ab5525f8d08b2c73edd5",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/server/src/mirror_service/CMakeLists.txt" : {
      "ObjectId" : "f7555ac15c60fab7a6a13d1dc2f553e5bea6b220",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/server/src/monitor_service/CMakeLists.txt" : {
      "ObjectId" : "2fc7f57a54393219bf259b4f86cb9ccff2400cae",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/server/src/patchman_service/CMakeLists.txt" : {
      "ObjectId" : "a4a4f4c2a467337e540c168f6d8b07973785f0be",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/server/src/pd_lib/CMakeLists.txt" : {
      "ObjectId" : "aeb3851ae04b56ab6d5162a45ba5274a335e4bcb",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Filter out the source files not actually compiled.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "code/ryzom/server/src/pd_reference_builder/CMakeLists.txt" : {
      "ObjectId" : "5e71da6dcc1944c8dac4328b78514ceffc89ddeb",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/server/src/pd_support_service/CMakeLists.txt" : {
      "ObjectId" : "2c292a04c3af4d78a93db36444869578d3926e70",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/server/src/persistant_data_service/CMakeLists.txt" : {
      "ObjectId" : "e7b173e7dba217bdd1058806e99a8dcd4c124fba",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/server/src/ryzom_admin_service/CMakeLists.txt" : {
      "ObjectId" : "1bc0cc8e5814b298f8a449d4b0fa4fe962215b10",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/server/src/ryzom_naming_service/CMakeLists.txt" : {
      "ObjectId" : "bbcaf64cd0bc669b5f36f5b9398053833188ced1",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/server/src/ryzom_welcome_service/CMakeLists.txt" : {
      "ObjectId" : "8a4e0cf640492669dd4f36d13fa1ec36412418f9",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/server/src/server_share/CMakeLists.txt" : {
      "ObjectId" : "a1a2f398dcfa97125ddf0f3b8cc43241b9ae331c",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/server/src/session_browser_server/CMakeLists.txt" : {
      "ObjectId" : "069afff77870ccf7e940e37e6940e43201be282b",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/server/src/shard_unifier_service/CMakeLists.txt" : {
      "ObjectId" : "ee2a51c623183a8f8248bd3a085c00e404b7e57d",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/server/src/tick_service/CMakeLists.txt" : {
      "ObjectId" : "515e968fcefab71625ef3d5ef2f278c6d1fa7456",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/tools/CMakeLists.txt" : {
      "ObjectId" : "9061d1e0f2292b6e8c421db64e6ec536c7fa4055",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Old stuff that doesn't compile anymore.\n\n#ADD_SUBDIRECTORY(occ2huff)\n\n#ADD_SUBDIRECTORY(phrase_generator)\n\n#ADD_SUBDIRECTORY(sheet_random_generator)\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Not building these\n\n#xml_packer - this is in NeL tools.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Folders with nothing to build\n\n#data_tools\n\n#translation\n\n#test_files\n\n#build_data\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# folders not handled yet.\n\n#connection_stats\n\n#reynolds\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "code/ryzom/tools/assoc_mem/CMakeLists.txt" : {
      "ObjectId" : "9dacfd380ed097b9ffbf5d720fd3e0386350f716",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/tools/client/CMakeLists.txt" : {
      "ObjectId" : "66f8c9b4869fd25bcaccb6d90c2c87a75a4c89ba",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Don't need ryzom_client_patcher if using Steam\n",
        "Line" : 2,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "code/ryzom/tools/client/client_config_qt/CMakeLists.txt" : {
      "ObjectId" : "c81bfcbae33c32f9097f3060b4f8df93d096fc9d",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  uncomment this line if you want to update original translations\n\n#  QT5_CREATE_TRANSLATION(CLIENT_CONFIG_QM ${CLIENT_CONFIG_UIS} ${SRC} ${CLIENT_CONFIG_TRANS} OPTIONS -I ${CMAKE_CURRENT_SOURCE_DIR})\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "code/ryzom/tools/client/client_patcher/CMakeLists.txt" : {
      "ObjectId" : "ad2eeb629bec2c34b742bb2b8aec62bb425bd1c0",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# always enable custom patch server\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "code/ryzom/tools/client/r2_islands_textures/CMakeLists.txt" : {
      "ObjectId" : "76be43bc8e5c3461485c13d7413979e07ab44902",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/tools/client/ryzom_installer/CMakeLists.txt" : {
      "ObjectId" : "f3949055df0e97c0c3d3c54fce4f5b7d4b3e0f27",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  uncomment this line if you want to update original translations\n\n#  QT5_CREATE_TRANSLATION(CLIENT_INSTALL_Q ${CLIENT_INSTALL_UIS} ${SRC} ${CLIENT_INSTALL_TRANS} OPTIONS -I ${CMAKE_CURRENT_SOURCE_DIR})\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# on Mac, create a .app Bundle\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "code/ryzom/tools/leveldesign/CMakeLists.txt" : {
      "ObjectId" : "066dd2bb517882cc79bd65e0745bb251e8239923",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# folders not handled yet.\n\n#georges_convert\n\n#georges_dll\n\n#georges_exe\n\n#georges_plugin_sound\n\n#georges_plugin_test\n\n#icon_search\n\n#install\n\n#master\n\n#mission_simulator\n\n#\n\n#primitive_id_assignator\n\n#test_root\n\n#\n\n#variable_parser\n\n#\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "code/ryzom/tools/leveldesign/alias_synchronizer/CMakeLists.txt" : {
      "ObjectId" : "fccc25a39e24cdfa0fd995739ec4d1c15901eb5e",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/tools/leveldesign/csv_transform/CMakeLists.txt" : {
      "ObjectId" : "efb10b91ca134970b3ee2a94cd48a1bb0933d881",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/tools/leveldesign/export/CMakeLists.txt" : {
      "ObjectId" : "c98ca39f6dda9c9f3aecb5cda273b90a6f9712ab",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/tools/leveldesign/georges_dll/CMakeLists.txt" : {
      "ObjectId" : "731e9e1613a9760933a01b13f01a0fcbdf72f65e",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/tools/leveldesign/georges_editor_qt/CMakeLists.txt" : {
      "ObjectId" : "48a24ca8a45cccf58eaeb035b8d0c81bde374a85",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#   Georges Editor Qt\n\n#   Copyright (C) 2010 Adrian J�kel <aj at elane2k dot com>\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This tells the application(s) where to find the installed data.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO: under Mac OS X, don't install but copy files in application package\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "code/ryzom/tools/leveldesign/georges_editor_qt/geqt_config.h.cmake" : {
      "ObjectId" : "6f31bc7d08d2a6da7dff1021e35f579d6893194a",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKESOURCE",
      "CommentCount" : 0
    },
    "code/ryzom/tools/leveldesign/georges_editor_qt/src/CMakeLists.txt" : {
      "ObjectId" : "f7385ddfbcb3a6c9e7f1dd09d11763a2b65213b7",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/tools/leveldesign/georges_exe/CMakeLists.txt" : {
      "ObjectId" : "07ac799c9dbfb7eeb419ecca0ede49f43ad85f74",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/tools/leveldesign/georges_plugin_sound/CMakeLists.txt" : {
      "ObjectId" : "026548d56a8d477460dcc1320c86a7b7d92c3466",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/tools/leveldesign/icon_search/CMakeLists.txt" : {
      "ObjectId" : "c1d2a47e18721f48c6229da695b65d2dbfddec26",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/tools/leveldesign/mission_compiler_fe/CMakeLists.txt" : {
      "ObjectId" : "f9321152c4509743b0a618c1c1f37a334a0a5d25",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/tools/leveldesign/mission_compiler_lib/CMakeLists.txt" : {
      "ObjectId" : "6648047606b16a3ce7fab0452382075e199f4fd7",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/tools/leveldesign/mp_generator/CMakeLists.txt" : {
      "ObjectId" : "789a36bedeabce7e0bbe0e9277f644e4b526d6d4",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/tools/leveldesign/named_items_2_csv/CMakeLists.txt" : {
      "ObjectId" : "7143f22ae653a4ad8fbdbad2d846c54cd1fd121b",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/tools/leveldesign/prim_export/CMakeLists.txt" : {
      "ObjectId" : "8fbd3912ed3fb5b871273c91ae4cf03ec0bc5cd1",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/tools/leveldesign/uni_conv/CMakeLists.txt" : {
      "ObjectId" : "2d41461d200136f2cf6753c1dbe693273dacc9ad",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/tools/leveldesign/world_editor/CMakeLists.txt" : {
      "ObjectId" : "2220ea7162718a50c1a9f4e59fe75ae4f7df3687",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is an old plugin and is deprecated. It doesn't even compile anymore.\n\n#ADD_SUBDIRECTORY(world_editor_plugin)\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "code/ryzom/tools/leveldesign/world_editor/land_export/CMakeLists.txt" : {
      "ObjectId" : "e1f7fe88c6e77c6ac715aeb5725dc084a72fe946",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/tools/leveldesign/world_editor/land_export_lib/CMakeLists.txt" : {
      "ObjectId" : "9bda9b297217e4df66b386795dc561c933e91fc9",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/tools/leveldesign/world_editor/world_editor/CMakeLists.txt" : {
      "ObjectId" : "c7258d8698ba9d438d7610d54bad8dbe6e618e3b",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/tools/leveldesign/world_editor/world_editor_fauna_graph_plugin/CMakeLists.txt" : {
      "ObjectId" : "e9990a7ddfb38c73e12c6b8c6fc5bf92408d9527",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/tools/leveldesign/world_editor/world_editor_graph_plugin/CMakeLists.txt" : {
      "ObjectId" : "e6b5d4609805813f2e6daf0a0d57ee4a03405054",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/tools/leveldesign/world_editor/world_editor_plugin/CMakeLists.txt" : {
      "ObjectId" : "3ed564484d95ecb7ce26d03abe55578a10e96a79",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/tools/leveldesign/world_editor/world_editor_primitive_plugin/CMakeLists.txt" : {
      "ObjectId" : "eb559898b8aa7d419272472e74f7171f1b49d37e",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/tools/leveldesign/world_editor/world_editor_shard_monitor_plugin/CMakeLists.txt" : {
      "ObjectId" : "654012812436e4581b0c56a49e7bf1f6ac5bb247",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/tools/leveldesign/world_editor/world_editor_sound_plugin/CMakeLists.txt" : {
      "ObjectId" : "8d263efc1da3278226fc2a09d65875fb725e0c2c",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/tools/make_alias_file/CMakeLists.txt" : {
      "ObjectId" : "8bba1e8a05e2b1bcb22367cae93b2e7871546026",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/tools/make_anim_by_race/CMakeLists.txt" : {
      "ObjectId" : "497b6c05e55c9befa20e5f30ff6a7423d46d37ac",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/tools/make_anim_melee_impact/CMakeLists.txt" : {
      "ObjectId" : "7dd34fb7d1330e018c0a9322eaa9fd726b1fc716",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/tools/occ2huff/CMakeLists.txt" : {
      "ObjectId" : "42b15e63066cb1c602c97f707599e0983538dff1",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/tools/patch_gen/CMakeLists.txt" : {
      "ObjectId" : "6cde9810bf10dfdc554d1bd368e061f4ae02d1ef",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/tools/pd_parser/CMakeLists.txt" : {
      "ObjectId" : "3d43da48453ae16996d1309955966627c0752064",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/tools/pdr_util/CMakeLists.txt" : {
      "ObjectId" : "d5ac0850d88fc4c36f6f795d926f9cffa6999a67",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/tools/phrase_generator/CMakeLists.txt" : {
      "ObjectId" : "7595919c5235c89aee587328e5708ecd32a1523f",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/tools/server/CMakeLists.txt" : {
      "ObjectId" : "1e8a6edb9320d873a0f6c7e4fd41bfc426e12c97",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Not done yet.\n\n#admin\n\n#brick_param_extractor\n\n#build_spell_sheet\n\n#build_world_packed_col\n\n#CMakeLists.txt\n\n#sql\n\n#www\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "code/ryzom/tools/server/ai_build_wmap/CMakeLists.txt" : {
      "ObjectId" : "f6417611fc809dced3cc5ff9a12cf31c939f0f36",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/tools/server/build_world_packed_col/CMakeLists.txt" : {
      "ObjectId" : "672500092b2cdd96529a2ae8ada1f392774c8c8b",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/tools/sheet_random_generator/CMakeLists.txt" : {
      "ObjectId" : "e30e228469040e018e5ceac653051c3eccb8bd7c",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/tools/sheets_packer/CMakeLists.txt" : {
      "ObjectId" : "7e7d27c1d00d2e0e3affc9d4f0f57b62355d596d",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/tools/sheets_packer_shard/CMakeLists.txt" : {
      "ObjectId" : "554eafe3fd82d71781614b033d20ce60fd2c15b3",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/tools/skill_extractor/CMakeLists.txt" : {
      "ObjectId" : "b2905a5c2a9952395f7b94353d6f369a240dd50e",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/tools/stats_scan/CMakeLists.txt" : {
      "ObjectId" : "77204217fed97e1761119da7b76a253b9829a608",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/ryzom/tools/translation_tools/CMakeLists.txt" : {
      "ObjectId" : "1db05b3ec8e265d105d330df3b69861e526be3dc",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/snowballs2/CMakeLists.txt" : {
      "ObjectId" : "368754236ad661425484d7a7fa43cd7989f3eff1",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Note: Not sure if this is still the best way to do this...\n\n#INSTALL(CODE \"FILE(MAKE_DIRECTORY ${SNOWBALLS_LOG_FILE})\")\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#Platform specifics\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# An example of finding NeL 3D and CEGUI Renderer.\n\n###\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "code/snowballs2/client/CMakeLists.txt" : {
      "ObjectId" : "502b01c281ba6e3c875c4804265c6ca75a05f3b3",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/snowballs2/client/src/CMakeLists.txt" : {
      "ObjectId" : "8125eb3c2937e54e0efce52ea75ef3fc59e901a9",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If sound is enabled then add the definitions and link the libraries.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "code/snowballs2/server/CMakeLists.txt" : {
      "ObjectId" : "0faeccad021ba80bd83ae22a8b2cc3440a81d646",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/snowballs2/server/chat/CMakeLists.txt" : {
      "ObjectId" : "837bb742dd2ddf810b0b76d290d8311f764d9c43",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/snowballs2/server/chat/src/CMakeLists.txt" : {
      "ObjectId" : "dd04941b2904b96c029cf1d1560ee37f7e558f83",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/snowballs2/server/collision/CMakeLists.txt" : {
      "ObjectId" : "e49a978d652dfb114af0c01aa716f5ae9bff1681",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/snowballs2/server/collision/src/CMakeLists.txt" : {
      "ObjectId" : "47f4b13f65377e148a2944606be78b49056c0674",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/snowballs2/server/frontend/CMakeLists.txt" : {
      "ObjectId" : "2de0f9e4853e031b1457f61fcb979dd4ffd17b1b",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/snowballs2/server/frontend/src/CMakeLists.txt" : {
      "ObjectId" : "3c4894ab9219192a48d59be7d4bc41e0f91f2852",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/snowballs2/server/position/CMakeLists.txt" : {
      "ObjectId" : "8c9dbbdf2bc23a03e979b517781144fcc5b64411",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/snowballs2/server/position/src/CMakeLists.txt" : {
      "ObjectId" : "3c4b04529dc8d857deda7f3237e4896fcc6953b0",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/studio/CMakeLists.txt" : {
      "ObjectId" : "b4f1a903f42e1ba5a47252bb4a034335af7f9010",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#   Object Viewer Qt\n\n#   Copyright (C) 2010 Dzmitry Kamiahin <dnk-88@tut.by>\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This tells the application(s) where to find the installed data.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO: under Mac OS X, don't install but copy files in application package\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "code/studio/ovqt_config.h.cmake" : {
      "ObjectId" : "9d4907473da4f1e8bd75e879b27e54dfa3e378e9",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKESOURCE",
      "CommentCount" : 0
    },
    "code/studio/src/3rdparty/CMakeLists.txt" : {
      "ObjectId" : "2caaa1be78d8cda81c54ae251c2d7b3e9d21fddf",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/studio/src/3rdparty/qtpropertybrowser/CMakeLists.txt" : {
      "ObjectId" : "fa834dabfccdc77af4840e0e0dd812e3f86b3289",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Need to remove these so that they are not linked as they are inline included.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We need to add new depencencies on removed files because we need them to be still generated\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#set(\n\n#  qtpropertyeditor_HEADERS_ONLY_MOC\n\n#  ${CMAKE_CURRENT_BINARY_DIR}/moc_qtpropertybrowser.cpp\n\n#  ${CMAKE_CURRENT_BINARY_DIR}/moc_qtpropertymanager.cpp\n\n#  ${CMAKE_CURRENT_BINARY_DIR}/moc_qteditorfactory.cpp\n\n#  ${CMAKE_CURRENT_BINARY_DIR}/moc_qtvariantproperty.cpp\n\n#  ${CMAKE_CURRENT_BINARY_DIR}/moc_qttreepropertybrowser.cpp\n\n#  ${CMAKE_CURRENT_BINARY_DIR}/moc_qtbuttonpropertybrowser.cpp\n\n#  ${CMAKE_CURRENT_BINARY_DIR}/moc_qtgroupboxpropertybrowser.cpp\n\n#  ${CMAKE_CURRENT_BINARY_DIR}/qtpropertymanager.moc\n\n#  ${CMAKE_CURRENT_BINARY_DIR}/qteditorfactory.moc\n\n#  ${CMAKE_CURRENT_BINARY_DIR}/qttreepropertybrowser.moc\n\n#)\n\n#\n\n#set_source_files_properties(\n\n#  ${qtpropertyeditor_HEADERS_ONLY_MOC}\n\n#  PROPERTIES\n\n#    HEADER_FILE_ONLY true\n\n#)\n\n#\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#set(\n\n#  qtpropertyeditor_HEADERS_MOC\n\n#  ${CMAKE_CURRENT_BINARY_DIR}/moc_qtpropertybrowserutils_p.cpp\n\n#)\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#set(\n\n#  qtpropertyeditor_MOC\n\n#  ${qtpropertyeditor_HEADERS_MOC}\n\n#  ${qtpropertyeditor_HEADERS_ONLY_MOC}\n\n#)\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#ADD_DEFINITIONS(-DQT_NO_DEBUG)\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "code/studio/src/3rdparty/qtpropertybrowser/qtpropertybrowser.pri" : {
      "ObjectId" : "6a6050c75a122997d2b3e6ef770fb6f4ea5c01d7",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "code/studio/src/CMakeLists.txt" : {
      "ObjectId" : "6083805f8247fedfac04c27950bc2d7d861e22f8",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/studio/src/plugins/CMakeLists.txt" : {
      "ObjectId" : "9fba47c6e3c8adb12ac6790feda90ff2da7bcf5b",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Note: Temporarily disabled until development continues.\n\n#ADD_SUBDIRECTORY(zone_painter)\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Ryzom Specific Plugins\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "code/studio/src/plugins/bnp_manager/CMakeLists.txt" : {
      "ObjectId" : "883d10fd28368c1c662b731f2e4e51719623afb2",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/studio/src/plugins/core/CMakeLists.txt" : {
      "ObjectId" : "fefecf5aca421d50ba134bd3386f54a4f82bd3c7",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/studio/src/plugins/core/core_config.h.cmake" : {
      "ObjectId" : "1aab54c1275c56e7b64445b4b4509756c37a9381",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKESOURCE",
      "CommentCount" : 0
    },
    "code/studio/src/plugins/disp_sheet_id/CMakeLists.txt" : {
      "ObjectId" : "ffccb97b350587775d037ee0108c0fd8923fea6f",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/studio/src/plugins/example/CMakeLists.txt" : {
      "ObjectId" : "6b7e86962bd50c7a33fdd1ad2fd0194604d915e0",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/studio/src/plugins/georges_editor/CMakeLists.txt" : {
      "ObjectId" : "c254e94318884c032b5b10e601ff4f3cc6278e37",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/studio/src/plugins/gui_editor/CMakeLists.txt" : {
      "ObjectId" : "cdcd196127946234bd7bc9959df95531ba1b4c8e",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/studio/src/plugins/gui_editor/gui_editor_config.h.cmake" : {
      "ObjectId" : "0e36dcb79c46d87b73325ce388456ce36d738a30",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKESOURCE",
      "CommentCount" : 0
    },
    "code/studio/src/plugins/landscape_editor/CMakeLists.txt" : {
      "ObjectId" : "fe5a558307687955bfd053c864aa1ea993b76744",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/studio/src/plugins/log/CMakeLists.txt" : {
      "ObjectId" : "9b042a3f3da1f3d34d87ca4a22b9d6e740d8bf44",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/studio/src/plugins/mission_compiler/CMakeLists.txt" : {
      "ObjectId" : "a3748d559d9f657ef3c5516e5bb7fcc763cdc586",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Mission Compiler Library\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Game Share Library\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "code/studio/src/plugins/object_viewer/CMakeLists.txt" : {
      "ObjectId" : "baa4c1840277859db4cf3c675284556f72aced32",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/studio/src/plugins/ovqt_sheet_builder/CMakeLists.txt" : {
      "ObjectId" : "07e16b4fcf28a01af7fb6930d067fc26c4d8307f",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/studio/src/plugins/ovqt_sheet_builder/ovqt_sheet_builder.pro" : {
      "ObjectId" : "02926cb95601097b3fdda515e632afca5ca814c2",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Input\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "code/studio/src/plugins/tile_editor/CMakeLists.txt" : {
      "ObjectId" : "85d6ea737d570891599d6f29cfce6a16f2e2d180",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/studio/src/plugins/translation_manager/CMakeLists.txt" : {
      "ObjectId" : "62b60f9304ca55e09c40355b10b55de9fc0450bd",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/studio/src/plugins/world_editor/CMakeLists.txt" : {
      "ObjectId" : "8b4586a1f88ea60ed1f254b1ad602a81445ec78f",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/studio/src/plugins/zone_painter/CMakeLists.txt" : {
      "ObjectId" : "fef437ec0922965a2e76e8afaab8b369d1d23d85",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/tool/CMakeLists.txt" : {
      "ObjectId" : "5198e56c9450b428036f7d43c1dbd1c9440f1fd6",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "code/tool/bin2c/CMakeLists.txt" : {
      "ObjectId" : "adf2787d81df9ffec0aafc941549c51c0e992bea",
      "LastModified" : "2018-10-23T08:19:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 336,
    "CMAKESOURCE" : 5,
    "QMAKE" : 2
  },
  "ElapsedTime" : 13812
}