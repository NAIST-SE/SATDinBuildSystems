{
  "Repository" : "16264758",
  "Revision" : "HEAD",
  "ObjectId" : "cdbc67ee2c85f5c95eb4f52e2e0ba24514962dd8",
  "CommitTime" : "2019-01-07T22:43:40Z",
  "Files" : {
    "bullet/BulletCollision/CMakeLists.txt" : {
      "ObjectId" : "85c5fc8b647b8e27a58fdd2d4433210aadbfd86a",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#INSTALL of other files requires CMake 2.6\n",
        "Line" : 264,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Have to list out sub-directories manually:\n",
        "Line" : 283,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 2
    },
    "bullet/BulletDynamics/CMakeLists.txt" : {
      "ObjectId" : "f8a6f34baf9a41d8355aa3f0a35300b011c166e7",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\tDynamics/Bullet-C-API.cpp\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Have to list out sub-directories manually:\n",
        "Line" : 161,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 2
    },
    "bullet/BulletInverseDynamics/CMakeLists.txt" : {
      "ObjectId" : "3331c27eac0e2a5dbc2df3ac634ed1e4e0f2fb16",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#INSTALL of other files requires CMake 2.6\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Have to list out sub-directories manually:\n",
        "Line" : 61,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 2
    },
    "bullet/BulletSoftBody/CMakeLists.txt" : {
      "ObjectId" : "d43df1c67b3103f75831cb50ec2680ba1b363326",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#SUBDIRS( Solvers )\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "bullet/CMakeLists.txt" : {
      "ObjectId" : "bbeabafbb525b8968c9bb252d351374c4035a823",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#INSTALL of other files requires CMake 2.6\n",
        "Line" : 11,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Don't actually need to install any common files, the frameworks include everything\n",
        "Line" : 14,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 2
    },
    "def_lang/prj/qtcreator/def_lang.pro" : {
      "ObjectId" : "b3ab271dc43833529e87efaf5a71169777e99550",
      "LastModified" : "2018-03-18T20:27:39Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "def_lang/prj/qtcreator/generator.pro" : {
      "ObjectId" : "8615e45d160384bb620232ba356157b4ed9adc80",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "def_lang/prj/qtcreator/solution.pro" : {
      "ObjectId" : "2f9452b01d776a8ccae3511fb7d06ed94297dea5",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "eigen/CMakeLists.txt" : {
      "ObjectId" : "e037af3bcc7e8b4f41eed70eaeecddfd6d213a47",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# guard against in-source builds\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# guard against bad build-type strings\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#############################################################################\n\n# retrieve version infomation                                               #\n\n#############################################################################\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# automatically parse the version number\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# if the mercurial program is absent, this will leave the EIGEN_HG_CHANGESET string empty,\n\n# but won't stop CMake.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# if this is the default (aka development) branch, extract the mercurial changeset number from the hg tip output...\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#...and show it next to the version number\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#############################################################################\n\n# find how to link to the standard libraries                                #\n\n#############################################################################\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# We assume that other compilers are partly compatible with GNUCC\n",
        "Line" : 120,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fexceptions\")\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# clang outputs some warnings for unknwon flags that are not caught by check_cxx_compiler_flag\n\n# adding -Werror turns such warnings into errors\n",
        "Line" : 126,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "#ei_add_cxx_compiler_flag(\"-Weverything\")              # clang\n",
        "Line" : 136,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# -Wshadow is insanely too strict with gcc, hopefully it will become usable with gcc 6\n\n# if(NOT CMAKE_COMPILER_IS_GNUCXX OR (CMAKE_CXX_COMPILER_VERSION VERSION_GREATER \"5.0.0\"))\n",
        "Line" : 150,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# disable ICC's \"operands are evaluated in unspecified order\" remark\n\n# disbale ICC's \"warning #2304: non-explicit constructor with single argument may cause implicit type conversion\" produced by -Wnon-virtual-dtor\n",
        "Line" : 163,
        "CharPositionInLine" : 56
      },
      "14" : {
        "Text" : "# The -ansi flag must be added last, otherwise it is also used as a linker flag by check_cxx_compiler_flag making it fails\n\n# Moreover we should not set both -strict-ansi and -ansi\n",
        "Line" : 167,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# disable clang warning: argument unused during compilation: '-ansi'\n",
        "Line" : 170,
        "CharPositionInLine" : 56
      },
      "16" : {
        "Text" : "# C4127 - conditional expression is constant\n\n# C4714 - marked as __forceinline not inlined (I failed to deactivate it selectively)\n\n#         We can disable this warning in the unit tests since it is clear that it occurs\n\n#         because we are oftentimes returning objects that have a destructor or may\n\n#         throw exceptions - in particular in the unit tests we are throwing extra many\n\n#         exceptions to cover indexing errors.\n\n# C4505 - unreferenced local function has been removed (impossible to deactive selectively)\n",
        "Line" : 269,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# replace all /Wx by /W4\n",
        "Line" : 278,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# arch is not supported on 64 bit systems, SSE is enabled automatically.\n",
        "Line" : 293,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "# the user modifiable install path for header files\n",
        "Line" : 344,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# set the internal install path for header files which depends on wether the user modifiable\n\n# EIGEN_INCLUDE_INSTALL_DIR has been set by the user or not.\n",
        "Line" : 347,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# similar to set_target_properties but append the property instead of overwriting it\n",
        "Line" : 363,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# if the property wasn't previously set, ${previous} is now \"previous-NOTFOUND\" which cmake allows catching with plain if()\n",
        "Line" : 367,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# fixme, not sure this line is still needed:\n",
        "Line" : 404,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# must be called from the root CMakeLists, see man page\n",
        "Line" : 405,
        "CharPositionInLine" : 17
      },
      "25" : {
        "Text" : "# can't do EXCLUDE_FROM_ALL here, breaks CTest\n",
        "Line" : 409,
        "CharPositionInLine" : 25
      },
      "26" : {
        "Text" : "# must be after test and unsupported, for configuring buildtests.in\n",
        "Line" : 426,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# TODO: consider also replacing EIGEN_BUILD_BTL by a custom target \"make btl\"?\n",
        "Line" : 429,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Add uninstall target\n",
        "Line" : 504,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 29
    },
    "eigen/CTestConfig.cmake" : {
      "ObjectId" : "4c0027824f7bd13e067dad73b75f89869c814abb",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## This file should be placed in the root directory of your project.\n\n## Then modify the CMakeLists.txt file in the root directory of your\n\n## project to incorporate the testing dashboard.\n\n## # The following are required to uses Dart and the Cdash dashboard\n\n##   ENABLE_TESTING()\n\n##   INCLUDE(CTest)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "eigen/Eigen/CMakeLists.txt" : {
      "ObjectId" : "a92dd6f6cafd2206f8be1a50f1294e2ae49feb5a",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/Eigen/src/CMakeLists.txt" : {
      "ObjectId" : "c326f374d9ee89c953dd9caefbfaffccb905511c",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/Eigen/src/Cholesky/CMakeLists.txt" : {
      "ObjectId" : "d01488b41a826850277a918f555e3668167dd367",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/Eigen/src/CholmodSupport/CMakeLists.txt" : {
      "ObjectId" : "814dfa61313847c0f33538e11c4ac4557ec3e32e",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/Eigen/src/Core/CMakeLists.txt" : {
      "ObjectId" : "38c3afde921b091581abae4179efd2c79fce0d58",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/Eigen/src/Core/arch/AVX/CMakeLists.txt" : {
      "ObjectId" : "bdb71ab990e5aafbed16091d434e860a36549698",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/Eigen/src/Core/arch/AltiVec/CMakeLists.txt" : {
      "ObjectId" : "9f8d2e9c46765f4253d6877d040e5c2a90612086",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/Eigen/src/Core/arch/CMakeLists.txt" : {
      "ObjectId" : "42b0b486e12cd43c4630831b87b0d1efad45c21b",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/Eigen/src/Core/arch/CUDA/CMakeLists.txt" : {
      "ObjectId" : "7ba28da7c260ec6a1f6c206e90ef82e1e258ff12",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/Eigen/src/Core/arch/Default/CMakeLists.txt" : {
      "ObjectId" : "339c091d156100d46f3acbc67ad205749d8f4b3d",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/Eigen/src/Core/arch/NEON/CMakeLists.txt" : {
      "ObjectId" : "fd4d4af50cb46dac7e6b29ef8654e70528e1f3ca",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/Eigen/src/Core/arch/SSE/CMakeLists.txt" : {
      "ObjectId" : "46ea7cc623c62394c78425b15e100b84126b40a7",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/Eigen/src/Core/functors/CMakeLists.txt" : {
      "ObjectId" : "f4b99a9c3d77aff86e65fe2df441e4f06ae9f468",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/Eigen/src/Core/products/CMakeLists.txt" : {
      "ObjectId" : "21fc94ae38a5574289ae4e304ce087f3ed6897f0",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/Eigen/src/Core/util/CMakeLists.txt" : {
      "ObjectId" : "a1e2e521fc11124c92768621c4edf784bc10f51f",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/Eigen/src/Eigenvalues/CMakeLists.txt" : {
      "ObjectId" : "193e0268599516e2515318ed04eb6dda37b2dd59",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/Eigen/src/Geometry/CMakeLists.txt" : {
      "ObjectId" : "f8f728b84faf0e08d91fac04e2986260368b9063",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/Eigen/src/Geometry/arch/CMakeLists.txt" : {
      "ObjectId" : "1267a79c78767c43d11c529cc84468cbdd1052a2",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/Eigen/src/Householder/CMakeLists.txt" : {
      "ObjectId" : "ce4937db061bbadb0357ccc45547b141761a70e3",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/Eigen/src/IterativeLinearSolvers/CMakeLists.txt" : {
      "ObjectId" : "59ccc0072cc4ed78e6aa783bfab2486aac757fca",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/Eigen/src/Jacobi/CMakeLists.txt" : {
      "ObjectId" : "490dac626439ade5e05baaba504689366db22e6d",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/Eigen/src/LU/CMakeLists.txt" : {
      "ObjectId" : "e0d8d78c1720abb27432f41aa2ace29ef3f3794f",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/Eigen/src/LU/arch/CMakeLists.txt" : {
      "ObjectId" : "f6b7ed9ecc3a25e3885c7fece60428481e51c696",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/Eigen/src/MetisSupport/CMakeLists.txt" : {
      "ObjectId" : "2bad314163c5044265aa6ac14e3767308dd04ba6",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/Eigen/src/OrderingMethods/CMakeLists.txt" : {
      "ObjectId" : "9f4bb275808257ac71d6c04d9c602ce5c0b5be8d",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/Eigen/src/PaStiXSupport/CMakeLists.txt" : {
      "ObjectId" : "28c657e9bcf7d3e0ecc800f6d5a11d54020b58cc",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/Eigen/src/PardisoSupport/CMakeLists.txt" : {
      "ObjectId" : "a097ab401920ea1b7068f790edcfcf9086b3038b",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/Eigen/src/QR/CMakeLists.txt" : {
      "ObjectId" : "96f43d7f5b30fa024b9bd2d9e3a5dacb9d401ecb",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/Eigen/src/SPQRSupport/CMakeLists.txt" : {
      "ObjectId" : "4968beaf2c59bcec07fe1861b5d72cb4d6723a6d",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/Eigen/src/SVD/CMakeLists.txt" : {
      "ObjectId" : "55efc44b12970d5ec715393cb68cd061203ce941",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/Eigen/src/SparseCholesky/CMakeLists.txt" : {
      "ObjectId" : "375a59d7a577877313a1ff2a6bf1c8fac138768b",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/Eigen/src/SparseCore/CMakeLists.txt" : {
      "ObjectId" : "d860452a65cb20850a12a120ab1fd3e3fd83dccc",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/Eigen/src/SparseLU/CMakeLists.txt" : {
      "ObjectId" : "69729ee8961aa7d4ef514e9f890de0d29f12161f",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/Eigen/src/SparseQR/CMakeLists.txt" : {
      "ObjectId" : "f9ddf2bdb75878292267c18697d9dedbd69a6611",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/Eigen/src/StlSupport/CMakeLists.txt" : {
      "ObjectId" : "0f094f637acd51b0931e58a199c30f550beaa282",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/Eigen/src/SuperLUSupport/CMakeLists.txt" : {
      "ObjectId" : "b28ebe5839cf5c664abdb44c186547507ce688d3",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/Eigen/src/UmfPackSupport/CMakeLists.txt" : {
      "ObjectId" : "a57de00209d3bc746b050d1b8aa736bccc66f2bc",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/Eigen/src/misc/CMakeLists.txt" : {
      "ObjectId" : "a58ffb7457e06a7a69426a21a9d46d07a6a8ee91",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/Eigen/src/plugins/CMakeLists.txt" : {
      "ObjectId" : "1a1d3ffbd724d17e161c40c48ac56c8b1aeb2e1f",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/bench/btl/CMakeLists.txt" : {
      "ObjectId" : "9444b450c63f09c4967d1a735ad0ed92c48d43e7",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#   SET(CMAKE_Fortran_FLAGS \"-g0 -O3 -DNDEBUG\")\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# find_package(MKL)\n\n# if (MKL_FOUND)\n\n#   add_definitions(-DHAVE_MKL)\n\n#   set(DEFAULT_LIBRARIES ${MKL_LIBRARIES})\n\n# endif (MKL_FOUND)\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# if we cannot find it easily, then we don't need it!\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "eigen/bench/btl/cmake/FindACML.cmake" : {
      "ObjectId" : "4989fa2f4c60a2c4afe2242b32c02f1c4e9dd705",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/bench/btl/cmake/FindATLAS.cmake" : {
      "ObjectId" : "4136a989d61565965f03cd1704f9284a83e8c8b0",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# search the default lapack lib link to it\n",
        "Line" : 19,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#   if(ATLAS_REFERENCE_LAPACK)\n\n#     set(ATLAS_LIBRARIES ${ATLAS_LIBRARIES} ${ATLAS_REFERENCE_LAPACK})\n\n#   endif()\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "eigen/bench/btl/cmake/FindBLAZE.cmake" : {
      "ObjectId" : "dba4c89f2de55e394a148388cf594babc8cbf11f",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find eigen2 headers\n\n# Once done this will define\n\n#\n\n#  BLAZE_FOUND - system has blaze lib\n\n#  BLAZE_INCLUDE_DIR - the blaze include directory\n\n#\n\n# Copyright (C) 2008 Gael Guennebaud <gael.guennebaud@inria.fr>\n\n# Adapted from FindEigen.cmake:\n\n# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "eigen/bench/btl/cmake/FindBlitz.cmake" : {
      "ObjectId" : "92880bbed7cc687dee65ba2419e236e383c26479",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find blitz lib\n\n# Once done this will define\n\n#\n\n#  BLITZ_FOUND - system has blitz lib\n\n#  BLITZ_INCLUDES - the blitz include directory\n\n#  BLITZ_LIBRARIES - The libraries needed to use blitz\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2007, Allen Winter, <winter@kde.org>\n\n# Copyright (C) 2008 Gael Guennebaud <gael.guennebaud@inria.fr>\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# include(FindLibraryWithDebug)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "eigen/bench/btl/cmake/FindCBLAS.cmake" : {
      "ObjectId" : "ce0f2f2b2d2d09973e45e8169a39d9f3cb738a50",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# include(FindLibraryWithDebug)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "eigen/bench/btl/cmake/FindGMM.cmake" : {
      "ObjectId" : "5049c64edcea43027c7875c9efa328a849cdb53f",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# in cache already\n",
        "Line" : 2,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "eigen/bench/btl/cmake/FindMKL.cmake" : {
      "ObjectId" : "f4d7c6ebe7dd629d20b7579ee6efa4dad989edcf",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/bench/btl/cmake/FindMTL4.cmake" : {
      "ObjectId" : "3de4909802be09039c847931d323a81b8998fa50",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find eigen2 headers\n\n# Once done this will define\n\n#\n\n#  MTL4_FOUND - system has eigen2 lib\n\n#  MTL4_INCLUDE_DIR - the eigen2 include directory\n\n#\n\n# Copyright (C) 2008 Gael Guennebaud <gael.guennebaud@inria.fr>\n\n# Adapted from FindEigen.cmake:\n\n# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "eigen/bench/btl/cmake/FindOPENBLAS.cmake" : {
      "ObjectId" : "2a091943645d64c86dcae8b01211dbec129167da",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/bench/btl/cmake/FindPackageHandleStandardArgs.cmake" : {
      "ObjectId" : "7f122edcddd304b99fc1fd67ab1ca023a46edcb2",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIND_PACKAGE_HANDLE_STANDARD_ARGS(NAME (DEFAULT_MSG|\"Custom failure message\") VAR1 ... )\n\n#\n\n# This macro is intended to be used in FindXXX.cmake modules files.\n\n# It handles the REQUIRED and QUIET argument to FIND_PACKAGE() and\n\n# it also sets the <UPPERCASED_NAME>_FOUND variable.\n\n# The package is found if all variables listed are TRUE.\n\n# Example:\n\n#\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(LibXml2 DEFAULT_MSG LIBXML2_LIBRARIES LIBXML2_INCLUDE_DIR)\n\n#\n\n# LibXml2 is considered to be found, if both LIBXML2_LIBRARIES and \n\n# LIBXML2_INCLUDE_DIR are valid. Then also LIBXML2_FOUND is set to TRUE.\n\n# If it is not found and REQUIRED was used, it fails with FATAL_ERROR, \n\n# independent whether QUIET was used or not.\n\n#\n\n# If it is found, the location is reported using the VAR1 argument, so \n\n# here a message \"Found LibXml2: /usr/lib/libxml2.so\" will be printed out.\n\n# If the second argument is DEFAULT_MSG, the message in the failure case will \n\n# be \"Could NOT find LibXml2\", if you don't like this message you can specify\n\n# your own custom failure message there.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "eigen/bench/btl/cmake/FindTvmet.cmake" : {
      "ObjectId" : "26a29d965d125b34b1fff2c6bbfc2b5bf52e42df",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find tvmet headers\n\n# Once done this will define\n\n#\n\n#  TVMET_FOUND - system has tvmet lib\n\n#  TVMET_INCLUDE_DIR - the tvmet include directory\n\n#\n\n# Copyright (C) 2008 Gael Guennebaud <gael.guennebaud@inria.fr>\n\n# Adapted from FindEigen.cmake:\n\n# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "eigen/bench/btl/cmake/MacroOptionalAddSubdirectory.cmake" : {
      "ObjectId" : "545048b684371ec6b8bdab3aaee2415b15b321a0",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - MACRO_OPTIONAL_ADD_SUBDIRECTORY() combines ADD_SUBDIRECTORY() with an OPTION()\n\n# MACRO_OPTIONAL_ADD_SUBDIRECTORY( <dir> )\n\n# If you use MACRO_OPTIONAL_ADD_SUBDIRECTORY() instead of ADD_SUBDIRECTORY(),\n\n# this will have two effects\n\n# 1 - CMake will not complain if the directory doesn't exist\n\n#     This makes sense if you want to distribute just one of the subdirs\n\n#     in a source package, e.g. just one of the subdirs in kdeextragear.\n\n# 2 - If the directory exists, it will offer an option to skip the \n\n#     subdirectory.\n\n#     This is useful if you want to compile only a subset of all\n\n#     directories.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2007, Alexander Neundorf, <neundorf@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "eigen/bench/btl/data/CMakeLists.txt" : {
      "ObjectId" : "6af2a366f77ac4923d84584f1e7e4d7a834123bc",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/bench/btl/libs/BLAS/CMakeLists.txt" : {
      "ObjectId" : "0272ccad07a4a0eab515a79178b46fac1fcd83fe",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# we are inside Eigen and blas/lapack interface is compilable\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "eigen/bench/btl/libs/STL/CMakeLists.txt" : {
      "ObjectId" : "4cfc2dcf298fbd1baba1fb0202f3b9d48bae2bd1",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/bench/btl/libs/blaze/CMakeLists.txt" : {
      "ObjectId" : "f8b1b2ec3314a5b6f15e163be43868d3bd97111b",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/bench/btl/libs/blitz/CMakeLists.txt" : {
      "ObjectId" : "880ab7338564d89aaa919e7af064faf06b27e44e",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/bench/btl/libs/eigen2/CMakeLists.txt" : {
      "ObjectId" : "a2e8fc6da0948e1207d634ee9aca120aa8fc1352",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# EIGEN2_FOUND\n",
        "Line" : 19,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 1
    },
    "eigen/bench/btl/libs/eigen3/CMakeLists.txt" : {
      "ObjectId" : "00cae23d3a74f3cfe14b2ecf8335145aa185a419",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# unless EIGEN3_INCLUDE_DIR is defined, let's use current Eigen version\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#     if(BUILD_btl_eigen3_adv)\n\n#       target_link_libraries(btl_eigen3_adv ${MKL_LIBRARIES})\n\n#     endif(BUILD_btl_eigen3_adv)\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "eigen/bench/btl/libs/gmm/CMakeLists.txt" : {
      "ObjectId" : "bc2586243092771e0b1f9919c6a093f522b8d685",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/bench/btl/libs/mtl4/CMakeLists.txt" : {
      "ObjectId" : "14b47a808c990500baadcef95268a8636b2e3bd1",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/bench/btl/libs/tensors/CMakeLists.txt" : {
      "ObjectId" : "09d6d8e43ee4de933fd273105b56f42c7f75a701",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# unless TENSOR_INCLUDE_DIR is defined, let's use current Eigen version\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "eigen/bench/btl/libs/tvmet/CMakeLists.txt" : {
      "ObjectId" : "25b565b972360f99d49dc7560bd7989ba1f24682",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/bench/btl/libs/ublas/CMakeLists.txt" : {
      "ObjectId" : "bdb58bea1ba0c7aedec5b82f1c6b8f2c2c443c89",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/bench/spbench/CMakeLists.txt" : {
      "ObjectId" : "6e0e1b1039a5980bd13d829ae11491cb6a1520d0",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find_library(PARDISO_LIBRARIES pardiso412-GNU450-X86-64)\n\n# if(PARDISO_LIBRARIES)\n\n#   add_definitions(\"-DEIGEN_PARDISO_SUPPORT\")\n\n#   set(SPARSE_LIBS ${SPARSE_LIBS} ${PARDISO_LIBRARIES})\n\n# endif(PARDISO_LIBRARIES)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "eigen/blas/CMakeLists.txt" : {
      "ObjectId" : "d0efb41885cad383a6638b97893bcd62234abed3",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# can't do EXCLUDE_FROM_ALL here, breaks CTest\n",
        "Line" : 49,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 1
    },
    "eigen/blas/testing/CMakeLists.txt" : {
      "ObjectId" : "3ab8026ea3e4dd051697be9303e3ad5a5576d72a",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add_custom_target(level1)\n\n# add_dependencies(level1 sblat1)\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "eigen/cmake/EigenConfigureTesting.cmake" : {
      "ObjectId" : "0ee484e8c4635ca49e522b07eeffa3f4bbc247a5",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# configure the \"site\" and \"buildname\" \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# retrieve and store the build string\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# check whether /bin/bash exists\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This call activates testing and generates the DartConfiguration.tcl\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Overwrite default DartConfiguration.tcl such that ctest can build our unit tests.\n\n# Recall that our unit tests are not in the \"all\" target, so we have to explicitely ask ctest to build our custom 'buildtests' target.\n\n# At this stage, we can also add custom flags to the build tool through the user defined EIGEN_TEST_BUILD_FLAGS variable.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# try to grab the default flags\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# some documentation of this function would be nice\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# configure Eigen related testing options\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "eigen/cmake/EigenDetermineOSVersion.cmake" : {
      "ObjectId" : "3c48d4c3740b549da322258024368b9fee1466f1",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The utility function DetermineOSVersion aims at providing an\n\n# improved version of the CMake variable ${CMAKE_SYSTEM} on Windows\n\n# machines.\n\n#\n\n# Usage:\n\n#  include(EigenDetermineOSVersion)\n\n#  DetermineOSVersion(OS_VERSION)\n\n#  message(\"OS: ${OS_VERSION}\")\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - A little helper variable which should not be directly called\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "eigen/cmake/EigenDetermineVSServicePack.cmake" : {
      "ObjectId" : "fed78194d2faea19f50f2dabc0157f419d6e45d3",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The code is almost identical to the CMake version. The only difference is that we remove\n\n# _DetermineVSServicePack_FastCheckVersionWithCompiler which lead to errors on some systems.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Call helper function to determine VS version\n",
        "Line" : 16,
        "CharPositionInLine" : 16
      },
      "2" : {
        "Text" : "# temporary fix, until CMake catches up\n",
        "Line" : 19,
        "CharPositionInLine" : 16
      },
      "CommentCount" : 3
    },
    "eigen/cmake/EigenTesting.cmake" : {
      "ObjectId" : "5022397a74833a8389ff349312a103a5750341ca",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#internal. See documentation of ei_add_test for details.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# let the user pass flags.\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# it could be that some cmake module provides a bad library string \" \"  (just spaces),\n\n# and that severely breaks target_link_libraries (\"can't link to -l-lstdc++\" errors).\n\n# so we check for strings containing only spaces.\n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# notice: no double quotes around ${libs_to_link} here. It may be a list.\n",
        "Line" : 77,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# Specify target and test labels accoirding to EIGEN_CURRENT_SUBPROJECT\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Macro to add a test\n\n#\n\n# the unique mandatory parameter testname must correspond to a file\n\n# <testname>.cpp which follows this pattern:\n\n#\n\n# #include \"main.h\"\n\n# void test_<testname>() { ... }\n\n#\n\n# Depending on the contents of that file, this macro can have 2 behaviors,\n\n# see below.\n\n#\n\n# The optional 2nd parameter is libraries to link to.\n\n#\n\n# A. Default behavior\n\n#\n\n# this macro adds an executable <testname> as well as a ctest test\n\n# named <testname> too.\n\n#\n\n# On platforms with bash simply run:\n\n#   \"ctest -V\" or \"ctest -V -R <testname>\"\n\n# On other platform use ctest as usual\n\n#\n\n# B. Multi-part behavior\n\n#\n\n# If the source file matches the regexp\n\n#    CALL_SUBTEST_[0-9]+|EIGEN_TEST_PART_[0-9]+\n\n# then it is interpreted as a multi-part test. The behavior then depends on the\n\n# CMake option EIGEN_SPLIT_LARGE_TESTS, which is ON by default.\n\n#\n\n# If EIGEN_SPLIT_LARGE_TESTS is OFF, the behavior is the same as in A (the multi-part\n\n# aspect is ignored).\n\n#\n\n# If EIGEN_SPLIT_LARGE_TESTS is ON, the test is split into multiple executables\n\n#   test_<testname>_<N>\n\n# where N runs from 1 to the greatest occurence found in the source file. Each of these\n\n# executables is built passing -DEIGEN_TEST_PART_N. This allows to split large tests\n\n# into smaller executables.\n\n#\n\n# Moreover, targets <testname> are still generated, they\n\n# have the effect of building all the parts of the test.\n\n#\n\n# Again, ctest -R allows to run all matching tests.\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# adds a failtest, i.e. a test that succeed if the program fails to compile\n\n# note that the test runner for these is CMake itself, when passed -DEIGEN_FAILTEST=ON\n\n# so here we're just running CMake commands immediately, we're not adding any targets.\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# print a summary of the different options\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# vectorization / alignment options\n",
        "Line" : 309,
        "CharPositionInLine" : 10
      },
      "9" : {
        "Text" : "# uncomment anytime you change the ei_get_compilerver_from_cxx_version_string macro\n\n# ei_test_get_compilerver_from_cxx_version_string()\n",
        "Line" : 334,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# if the sitename is not yet set, try to set it\n",
        "Line" : 339,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# in case it is already set, enforce lower case\n",
        "Line" : 349,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# on windows system, we use a modified CMake script  \n",
        "Line" : 357,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# on all other system we rely on ${CMAKE_CXX_COMPILER}\n\n# supporting a \"--version\" or \"/version\" flag\n",
        "Line" : 367,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Extract compiler name and version from a raw version string\n\n# WARNING: if you edit thid macro, then please test it by  uncommenting\n\n# the testing macro call in ei_init_testing() of the EigenTesting.cmake file.\n\n# See also the ei_test_get_compilerver_from_cxx_version_string macro at the end of the file\n",
        "Line" : 386,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# extract possible compiler names  \n",
        "Line" : 391,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# combine them\n",
        "Line" : 398,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# extract possible version numbers\n\n# first try to extract 3 isolated numbers:\n",
        "Line" : 411,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# try to extract 2 isolated ones:\n",
        "Line" : 415,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# try to extract 3:\n",
        "Line" : 418,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "# try to extract 2:\n",
        "Line" : 421,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "# helper macro for testing ei_get_compilerver_from_cxx_version_string\n\n# STR: raw version string\n\n# REFNAME: expected compiler name\n\n# REFVER: expected compiler version\n",
        "Line" : 519,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# macro for testing ei_get_compilerver_from_cxx_version_string\n\n# feel free to add more version strings\n",
        "Line" : 531,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "eigen/cmake/EigenUninstall.cmake" : {
      "ObjectId" : "4dae8c85c8701e8cf676acc88c65065577d7e353",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################ CMake Uninstall Template #######################\n\n# CMake Template file for uninstallation of files\n\n# mentioned in 'install_manifest.txt'\n\n#\n\n# Used by uinstall target\n\n#################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "eigen/cmake/FindAdolc.cmake" : {
      "ObjectId" : "1a7ff3628a1aa6bd0a033b75edf23bbdc587d899",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/cmake/FindBLAS.cmake" : {
      "ObjectId" : "68c4e072417b9bc434895d1feb6e89e3bc7e5548",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find BLAS library\n\n#\n\n# This module finds an installed library that implements the BLAS\n\n# linear-algebra interface (see http://www.netlib.org/blas/).\n\n# The list of libraries searched for is mainly taken\n\n# from the autoconf macro file, acx_blas.m4 (distributed at\n\n# http://ac-archive.sourceforge.net/ac-archive/acx_blas.html).\n\n#\n\n# This module sets the following variables:\n\n#  BLAS_FOUND - set to true if a library implementing the BLAS interface\n\n#    is found\n\n#  BLAS_INCLUDE_DIR - Directories containing the BLAS header files\n\n#  BLAS_DEFINITIONS - Compilation options to use BLAS\n\n#  BLAS_LINKER_FLAGS - Linker flags to use BLAS (excluding -l\n\n#    and -L).\n\n#  BLAS_LIBRARIES_DIR - Directories containing the BLAS libraries.\n\n#     May be null if BLAS_LIBRARIES contains libraries name using full path.\n\n#  BLAS_LIBRARIES - List of libraries to link against BLAS interface.\n\n#     May be null if the compiler supports auto-link (e.g. VC++).\n\n#  BLAS_USE_FILE - The name of the cmake module to include to compile\n\n#     applications or libraries using BLAS.\n\n#\n\n# This module was modified by CGAL team:\n\n# - find libraries for a C++ compiler, instead of Fortran\n\n# - added BLAS_INCLUDE_DIR, BLAS_DEFINITIONS and BLAS_LIBRARIES_DIR\n\n# - removed BLAS95_LIBRARIES\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This macro checks for the existence of the combination of fortran libraries\n\n# given by _list.  If the combination is found, this macro checks (using the\n\n# check_function_exists macro) whether can link against that library\n\n# combination using the name of a routine given by _name using the linker\n\n# flags given by _flags.  If the combination of libraries is found and passes\n\n# the link test, LIBRARIES is set to the list of complete library paths that\n\n# have been found and DEFINITIONS to the required definitions.\n\n# Otherwise, LIBRARIES is set to FALSE.\n\n# N.B. _prefix is the prefix applied to the names of all cached variables that\n\n# are generated internally and marked advanced by this macro.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#message(\"DEBUG: check_fortran_libraries(${_list} in ${_path})\")\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Check for the existence of the libraries given by _list\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# search first in ${_path}\n",
        "Line" : 54,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# if not found, search in environment variables and system\n",
        "Line" : 59,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# Test this combination of libraries with the Fortran/f2c interface.\n\n# We test the Fortran interface first as it is well standardized.\n",
        "Line" : 85,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Some C++ linkers require the f2c library to link with Fortran libraries.\n\n# I do not know which ones, thus I just add the f2c library if it is available.\n",
        "Line" : 90,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#message(\"DEBUG: CMAKE_REQUIRED_DEFINITIONS = ${CMAKE_REQUIRED_DEFINITIONS}\")\n\n#message(\"DEBUG: CMAKE_REQUIRED_LIBRARIES = ${CMAKE_REQUIRED_LIBRARIES}\")\n\n# Check if function exists with f2c calling convention (ie a trailing underscore)\n",
        "Line" : 99,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# If not found, test this combination of libraries with a C interface.\n\n# A few implementations (ie ACML) provide a C interface. Unfortunately, there is no standard.\n",
        "Line" : 109,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#message(\"DEBUG: CMAKE_REQUIRED_LIBRARIES = ${CMAKE_REQUIRED_LIBRARIES}\")\n",
        "Line" : 116,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# on failure\n",
        "Line" : 123,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "#message(\"DEBUG: ${DEFINITIONS} = ${${DEFINITIONS}}\")\n\n#message(\"DEBUG: ${LIBRARIES} = ${${LIBRARIES}}\")\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#\n\n# main\n\n#\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Is it already configured?\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# reset variables\n",
        "Line" : 144,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "#\n\n# If Unix, search for BLAS function in possible libraries\n\n#\n",
        "Line" : 151,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# BLAS in ATLAS library? (http://math-atlas.sourceforge.net/)\n",
        "Line" : 155,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# BLAS in PhiPACK libraries? (requires generic BLAS lib, too)\n",
        "Line" : 168,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# BLAS in Alpha CXML library?\n",
        "Line" : 181,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# BLAS in Alpha DXML library? (now called CXML, see above)\n",
        "Line" : 194,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# BLAS in Sun Performance library?\n",
        "Line" : 207,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Extra linker flag\n",
        "Line" : 219,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "# BLAS in SCSL library?  (SGI/Cray Scientific Library)\n",
        "Line" : 224,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# BLAS in SGIMATH library?\n",
        "Line" : 237,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# BLAS in IBM ESSL library? (requires generic BLAS lib, too)\n",
        "Line" : 250,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "#BLAS in intel mkl 10 library? (em64t 64bit)\n",
        "Line" : 263,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "### windows version of intel mkl 10?\n",
        "Line" : 276,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "#older versions of intel mkl libs\n",
        "Line" : 289,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# BLAS in intel mkl library? (shared)\n",
        "Line" : 291,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "#BLAS in intel mkl library? (static, 32bit)\n",
        "Line" : 304,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "#BLAS in intel mkl library? (static, em64t 64bit)\n",
        "Line" : 317,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "#BLAS in acml library?\n",
        "Line" : 330,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# Apple BLAS library?\n",
        "Line" : 343,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# Generic BLAS library?\n\n# This configuration *must* be the last try as this library is notably slow.\n",
        "Line" : 368,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# Add variables to cache\n",
        "Line" : 400,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "#message(\"DEBUG: BLAS_INCLUDE_DIR = ${BLAS_INCLUDE_DIR}\")\n\n#message(\"DEBUG: BLAS_DEFINITIONS = ${BLAS_DEFINITIONS}\")\n\n#message(\"DEBUG: BLAS_LINKER_FLAGS = ${BLAS_LINKER_FLAGS}\")\n\n#message(\"DEBUG: BLAS_LIBRARIES = ${BLAS_LIBRARIES}\")\n\n#message(\"DEBUG: BLAS_LIBRARIES_DIR = ${BLAS_LIBRARIES_DIR}\")\n\n#message(\"DEBUG: BLAS_FOUND = ${BLAS_FOUND}\")\n",
        "Line" : 412,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 37
    },
    "eigen/cmake/FindCholmod.cmake" : {
      "ObjectId" : "23239c300f1b2004794e9968a825a45fa5bb5ccd",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Cholmod lib usually requires linking to a blas and lapack library.\n\n# It is up to the user of this module to find a BLAS and link to it.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "eigen/cmake/FindEigen2.cmake" : {
      "ObjectId" : "a834b887286045fcdc381633ec95bf204834aadf",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Eigen2 lib\n\n#\n\n# This module supports requiring a minimum version, e.g. you can do\n\n#   find_package(Eigen2 2.0.3)\n\n# to require version 2.0.3 to newer of Eigen2.\n\n#\n\n# Once done this will define\n\n#\n\n#  EIGEN2_FOUND - system has eigen lib with correct version\n\n#  EIGEN2_INCLUDE_DIR - the eigen include directory\n\n#  EIGEN2_VERSION - eigen version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "eigen/cmake/FindEigen3.cmake" : {
      "ObjectId" : "cea1afeabcbfafc37886fc647f13e73a10466c44",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Eigen3 lib\n\n#\n\n# This module supports requiring a minimum version, e.g. you can do\n\n#   find_package(Eigen3 3.1.2)\n\n# to require version 3.1.2 or newer of Eigen3.\n\n#\n\n# Once done this will define\n\n#\n\n#  EIGEN3_FOUND - system has eigen lib with correct version\n\n#  EIGEN3_INCLUDE_DIR - the eigen include directory\n\n#  EIGEN3_VERSION - eigen version\n\n#\n\n# This module reads hints about search locations from \n\n# the following enviroment variables:\n\n#\n\n# EIGEN3_ROOT\n\n# EIGEN3_ROOT_DIR\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Copyright (c) 2009 Benoit Jacob <jacob.benoit.1@gmail.com>\n\n# Redistribution and use is allowed according to the terms of the 2-clause BSD license.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "eigen/cmake/FindFFTW.cmake" : {
      "ObjectId" : "6c4dc9ab495d5ab56b6b3943b2c53200b35c5ee8",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find the FFTW library\n\n#\n\n# Usage:\n\n#   find_package(FFTW [REQUIRED] [QUIET] )\n\n#     \n\n# It sets the following variables:\n\n#   FFTW_FOUND               ... true if fftw is found on the system\n\n#   FFTW_LIBRARIES           ... full path to fftw library\n\n#   FFTW_INCLUDES            ... fftw include directory\n\n#\n\n# The following variables will be checked by the function\n\n#   FFTW_USE_STATIC_LIBS    ... if true, only static libraries are found\n\n#   FFTW_ROOT               ... if set, the libraries are exclusively searched\n\n#                               under this path\n\n#   FFTW_LIBRARY            ... fftw library to use\n\n#   FFTW_INCLUDE_DIR        ... fftw include directory\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#If environment variable FFTWDIR is specified, it has same effect as FFTW_ROOT\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check if we can use PkgConfig\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Determine from PKG\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Check whether to search static or dynamic libs\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#find libs\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#find includes\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    },
    "eigen/cmake/FindGLEW.cmake" : {
      "ObjectId" : "54da20f12bdba627f0d90fb8d225e4995b92ea7c",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2009 Boudewijn Rempt <boud@valdyas.org>                                                                                          \n\n#                                                                                                                                                \n\n# Redistribution and use is allowed according to the terms of the BSD license.                                                                   \n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file. \n\n# \n\n# - try to find glew library and include files\n\n#  GLEW_INCLUDE_DIR, where to find GL/glew.h, etc.\n\n#  GLEW_LIBRARIES, the libraries to link against\n\n#  GLEW_FOUND, If false, do not try to use GLEW.\n\n# Also defined, but not for general use are:\n\n#  GLEW_GLEW_LIBRARY = the full path to the glew library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# These values for Apple could probably do with improvement.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Is -lXi and -lXmu required on all platforms that have it?\n\n# If not, we need some way to figure out what platform we are on.\n",
        "Line" : 75,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#The following deprecated settings are for backwards compatibility with CMake1.4\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "eigen/cmake/FindGMP.cmake" : {
      "ObjectId" : "1f0273960142810512c933c53e2ff8de7ab9d428",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find the GNU Multiple Precision Arithmetic Library (GMP)\n\n# See http://gmplib.org/\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "eigen/cmake/FindGSL.cmake" : {
      "ObjectId" : "bf411a7f9814843a67465198cb61c82e59c4beff",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find gnu scientific library GSL\n\n# See \n\n# http://www.gnu.org/software/gsl/  and\n\n# http://gnuwin32.sourceforge.net/packages/gsl.htm\n\n#\n\n# Once run this will define: \n\n# \n\n# GSL_FOUND       = system has GSL lib\n\n#\n\n# GSL_LIBRARIES   = full path to the libraries\n\n#    on Unix/Linux with additional linker flags from \"gsl-config --libs\"\n\n# \n\n# CMAKE_GSL_CXX_FLAGS  = Unix compiler flags for GSL, essentially \"`gsl-config --cxxflags`\"\n\n#\n\n# GSL_INCLUDE_DIR      = where to find headers \n\n#\n\n# GSL_LINK_DIRECTORIES = link directories, useful for rpath on Unix\n\n# GSL_EXE_LINKER_FLAGS = rpath on Unix\n\n#\n\n# Felix Woelk 07/2004\n\n# Jan Woetzel\n\n#\n\n# www.mip.informatik.uni-kiel.de\n\n# --------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# JW tested with gsl-1.8, Windows XP, MSVS 7.1\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#MESSAGE(\"DBG\\n\"\n\n#  \"GSL_GSL_LIBRARY=${GSL_GSL_LIBRARY}\\n\"\n\n#  \"GSL_GSLCBLAS_LIBRARY=${GSL_GSLCBLAS_LIBRARY}\\n\"\n\n#  \"GSL_LIBRARIES=${GSL_LIBRARIES}\")\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# MESSAGE(\"DBG GSL_CONFIG ${GSL_CONFIG}\")\n",
        "Line" : 94,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# set CXXFLAGS to be fed into CXX_FLAGS by the user:\n",
        "Line" : 97,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# set INCLUDE_DIRS to prefix+include\n",
        "Line" : 100,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# set link libraries and link flags\n\n#SET(GSL_LIBRARIES \"`${GSL_CONFIG} --libs`\")\n",
        "Line" : 106,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# extract link dirs for rpath  \n",
        "Line" : 112,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# extract version\n",
        "Line" : 117,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# split version as major/minor\n",
        "Line" : 122,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# split off the link dirs (for rpath)\n\n# use regular expression to match wildcard equivalent \"-L*<endchar>\"\n\n# with <endchar> is a space or a semicolon\n",
        "Line" : 128,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "#      MESSAGE(\"DBG  GSL_LINK_DIRECTORIES_WITH_PREFIX=${GSL_LINK_DIRECTORIES_WITH_PREFIX}\")\n",
        "Line" : 134,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# remove prefix -L because we need the pure directory for LINK_DIRECTORIES\n",
        "Line" : 136,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "#      MESSAGE(\"DBG  GSL_LINK_DIRECTORIES=${GSL_LINK_DIRECTORIES}\")\n\n#      MESSAGE(\"DBG  GSL_EXE_LINKER_FLAGS=${GSL_EXE_LINKER_FLAGS}\")\n",
        "Line" : 142,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "#      ADD_DEFINITIONS(\"-DHAVE_GSL\")\n\n#      SET(GSL_DEFINITIONS \"-DHAVE_GSL\")\n",
        "Line" : 145,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 15
    },
    "eigen/cmake/FindGoogleHash.cmake" : {
      "ObjectId" : "f6a81a02ce9dbac0710ef2b5e46eb8b9c5aa5999",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# let's make sure it compiles with the current compiler\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "eigen/cmake/FindLAPACK.cmake" : {
      "ObjectId" : "2fcae2199f5f55f707089108301eb2c0a350671d",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find LAPACK library\n\n#\n\n# This module finds an installed library that implements the LAPACK\n\n# linear-algebra interface (see http://www.netlib.org/lapack/).\n\n# The approach follows mostly that taken for the autoconf macro file, acx_lapack.m4\n\n# (distributed at http://ac-archive.sourceforge.net/ac-archive/acx_lapack.html).\n\n#\n\n# This module sets the following variables:\n\n#  LAPACK_FOUND - set to true if a library implementing the LAPACK interface\n\n#    is found\n\n#  LAPACK_INCLUDE_DIR - Directories containing the LAPACK header files\n\n#  LAPACK_DEFINITIONS - Compilation options to use LAPACK\n\n#  LAPACK_LINKER_FLAGS - Linker flags to use LAPACK (excluding -l\n\n#    and -L).\n\n#  LAPACK_LIBRARIES_DIR - Directories containing the LAPACK libraries.\n\n#     May be null if LAPACK_LIBRARIES contains libraries name using full path.\n\n#  LAPACK_LIBRARIES - List of libraries to link against LAPACK interface.\n\n#     May be null if the compiler supports auto-link (e.g. VC++).\n\n#  LAPACK_USE_FILE - The name of the cmake module to include to compile\n\n#     applications or libraries using LAPACK.\n\n#\n\n# This module was modified by CGAL team:\n\n# - find libraries for a C++ compiler, instead of Fortran\n\n# - added LAPACK_INCLUDE_DIR, LAPACK_DEFINITIONS and LAPACK_LIBRARIES_DIR\n\n# - removed LAPACK95_LIBRARIES\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This macro checks for the existence of the combination of fortran libraries\n\n# given by _list.  If the combination is found, this macro checks (using the\n\n# check_function_exists macro) whether can link against that library\n\n# combination using the name of a routine given by _name using the linker\n\n# flags given by _flags.  If the combination of libraries is found and passes\n\n# the link test, LIBRARIES is set to the list of complete library paths that\n\n# have been found and DEFINITIONS to the required definitions.\n\n# Otherwise, LIBRARIES is set to FALSE.\n\n# N.B. _prefix is the prefix applied to the names of all cached variables that\n\n# are generated internally and marked advanced by this macro.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#message(\"DEBUG: check_lapack_libraries(${_list} in ${_path} with ${_blas})\")\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Check for the existence of the libraries given by _list\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# search first in ${_path}\n",
        "Line" : 53,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# if not found, search in environment variables and system\n",
        "Line" : 58,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# Test this combination of libraries with the Fortran/f2c interface.\n\n# We test the Fortran interface first as it is well standardized.\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Some C++ linkers require the f2c library to link with Fortran libraries.\n\n# I do not know which ones, thus I just add the f2c library if it is available.\n",
        "Line" : 89,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#message(\"DEBUG: CMAKE_REQUIRED_DEFINITIONS = ${CMAKE_REQUIRED_DEFINITIONS}\")\n\n#message(\"DEBUG: CMAKE_REQUIRED_LIBRARIES = ${CMAKE_REQUIRED_LIBRARIES}\")\n\n# Check if function exists with f2c calling convention (ie a trailing underscore)\n",
        "Line" : 98,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# If not found, test this combination of libraries with a C interface.\n\n# A few implementations (ie ACML) provide a C interface. Unfortunately, there is no standard.\n",
        "Line" : 108,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#message(\"DEBUG: CMAKE_REQUIRED_LIBRARIES = ${CMAKE_REQUIRED_LIBRARIES}\")\n",
        "Line" : 115,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# on failure\n",
        "Line" : 122,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "#message(\"DEBUG: ${DEFINITIONS} = ${${DEFINITIONS}}\")\n\n#message(\"DEBUG: ${LIBRARIES} = ${${LIBRARIES}}\")\n",
        "Line" : 127,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#\n\n# main\n\n#\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# LAPACK requires BLAS\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Is it already configured?\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# reset variables\n",
        "Line" : 155,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# unused (yet)\n",
        "Line" : 158,
        "CharPositionInLine" : 32
      },
      "18" : {
        "Text" : "#\n\n# If Unix, search for LAPACK function in possible libraries\n\n#\n",
        "Line" : 162,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "#intel mkl lapack?\n",
        "Line" : 166,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "#acml lapack?\n",
        "Line" : 180,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Apple LAPACK library?\n",
        "Line" : 194,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Generic LAPACK library?\n\n# This configuration *must* be the last try as this library is notably slow.\n",
        "Line" : 221,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# Add variables to cache\n",
        "Line" : 254,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "#message(\"DEBUG: LAPACK_INCLUDE_DIR = ${LAPACK_INCLUDE_DIR}\")\n\n#message(\"DEBUG: LAPACK_DEFINITIONS = ${LAPACK_DEFINITIONS}\")\n\n#message(\"DEBUG: LAPACK_LINKER_FLAGS = ${LAPACK_LINKER_FLAGS}\")\n\n#message(\"DEBUG: LAPACK_LIBRARIES = ${LAPACK_LIBRARIES}\")\n\n#message(\"DEBUG: LAPACK_LIBRARIES_DIR = ${LAPACK_LIBRARIES_DIR}\")\n\n#message(\"DEBUG: LAPACK_FOUND = ${LAPACK_FOUND}\")\n",
        "Line" : 266,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 25
    },
    "eigen/cmake/FindMPFR.cmake" : {
      "ObjectId" : "aa4c2cd7d29c65f88dd63b5507b9f1aeeeb3f7a6",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find the MPFR library\n\n# See http://www.mpfr.org/\n\n#\n\n# This module supports requiring a minimum version, e.g. you can do\n\n#   find_package(MPFR 2.3.0)\n\n# to require version 2.3.0 to newer of MPFR.\n\n#\n\n# Once done this will define\n\n#\n\n#  MPFR_FOUND - system has MPFR lib with correct version\n\n#  MPFR_INCLUDES - the MPFR include directory\n\n#  MPFR_LIBRARIES - the MPFR library\n\n#  MPFR_VERSION - MPFR version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Copyright (c) 2010 Jitse Niesen, <jitse@maths.leeds.ac.uk>\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set MPFR_INCLUDES\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set MPFR_FIND_VERSION to 1.0.0 if no minimum version is specified\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set MPFR_VERSION\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Check whether found version exceeds minimum version\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Set MPFR_LIBRARIES\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Epilogue\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "eigen/cmake/FindMetis.cmake" : {
      "ObjectId" : "6a0ce790cb31f98bd4997c3609500bd001a512b2",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Pastix requires METIS or METIS (partitioning and reordering tools)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "eigen/cmake/FindPastix.cmake" : {
      "ObjectId" : "e2e6c810d3cf985eb5faca6d87768e42a81e89ea",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Pastix lib requires linking to a blas library.\n\n# It is up to the user of this module to find a BLAS and link to it.\n\n# Pastix requires SCOTCH or METIS (partitioning and reordering tools) as well\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "eigen/cmake/FindSPQR.cmake" : {
      "ObjectId" : "794c212af8e046af21cad24c3220a28f7bd680aa",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# SPQR lib usually requires linking to a blas and lapack library.\n\n# It is up to the user of this module to find a BLAS and link to it.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# SPQR lib requires Cholmod, colamd and amd as well. \n\n# FindCholmod.cmake can be used to find those packages before finding spqr\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "eigen/cmake/FindScotch.cmake" : {
      "ObjectId" : "530340b16fb3ef7da5507a9e8c6e667270e1a0a3",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Pastix requires SCOTCH or METIS (partitioning and reordering tools)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "eigen/cmake/FindStandardMathLibrary.cmake" : {
      "ObjectId" : "711b0e4b4f1d82323123088b4ef04cd0836b5f9f",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find how to link to the standard math library, if anything at all is needed to do.\n\n# On most platforms this is automatic, but for example it's not automatic on QNX.\n\n#\n\n# Once done this will define\n\n#\n\n#  STANDARD_MATH_LIBRARY_FOUND - we found how to successfully link to the standard math library\n\n#  STANDARD_MATH_LIBRARY - the name of the standard library that one has to link to.\n\n#                            -- this will be left empty if it's automatic (most platforms).\n\n#                            -- this will be set to \"m\" on platforms where one must explicitly\n\n#                               pass the \"-lm\" linker flag.\n\n#\n\n# Copyright (c) 2010 Benoit Jacob <jacob.benoit.1@gmail.com>\n\n# Redistribution and use is allowed according to the terms of the 2-clause BSD license.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# a little test program for c++ math functions.\n\n# notice the std:: is required on some platforms such as QNX\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# first try compiling/linking the test program without any linker flags\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# the test program linked successfully without any linker flag.\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# the test program did not link successfully without any linker flag.\n\n# This is a very uncommon case that so far we only saw on QNX. The next try is the\n\n# standard name 'm' for the standard math library.\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# the test program linked successfully when linking to the 'm' library\n",
        "Line" : 53,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# the test program still doesn't link successfully\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "eigen/cmake/FindSuperLU.cmake" : {
      "ObjectId" : "8a3df36668defb6ef511872de33729a474f9e792",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Umfpack lib usually requires linking to a blas library.\n\n# It is up to the user of this module to find a BLAS and link to it.\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "eigen/cmake/FindUmfpack.cmake" : {
      "ObjectId" : "16b046cd61bb7ac0cb63a23d9ae8fb28a3cfd229",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Umfpack lib usually requires linking to a blas library.\n\n# It is up to the user of this module to find a BLAS and link to it.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "eigen/cmake/RegexUtils.cmake" : {
      "ObjectId" : "b59dfc340f524d25add382306ba143e662baabdb",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/cmake/UseEigen3.cmake" : {
      "ObjectId" : "a38bac82d5df40d5cbc086bcdcdcfbece8499919",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#                                               -*- cmake -*-\n\n#\n\n#  UseEigen3.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "eigen/cmake/language_support.cmake" : {
      "ObjectId" : "93f8a8fd8999c9a6f7bc106694fc22496c31ef38",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# cmake/modules/language_support.cmake\n\n#\n\n# Temporary additional general language support is contained within this\n\n# file.  \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This additional function definition is needed to provide a workaround for\n\n# CMake bug 9220.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# On debian testing (cmake 2.6.2), I get return code zero when calling \n\n# cmake the first time, but cmake crashes when running a second time\n\n# as follows:\n\n#\n\n#  -- The Fortran compiler identification is unknown\n\n#  CMake Error at /usr/share/cmake-2.6/Modules/CMakeFortranInformation.cmake:7 (GET_FILENAME_COMPONENT):\n\n#    get_filename_component called with incorrect number of arguments\n\n#  Call Stack (most recent call first):\n\n#    CMakeLists.txt:3 (enable_language)\n\n#\n\n# My workaround is to invoke cmake twice.  If both return codes are zero, \n\n# it is safe to invoke ENABLE_LANGUAGE(Fortran OPTIONAL)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#message(\"DEBUG: language = ${language}\")\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Second run\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Temporary tests of the above function.\n\n#workaround_9220(CXX CXX_language_works)\n\n#message(\"CXX_language_works = ${CXX_language_works}\")\n\n#workaround_9220(CXXp CXXp_language_works)\n\n#message(\"CXXp_language_works = ${CXXp_language_works}\")\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "eigen/demos/CMakeLists.txt" : {
      "ObjectId" : "b0d2eddbb8eaaf87a668274fbe63bddfb02ac792",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/demos/mandelbrot/CMakeLists.txt" : {
      "ObjectId" : "5c500e064dec6a01c8b203e250f746d26b7e626f",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/demos/opengl/CMakeLists.txt" : {
      "ObjectId" : "299aa441df95a47c84443068c95ad19ecee42516",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/doc/CMakeLists.txt" : {
      "ObjectId" : "4d01a0424182674678f2675e68634162a2b9833f",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set some Doxygen flags\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set(EIGEN_DOXY_TAGFILES                 \"\\\"${Eigen_BINARY_DIR}/doc/eigen.doxytags =../\\\"\")\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "eigen/doc/examples/CMakeLists.txt" : {
      "ObjectId" : "08cf8efd7c1cf448c363984d4d2b77eec9627c81",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/doc/snippets/CMakeLists.txt" : {
      "ObjectId" : "1135900cf47686a95feff9350f24a1382aeb9726",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/doc/special_examples/CMakeLists.txt" : {
      "ObjectId" : "101fbc5f9c769618f2269c4e4547806d18fc7c4a",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/failtest/CMakeLists.txt" : {
      "ObjectId" : "8df0a7631785975f67debadb502b0f276b48659b",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/lapack/CMakeLists.txt" : {
      "ObjectId" : "9883d4c72d8fdcaa1599c468553281daf5008b65",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Download lapack and install sources and testing at the right place\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# The following comes from lapack/TESTING/CMakeLists.txt\n\n# Get Python\n",
        "Line" : 115,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#  string(REPLACE \"/STACK:10000000\" \"/STACK:900000000000000000\"\n\n#    CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS}\")\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# ======== SINGLE RFP LIN TESTS ========================\n",
        "Line" : 157,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#\n\n#\n\n# ======== SINGLE EIG TESTS ===========================\n\n#\n",
        "Line" : 160,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#\n\n# ======== DOUBLE LIN TESTS ===========================\n",
        "Line" : 223,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#\n\n# ======== DOUBLE RFP LIN TESTS ========================\n",
        "Line" : 226,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#\n\n# ======== DOUBLE EIG TESTS ===========================\n",
        "Line" : 229,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#\n\n# ======== COMPLEX RFP LIN TESTS ========================\n",
        "Line" : 291,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#\n\n# ======== COMPLEX EIG TESTS ===========================\n",
        "Line" : 294,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#\n\n# ======== COMPLEX16 LIN TESTS ========================\n",
        "Line" : 355,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "#\n\n# ======== COMPLEX16 RFP LIN TESTS ========================\n",
        "Line" : 358,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "#\n\n# ======== COMPLEX16 EIG TESTS ===========================\n",
        "Line" : 361,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#\n\n# ======== SINGLE-DOUBLE PROTO LIN TESTS ==============\n",
        "Line" : 424,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "#\n\n# ======== COMPLEX-COMPLEX16 LIN TESTS ========================\n",
        "Line" : 433,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# ==============================================================================\n",
        "Line" : 439,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 16
    },
    "eigen/scripts/CMakeLists.txt" : {
      "ObjectId" : "0d9a631a9dd0d46b726703af0e51d5f49fddf029",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/test/CMakeLists.txt" : {
      "ObjectId" : "767e82f214b240bd818a9360ff9ea4bd30a73383",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# generate split test header file only if it does not yet exist\n\n# in order to prevent a rebuild everytime cmake is configured\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# check if we have a Fortran compiler\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# search for a default Lapack library to complete Eigen's one\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# configure blas/lapack (use Eigen's ones)\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# # ei_add_test(denseLM)\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# NVCC unit tests\n",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "eigen/unsupported/CMakeLists.txt" : {
      "ObjectId" : "4fef40a86c6d17dd8cc792a5e4f9e8d65abcdf58",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# can't do EXCLUDE_FROM_ALL here, breaks CTest\n",
        "Line" : 4,
        "CharPositionInLine" : 25
      },
      "CommentCount" : 1
    },
    "eigen/unsupported/Eigen/CMakeLists.txt" : {
      "ObjectId" : "6faf4585de2edcdf328de2dd2ba6a7042117ac77",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/unsupported/Eigen/CXX11/CMakeLists.txt" : {
      "ObjectId" : "f1d9f04820478d9d59abb66b09022de3b61277ab",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/unsupported/Eigen/CXX11/src/CMakeLists.txt" : {
      "ObjectId" : "d90ee1b0f8bb3ac5b9a40df0deeae135dffc121d",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/unsupported/Eigen/CXX11/src/Core/CMakeLists.txt" : {
      "ObjectId" : "28571dcb9eeea35e2e9514112d50bcb6cff906e4",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/unsupported/Eigen/CXX11/src/Core/util/CMakeLists.txt" : {
      "ObjectId" : "1e3b14712035d1a5993978b949edb1ee3927870c",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/unsupported/Eigen/CXX11/src/Tensor/CMakeLists.txt" : {
      "ObjectId" : "6d4b3ea0d7a00aa56a43be06fe6dd773d2728621",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/CMakeLists.txt" : {
      "ObjectId" : "6e871a8daaa869d9b2fcdab651a4550e9758fa81",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/CMakeLists.txt" : {
      "ObjectId" : "dc9fc78ec9d97f740c05d73defe2b28a73e52ba8",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/unsupported/Eigen/src/AutoDiff/CMakeLists.txt" : {
      "ObjectId" : "ad91fd9c4628cd921b2efedc59b093218dc34064",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/unsupported/Eigen/src/BVH/CMakeLists.txt" : {
      "ObjectId" : "b377d865cb1f9d2db01426f0b599929a4fa6458a",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/unsupported/Eigen/src/CMakeLists.txt" : {
      "ObjectId" : "8eb2808e3ce8133f4815ea40350d2ad50d26a61e",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/unsupported/Eigen/src/FFT/CMakeLists.txt" : {
      "ObjectId" : "edcffcb189c872b5339f345aa32d772cda3f8bf0",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/unsupported/Eigen/src/IterativeSolvers/CMakeLists.txt" : {
      "ObjectId" : "7986afc5ed4ecf09fa871c726a0c2ab1945e8559",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/unsupported/Eigen/src/KroneckerProduct/CMakeLists.txt" : {
      "ObjectId" : "4daefebee6f676c073f5ecacf9e8781aa5d673c2",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/unsupported/Eigen/src/LevenbergMarquardt/CMakeLists.txt" : {
      "ObjectId" : "d9690854db3d8f757642055cc80d1c92457a8bc4",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/unsupported/Eigen/src/MatrixFunctions/CMakeLists.txt" : {
      "ObjectId" : "cdde64d2cd45b59bee6b55d6590f2fcd7827d52c",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/unsupported/Eigen/src/MoreVectorization/CMakeLists.txt" : {
      "ObjectId" : "1b887cc8e3447b27bb9d289274eeb1ee0b5e71e0",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/unsupported/Eigen/src/NonLinearOptimization/CMakeLists.txt" : {
      "ObjectId" : "9322ddadf0364cc12cd9a77fdf0b48e2cbe49f85",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/unsupported/Eigen/src/NumericalDiff/CMakeLists.txt" : {
      "ObjectId" : "1199aca2f7073703a946344a922e0adec1e22b3e",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/unsupported/Eigen/src/Polynomials/CMakeLists.txt" : {
      "ObjectId" : "51f13f3cb91ea44bc113178d58ab26db47369d25",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/unsupported/Eigen/src/Skyline/CMakeLists.txt" : {
      "ObjectId" : "3bf1b0dd46a7d1fa7cf90884e2284c0c06c4e8a5",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/unsupported/Eigen/src/SparseExtra/CMakeLists.txt" : {
      "ObjectId" : "7ea32ca5e26bf653f5814ce780c63c078ee83e29",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/unsupported/Eigen/src/Splines/CMakeLists.txt" : {
      "ObjectId" : "55c6271e96328c14e32ae6252521182e3051f713",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/unsupported/doc/CMakeLists.txt" : {
      "ObjectId" : "9e9ab98007eb189f2625f7fdd3c232c2d3da4e3b",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/unsupported/doc/examples/CMakeLists.txt" : {
      "ObjectId" : "c47646dfca9d76e45cf929d74508e32698d96ee3",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/unsupported/doc/snippets/CMakeLists.txt" : {
      "ObjectId" : "f0c5cc2a84dd65edd575963bf648a1481f9b1dde",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eigen/unsupported/test/CMakeLists.txt" : {
      "ObjectId" : "7c8fb8ddef883255911726aa1b15376dc12fdcad",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# this test seems to never have been successful on x87, so is considered to contain a FP-related bug.\n\n# see thread: \"non-linear optimization test summary\"\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# It should be safe to always run these tests as there is some fallback code for\n\n# older compiler that don't support cxx11.\n",
        "Line" : 100,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#  ei_add_test(cxx11_tensor_symmetry \"-std=c++0x\")\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# These tests needs nvcc\n",
        "Line" : 145,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#  ei_add_test(cxx11_tensor_device \"-std=c++0x\")\n\n#  ei_add_test(cxx11_tensor_cuda \"-std=c++0x\")\n\n#  ei_add_test(cxx11_tensor_contract_cuda \"-std=c++0x\")\n\n#  ei_add_test(cxx11_tensor_reduction_cuda \"-std=c++0x\")\n\n#  ei_add_test(cxx11_tensor_random_cuda \"-std=c++0x\")\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "q/prj/qtcreator/q.pro" : {
      "ObjectId" : "8458eeff023d992acaa4bf70a2382840ae55ea9d",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "q/prj/qtcreator/solution.pro" : {
      "ObjectId" : "ea450dcf166c276f8ca6ffe656cce68e513a275b",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "qbase/prj/qtcreator/qbase.pro" : {
      "ObjectId" : "844571c94aff412391cd1a8db40239fd1739b3e2",
      "LastModified" : "2018-03-18T20:27:39Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "qdata/prj/qtcreator/qdata.pro" : {
      "ObjectId" : "a053c8a6e7700037109890104e646ea7255daee4",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#QMAKE_CXXFLAGS_RELEASE += -g\n\n#QMAKE_CFLAGS_RELEASE += -g\n\n#QMAKE_LFLAGS_RELEASE =\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "qdata/prj/qtcreator/solution.pro" : {
      "ObjectId" : "2e458b6f17e06797b2d5712781d15a58ecb51235",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "qinput/prj/qtcreator/qinput.pro" : {
      "ObjectId" : "39c8fcc9d2f7e0ae8f4cea889378122982556512",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "qinput/prj/qtcreator/solution.pro" : {
      "ObjectId" : "1d330c2dff20439e1e291e33ba46b2596b1d1777",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "qmath/prj/qtcreator/qmath.pro" : {
      "ObjectId" : "f1422b92d0e9533fb0f8c5e8cd41559e42b0b2e4",
      "LastModified" : "2018-03-18T20:27:39Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "qmath/prj/qtcreator/solution.pro" : {
      "ObjectId" : "8d9ebe0967ddeef58b06055ad6cc3743aa6774bb",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "silkopter/fc/prj/qtcreator/fc.pro" : {
      "ObjectId" : "4d9d2f4fcd36917f35e46d07eafa0bc93f8846b4",
      "LastModified" : "2018-07-20T21:05:12Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#CONFIG -= app_bundle\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "silkopter/fc/prj/qtcreator/fc_solution.pro" : {
      "ObjectId" : "285ef311b0ffc929b783c39b136c4f0b4445fbe4",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "silkopter/gs/prj/qtcreator/gs.pro" : {
      "ObjectId" : "ca3eef4f0f4c70c7b7dc63ffd7dfc2e1834fffc3",
      "LastModified" : "2018-03-18T20:27:39Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2014-06-04T18:33:20\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#TARGET = gs\n\n#target.path = /home/jean/fpv/gs\n\n#INSTALLS = target\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#DEFINES += BOOST_ERROR_CODE_HEADER_ONLY\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#LIBS += -lpcap\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "silkopter/gs/prj/qtcreator/gs_solution.pro" : {
      "ObjectId" : "93236e123a43ad86d445385d071a74ad816e7547",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "silkopter/gs_old/prj/qtcreator/gs.pro" : {
      "ObjectId" : "1183d9638a1e92b98f526049d10b64324ba4c351",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2014-06-04T18:33:20\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#TARGET = gs\n\n#target.path = /home/jean/fpv/gs\n\n#INSTALLS = target\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "silkopter/gs_old/prj/qtcreator/gs_solution.pro" : {
      "ObjectId" : "18c9a910fc611ab1e44bbfc2af302109aaafab43",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "silkopter/rc/prj/qtcreator/rc.pro" : {
      "ObjectId" : "0689e2dbca2d34db07224f117de51a4a8070acbb",
      "LastModified" : "2018-08-15T07:56:32Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2014-06-04T18:33:20\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#QT       += core quick qml quickcontrols2 positioning\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#RESOURCES += \\\n#    ../../src/res.qrc\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "silkopter/rc/prj/qtcreator/rc_solution.pro" : {
      "ObjectId" : "6beb4330ab1bc72d08d051fdb4b4a801c85bc759",
      "LastModified" : "2018-08-15T07:56:32Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "silkopter/test/test_fc_comms/prj/qtcreator/test_fc_comms.pro" : {
      "ObjectId" : "89e9986166cff6046d7a016bc6d55ace55a35b60",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2014-06-04T18:33:20\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "silkopter/test/test_fc_comms/prj/qtcreator/test_fc_comms_solution.pro" : {
      "ObjectId" : "5cb749cc5668eefdbb9a564bff1eb85d188b47b7",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "silkopter/test/test_rc_comms/prj/qtcreator/test_rc_comms.pro" : {
      "ObjectId" : "a0aaf3b3173979dae424bd4e8403a692c296546f",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2014-06-04T18:33:20\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "silkopter/test/test_rc_comms/prj/qtcreator/test_rc_comms_solution.pro" : {
      "ObjectId" : "1ca82869e7073988cf702eda5927a8463289e552",
      "LastModified" : "2017-08-29T22:02:22Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 140,
    "QMAKE" : 24
  },
  "ElapsedTime" : 1993
}