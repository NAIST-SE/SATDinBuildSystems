{
  "Repository" : "1600297",
  "Revision" : "HEAD",
  "ObjectId" : "3bd4c52c96af64014c24329c58f20398f58fb888",
  "CommitTime" : "2018-07-20T13:10:15Z",
  "Files" : {
    "eclipse/features/net.sf.orcc/pom.xml" : {
      "ObjectId" : "a680e1a65d9f373e9b870847dbd1c152e636d8ce",
      "LastModified" : "2016-05-10T15:10:27Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "eclipse/plugins/net.sf.orcc.backends/pom.xml" : {
      "ObjectId" : "7e75e634f37139a68bb856440aeb031cabbd8ba4",
      "LastModified" : "2016-05-10T15:10:27Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "eclipse/plugins/net.sf.orcc.backends/runtime/C/libs/CMakeLists.txt" : {
      "ObjectId" : "b46c3a5ab8e39580a5a7cd9eb84a426372f4b740",
      "LastModified" : "2016-05-10T15:10:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# to find orcc_config.h\n",
        "Line" : 16,
        "CharPositionInLine" : 23
      },
      "CommentCount" : 1
    },
    "eclipse/plugins/net.sf.orcc.backends/runtime/C/libs/cmake/Modules/FindSDL2.cmake" : {
      "ObjectId" : "4ad35b848bef179acbef8daa845aa453a49f1c41",
      "LastModified" : "2016-08-26T08:27:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Taken from\n\n#    https://github.com/tcbrindle/sdl2-cmake-scripts\n\n#\n\n# This module defines\n\n# SDL2_LIBRARY, the name of the library to link against\n\n# SDL2_FOUND, if false, do not try to link to SDL2\n\n# SDL2_INCLUDE_DIR, where to find SDL.h\n\n#\n\n# This module responds to the the flag:\n\n# SDL2_BUILDING_LIBRARY\n\n# If this is defined, then no SDL2main will be linked in because\n\n# only applications need main().\n\n# Otherwise, it is assumed you are building an application and this\n\n# module will attempt to locate and set the the proper link flags\n\n# as part of the returned SDL2_LIBRARY variable.\n\n#\n\n# Don't forget to include SDLmain.h and SDLmain.m your project for the\n\n# OS X framework based version. (Other versions link to -lSDL2main which\n\n# this module will try to find on your behalf.) Also for OS X, this\n\n# module will automatically add the -framework Cocoa on your behalf.\n\n#\n\n#\n\n# Additional Note: If you see an empty SDL2_LIBRARY_TEMP in your configuration\n\n# and no SDL2_LIBRARY, it means CMake did not find your SDL2 library\n\n# (SDL2.dll, libsdl2.so, SDL2.framework, etc).\n\n# Set SDL2_LIBRARY_TEMP to point to your SDL2 library, and configure again.\n\n# Similarly, if you see an empty SDL2MAIN_LIBRARY, you should set this value\n\n# as appropriate. These values are used to generate the final SDL2_LIBRARY\n\n# variable, but when these values are unset, SDL2_LIBRARY does not get created.\n\n#\n\n#\n\n# $SDL2DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$SDL2DIR\n\n# used in building SDL2.\n\n# l.e.galup  9-20-02\n\n#\n\n# Modified by Eric Wing.\n\n# Added code to assist with automated building by using environmental variables\n\n# and providing a more controlled/consistent search behavior.\n\n# Added new modifications to recognize OS X frameworks and\n\n# additional Unix paths (FreeBSD, etc).\n\n# Also corrected the header search path to follow \"proper\" SDL guidelines.\n\n# Added a search for SDL2main which is needed by some platforms.\n\n# Added a search for threads which is needed by some platforms.\n\n# Added needed compile switches for MinGW.\n\n#\n\n# On OSX, this will prefer the Framework version (if found) over others.\n\n# People will have to manually change the cache values of\n\n# SDL2_LIBRARY to override this selection or set the CMake environment\n\n# CMAKE_INCLUDE_PATH to modify the search paths.\n\n#\n\n# Note that the header path has changed from SDL2/SDL.h to just SDL.h\n\n# This needed to change because \"proper\" SDL convention\n\n# is #include \"SDL.h\", not <SDL2/SDL.h>. This is done for portability\n\n# reasons because not all systems place things in SDL2/ (see FreeBSD).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2003-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fink\n",
        "Line" : 75,
        "CharPositionInLine" : 5
      },
      "3" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 76,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "# Blastwave\n",
        "Line" : 77,
        "CharPositionInLine" : 10
      },
      "5" : {
        "Text" : "# Non-OS X framework versions expect you to also dynamically link to\n\n# SDL2main. This is mainly for Windows and OS X. Other (Unix) platforms\n\n# seem to provide SDL2main for compatibility even though they don't\n\n# necessarily need it.\n",
        "Line" : 99,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# SDL2 may require threads on your system.\n\n# The Apple build may not need an explicit flag because one of the\n\n# frameworks may already provide it.\n\n# But for non-OSX systems, I will use the CMake Threads package.\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# MinGW needs an additional library, mwindows\n\n# It's total link flags should look like -lmingw32 -lSDL2main -lSDL2 -lmwindows\n\n# (Actually on second look, I think it only needs one of the m* libraries.)\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# For SDL2main\n",
        "Line" : 129,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# For OS X, SDL2 uses Cocoa as a backend so it must link to Cocoa.\n\n# CMake doesn't display the -framework Cocoa string in the UI even\n\n# though it actually is there if I modify a pre-used variable.\n\n# I think it has something to do with the CACHE STRING.\n\n# So I use a temporary variable until the end so I can set the\n\n# \"real\" variable in one-shot.\n",
        "Line" : 136,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# For threads, as mentioned Apple doesn't need this.\n\n# In fact, there seems to be a problem if I used the Threads package\n\n# and try using this line, so I'm just skipping it entirely for OS X.\n",
        "Line" : 146,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# For MinGW library\n",
        "Line" : 153,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# Set the final string here so the GUI reflects the final state.\n",
        "Line" : 158,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# Set the temp variable to INTERNAL so it is not seen in the CMake GUI\n",
        "Line" : 160,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 14
    },
    "eclipse/plugins/net.sf.orcc.backends/runtime/C/libs/orcc-map/CMakeLists.txt" : {
      "ObjectId" : "f5fe8e8478d7bc6f82b3d58cf1cfb712d7bf02c6",
      "LastModified" : "2016-08-26T08:27:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build orcc-map as a standalone exectuable\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "eclipse/plugins/net.sf.orcc.backends/runtime/C/libs/orcc-native/CMakeLists.txt" : {
      "ObjectId" : "9b013595bef51ea0b523a48da91733a1385fe779",
      "LastModified" : "2018-04-03T16:25:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Orcc library files\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Try to find openCV\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Helps CMake to find SDL libraries (Windows only)\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Detect current architecture. Depending on CMAKE_LIBRARY_ARCHITECTURE value,\n\n# CMake will search in lib/x64 or lib/x86 sub-folders to find SDL.lib\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Configure additional paths to search for libraries\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# use the FindSDL2.cmake , which resolves SDL.h not found\n\n# error in Ubuntu 16.04 machines that have libsdl2-dev installed.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Try to find SDL on the user system\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Compile libraries\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Do the linking\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "eclipse/plugins/net.sf.orcc.backends/runtime/C/libs/orcc-runtime/CMakeLists.txt" : {
      "ObjectId" : "bd9559418f2472ef5b50968695ec847158c6a392",
      "LastModified" : "2016-08-26T08:27:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Orcc library files\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compile libraries\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Do the linking\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "eclipse/plugins/net.sf.orcc.backends/runtime/C/libs/roxml/CMakeLists.txt" : {
      "ObjectId" : "34830746841fa266554c51e3ad56bf2695ae7aa2",
      "LastModified" : "2016-08-26T08:27:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Initialize source files list for roxml\n",
        "Line" : 7,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Compile libraries\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "eclipse/plugins/net.sf.orcc.backends/runtime/COMPA/cmake/Modules/FindLibC.cmake" : {
      "ObjectId" : "77e9d807bbab2ebb1f22bf578bba848b8f0414f4",
      "LastModified" : "2016-08-26T08:27:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find libc.a \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "eclipse/plugins/net.sf.orcc.backends/runtime/COMPA/cmake/Modules/FindLibORCC.cmake" : {
      "ObjectId" : "e3d5724c93751053d2f7499e44563ac8fb1851c3",
      "LastModified" : "2016-08-26T08:27:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find liborcc.a \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "eclipse/plugins/net.sf.orcc.backends/runtime/COMPA/cmake/Modules/FindLibXil.cmake" : {
      "ObjectId" : "57a5d25d47a26a474a97b2c4660caab6452edbac",
      "LastModified" : "2016-08-26T08:27:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find libxil.a \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "eclipse/plugins/net.sf.orcc.backends/runtime/COMPA/libs/CMakeLists.txt" : {
      "ObjectId" : "c44da2f8a1595edda3cc498f1a062eebe6b29265",
      "LastModified" : "2016-08-26T08:27:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules/)\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "eclipse/plugins/net.sf.orcc.backends/runtime/COMPA/libs/orcc/CMakeLists.txt" : {
      "ObjectId" : "5b8de32dc1c21bd7243be6403c449dfb08bf7e55",
      "LastModified" : "2016-08-26T08:27:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Orcc library files\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#src/source.c\n",
        "Line" : 7,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "eclipse/plugins/net.sf.orcc.cal.grammar/pom.xml" : {
      "ObjectId" : "42df678995545de599a18f707eb5e9f7b8dcae38",
      "LastModified" : "2016-08-26T08:27:17Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " adapted from http://www.eclipse.org/forums/index.php/t/639454/ ",
        "Line" : 14,
        "CharPositionInLine" : 75
      },
      "1" : {
        "Text" : " clean ui plugin ",
        "Line" : 21,
        "CharPositionInLine" : 31
      },
      "2" : {
        "Text" : "This plugin's configuration is used to store Eclipse m2e settings \n\t\t\t\t\tonly. It has no influence on the Maven build itself. ",
        "Line" : 77,
        "CharPositionInLine" : 62
      },
      "CommentCount" : 3
    },
    "eclipse/plugins/net.sf.orcc.cal.tests/pom.xml" : {
      "ObjectId" : "99c30c54dd6e5a1783a99d8c5034087ca60caf6c",
      "LastModified" : "2016-08-26T08:27:17Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "eclipse/plugins/net.sf.orcc.cal.ui/pom.xml" : {
      "ObjectId" : "694428633e45e49e7bed4443dc00c84a48984aae",
      "LastModified" : "2016-08-26T08:27:17Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "eclipse/plugins/net.sf.orcc.cal/pom.xml" : {
      "ObjectId" : "292c6be67e1072484e182e8a3a3e620383afde2b",
      "LastModified" : "2016-08-26T08:27:17Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "eclipse/plugins/net.sf.orcc.core/pom.xml" : {
      "ObjectId" : "a5bba6c9f7497575193f72977345dd244ebdcf6e",
      "LastModified" : "2016-08-26T08:27:17Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "eclipse/plugins/net.sf.orcc.models/pom.xml" : {
      "ObjectId" : "5cddb3fc4204005ce277c69ac3d298d7f5eb6969",
      "LastModified" : "2016-08-26T08:27:17Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "eclipse/plugins/net.sf.orcc.simulators/pom.xml" : {
      "ObjectId" : "316d5a32dbd40b67abbabd1da7a08c6c6ec0cfca",
      "LastModified" : "2016-08-26T08:27:17Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "eclipse/plugins/net.sf.orcc.site/pom.xml" : {
      "ObjectId" : "a855e57fe45226fd6fed33025f50ec1f67805f99",
      "LastModified" : "2016-08-26T08:27:17Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "eclipse/plugins/net.sf.orcc.ui/pom.xml" : {
      "ObjectId" : "dc0b89c6068adcd4dc78fa8434a5637e247b3b9a",
      "LastModified" : "2016-08-26T08:27:17Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "eclipse/plugins/net.sf.orcc.xdf.ui/pom.xml" : {
      "ObjectId" : "19652f6780f95ace1a5449e9903b1c6e505c1119",
      "LastModified" : "2016-08-26T08:27:17Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "eclipse/plugins/pom.xml" : {
      "ObjectId" : "da6be4d34f0bb04dad58f46627a8c7f3c1183186",
      "LastModified" : "2018-04-03T16:25:00Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " ${basedir} is an environment variable which points to the directory \n\t\t\tof the currently compiled module defined above ",
        "Line" : 42,
        "CharPositionInLine" : 54
      },
      "1" : {
        "Text" : " register the directories src-gen and xtend-gen inside the project \n\t\t\t\tfolder as source directories ",
        "Line" : 88,
        "CharPositionInLine" : 37
      },
      "2" : {
        "Text" : " clean output directories ",
        "Line" : 109,
        "CharPositionInLine" : 37
      },
      "3" : {
        "Text" : " the phase \"generate-resources\" is obviously wrong for compiling \n\t\t\t\t\t\t\tXtend to Java, but it is the only way that the MWE2 workflow is executed \n\t\t\t\t\t\t\t*before* the Xtend compiler is triggered. It is not possible to define orders \n\t\t\t\t\t\t\tfor plug-ins in the same phase ",
        "Line" : 155,
        "CharPositionInLine" : 42
      },
      "CommentCount" : 4
    }
  },
  "FileTypes" : {
    "CMAKE" : 11,
    "MAVEN" : 13
  },
  "ElapsedTime" : 2992
}