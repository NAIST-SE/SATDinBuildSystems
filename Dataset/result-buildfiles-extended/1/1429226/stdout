{
  "Repository" : "1429226",
  "Revision" : "HEAD",
  "ObjectId" : "4ed8ec78452a5c9e1aad55915378f301a4aa4bca",
  "CommitTime" : "2019-04-11T12:25:07Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "b8a057c585c5a3aba5a5178422b53607fce54117",
      "LastModified" : "2018-10-11T17:41:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Avoid source tree pollution\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add a sensible build type default and warning because empty means no optimization and no debug info.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Enable C++14 support and other compiler flags...\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Note: AUTO_PTR is for Boost which won't compile with C++17 otherwise (fixed in Boost git but not in 1.66)\n",
        "Line" : 44,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "#CPACK variables\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/Modules/FindAVCodec.cmake" : {
      "ObjectId" : "fa1ca9fb6b98f60a35adc2ddd59413aa8b6b7e8e",
      "LastModified" : "2015-03-22T21:42:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find FFMPEG libavcodec\n\n# Once done, this will define\n\n#\n\n#  AVCodec_FOUND - the library is available\n\n#  AVCodec_INCLUDE_DIRS - the include directories\n\n#  AVCodec_LIBRARIES - the libraries\n\n#  AVCodec_INCLUDE - the file to #include (may be used in config.h)\n\n#\n\n# See documentation on how to write CMake scripts at\n\n# http://www.cmake.org/Wiki/CMake:How_To_Find_Libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO: pkg-config extra deps: libraw1394 theora vorbisenc\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Modules/FindAVFormat.cmake" : {
      "ObjectId" : "2984a1d46c461a625f8f62b1d06eda3dd6e341f4",
      "LastModified" : "2015-03-22T21:42:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find FFMPEG libavformat\n\n# Once done, this will define\n\n#\n\n#  AVFormat_FOUND - the library is available\n\n#  AVFormat_INCLUDE_DIRS - the include directories\n\n#  AVFormat_LIBRARIES - the libraries\n\n#  AVFormat_INCLUDE - the file to include (may be used in config.h)\n\n#\n\n# See documentation on how to write CMake scripts at\n\n# http://www.cmake.org/Wiki/CMake:How_To_Find_Libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindAVUtil.cmake" : {
      "ObjectId" : "f6478a747ccff463c072d3ee10363bb88d1769d5",
      "LastModified" : "2015-03-22T21:42:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find FFMPEG libavutil\n\n# Once done, this will define\n\n#\n\n#  AVUtil_FOUND - the library is available\n\n#  AVUtil_INCLUDE_DIRS - the include directories\n\n#  AVUtil_LIBRARIES - the libraries\n\n#  AVUtil_INCLUDE - the file to #include (may be used in config.h)\n\n#\n\n# See documentation on how to write CMake scripts at\n\n# http://www.cmake.org/Wiki/CMake:How_To_Find_Libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindAtk.cmake" : {
      "ObjectId" : "ffdbe6fd558c8b08a0ed41f3db5af6b85c12dcca",
      "LastModified" : "2015-03-22T21:42:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Atk 1.0\n\n# Once done, this will define\n\n#\n\n#  Atk_FOUND - system has Atk\n\n#  Atk_INCLUDE_DIRS - the Atk include directories\n\n#  Atk_LIBRARIES - link these to use Atk\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Dependencies\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use pkg-config to get hints about paths\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Main include dir\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Find the library\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set the include dir variables and the libraries and let libfind_process do the rest.\n\n# NOTE: Singular variables for this library, plural for libraries this this lib depends on.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/Modules/FindAtkmm.cmake" : {
      "ObjectId" : "8dc4d28802140916c0d96a6e17e4cb9e7e963e12",
      "LastModified" : "2015-03-22T21:42:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Atkmm 1.6\n\n# Once done, this will define\n\n#\n\n#  Atkmm_FOUND - system has Atkmm\n\n#  Atkmm_INCLUDE_DIRS - the Atkmm include directories\n\n#  Atkmm_LIBRARIES - link these to use Atkmm\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Dependencies\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use pkg-config to get hints about paths\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Main include dir\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Finally the library itself\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set the include dir variables and the libraries and let libfind_process do the rest.\n\n# NOTE: Singular variables for this library, plural for libraries this this lib depends on.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/Modules/FindCairo.cmake" : {
      "ObjectId" : "923fbc251b38cbbf98110c8022b90ef022b1a6b7",
      "LastModified" : "2015-03-22T21:42:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Cairo\n\n# Once done, this will define\n\n#\n\n#  Cairo_FOUND - system has Cairo\n\n#  Cairo_INCLUDE_DIRS - the Cairo include directories\n\n#  Cairo_LIBRARIES - link these to use Cairo\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Cairo depends on Freetype\n",
        "Line" : 9,
        "CharPositionInLine" : 33
      },
      "CommentCount" : 2
    },
    "cmake/Modules/FindCairomm.cmake" : {
      "ObjectId" : "13823d4ff0b092867949a68571f60537df1f2460",
      "LastModified" : "2015-03-22T21:42:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Cairomm 1.0\n\n# Once done, this will define\n\n#\n\n#  Cairomm_FOUND - system has Cairomm\n\n#  Cairomm_INCLUDE_DIRS - the Cairomm include directories\n\n#  Cairomm_LIBRARIES - link these to use Cairomm\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Dependencies\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use pkg-config to get hints about paths\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Main include dir\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Finally the library itself\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set the include dir variables and the libraries and let libfind_process do the rest.\n\n# NOTE: Singular variables for this library, plural for libraries this this lib depends on.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/Modules/FindClanLib.cmake" : {
      "ObjectId" : "cb0f8b4a6c42de3c9c02ce19f37077de6c2680db",
      "LastModified" : "2015-03-22T21:42:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find ClanLib\n\n# Example usage: find_package(ClanLib 0.8 REQUIRED COMPONENTS Core App Display GL Sound)\n\n#\n\n# Once done, this will define\n\n#\n\n#  ClanLib_FOUND - system has ClanLib (all the components requested)\n\n#  ClanLib_INCLUDE_DIRS - the ClanLib include directories\n\n#  ClanLib_LIBRARIES - link these to use ClanLib\n\n#\n\n# See documentation on how to write CMake scripts at\n\n# http://www.cmake.org/Wiki/CMake:How_To_Find_Libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Extract the actual version number\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Modules/FindCppRest.cmake" : {
      "ObjectId" : "21d1e97ab3ef194df9f03d60921559d72443b9cc",
      "LastModified" : "2018-05-31T19:09:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find cpprest\n\n# Once done, this will define\n\n#\n\n#  CppRest_FOUND - system has CppRest\n\n#  CppRest_INCLUDE_DIRS - the CppRest include directories\n\n#  CppRest_LIBRARIES - link these to use CppRest\n\n#\n\n# See documentation on how to write CMake scripts at\n\n# http://www.cmake.org/Wiki/CMake:How_To_Find_Libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindCrypto.cmake" : {
      "ObjectId" : "809ca9d86943afd6956466792e382f378d76483a",
      "LastModified" : "2018-05-31T19:09:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Crypto\n\n# Once done, this will define\n\n#\n\n#  Crypto_FOUND - system has Crypto\n\n#  Crypto_INCLUDE_DIRS - the Crypto include directories\n\n#  Crypto_LIBRARIES - link these to use Crypto\n\n#\n\n# See documentation on how to write CMake scripts at\n\n# http://www.cmake.org/Wiki/CMake:How_To_Find_Libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindDL.cmake" : {
      "ObjectId" : "17352dfaac29c8e560fd34993c82a9eb778fe125",
      "LastModified" : "2018-05-31T19:09:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find dynamic linker library. Does nothing on Windows\n\n# Once done, this will define\n\n#\n\n#  DL_FOUND - system has dl (always set on Windows)\n\n#  DL_INCLUDE_DIRS - dlfcn.h include dir\n\n#  DL_LIBRARIES - link these to use dl\n\n#\n\n# See documentation on how to write CMake scripts at\n\n# http://www.cmake.org/Wiki/CMake:How_To_Find_Libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindFAAC.cmake" : {
      "ObjectId" : "84dc13cc4edb8f21184ecc5c4fe1d5828498ea81",
      "LastModified" : "2018-05-31T19:09:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find FAAC\n\n# Once done, this will define\n\n#\n\n#  FAAC_FOUND - system has FAAC\n\n#  FAAC_INCLUDE_DIRS - the FAAC include directories\n\n#  FAAC_LIBRARIES - link these to use FAAC\n\n#\n\n# See documentation on how to write CMake scripts at\n\n# http://www.cmake.org/Wiki/CMake:How_To_Find_Libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindFontconfig.cmake" : {
      "ObjectId" : "64696216182e86143f0504c698b1925b86d5488c",
      "LastModified" : "2018-05-31T19:09:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Fontconfig\n\n# Once done, this will define\n\n#\n\n#  Fontconfig_FOUND - system has Fontconfig\n\n#  Fontconfig_INCLUDE_DIRS - the Fontconfig include directories\n\n#  Fontconfig_LIBRARIES - link these to use Fontconfig\n\n#\n\n# See documentation on how to write CMake scripts at\n\n# http://www.cmake.org/Wiki/CMake:How_To_Find_Libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindFreetype.cmake" : {
      "ObjectId" : "b26f6377059615f8dd971d667714f8f8f57f3e0b",
      "LastModified" : "2018-05-31T19:09:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Freetype2\n\n# Once done, this will define\n\n#\n\n#  Freetype_FOUND - system has Freetype\n\n#  Freetype_INCLUDE_DIRS - the Freetype include directories\n\n#  Freetype_LIBRARIES - link these to use Freetype\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use pkg-config to get hints about paths\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Include dir\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Finally the library itself\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set the include dir variables and the libraries and let libfind_process do the rest.\n\n# NOTE: Singular variables for this library, plural for libraries this this lib depends on.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/Modules/FindGDK-PixBuf.cmake" : {
      "ObjectId" : "e71f619dea046c34160297b0a5f0de96ccdf6c2f",
      "LastModified" : "2018-05-31T19:09:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find gdk-pixbuf 2.0\n\n# Once done, this will define\n\n#\n\n#  GDK-PixBuf_FOUND - system has GDK-PixBuf\n\n#  GDK-PixBuf_INCLUDE_DIRS - the GDK-PixBuf include directories\n\n#  GDK-PixBuf_LIBRARIES - link these to use GDK-PixBuf\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use pkg-config to get hints about paths\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Main include dir\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Finally the library itself\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set the include dir variables and the libraries and let libfind_process do the rest.\n\n# NOTE: Singular variables for this library, plural for libraries this this lib depends on.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/Modules/FindGDK.cmake" : {
      "ObjectId" : "b0f9ac504731ceae13d7dc66c61aa6255408847d",
      "LastModified" : "2018-05-31T19:09:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find GDK 2.0\n\n# Once done, this will define\n\n#\n\n#  GDK_FOUND - system has GDK\n\n#  GDK_INCLUDE_DIRS - the GDK include directories\n\n#  GDK_LIBRARIES - link these to use GDK\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Dependencies\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use pkg-config to get hints about paths\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Main include dir\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Glib-related libraries also use a separate config header, which is in lib dir\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Finally the library itself\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set the include dir variables and the libraries and let libfind_process do the rest.\n\n# NOTE: Singular variables for this library, plural for libraries this this lib depends on.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/Modules/FindGDKmm.cmake" : {
      "ObjectId" : "23ccb8306a5d689aa16fb2662f3b392e9876208f",
      "LastModified" : "2018-05-31T19:09:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find GDKmm 2.4\n\n# Once done, this will define\n\n#\n\n#  GDKmm_FOUND - system has GDKmm\n\n#  GDKmm_INCLUDE_DIRS - the GDKmm include directories\n\n#  GDKmm_LIBRARIES - link these to use GDKmm\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Dependencies\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use pkg-config to get hints about paths\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Main include dir\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Glib-related libraries also use a separate config header, which is in lib dir\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Finally the library itself\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set the include dir variables and the libraries and let libfind_process do the rest.\n\n# NOTE: Singular variables for this library, plural for libraries this this lib depends on.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/Modules/FindGIO.cmake" : {
      "ObjectId" : "c039042a64b7a878d4ee8167c169f2f81536e5fd",
      "LastModified" : "2018-05-31T19:09:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find GIO 2.0\n\n# Once done, this will define\n\n#\n\n#  GIO_FOUND - system has GIO\n\n#  GIO_INCLUDE_DIRS - the GIO include directories\n\n#  GIO_LIBRARIES - link these to use GIO\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Dependencies\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use pkg-config to get hints about paths\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find the library\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set the include dir variables and the libraries and let libfind_process do the rest.\n\n# NOTE: Singular variables for this library, plural for libraries this this lib depends on.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/Modules/FindGIOmm.cmake" : {
      "ObjectId" : "bed25691e4758ebe4efe9520807c1d7da0c9ea5b",
      "LastModified" : "2018-05-31T19:09:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find GIOmm 2.4\n\n# Once done, this will define\n\n#\n\n#  GIOmm_FOUND - system has GIOmm\n\n#  GIOmm_INCLUDE_DIRS - the GIOmm include directories\n\n#  GIOmm_LIBRARIES - link these to use GIOmm\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Dependencies\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use pkg-config to get hints about paths\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Main include dir\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Finally the library itself\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set the include dir variables and the libraries and let libfind_process do the rest.\n\n# NOTE: Singular variables for this library, plural for libraries this this lib depends on.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/Modules/FindGLEW.cmake" : {
      "ObjectId" : "5b01c4288bca797283b1703365793ea02b4354bf",
      "LastModified" : "2018-05-31T19:09:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find GLEW\n\n# Once done, this will define\n\n#\n\n#  GLEW_FOUND - system has OpenGL (GL and GLU)\n\n#  GLEW_INCLUDE_DIRS - the OpenGL include directories\n\n#  GLEW_LIBRARIES - link these to use OpenGL\n\n#\n\n# See documentation on how to write CMake scripts at\n\n# http://www.cmake.org/Wiki/CMake:How_To_Find_Libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# GLEW is often installed in the same place as OpenGL\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Modules/FindGLFW.cmake" : {
      "ObjectId" : "ad85f64436cfb81ddfdff1c9d66d07894b34041c",
      "LastModified" : "2018-05-31T19:09:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find GLFW\n\n# Once done, this will define\n\n#\n\n#  GLFW_FOUND - system has OpenGL (GL and GLU)\n\n#  GLFW_INCLUDE_DIRS - the OpenGL include directories\n\n#  GLFW_LIBRARIES - link these to use OpenGL\n\n#\n\n# See documentation on how to write CMake scripts at\n\n# http://www.cmake.org/Wiki/CMake:How_To_Find_Libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Dependencies\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Modules/FindGLM.cmake" : {
      "ObjectId" : "2d9009298ff0e5906a0e075d08790c860476e129",
      "LastModified" : "2018-10-17T16:47:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FindGLM - attempts to locate the glm matrix/vector library.\n\n#\n\n# This module defines the following variables (on success):\n\n#   GLM_INCLUDE_DIRS  - where to find glm/glm.hpp\n\n#   GLM_FOUND         - if the library was successfully located\n\n#\n\n# It is trying a few standard installation locations, but can be customized\n\n# with the following variables:\n\n#   GLM_ROOT_DIR      - root directory of a glm installation\n\n#                       Headers are expected to be found in either:\n\n#                       <GLM_ROOT_DIR>/glm/glm.hpp           OR\n\n#                       <GLM_ROOT_DIR>/include/glm/glm.hpp\n\n#                       This variable can either be a cmake or environment\n\n#                       variable. Note however that changing the value\n\n#                       of the environment varible will NOT result in\n\n#                       re-running the header search and therefore NOT\n\n#                       adjust the variables set by this module.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2012 Carsten Neumann\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# default search dirs\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# check environment variable\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# put user specified location at beginning of search\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# locate header\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/Modules/FindGObject.cmake" : {
      "ObjectId" : "f75524f7346da32f1b47b1cb607c733ba715aa1b",
      "LastModified" : "2018-10-17T16:47:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find GObject 2.0\n\n# Once done, this will define\n\n#\n\n#  GObject_FOUND - system has GObject\n\n#  GObject_INCLUDE_DIRS - the GObject include directories\n\n#  GObject_LIBRARIES - link these to use GObject\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Dependencies\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use pkg-config to get hints about paths\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find the library\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/Modules/FindGStreamer.cmake" : {
      "ObjectId" : "4002c604d477443ade5c42540a234ce629e89c39",
      "LastModified" : "2018-10-17T16:47:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find GStreamer\n\n# Once done, this will define\n\n#\n\n#  GStreamer_FOUND - system has GStreamer\n\n#  GStreamer_INCLUDE_DIRS - the GStreamer include directories\n\n#  GStreamer_LIBRARIES - link these to use GStreamer\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Dependencies\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use pkg-config to get hints about paths\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Include dir\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Finally the library itself\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set the include dir variables and the libraries and let libfind_process do the rest.\n\n# NOTE: Singular variables for this library, plural for libraries this this lib depends on.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/Modules/FindGTK.cmake" : {
      "ObjectId" : "a7ead72f0bf4f72c945b768ed3127cd68e1321e7",
      "LastModified" : "2018-10-17T16:47:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find GTK 2.0\n\n# Once done, this will define\n\n#\n\n#  GTK_FOUND - system has GTK\n\n#  GTK_INCLUDE_DIRS - the GTK include directories\n\n#  GTK_LIBRARIES - link these to use GTK\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Dependencies\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use pkg-config to get hints about paths\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Main include dir\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Finally the library itself\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set the include dir variables and the libraries and let libfind_process do the rest.\n\n# NOTE: Singular variables for this library, plural for libraries this this lib depends on.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/Modules/FindGTKmm.cmake" : {
      "ObjectId" : "7e737c79dd780a9e5102de7b0d397c1acef5597a",
      "LastModified" : "2018-10-17T16:47:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find GTKmm 2.4\n\n# Once done, this will define\n\n#\n\n#  GTKmm_FOUND - system has GTKmm\n\n#  GTKmm_INCLUDE_DIRS - the GTKmm include directories\n\n#  GTKmm_LIBRARIES - link these to use GTKmm\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Dependencies\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use pkg-config to get hints about paths\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Main include dir\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Glib-related libraries also use a separate config header, which is in lib dir\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Finally the library itself\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set the include dir variables and the libraries and let libfind_process do the rest.\n\n# NOTE: Singular variables for this library, plural for libraries this this lib depends on.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/Modules/FindGlib.cmake" : {
      "ObjectId" : "3b976e8cbdfcb9ca25e3398c14c12aa9e683e47c",
      "LastModified" : "2018-10-17T16:47:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Glib-2.0\n\n# Once done, this will define\n\n#\n\n#  Glib_FOUND - system has Glib\n\n#  Glib_INCLUDE_DIRS - the Glib include directories\n\n#  Glib_LIBRARIES - link these to use Glib\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use pkg-config to get hints about paths\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Main include dir\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Glib-related libraries also use a separate config header, which is in lib dir\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Finally the library itself\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set the include dir variables and the libraries and let libfind_process do the rest.\n\n# NOTE: Singular variables for this library, plural for libraries this this lib depends on.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/Modules/FindGlibmm.cmake" : {
      "ObjectId" : "c0089cc045fd776112b80db39ae32a65f00b327e",
      "LastModified" : "2018-10-17T16:47:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Glibmm-2.4\n\n# Once done, this will define\n\n#\n\n#  Glibmm_FOUND - system has Glibmm\n\n#  Glibmm_INCLUDE_DIRS - the Glibmm include directories\n\n#  Glibmm_LIBRARIES - link these to use Glibmm\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Dependencies\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use pkg-config to get hints about paths\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Main include dir\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Glib-related libraries also use a separate config header, which is in lib dir\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Finally the library itself\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/Modules/FindICU.cmake" : {
      "ObjectId" : "7dbc02c86a80213b556b853d4103536f9e034a39",
      "LastModified" : "2018-10-17T16:47:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindICU\n\n# -------\n\n#\n\n# Find the International Components for Unicode (ICU) libraries and\n\n# programs.\n\n#\n\n# This module supports multiple components.\n\n# Components can include any of: ``data``, ``i18n``, ``io``, ``le``,\n\n# ``lx``, ``test``, ``tu`` and ``uc``.\n\n#\n\n# Note that on Windows ``data`` is named ``dt`` and ``i18n`` is named\n\n# ``in``; any of the names may be used, and the appropriate\n\n# platform-specific library name will be automatically selected.\n\n#\n\n# This module reports information about the ICU installation in\n\n# several variables.  General variables::\n\n#\n\n#   ICU_VERSION - ICU release version\n\n#   ICU_FOUND - true if the main programs and libraries were found\n\n#   ICU_LIBRARIES - component libraries to be linked\n\n#   ICU_INCLUDE_DIRS - the directories containing the ICU headers\n\n#\n\n# Imported targets::\n\n#\n\n#   ICU::<C>\n\n#\n\n# Where ``<C>`` is the name of an ICU component, for example\n\n# ``ICU::i18n``.\n\n#\n\n# ICU programs are reported in::\n\n#\n\n#   ICU_GENCNVAL_EXECUTABLE - path to gencnval executable\n\n#   ICU_ICUINFO_EXECUTABLE - path to icuinfo executable\n\n#   ICU_GENBRK_EXECUTABLE - path to genbrk executable\n\n#   ICU_ICU-CONFIG_EXECUTABLE - path to icu-config executable\n\n#   ICU_GENRB_EXECUTABLE - path to genrb executable\n\n#   ICU_GENDICT_EXECUTABLE - path to gendict executable\n\n#   ICU_DERB_EXECUTABLE - path to derb executable\n\n#   ICU_PKGDATA_EXECUTABLE - path to pkgdata executable\n\n#   ICU_UCONV_EXECUTABLE - path to uconv executable\n\n#   ICU_GENCFU_EXECUTABLE - path to gencfu executable\n\n#   ICU_MAKECONV_EXECUTABLE - path to makeconv executable\n\n#   ICU_GENNORM2_EXECUTABLE - path to gennorm2 executable\n\n#   ICU_GENCCODE_EXECUTABLE - path to genccode executable\n\n#   ICU_GENSPREP_EXECUTABLE - path to gensprep executable\n\n#   ICU_ICUPKG_EXECUTABLE - path to icupkg executable\n\n#   ICU_GENCMN_EXECUTABLE - path to gencmn executable\n\n#\n\n# ICU component libraries are reported in::\n\n#\n\n#   ICU_<C>_FOUND - ON if component was found\n\n#   ICU_<C>_LIBRARIES - libraries for component\n\n#\n\n# Note that ``<C>`` is the uppercased name of the component.\n\n#\n\n# This module reads hints about search results from::\n\n#\n\n#   ICU_ROOT - the root of the ICU installation\n\n#\n\n# The environment variable ``ICU_ROOT`` may also be used; the\n\n# ICU_ROOT variable takes precedence.\n\n#\n\n# The following cache variables may also be set::\n\n#\n\n#   ICU_<P>_EXECUTABLE - the path to executable <P>\n\n#   ICU_INCLUDE_DIR - the directory containing the ICU headers\n\n#   ICU_<C>_LIBRARY - the library for component <C>\n\n#\n\n# .. note::\n\n#\n\n#   In most cases none of the above variables will require setting,\n\n#   unless multiple ICU versions are available and a specific version\n\n#   is required.\n\n#\n\n# Other variables one may set to control this module are::\n\n#\n\n#   ICU_DEBUG - Set to ON to enable debug output from FindICU.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Written by Roger Leigh <rleigh@codelibre.net>\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The ICU checks are contained in a function due to the large number\n\n# of temporary variables needed.\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set up search paths, taking compiler into account.  Search ICU_ROOT,\n\n# with ICU_ROOT in the environment as a fallback if unset.\n",
        "Line" : 106,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Try also MacOS homebrew install path\n",
        "Line" : 118,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# 64-bit binary directory\n",
        "Line" : 122,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# 64-bit library directory\n",
        "Line" : 124,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Generic 64-bit and 32-bit directories\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Find all ICU programs\n",
        "Line" : 133,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Find include directory\n",
        "Line" : 146,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Get version\n",
        "Line" : 154,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Find all ICU libraries\n",
        "Line" : 166,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Special case deliberate library naming mismatches between Unix\n\n# and Windows builds\n",
        "Line" : 177,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Note there is no debug variant at present\n",
        "Line" : 185,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# Note there is no debug variant at present\n",
        "Line" : 190,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 16
    },
    "cmake/Modules/FindJack.cmake" : {
      "ObjectId" : "110ed9ad9986da26649c537b060aaf752af3d824",
      "LastModified" : "2018-10-17T16:47:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Jack\n\n# Once done, this will define\n\n#\n\n#  Jack_FOUND - system has Jack\n\n#  Jack_INCLUDE_DIRS - the Jack include directories\n\n#  Jack_LIBRARIES - link these to use Jack\n\n#\n\n# See documentation on how to write CMake scripts at\n\n# http://www.cmake.org/Wiki/CMake:How_To_Find_Libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindLibEpoxy.cmake" : {
      "ObjectId" : "110f42087bab7aa34e4479b008368cac07d589b9",
      "LastModified" : "2018-10-17T16:47:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find LibEpoxy\n\n# Once done, this will define\n\n#\n\n#  LibEpoxy_FOUND - system has LibEpoxy\n\n#  LibEpoxy_INCLUDE_DIRS - the LibEpoxy include directories\n\n#  LibEpoxy_LIBRARIES - link these to use LibEpoxy\n\n#\n\n# See documentation on how to write CMake scripts at\n\n# http://www.cmake.org/Wiki/CMake:How_To_Find_Libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindLibPulse.cmake" : {
      "ObjectId" : "6e062027626b62b3057defd59af4f7332963539b",
      "LastModified" : "2018-10-17T16:47:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find LibPulse\n\n# Once done, this will define\n\n#\n\n#  LibPulse_FOUND - system has LibPulse\n\n#  LibPulse_INCLUDE_DIRS - the LibPulse include directories\n\n#  LibPulse_LIBRARIES - link these to use LibPulse\n\n#\n\n# See documentation on how to write CMake scripts at\n\n# http://www.cmake.org/Wiki/CMake:How_To_Find_Libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindLibPulseSimple.cmake" : {
      "ObjectId" : "25b5ac798407dc4ce2de7ed145a3a8dc1c2871c7",
      "LastModified" : "2018-10-17T16:47:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find LibPulseSimple\n\n# Once done, this will define\n\n#\n\n#  LibPulseSimple_FOUND - system has LibPulseSimple\n\n#  LibPulseSimple_INCLUDE_DIRS - the LibPulseSimple include directories\n\n#  LibPulseSimple_LIBRARIES - link these to use LibPulseSimple\n\n#\n\n# See documentation on how to write CMake scripts at\n\n# http://www.cmake.org/Wiki/CMake:How_To_Find_Libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindLibRSVG.cmake" : {
      "ObjectId" : "1a9698e3facada7f754db975617438a924f81b14",
      "LastModified" : "2018-10-17T16:47:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find LibRSVG\n\n# Once done, this will define\n\n#\n\n#  LibRSVG_FOUND - system has LibRSVG\n\n#  LibRSVG_INCLUDE_DIRS - the LibRSVG include directories\n\n#  LibRSVG_LIBRARIES - link these to use LibRSVG\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindLibXML++.cmake" : {
      "ObjectId" : "5258a78d7872882f9c2eb9a2e8567b3430cd590a",
      "LastModified" : "2018-10-17T16:47:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find LibXML++ 3.0 or 2.6 (defaulting)\n\n# Once done, this will define\n\n#\n\n#  LibXML++_FOUND - system has LibXML++\n\n#  LibXML++_INCLUDE_DIRS - the LibXML++ include directories\n\n#  LibXML++_LIBRARIES - link these to use LibXML++\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Dependencies\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use pkg-config to get hints about paths\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Main include dir\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Glib-related libraries also use a separate config header, which is in lib dir\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Finally the library itself\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/Modules/FindLibXML2.cmake" : {
      "ObjectId" : "5abd0bbc0a86951244623d78e74f97a5b4e59427",
      "LastModified" : "2018-10-17T16:47:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find LibXML2\n\n# Once done, this will define\n\n#\n\n#  LibXML2_FOUND - system has LibXML2\n\n#  LibXML2_INCLUDE_DIRS - the LibXML2 include directories\n\n#  LibXML2_LIBRARIES - link these to use LibXML2\n\n#\n\n# See documentation on how to write CMake scripts at\n\n# http://www.cmake.org/Wiki/CMake:How_To_Find_Libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindMagick++.cmake" : {
      "ObjectId" : "e663e895a0ebdd62784ea4d48946df22ca54eded",
      "LastModified" : "2018-10-17T16:47:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find ImageMagick++\n\n# Once done, this will define\n\n#\n\n#  Magick++_FOUND - system has Magick++\n\n#  Magick++_INCLUDE_DIRS - the Magick++ include directories\n\n#  Magick++_LIBRARIES - link these to use Magick++\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Dependencies\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use pkg-config to get hints about paths\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Include dir\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Finally the library itself\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Process Magick++, depends on Magick\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/Modules/FindMagick.cmake" : {
      "ObjectId" : "2915e72833f57c19e0bed5783ff4585f2441c1d9",
      "LastModified" : "2018-10-17T16:47:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find ImageMagick\n\n# Once done, this will define\n\n#\n\n#  Magick_FOUND - system has Magick\n\n#  Magick_INCLUDE_DIRS - the Magick include directories\n\n#  Magick_LIBRARIES - link these to use Magick\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use pkg-config to get hints about paths\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Include dir\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Finally the library itself\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/Modules/FindOpenGL.cmake" : {
      "ObjectId" : "5cc8c98dd5ec222c7f2a07a14af06e4f94cfd501",
      "LastModified" : "2018-10-17T16:47:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find OpenGL\n\n# Once done, this will define\n\n#\n\n#  OpenGL_FOUND - system has OpenGL (GL and GLU)\n\n#  OpenGL_INCLUDE_DIRS - the OpenGL include directories\n\n#  OpenGL_LIBRARIES - link these to use OpenGL\n\n#  OpenGL_GL_LIBRARY - only GL\n\n#  OpenGL_GLU_LIBRARY - only GLU\n\n#\n\n# See documentation on how to write CMake scripts at\n\n# http://www.cmake.org/Wiki/CMake:How_To_Find_Libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#In MSVC, no need to link, just this hack to get CMake happy\n",
        "Line" : 22,
        "CharPositionInLine" : 9
      },
      "CommentCount" : 2
    },
    "cmake/Modules/FindPThread.cmake" : {
      "ObjectId" : "892c8377bcbc84a0420e7ec92aa500ea19da56df",
      "LastModified" : "2018-10-17T16:47:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find PThread\n\n# Once done, this will define\n\n#\n\n#  PThread_FOUND - system has PThread\n\n#  PThread_LIBRARIES - link these to use PThread\n\n#\n\n# See documentation on how to write CMake scripts at\n\n# http://www.cmake.org/Wiki/CMake:How_To_Find_Libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindPackageHandleStandardArgs.cmake" : {
      "ObjectId" : "b851a90ff11a615c17f4399fbdb9ab3d8bf79b7c",
      "LastModified" : "2018-10-17T16:47:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[=======================================================================[.rst:\nFindPackageHandleStandardArgs\n-----------------------------\n\nThis module provides a function intended to be used in :ref:`Find Modules`\nimplementing :command:`find_package(<PackageName>)` calls.  It handles the\n``REQUIRED``, ``QUIET`` and version-related arguments of ``find_package``.\nIt also sets the ``<PackageName>_FOUND`` variable.  The package is\nconsidered found if all variables listed contain valid results, e.g.\nvalid filepaths.\n\n.. command:: find_package_handle_standard_args\n\n  There are two signatures::\n\n    find_package_handle_standard_args(<PackageName>\n      (DEFAULT_MSG|<custom-failure-message>)\n      <required-var>...\n      )\n\n    find_package_handle_standard_args(<PackageName>\n      [FOUND_VAR <result-var>]\n      [REQUIRED_VARS <required-var>...]\n      [VERSION_VAR <version-var>]\n      [HANDLE_COMPONENTS]\n      [CONFIG_MODE]\n      [FAIL_MESSAGE <custom-failure-message>]\n      )\n\n  The ``<PackageName>_FOUND`` variable will be set to ``TRUE`` if all\n  the variables ``<required-var>...`` are valid and any optional\n  constraints are satisfied, and ``FALSE`` otherwise.  A success or\n  failure message may be displayed based on the results and on\n  whether the ``REQUIRED`` and/or ``QUIET`` option was given to\n  the :command:`find_package` call.\n\n  The options are:\n\n  ``(DEFAULT_MSG|<custom-failure-message>)``\n    In the simple signature this specifies the failure message.\n    Use ``DEFAULT_MSG`` to ask for a default message to be computed\n    (recommended).  Not valid in the full signature.\n\n  ``FOUND_VAR <result-var>``\n    Obsolete.  Specifies either ``<PackageName>_FOUND`` or\n    ``<PACKAGENAME>_FOUND`` as the result variable.  This exists only\n    for compatibility with older versions of CMake and is now ignored.\n    Result variables of both names are always set for compatibility.\n\n  ``REQUIRED_VARS <required-var>...``\n    Specify the variables which are required for this package.\n    These may be named in the generated failure message asking the\n    user to set the missing variable values.  Therefore these should\n    typically be cache entries such as ``FOO_LIBRARY`` and not output\n    variables like ``FOO_LIBRARIES``.\n\n  ``VERSION_VAR <version-var>``\n    Specify the name of a variable that holds the version of the package\n    that has been found.  This version will be checked against the\n    (potentially) specified required version given to the\n    :command:`find_package` call, including its ``EXACT`` option.\n    The default messages include information about the required\n    version and the version which has been actually found, both\n    if the version is ok or not.\n\n  ``HANDLE_COMPONENTS``\n    Enable handling of package components.  In this case, the command\n    will report which components have been found and which are missing,\n    and the ``<PackageName>_FOUND`` variable will be set to ``FALSE``\n    if any of the required components (i.e. not the ones listed after\n    the ``OPTIONAL_COMPONENTS`` option of :command:`find_package`) are\n    missing.\n\n  ``CONFIG_MODE``\n    Specify that the calling find module is a wrapper around a\n    call to ``find_package(<PackageName> NO_MODULE)``.  This implies\n    a ``VERSION_VAR`` value of ``<PackageName>_VERSION``.  The command\n    will automatically check whether the package configuration file\n    was found.\n\n  ``FAIL_MESSAGE <custom-failure-message>``\n    Specify a custom failure message instead of using the default\n    generated message.  Not recommended.\n\nExample for the simple signature:\n\n.. code-block:: cmake\n\n  find_package_handle_standard_args(LibXml2 DEFAULT_MSG\n    LIBXML2_LIBRARY LIBXML2_INCLUDE_DIR)\n\nThe ``LibXml2`` package is considered to be found if both\n``LIBXML2_LIBRARY`` and ``LIBXML2_INCLUDE_DIR`` are valid.\nThen also ``LibXml2_FOUND`` is set to ``TRUE``.  If it is not found\nand ``REQUIRED`` was used, it fails with a\n:command:`message(FATAL_ERROR)`, independent whether ``QUIET`` was\nused or not.  If it is found, success will be reported, including\nthe content of the first ``<required-var>``.  On repeated CMake runs,\nthe same message will not be printed again.\n\nExample for the full signature:\n\n.. code-block:: cmake\n\n  find_package_handle_standard_args(LibArchive\n    REQUIRED_VARS LibArchive_LIBRARY LibArchive_INCLUDE_DIR\n    VERSION_VAR LibArchive_VERSION)\n\nIn this case, the ``LibArchive`` package is considered to be found if\nboth ``LibArchive_LIBRARY`` and ``LibArchive_INCLUDE_DIR`` are valid.\nAlso the version of ``LibArchive`` will be checked by using the version\ncontained in ``LibArchive_VERSION``.  Since no ``FAIL_MESSAGE`` is given,\nthe default messages will be printed.\n\nAnother example for the full signature:\n\n.. code-block:: cmake\n\n  find_package(Automoc4 QUIET NO_MODULE HINTS /opt/automoc4)\n  find_package_handle_standard_args(Automoc4  CONFIG_MODE)\n\nIn this case, a ``FindAutmoc4.cmake`` module wraps a call to\n``find_package(Automoc4 NO_MODULE)`` and adds an additional search\ndirectory for ``automoc4``.  Then the call to\n``find_package_handle_standard_args`` produces a proper success/failure\nmessage.\n#]=======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# internal helper macro\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# internal helper macro to generate the failure message when used in CONFIG_MODE:\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# <name>_CONFIG is set, but FOUND is false, this means that some other of the REQUIRED_VARS was not found:\n",
        "Line" : 148,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# If _CONSIDERED_CONFIGS is set, the config-file has been found, but no suitable version.\n\n# List them all in the error message:\n",
        "Line" : 152,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Simple case: No Config-file was found at all:\n",
        "Line" : 169,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# set up the arguments for CMAKE_PARSE_ARGUMENTS and check whether we are in\n\n# new extended or in the \"old\" mode:\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# now that we collected all arguments, process them\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# In config-mode, we rely on the variable <package>_CONFIG, which is set by find_package()\n\n# when it successfully found the config-file, including version checking:\n",
        "Line" : 209,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# collect all variables which were not found, so they can be printed, so the\n\n# user knows better what went wrong (#6375)\n",
        "Line" : 236,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# check if all passed variables are valid\n",
        "Line" : 240,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# component handling\n",
        "Line" : 258,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# version handling:\n",
        "Line" : 289,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# check with DEFINED here as the requested or found version may be \"0\"\n",
        "Line" : 294,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# exact version required\n",
        "Line" : 298,
        "CharPositionInLine" : 44
      },
      "16" : {
        "Text" : "# count the dots in the version string\n",
        "Line" : 299,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# add one dot because there is one dot more than there are components\n",
        "Line" : 301,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# Because of the C++ implementation of find_package() ${_NAME}_FIND_VERSION_COUNT\n\n# is at most 4 here. Therefore a simple lookup table is used.\n",
        "Line" : 304,
        "CharPositionInLine" : 10
      },
      "19" : {
        "Text" : "# minimum version specified:\n",
        "Line" : 334,
        "CharPositionInLine" : 17
      },
      "20" : {
        "Text" : "# if the package was not found, but a version was given, add that to the output:\n",
        "Line" : 345,
        "CharPositionInLine" : 6
      },
      "21" : {
        "Text" : "# print the result:\n",
        "Line" : 366,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 22
    },
    "cmake/Modules/FindPackageMessage.cmake" : {
      "ObjectId" : "6821cee4f77a9d84c74f2c140870a2163ae5a5f0",
      "LastModified" : "2018-10-17T16:47:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindPackageMessage\n\n# ------------------\n\n#\n\n#\n\n#\n\n# FIND_PACKAGE_MESSAGE(<name> \"message for user\" \"find result details\")\n\n#\n\n# This macro is intended to be used in FindXXX.cmake modules files.  It\n\n# will print a message once for each unique find result.  This is useful\n\n# for telling the user where a package was found.  The first argument\n\n# specifies the name (XXX) of the package.  The second argument\n\n# specifies the message to display.  The third argument lists details\n\n# about the find result so that if they change the message will be\n\n# displayed again.  The macro also obeys the QUIET argument to the\n\n# find_package command.\n\n#\n\n# Example:\n\n#\n\n# ::\n\n#\n\n#   if(X11_FOUND)\n\n#     FIND_PACKAGE_MESSAGE(X11 \"Found X11: ${X11_X11_LIB}\"\n\n#       \"[${X11_X11_LIB}][${X11_INCLUDE_DIR}]\")\n\n#   else()\n\n#    ...\n\n#   endif()\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Avoid printing a message repeatedly for the same find result.\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# The message has not yet been printed.\n",
        "Line" : 38,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# Save the find details in the cache to avoid printing the same\n\n# message again.\n",
        "Line" : 41,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 5
    },
    "cmake/Modules/FindPango.cmake" : {
      "ObjectId" : "bdddb9e03eb732e9fbb03f6a6b37f054eaa3ab86",
      "LastModified" : "2018-10-17T16:47:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Pango\n\n# Once done, this will define\n\n#\n\n#  Pango_FOUND - system has Pango\n\n#  Pango_INCLUDE_DIRS - the Pango include directories\n\n#  Pango_LIBRARIES - link these to use Pango\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Dependencies\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use pkg-config to get hints about paths\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Include dir\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Finally the library itself\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/Modules/FindPangoCairo.cmake" : {
      "ObjectId" : "a26f83bd034426d8d643cf0cbd6c7481a1546844",
      "LastModified" : "2018-10-17T16:47:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find PangoCairo\n\n# Once done, this will define\n\n#\n\n#  PangoCairo_FOUND - system has Pango\n\n#  PangoCairo_INCLUDE_DIRS - the Pango include directories\n\n#  PangoCairo_LIBRARIES - link these to use Pango\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Dependencies\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use pkg-config to get hints about paths\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Include dir\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Finally the library itself\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set the include dir variables and the libraries and let libfind_process do the rest.\n\n# NOTE: Singular variables for this library, plural for libraries this this lib depends on.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/Modules/FindPangomm.cmake" : {
      "ObjectId" : "7aeb678aaf27491e36fe5ee89127358b68421586",
      "LastModified" : "2018-10-17T16:47:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Pangomm 1.4\n\n# Once done, this will define\n\n#\n\n#  Pangomm_FOUND - system has Pangomm\n\n#  Pangomm_INCLUDE_DIRS - the Pangomm include directories\n\n#  Pangomm_LIBRARIES - link these to use Pangomm\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Dependencies\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use pkg-config to get hints about paths\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Main include dir\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Finally the library itself\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set the include dir variables and the libraries and let libfind_process do the rest.\n\n# NOTE: Singular variables for this library, plural for libraries this this lib depends on.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/Modules/FindPortAudio.cmake" : {
      "ObjectId" : "01cfe1448a01db084e16f29acdd8598f96aabd5d",
      "LastModified" : "2018-10-17T16:47:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find PortAudio\n\n# Once done, this will define\n\n#\n\n#  PortAudio_FOUND - system has PortAudio\n\n#  PortAudio_INCLUDE_DIRS - the PortAudio include directories\n\n#  PortAudio_LIBRARIES - link these to use PortAudio\n\n#  PortAudio_VERSION - detected version of PortAudio\n\n#\n\n# See documentation on how to write CMake scripts at\n\n# http://www.cmake.org/Wiki/CMake:How_To_Find_Libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindPortMidi.cmake" : {
      "ObjectId" : "ef3fa1f44049882c989c88f488cd269cefc40343",
      "LastModified" : "2018-10-17T16:47:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find PortMidi\n\n# Once done, this will define\n\n#\n\n#  PortMidi_FOUND - system has PortMidi\n\n#  PortMidi_INCLUDE_DIRS - the PortMidi include directories\n\n#  PortMidi_LIBRARIES - link these to use PortMidi\n\n#  PortMidi_VERSION - detected version of PortMidi\n\n#\n\n# See documentation on how to write CMake scripts at\n\n# http://www.cmake.org/Wiki/CMake:How_To_Find_Libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Porttime library is merged to Portmidi in new versions, so\n\n# we work around problems by adding it only if it's present\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Modules/FindProjectM.cmake" : {
      "ObjectId" : "17e0b23c4b42124a2aef22a07ed864b1c4cbcf49",
      "LastModified" : "2018-10-17T16:47:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find ProjectM\n\n# Once done, this will define\n\n#\n\n#  ProjectM_FOUND - system has ProjectM\n\n#  ProjectM_INCLUDE_DIRS - the ProjectM include directories\n\n#  ProjectM_LIBRARIES - link these to use ProjectM\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use pkg-config to get hints about paths\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Include dir\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Finally the library itself\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set the include dir variables and the libraries and let libfind_process do the rest.\n\n# NOTE: Singular variables for this library, plural for libraries this this lib depends on.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/Modules/FindSDL.cmake" : {
      "ObjectId" : "2d4e557020b376472503310780be8fa238b93ea8",
      "LastModified" : "2018-10-17T16:47:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find SDL\n\n# Once done, this will define\n\n#\n\n#  SDL_FOUND - system has SDL\n\n#  SDL_INCLUDE_DIRS - the SDL include directories\n\n#  SDL_LIBRARIES - link these to use SDL\n\n#  SDL_SDL_LIBRARY - only libSDL\n\n#  SDL_SDLmain_LIBRARY - only libSDLmain\n\n#  SDL_SOURCES - add this in the source file list of your target (hack for OSX)\n\n#\n\n# See documentation on how to write CMake scripts at\n\n# http://www.cmake.org/Wiki/CMake:How_To_Find_Libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Process others than OSX with native SDL normally\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Special processing for OSX native SDL\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# All OSX versions need Cocoa\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/Modules/FindSDL2.cmake" : {
      "ObjectId" : "b3889d5ba0e52b10e793ed884c5493df6af8c1e5",
      "LastModified" : "2018-10-17T16:47:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find SDL2\n\n# Once done, this will define\n\n#\n\n#  SDL2_FOUND - system has SDL2\n\n#  SDL2_INCLUDE_DIRS - the SDL2 include directories\n\n#  SDL2_LIBRARIES - link these to use SDL2\n\n#  SDL2_SDL_LIBRARY - only libSDL2\n\n#  SDL2_SDLmain_LIBRARY - only libSDL2main\n\n#  SDL2_SOURCES - add this in the source file list of your target (hack for OSX)\n\n#\n\n# See documentation on how to write CMake scripts at\n\n# http://www.cmake.org/Wiki/CMake:How_To_Find_Libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Process others than OSX with native SDL normally\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Special processing for OSX native SDL\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# All OSX versions need Cocoa\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/Modules/FindSDL_image.cmake" : {
      "ObjectId" : "34e7011d01a80504e93c0c62fd781ba3888e4a4a",
      "LastModified" : "2018-10-17T16:47:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find SDL_image\n\n# Once done, this will define\n\n#\n\n#  SDL_image_FOUND - system has SDL_image\n\n#  SDL_image_INCLUDE_DIRS - the SDL include directories\n\n#  SDL_image_LIBRARIES - link these to use SDL_image\n\n#\n\n# See documentation on how to write CMake scripts at\n\n# http://www.cmake.org/Wiki/CMake:How_To_Find_Libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindSDL_mixer.cmake" : {
      "ObjectId" : "5e369a5ba422d5870bbf09c0abdf29defda729b8",
      "LastModified" : "2018-10-17T16:47:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find SDL\n\n# Once done, this will define\n\n#\n\n#  SDL_mixer_FOUND - system has SDL\n\n#  SDL_mixer_INCLUDE_DIRS - the SDL include directories\n\n#  SDL_mixer_LIBRARIES - link these to use SDL\n\n#  SDL_mixer_SDL_mixer_LIBRARY - only libSDL\n\n#  SDL_mixer_SDLmain_LIBRARY - only libSDLmain\n\n#  SDL_mixer_SOURCES - add this in the source file list of your target (hack for OSX)\n\n#\n\n# See documentation on how to write CMake scripts at\n\n# http://www.cmake.org/Wiki/CMake:How_To_Find_Libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindSWResample.cmake" : {
      "ObjectId" : "ce4dffd139e364b7269bb8fd71d6dcd352ff2187",
      "LastModified" : "2018-10-17T16:47:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find FFMPEG libswresample\n\n# Once done, this will define\n\n#\n\n#  SWResample_FOUND - the library is available\n\n#  SWResample_INCLUDE_DIRS - the include directories\n\n#  SWResample_LIBRARIES - the libraries\n\n#  SWResample_INCLUDE - the file to include (may be used in config.h)\n\n#\n\n# See documentation on how to write CMake scripts at\n\n# http://www.cmake.org/Wiki/CMake:How_To_Find_Libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindSWScale.cmake" : {
      "ObjectId" : "a125a65be796be6467801c0245d74f168e446cf9",
      "LastModified" : "2018-10-17T16:47:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find FFMPEG libswscale\n\n# Once done, this will define\n\n#\n\n#  SWScale_FOUND - the library is available\n\n#  SWScale_INCLUDE_DIRS - the include directories\n\n#  SWScale_LIBRARIES - the libraries\n\n#  SWScale_INCLUDE - the file to include (may be used in config.h)\n\n#\n\n# See documentation on how to write CMake scripts at\n\n# http://www.cmake.org/Wiki/CMake:How_To_Find_Libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindSigC++.cmake" : {
      "ObjectId" : "0d7ea0c2a475d07bbef9a34670ad11b92dbf40fd",
      "LastModified" : "2018-10-17T16:47:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find SigC++-2.0\n\n# Once done, this will define\n\n#\n\n#  SigC++_FOUND - system has SigC++\n\n#  SigC++_INCLUDE_DIRS - the SigC++ include directories\n\n#  SigC++_LIBRARIES - link these to use SigC++\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use pkg-config to get hints about paths\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Main include dir\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Glib-related libraries also use a separate config header, which is in lib dir\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Finally the library itself\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/Modules/FindSsl.cmake" : {
      "ObjectId" : "9bcf6823bdbae6e10081623621630f1928fae40b",
      "LastModified" : "2018-10-17T16:47:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Ssl\n\n# Once done, this will define\n\n#\n\n#  Ssl_FOUND - system has Ssl\n\n#  Ssl_INCLUDE_DIRS - the Ssl include directories\n\n#  Ssl_LIBRARIES - link these to use Ssl\n\n#\n\n# See documentation on how to write CMake scripts at\n\n# http://www.cmake.org/Wiki/CMake:How_To_Find_Libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/GetGitRevisionDescription.cmake" : {
      "ObjectId" : "1d3c82af71f931a592ddd9bfff11521198f13937",
      "LastModified" : "2018-10-17T16:47:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Returns a version string from Git\n\n#\n\n# These functions force a re-configure on each git commit so that you can\n\n# trust the values of the variables in your build system.\n\n#\n\n#  get_git_head_revision(<refspecvar> <hashvar> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the refspec and sha hash of the current head revision\n\n#\n\n#  git_describe(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe on the source tree, and adjusting\n\n# the output so that it tests false if an error occurs.\n\n#\n\n#  git_get_exact_tag(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe --exact-match on the source tree,\n\n# and adjusting the output so that it tests false if there was no exact\n\n# matching tag.\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file docs/license/Boost-LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We must run the following at \"include\" time, not at function call time,\n\n# to find the path to this module rather than the path to a calling list file\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# .git dir not found, search parent directories\n",
        "Line" : 45,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "# We have reached the root directory, we are not in git\n",
        "Line" : 49,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# check if this is a submodule\n",
        "Line" : 56,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# TODO sanitize\n\n#if((${ARGN}\" MATCHES \"&&\") OR\n\n#\t(ARGN MATCHES \"||\") OR\n\n#\t(ARGN MATCHES \"\\\\;\"))\n\n#\tmessage(\"Please report the following error to the project!\")\n\n#\tmessage(FATAL_ERROR \"Looks like someone's doing something nefarious with git_describe! Passed arguments ${ARGN}\")\n\n#endif()\n",
        "Line" : 97,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "#message(STATUS \"Arguments to execute_process: ${ARGN}\")\n",
        "Line" : 105,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 7
    },
    "cmake/Modules/LibFindMacros.cmake" : {
      "ObjectId" : "3ef5844dd1e1805f0eeadd3b74b5abdd7e78195b",
      "LastModified" : "2018-10-17T16:47:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Version 2.2\n\n# Public Domain, originally written by Lasse Kärkkäinen <tronic>\n\n# Maintained at https://github.com/Tronic/cmake-modules\n\n# Please send your improvements as pull requests on Github.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find another package and make it a dependency of the current package.\n\n# This also automatically forwards the \"REQUIRED\" argument.\n\n# Usage: libfind_package(<prefix> <another package> [extra args to find_package])\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# A simple wrapper to make pkg-config searches a bit easier.\n\n# Works the same as CMake's internal pkg_check_modules but is always quiet.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Avoid useless copy&pasta by doing what most simple libraries do anyway:\n\n# pkg-config, find headers, find library.\n\n# Usage: libfind_pkg_detect(<prefix> <pkg-config args> FIND_PATH <name> [other args] FIND_LIBRARY <name> [other args])\n\n# E.g. libfind_pkg_detect(SDL2 sdl2 FIND_PATH SDL.h PATH_SUFFIXES SDL2 FIND_LIBRARY SDL2)\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Parse arguments\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Find library\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Extracts a version #define from a version.h file, output stored to <PREFIX>_VERSION.\n\n# Usage: libfind_version_header(Foobar foobar/version.h FOOBAR_VERSION_STR)\n\n# Fourth argument \"QUIET\" may be used for silently testing different define names.\n\n# This function does nothing if the version variable is already defined.\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Skip processing if we already have a version or if the include dir was not found\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Process optional arguments\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Read the header and parse for version number\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# No regex match?\n",
        "Line" : 85,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Export the version string\n",
        "Line" : 92,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Do the final processing once the paths have been detected.\n\n# If include dirs are needed, ${PREFIX}_PROCESS_INCLUDES should be set to contain\n\n# all the variables, each of which contain one include directory.\n\n# Ditto for ${PREFIX}_PROCESS_LIBS and library files.\n\n# Will set ${PREFIX}_FOUND, ${PREFIX}_INCLUDE_DIRS and ${PREFIX}_LIBRARIES.\n\n# Also handles errors in case library detection was required, etc.\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Skip processing if already processed during this configuration run\n",
        "Line" : 103,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Start with the assumption that the package was found\n",
        "Line" : 108,
        "CharPositionInLine" : 19
      },
      "15" : {
        "Text" : "# Did we find any files? Did we miss includes? These are for formatting better error messages.\n",
        "Line" : 110,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Shorthands for some variables that we need often\n",
        "Line" : 114,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Lists of config option names (all, includes, libs)\n",
        "Line" : 121,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Process deps to add to \n",
        "Line" : 126,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# The package seems to export option lists that we can use, woohoo!\n",
        "Line" : 129,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "# If plural forms don't exist or they equal singular forms\n",
        "Line" : 133,
        "CharPositionInLine" : 6
      },
      "21" : {
        "Text" : "# Singular forms can be used\n",
        "Line" : 136,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# Oh no, we don't know the option names\n",
        "Line" : 144,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "# Include/library names separated by spaces (notice: not CMake lists)\n",
        "Line" : 163,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Process all includes and set found false if any are missing\n",
        "Line" : 167,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Process all libraries and set found false if any are missing\n",
        "Line" : 178,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Version checks\n",
        "Line" : 188,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# If all-OK, hide all config options, export variables, print status and exit\n",
        "Line" : 198,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# Format messages for debug info and the type of error\n",
        "Line" : 221,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# Fatal error out if REQUIRED\n",
        "Line" : 256,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# Otherwise just print a nasty warning\n",
        "Line" : 261,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 31
    },
    "cmake/Modules/SelectLibraryConfigurations.cmake" : {
      "ObjectId" : "dce6f99262df94c26ea76fc248ceda6081d80804",
      "LastModified" : "2018-10-17T16:47:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# SelectLibraryConfigurations\n\n# ---------------------------\n\n#\n\n#\n\n#\n\n# select_library_configurations( basename )\n\n#\n\n# This macro takes a library base name as an argument, and will choose\n\n# good values for basename_LIBRARY, basename_LIBRARIES,\n\n# basename_LIBRARY_DEBUG, and basename_LIBRARY_RELEASE depending on what\n\n# has been found and set.  If only basename_LIBRARY_RELEASE is defined,\n\n# basename_LIBRARY will be set to the release value, and\n\n# basename_LIBRARY_DEBUG will be set to basename_LIBRARY_DEBUG-NOTFOUND.\n\n# If only basename_LIBRARY_DEBUG is defined, then basename_LIBRARY will\n\n# take the debug value, and basename_LIBRARY_RELEASE will be set to\n\n# basename_LIBRARY_RELEASE-NOTFOUND.\n\n#\n\n# If the generator supports configuration types, then basename_LIBRARY\n\n# and basename_LIBRARIES will be set with debug and optimized flags\n\n# specifying the library to be used for the given configuration.  If no\n\n# build type has been set or the generator in use does not support\n\n# configuration types, then basename_LIBRARY and basename_LIBRARIES will\n\n# take only the release value, or the debug value if the release one is\n\n# not set.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This macro was adapted from the FindQt4 CMake module and is maintained by Will\n\n# Dicharry <wdicharry@stellarscience.com>.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# if the generator supports configuration types or CMAKE_BUILD_TYPE\n\n# is set, then set optimized and debug options.\n",
        "Line" : 44,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 4
    },
    "cmake/performous.sh.cmake" : {
      "ObjectId" : "a8896b292f1a213fbf6532933099c00df3676428",
      "LastModified" : "2018-10-17T16:47:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#!/bin/sh\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "data/CMakeLists.txt" : {
      "ObjectId" : "cf1e5a4b70f3b8d46388eefc2f4464148cd48f0f",
      "LastModified" : "2018-10-17T16:47:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install launcher and fonts on system level\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#file(GLOB FONT_FILES \"fonts/*\")\n\n#install(FILES ${FONT_FILES} DESTINATION \"Resources/fonts/truetype/performous\")\n",
        "Line" : 8,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "#file(GLOB FONT_FILES \"fonts/*\")\n\n#install(FILES ${FONT_FILES} DESTINATION \"share/fonts/truetype/performous\")\n",
        "Line" : 13,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 3
    },
    "docs/CMakeLists.txt" : {
      "ObjectId" : "790aefdef07f8aff4fcdea7eb0b7b70c1fe74f3f",
      "LastModified" : "2018-10-17T16:47:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "docs/man/CMakeLists.txt" : {
      "ObjectId" : "b06ad5a72b0d26c9f3ee8e7ef72e8c779929fabe",
      "LastModified" : "2018-10-17T16:47:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "game/CMakeLists.txt" : {
      "ObjectId" : "de33f2c2380366be1ced498e9f33b07d340b0ec2",
      "LastModified" : "2018-10-17T16:47:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We want to support all these version numbers:\n\n# 1.0 1.0.1 1.0+ 1.0.1+ 1.0-2-g123abcd 1.0.1-5-g123abcd\n\n# We use the 2-3 digits of the version as MAJOR.MINOR.PATCH\n\n# and the git patch number as TWEAK\n",
        "Line" : 7,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# According to MinGW tools, we need to compile the rc file, and then link it into projects:\n\n# windres foo.rc foores.o\n\n# gcc -o foo.exe foo.o foores.o\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#nothing\n",
        "Line" : 58,
        "CharPositionInLine" : 21
      },
      "3" : {
        "Text" : "# Libraries\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# LibEpoxy < 1.2 crashes with binary drivers (nvidia & fglrx) when creating shaders\n\n# (see https://github.com/anholt/libepoxy/issues/23 for the exact problem)\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Find all the libs that don't require extra parameters\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Note: cannot use list APPEND here because it inserts semicolons instead of spaces\n",
        "Line" : 145,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# Straight to Program Files/Performous with no bin subfolder.\n",
        "Line" : 161,
        "CharPositionInLine" : 21
      },
      "8" : {
        "Text" : "# Build main executable\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Store library paths in executable\n",
        "Line" : 177,
        "CharPositionInLine" : 79
      },
      "10" : {
        "Text" : "# Produce executable in build/, not build/game/\n",
        "Line" : 178,
        "CharPositionInLine" : 91
      },
      "11" : {
        "Text" : "# Capitalized Performous.exe on Windows (this is considered more beautiful).\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Generate config.hh\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "lang/CMakeLists.txt" : {
      "ObjectId" : "8dcc3e32cf60849456eaa9097ab8d8c04e02c2c8",
      "LastModified" : "2018-10-17T16:47:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# It should be possible to switch to CMake's GETTEXT_CREATE_TRANSLATIONS\n\n# if we either drop the LOCALE_DIR or that function gets a customised\n\n# INSTALL_DESTINATION.\n\n# FIXME: Always execute msgmerge, like in CMake's GETTEXT_CREATE_TRANSLATIONS?\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 66
  },
  "ElapsedTime" : 2402
}