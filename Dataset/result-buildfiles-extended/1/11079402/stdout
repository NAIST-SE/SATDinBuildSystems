{
  "Repository" : "11079402",
  "Revision" : "HEAD",
  "ObjectId" : "dabf429a07d29fde1bdb52da7788f0c0503e6b98",
  "CommitTime" : "2019-03-04T08:16:16Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "9f4b57850a311fe694d4461f6d6a488d73c0ae20",
      "LastModified" : "2018-11-29T00:53:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##################################\n\n#### Project settings ############\n\n##################################\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set a capitalized exe name on Windows\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Project version\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set the project version ready to be used in the code.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set the data path depending on the platform\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set binary and data install locations if we want to use the installer\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Set the plugins.cfg file path to a common but architecture-dependent location.\n\n# Because the plugins.cfg Ogre plugins path path may vary depending on the architecture used.\n",
        "Line" : 37,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Set the data paths\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Where we want the binary\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Compilation options\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# enable/disable unit tests\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##################################\n\n#### Useful variables ############\n\n##################################\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#project paths\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#cmake paths\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# For MSVC builds, the debug flags is added below.\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# From Boost cmake file\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# We want to differentiate MinGW64 and MinGW32\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "## We check for dependencies\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Boost binaries contains compiler name. They can be put in the same directory\n",
        "Line" : 108,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# hints to the find_package calls\n",
        "Line" : 119,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "##################################\n\n#### ExplicitCompilerFlags #######\n\n##################################\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# TODO: Use add_compiler_options instead of setting CMAKE_CXX_FLAGS\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# CMAKE_CXX_FLAGS are meant to be defined using these two public strings\n\n# This makes it possible to have them explicitly displayed in CMake GUI\n\n# CMAKE_CXX_FLAGS can still be used to override our default defintions\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# C++11 compilation flag is activated by default\n\n# Optimisation flags can be added if deemed useful\n",
        "Line" : 138,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# MinGW supports CXX11 flag but do not compile with it. However, it works with gnu++11\n",
        "Line" : 145,
        "CharPositionInLine" : 8
      },
      "25" : {
        "Text" : "# Help getting compilation warnings\n",
        "Line" : 153,
        "CharPositionInLine" : 8
      },
      "26" : {
        "Text" : "#for later https://stackoverflow.com/questions/5088460/flags-to-enable-thorough-and-verbose-g-warnings/9862800#9862800:\n\n#set(OD_OPT_FLAGS \"${OD_OPT_FLAGS} -pedantic -Wextra -Wcast-align -Wcast-qual -Wctor-dtor-privacy -Wdisabled-optimization \")\n\n#set(OD_OPT_FLAGS \"${OD_OPT_FLAGS} -Wformat=2 -Winit-self -Wlogical-op -Wmissing-declarations -Wmissing-include-dirs -Wnoexcept\")\n\n#set(OD_OPT_FLAGS \"${OD_OPT_FLAGS} -Wold-style-cast -Woverloaded-virtual -Wredundant-decls -Wshadow -Wsign-conversion -Wsign-promo\")\n\n#set(OD_OPT_FLAGS \"${OD_OPT_FLAGS} -Wstrict-null-sentinel -Wstrict-overflow=5 -Wswitch-default -Wundef -Wno-unused\")\n\n#set(OD_OPT_FLAGS \"${OD_OPT_FLAGS} -Winline -Winvalid-pch -Wswitch-enum -Wzero-as-null-pointer-constant -Wuseless-cast\")\n\n#set(OD_OPT_FLAGS \"${OD_OPT_FLAGS} -Weffc++\")\n",
        "Line" : 160,
        "CharPositionInLine" : 8
      },
      "27" : {
        "Text" : "# Disable some warnings on MinGW\n",
        "Line" : 169,
        "CharPositionInLine" : 8
      },
      "28" : {
        "Text" : "# This includes enough debug information to get something useful\n\n# from Dr. Mingw while keeping binary size down. Almost useless\n\n# with gdb, though.\n",
        "Line" : 174,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : "# Set compiler options in MSVC\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#Set some extra compiler flags\n\n#TODO - investigate if these are what they should be\n",
        "Line" : 183,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# Set the application version\n",
        "Line" : 188,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# Set the data paths\n",
        "Line" : 191,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "#Tell OIS we are linking dynamically for dllexport/dllimport attributes.\n\n#TODO: Find out if this is needed.\n",
        "Line" : 201,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "##################################\n\n#### Source files (.cpp) #########\n\n##################################\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#Add new .cpp files here so that they get compiled\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#OpenDungeons sources\n",
        "Line" : 233,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "# Adds the Windows icon resource file when building on windows.\n",
        "Line" : 499,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "##################################\n\n#### Find packages ###############\n\n##################################\n",
        "Line" : 504,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#This has to cover the versions not already known by CMake\n",
        "Line" : 537,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# On windows we can try to use boost from the Ogre SDK instead\n",
        "Line" : 547,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "# We set these instead of searching if using MSVC\n\n# This is because the libs in the ogre dir has a lib prefix making findboost not find them\n",
        "Line" : 551,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "##################################\n\n#### Headers and linking #########\n\n##################################\n",
        "Line" : 565,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "#add all project specific include directorieS\n",
        "Line" : 569,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "#OpenDungeons includes\n",
        "Line" : 571,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "#external packages includes\n",
        "Line" : 574,
        "CharPositionInLine" : 4
      },
      "46" : {
        "Text" : "#TODO: Why are we linking boost here? It's linked again later.\n\n# Boost\n",
        "Line" : 583,
        "CharPositionInLine" : 8
      },
      "47" : {
        "Text" : "##################################\n\n#### Binary ######################\n\n##################################\n",
        "Line" : 595,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# Treat warnings as errors\n",
        "Line" : 616,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Create the binary file (WIN32 makes sure there is no console window on windows.)\n",
        "Line" : 621,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "##################################\n\n#### Link libraries ##############\n\n##################################\n",
        "Line" : 624,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Link libraries\n",
        "Line" : 628,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "#target\n",
        "Line" : 630,
        "CharPositionInLine" : 4
      },
      "53" : {
        "Text" : "#libraries\n",
        "Line" : 633,
        "CharPositionInLine" : 4
      },
      "54" : {
        "Text" : "# Set linker options in MSVC\n",
        "Line" : 643,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# We need to force output because of the boost lib used, defining two times the\n\n# same set of functions, once for Ogre, once for OD. It is harmless in our case\n\n# to select this option.\n",
        "Line" : 645,
        "CharPositionInLine" : 4
      },
      "56" : {
        "Text" : "# The name of the OGRE Overlay library is available as CMAKE variable, also discovering debug versions correctly; please leave it like that!\n",
        "Line" : 655,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# We link needed libraries to display stacktrace on uncatched exception\n",
        "Line" : 658,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# MinGW32 needs intl while not MinGW64. To differentiate them, we test the compiler version as it does not change very often for MinGW32\n",
        "Line" : 660,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# MSVC automatically links boost\n",
        "Line" : 672,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# Link sfml\n\n# No need to make a difference when release/debug is found because even\n\n# if only one is found, the other is set to the same value\n",
        "Line" : 677,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "##################################\n\n#### Unit testing ################\n\n##################################\n",
        "Line" : 682,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "##################################\n\n#### Configure settings files ####\n\n##################################\n",
        "Line" : 695,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "#On windows, use current directory for plugins and data for now\n",
        "Line" : 700,
        "CharPositionInLine" : 4
      },
      "64" : {
        "Text" : "# Do the configuration\n\n# Convoluted check because old CMake has no VERSION_GREATER_EQUAL,\n\n# we want this true for 1.11 or later since plugins have to be declared manually.\n",
        "Line" : 711,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# Link icon with its full path when not installed in the /usr prefix since it might not be caught by the hicolor theme\n",
        "Line" : 724,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "##################################\n\n### Run-in-place customisation ###\n\n##################################\n",
        "Line" : 733,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# If the project is not built in the source directory, create symbolic links\n\n# pointing to the game resources so that the game can be run in place\n\n# NOTE: This won't work on FAT filesystems\n",
        "Line" : 737,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# Windows Vista or newer\n",
        "Line" : 746,
        "CharPositionInLine" : 66
      },
      "69" : {
        "Text" : "# For some reason \"COMMAND cmd.exe /c mklink /j\" does not work as expected\n\n# so we use a batch file to workaround it (cf. https://github.com/OpenDungeons/OpenDungeons/pull/206 for details)\n",
        "Line" : 747,
        "CharPositionInLine" : 16
      },
      "70" : {
        "Text" : "##################################\n\n#### Installation ################\n\n##################################\n",
        "Line" : 755,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Install required game files: binary, configuration files and resources\n",
        "Line" : 780,
        "CharPositionInLine" : 4
      },
      "72" : {
        "Text" : "# Additional distribution content (desktop file, icons, man page, doc)\n",
        "Line" : 791,
        "CharPositionInLine" : 4
      },
      "73" : {
        "Text" : "# To include redistributable needed files\n",
        "Line" : 803,
        "CharPositionInLine" : 4
      },
      "74" : {
        "Text" : "# try to locate needed dlls\n",
        "Line" : 807,
        "CharPositionInLine" : 4
      },
      "75" : {
        "Text" : "#CEGUI\n",
        "Line" : 840,
        "CharPositionInLine" : 4
      },
      "76" : {
        "Text" : "# Ogre\n",
        "Line" : 845,
        "CharPositionInLine" : 4
      },
      "77" : {
        "Text" : "# SFML\n",
        "Line" : 853,
        "CharPositionInLine" : 4
      },
      "78" : {
        "Text" : "# Other\n",
        "Line" : 857,
        "CharPositionInLine" : 4
      },
      "79" : {
        "Text" : "# boost\n",
        "Line" : 884,
        "CharPositionInLine" : 23
      },
      "80" : {
        "Text" : "#CEGUI\n",
        "Line" : 886,
        "CharPositionInLine" : 23
      },
      "81" : {
        "Text" : "# Ogre\n",
        "Line" : 891,
        "CharPositionInLine" : 23
      },
      "82" : {
        "Text" : "# SFML\n",
        "Line" : 897,
        "CharPositionInLine" : 23
      },
      "83" : {
        "Text" : "# Dependencies\n",
        "Line" : 901,
        "CharPositionInLine" : 23
      },
      "84" : {
        "Text" : "# Optional renderers\n",
        "Line" : 907,
        "CharPositionInLine" : 4
      },
      "85" : {
        "Text" : "# Install required game files: binary, configuration files and resources\n",
        "Line" : 918,
        "CharPositionInLine" : 4
      },
      "86" : {
        "Text" : "# Additional distribution content (desktop file, icons, man page, doc)\n",
        "Line" : 929,
        "CharPositionInLine" : 4
      },
      "87" : {
        "Text" : "# External libraries\n",
        "Line" : 933,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 88
    },
    "cmake/modules/BoostTestTargets/BoostTestTargets.cmake" : {
      "ObjectId" : "7a053d750e13752039a509f75158d4206df8293e",
      "LastModified" : "2014-11-06T15:41:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Add tests using boost::test\n\n#\n\n# Add this line to your test files in place of including a basic boost test header:\n\n#  #include <BoostTestTargetConfig.h>\n\n#\n\n# If you cannot do that and must use the included form for a given test,\n\n# include the line\n\n#  // OVERRIDE_BOOST_TEST_INCLUDED_WARNING\n\n# in the same file with the boost test include.\n\n#\n\n#  include(BoostTestTargets)\n\n#  add_boost_test(<testdriver_name> SOURCES <source1> [<more sources...>]\n\n#   [FAIL_REGULAR_EXPRESSION <additional fail regex>]\n\n#   [LAUNCHER <generic launcher script>]\n\n#   [LIBRARIES <library> [<library>...]]\n\n#   [RESOURCES <resource> [<resource>...]]\n\n#   [TESTS <testcasename> [<testcasename>...]])\n\n#\n\n#  If for some reason you need access to the executable target created,\n\n#  it can be found in ${${testdriver_name}_TARGET_NAME} as specified when\n\n#  you called add_boost_test\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Requires:\n\n# \tGetForceIncludeDefinitions\n\n# \tCopyResourcesToBuildTree\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# parse arguments\n",
        "Line" : 110,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# clear this out - linking would be a bad idea\n",
        "Line" : 161,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "# Generate a unique target name, using the relative binary dir\n\n# and provided name. (transform all / into _ and remove all other\n\n# non-alphabet characters)\n",
        "Line" : 199,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Build the test.\n",
        "Line" : 212,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#\t\t\tset(Boost_TEST_FLAGS --catch_system_error=yes --output_format=XML)\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# TODO: Figure out why only recent boost handles individual test running properly\n",
        "Line" : 231,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# CppCheck the test if we can.\n",
        "Line" : 268,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "cmake/modules/BoostTestTargets/CopyResourcesToBuildTree.cmake" : {
      "ObjectId" : "3512cc48445b0a2f3ab1c9422edd1fbd3ffff3d3",
      "LastModified" : "2014-11-06T15:41:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Copy the resources your app needs to the build tree.\n\n#\n\n#  copy_resources_to_build_tree(<target_name>)\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Bail if no resources\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Working dir is solution file dir, not exe file dir.\n",
        "Line" : 55,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 3
    },
    "cmake/modules/BoostTestTargets/GetForceIncludeDefinitions.cmake" : {
      "ObjectId" : "efcca047b7ee2fb83de76ead25e489cd0eebc0ec",
      "LastModified" : "2014-11-06T15:41:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Get the platform-appropriate flags to add to force inclusion of a file\n\n#\n\n# The most common use of this is to use a generated config.h-type file\n\n# placed out of the source tree in all files.\n\n#\n\n#  get_force_include_definitions(var forcedincludefiles...) -\n\n#   where var is the name of  your desired output variable, and everything\n\n#   else is a source file to forcibly include.\n\n#   a list item to be filtered.\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/CheckStructMember.cmake" : {
      "ObjectId" : "bfe02d422833b9f1be7428957fce43f4de6db361",
      "LastModified" : "2014-11-18T19:04:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check if the given struct or class has the specified member variable\n\n# CHECK_STRUCT_MEMBER (STRUCT MEMBER HEADER VARIABLE)\n\n#\n\n#  STRUCT - the name of the struct or class you are interested in\n\n#  MEMBER - the member which existence you want to check\n\n#  HEADER - the header(s) where the prototype should be declared\n\n#  VARIABLE - variable to store the result\n\n#\n\n# The following variables may be set before calling this macro to\n\n# modify the way the check is run:\n\n#\n\n#  CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n#  CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n#  CMAKE_REQUIRED_INCLUDES = list of include directories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, Alexander Neundorf, <neundorf@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/CheckType.cmake" : {
      "ObjectId" : "0bd7beaf67ab7e2687055d68693f3e08f775217b",
      "LastModified" : "2014-11-06T15:41:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check if the given struct or class has the specified member variable\n\n# CHECK_TYPE (TYPE RESULT INCLUDES)\n\n#\n\n#  TYPE - The variable you want to test\n\n#  HEADER - Headers included in the test\n\n#  RESULT - True if found\n\n#\n\n# The following variables may be set before calling this macro to\n\n# modify the way the check is run:\n\n#\n\n#  CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n#  CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n#  CMAKE_REQUIRED_INCLUDES = list of include directories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2008, Andrew Fenn <andrewfenn@gmail.com>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindCEGUI.cmake" : {
      "ObjectId" : "a6a00b588ec6b0486712c33f07f660f31bea0d3b",
      "LastModified" : "2015-01-08T09:09:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n# FindCEGUI\n\n#\n\n# Locate CEGUI LIBRARIES\n\n#\n\n# This module defines\n\n#    CEGUI_FOUND, if false, do not try to link to CEGUI\n\n#    CEGUI_INCLUDE_DIR, where to find headers.\n\n#    CEGUI_LIBRARIES, the LIBRARIES to link against\n\n#    CEGUI_BINARY_REL - location of the main CEGUI binary (win32 non-static only, release)\n\n#    CEGUI_BINARY_DBG - location of the main CEGUI binaries (win32 non-static only, debug)\n\n#\n\n#\n\n#         Modules :\n\n#    CEGUI_${COMPONENT}_FOUND - ${COMPONENT} is available\n\n#    CEGUI_${COMPONENT}_INCLUDE_DIRS - additional include directories for ${COMPONENT}\n\n#    CEGUI_${COMPONENT}_LIBRARIES - link these to use ${COMPONENT}\n\n#    CEGUI_${COMPONENT}_BINARY_REL - location of the component binary (win32 non-static only, release)\n\n#    CEGUI_${COMPONENT}_BINARY_DBG - location of the component binary (win32 non-static only, debug)\n\n#\n\n# VERSION 0.7.X:\n\n#        WindowsRenderer:\n\n#                Falagard\n\n#        Renderer:\n\n#                Direct3D9Renderer Direct3D10Renderer Direct3D11Renderer IrrlichtRenderer NullRenderer OgreRenderer OpenGLRenderer\n\n#        ImageCodec:\n\n#                CoronaImageCodec DevILImageCodec FreeImageImageCodec SILLYImageCodec STBImageCodec TGAImageCodec\n\n#        Parser:\n\n#                ExpatParser LibxmlParser RapidXMLParser TinyXMLParser XercesParser)\n\n#        Script:\n\n#                LuaScriptModule toluapp\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# VERSION 0.8.X:\n\n#        WindowsRenderer:\n\n#                CoreWindowRendererSet\n\n#        Renderer:\n\n#                Direct3D9Renderer Direct3D10Renderer Direct3D11Renderer IrrlichtRenderer NullRenderer OgreRenderer OpenGLRenderer OpenGL3Renderer OpenGLESRenderer\n\n#        ImageCodec:\n\n#                CoronaImageCodec DevILImageCodec FreeImageImageCodec SILLYImageCodec STBImageCodec TGAImageCodec PVRImageCodec\n\n#        Parser:\n\n#                ExpatParser LibXMLParser RapidXMLParser TinyXMLParser XercesParser)\n\n#        Script:\n\n#                LuaScriptModule\n\n#\n\n# author: Guillaume Smaha\n\n#\n\n# People have asked us to include a FindCEGUI that is high quality that they will\n\n# be able to copy and use to find CEGUI, so we have finally done that.\n\n#\n\n# If you have improvements for this scripts, please consider sending them upstream.\n\n# See https://bitbucket.org/cegui/cegui\n\n################################################################################\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "################################################################################\n\n# Get the value of a preprocessor entry\n\n################################################################################\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "################################################################################\n\n# Check if exist a preprocessor entry\n\n################################################################################\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "################################################################################\n\n# Replace the value of a preprocessor entry\n\n################################################################################\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "################################################################################\n\n# Define the value of preprocessor entry\n\n################################################################################\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "################################################################################\n\n# Begin processing of package\n\n################################################################################\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "################################################################################\n\n# Display a status message unless FIND_QUIETLY is set\n\n################################################################################\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "################################################################################\n\n# Get environment variable, define it as ENV_$var and make sure backslashes are converted to forward slashes\n\n################################################################################\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# replace won't work if var is blank\n",
        "Line" : 141,
        "CharPositionInLine" : 5
      },
      "10" : {
        "Text" : "################################################################################\n\n# Construct search paths for includes and libraries from a PREFIX_PATH\n\n################################################################################\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "################################################################################\n\n# clear cache variables if a certain variable changed\n\n################################################################################\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# test against internal check variable\n\n# HACK: Apparently, adding a variable to the cache cleans up the list\n\n# a bit. We need to also remove any empty strings from the list, but\n\n# at the same time ensure that we are actually dealing with a list.\n",
        "Line" : 171,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "################################################################################\n\n# Try to get some hints from pkg-config, if available\n\n################################################################################\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "################################################################################\n\n# Couple a set of release AND debug libraries (or frameworks)\n\n################################################################################\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "################################################################################\n\n# Generate debug names from given release names\n\n################################################################################\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "################################################################################\n\n# Add the parent dir from DIR to VAR\n\n################################################################################\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "################################################################################\n\n# Do the final processing for the package find.\n\n################################################################################\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# skip if already processed during this run\n",
        "Line" : 233,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "#########################################################\n\n# Find cegui modules\n\n#########################################################\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#########################################################\n\n# register a module\n\n#########################################################\n",
        "Line" : 356,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#########################################################\n\n# Main\n\n#########################################################\n",
        "Line" : 369,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Register var to check change on base\n",
        "Line" : 376,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Get path, convert backslashes as ${ENV_${var}}\n",
        "Line" : 383,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Determine whether to search for a dynamic or static build\n",
        "Line" : 389,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# construct search paths from environmental hints and\n\n# OS specific guesses\n",
        "Line" : 399,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Construct search paths for includes and libraries\n",
        "Line" : 434,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# try to locate CEGUI via pkg-config\n",
        "Line" : 439,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# locate CEGUI include files\n",
        "Line" : 442,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# determine CEGUI version\n",
        "Line" : 449,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# Starting CEGUI 0.8, the headers are in the CEGUI subdirectory, and we must include\n\n# its parent rather than directly the subdirectory. Otherwise we'll get compiler errors.\n",
        "Line" : 493,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# we basically overwrite CEGUI_INCLUDE_DIR so that it contains only the parent directory.\n",
        "Line" : 497,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# find binaries\n",
        "Line" : 515,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Base\n",
        "Line" : 528,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# WindowsRenderer\n",
        "Line" : 531,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# Renderer\n",
        "Line" : 534,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# ImageCodec\n",
        "Line" : 546,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "# Parser\n",
        "Line" : 555,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# Script\n",
        "Line" : 562,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "# WindowsRenderer\n",
        "Line" : 567,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# Renderer\n",
        "Line" : 570,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "# ImageCodec\n",
        "Line" : 580,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "# Parser\n",
        "Line" : 588,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "# Script\n",
        "Line" : 595,
        "CharPositionInLine" : 4
      },
      "44" : {
        "Text" : "# Register var to check change on modules\n",
        "Line" : 608,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Find modules\n",
        "Line" : 620,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Find modules\n",
        "Line" : 629,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#Check change on modules\n",
        "Line" : 635,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "cmake/modules/FindOIS.cmake" : {
      "ObjectId" : "0b99d9ad44daa4c0944e7b0fa531a4c1f5ac577c",
      "LastModified" : "2018-10-23T12:40:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Try to find OIS\n\n# Once done, this will define\n\n#\n\n#  OIS_FOUND - system has OIS\n\n#  OIS_INCLUDE_DIRS - the OIS include directories \n\n#  OIS_LIBRARIES - link these to use OIS\n\n#  OIS_BINARY_REL / OIS_BINARY_DBG - DLL names (windows only)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Get path, convert backslashes as ${ENV_${var}}\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# construct search paths\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# redo search if prefix path changed\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# For OIS, prefer static library over framework (important when referencing OIS source build)\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# OIS uses the 'includes' path for its headers in the source release, not 'include'\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# OIS source build on Mac stores libs in a different location\n\n# Also this is for static build\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# add parent of OIS folder to support OIS/OIS.h\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Reset framework finding\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "cmake/modules/FindOldOGRE.cmake" : {
      "ObjectId" : "6aa224f0eafa665ca0914ad625f5787adb08bdb4",
      "LastModified" : "2018-11-29T00:53:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Try to find OGRE\n\n# If you have multiple versions of Ogre installed, use the CMake or\n\n# the environment variable OGRE_HOME to point to the path where the\n\n# desired Ogre version can be found.\n\n# By default this script will look for a dynamic Ogre build. If you\n\n# need to link against static Ogre libraries, set the CMake variable\n\n# OGRE_STATIC to TRUE.\n\n#\n\n# Once done, this will define\n\n#\n\n#  OGRE_FOUND - system has OGRE\n\n#  OGRE_INCLUDE_DIRS - the OGRE include directories \n\n#  OGRE_LIBRARIES - link these to use the OGRE core\n\n#  OGRE_BINARY_REL - location of the main Ogre binary (win32 non-static only, release)\n\n#  OGRE_BINARY_DBG - location of the main Ogre binaries (win32 non-static only, debug)\n\n#\n\n# Additionally this script searches for the following optional\n\n# parts of the Ogre package:\n\n#  Plugin_BSPSceneManager, Plugin_CgProgramManager,\n\n#  Plugin_OctreeSceneManager, Plugin_OctreeZone,\n\n#  Plugin_ParticleFX, Plugin_PCZSceneManager,\n\n#  RenderSystem_GL, RenderSystem_GL3Plus,\n\n#  RenderSystem_GLES, RenderSystem_GLES2,\n\n#  RenderSystem_Direct3D9, RenderSystem_Direct3D11\n\n#  Paging, Terrain, Volume, Overlay\n\n#\n\n# For each of these components, the following variables are defined:\n\n#\n\n#  OGRE_${COMPONENT}_FOUND - ${COMPONENT} is available\n\n#  OGRE_${COMPONENT}_INCLUDE_DIRS - additional include directories for ${COMPONENT}\n\n#  OGRE_${COMPONENT}_LIBRARIES - link these to use ${COMPONENT} \n\n#  OGRE_${COMPONENT}_BINARY_REL - location of the component binary (win32 non-static only, release)\n\n#  OGRE_${COMPONENT}_BINARY_DBG - location of the component binary (win32 non-static only, debug)\n\n#\n\n# Finally, the following variables are defined:\n\n#\n\n#  OGRE_PLUGIN_DIR_REL - The directory where the release versions of\n\n#       the OGRE plugins are located\n\n#  OGRE_PLUGIN_DIR_DBG - The directory where the debug versions of\n\n#       the OGRE plugins are located\n\n#  OGRE_MEDIA_DIR - The directory where the OGRE sample media is\n\n#       located, if available\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Get path, convert backslashes as ${ENV_${var}}\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Determine whether to search for a dynamic or static build\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# construct search paths from environmental hints and\n\n# OS specific guesses\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If both OGRE_BUILD and OGRE_SOURCE are set, prepare to find Ogre in a build dir\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# redo search if any of the environmental hints changed\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# try to locate Ogre via pkg-config\n",
        "Line" : 169,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# Set the framework search path for OS X\n",
        "Line" : 172,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# locate Ogre include files\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# determine Ogre version\n",
        "Line" : 195,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# determine configuration settings\n",
        "Line" : 204,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# If working from source rather than SDK, add samples include\n",
        "Line" : 251,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# look for required Ogre dependencies in case of static build and/or threading\n",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# find binaries\n",
        "Line" : 363,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#########################################################\n\n# Find Ogre components\n\n#########################################################\n",
        "Line" : 375,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# find binaries\n",
        "Line" : 401,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# look for Paging component\n",
        "Line" : 413,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# look for Terrain component\n",
        "Line" : 415,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# look for Property component\n",
        "Line" : 417,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# look for RTShaderSystem component\n",
        "Line" : 419,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# look for Volume component\n",
        "Line" : 421,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# look for Overlay component\n",
        "Line" : 423,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# look for Bites component\n",
        "Line" : 425,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#########################################################\n\n# Find Ogre plugins\n\n#########################################################        \n",
        "Line" : 428,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# On Unix, the plugins might have no prefix\n",
        "Line" : 432,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# strip RenderSystem_ or Plugin_ prefix from plugin name\n",
        "Line" : 438,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# header files for plugins are not usually needed, but find them anyway if they are present\n",
        "Line" : 442,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# find link libraries for plugins\n",
        "Line" : 449,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# look for plugin dirs\n",
        "Line" : 469,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# find binaries\n",
        "Line" : 495,
        "CharPositionInLine" : 1
      },
      "31" : {
        "Text" : "# check if dependencies for plugins are met\n",
        "Line" : 525,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# look for the media directory\n",
        "Line" : 572,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 33
    },
    "cmake/modules/FindPkgMacros.cmake" : {
      "ObjectId" : "53111e074ab345fea81ad29cf0bf8aedbf76fa62",
      "LastModified" : "2018-11-29T00:53:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##################################################################\n\n# Provides some common functionality for the FindPackage modules\n\n##################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Begin processing of package\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Display a status message unless FIND_QUIETLY is set\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Get environment variable, define it as ENV_$var and make sure backslashes are converted to forward slashes\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# replace won't work if var is blank\n",
        "Line" : 31,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "# Construct search paths for includes and libraries from a PREFIX_PATH\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# clear cache variables if a certain variable changed\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# test against internal check variable\n\n# HACK: Apparently, adding a variable to the cache cleans up the list\n\n# a bit. We need to also remove any empty strings from the list, but\n\n# at the same time ensure that we are actually dealing with a list.\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Try to get some hints from pkg-config, if available\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Couple a set of release AND debug libraries (or frameworks)\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Generate debug names from given release names\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Add the parent dir from DIR to VAR \n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Do the final processing for the package find.\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# skip if already processed during this run\n",
        "Line" : 108,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Slightly customised framework finder\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# These could be arrays of paths, add each individually to the search paths\n",
        "Line" : 144,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 17
    },
    "cmake/modules/FindSFML.cmake" : {
      "ObjectId" : "871f8662fae354d8d8ef2f7b904e6f4f02a8a644",
      "LastModified" : "2018-11-29T00:53:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This script locates the SFML library\n\n# ------------------------------------\n\n#\n\n# Usage\n\n# -----\n\n#\n\n# When you try to locate the SFML libraries, you must specify which modules you want to use (system, window, graphics, network, audio, main).\n\n# If none is given, the SFML_LIBRARIES variable will be empty and you'll end up linking to nothing.\n\n# example:\n\n#   find_package(SFML COMPONENTS graphics window system) // find the graphics, window and system modules\n\n#\n\n# You can enforce a specific version, either MAJOR.MINOR or only MAJOR.\n\n# If nothing is specified, the version won't be checked (i.e. any version will be accepted).\n\n# example:\n\n#   find_package(SFML COMPONENTS ...)     // no specific version required\n\n#   find_package(SFML 2 COMPONENTS ...)   // any 2.x version\n\n#   find_package(SFML 2.4 COMPONENTS ...) // version 2.4 or greater\n\n#\n\n# By default, the dynamic libraries of SFML will be found. To find the static ones instead,\n\n# you must set the SFML_STATIC_LIBRARIES variable to TRUE before calling find_package(SFML ...).\n\n# Since you have to link yourself all the SFML dependencies when you link it statically, the following\n\n# additional variables are defined: SFML_XXX_DEPENDENCIES and SFML_DEPENDENCIES (see their detailed\n\n# description below).\n\n# In case of static linking, the SFML_STATIC macro will also be defined by this script.\n\n# example:\n\n#   set(SFML_STATIC_LIBRARIES TRUE)\n\n#   find_package(SFML 2 COMPONENTS network system)\n\n#\n\n# On Mac OS X if SFML_STATIC_LIBRARIES is not set to TRUE then by default CMake will search for frameworks unless\n\n# CMAKE_FIND_FRAMEWORK is set to \"NEVER\" for example. Please refer to CMake documentation for more details.\n\n# Moreover, keep in mind that SFML frameworks are only available as release libraries unlike dylibs which\n\n# are available for both release and debug modes.\n\n#\n\n# If SFML is not installed in a standard path, you can use the SFML_ROOT CMake (or environment) variable\n\n# to tell CMake where SFML is.\n\n#\n\n# Output\n\n# ------\n\n#\n\n# This script defines the following variables:\n\n# - For each specified module XXX (system, window, graphics, network, audio, main):\n\n#   - SFML_XXX_LIBRARY_DEBUG:   the name of the debug library of the xxx module (set to SFML_XXX_LIBRARY_RELEASE is no debug version is found)\n\n#   - SFML_XXX_LIBRARY_RELEASE: the name of the release library of the xxx module (set to SFML_XXX_LIBRARY_DEBUG is no release version is found)\n\n#   - SFML_XXX_LIBRARY:         the name of the library to link to for the xxx module (includes both debug and optimized names if necessary)\n\n#   - SFML_XXX_FOUND:           true if either the debug or release library of the xxx module is found\n\n#   - SFML_XXX_DEPENDENCIES:    the list of libraries the module depends on, in case of static linking\n\n# - SFML_LIBRARIES:    the list of all libraries corresponding to the required modules\n\n# - SFML_FOUND:        true if all the required modules are found\n\n# - SFML_INCLUDE_DIR:  the path where SFML headers are located (the directory containing the SFML/Config.hpp file)\n\n# - SFML_DEPENDENCIES: the list of libraries SFML depends on, in case of static linking\n\n#\n\n# example:\n\n#   find_package(SFML 2 COMPONENTS system window graphics audio REQUIRED)\n\n#   include_directories(${SFML_INCLUDE_DIR})\n\n#   add_executable(myapp ...)\n\n#   target_link_libraries(myapp ${SFML_LIBRARIES})\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# define the SFML_STATIC macro if static build was chosen\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# define the list of search paths for headers and libraries\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# find the SFML include directory\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# check the version number\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# extract the major and minor version numbers from SFML/Config.hpp\n\n# we have to handle framework a little bit differently:\n",
        "Line" : 84,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# if we could extract them, compare with the requested version number\n",
        "Line" : 100,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# transform version numbers to an integer\n",
        "Line" : 102,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# compare them\n",
        "Line" : 105,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# SFML version is < 2.0\n",
        "Line" : 110,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# find the requested modules\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# will be set to false if one of the required modules is not found\n",
        "Line" : 121,
        "CharPositionInLine" : 21
      },
      "12" : {
        "Text" : "# no suffix for sfml-main, it is always a static library\n",
        "Line" : 127,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# release library\n",
        "Line" : 129,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# debug library\n",
        "Line" : 135,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# static release library\n",
        "Line" : 141,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# static debug library\n",
        "Line" : 147,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# dynamic release library\n",
        "Line" : 153,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# dynamic debug library\n",
        "Line" : 159,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# choose the entries that fit the requested link type\n",
        "Line" : 165,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# library found\n",
        "Line" : 184,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "# if both are found, set SFML_XXX_LIBRARY to contain both\n",
        "Line" : 187,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# if only one debug/release variant is found, set the other to be equal to the found one\n",
        "Line" : 193,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "# debug and not release\n",
        "Line" : 195,
        "CharPositionInLine" : 12
      },
      "24" : {
        "Text" : "# release and not debug\n",
        "Line" : 200,
        "CharPositionInLine" : 12
      },
      "25" : {
        "Text" : "# library not found\n",
        "Line" : 205,
        "CharPositionInLine" : 8
      },
      "26" : {
        "Text" : "# mark as advanced\n",
        "Line" : 212,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# add to the global list of libraries\n",
        "Line" : 221,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# in case of static linking, we must also define the list of all the dependencies of SFML libraries\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# detect the OS\n",
        "Line" : 228,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# start with an empty list\n",
        "Line" : 239,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# macro that searches for a 3rd-party library\n",
        "Line" : 243,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# No lookup in environment variables (PATH on Windows), as they may contain wrong library versions\n",
        "Line" : 245,
        "CharPositionInLine" : 8
      },
      "33" : {
        "Text" : "# sfml-system\n",
        "Line" : 253,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# update the list -- these are only system libraries, no need to find them\n",
        "Line" : 257,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : "# sfml-network\n",
        "Line" : 270,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# update the list -- these are only system libraries, no need to find them\n",
        "Line" : 274,
        "CharPositionInLine" : 8
      },
      "37" : {
        "Text" : "# sfml-window\n",
        "Line" : 281,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# find libraries\n",
        "Line" : 285,
        "CharPositionInLine" : 8
      },
      "39" : {
        "Text" : "# update the list\n",
        "Line" : 298,
        "CharPositionInLine" : 8
      },
      "40" : {
        "Text" : "# sfml-graphics\n",
        "Line" : 311,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "# find libraries\n",
        "Line" : 315,
        "CharPositionInLine" : 8
      },
      "42" : {
        "Text" : "# update the list\n",
        "Line" : 319,
        "CharPositionInLine" : 8
      },
      "43" : {
        "Text" : "# sfml-audio\n",
        "Line" : 324,
        "CharPositionInLine" : 4
      },
      "44" : {
        "Text" : "# find libraries\n",
        "Line" : 328,
        "CharPositionInLine" : 8
      },
      "45" : {
        "Text" : "# update the list\n",
        "Line" : 336,
        "CharPositionInLine" : 8
      },
      "46" : {
        "Text" : "# handle errors\n",
        "Line" : 343,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# SFML version not ok\n",
        "Line" : 345,
        "CharPositionInLine" : 4
      },
      "48" : {
        "Text" : "# include directory or library not found\n",
        "Line" : 352,
        "CharPositionInLine" : 4
      },
      "49" : {
        "Text" : "# fatal error\n",
        "Line" : 357,
        "CharPositionInLine" : 8
      },
      "50" : {
        "Text" : "# error but continue\n",
        "Line" : 360,
        "CharPositionInLine" : 8
      },
      "51" : {
        "Text" : "# handle success\n",
        "Line" : 365,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 52
    },
    "cmake/modules/LibFindMacros.cmake" : {
      "ObjectId" : "69975c51be3f9c5e0ff372a4424f8de3b580ee88",
      "LastModified" : "2018-11-29T00:53:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Works the same as find_package, but forwards the \"REQUIRED\" and \"QUIET\" arguments\n\n# used for the current package. For this to work, the first parameter must be the\n\n# prefix of the current package, then the prefix of the new package etc, which are\n\n# passed to find_package.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMake developers made the UsePkgConfig system deprecated in the same release (2.6)\n\n# where they added pkg_check_modules. Consequently I need to support both in my scripts\n\n# to avoid those deprecated warnings. Here's a helper that does just that.\n\n# Works identically to pkg_check_modules, except that no checks are needed prior to use.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Do the final processing once the paths have been detected.\n\n# If include dirs are needed, ${PREFIX}_PROCESS_INCLUDES should be set to contain\n\n# all the variables, each of which contain one include directory.\n\n# Ditto for ${PREFIX}_PROCESS_LIBS and library files.\n\n# Will set ${PREFIX}_FOUND, ${PREFIX}_INCLUDE_DIRS and ${PREFIX}_LIBRARIES.\n\n# Also handles errors in case library detection was required, etc.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Skip processing if already processed during this run\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Start with the assumption that the library was found\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Process all includes and set _FOUND to false if any are missing\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Process all libraries and set _FOUND to false if any are missing\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Print message and/or exit on fatal error\n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "cmake/modules/MacroLogFeature.cmake" : {
      "ObjectId" : "2cdead94dd36344bb3585e8adaa906bd6b29ce3a",
      "LastModified" : "2018-11-29T00:53:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This file defines the Feature Logging macros.\n\n#\n\n# MACRO_LOG_FEATURE(VAR FEATURE DESCRIPTION URL [REQUIRED [MIN_VERSION [COMMENTS]]])\n\n#   Logs the information so that it can be displayed at the end\n\n#   of the configure run\n\n#   VAR : TRUE or FALSE, indicating whether the feature is supported\n\n#   FEATURE: name of the feature, e.g. \"libjpeg\"\n\n#   DESCRIPTION: description what this feature provides\n\n#   URL: home page\n\n#   REQUIRED: TRUE or FALSE, indicating whether the feature is required\n\n#   MIN_VERSION: minimum version number. empty string if unneeded\n\n#   COMMENTS: More info you may want to provide.  empty string if unnecessary\n\n#\n\n# MACRO_DISPLAY_FEATURE_LOG()\n\n#   Call this to display the collected results.\n\n#   Exits CMake with a FATAL error message if a required feature is missing\n\n#\n\n# Example:\n\n#\n\n# INCLUDE(MacroLogFeature)\n\n#\n\n# FIND_PACKAGE(JPEG)\n\n# MACRO_LOG_FEATURE(JPEG_FOUND \"libjpeg\" \"Support JPEG images\" \"http://www.ijg.org\" TRUE \"3.2a\" \"\")\n\n# ...\n\n# MACRO_DISPLAY_FEATURE_LOG()\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Copyright (c) 2006, Alexander Neundorf, <neundorf@kde.org>\n\n# Copyright (c) 2006, Allen Winter, <winter@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# _required _minvers _comments)\n",
        "Line" : 62,
        "CharPositionInLine" : 58
      },
      "4" : {
        "Text" : "#      SET(_logtext \"${_logtext}\\n\") #double-space missing features?\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/modules/OgreAddTargets.cmake" : {
      "ObjectId" : "761ac5a796e731db33ae3d76ecdc17609396cf54",
      "LastModified" : "2018-11-29T00:53:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# check the contents of a given source file. If they differ from the\n\n# expected content, or the file does not exist, rewrite it with the\n\n# provided content.\n\n# This function is used in order to update Unity build files only when\n\n# necessary. If we rewrote them unconditionally, it might trigger an\n\n# unnecessary rebuild of the file.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# read current file contents\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# create empty file\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# rewrite file with new contents\n",
        "Line" : 26,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# generate unity build files for the given target.\n\n# If in the list of source files the key word SEPARATE is specified, then\n\n# any source file after that will be compiled separately.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# first step: build the primary and separate lists\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# create Unity compilation units\n\n# all source files given will be put into a certain number of\n\n# compilation units.\n\n# if certain source files should be excluded from the unity build\n\n# and built separately, they need to also be named in the SEPARATE\n\n# list.\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# test if file is more than just a header\n",
        "Line" : 70,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# exclude the original source file from the compilation\n",
        "Line" : 84,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# don't forget the last set of files\n",
        "Line" : 88,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# add a new library target\n\n# usage: ogre_add_library(TARGETNAME LIBTYPE SOURCE_FILES [SEPARATE SOURCE_FILES])\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# add a new executable target\n\n# usage: ogre_add_executable(TARGETNAME [WIN32] [MACOSX_BUNDLE] SOURCE_FILES [SEPARATE SOURCE_FILES])\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# test if WIN32 or MACOSX_BUNDLE options were provided\n",
        "Line" : 107,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 14
    },
    "cmake/modules/OgreConfigTargets.cmake" : {
      "ObjectId" : "48d4528d671adf1fe4c3e7cc03f05dd099361fbd",
      "LastModified" : "2018-11-29T00:53:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configure settings and install targets\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Default build output paths\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# create vcproj.user file for Visual Studio to set debug working directory\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# install targets according to current build type\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Skip all install targets in SDK\n",
        "Line" : 99,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "#EXPORT Ogre-exports\n",
        "Line" : 105,
        "CharPositionInLine" : 33
      },
      "7" : {
        "Text" : "#EXPORT Ogre-exports\n",
        "Line" : 112,
        "CharPositionInLine" : 33
      },
      "8" : {
        "Text" : "#EXPORT Ogre-exports\n",
        "Line" : 119,
        "CharPositionInLine" : 33
      },
      "9" : {
        "Text" : "#EXPORT Ogre-exports\n",
        "Line" : 126,
        "CharPositionInLine" : 33
      },
      "10" : {
        "Text" : "#install(EXPORT Ogre-exports DESTINATION ${OGRE_LIB_DIRECTORY})\n",
        "Line" : 133,
        "CharPositionInLine" : 3
      },
      "11" : {
        "Text" : "# setup common target settings\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# add GCC visibility flags to shared library build\n",
        "Line" : 185,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "#set_target_properties(${TARGETNAME} PROPERTIES XCODE_ATTRIBUTE_GCC_INLINES_ARE_PRIVATE_EXTERN[arch=x86_64] \"YES\")\n",
        "Line" : 189,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# setup library build\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# add static prefix, if compiling static version\n",
        "Line" : 199,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# remove lib prefix from DLL outputs\n",
        "Line" : 203,
        "CharPositionInLine" : 3
      },
      "17" : {
        "Text" : "# install debug pdb files\n",
        "Line" : 215,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Set the INSTALL_PATH so that frameworks can be installed in the application package\n",
        "Line" : 246,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "# setup plugin build\n",
        "Line" : 261,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# add static prefix, if compiling static version\n",
        "Line" : 266,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# disable \"lib\" prefix on Unix\n",
        "Line" : 278,
        "CharPositionInLine" : 6
      },
      "22" : {
        "Text" : "# export only if static\n",
        "Line" : 282,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# install debug pdb files\n",
        "Line" : 286,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# setup Ogre sample build\n",
        "Line" : 309,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# set install RPATH for Unix systems\n",
        "Line" : 313,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# On OS X, create .app bundle\n",
        "Line" : 321,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# Add the path where the Ogre framework was found\n",
        "Line" : 324,
        "CharPositionInLine" : 6
      },
      "28" : {
        "Text" : "# disable \"lib\" prefix on Unix\n",
        "Line" : 338,
        "CharPositionInLine" : 6
      },
      "29" : {
        "Text" : "# install debug pdb files - no _d on exe\n",
        "Line" : 356,
        "CharPositionInLine" : 3
      },
      "30" : {
        "Text" : "# Add the path where the Ogre framework was found\n",
        "Line" : 368,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# install debug pdb files - with a _d on lib\n",
        "Line" : 381,
        "CharPositionInLine" : 3
      },
      "32" : {
        "Text" : "# Add the path where the Ogre framework was found\n",
        "Line" : 393,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# Add sample to the list of link targets\n\n# Global property so that we can build this up across entire sample tree\n\n# since vars are local to containing scope of directories / functions\n",
        "Line" : 402,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# setup Ogre tool build\n",
        "Line" : 411,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#set _d debug postfix\n",
        "Line" : 415,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# set install RPATH for Unix systems\n",
        "Line" : 420,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# install debug pdb files\n",
        "Line" : 430,
        "CharPositionInLine" : 6
      },
      "38" : {
        "Text" : "# Get component include dir (different when referencing SDK)\n",
        "Line" : 444,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 39
    },
    "cmake/modules/OgreFindFrameworks.cmake" : {
      "ObjectId" : "a8052d305bfe726f7a07157e724fe2b5ea9f58b8",
      "LastModified" : "2018-11-29T00:53:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - helper module to find OSX frameworks\n\n# Adapted from standard CMake version, but added dependencies\n\n# Standard finder does not look in any variable locations such as \n\n# CMAKE_FRAMEWORK_PATH (not sure why not)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/OgreGetVersion.cmake" : {
      "ObjectId" : "abf839df778f5eacefb9c32caf5d8e9089874649",
      "LastModified" : "2018-11-29T00:53:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/PreprocessorUtils.cmake" : {
      "ObjectId" : "38462a98d42c08688901712076b543757043094e",
      "LastModified" : "2018-11-29T00:53:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/tests/CMakeLists.txt" : {
      "ObjectId" : "5f8dae43f52afba57a541613180dc913ee0bff97",
      "LastModified" : "2018-11-29T00:53:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 19
  },
  "ElapsedTime" : 4228
}