{
  "Repository" : "23031778",
  "Revision" : "HEAD",
  "ObjectId" : "07e2b9dc6e8b3e06233c99693a80dc74702db359",
  "CommitTime" : "2019-03-25T22:51:36Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "a5a95bf5c8554f779e91d23d141b2ad4e7b63dc8",
      "LastModified" : "2019-02-19T19:07:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Remove CMake warnings related to Qt5\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Needed by clang compiler provided by MacPorts or homebrew\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Remove CMake warnings related to rpath on MacOS\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Ensure CMAKE_BUILD_WITH_INSTALL_RPATH is still honored with CMake >= 3.9\n\n# This is needed in order to build tulip-python wheels on MacOS\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# enable the use of ccache for Tulip developers to speed up the build process\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#convert CMAKE_INSTALL_PREFIX path into a cmake style path with unix /\n\n#this is to avoid a path with a '\\' as the last character which may be seen as\n\n#an escape character (e.g. \\\")\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Force build type to release with debug info if none has been provided\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## ========================================================\n\n## Build type detection\n\n## ========================================================\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## ========================================================\n\n## Check processor architecture\n\n## ========================================================\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## ========================================================\n\n## Consider *BSD as Linux\n\n## ========================================================\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## ========================================================\n\n## Operating system preprocessor macros\n\n## ========================================================\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# ensure WIN32 is defined (as it is not the case when compiling with MinGW and C++11 standard activated)\n",
        "Line" : 90,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# ensure math defines (e.g. M_PI) are available (as they have been dropped from C++11 standard)\n",
        "Line" : 92,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "## ========================================================\n\n## AppImage build\n\n## ========================================================\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## ========================================================\n\n## Install paths\n\n## ========================================================\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# workaround an install issue on Debian when using CMake < 3\n\n# see https://github.com/Kitware/CMake/commit/620939e4e6f5a61cd5c0fac2704de4bfda0eb7ef\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## ========================================================\n\n## Tulip CMake macros\n\n## ========================================================\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "## ========================================================\n\n## Tulip version variables\n\n## ========================================================\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#specific options for Visual Studio\n",
        "Line" : 143,
        "CharPositionInLine" : 9
      },
      "19" : {
        "Text" : "# Use two digits for the minor version when generating the Tulip integer version number\n\n# as there was a 4.10 release that breaks preprocessor test like TULIP_INT_VERSION >= 4100 since the 5.0 release\n\n# (see https://sourceforge.net/p/auber/bugs/869/)\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# just a hack to force the display of the full Tulip version in window title bar\n\n# when it contains non digit characters (like alpha, beta, dev, ...)\n",
        "Line" : 160,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "## ========================================================\n\n## Tulip libraries names\n\n## ========================================================\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "## ========================================================\n\n## Current year (used in documentation config files)\n\n## ========================================================\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "## ========================================================\n\n## Compiler-specific options\n\n## ========================================================\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "## ========================================================\n\n## CORE ONLY\n\n## this used to have a minimal build of Tulip without\n\n## any of the opengl, qt or python components\n\n## ========================================================\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# the macro ADD_CORE_FILES will be used\n\n# to collect the files needed to build a minimal Tulip\n\n# in the directory pointed by CMAKE_CURRENT_SOURCE_DIR\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# the macro ADD_CORE_DIRECTORY_EXCEPT will be used\n\n# to exclude the files not needed to build a minimal Tulip\n\n# in the directory pointed by CMAKE_CURRENT_SOURCE_DIR\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# build binaries with install rpath when generating Tulip Python wheels\n\n# for MacOs as we don't install the project in that case\n",
        "Line" : 264,
        "CharPositionInLine" : 6
      },
      "28" : {
        "Text" : "# build binaries with install rpath when generating Tulip Python wheels for Linux\n\n# as we don't install the project in that case\n",
        "Line" : 272,
        "CharPositionInLine" : 6
      },
      "29" : {
        "Text" : "## ========================================================\n\n## Required packages\n\n## ========================================================\n",
        "Line" : 279,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Set some common libraries and headers search paths for MinGW\n",
        "Line" : 283,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# Check if libintl is present in the MinGW build environment\n",
        "Line" : 287,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# Don't need to find zlib when compiling with emscripten as there is an available emscripten port of it\n",
        "Line" : 294,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# ZLIB\n",
        "Line" : 297,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# Qhull\n",
        "Line" : 302,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#Yajl\n",
        "Line" : 311,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# OpenMP (only available with clang starting the 3.7 version with libomp installed)\n",
        "Line" : 314,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# TULIP_CXX_THREADS can be set to force the use of the cxx threads\n\n# regardless the OpenMP availability\n",
        "Line" : 325,
        "CharPositionInLine" : 6
      },
      "38" : {
        "Text" : "# Force setting OpenMP flags on Windows platforms\n",
        "Line" : 349,
        "CharPositionInLine" : 14
      },
      "39" : {
        "Text" : "# OpenGL\n",
        "Line" : 380,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# Glew\n",
        "Line" : 383,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# Jpeg\n",
        "Line" : 386,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# Png\n",
        "Line" : 389,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# Freetype\n",
        "Line" : 392,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# Qt\n",
        "Line" : 395,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "# Quazip\n",
        "Line" : 398,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "# Python\n",
        "Line" : 402,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "## ========================================================\n\n## Include and library paths\n\n## ========================================================\n",
        "Line" : 407,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "## ========================================================\n\n## Point RPATH to lib folder\n\n## ========================================================\n\n# On MacOS, use rpaths (i.e. the \"install_name\" field of shared libraries will be @rpath)\n\n# This is already enabled by default for CMake >= 3.0 (see http://www.cmake.org/cmake/help/v3.0/prop_tgt/MACOSX_RPATH.html)\n",
        "Line" : 458,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# relative locations of Tulip dylibs dependencies are not the sames when generating Python wheel\n",
        "Line" : 467,
        "CharPositionInLine" : 4
      },
      "50" : {
        "Text" : "# CMake >= 3.1.0 does not allow to set the INSTALL_RPATH property on INTERFACE_LIBRARY target type\n",
        "Line" : 474,
        "CharPositionInLine" : 4
      },
      "51" : {
        "Text" : "# MSVC linker PDB files are only generated for shared libraries\n",
        "Line" : 483,
        "CharPositionInLine" : 8
      },
      "52" : {
        "Text" : "## ========================================================\n\n## Tests\n\n## ========================================================\n",
        "Line" : 523,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "## ========================================================\n\n## Create library/tulip/include/tulip/TulipRelease.h base on TulipRelease.h.in\n\n## ========================================================\n",
        "Line" : 532,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "## ========================================================\n\n## Configure file for uninstall target\n\n## ========================================================\n",
        "Line" : 544,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "#  ADD_SUBDIRECTORY(deploy)\n",
        "Line" : 600,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "## ========================================================\n\n## tulip-config script\n\n## ========================================================\n",
        "Line" : 602,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "# for Visual Studio 15.0 2017\n",
        "Line" : 646,
        "CharPositionInLine" : 6
      },
      "58" : {
        "Text" : "# initialize the list of bundle libs (second arg of FIXUP_BUNDLE),\n\n# updated in plugins/view/GeographicView,\n\n# and finally used in software/tulip_perpective/CMakeLists.txt\n",
        "Line" : 656,
        "CharPositionInLine" : 4
      },
      "59" : {
        "Text" : "# generate script to make a tar archive of minimal set of tulip core files\n",
        "Line" : 724,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 60
    },
    "bundlers/CMakeLists.txt" : {
      "ObjectId" : "faf7283a93e7aaad4f3049edda8666b2f0d10324",
      "LastModified" : "2013-06-18T17:24:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "bundlers/win/CMakeLists.txt" : {
      "ObjectId" : "26c151aff0cebc1b72d8b621e7b4264fb6d8953e",
      "LastModified" : "2017-09-19T13:25:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/FindBfd.cmake" : {
      "ObjectId" : "37f887821d3a1f45555201a8c5fee4540bf11e50",
      "LastModified" : "2016-10-07T15:09:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find Bfd\r\n\n# This module finds libbfd.\r\n\n#\r\n\n# It sets the following variables:\r\n\n#  BFD_INCLUDE_DIR\r\n\n#  BFD_LIBRARY\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#MESSAGE(STATUS \"Found bfd header file: ${BFD_INCLUDE_DIR}/bfd.h\")\r\n\n#MESSAGE(STATUS \"Found bfd library: ${BFD_LIBRARY}\")\r\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "cmake/FindCppUnit.cmake" : {
      "ObjectId" : "2f5f89031d366aeac878a0662870c8f9d664e0b2",
      "LastModified" : "2017-05-10T17:48:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find CppUnit includes and library\n\n#\n\n# This module defines\n\n#  CppUnit_INCLUDE_DIRS\n\n#  CppUnit_LIBRARIES, the libraries to link against to use CppUnit.\n\n#  CppUnit_LIBRARY_DIRS, the location of the libraries\n\n#  CppUnit_FOUND, If false, do not try to use CppUnit\n\n#\n\n# Copyright © 2007, Matt Williams\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Windows\n",
        "Line" : 13,
        "CharPositionInLine" : 10
      },
      "2" : {
        "Text" : "# prefer the cppunit dll with Visual Studio\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Unix\n",
        "Line" : 35,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 4
    },
    "cmake/FindFTGL.cmake" : {
      "ObjectId" : "613c659341bfffc0d461f48b2079eb5e65af8cf3",
      "LastModified" : "2015-11-23T21:52:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n#\n\n# Copyright (c) 2008, Lawrence Livermore National Security, LLC.  \n\n# Produced at the Lawrence Livermore National Laboratory  \n\n# Written by bremer5@llnl.gov,pascucci@sci.utah.edu.  \n\n# LLNL-CODE-406031.  \n\n# All rights reserved.  \n\n#   \n\n# This file is part of \"Simple and Flexible Scene Graph Version 2.0.\"\n\n# Please also read BSD_ADDITIONAL.txt.\n\n#   \n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are\n\n# met:\n\n#   \n\n# @ Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the disclaimer below.\n\n# @ Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the disclaimer (as noted below) in\n\n#   the documentation and/or other materials provided with the\n\n#   distribution.\n\n# @ Neither the name of the LLNS/LLNL nor the names of its contributors\n\n#   may be used to endorse or promote products derived from this software\n\n#   without specific prior written permission.\n\n#   \n\n#  \n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL LAWRENCE\n\n# LIVERMORE NATIONAL SECURITY, LLC, THE U.S. DEPARTMENT OF ENERGY OR\n\n# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\n# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\n# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\n# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\n# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\n# NEGLIGENCE OR OTHERWISE) ARISING\n\n#\n\n########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#\n\n# Try to find the FTGL libraries\n\n# Once done this will define\n\n#\n\n# FTGL_FOUND          - system has ftgl\n\n# FTGL_INCLUDE_DIR    - path to FTGL/FTGL.h\n\n# FTGL_LIBRARIES      - the library that must be included\n\n#\n\n#\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# \n\n# On some Macs the -with-gl-lib=xxx/OpenGL.framework flag does not work \n\n# as a quick hack around this issue we append the standard name of the \n\n# necessary library\n\n#\n",
        "Line" : 149,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 3
    },
    "cmake/FindIberty.cmake" : {
      "ObjectId" : "1e82de5caa1b90a6acfd6bc6500a3da88d989210",
      "LastModified" : "2017-05-10T17:48:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find Iberty\r\n\n# This module finds libiberty.\r\n\n#\r\n\n# It sets the following variables:\r\n\n#  IBERTY_INCLUDE_DIR\r\n\n#  IBERTY_LIBRARY\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#MESSAGE(STATUS \"Found iberty header file: ${IBERTY_INCLUDE_DIR}/libiberty.h\")\r\n\n#MESSAGE(STATUS \"Found iberty library: ${IBERTY_LIBRARY}\")\r\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "cmake/FindQhull.cmake" : {
      "ObjectId" : "1b022b7cc512260777e80daefa36cd17eb6c4b75",
      "LastModified" : "2017-10-23T21:27:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "######################################################################################\n\n# File is taken and adapted from the Point Cloud Library (PCL) - www.pointclouds.org (BSD License)\n\n# https://github.com/otherlab/pcl/blob/master/cmake/Modules/FindQhull.cmake\n\n######################################################################################\n\n# Find QHULL\n\n#\n\n# This sets the following variables:\n\n# QHULL_FOUND - True if QHULL was found.\n\n# QHULL_INCLUDE_DIRS - Directories containing the QHULL include files.\n\n# QHULL_LIBRARIES - Libraries needed to use QHULL.\n\n# If QHULL_USE_STATIC is specified then look for static libraries ONLY else \n\n# look for shared ones\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# prefer static qhull on windows\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindQtX.cmake" : {
      "ObjectId" : "344cb21962ee36dd201c8d9b5570fea16024c176",
      "LastModified" : "2019-03-13T07:25:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If CMake does not automatically find Qt5 , the root directory\n\n# of the Qt5 installation must be provided in the CMAKE_PREFIX_PATH variable.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Unset related CMake variables in order to change the Qt5 version (by modifying\n\n# the root Qt5 directory through the CMAKE_PREFIX_PATH variable) without having\n\n# to delete the current CMake cache\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Macro used to workaround a small issue with QtWebkit components on MSYS2:\n\n# when compling in RelWithDebInfo mode, Qt debug libraries are selected instead\n\n# of the release one (this should only happen when compiling in Debug mode)\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Qt5Widgets_VERSION_STRING has been deprecated in favor of Qt5Widgets_VERSION since\n\n# a few releases of Qt5 and seems to have been removed in some Linux distributions\n\n# (experienced on KDE Neon Developer edition that now uses Qt 5.9)\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Standard Qt5 installation\n",
        "Line" : 88,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# MSYS2 special case\n",
        "Line" : 91,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Standard Qt5 installation\n",
        "Line" : 105,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# On Apple platform, we need to link against Qt5DBus and Qt5PrintSupport\n\n# when using the official Qt5 bundle provided by qt.io (dylibs dependencies side effect).\n\n# However, those modules are not necessarily present when using Qt5 from\n\n# Homebrew or MacPorts, so handle those special cases here.\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Check if the Qt5 installation is bundled with WebKit (deprecated since Qt 5.5)\n\n# and setup its use if it is the case.\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# If Qt5 is not bundled with WebKit then check if its installation\n\n# provides WebEngine (new web module since Qt 5.4) and setup its use.\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Define aliases for Qt macros in order to build the project\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# With MinGW, remove the -fPIC compiler option as it is not needed and\n\n# generates a lot of warnings\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "cmake/FindQuaZip.cmake" : {
      "ObjectId" : "1eb7aef9bc11ad0006fffdd7afd5251bd9ea2bd7",
      "LastModified" : "2019-01-21T10:57:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# QUAZIP_FOUND               - QuaZip library was found\n\n# QUAZIP_INCLUDE_DIR         - Path to QuaZip include dir\n\n# QUAZIP_INCLUDE_DIRS        - Path to QuaZip and zlib include dir (combined from QUAZIP_INCLUDE_DIR + ZLIB_INCLUDE_DIR)\n\n# QUAZIP_LIBRARIES           - List of QuaZip libraries\n\n# QUAZIP_ZLIB_INCLUDE_DIR    - The include dir of zlib headers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Unset related CMake variables in order to change the lib version without having to delete the current CMake cache\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# special case when using Qt5 on MSYS2\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# special case when using Qt5 on unix\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# needed by homebrew on MacOS\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# special case when using Qt5 on unix\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "cmake/FindSIP.cmake" : {
      "ObjectId" : "3c90070ac3282566b1eb2ca0172628faa6ef5150",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find SIP\n\n# ~~~~~~~~\n\n#\n\n# SIP website: http://www.riverbankcomputing.co.uk/sip/index.php\n\n#\n\n# Find the installed version of SIP. FindSIP should be called after Python\n\n# has been found.\n\n#\n\n# This file defines the following variables:\n\n#\n\n# SIP_VERSION - The version of SIP found expressed as a 6 digit hex number\n\n#     suitable for comparision as a string.\n\n#\n\n# SIP_VERSION_STR - The version of SIP found as a human readable string.\n\n#\n\n# SIP_EXECUTABLE - Path and filename of the SIP command line executable.\n\n#\n\n# SIP_INCLUDE_DIR - Directory holding the SIP C++ header file.\n\n#\n\n# SIP_DEFAULT_SIP_DIR - Default directory where .sip files should be installed\n\n#     into.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2007, Simon Edwards <simon@simonzone.com>\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindSphinx.cmake" : {
      "ObjectId" : "e0e9ebaf887cea93116162a709210336b1462a20",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - This module looks for Sphinx\n\n# Find the Sphinx documentation generator\n\n#\n\n# This modules defines\n\n#  SPHINX_EXECUTABLE\n\n#  SPHINX_FOUND\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2002-2009 Kitware, Inc.\n\n# Copyright 2009-2011 Peter Colberg\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file COPYING-CMAKE-SCRIPTS for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# remove final /bin component\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/FindTULIP.cmake" : {
      "ObjectId" : "022c73ff604e7f7c27e207eeb8090d6c9bcad933",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#===========================================================================\n\n#\n\n#    Description: Set up CMake environment variables pointing to Tulip components one can use to compile code using Tulip\n\n#    Filename: FindTULIP.cmake\n\n#    Authors: Tulip team\n\n#\n\n#===========================================================================\n\n#\n\n# The FindTULIP script can be used from any CMake-based project to set up environment variables poiting to Tulip libraries and headers directories.\n\n# The FIND_PACKAGE command provides several arguments. While the COMPONENTS argument will be ignored, you can tell FindTULIP to look for a specific version of Tulip libraries:.\n\n#\n\n# FIND_PACKAGE(Tulip 3.5.0 REQUIRED) # Will look for Tulip 3.5.0 or higher\n\n# See CMake documentation for details about the FIND_PACKAGE macro.\n\n#\n\n# By default, this script will try to automatically detect the installation directory of Tulip libraries installed on your system.\n\n# You can override this behavior by defining the TULIP_DIR variable. If this variable is set, FindTulip will only check into that directory for a valid Tulip installation.\n\n#\n\n# This script will output the following variables:\n\n#\n\n# TULIP_DIR (will not be modified if already set): The Tulip installation path\n\n# TULIP_FOUND: This variable is set to true if a valid Tulip installation has been found.\n\n# TULIP_INCLUDE_DIR: The path where Tulip headers are located.\n\n# TULIP_LIBRARIES: Contains path to the Tulip libraries\n\n# TULIP_LIBRARIES_DIR: Contains path to the Tulip libraries\n\n# TULIP_PLUGINS_DIR: Path where Tulip plugins are located\n\n# TULIP_GLYPH_PLUGINS_DIR: Path where Tulip glyph plugins are located\n\n# TULIP_INTERACTOR_PLUGINS_DIR: Path where Tulip interaction plugins are located\n\n# TULIP_VIEW_PLUGINS_DIR: Path where Tulip view plugins are located\n\n# TULIP_PERSPECTIVE_PLUGINS_DIR: Path where Tulip perspective plugins are located\n\n# TULIP_CORE_LIBRARY: The path to the TulipCore module library.\n\n# TULIP_OGL_LIBRARY: The path to the TulipOGL module library.\n\n# TULIP_GUI_LIBRARY: The path to the TulipGUI module library.\n\n# TULIP_OGDF_LIBRARY: The path to the TulipOGDF module library.\n\n# TULIP_PYTHON_LIBRARY: The path to the TulipPython module library.\n\n# TULIP_SHARE_DIR: Installation path for resources\n\n# TULIP_VERSION: Complete version string.\n\n# TULIP_MAJOR_VERSION: Major version digit.\n\n# TULIP_MINOR_VERSION: Minor version digit.\n\n# TULIP_PATCH_VERSION: Patch version digit.\n\n# TULIP_USE_FILE: Additional Tulip-related macro definitions\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define version separator (different for MSVC builds)\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#visual studio does not recognize these options\n",
        "Line" : 44,
        "CharPositionInLine" : 95
      },
      "3" : {
        "Text" : "# A macro to retrieve Tulip version from the TulipRelase.h file\n\n# This will output the following variables:\n\n# TULIP_VERSION: Complete version string.\n\n# TULIP_MAJOR_VERSION: Major version digit.\n\n# TULIP_MINOR_VERSION: Minor version digit.\n\n# TULIP_PATCH_VERSION: Patch version digit.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Unset previous variables\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Check for TulipRelease.h\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Check if the given version corresponds to the one asked when calling FIND_PACKAGE\n\n# This will exit with a fatal error if provided version is considered as not compatible with requested version\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# backward compatibility version check for users that still uses the old TULIP CMake setup (using CMAKE_MODULE_PATH and FindTULIP.cmake)\n",
        "Line" : 93,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# CMAKE_FIND_ROOT_PATH_MODE_* are set to ONLY in the CMake platform file for emscripten\n\n# which prevents FIND_* commands to work correctly, so reset them to BOTH\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Last resort: use CMAKE_MODULE_PATH/../../include/\n",
        "Line" : 111,
        "CharPositionInLine" : 28
      },
      "10" : {
        "Text" : "# get absolute path of Tulip root installation folder\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# set CMAKE_INSTALL_PREFIX in order for the GNUInstallDirs CMake module\n\n# to correctly set the CMAKE_INSTALL_LIBDIR on Debian when Tulip\n\n# has been installed in /usr through a package\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# There is no dynamic linking with emscripten, add dependencies libraries in the TULIP_CORE_LIBRARY variable\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# There is no dynamic linking with emscripten, add dependency library in the TULIP_OGDF_LIBRARY variable\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "cmake/FindYajl.cmake" : {
      "ObjectId" : "97f9acdc85a7a447252319e9f84cda209b906ad4",
      "LastModified" : "2017-05-10T17:48:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find libyajl\n\n# Once done this will define\n\n#  YAJL_FOUND - System has YAJL\n\n#  YAJL_INCLUDE_DIRS - The YAJL include directories\n\n#  YAJL_LIBRARIES - The libraries needed to use YAJL\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/GetGitRevisionDescription.cmake" : {
      "ObjectId" : "8ab03bc5f0b766462e05edb6afbe9c20e8115b46",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Returns a version string from Git\n\n#\n\n# These functions force a re-configure on each git commit so that you can\n\n# trust the values of the variables in your build system.\n\n#\n\n#  get_git_head_revision(<refspecvar> <hashvar> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the refspec and sha hash of the current head revision\n\n#\n\n#  git_describe(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe on the source tree, and adjusting\n\n# the output so that it tests false if an error occurs.\n\n#\n\n#  git_get_exact_tag(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe --exact-match on the source tree,\n\n# and adjusting the output so that it tests false if there was no exact\n\n# matching tag.\n\n#\n\n#  git_local_changes(<var>)\n\n#\n\n# Returns either \"CLEAN\" or \"DIRTY\" with respect to uncommitted changes.\n\n# Uses the return code of \"git diff-index --quiet HEAD --\".\n\n# Does not regard untracked files.\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We must run the following at \"include\" time, not at function call time,\n\n# to find the path to this module rather than the path to a calling list file\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# .git dir not found, search parent directories\n",
        "Line" : 51,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "# We have reached the root directory, we are not in git\n",
        "Line" : 55,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# check if this is a submodule\n",
        "Line" : 62,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# TODO sanitize\n\n#if((${ARGN}\" MATCHES \"&&\") OR\n\n#\t(ARGN MATCHES \"||\") OR\n\n#\t(ARGN MATCHES \"\\\\;\"))\n\n#\tmessage(\"Please report the following error to the project!\")\n\n#\tmessage(FATAL_ERROR \"Looks like someone's doing something nefarious with git_describe! Passed arguments ${ARGN}\")\n\n#endif()\n",
        "Line" : 103,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "#message(STATUS \"Arguments to execute_process: ${ARGN}\")\n",
        "Line" : 111,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 7
    },
    "cmake/TulipPython.cmake" : {
      "ObjectId" : "6dcb8d78540a1aed92220b3301a12a879e2c0b4e",
      "LastModified" : "2019-03-07T10:13:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# After finding the Python interpreter, try to find if SIP and its dev tools are installed on the host system.\n\n# If not, compile the SIP version located in thirdparty.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Unset the previous values of the CMake cache variables related to Python libraries\n\n# in case the value of PYTHON_EXECUTABLE CMake variable changed\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find the Python library with the same version as the interpreter\n\n# Python 3.2 library is suffixed by mu and Python >= 3.3 by m on some systems, also handle these cases\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Ensure the detection of Python library installed trough a bundle downloaded from Python.org\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Ensure that correct Python include path is selected by CMake on Windows\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Ensure that correct Python include path and library are selected by CMake on Linux (in case of non standard installation)\n",
        "Line" : 73,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Check if Python is provided by MSYS2 (it is compiled with GCC in that case instead of MSVC)\n",
        "Line" : 82,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Python 64bits does not provide a dll import library for MinGW.\n\n# Fortunately, we can directly link to the Python dll with that compiler.\n\n# So find the location of that dll and overwrite the PYTHON_LIBRARY CMake cache variable with it\n",
        "Line" : 86,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Check if the Python dll is located in the Python home directory (when Python is installed for current user only)\n",
        "Line" : 98,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#If not, the Python dll is located in %WINDIR%/System32 (when Python is installed for all users)\n",
        "Line" : 101,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# Ensure headers correspond to the ones associated to the detected Python library on MacOS\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# check generation of test wheels\n",
        "Line" : 179,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# When building Python binary wheels on Linux, produced binaries have to be patched\n\n# in order for the tulip modules to be successfully imported and loaded on every computer.\n\n# The 'auditwheel' tool (see https://github.com/pypa/auditwheel) has been developed\n\n# in order to ease that patching task.\n\n# We use our patched version of the auditwheel tool\n\n# as the official one does not repair tulip-gui wheel correctly\n",
        "Line" : 213,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# In order to upload the generated wheels, an account must be created on PyPi\n\n# and the following configuration must be stored in the ~/.pypirc file\n\n##############################################################\n\n# [distutils]\n\n# index-servers=\n\n#     pypi\n\n#     testpypi\n\n#\n\n# [testpypi]\n\n# repository: https://test.pypi.org/legacy/\n\n# username: <your user name goes here>\n\n# password: <your password goes here>\n\n#\n\n# [pypi]\n\n# repository: https://upload.pypi.org/legacy/\n\n# username: <your user name goes here>\n\n# password: <your password goes here>\n\n###############################################################\n",
        "Line" : 240,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 14
    },
    "cmake/TulipUseFile.cmake" : {
      "ObjectId" : "ae01c0d2b945d6bedee7b3ad00253908fe6cd8cd",
      "LastModified" : "2019-03-13T07:25:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# inclusion header guard\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## -----------------------------------------------------------------------------------------------\r\n\n## Toolchains options\r\n\n## -----------------------------------------------------------------------------------------------\r\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# When CMake policy CMP0025 (https://cmake.org/cmake/help/v3.0/policy/CMP0025.html)\r\n\n# is set to NEW, CMAKE_CXX_COMPILER_ID is equal to \"AppleClang\" when using clang\r\n\n# compilers bundled with XCode while it is equal to \"Clang\" when using upstream\r\n\n# clang compilers provided by MacPorts or Homebrew.\r\n\n# So we need to handle both cases to avoid build issues.\r\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# enable C++11 (not required for GCC >= 6.1 as the standard is enabled by default)\r\n\n# set -std=c++11 only if no other standard (eg. c++14, c++17, gnu++11, gnu++14, gnu++1z)\r\n\n# has already been manually specified\r\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Visual Studio does not recognize these options\r\n",
        "Line" : 53,
        "CharPositionInLine" : 15
      },
      "5" : {
        "Text" : "# disable annoying GCC 7.x compilation warnings\r\n",
        "Line" : 57,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# That compiler flag is required on FreeBSD in order to get a backtrace when Tulip crashes\r\n",
        "Line" : 66,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# Those flags are required to compile Tulip with gcc >= 4.8 or clang on FreeBSD 9.x and 10.x\r\n",
        "Line" : 69,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# Need to set rpath for the right libstdc++ to use\r\n",
        "Line" : 72,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# Ensure emscripten port of zlib is compiled before compiling Tulip\r\n",
        "Line" : 92,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "#visual studio does not recognize these options\r\n",
        "Line" : 112,
        "CharPositionInLine" : 17
      },
      "11" : {
        "Text" : "# Dynamic ling against libstdc++ on win32/MinGW\r\n\n# The second test is for the case where ccache is used (CMAKE_CXX_COMPILER_ARG1 contains the path to the g++ compiler)\r\n",
        "Line" : 113,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "#GCC 4.4 use double dashes and gcc 4.6 single dashes for this option\r\n",
        "Line" : 118,
        "CharPositionInLine" : 10
      },
      "13" : {
        "Text" : "# Visual studio 2008 needs boost\r\n",
        "Line" : 133,
        "CharPositionInLine" : 55
      },
      "14" : {
        "Text" : "# Tells VS to use multiple threads to compile\r\n",
        "Line" : 138,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# Makes VS define M_PI\r\n",
        "Line" : 140,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# Prevents VS to define min and max macros (name clash with std::min and std::max)\r\n",
        "Line" : 142,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# Don't warn about the use of unsafe function\r\n",
        "Line" : 144,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# Disable some annoying compiler warnings\r\n",
        "Line" : 146,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "# Need to use response files with MSYS Makefiles and recent CMake version (>= 3.7) bundled by MSYS2\r\n\n# otherwise OGDF library in thirdparty fails to link\r\n",
        "Line" : 169,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# for backward compatibility with Tulip < 5.1 for external projects\r\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Plugin server generation\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# for backward compatibility with Tulip < 5.1 for external projects\r\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# External libraries macros\r\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# get paths to MINGW binaries, libraries and headers\r\n",
        "Line" : 237,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# Try to locate a dll whose name matches the regular expression passed as argument\r\n\n# by looking in the following directories :\r\n\n#    * those stored in the CMAKE_LIBRARY_PATH environment variable\r\n\n#    * those stored in the CMAKE_LIBRARY_PATH CMake variable\r\n\n#    * the MinGW binaries directory\r\n\n#    * the Qt binaries directory\r\n\n# If a dll is found, install it in the application binaries directory\r\n",
        "Line" : 261,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Get path of MSVC compiler\r\n",
        "Line" : 300,
        "CharPositionInLine" : 6
      },
      "27" : {
        "Text" : "# Get root path of Visual Studio\r\n",
        "Line" : 306,
        "CharPositionInLine" : 6
      },
      "28" : {
        "Text" : "# Add temporarily some paths to the PATH environment variable in order to locate some dlls needed to run lib.exe command (mspdb*.dll)\r\n",
        "Line" : 318,
        "CharPositionInLine" : 6
      },
      "29" : {
        "Text" : "# Run the lib.exe command to list the content of the library file\r\n",
        "Line" : 323,
        "CharPositionInLine" : 6
      },
      "30" : {
        "Text" : "# If the library is an import library, lib.exe outputs the associated dll name instead of the object files for a static libary\r\n",
        "Line" : 325,
        "CharPositionInLine" : 6
      },
      "31" : {
        "Text" : "# Restore original PATH environement variable value\r\n",
        "Line" : 327,
        "CharPositionInLine" : 6
      },
      "32" : {
        "Text" : "# That macro checks if an external library has to be installed in the application directory.\r\n\n# It first checks if the library provided as argument is an import library or a static library (for MinGW and MSVC).\r\n\n# For MinGW, it also checks if the provided library is a dll (as that compiler allows to directly link with such a library).\r\n\n# If the library is static, it does not need to be installed in the application directory.\r\n\n# If the library is an import one, the name of the associated dll is retrieved from it and then provided as parameter to the INSTALL_EXTERNAL_LIB macro.\r\n\n# If the library is a dll, its name is provided as parameter to the INSTALL_EXTERNAL_LIB macro.\r\n",
        "Line" : 332,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# If an import library is used, we can easily retrieve the dll name with the dlltool utility\r\n",
        "Line" : 343,
        "CharPositionInLine" : 6
      },
      "34" : {
        "Text" : "# If a dll is directly used, just extract its name from its path\r\n",
        "Line" : 349,
        "CharPositionInLine" : 6
      },
      "35" : {
        "Text" : "# If we found a dll name, we need to install that dll\r\n",
        "Line" : 360,
        "CharPositionInLine" : 6
      },
      "36" : {
        "Text" : "# If an import library is used, we can easily retrieve the dll name with the dlltool utility\r\n",
        "Line" : 373,
        "CharPositionInLine" : 6
      },
      "37" : {
        "Text" : "# If a dll is directly used, just extract its name from its path\r\n",
        "Line" : 379,
        "CharPositionInLine" : 6
      },
      "38" : {
        "Text" : "# If we found a dll name, we need to install that dll\r\n",
        "Line" : 390,
        "CharPositionInLine" : 6
      },
      "39" : {
        "Text" : "# optionnal parameters of the macro corresponds to targets that depend on the above created custom target\r\n",
        "Line" : 417,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# internal cache variable to hold the names of the Tulip plugin targets\r\n",
        "Line" : 425,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Tulip Plugin install macro (its purpose is to disable the installation of MinGW import libraries)\r\n",
        "Line" : 428,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# append the plugin target to the overall plugin targets list\r\n",
        "Line" : 437,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# When building a Python wheel, copy Tulip plugins in wheel build folder\r\n\n# in order to package them with the Tulip Python bindings\r\n",
        "Line" : 440,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# for backward compatibility with Tulip < 5.1 for external projects\r\n",
        "Line" : 449,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Convert a Windows path (C:/folder) to a Msys path (/C/folder)\r\n",
        "Line" : 468,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Convert a Msys path (/c/folder) to a Windows path (c:/folder)\r\n",
        "Line" : 473,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    },
    "cmake/generate_product_version.cmake" : {
      "ObjectId" : "61f55dd4eb63a505c665a7b9d62f2438b5b5cf9b",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#CMakeHelpers library, distributed under MIT license\r\n\n#\r\n\n#Copyright (C) 2015, by halex2005\r\n\n#\r\n\n#Report bugs and download new versions at https://github.com/halex2005/CMakeHelpers\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# generate_product_version() function\r\n\n#\r\n\n# This function uses VersionInfo.in template file and VersionResource.rc file\r\n\n# to generate WIN32 resource with version information and general resource strings.\r\n\n#\r\n\n# Usage:\r\n\n#   generate_product_version(\r\n\n#     SomeOutputResourceVariable\r\n\n#     NAME MyGreatProject\r\n\n#     ICON ${PATH_TO_APP_ICON}\r\n\n#     VERSION_MAJOR 2\r\n\n#     VERSION_MINOR 3\r\n\n#     VERSION_PATH ${BUILD_COUNTER}\r\n\n#     VERSION_REVISION ${BUILD_REVISION}\r\n\n#   )\r\n\n# where BUILD_COUNTER and BUILD_REVISION could be values from your CI server.\r\n\n#\r\n\n# You can use generated resource for your executable targets:\r\n\n#   add_executable(target-name ${target-files} ${SomeOutputResourceVariable})\r\n\n#\r\n\n# You can specify resource strings in arguments:\r\n\n#   NAME               - name of executable (no defaults, ex: Microsoft Word)\r\n\n#   BUNDLE             - bundle (${NAME} is default, ex: Microsoft Office)\r\n\n#   ICON               - path to application icon (${CMAKE_SOURCE_DIR}/product.ico by default)\r\n\n#   VERSION_MAJOR      - 1 is default\r\n\n#   VERSION_MINOR      - 0 is default\r\n\n#   VERSION_PATCH      - 0 is default\r\n\n#   VERSION_REVISION   - 0 is default\r\n\n#   COMPANY_NAME       - your company name (no defaults)\r\n\n#   COMPANY_COPYRIGHT  - ${COMPANY_NAME} (C) Copyright ${CURRENT_YEAR} is default\r\n\n#   COMMENTS           - ${NAME} v${VERSION_MAJOR}.${VERSION_MINOR} is default\r\n\n#   ORIGINAL_FILENAME  - ${NAME} is default\r\n\n#   INTERNAL_NAME      - ${NAME} is default\r\n\n#   FILE_DESCRIPTION   - ${NAME} is default\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "demos/CMakeLists.txt" : {
      "ObjectId" : "4ebfc543abff376e3a925380b3a09cf9184dac60",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "demos/clique_import/CMakeLists.txt" : {
      "ObjectId" : "a7a4d071b9f28992482a6b4550f1bd09ff92f3e2",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "demos/graph_display/CMakeLists.txt" : {
      "ObjectId" : "f633a986885e51c946c5826fb995d53bbfbab731",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "demos/graph_manipulations/CMakeLists.txt" : {
      "ObjectId" : "6face67f072a7b4085220c8fc1e89dadb900aec4",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\r\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "demos/interactor_plugin/CMakeLists.txt" : {
      "ObjectId" : "e85641dc9ad83fde53c5aff91025abd23f1f2dc9",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deploy/CMakeLists.txt" : {
      "ObjectId" : "1fde8b8e26d2135caa2ae4db152196a78a08aaf8",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/CMakeLists.txt" : {
      "ObjectId" : "14263748797be03bb9f01e2a6a3b2037829713e0",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Only\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Unset the previous values of the CMake cache variable SPHINX_EXECUTABLE\n\n# in case the value of PYTHON_EXECUTABLE CMake variable changed\n\n# but save it before into D_SPHINX_EXECUTABLE to be able to restore it\n\n# in case there will be no other available\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# restore the previously defined value\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "doc/developer/CMakeLists.txt" : {
      "ObjectId" : "747ad6ee2e838c624b58bb364a7fe50e7a7f28af",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Turn CMAKE_LIBRARY_PATH list into a string in order to pass all its contents to the CMake command generating the doc,\n\n# only the first list entry is transferred otherwise.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Ensure that libraries paths are in MSYS format when using MSYS Makefiles,\n\n# otherwise the documentation fails to build\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "doc/developer/Makefile" : {
      "ObjectId" : "eb6827072e040e688e96bed266a5dae75886c04a",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Internal variables.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "doc/developer/genSphinxDoc.cmake" : {
      "ObjectId" : "7d5773e1ad832c28dc60598afca779cbb713596a",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Turn back the CMAKE_LIBRARY_PATH string into a list\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Fix possible sphinx-build issue on Windows\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fix an encoding issue on Mac OS\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "doc/doxygen/CMakeLists.txt" : {
      "ObjectId" : "8c3ac07a57a55f0fb050eaccd9afe1b8573d6a39",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# this doc is only build & installed on linux or MacOSX\n\n# when doxygen is available\n\n# check for dot to enable the generation of class diagrams\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# custom css for navtree and tabs does not work anymore since the 1.8.13 release of doxygen, use default theme instead\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "doc/python/CMakeLists.txt" : {
      "ObjectId" : "151c442393532092c7a426d716f08d2531aab5fc",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# On windows, it is required that the paths to the dll dependencies (e.g. zlib, libpng, ...) are contained\n\n# in the CMAKE_LIBRARY_PATH variable (especially with Visual Studio).\n\n# Some warnings will be output when configuring the whole project if it is not the case.\n\n# Otherwise, the Python API documentation will not be generated as the import of the tulip modules will fail.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Turn CMAKE_LIBRARY_PATH list into a string in order to pass all its contents to the CMake command generating the doc,\n\n# only the first list entry is transferred otherwise.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Ensure that libraries paths are in MSYS format when using MSYS Makefiles,\n\n# otherwise the documentation fails to build\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# copy .py files in CMAKE_CURRENT_BINARY_DIR\n\n# in order to avoid polluting the source tree with python .pyc files\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "doc/python/genSphinxDoc.cmake" : {
      "ObjectId" : "9bdcfce00613fbfe00a92c4c964f8c146c8ee073",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Turn back the CMAKE_LIBRARY_PATH string into a list\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# On windows, we need to add the paths to all the dll dependencies of the tulip Python modules\n\n# in the PATH environment variable, otherwise the import of the tulip modules will fail\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add the paths of the tulip Python modules in the PYTHONPATH environement variable\n\n# in order for the interpreter to import them\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add the path of the sip Python module if we compile it from thirdparty as\n\n# the tulip modules depend on it\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# On non windows systems, the character separating the paths in an environement variable\n\n# is a ':' not a ';' (generated by CMake when turning a list into string)\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Fix an encoding issue on Mac OS\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Generate Tulip plugins documentation file from embedded plugins metadata\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Everything is now set up, we can generate the documentation\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "doc/user/CMakeLists.txt" : {
      "ObjectId" : "f39368edef68fa1ad30194af9e340e5c54507e54",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Turn CMAKE_LIBRARY_PATH list into a string in order to pass all its contents to the CMake command generating the doc,\n\n# only the first list entry is transferred otherwise.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Ensure that libraries paths are in MSYS format when using MSYS Makefiles,\n\n# otherwise the documentation fails to build\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "doc/user/Makefile" : {
      "ObjectId" : "eb6827072e040e688e96bed266a5dae75886c04a",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Internal variables.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "doc/user/genSphinxDoc.cmake" : {
      "ObjectId" : "7d5773e1ad832c28dc60598afca779cbb713596a",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Turn back the CMAKE_LIBRARY_PATH string into a list\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Fix possible sphinx-build issue on Windows\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fix an encoding issue on Mac OS\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "externalplugins/CMakeLists.txt" : {
      "ObjectId" : "081495d7069ac7212c9fe0f4e5e6e0648053b8a7",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Automatic subdirectory search for CMakeLists.txt\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "externalplugins/FindTULIP.cmake" : {
      "ObjectId" : "26e0d8c780f03f3f4644df0de4b6559888f26fd7",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "library/CMakeLists.txt" : {
      "ObjectId" : "f4812167100172d130bff257a5d484b2720a2093",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "library/tulip-core/CMakeLists.txt" : {
      "ObjectId" : "5d49670ece855833df6e643168f5beb897354ec7",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "library/tulip-core/include/CMakeLists.txt" : {
      "ObjectId" : "e02b85c0bc96069eb2de86dc060cf642ae2033b9",
      "LastModified" : "2019-03-14T09:31:31Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "library/tulip-core/src/CMakeLists.txt" : {
      "ObjectId" : "1ec69315ed5afae15d1d70d11e5bdba5ffa656fc",
      "LastModified" : "2019-03-14T09:31:31Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "library/tulip-gui/CMakeLists.txt" : {
      "ObjectId" : "437af05c760bce5ee83e57bcd70042c1d0952ed8",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "library/tulip-gui/include/CMakeLists.txt" : {
      "ObjectId" : "149735e46f138c899a186ab54341fa4e37d41677",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "library/tulip-gui/src/CMakeLists.txt" : {
      "ObjectId" : "800b87c1d6e889e2c4dcb132893da362d56fde3b",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "library/tulip-ogdf/CMakeLists.txt" : {
      "ObjectId" : "eabb9cd37d1f873ccfc97b4b22384ffade6e6afe",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "library/tulip-ogl/CMakeLists.txt" : {
      "ObjectId" : "d3f0eed21bfab17426cfca49f3387a57b3344f00",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "library/tulip-ogl/bitmaps/CMakeLists.txt" : {
      "ObjectId" : "3f4cd8ebd14e2d8b3778405e76230459a1f48241",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "library/tulip-ogl/include/CMakeLists.txt" : {
      "ObjectId" : "10116949bcf8d4319ece5e893e9f2ff9b91a187f",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "library/tulip-ogl/src/CMakeLists.txt" : {
      "ObjectId" : "c6c0b1a9cff0972b765d223849c3a510ea3f046a",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "library/tulip-python/CMakeLists.txt" : {
      "ObjectId" : "cabee4351568254b6f210d4302e77dc159cafcbf",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# VS2013 and beyond implement C99 math functions.  Of interest to Python is the function round().\n\n# Python conditionally provides its own implementation of round() based on whether or not HAVE_ROUND is defined, but in no case is HAVE_ROUND ever defined.\n\n# This leads to a huge spew of warnings when compiling with VS2013, and presumably it also leads to undefined behavior.\n\n# So define HAVE_ROUND for that compiler.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# libtulip-python is not needed when not building tulip gui\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "library/tulip-python/api/CMakeLists.txt" : {
      "ObjectId" : "d72e4b51c9abf6097e2f7c96a684fa5a58a88a1d",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "library/tulip-python/bindings/CMakeLists.txt" : {
      "ObjectId" : "4c3260434d7b7771b2a0f79c4e9d7ebbc80251b1",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "library/tulip-python/bindings/stl/CMakeLists.txt" : {
      "ObjectId" : "ed459fa1388a245e4acc7a2659c31f3e14c6e2dc",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Force to use SIP and headers located in thirdparty\n\n# instead of those installed in the system\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# When building Python wheel for MacOS, don't link the C extension module with the Python library\n\n# and use dynamic lookup for retrieving its symbols.\n\n# That way, we can produce a C extension module that can be imported through the Python interpreter\n\n# provided by Apple with the System and the one provided by Python.org\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "library/tulip-python/bindings/tulip-core/CMakeLists.txt" : {
      "ObjectId" : "79aa7a5ecb6b7e3199b923bc51d34d1a75e1bc90",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Visual Studio has a limit for string constants length\n\n# so we define the sip feature NO_LIMIT_DOC in Module.sip\n\n# to avoid the compiler error (fatal error C1091)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Force to use SIP and headers located in thirdparty\n\n# instead of those installed in the system\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Ensure bindings build output folder exists\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# On MacOS, add the paths of dependencies dylibs in install rpaths of the _tulip.so binary\n\n# That way, the tulip module can be imported in a classical Python shell without having to\n\n# modify the content of the DYLD_LIBRARY_PATH environment variable\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# When building Python wheel for MacOS, don't link the C extension module with the Python library\n\n# and use dynamic lookup for retrieving its symbols.\n\n# That way, we can produce a C extension module that can be imported through the Python interpreter\n\n# provided by Apple with the System and the one provided by Python.org\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "library/tulip-python/bindings/tulip-core/generatePropertiesBindings.cmake" : {
      "ObjectId" : "37c024f929a050e8cf8bb9ff1e9e62c36e78758f",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "library/tulip-python/bindings/tulip-core/packaging/copyTulipCoreDllDependencies.cmake" : {
      "ObjectId" : "81fff2337d3f4b4f222a9524ea18659561355ee0",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Get top level prerequisites (no recursion as it fails with python >= 3.4)\r\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The DLL_DEP_RESOLVED variable is not set when calling GP_RESOLVE_ITEM\r\n\n# even if the item is correctly resolved (I added some debug messages to GetPrerequisites.cmake to verify).\r\n\n# My guess is PARENT_SCOPE is not honored when executing cmake in script mode ($ cmake -P ...).\r\n\n# Hopefully, CMake provides a hook mechanism called at the end of the GP_RESOLVE_ITEM process\r\n\n# that enables us to get the resolved item\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Store the resolved top level items for the tulip module in an environment variable (as PARENT_SCOPE does not seem\r\n\n# to work when executing CMake in script mode ($ cmake -P ...)\r\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Append the top level prerequisites items to the TULIP_NATIVE_PYTHON_MODULE_DEPS list\r\n\n# and resolve them (get their absolute path)\r\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Get recusively prerequisites of top level prerequisites and append them to the TULIP_NATIVE_PYTHON_MODULE_DEPS list\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Remove duplicate entries in the TULIP_NATIVE_PYTHON_MODULE_DEPS list\r\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Finally, resolve all prerequisites for the tulip Python module and copy them to the module native folder\r\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "library/tulip-python/bindings/tulip-gui/CMakeLists.txt" : {
      "ObjectId" : "c5ce7c409a33f166fed8e7affd1f0529f0695325",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Force to use SIP headers located in thirdparty\n\n# instead of those installed in the system\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Ensure bindings build output folder exists\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# On MacOS, add the paths of dependencies dylibs in install rpaths of the _tulipgui.so binary\n\n# That way, the tulipgui module can be imported in a classical Python shell without having to\n\n# modify the content of the DYLD_LIBRARY_PATH environment variable\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "library/tulip-python/include/CMakeLists.txt" : {
      "ObjectId" : "dfb5b54be361530d32252a59bb5ac2873f2855fb",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "library/tulip-python/modules/CMakeLists.txt" : {
      "ObjectId" : "d372ce974642d9a0c81b38cfd6636512ded913ee",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# tulipplugins.py must be found by python tests and doc\n\n# but it cannot be compiled in the its source dir\n\n# so we will copy it in the current binary dir\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "library/tulip-python/plugins/CMakeLists.txt" : {
      "ObjectId" : "b3b986975c02ec93efe5456bfe37af404615ad06",
      "LastModified" : "2019-03-14T09:31:31Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "library/tulip-python/src/CMakeLists.txt" : {
      "ObjectId" : "beb050bba7fffbeb9a3ebfcb232088db448efeae",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# to disable deprecated register warnings with Python 2.7.13 headers\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "plugins/CMakeLists.txt" : {
      "ObjectId" : "54045d323055cbc6d7cf47f172e6a4a2c1dbc7ca",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/clustering/CMakeLists.txt" : {
      "ObjectId" : "4a5414bfc529ca99450426c0402d29d70e6af037",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "plugins/clustering/Delaunay/CMakeLists.txt" : {
      "ObjectId" : "824d8a7ec5096e13691cd96ffc233d5d3a8fd8dc",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/colors/CMakeLists.txt" : {
      "ObjectId" : "2d406fd53072b737d5b473c47aa3aaa7f87527f9",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/export/CMakeLists.txt" : {
      "ObjectId" : "3592e19fc24d4e9917803756e5c0774b0c9abd75",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/export/SVGExport/CMakeLists.txt" : {
      "ObjectId" : "80861448d0397f31b1606508789102128868a998",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/general/CMakeLists.txt" : {
      "ObjectId" : "cea171dca87e4d2df7eb3e89f21432f76261100c",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/general/CurveEdges/CMakeLists.txt" : {
      "ObjectId" : "6e0391d0932733b0c3ca7a47d6a1c77faf4de11b",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/general/EdgeBundling/CMakeLists.txt" : {
      "ObjectId" : "68408c043b468eb49589d692b506efad4ad9867a",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/general/ReverseEdges/CMakeLists.txt" : {
      "ObjectId" : "0c0f88821e5fb378494447b08185bedb4d096cc6",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/glyph/CMakeLists.txt" : {
      "ObjectId" : "d0b47856ad2fc5f353e7d58f9b4fc16c76868cd4",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/import/BibTeX/CMakeLists.txt" : {
      "ObjectId" : "59a0b1175ebe9aeec8ca363a8dda01ddda8e9042",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/import/CMakeLists.txt" : {
      "ObjectId" : "740ec9bd15d2cf3c03a4f5607a986ddc9f62de05",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##------------0----------------------------------------------------------------------------------------------------------------\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "plugins/import/SocialNetwork/CMakeLists.txt" : {
      "ObjectId" : "fc95769c0cea5c9351db79a091bf6091de16728e",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/interactor/CMakeLists.txt" : {
      "ObjectId" : "511484a9fb569521e35afef14ad200cfcf7cd247",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "plugins/interactor/FishEye/CMakeLists.txt" : {
      "ObjectId" : "cb76364f7eb372ad0b9d50ea8a71030372e68db2",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/interactor/MouseLassoNodesSelector/CMakeLists.txt" : {
      "ObjectId" : "c1d8b024f90ee3c5954f7db27ad02e8dc7a9d219",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/interactor/MouseMagnifyingGlass/CMakeLists.txt" : {
      "ObjectId" : "ddde52559c98d66f11b125443d985c9201a87eb5",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/interactor/NeighborhoodHighlighter/CMakeLists.txt" : {
      "ObjectId" : "1b31e59d466302da2bd3c5f9c6dd76a29ee12abf",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/interactor/PathFinder/CMakeLists.txt" : {
      "ObjectId" : "9fc421593db94111dbf6e8b3906d194818aeabe1",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/layout/CMakeLists.txt" : {
      "ObjectId" : "5080f0b558dcece3ce28927074098c10d972088f",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "plugins/layout/FastOverlapRemoval/CMakeLists.txt" : {
      "ObjectId" : "831aee10bb1869db34ea6d3e9283a78bd0088695",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/layout/Grip/CMakeLists.txt" : {
      "ObjectId" : "b3e8fb39869c579e1ee3eb41d599b95849c49651",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/layout/LinLog/CMakeLists.txt" : {
      "ObjectId" : "ac51049575a7f2d7272bd56ccd13d2756e6bcbcc",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/layout/OGDF/CMakeLists.txt" : {
      "ObjectId" : "2b8bd0030c260b57abe07dfa0e00d36818f593d0",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/metric/CMakeLists.txt" : {
      "ObjectId" : "665eab6515cd4cdeee40d4c7f36778cb69a76c0b",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "plugins/perspective/CMakeLists.txt" : {
      "ObjectId" : "a638b3ec59ae2ebe68211082527957b6eee3b38f",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/perspective/GraphPerspective/CMakeLists.txt" : {
      "ObjectId" : "b360c866de1e254f232c851cd8036501e5cdd144",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/selection/CMakeLists.txt" : {
      "ObjectId" : "f95821cc345bb1415e9e9bb3d833452db2ef681e",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "plugins/sizes/CMakeLists.txt" : {
      "ObjectId" : "655cc20355bf030ef7b0205c101152d96f81d40d",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "plugins/string/CMakeLists.txt" : {
      "ObjectId" : "ca597bac925ef5e532df0037140778d9332bd2f8",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/test/CMakeLists.txt" : {
      "ObjectId" : "a14004c0efad80d05ac48a35a293d857781d776e",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "##----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "plugins/view/CMakeLists.txt" : {
      "ObjectId" : "fa5364a83e2100b76d82727dc02424360c869848",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/view/GeographicView/CMakeLists.txt" : {
      "ObjectId" : "4b335154a30975289d95ecc194a2af511713e018",
      "LastModified" : "2019-03-14T09:31:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# update the list of bundle libs\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "plugins/view/HistogramView/CMakeLists.txt" : {
      "ObjectId" : "dad10ee410834be3e5779dcac83544331f5be3f9",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/view/MatrixView/CMakeLists.txt" : {
      "ObjectId" : "234e192625f1b158335a2155d2eb54eb325192e3",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/view/ParallelCoordinatesView/CMakeLists.txt" : {
      "ObjectId" : "cc824f11f53811b0433e2161105864d628f1d494",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/view/PixelOrientedView/CMakeLists.txt" : {
      "ObjectId" : "905a8c6ce38ec81f18ee7d9e5b01702224baa809",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/view/SOMView/CMakeLists.txt" : {
      "ObjectId" : "147e927eb2a60c33bfdd12b1dbebcb9cc302dceb",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/view/SOMView/SOMLIB/CMakeLists.txt" : {
      "ObjectId" : "6b55a28c31420c2d4f178f7910bb8272684f6b72",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/view/ScatterPlot2DView/CMakeLists.txt" : {
      "ObjectId" : "f992eec4ae4f94c8b1c0031bc6b79a229b92c030",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/view/TableView/CMakeLists.txt" : {
      "ObjectId" : "811e0b02d07d1c2390a54c8742a9737571b49e84",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "software/CMakeLists.txt" : {
      "ObjectId" : "b59b58515193b3b416fb7dae545c095390983891",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "software/bitmaps/CMakeLists.txt" : {
      "ObjectId" : "d1805cc6290f680022f6b6e90dcc2092aaabe17e",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "software/crash_handling/CMakeLists.txt" : {
      "ObjectId" : "3557d57e135bc6de55d5d6507cf2fc2818e9cda5",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ensure correct bfd header file is selected with MSYS2\n",
        "Line" : 11,
        "CharPositionInLine" : 6
      },
      "1" : {
        "Text" : "# ensure correct binutils libraries are selected with MSYS2\n",
        "Line" : 13,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "# ensure correct iberty header file is selected with MSYS2\n",
        "Line" : 15,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# workaround for latest versions of GNU binutils\n",
        "Line" : 27,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# some build environments requires the need to link against the intl library\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "software/plugin_server/CMakeLists.txt" : {
      "ObjectId" : "8a56ca3a36e01f7ffa1539f2be56a2970c8a7003",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#QTX_WRAP_CPP(pluginPusher_MOC_SRCS WebDavManager.h)\n\n#ADD_EXECUTABLE(pushPlugins PluginPusher.cpp WebDavManager.cpp ${pluginPusher_MOC_SRCS})\n\n#TARGET_LINK_LIBRARIES(pushPlugins ${LibTulipGUIName} ${QT_LIBRARIES})\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# needs to link against all Tulip libs to be able to load all tulip plugins\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#  INSTALL(TARGETS pushPlugins DESTINATION ${TulipBinInstallDir} COMPONENT plugin_server)\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "software/tulip/CMakeLists.txt" : {
      "ObjectId" : "1f5b1a7c778823f8378fb4a5e73bbebb653ca94b",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "software/tulip_perspective/CMakeLists.txt" : {
      "ObjectId" : "18db55c100bafd26a46ddb29b861f7d2ea7f0abc",
      "LastModified" : "2019-03-14T09:31:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# That simple install command does the magic of gathering all required dll dependencies\n\n# in order to run Tulip and copy them to the bin install folder (thanks to the CMake module named BundleUtilities)\n\n# In the case where a dll dependency is not automatically found, you must add its path to the CMAKE_LIBRARY_PATH variable.\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# copy required Qt plugins\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# then schedule a call to FIXUP_BUNDLE at the end of the CMake install process\n\n# this process is configured here instead in the root CMakeLists.txt as\n\n# CMake inserts install commands before the ones defined in sub directories\n\n# and we need Tulip to be fully installed before running the bundle fixing process\n",
        "Line" : 61,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# When generating Tulip installers using MSYS2, we need to bundle OpenSSL\n\n# libraries in order for the Geographic view to work correctly.\n\n# As Qt5 does not link directly to OpenSSL for license issue and thus use\n\n# a dynamic loading approach, we are forced to use the following trick to copy\n\n# the needed dlls into the Tulip install folder.\n",
        "Line" : 73,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "e421dac65b970156d9202eec180bd7262dce9e91",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# this is a cpp[unit] test\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# otherwise this is a Python test\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# In order to run the tests on windows, we need to add the paths of the dll depencencies (cppunit, tulip, gzstream, yajl)\n\n# in the PATH environment variable\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# add Tulip modules path to PYTHONPATH in order to run the Python tests\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# set tests environment\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "tests/library/CMakeLists.txt" : {
      "ObjectId" : "cd8eec8c66e3b2233d095253c2d548e4e47fcd74",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/library/tulip/CMakeLists.txt" : {
      "ObjectId" : "44bf3e03ef3021755e93abc8a882915d245bd894",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# disable MSVC warning 'potential divide by 0' for DoublePropertyTest\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/plugins/CMakeLists.txt" : {
      "ObjectId" : "6195cc188288fe20a6f71ec67e36662b572e3863",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/python/CMakeLists.txt" : {
      "ObjectId" : "54beed4085e133dcfbfaf2238c32aab3d4a60945",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "textures/CMakeLists.txt" : {
      "ObjectId" : "8e646d5b23ea98c20e6ea431a99a342a3938ac00",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "thirdparty/CMakeLists.txt" : {
      "ObjectId" : "2b762aee9ea4601b5999829df0ad55f39808683f",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "thirdparty/OGDF/CMakeLists.txt" : {
      "ObjectId" : "610344764f472d2d5ed8d487d09b0da3e76b59fc",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# the use of debug flags below cause crash\r\n\n#IF(CMAKE_DEBUG_MODE)\r\n\n#  SET(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -DOGDF_DEBUG -DOGDF_MEMORY_MALLOC_TS\")\r\n\n#ENDIF(CMAKE_DEBUG_MODE)\r\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "thirdparty/OGDF/Makefile" : {
      "ObjectId" : "2d49f816866e02c0060a554d79d440acecde71db",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\n\n## BEGIN Makefile.header\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# feel free to use \"debug\" and \"cleandebug\" for below for debug!\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#generate doxygen documentation\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# clean doxygen documentation\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##############################################################################\n\n## END Makefile.header\n\n##############################################################################\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#######################################################\n\n# test binary targets\n",
        "Line" : 21548,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#######################################################\n\n# all, clean, etc. for debug\n",
        "Line" : 22220,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#######################################################\n\n# all, clean, etc. for release\n",
        "Line" : 22245,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "thirdparty/OGDF/_examples/Makefile" : {
      "ObjectId" : "849d4c0df1dae9036816f618ff64d405b13e98d5",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "thirdparty/OGDF/_examples/basic/Makefile" : {
      "ObjectId" : "463eda2f0381056b470dfa9afce0d3bf1e42a324",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "thirdparty/OGDF/_examples/layout/Makefile" : {
      "ObjectId" : "ad72e5771516ad941d40051ebcd95918a2a91bd1",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "thirdparty/OGDF/_examples/special/Makefile" : {
      "ObjectId" : "f71ac040f6a1ddcfb92a4ed1f444652f46ea0be4",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "thirdparty/antlr/CMakeLists.txt" : {
      "ObjectId" : "fe25129b42c6c842bf44cb9193db76f7709f01cf",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "thirdparty/ftgl/CMakeLists.txt" : {
      "ObjectId" : "7d5ded9e142e779d2ba9d144877ec9b6f70a5b89",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Prevent link issues with MSVC when freetype is dynamically linked\n\n# against zlib and libpng\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "thirdparty/gzstream/CMakeLists.txt" : {
      "ObjectId" : "b9a7c53cfea19ec18059b064cc898fd91f42245e",
      "LastModified" : "2019-03-14T09:31:31Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "thirdparty/libqhull/CMakeLists.txt" : {
      "ObjectId" : "286005966eb92a9208598433c8e9027008d34e6f",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "thirdparty/libtess2/CMakeLists.txt" : {
      "ObjectId" : "6b4940c42d80d214b73129e4df953eeb5bab38e6",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "thirdparty/quazip/CMakeLists.txt" : {
      "ObjectId" : "72982bdf66d1815b6b336285ce7c34ba915f8379",
      "LastModified" : "2019-02-11T07:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Must be added to enable export macro\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Link against ZLIB_LIBRARIES if needed (on Windows this variable is empty)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "thirdparty/sip-4.19.14/CMakeLists.txt" : {
      "ObjectId" : "ac1e36e4a368a7104c314a044723f617b3c6ad8b",
      "LastModified" : "2019-03-14T09:31:31Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "thirdparty/sip-4.19.14/sipgen/CMakeLists.txt" : {
      "ObjectId" : "2c3d2fbf64a2d0d099f58250f3e06dbc1954e3c2",
      "LastModified" : "2019-03-14T09:31:31Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "thirdparty/sip-4.19.14/siplib/CMakeLists.txt" : {
      "ObjectId" : "f2ac8c469aef88eedb16d9fa44c11079b91cd1cc",
      "LastModified" : "2019-03-14T09:31:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Force to use SIP and headers located in thirdparty\n\n# instead of those installed in the system\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# When building Python wheel for MacOS, don't link the C extension module with the Python library\n\n# and use dynamic lookup for retrieving its symbols.\n\n# That way, we can produce a C extension module that can be imported through the Python interpreter\n\n# provided by Apple with the System and the one provided by Python.org\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Ensure bindings build output folder exists\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "thirdparty/xdkbibtex/CMakeLists.txt" : {
      "ObjectId" : "a9b143d3b18741f3249cc580d5bd521a669b8a70",
      "LastModified" : "2019-03-14T09:31:31Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "thirdparty/yajl/CMakeLists.txt" : {
      "ObjectId" : "b8523193c84768f6a7a1949f6cc0d72399cea67f",
      "LastModified" : "2019-03-14T09:31:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2007-2014, Lloyd Hilaiel <me@lloyd.io>\n\n#\n\n# Permission to use, copy, modify, and/or distribute this software for any\n\n# purpose with or without fee is hereby granted, provided that the above\n\n# copyright notice and this permission notice appear in all copies.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n\n# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n\n# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n\n# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n\n# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n\n# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n\n# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#ADD_SUBDIRECTORY(test)\n\n#ADD_SUBDIRECTORY(reformatter)\n\n#ADD_SUBDIRECTORY(verify)\n\n#ADD_SUBDIRECTORY(example)\n\n#ADD_SUBDIRECTORY(perf)\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#INCLUDE(YAJLDoc.cmake)\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## a test target\n\n#ADD_CUSTOM_TARGET(test\n\n#                  ./run_tests.sh ${CMAKE_CURRENT_BINARY_DIR}/test/parsing/yajl_test\n\n#                  WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/parsing)\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#ADD_CUSTOM_TARGET(test-api ${CMAKE_CURRENT_SOURCE_DIR}/test/api/run_tests.sh\n\n#                  WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/test/api)\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "thirdparty/yajl/YAJLDoc.cmake" : {
      "ObjectId" : "049cdef2c43b3677847d7aa49546b47b027e55c6",
      "LastModified" : "2019-03-14T09:31:31Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "thirdparty/yajl/example/CMakeLists.txt" : {
      "ObjectId" : "0a7f6220c741db904206ee1b1566f4ffd21da42f",
      "LastModified" : "2019-03-14T09:31:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2007-2014, Lloyd Hilaiel <me@lloyd.io>\n\n#\n\n# Permission to use, copy, modify, and/or distribute this software for any\n\n# purpose with or without fee is hereby granted, provided that the above\n\n# copyright notice and this permission notice appear in all copies.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n\n# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n\n# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n\n# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n\n# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n\n# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n\n# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# use the library we build, duh.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "thirdparty/yajl/perf/CMakeLists.txt" : {
      "ObjectId" : "b438d7a1c4bdb5c6172e2d66df13bbb48495cba5",
      "LastModified" : "2019-03-14T09:31:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2007-2014, Lloyd Hilaiel <me@lloyd.io>\n\n#\n\n# Permission to use, copy, modify, and/or distribute this software for any\n\n# purpose with or without fee is hereby granted, provided that the above\n\n# copyright notice and this permission notice appear in all copies.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n\n# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n\n# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n\n# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n\n# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n\n# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n\n# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# use the library we build, duh.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "thirdparty/yajl/reformatter/CMakeLists.txt" : {
      "ObjectId" : "52a9bee8a60b6187f392298f9ad892108cc0f1a8",
      "LastModified" : "2019-03-14T09:31:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2007-2014, Lloyd Hilaiel <me@lloyd.io>\n\n#\n\n# Permission to use, copy, modify, and/or distribute this software for any\n\n# purpose with or without fee is hereby granted, provided that the above\n\n# copyright notice and this permission notice appear in all copies.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n\n# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n\n# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n\n# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n\n# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n\n# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n\n# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set up a paths\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# create a directories\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# use the library we build, duh.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# In some environments, we must explicitly link libm (like qnx,\n\n# thanks @shahbag)\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# copy the binary into the output directory\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "thirdparty/yajl/src/CMakeLists.txt" : {
      "ObjectId" : "c9e848c158bc3747fc6054a6891a99360c11d3cc",
      "LastModified" : "2019-03-14T09:31:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2007-2014, Lloyd Hilaiel <me@lloyd.io>\n\n#\n\n# Permission to use, copy, modify, and/or distribute this software for any\n\n# purpose with or without fee is hereby granted, provided that the above\n\n# copyright notice and this permission notice appear in all copies.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n\n# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n\n# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n\n# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n\n# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n\n# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n\n# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# useful when fixing lexer bugs.\n\n#ADD_DEFINITIONS(-DYAJL_LEXER_DEBUG)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Ensure defined when building YAJL (as opposed to using it from\n\n# another project).  Used to ensure correct function export when\n\n# building win32 DLL.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# set up some paths\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# set the output path for libraries\n\n# SET(LIBRARY_OUTPUT_PATH ${libDir})\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#ADD_LIBRARY(yajl_s STATIC ${SRCS} ${HDRS} ${PUB_HDRS})\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#### setup shared library version number\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#### ensure a .dylib has correct absolute installation paths upon installation\n\n#IF(APPLE)\n\n#  MESSAGE(\"INSTALL_NAME_DIR: ${CMAKE_INSTALL_PREFIX}/lib\")\n\n#  SET_TARGET_PROPERTIES(${YajlLibrary} PROPERTIES\n\n#                        INSTALL_NAME_DIR \"${CMAKE_INSTALL_PREFIX}/lib\")\n\n#ENDIF(APPLE)\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#### build up an sdk as a post build step\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# create some directories\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# generate build-time source\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# copy public headers to output directory\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# at build time you may specify the cmake variable LIB_SUFFIX to handle\n\n# 64-bit systems which use 'lib64'\n\n#INSTALL(TARGETS yajl\n\n#        RUNTIME DESTINATION lib${LIB_SUFFIX}\n\n#        LIBRARY DESTINATION lib${LIB_SUFFIX}\n\n#        ARCHIVE DESTINATION lib${LIB_SUFFIX})\n\n#INSTALL(TARGETS yajl_s ARCHIVE DESTINATION lib${LIB_SUFFIX})\n\n#INSTALL(FILES ${PUB_HDRS} DESTINATION include/yajl)\n\n#INSTALL(FILES ${incDir}/yajl_version.h DESTINATION include/yajl)\n\n#INSTALL(FILES ${shareDir}/yajl.pc DESTINATION share/pkgconfig)\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "thirdparty/yajl/src/api/yajl_version.h.cmake" : {
      "ObjectId" : "4262ff71f9bd7f620850d33f59eba14bbaf21f75",
      "LastModified" : "2019-03-14T09:31:31Z",
      "FileType" : "CMAKESOURCE",
      "CommentCount" : 0
    },
    "thirdparty/yajl/src/yajl.pc.cmake" : {
      "ObjectId" : "6eaca146599fe48a119a9f7da28a50fd01738b70",
      "LastModified" : "2019-03-14T09:31:31Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "thirdparty/yajl/src/yajl/yajl_version.h.cmake" : {
      "ObjectId" : "4262ff71f9bd7f620850d33f59eba14bbaf21f75",
      "LastModified" : "2019-03-14T09:31:31Z",
      "FileType" : "CMAKESOURCE",
      "CommentCount" : 0
    },
    "thirdparty/yajl/test/CMakeLists.txt" : {
      "ObjectId" : "c07ee0afb4afa3b1402b9835be0e19a566c664e7",
      "LastModified" : "2019-03-14T09:31:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2007-2014, Lloyd Hilaiel <me@lloyd.io>\n\n#\n\n# Permission to use, copy, modify, and/or distribute this software for any\n\n# purpose with or without fee is hereby granted, provided that the above\n\n# copyright notice and this permission notice appear in all copies.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n\n# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n\n# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n\n# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n\n# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n\n# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n\n# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "thirdparty/yajl/test/api/CMakeLists.txt" : {
      "ObjectId" : "cd65a5427a6938daf70c6f360e26c3550dff3542",
      "LastModified" : "2019-03-14T09:31:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2007-2014, Lloyd Hilaiel <me@lloyd.io>\n\n#\n\n# Permission to use, copy, modify, and/or distribute this software for any\n\n# purpose with or without fee is hereby granted, provided that the above\n\n# copyright notice and this permission notice appear in all copies.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n\n# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n\n# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n\n# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n\n# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n\n# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n\n# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# for each test, we'll create a target, and make the api-tests target depend on it\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "thirdparty/yajl/test/parsing/CMakeLists.txt" : {
      "ObjectId" : "c22a38870f0409847638e5d3862fc5eec97e6ca7",
      "LastModified" : "2019-03-14T09:31:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2007-2014, Lloyd Hilaiel <me@lloyd.io>\n\n#\n\n# Permission to use, copy, modify, and/or distribute this software for any\n\n# purpose with or without fee is hereby granted, provided that the above\n\n# copyright notice and this permission notice appear in all copies.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n\n# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n\n# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n\n# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n\n# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n\n# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n\n# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# use the library we build, duh.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "thirdparty/yajl/verify/CMakeLists.txt" : {
      "ObjectId" : "967fca16073f3d41cc91cc165ac3864dce1adf25",
      "LastModified" : "2019-03-14T09:31:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2007-2014, Lloyd Hilaiel <me@lloyd.io>\n\n#\n\n# Permission to use, copy, modify, and/or distribute this software for any\n\n# purpose with or without fee is hereby granted, provided that the above\n\n# copyright notice and this permission notice appear in all copies.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n\n# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n\n# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n\n# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n\n# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n\n# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n\n# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set up some paths\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# create some directories\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# use the library we build, duh.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# copy in the binary\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    }
  },
  "FileTypes" : {
    "CMAKE" : 135,
    "CMAKESOURCE" : 2,
    "MAKEFILE" : 7
  },
  "ElapsedTime" : 5154
}