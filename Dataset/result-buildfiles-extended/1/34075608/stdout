{
  "Repository" : "34075608",
  "Revision" : "HEAD",
  "ObjectId" : "f20df4c123b5d658ff72ec1b2946de5711e79347",
  "CommitTime" : "2019-03-23T20:42:38Z",
  "Files" : {
    "3rdparty/glew-2.1.0/Makefile" : {
      "ObjectId" : "b991460a17efdd6a5f3157275c62c2d2ff8e3942",
      "LastModified" : "2018-08-20T19:58:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#!gmake\n\n## The OpenGL Extension Wrangler Library\n\n## Copyright (C) 2002-2008, Milan Ikits <milan ikits[]ieee org>\n\n## Copyright (C) 2002-2008, Marcelo E. Magallon <mmagallo[]debian org>\n\n## Copyright (C) 2002, Lev Povalahev\n\n## All rights reserved.\n\n## \n\n## Redistribution and use in source and binary forms, with or without \n\n## modification, are permitted provided that the following conditions are met:\n\n## \n\n## * Redistributions of source code must retain the above copyright notice, \n\n##   this list of conditions and the following disclaimer.\n\n## * Redistributions in binary form must reproduce the above copyright notice, \n\n##   this list of conditions and the following disclaimer in the documentation \n\n##   and/or other materials provided with the distribution.\n\n## * The name of the author may be used to endorse or promote products \n\n##   derived from this software without specific prior written permission.\n\n##\n\n## THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" \n\n## AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE \n\n## IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n## ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE \n\n## LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR \n\n## CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF \n\n## SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n## INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n## CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n## ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF\n\n## THE POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# To disable stripping of linked binaries either:\n\n#   - use STRIP= on gmake command-line\n\n#   - edit this makefile to set STRIP to the empty string\n\n# (Note: STRIP does not affect the strip in the install step)\n\n#\n\n# To disable symlinks:\n\n#   - use LN= on gmake command-line\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# GLEW shared and static libraries\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Force re-write of glew.pc, GLEW_DEST can vary\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# GLEW utility programs\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Don't build glewinfo or visualinfo for NaCL, yet.\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Install targets\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# runtime\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# development files\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Distributions\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "3rdparty/glew-2.1.0/auto/Makefile" : {
      "ObjectId" : "ff9dd3613d1036afc58cbc74b28a22616108fed8",
      "LastModified" : "2018-08-20T19:58:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "## Copyright (C) 2002-2008, Marcelo E. Magallon <mmagallo[]debian org>\n\n## Copyright (C) 2002-2008, Milan Ikits <milan ikits[]ieee org>\n\n##\n\n## This program is distributed under the terms and conditions of the GNU\n\n## General Public License Version 2 as published by the Free Software\n\n## Foundation or, at your option, any later version.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#GLEW_SPLIT_SOURCE = yes\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "### Use git repository for GL extension specifications\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n### Conventional desktop OpenGL settings\n\n###\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###\n\n### Experimental OpenGL ES settings\n\n###\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# REGISTRY     = registry/gles\n\n# EXT          = extensions/gles\n\n# FILTER       = filter_gles_ext.sh\n\n# CORE         = core/gles\n\n# REGISTRY_URL = http://www.khronos.org/registry/gles/\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#GL_CORE_SPEC  := $(shell grep GL_VERSION custom.txt    |                       perl -pi -e \"s=^=$(CORE)/=g;\")\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#GLX_CORE_SPEC := $(shell grep GLX_VERSION custom.txt   |                       perl -pi -e \"s=^=$(CORE)/=g;\")\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Update documentation\n",
        "Line" : 308,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#<a href=\"$(@F)\">(.*)</a>#\\1#' > $@\n",
        "Line" : 315,
        "CharPositionInLine" : 12
      },
      "10" : {
        "Text" : "#<a href=\"$(@F)\">(.*)</a>#\\1#' $@\n",
        "Line" : 325,
        "CharPositionInLine" : 15
      },
      "11" : {
        "Text" : "#<a href=\"$(@F)\">(.*)</a>#\\1#' $@\n",
        "Line" : 335,
        "CharPositionInLine" : 15
      },
      "12" : {
        "Text" : "#<a href=\"$(@F)\">(.*)</a>#\\1#' $@\n",
        "Line" : 345,
        "CharPositionInLine" : 15
      },
      "CommentCount" : 13
    },
    "3rdparty/glew-2.1.0/build/cmake/CMakeLists.txt" : {
      "ObjectId" : "5081e0f3997829af7ff21429dc9dc3588b3c276f",
      "LastModified" : "2018-08-20T19:58:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# get version from config/version\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# X11 required when builing visualinfo and glewinfo,\n\n# but not for Windows or Apple OSX platforms\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#### Regal mode ####\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#### OSMesa mode ####\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#### GLEW ####\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# add options from visual studio project\n",
        "Line" : 103,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# kill security checks which are dependent on stdlib\n",
        "Line" : 107,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# remove stdlib dependency\n",
        "Line" : 110,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# remove stdlib dependency on windows with GCC and Clang (for similar reasons\n\n# as to MSVC - to allow it to be used with any Windows compiler)\n",
        "Line" : 114,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#  Mac OSX has no glu.pc unless optional X11/GLX is installed\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "3rdparty/glew-2.1.0/build/cmake/CopyImportedTargetProperties.cmake" : {
      "ObjectId" : "a7ade9842ea7bf1b2296eafb6653046243272a59",
      "LastModified" : "2018-08-20T19:58:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# CopyImportedTargetProperties\n\n# --------------------------\n\n#\n\n# Copies the `INTERFACE*` and `IMPORTED*` properties from a target\n\n# to another one.\n\n# This function can be used to duplicate an `IMPORTED` or an `ALIAS` library\n\n# with a different name since ``add_library(... ALIAS ...)`` does not work\n\n# for those targets.\n\n#\n\n# ::\n\n#\n\n#   copy_imported_target_properties(<source-target> <destination-target>)\n\n#\n\n# The function copies all the `INTERFACE*` and `IMPORTED*` target\n\n# properties from `<source-target>` to `<destination-target>`.\n\n#\n\n# The function uses the `IMPORTED_CONFIGURATIONS` property to determine\n\n# which configuration-dependent properties should be copied\n\n# (`IMPORTED_LOCATION_<CONFIG>`, etc...)\n\n#\n\n# Example:\n\n#\n\n# Internally the CMake project of ZLIB builds the ``zlib`` and\n\n# ``zlibstatic`` targets which can be exported in the ``ZLIB::`` namespace\n\n# with the ``install(EXPORT ...)`` command.\n\n#\n\n# The config-module will then create the import libraries ``ZLIB::zlib`` and\n\n# ``ZLIB::zlibstatic``. To use ``ZLIB::zlibstatic`` under the standard\n\n# ``ZLIB::ZLIB`` name we need to create the ``ZLIB::ZLIB`` imported library\n\n# and copy the appropriate properties:\n\n#\n\n#   add_library(ZLIB::ZLIB STATIC IMPORTED)\n\n#   copy_imported_target_properties(ZLIB::zlibstatic ZLIB::ZLIB)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# copy configuration-independent properties\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# message(STATUS \"set_target_properties(${dest_target} PROPERTIES ${prop} ${v})\")\n",
        "Line" : 68,
        "CharPositionInLine" : 12
      },
      "3" : {
        "Text" : "# copy configuration-dependent properties\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# message(STATUS \"set_target_properties(${dest_target} PROPERTIES ${prop} ${v})\")\n",
        "Line" : 84,
        "CharPositionInLine" : 16
      },
      "CommentCount" : 5
    },
    "3rdparty/glew-2.1.0/build/cmake/glew-config.cmake" : {
      "ObjectId" : "0b79c0b1455d56fe3dd4df03dc94461dc87c9269",
      "LastModified" : "2018-08-20T19:58:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This config-module creates the following import libraries:\n\n#\n\n# - GLEW::glew shared lib\n\n# - GLEW::glew_s static lib\n\n#\n\n# Additionally GLEW::GLEW will be created as an\n\n# copy of either the shared (default) or the static libs.\n\n#\n\n# Dependending on the setting of BUILD_SHARED_LIBS at GLEW build time\n\n# either the static or shared versions may not be available.\n\n#\n\n# Set GLEW_USE_STATIC_LIBS to OFF or ON to force using the shared\n\n# or static lib for GLEW::GLEW \n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# decide which import library (glew/glew_s)\n\n# needs to be copied to GLEW::GLEW\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# if defined, use only static or shared\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# else use static only if no shared\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# CMake doesn't allow creating ALIAS lib for an IMPORTED lib\n\n# so create imported ones and copy the properties\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# message(STATUS \"add_library(${_glew_dest_target} ${_glew_target_type} IMPORTED)\")\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "3rdparty/glew-2.1.0/build/cmake/testbuild/CMakeLists.txt" : {
      "ObjectId" : "27bcf2d761c783c901b7a9eb4fb98f94cff666a2",
      "LastModified" : "2018-08-20T19:58:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# call twice to test multiple call\n",
        "Line" : 5,
        "CharPositionInLine" : 35
      },
      "CommentCount" : 1
    },
    "3rdparty/glew-2.1.0/build/conan/FindGLEW.cmake" : {
      "ObjectId" : "4c10b305deb2859675427a576d496b1c222da01f",
      "LastModified" : "2018-08-20T19:58:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/glew-2.1.0/build/conan/test_package/CMakeLists.txt" : {
      "ObjectId" : "351a7783db801703c5bba7cfc2e8a57eb17ae4c2",
      "LastModified" : "2018-08-20T19:58:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/glew-2.1.0/build/vc6/Makefile" : {
      "ObjectId" : "5a4f5d6ab2aff657226ddc418ead8c25a0247faa",
      "LastModified" : "2018-08-20T19:58:32Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "3rdparty/glfw-3.2.1/CMake/amd64-mingw32msvc.cmake" : {
      "ObjectId" : "705e251d3917f3787eca55aa3b3b0e303aee548f",
      "LastModified" : "2018-08-20T19:58:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the environment for cross compiling from Linux to Win64\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configure the behaviour of the find commands \n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "3rdparty/glfw-3.2.1/CMake/i586-mingw32msvc.cmake" : {
      "ObjectId" : "393ddbda3019706378b25bb3d1abb634a3936866",
      "LastModified" : "2018-08-20T19:58:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the environment for cross compiling from Linux to Win32\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configure the behaviour of the find commands \n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "3rdparty/glfw-3.2.1/CMake/i686-pc-mingw32.cmake" : {
      "ObjectId" : "9a46aef7b3457c8382fe16b3ad2e5a776f7f5f7d",
      "LastModified" : "2018-08-20T19:58:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the environment for cross compiling from Linux to Win32\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Target system name\n",
        "Line" : 2,
        "CharPositionInLine" : 34
      },
      "2" : {
        "Text" : "#Configure the behaviour of the find commands \n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "3rdparty/glfw-3.2.1/CMake/i686-w64-mingw32.cmake" : {
      "ObjectId" : "9bd60936de2ed08f365601fbbfe404adbb37853a",
      "LastModified" : "2018-08-20T19:58:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the environment for cross compiling from Linux to Win32\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Target system name\n",
        "Line" : 2,
        "CharPositionInLine" : 34
      },
      "2" : {
        "Text" : "# Configure the behaviour of the find commands \n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "3rdparty/glfw-3.2.1/CMake/modules/FindMir.cmake" : {
      "ObjectId" : "b1a495ba191db856c27e790cecd100a7288eeb89",
      "LastModified" : "2018-08-20T19:58:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find Mir on a Unix system\n\n#\n\n# This will define:\n\n#\n\n#   MIR_LIBRARIES   - Link these to use Wayland\n\n#   MIR_INCLUDE_DIR - Include directory for Wayland\n\n#\n\n# Copyright (c) 2014 Brandon Schaefer <brandon.schaefer@canonical.com>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rdparty/glfw-3.2.1/CMake/modules/FindVulkan.cmake" : {
      "ObjectId" : "d3a664a8bda6d16449d86c24781e0f28a3ebaec8",
      "LastModified" : "2018-08-20T19:58:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find Vulkan\n\n#\n\n# VULKAN_INCLUDE_DIR\n\n# VULKAN_LIBRARY\n\n# VULKAN_FOUND\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rdparty/glfw-3.2.1/CMake/modules/FindWaylandProtocols.cmake" : {
      "ObjectId" : "8eb83f27ef88575f80a56198bd2635580452a914",
      "LastModified" : "2018-08-20T19:58:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/glfw-3.2.1/CMake/modules/FindXKBCommon.cmake" : {
      "ObjectId" : "0f571eeacb5cd91d4ef72a89a066142e5a6a0d0a",
      "LastModified" : "2018-08-20T19:58:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find XKBCommon\n\n# Once done, this will define\n\n#\n\n#   XKBCOMMON_FOUND - System has XKBCommon\n\n#   XKBCOMMON_INCLUDE_DIRS - The XKBCommon include directories\n\n#   XKBCOMMON_LIBRARIES - The libraries needed to use XKBCommon\n\n#   XKBCOMMON_DEFINITIONS - Compiler switches required for using XKBCommon\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rdparty/glfw-3.2.1/CMake/x86_64-w64-mingw32.cmake" : {
      "ObjectId" : "84b2c701ec1d9e2ee0b72f3031cfccb4a81d205e",
      "LastModified" : "2018-08-20T19:58:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the environment for cross compiling from Linux to Win32\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Target system name\n",
        "Line" : 2,
        "CharPositionInLine" : 34
      },
      "2" : {
        "Text" : "# Configure the behaviour of the find commands \n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "3rdparty/glfw-3.2.1/CMakeLists.txt" : {
      "ObjectId" : "b1476bd551de2529970ad80b8365ccd58a9dbb82",
      "LastModified" : "2018-08-20T19:58:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Until all major package systems have moved to CMake 3,\n\n# we stick with the older INSTALL_NAME_DIR mechanism\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# On Unix-like systems, shared libraries can use the soname system.\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Set compiler specific flags\n\n#--------------------------------------------------------------------\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Workaround for legacy MinGW not providing XInput and DirectInput\n",
        "Line" : 98,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Enable link-time exploit mitigation features enabled by default on MSVC\n",
        "Line" : 107,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Compatibility with data execution prevention (DEP)\n",
        "Line" : 110,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Compatibility with address space layout randomization (ASLR)\n",
        "Line" : 117,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Compatibility with 64-bit address space layout randomization (ASLR)\n",
        "Line" : 124,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Detect and select backend APIs\n\n#--------------------------------------------------------------------\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Add Vulkan static library if requested\n\n#--------------------------------------------------------------------\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Find and add Unix math and time libraries\n\n#--------------------------------------------------------------------\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Use Win32 for window creation\n\n#--------------------------------------------------------------------\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Use X11 for window creation\n\n#--------------------------------------------------------------------\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Set up library and include paths\n",
        "Line" : 216,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Check for XRandR (modern resolution switching and gamma control)\n",
        "Line" : 220,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Check for Xinerama (legacy multi-monitor support)\n",
        "Line" : 229,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Check for Xf86VidMode (fallback gamma control)\n",
        "Line" : 238,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Backwards compatibility (see CMake bug 0006976)\n",
        "Line" : 246,
        "CharPositionInLine" : 12
      },
      "18" : {
        "Text" : "# Check for Xkb (X keyboard extension)\n",
        "Line" : 253,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Check for Xcursor\n",
        "Line" : 260,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Use Wayland for window creation\n\n#--------------------------------------------------------------------\n",
        "Line" : 271,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Use Mir for window creation\n\n#--------------------------------------------------------------------\n",
        "Line" : 293,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Use Cocoa for window creation and NSOpenGL for context creation\n\n#--------------------------------------------------------------------\n",
        "Line" : 309,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Set up library and include paths\n",
        "Line" : 326,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Export GLFW library dependencies\n\n#--------------------------------------------------------------------\n",
        "Line" : 344,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Create generated files\n\n#--------------------------------------------------------------------\n",
        "Line" : 354,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Add subdirectories\n\n#--------------------------------------------------------------------\n",
        "Line" : 374,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Install files other than the library\n\n# The library is installed by src/CMakeLists.txt\n\n#--------------------------------------------------------------------\n",
        "Line" : 391,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Only generate this target if no higher-level project already has\n",
        "Line" : 409,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 29
    },
    "3rdparty/glfw-3.2.1/examples/CMakeLists.txt" : {
      "ObjectId" : "138a781667cd08c68582a6a9e54ff0fede8b1bc7",
      "LastModified" : "2018-08-20T19:58:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tell MSVC to use main instead of WinMain for Windows subsystem executables\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "3rdparty/glfw-3.2.1/src/CMakeLists.txt" : {
      "ObjectId" : "5042aba382aa86dba035b84c5955adef6f7ee821",
      "LastModified" : "2018-08-20T19:58:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# For some reason, CMake doesn't know about .m\n",
        "Line" : 51,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# HACK: When building on MinGW, WINVER and UNICODE need to be defined before\n\n# the inclusion of stddef.h (by glfw3.h), which is itself included before\n\n# win32_platform.h.  We define them here until a saner solution can be found\n\n# NOTE: MinGW-w64 and Visual C++ do /not/ need this hack.\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Enable a reasonable set of warnings (no, -Wextra is not reasonable)\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Remove the lib prefix on the DLL (but not the import library\n",
        "Line" : 87,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "# Add a suffix to the import library to avoid naming conflicts\n",
        "Line" : 90,
        "CharPositionInLine" : 12
      },
      "5" : {
        "Text" : "# Add a suffix to the import library to avoid naming conflicts\n",
        "Line" : 93,
        "CharPositionInLine" : 12
      },
      "6" : {
        "Text" : "# Add -fno-common to work around a bug in Apple's GCC\n",
        "Line" : 97,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Hide symbols not explicitly tagged for export from the shared library\n",
        "Line" : 103,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 8
    },
    "3rdparty/glfw-3.2.1/tests/CMakeLists.txt" : {
      "ObjectId" : "205ec377e8991752950b8a71234f49a3b2c7981c",
      "LastModified" : "2018-08-20T19:58:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tell MSVC to use main instead of WinMain for Windows subsystem executables\n",
        "Line" : 61,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "3rdparty/glm-0.9.8.0/CMakeLists.txt" : {
      "ObjectId" : "712c463f6a2dbf9595ca4996b3a48a4959e01bca",
      "LastModified" : "2018-08-20T19:58:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# VC doesn't support /arch:SSE3\t\n",
        "Line" : 132,
        "CharPositionInLine" : 30
      },
      "1" : {
        "Text" : "#add_definitions(-S)\n\n#add_definitions(-s)\n",
        "Line" : 145,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "#add_definitions(-fprofile-arcs -ftest-coverage) gcov\n\n#ctest_enable_coverage()\n",
        "Line" : 149,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# build tree package config\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# install tree package config\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# build pkg-config file\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# install pkg-config file\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "3rdparty/glm-0.9.8.0/glm/CMakeLists.txt" : {
      "ObjectId" : "d60a887712d6b0346b52b4748c3d87f00340b931",
      "LastModified" : "2018-08-20T19:58:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/glm-0.9.8.0/test/CMakeLists.txt" : {
      "ObjectId" : "2d216c8968f7e5524f24d8377cd8a6caa3c78c99",
      "LastModified" : "2018-08-20T19:58:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/glm-0.9.8.0/test/bug/CMakeLists.txt" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2018-08-20T19:58:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/glm-0.9.8.0/test/core/CMakeLists.txt" : {
      "ObjectId" : "f83823d630518542e38d083a3ab10370ec8b548a",
      "LastModified" : "2018-08-20T19:58:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/glm-0.9.8.0/test/external/gli/CMakeLists.txt" : {
      "ObjectId" : "6b91c28801ad559b9f69b60a1122d5d25f1b43b7",
      "LastModified" : "2018-08-20T19:58:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/glm-0.9.8.0/test/gtc/CMakeLists.txt" : {
      "ObjectId" : "ab26247a8af1c0d726dfd4d75e67c09c71f3362c",
      "LastModified" : "2018-08-20T19:58:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/glm-0.9.8.0/test/gtx/CMakeLists.txt" : {
      "ObjectId" : "7b40dce2663038614dd0a135609f8096378ae5c4",
      "LastModified" : "2018-08-20T19:58:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#glmCreateTestGTC(gtx_simd_vec4)\n\n#glmCreateTestGTC(gtx_simd_mat4)\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMakeLists.txt" : {
      "ObjectId" : "ac41da6beddc90680572b0ff26bb06cf5e440ba3",
      "LastModified" : "2019-03-11T10:15:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The version number\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# OpenCV\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# find_package(OpenCV 3 REQUIRED PATHS \"$ENV{OPENCVDIR}/build\")\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Turn on the ability to create folders to organize projects (.vcproj)\n\n# It creates \"CMakePredefinedTargets\" folder by default and adds CMake defined projects like INSTALL.vcproj and ZERO_CHECK.vcproj\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Sets\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# in MacOS\n",
        "Line" : 29,
        "CharPositionInLine" : 25
      },
      "6" : {
        "Text" : "# in Linux\n",
        "Line" : 31,
        "CharPositionInLine" : 23
      },
      "7" : {
        "Text" : "#install\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# MacOS\t\n",
        "Line" : 57,
        "CharPositionInLine" : 44
      },
      "9" : {
        "Text" : "# MacOS\n",
        "Line" : 58,
        "CharPositionInLine" : 93
      },
      "10" : {
        "Text" : "#definitions\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Options\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#OpenGL  \n",
        "Line" : 75,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# GLFW  \n",
        "Line" : 78,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# Sub-directories where more CMakeLists.txt exist\n",
        "Line" : 89,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# ===============================\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Add all targets to the build-tree export set\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Export the package for use from the build-tree\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Create the FooBarConfig.cmake and FooBarConfigVersion files\n\n# REL_INCLUDE_DIR = include\n\n# ... for the build tree\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# ... for the install tree\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# ... for both\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Install the FooBarConfig.cmake and FooBarConfigVersion.cmake\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Install the export set for use with the install-tree\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "demos/CMakeLists.txt" : {
      "ObjectId" : "95e4f590895ee4eee623e44947fb5c05ee86c3ac",
      "LastModified" : "2019-02-15T16:15:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Properties -> C/C++ -> General -> Additional Include Directories\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Properties -> Linker -> General -> Additional Library Directories\r\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ================================================= DEMO 1D =================================================\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# in Visual Studio\r\n",
        "Line" : 20,
        "CharPositionInLine" : 71
      },
      "4" : {
        "Text" : "# Properties->Linker->Input->Additional Dependencies\r\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#install\r\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ================================================= DEMO 2D =================================================\r\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# in Visual Studio\r\n",
        "Line" : 34,
        "CharPositionInLine" : 71
      },
      "8" : {
        "Text" : "# Properties->Linker->Input->Additional Dependencies\r\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#install\r\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ================================================= DEMO FEX ================================================\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# in Visual Studio\r\n",
        "Line" : 48,
        "CharPositionInLine" : 84
      },
      "12" : {
        "Text" : "# Properties->Linker->Input->Additional Dependencies\r\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#install\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# ============================================ DEMO RANDOM MODEL ============================================\r\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# in Visual Studio\r\n",
        "Line" : 62,
        "CharPositionInLine" : 85
      },
      "16" : {
        "Text" : "# Properties->Linker->Input->Additional Dependencies\r\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#install\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# =============================================== DEMO TRAIN ================================================\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# in Visual Studio\r\n",
        "Line" : 76,
        "CharPositionInLine" : 76
      },
      "20" : {
        "Text" : "# Properties->Linker->Input->Additional Dependencies\r\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#install\r\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# =============================================== DEMO DENSE ================================================\r\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# in Visual Studio\r\n",
        "Line" : 90,
        "CharPositionInLine" : 76
      },
      "24" : {
        "Text" : "# Properties->Linker->Input->Additional Dependencies\r\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#install\r\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# ========================================= DEMO PARAM ESTIMATION ===========================================\r\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# in Visual Studio\r\n",
        "Line" : 104,
        "CharPositionInLine" : 97
      },
      "28" : {
        "Text" : "# Properties->Linker->Input->Additional Dependencies\r\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#install\r\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# =========================================== DEMO VISUALIZATION ============================================\r\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# in Visual Studio\r\n",
        "Line" : 118,
        "CharPositionInLine" : 80
      },
      "32" : {
        "Text" : "# Properties->Linker->Input->Additional Dependencies\r\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#install\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# ============================================== DEMO STEREO ===============================================\r\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# in Visual Studio\r\n",
        "Line" : 132,
        "CharPositionInLine" : 76
      },
      "36" : {
        "Text" : "# Properties->Linker->Input->Additional Dependencies\r\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#install\r\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 38
    },
    "modules/DGM/CMakeLists.txt" : {
      "ObjectId" : "1d0f084abaf2bf072d7af37b56666bc97a0b1dd6",
      "LastModified" : "2019-02-15T16:15:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create named folders for the sources within the .vcproj\n\n# Empty name lists them directly under the .vcproj\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Properties -> C/C++ -> General -> Additional Include Directories\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set Properties -> General -> Configuration Type to Dynamic Library(.dll)\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Properties -> Linker -> Input -> Additional Dependencies\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#install\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# 3rdparty code\n\n#target_sources(DGM PUBLIC\t${3RD_PERMUTOHEDRAL_SOURCES})\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Creates folder \"Modules\" and adds target project \n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "modules/FEX/CMakeLists.txt" : {
      "ObjectId" : "bcce2b48d9df29fe8153d9cebda1883cfa6b234d",
      "LastModified" : "2018-08-20T19:58:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create named folders for the sources within the .vcproj\r\n\n# Empty name lists them directly under the .vcproj\r\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Properties -> C/C++ -> General -> Additional Include Directories\r\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set Properties -> General -> Configuration Type to Dynamic Library(.dll)\r\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Properties -> Linker -> Input -> Additional Dependencies\r\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#install\r\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# 3rdparty code\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Creates folder \"Modules\" and adds target project \r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "modules/VIS/CMakeLists.txt" : {
      "ObjectId" : "be946dc0b2b4b4982f9aca870ee6c1ceef6f2ead",
      "LastModified" : "2018-08-20T19:58:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create named folders for the sources within the .vcproj\r\n\n# Empty name lists them directly under the .vcproj\r\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Properties -> C/C++ -> General -> Additional Include Directories\r\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Properties -> Linker -> General -> Additional Library Directories\r\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set Properties -> General -> Configuration Type to Dynamic Library(.dll)\r\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Properties -> Linker -> Input -> Additional Dependencies\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# GLEW\r\n",
        "Line" : 44,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "#install\r\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Creates folder \"Modules\" and adds target project \r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "a80efa2c0f2f538dacceb789ef4661edbb82b490",
      "LastModified" : "2019-02-15T16:15:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create named folders for the sources within the .vcproj\n\n# Empty name lists them directly under the .vcproj\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Properties -> C/C++ -> General -> Additional Include Directories\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Properties -> Linker -> General -> Additional Library Directories\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Properties->Linker->Input->Additional Dependencies\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Creates folder \"Modules\" and adds target project \n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# in Visual Studio\n",
        "Line" : 35,
        "CharPositionInLine" : 67
      },
      "6" : {
        "Text" : "#install\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    }
  },
  "FileTypes" : {
    "CMAKE" : 33,
    "MAKEFILE" : 3
  },
  "ElapsedTime" : 1391
}