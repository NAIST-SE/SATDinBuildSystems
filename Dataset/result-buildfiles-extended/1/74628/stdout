{
  "Repository" : "74628",
  "Revision" : "HEAD",
  "ObjectId" : "fb637e1f3ba3a6e4cf7511029f852a33617323a8",
  "CommitTime" : "2019-04-10T17:53:10Z",
  "Files" : {
    "c-xml-client/pom.xml" : {
      "ObjectId" : "51abffbc7d1da793f9dea69c148f69c4462d9c7c",
      "LastModified" : "2018-05-16T16:42:59Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "skipping tests by default, to be enabled by the 'enunciate-full-tests' profile",
        "Line" : 20,
        "CharPositionInLine" : 96
      },
      "1" : {
        "Text" : "add the generated sources we're testing to the test classpath",
        "Line" : 42,
        "CharPositionInLine" : 77
      },
      "2" : {
        "Text" : "for testing the xmladapters only",
        "Line" : 91,
        "CharPositionInLine" : 46
      },
      "3" : {
        "Text" : "\n            we need to generate some C client-side classes for testing purposes.\n            we'll use the Enunciate ant task to do it.\n            ",
        "Line" : 163,
        "CharPositionInLine" : 16
      },
      "CommentCount" : 4
    },
    "core-annotations/pom.xml" : {
      "ObjectId" : "5b042a1d35fe28d38c6d9de13dfce5c7475bbab3",
      "LastModified" : "2018-05-16T16:42:59Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "core/pom.xml" : {
      "ObjectId" : "4b3ca6a0e4170e4e9200572df76aa6e9f5e5e83b",
      "LastModified" : "2018-05-16T16:42:59Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "csharp-xml-client/pom.xml" : {
      "ObjectId" : "d24319f3f97f3ccd8cff2afd65ee20b9a914f78e",
      "LastModified" : "2018-05-16T16:42:59Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "skipping tests by default, to be enabled by the 'enunciate-full-tests' profile",
        "Line" : 20,
        "CharPositionInLine" : 96
      },
      "1" : {
        "Text" : "now we need to add the generated sources we're testing to the test classpath",
        "Line" : 42,
        "CharPositionInLine" : 92
      },
      "2" : {
        "Text" : "for testing the xmladapters only",
        "Line" : 97,
        "CharPositionInLine" : 46
      },
      "3" : {
        "Text" : "\n            we need to generate some C# client-side classes for testing purposes.\n            we'll use the Enunciate ant task to do it.\n            ",
        "Line" : 169,
        "CharPositionInLine" : 16
      },
      "4" : {
        "Text" : "compile the C# tests using the csc executable. ",
        "Line" : 209,
        "CharPositionInLine" : 73
      },
      "CommentCount" : 5
    },
    "docs/pom.xml" : {
      "ObjectId" : "5d198a5e673854c607e779cda8f2aa539df967e1",
      "LastModified" : "2018-05-16T16:42:59Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "The directory where the sample api code is for this module, for testing purposes",
        "Line" : 15,
        "CharPositionInLine" : 92
      },
      "1" : {
        "Text" : "filter the test properties. we use test properties instead of configuring the surefire plugin so the tests can be run from the IDE.",
        "Line" : 23,
        "CharPositionInLine" : 147
      },
      "2" : {
        "Text" : "<debugForkedProcess>true</debugForkedProcess>",
        "Line" : 32,
        "CharPositionInLine" : 63
      },
      "3" : {
        "Text" : "\n        we need to zip up the default documentation base, so we'll use ant to do it.\n        ",
        "Line" : 44,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "the docs module uses a default base.",
        "Line" : 49,
        "CharPositionInLine" : 56
      },
      "5" : {
        "Text" : "add the sample dir to the test sources",
        "Line" : 67,
        "CharPositionInLine" : 54
      },
      "6" : {
        "Text" : "used for generating example json for documentation",
        "Line" : 100,
        "CharPositionInLine" : 62
      },
      "CommentCount" : 7
    },
    "examples/contract-first/pom.xml" : {
      "ObjectId" : "97488ab9fa86e0dba3b6d6d30cf65f65f8c3fa03",
      "LastModified" : "2018-05-16T16:42:59Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "turn off wsimport compilation",
        "Line" : 49,
        "CharPositionInLine" : 47
      },
      "1" : {
        "Text" : " Needed with JAXP 1.5 ",
        "Line" : 51,
        "CharPositionInLine" : 40
      },
      "2" : {
        "Text" : "now we need to add the generated sources we're testing to the test classpath",
        "Line" : 58,
        "CharPositionInLine" : 92
      },
      "3" : {
        "Text" : "skip deploy (this is just a test module)",
        "Line" : 94,
        "CharPositionInLine" : 56
      },
      "4" : {
        "Text" : "as part of the tests, we're going to make sure the c and obj-c code compiles.",
        "Line" : 188,
        "CharPositionInLine" : 101
      },
      "CommentCount" : 5
    },
    "examples/cxf/pom.xml" : {
      "ObjectId" : "59de6dea63769c52ced41114c92460de994fb3e7",
      "LastModified" : "2018-05-16T16:42:59Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " skip unit test run, tests to be executed during integration-test ",
        "Line" : 40,
        "CharPositionInLine" : 84
      },
      "1" : {
        "Text" : "<cargo.jvmargs>-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005</cargo.jvmargs>",
        "Line" : 94,
        "CharPositionInLine" : 153
      },
      "2" : {
        "Text" : "skip deploy (this is just a test module)",
        "Line" : 101,
        "CharPositionInLine" : 56
      },
      "CommentCount" : 3
    },
    "examples/full-api-edge-cases/pom.xml" : {
      "ObjectId" : "14167d153a047067d80d7f208793c9bffe3d781a",
      "LastModified" : "2018-05-16T16:42:59Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "skipping tests by default, to be enabled by the 'enunciate-full-tests' profile",
        "Line" : 22,
        "CharPositionInLine" : 96
      },
      "1" : {
        "Text" : "skipping test compilation by default, to be enabled by the 'enunciate-full-tests' profile",
        "Line" : 37,
        "CharPositionInLine" : 111
      },
      "2" : {
        "Text" : "compile the nunit tests",
        "Line" : 301,
        "CharPositionInLine" : 49
      },
      "3" : {
        "Text" : "compile the nunit tests",
        "Line" : 321,
        "CharPositionInLine" : 49
      },
      "4" : {
        "Text" : "as part of the tests, we're going to make sure the c and obj-c code compiles.",
        "Line" : 337,
        "CharPositionInLine" : 101
      },
      "5" : {
        "Text" : " skip unit test run, tests to be executed during integration-test ",
        "Line" : 378,
        "CharPositionInLine" : 88
      },
      "6" : {
        "Text" : "<cargo.jvmargs>-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005</cargo.jvmargs>",
        "Line" : 432,
        "CharPositionInLine" : 157
      },
      "CommentCount" : 7
    },
    "examples/jackson2-api-lombok/build.xml" : {
      "ObjectId" : "affec0c3c14d189d76a105f877071083e6124fca",
      "LastModified" : "2016-09-27T07:20:57Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "global references to other modules",
        "Line" : 5,
        "CharPositionInLine" : 44
      },
      "CommentCount" : 1
    },
    "examples/jackson2-api-lombok/pom.xml" : {
      "ObjectId" : "f3ab3ec618a438e696b6b329e3d210304f3976aa",
      "LastModified" : "2018-05-16T16:42:59Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "skip deploy (this is just a test module)",
        "Line" : 39,
        "CharPositionInLine" : 56
      },
      "CommentCount" : 1
    },
    "examples/jackson2-api/build.xml" : {
      "ObjectId" : "affec0c3c14d189d76a105f877071083e6124fca",
      "LastModified" : "2016-09-27T07:20:57Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "global references to other modules",
        "Line" : 5,
        "CharPositionInLine" : 44
      },
      "CommentCount" : 1
    },
    "examples/jackson2-api/pom.xml" : {
      "ObjectId" : "40fb5ec7e2c889bdfbad6fd8f1cb69f3da72b069",
      "LastModified" : "2018-05-16T16:42:59Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "skip deploy (this is just a test module)",
        "Line" : 37,
        "CharPositionInLine" : 56
      },
      "CommentCount" : 1
    },
    "examples/jboss/pom.xml" : {
      "ObjectId" : "b3debc09ee051761635b1651dd7204e5e7a428c1",
      "LastModified" : "2018-05-16T16:42:59Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " skip unit test run, tests to be executed during integration-test ",
        "Line" : 44,
        "CharPositionInLine" : 84
      },
      "1" : {
        "Text" : "<cargo.jvmargs>-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005</cargo.jvmargs>",
        "Line" : 99,
        "CharPositionInLine" : 153
      },
      "2" : {
        "Text" : "skip deploy (this is just a test module)",
        "Line" : 106,
        "CharPositionInLine" : 56
      },
      "CommentCount" : 3
    },
    "examples/jersey-storage-spring/pom.xml" : {
      "ObjectId" : "f99c9a4c30882efcb9629cfeb0e9cb5ca2bff1c2",
      "LastModified" : "2018-05-16T16:42:59Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " skip unit test run, tests to be executed during integration-test ",
        "Line" : 30,
        "CharPositionInLine" : 80
      },
      "1" : {
        "Text" : "<cargo.jvmargs>-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005</cargo.jvmargs>",
        "Line" : 88,
        "CharPositionInLine" : 153
      },
      "2" : {
        "Text" : "skip deploy (this is just a test module)",
        "Line" : 95,
        "CharPositionInLine" : 56
      },
      "CommentCount" : 3
    },
    "examples/jersey-storage/pom.xml" : {
      "ObjectId" : "c638ad8f129ba830ff0cc33c483e8300fb77445e",
      "LastModified" : "2018-05-16T16:42:59Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " skip unit test run, tests to be executed during integration-test ",
        "Line" : 30,
        "CharPositionInLine" : 80
      },
      "1" : {
        "Text" : "<cargo.jvmargs>-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005</cargo.jvmargs>",
        "Line" : 88,
        "CharPositionInLine" : 153
      },
      "2" : {
        "Text" : "skip deploy (this is just a test module)",
        "Line" : 95,
        "CharPositionInLine" : 56
      },
      "CommentCount" : 3
    },
    "examples/pom.xml" : {
      "ObjectId" : "afaa7252b7f392e0737283f1e7675c27d975ee6b",
      "LastModified" : "2018-05-16T16:42:59Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "examples/spring-petclinic/pom.xml" : {
      "ObjectId" : "1930d9b99e09d171f838f4b3c8d102ce29ab6ec2",
      "LastModified" : "2018-05-16T16:42:59Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Spring ",
        "Line" : 17,
        "CharPositionInLine" : 20
      },
      "1" : {
        "Text" : "skip deploy (this is just a test module)",
        "Line" : 43,
        "CharPositionInLine" : 56
      },
      "2" : {
        "Text" : " Import the maven Spring IO Platform Bill Of Materials (BOM) ",
        "Line" : 53,
        "CharPositionInLine" : 73
      },
      "3" : {
        "Text" : " Date and Time ",
        "Line" : 87,
        "CharPositionInLine" : 27
      },
      "CommentCount" : 4
    },
    "gwt-json-overlay/pom.xml" : {
      "ObjectId" : "8723edb5b5312fda044532cef5fc28ff3c66f8fd",
      "LastModified" : "2018-05-16T16:42:59Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "\n        we need to generate some java client-side classes for testing purposes.\n        we'll use the Enunciate ant task to do it.\n        ",
        "Line" : 20,
        "CharPositionInLine" : 12
      },
      "1" : {
        "Text" : "now we need to add the generated sources we're testing to the test classpath",
        "Line" : 48,
        "CharPositionInLine" : 92
      },
      "2" : {
        "Text" : "for testing the xmladapters only",
        "Line" : 125,
        "CharPositionInLine" : 46
      },
      "CommentCount" : 3
    },
    "idl/pom.xml" : {
      "ObjectId" : "f25ec086f9134fb89151a85dd1a6ea2b9397f7bd",
      "LastModified" : "2018-05-16T16:42:59Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "The directory where the sample api code is for this module, for testing purposes",
        "Line" : 15,
        "CharPositionInLine" : 92
      },
      "1" : {
        "Text" : "filter the test properties. we use test properties instead of configuring the surefire plugin so the tests can be run from the IDE.",
        "Line" : 23,
        "CharPositionInLine" : 147
      },
      "2" : {
        "Text" : "add the sample dir to the test sources",
        "Line" : 29,
        "CharPositionInLine" : 54
      },
      "CommentCount" : 3
    },
    "jackson/pom.xml" : {
      "ObjectId" : "6a4ce9efb92e62361855c1b086be963e238d25e8",
      "LastModified" : "2018-05-16T16:42:59Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "jackson1/pom.xml" : {
      "ObjectId" : "366b717057600a629a7116160d5a5a9c779d0379",
      "LastModified" : "2018-05-16T16:42:59Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "java-json-client/pom.xml" : {
      "ObjectId" : "780c0dbe1bcb83e005675820bf991ff3474af2e3",
      "LastModified" : "2018-05-16T16:42:59Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "\n        we need to generate some java client-side classes for testing purposes.\n        we'll use the Enunciate ant task to do it.\n        ",
        "Line" : 20,
        "CharPositionInLine" : 12
      },
      "1" : {
        "Text" : "now we need to add the generated sources we're testing to the test classpath",
        "Line" : 48,
        "CharPositionInLine" : 92
      },
      "2" : {
        "Text" : "for testing the xmladapters only",
        "Line" : 104,
        "CharPositionInLine" : 46
      },
      "CommentCount" : 3
    },
    "java-xml-client/pom.xml" : {
      "ObjectId" : "db6eeb70b2ab06d52ff674ee3c4e98afe0ec66db",
      "LastModified" : "2018-05-16T16:42:59Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "\n        we need to generate some java client-side classes for testing purposes.\n        we'll use the Enunciate ant task to do it.\n        ",
        "Line" : 20,
        "CharPositionInLine" : 12
      },
      "1" : {
        "Text" : "now we need to add the generated sources we're testing to the test classpath",
        "Line" : 48,
        "CharPositionInLine" : 92
      },
      "2" : {
        "Text" : "for testing the xmladapters only",
        "Line" : 110,
        "CharPositionInLine" : 46
      },
      "CommentCount" : 3
    },
    "javac-support/pom.xml" : {
      "ObjectId" : "67d27afd861d902d0b53e5c82940ee03cda2849f",
      "LastModified" : "2018-05-16T16:42:59Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "depending modules: core",
        "Line" : 24,
        "CharPositionInLine" : 41
      },
      "CommentCount" : 1
    },
    "javascript-client/pom.xml" : {
      "ObjectId" : "62266fb4ee11e59191fb37c855fe0ef5823502f8",
      "LastModified" : "2018-05-16T16:42:59Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "skipping tests by default, to be enabled by the 'enunciate-full-tests' profile",
        "Line" : 20,
        "CharPositionInLine" : 96
      },
      "1" : {
        "Text" : "now we need to add the generated sources we're testing to the test classpath",
        "Line" : 42,
        "CharPositionInLine" : 92
      },
      "2" : {
        "Text" : "for testing the xmladapters only",
        "Line" : 97,
        "CharPositionInLine" : 46
      },
      "3" : {
        "Text" : "\n            we need to generate some JavaScript client-side classes for testing purposes.\n            we'll use the Enunciate ant task to do it.\n            ",
        "Line" : 172,
        "CharPositionInLine" : 16
      },
      "CommentCount" : 4
    },
    "jaxb/pom.xml" : {
      "ObjectId" : "3c47b6263242ece1a78f84c0b630a53e8f650c1e",
      "LastModified" : "2018-05-16T16:42:59Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "jaxrs/pom.xml" : {
      "ObjectId" : "fb64d48869d14cfbde5e888e3d8b2b0b5a638bce",
      "LastModified" : "2018-05-16T16:42:59Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "jaxws/pom.xml" : {
      "ObjectId" : "487777422daa119e68ad9a4ec2f854714c1c6d2d",
      "LastModified" : "2018-05-16T16:42:59Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "lombok/pom.xml" : {
      "ObjectId" : "8caa9688fcdb744531102da1be60514e381a17d9",
      "LastModified" : "2018-05-16T16:42:59Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "maven-plugin/pom.xml" : {
      "ObjectId" : "68c923351f82f68dd8fbf30eba5e673183b01f7f",
      "LastModified" : "2019-03-12T15:07:20Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "obj-c-xml-client/pom.xml" : {
      "ObjectId" : "1a2835255f290e8544efa481a7e97d5b9254e17e",
      "LastModified" : "2018-05-16T16:42:59Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "skipping tests by default, to be enabled by the 'enunciate-full-tests' profile",
        "Line" : 20,
        "CharPositionInLine" : 96
      },
      "1" : {
        "Text" : "now we need to add the generated sources we're testing to the test classpath",
        "Line" : 42,
        "CharPositionInLine" : 92
      },
      "2" : {
        "Text" : "for testing the xmladapters only",
        "Line" : 91,
        "CharPositionInLine" : 46
      },
      "3" : {
        "Text" : "\n            we need to generate some objective C client-side classes for testing purposes.\n            we'll use the Enunciate ant task to do it.\n            ",
        "Line" : 165,
        "CharPositionInLine" : 16
      },
      "4" : {
        "Text" : "compile the C tests using the gcc executable. ",
        "Line" : 223,
        "CharPositionInLine" : 72
      },
      "CommentCount" : 5
    },
    "php-json-client/pom.xml" : {
      "ObjectId" : "8a33d112cd536486730f6a0ef4a4943daad6d782",
      "LastModified" : "2018-05-16T16:42:59Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "skipping tests by default, to be enabled by the 'enunciate-full-tests' profile",
        "Line" : 20,
        "CharPositionInLine" : 96
      },
      "1" : {
        "Text" : "now we need to add the generated sources we're testing to the test classpath",
        "Line" : 42,
        "CharPositionInLine" : 92
      },
      "2" : {
        "Text" : "for testing the xmladapters only",
        "Line" : 97,
        "CharPositionInLine" : 46
      },
      "3" : {
        "Text" : "\n            we need to generate some PHP client-side classes for testing purposes.\n            we'll use the Enunciate ant task to do it.\n            ",
        "Line" : 172,
        "CharPositionInLine" : 16
      },
      "CommentCount" : 4
    },
    "php-xml-client/pom.xml" : {
      "ObjectId" : "06364b8374a44b718817e734fd1b90adb2619626",
      "LastModified" : "2018-05-16T16:42:59Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "skipping tests by default, to be enabled by the 'enunciate-full-tests' profile",
        "Line" : 20,
        "CharPositionInLine" : 96
      },
      "1" : {
        "Text" : "now we need to add the generated sources we're testing to the test classpath",
        "Line" : 42,
        "CharPositionInLine" : 92
      },
      "2" : {
        "Text" : "for testing the xmladapters only",
        "Line" : 91,
        "CharPositionInLine" : 46
      },
      "3" : {
        "Text" : "\n            we need to generate some PHP client-side classes for testing purposes.\n            we'll use the Enunciate ant task to do it.\n            ",
        "Line" : 152,
        "CharPositionInLine" : 16
      },
      "CommentCount" : 4
    },
    "pom.xml" : {
      "ObjectId" : "f6a64bf5a4f52cf512d5b943ee616ab458bb4694",
      "LastModified" : "2019-03-12T15:07:20Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "dependency versions",
        "Line" : 73,
        "CharPositionInLine" : 31
      },
      "1" : {
        "Text" : "WARNING: version 2.6 and up require jdk 1.7",
        "Line" : 90,
        "CharPositionInLine" : 94
      },
      "2" : {
        "Text" : "plugin versions",
        "Line" : 109,
        "CharPositionInLine" : 27
      },
      "CommentCount" : 3
    },
    "rt-util/pom.xml" : {
      "ObjectId" : "abfe377429bea916fed3921e7947d7ae764a34ae",
      "LastModified" : "2018-05-16T16:42:59Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "just for the wsdl filter",
        "Line" : 62,
        "CharPositionInLine" : 38
      },
      "CommentCount" : 1
    },
    "ruby-json-client/pom.xml" : {
      "ObjectId" : "767dc114510cc678081e4aa9465d20d7a235ca07",
      "LastModified" : "2018-05-16T16:42:59Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "skipping tests by default, to be enabled by the 'enunciate-full-tests' profile",
        "Line" : 20,
        "CharPositionInLine" : 96
      },
      "1" : {
        "Text" : "now we need to add the generated sources we're testing to the test classpath",
        "Line" : 42,
        "CharPositionInLine" : 92
      },
      "2" : {
        "Text" : "for testing the xmladapters only",
        "Line" : 97,
        "CharPositionInLine" : 46
      },
      "3" : {
        "Text" : "\n            we need to generate some Ruby client-side classes for testing purposes.\n            we'll use the Enunciate ant task to do it.\n            ",
        "Line" : 172,
        "CharPositionInLine" : 16
      },
      "CommentCount" : 4
    },
    "simple-archetype/pom.xml" : {
      "ObjectId" : "75caad475e4154b83ccbdef806e61ad979c5429a",
      "LastModified" : "2018-05-16T16:42:59Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "simple-archetype/src/main/resources/archetype-resources/pom.xml" : {
      "ObjectId" : "59b79b1a36da7905d27a4db5d54a2819d3152447",
      "LastModified" : "2018-05-16T16:42:59Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "WARNING: version 2.6 and up require jdk 1.7",
        "Line" : 18,
        "CharPositionInLine" : 92
      },
      "CommentCount" : 1
    },
    "slim-maven-plugin/pom.xml" : {
      "ObjectId" : "ffad07c9dcb029fc03ad296a5c0c37f2a1776ba9",
      "LastModified" : "2019-03-12T15:07:20Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "since java 9, the jaxb classes aren't included in the classpath by default an therefore need to be explicitly included",
        "Line" : 33,
        "CharPositionInLine" : 132
      },
      "1" : {
        "Text" : "since java 9, the jaxb classes aren't included in the classpath by default an therefore need to be explicitly included",
        "Line" : 39,
        "CharPositionInLine" : 132
      },
      "2" : {
        "Text" : "since java 9, the jaxb classes aren't included in the classpath by default an therefore need to be explicitly included",
        "Line" : 45,
        "CharPositionInLine" : 132
      },
      "3" : {
        "Text" : "since java 9, the javax.activation classes aren't included in the classpath by default an therefore need to be explicitly included",
        "Line" : 51,
        "CharPositionInLine" : 144
      },
      "4" : {
        "Text" : "since java 9, the jaxws classes aren't included in the classpath by default an therefore need to be explicitly included",
        "Line" : 57,
        "CharPositionInLine" : 133
      },
      "CommentCount" : 5
    },
    "spring-web/pom.xml" : {
      "ObjectId" : "9003e0c828f3ea42490de5c9367c7dd6646b19cd",
      "LastModified" : "2018-05-16T16:42:59Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "exclude all the dependencies of spring-web because we're really just after the annotations",
        "Line" : 23,
        "CharPositionInLine" : 104
      },
      "CommentCount" : 1
    },
    "swagger/pom.xml" : {
      "ObjectId" : "0efb48afecc917f5109e818d06cfa0ae88b69960",
      "LastModified" : "2018-05-16T16:42:59Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "\n        we need to zip up the default documentation base, so we'll use ant to do it.\n        ",
        "Line" : 19,
        "CharPositionInLine" : 12
      },
      "1" : {
        "Text" : "the docs module uses a default base.",
        "Line" : 24,
        "CharPositionInLine" : 56
      },
      "CommentCount" : 2
    },
    "top/pom.xml" : {
      "ObjectId" : "c8706258f2c93f75ac3c372903a74075927abdba",
      "LastModified" : "2018-05-16T16:42:59Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "ANT" : 2,
    "MAVEN" : 40
  },
  "ElapsedTime" : 3541
}