{
  "Repository" : "12115612",
  "Revision" : "HEAD",
  "ObjectId" : "d6c101e1bc8b113107a3e9b09a3b61293172c56d",
  "CommitTime" : "2019-03-11T20:04:07Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "56406e15311481bca2d6a0806c0c6d1168654f8d",
      "LastModified" : "2018-11-09T17:04:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set(CMAKE_FIND_LIBRARY_SUFFIXES \".a\")\n\n# set(CMAKE_EXE_LINKER_FLAGS \"-Bstatic -static-libgcc -static-libstdc++\")\n\n# include(cmake/ExternalDeps.cmake)\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/DownloadRegression.cmake" : {
      "ObjectId" : "d9c2afe9ee80f33d465e91b90a768f64b9880f29",
      "LastModified" : "2018-08-10T17:49:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#install(DIRECTORY ${PROJECT_BINARY_DIR}/tests/ DESTINATION tests/)\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/DownloadRegressionDEREF.cmake" : {
      "ObjectId" : "417cf0c78628f97324803d403b91c497158f3348",
      "LastModified" : "2018-08-08T22:18:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#relax_false-valid-deref.i\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/DownloadRegressionFREE.cmake" : {
      "ObjectId" : "ca460d2f37de46c06f0f5072f560f82f1ac974bd",
      "LastModified" : "2018-08-08T21:35:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#memleaks_test3_false-valid-free.i\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/DownloadRegressionMEMTRACK.cmake" : {
      "ObjectId" : "cc2378fb3908bcad4cf2a5a699779986c6c265ad",
      "LastModified" : "2018-08-08T22:08:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/DownloadRegressionOVERFLOW.cmake" : {
      "ObjectId" : "339ae3171fff41f56d227043728b2593854fdfca",
      "LastModified" : "2018-08-10T17:49:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#list(APPEND MAP2CHECK_REGRESSION_${REGRESSION_TYPE} \"AdditionIntMax_false-no-overflow.c.i\")\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#list(APPEND MAP2CHECK_REGRESSION_${REGRESSION_TYPE} \"Multiplication_false-no-overflow.c.i\")\n\n#list(APPEND MAP2CHECK_REGRESSION_${REGRESSION_TYPE} \"NoConversion_false-no-overflow.c.i\")\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/DownloadRegressionTARGET.cmake" : {
      "ObjectId" : "674c6ba422af7185d6252fb2e672306ec389cdf8",
      "LastModified" : "2018-08-10T17:49:31Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/ExternalDeps.cmake" : {
      "ObjectId" : "7fb68031b5dafaee873f467e30ceac863ed1f0a7",
      "LastModified" : "2018-10-06T22:44:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This module copies all shared libs into the install folder it should be executed by the docker, it should be fine to install on /opt after this\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#TODO: Check if creating build from alpine wont be more compatible/better\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Works on: Ubuntu 14.04, 16.04, 18.04, Fedora, OpenSuse\n\n# Did not work on: Alpine\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#TODO: Maybe we should manually compile LLVM/Clang?\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "cmake/FindBoost.cmake" : {
      "ObjectId" : "5a1d3d859d0eb6426b023f039e689ef6d950e665",
      "LastModified" : "2018-08-10T17:49:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# only find static libs\n",
        "Line" : 2,
        "CharPositionInLine" : 39
      },
      "CommentCount" : 1
    },
    "cmake/FindClang.cmake" : {
      "ObjectId" : "2c084217ecbc889201f2a3fe0d539da2056b9baa",
      "LastModified" : "2018-10-08T12:15:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIND LLVM\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# if(USE_PREBUILT_CLANG)  \n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# \n\n# link_directories(${PRE_BUILT_CLANG_FOLDER}/lib)\n\n# find_local_llvm(CLANG_CC clang)    \n\n# find_local_llvm(CLANG_CXX clang++)\n\n# find_local_llvm(LLVM_CONFIG llvm-config)\n\n#\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# else()\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# endif()\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Have to find a better way to copy\n\n# install(DIRECTORY ${PROJECT_BINARY_DIR}/${PRE_BUILT_CLANG_FOLDER}/lib/clang/3.9.1/include/ DESTINATION include)\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Check if CLANG is present and configure LLVM\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Set CLANG as the default C/CXX compiler\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#Confirm clang version\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Get Flags\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#Clang/LLVM libs\n\n#list(APPEND MAP2CHECK_EXTERNAL_CLANG_LIBS \"clang/6.0.0/lib/linux/libclang_rt.fuzzer-x86_64.a\")\n\n# list(APPEND MAP2CHECK_EXTERNAL_CLANG_LIBS \"clang/3.9.1/lib/linux/libclang_rt.ubsan_standalone-x86_64.a\")\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "cmake/FindCrabLlvm.cmake" : {
      "ObjectId" : "5c9c139a700e1951e6acd80eb1b7c35dbbda4d9d",
      "LastModified" : "2018-09-29T20:09:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/FindGTest.cmake" : {
      "ObjectId" : "54c638bf9aae74c66d3c6a10ecd6eb18f842b4c7",
      "LastModified" : "2018-11-08T18:04:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Download and unpack googletest at configure time\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Prevent overriding the parent project's compiler/linker\n\n# settings on Windows\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add googletest directly to our build. This defines\n\n# the gtest and gtest_main targets.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The gtest/gtest_main targets carry header search path\n\n# dependencies automatically when using CMake 2.8.11 or\n\n# later. Otherwise we have to add them here ourselves.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/FindKlee.cmake" : {
      "ObjectId" : "7d36b3f96997610a4fa742be3ac88d62eae86880",
      "LastModified" : "2018-11-08T18:04:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO: Fix z3\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set(CMAKE_C_COMPILER ${CLANG_CC})\n\n# set(CMAKE_CXX_COMPILER  ${CLANG_CXX})\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindKleeUCLibC.cmake" : {
      "ObjectId" : "df9c9ccb1a918012a3f8f5f9795f6ac8a392be44",
      "LastModified" : "2018-11-08T18:04:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/FindLibFuzzer.cmake" : {
      "ObjectId" : "9a7ad2664f3457b4330efa32c44b7041f4618ddd",
      "LastModified" : "2018-11-08T18:04:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/FindMiniSat.cmake" : {
      "ObjectId" : "7c42d4091cdb1c8c68fc15c0527aa358d39f8201",
      "LastModified" : "2018-11-08T18:04:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/FindQt.cmake" : {
      "ObjectId" : "8c5a296598c5be08864091a2ec3b86390b084a8c",
      "LastModified" : "2018-11-08T18:04:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Download and compile Qt, this has to happen after configuring static clang (since we will use it)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configure static version of Qt5Core 5.11\n",
        "Line" : 3,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# TODO: check ninja\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/FindSTP.cmake" : {
      "ObjectId" : "94fa48c1c2d443232384016e490b31ce6cdcc4da",
      "LastModified" : "2018-11-08T18:04:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/FindZ3.cmake" : {
      "ObjectId" : "5c7a4d118a68056c239d6d5c4522dd555d9f1d45",
      "LastModified" : "2018-11-08T18:04:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#     -DCMAKE_INSTALL_PREFIX:PATH=${CMAKE_INSTALL_PREFIX}\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/GenerateDocs.cmake" : {
      "ObjectId" : "a52eb47cce04a535b33a758500a9c2b023037a78",
      "LastModified" : "2018-11-08T18:04:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# check if Doxygen is installed\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#find_package(Graphviz)\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#if (DOXYGEN_FOUND AND GRAPHVIZ_FOUND)\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# set input and output files    \n",
        "Line" : 7,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# request to configure the file\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# note the option ALL which allows to build the docs together with the application\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "modules/CMakeLists.txt" : {
      "ObjectId" : "6bcecd8faffb8e0be469b91e925b427adbed0823",
      "LastModified" : "2018-11-08T18:04:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "modules/backend/CMakeLists.txt" : {
      "ObjectId" : "ac84c66be1c25c07d0b54f67cb80b775aa0ea7e1",
      "LastModified" : "2018-11-08T18:04:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "modules/backend/library/CMakeLists.txt" : {
      "ObjectId" : "1522fb06ab3b81cfb7fb6e1b6b6e70b228eef97b",
      "LastModified" : "2018-11-08T18:04:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "modules/backend/library/lib/CMakeLists.txt" : {
      "ObjectId" : "d9b08083102b86b8694e18ef80013b872138f575",
      "LastModified" : "2018-11-29T19:57:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set(CMAKE_C_COMPILER ${CLANG})\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "modules/backend/pass/CMakeLists.txt" : {
      "ObjectId" : "d96789e65260fe3ebd22312dadfc638669990c07",
      "LastModified" : "2018-11-29T19:57:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# BUG: If we do not set this flag opt will not work with our pass\n\n# even if it was the same build from llvm\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "modules/frontend/CMakeLists.txt" : {
      "ObjectId" : "95990b01115669f13ff78431cbd280ffb0a43ddf",
      "LastModified" : "2018-11-08T18:04:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set(CMAKE_CXX_COMPILER g++)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set_target_properties(Caller PROPERTIES COMPILE_FLAGS ${CXX_FLAGS})\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#set_target_properties(map2check PROPERTIES COMPILE_FLAGS ${CPP_FLAGS})\n\n#-lrt -ldl -ltinfo -lpthread -lz -lm\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "modules/frontend/counter_example/CMakeLists.txt" : {
      "ObjectId" : "1f4bc442ded1192e22a4f287e98f61f8e4075743",
      "LastModified" : "2018-11-08T18:04:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "modules/frontend/utils/CMakeLists.txt" : {
      "ObjectId" : "7e8f1e00f4e122429d46aa66eb68756e4baa1c96",
      "LastModified" : "2018-11-08T18:04:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "modules/frontend/witness/CMakeLists.txt" : {
      "ObjectId" : "f7289573039b132880e0191ff11d861232ca236b",
      "LastModified" : "2018-11-08T18:04:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "a12984201f62a2dcb5801b76a924052d882af1ed",
      "LastModified" : "2018-11-08T18:04:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/unit/CMakeLists.txt" : {
      "ObjectId" : "461f51b331c49b7317a79fc6b8e92ae66913bda6",
      "LastModified" : "2018-11-29T19:57:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/unit/backend-library/CMakeLists.txt" : {
      "ObjectId" : "baca1f5e7a1f55756264f95ec9a19316f6d0cc0d",
      "LastModified" : "2018-11-29T19:57:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 32
  },
  "ElapsedTime" : 1906
}