{
  "Repository" : "8314109",
  "Revision" : "HEAD",
  "ObjectId" : "f2c757c7219da747f7589e8611e92054d1488dfd",
  "CommitTime" : "2017-04-26T22:53:03Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "2bcda60d71e8a965e2af0866c501f93cefaacc0a",
      "LastModified" : "2014-07-12T20:40:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "api/c/CMakeLists.txt" : {
      "ObjectId" : "20cdfa9bca3dcc270d757c9228803d5a380670cf",
      "LastModified" : "2014-08-24T02:42:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "api/cpp/CMakeLists.txt" : {
      "ObjectId" : "7bc280b96a6e7884753e6f4193834eb04cfd7ad2",
      "LastModified" : "2015-03-14T14:19:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "api/objc/CMakeLists.txt" : {
      "ObjectId" : "17274a51477fa6e1130736be12b23e981383c7ec",
      "LastModified" : "2014-07-12T20:40:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "api/vala/CMakeLists.txt" : {
      "ObjectId" : "ebd6cc89ef3ee137f37e57023a599f543ba8b92a",
      "LastModified" : "2015-03-14T14:19:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "frontends/appkit/CMakeLists.txt" : {
      "ObjectId" : "6d0e1c30abf57422667a4368f2acd2774ed058b2",
      "LastModified" : "2015-04-06T23:43:48Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "frontends/appkit/modules/BuildCairo.cmake" : {
      "ObjectId" : "738b3685a62c12d7ee85e587cb13e6df9c19cfe7",
      "LastModified" : "2015-03-14T14:19:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "frontends/gtk/CMakeLists.txt" : {
      "ObjectId" : "efbec41df952ef6504a5f1ea8aa1b3adb7a85f70",
      "LastModified" : "2015-04-30T02:09:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Stupid concession because Debian/Ubuntu package Gee with the wrong version number.\n",
        "Line" : 40,
        "CharPositionInLine" : 15
      },
      "CommentCount" : 1
    },
    "modules/ExternalProject.cmake" : {
      "ObjectId" : "0781ea1469118861baa297ddc9da59991d3977af",
      "LastModified" : "2015-03-14T14:19:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Create custom targets to build projects in external trees\n\n# The 'ExternalProject_Add' function creates a custom target to drive\n\n# download, update/patch, configure, build, install and test steps of an\n\n# external project:\n\n#  ExternalProject_Add(<name>    # Name for custom target\n\n#    [DEPENDS projects...]       # Targets on which the project depends\n\n#    [PREFIX dir]                # Root dir for entire project\n\n#    [LIST_SEPARATOR sep]        # Sep to be replaced by ; in cmd lines\n\n#    [TMP_DIR dir]               # Directory to store temporary files\n\n#    [STAMP_DIR dir]             # Directory to store step timestamps\n\n#   #--Download step--------------\n\n#    [DOWNLOAD_NAME fname]       # File name to store (if not end of URL)\n\n#    [DOWNLOAD_DIR dir]          # Directory to store downloaded files\n\n#    [DOWNLOAD_COMMAND cmd...]   # Command to download source tree\n\n#    [CVS_REPOSITORY cvsroot]    # CVSROOT of CVS repository\n\n#    [CVS_MODULE mod]            # Module to checkout from CVS repo\n\n#    [CVS_TAG tag]               # Tag to checkout from CVS repo\n\n#    [SVN_REPOSITORY url]        # URL of Subversion repo\n\n#    [SVN_REVISION rev]          # Revision to checkout from Subversion repo\n\n#    [SVN_USERNAME john ]        # Username for Subversion checkout and update\n\n#    [SVN_PASSWORD doe ]         # Password for Subversion checkout and update\n\n#    [SVN_TRUST_CERT 1 ]         # Trust the Subversion server site certificate\n\n#    [GIT_REPOSITORY url]        # URL of git repo\n\n#    [GIT_TAG tag]               # Git branch name, commit id or tag\n\n#    [HG_REPOSITORY url]         # URL of mercurial repo\n\n#    [HG_TAG tag]                # Mercurial branch name, commit id or tag\n\n#    [URL /.../src.tgz]          # Full path or URL of source\n\n#    [URL_HASH ALGO=value]       # Hash of file at URL\n\n#    [URL_MD5 md5]               # Equivalent to URL_HASH MD5=md5\n\n#    [TLS_VERIFY bool]           # Should certificate for https be checked\n\n#    [TLS_CAINFO file]           # Path to a certificate authority file\n\n#    [TIMEOUT seconds]           # Time allowed for file download operations\n\n#   #--Update/Patch step----------\n\n#    [UPDATE_COMMAND cmd...]     # Source work-tree update command\n\n#    [PATCH_COMMAND cmd...]      # Command to patch downloaded source\n\n#   #--Configure step-------------\n\n#    [SOURCE_DIR dir]            # Source dir to be used for build\n\n#    [CONFIGURE_COMMAND cmd...]  # Build tree configuration command\n\n#    [CMAKE_COMMAND /.../cmake]  # Specify alternative cmake executable\n\n#    [CMAKE_GENERATOR gen]       # Specify generator for native build\n\n#    [CMAKE_GENERATOR_TOOLSET t] # Generator-specific toolset name\n\n#    [CMAKE_ARGS args...]        # Arguments to CMake command line\n\n#    [CMAKE_CACHE_ARGS args...]  # Initial cache arguments, of the form -Dvar:string=on\n\n#   #--Build step-----------------\n\n#    [BINARY_DIR dir]            # Specify build dir location\n\n#    [BUILD_COMMAND cmd...]      # Command to drive the native build\n\n#    [BUILD_IN_SOURCE 1]         # Use source dir for build dir\n\n#   #--Install step---------------\n\n#    [INSTALL_DIR dir]           # Installation prefix\n\n#    [INSTALL_COMMAND cmd...]    # Command to drive install after build\n\n#   #--Test step------------------\n\n#    [TEST_BEFORE_INSTALL 1]     # Add test step executed before install step\n\n#    [TEST_AFTER_INSTALL 1]      # Add test step executed after install step\n\n#    [TEST_COMMAND cmd...]       # Command to drive test\n\n#   #--Output logging-------------\n\n#    [LOG_DOWNLOAD 1]            # Wrap download in script to log output\n\n#    [LOG_UPDATE 1]              # Wrap update in script to log output\n\n#    [LOG_CONFIGURE 1]           # Wrap configure in script to log output\n\n#    [LOG_BUILD 1]               # Wrap build in script to log output\n\n#    [LOG_TEST 1]                # Wrap test in script to log output\n\n#    [LOG_INSTALL 1]             # Wrap install in script to log output\n\n#   #--Custom targets-------------\n\n#    [STEP_TARGETS st1 st2 ...]  # Generate custom targets for these steps\n\n#    )\n\n# The *_DIR options specify directories for the project, with default\n\n# directories computed as follows.\n\n# If the PREFIX option is given to ExternalProject_Add() or the EP_PREFIX\n\n# directory property is set, then an external project is built and installed\n\n# under the specified prefix:\n\n#   TMP_DIR      = <prefix>/tmp\n\n#   STAMP_DIR    = <prefix>/src/<name>-stamp\n\n#   DOWNLOAD_DIR = <prefix>/src\n\n#   SOURCE_DIR   = <prefix>/src/<name>\n\n#   BINARY_DIR   = <prefix>/src/<name>-build\n\n#   INSTALL_DIR  = <prefix>\n\n# Otherwise, if the EP_BASE directory property is set then components\n\n# of an external project are stored under the specified base:\n\n#   TMP_DIR      = <base>/tmp/<name>\n\n#   STAMP_DIR    = <base>/Stamp/<name>\n\n#   DOWNLOAD_DIR = <base>/Download/<name>\n\n#   SOURCE_DIR   = <base>/Source/<name>\n\n#   BINARY_DIR   = <base>/Build/<name>\n\n#   INSTALL_DIR  = <base>/Install/<name>\n\n# If no PREFIX, EP_PREFIX, or EP_BASE is specified then the default\n\n# is to set PREFIX to \"<name>-prefix\".\n\n# Relative paths are interpreted with respect to the build directory\n\n# corresponding to the source directory in which ExternalProject_Add is\n\n# invoked.\n\n#\n\n# If SOURCE_DIR is explicitly set to an existing directory the project\n\n# will be built from it.\n\n# Otherwise a download step must be specified using one of the\n\n# DOWNLOAD_COMMAND, CVS_*, SVN_*, or URL options.\n\n# The URL option may refer locally to a directory or source tarball,\n\n# or refer to a remote tarball (e.g. http://.../src.tgz).\n\n#\n\n# The 'ExternalProject_Add_Step' function adds a custom step to an external\n\n# project:\n\n#  ExternalProject_Add_Step(<name> <step> # Names of project and custom step\n\n#    [COMMAND cmd...]        # Command line invoked by this step\n\n#    [COMMENT \"text...\"]     # Text printed when step executes\n\n#    [DEPENDEES steps...]    # Steps on which this step depends\n\n#    [DEPENDERS steps...]    # Steps that depend on this step\n\n#    [DEPENDS files...]      # Files on which this step depends\n\n#    [ALWAYS 1]              # No stamp file, step always runs\n\n#    [WORKING_DIRECTORY dir] # Working directory for command\n\n#    [LOG 1]                 # Wrap step in script to log output\n\n#    )\n\n# The command line, comment, and working directory of every standard\n\n# and custom step is processed to replace tokens\n\n# <SOURCE_DIR>,\n\n# <BINARY_DIR>,\n\n# <INSTALL_DIR>,\n\n# and <TMP_DIR>\n\n# with corresponding property values.\n\n#\n\n# Any builtin step that specifies a \"<step>_COMMAND cmd...\" or custom\n\n# step that specifies a \"COMMAND cmd...\" may specify additional command\n\n# lines using the form \"COMMAND cmd...\".  At build time the commands will\n\n# be executed in order and aborted if any one fails.  For example:\n\n#  ... BUILD_COMMAND make COMMAND echo done ...\n\n# specifies to run \"make\" and then \"echo done\" during the build step.\n\n# Whether the current working directory is preserved between commands\n\n# is not defined.  Behavior of shell operators like \"&&\" is not defined.\n\n#\n\n# The 'ExternalProject_Get_Property' function retrieves external project\n\n# target properties:\n\n#  ExternalProject_Get_Property(<name> [prop1 [prop2 [...]]])\n\n# It stores property values in variables of the same name.\n\n# Property names correspond to the keyword argument names of\n\n# 'ExternalProject_Add'.\n\n#\n\n# The 'ExternalProject_Add_StepTargets' function generates custom targets for\n\n# the steps listed:\n\n#  ExternalProject_Add_StepTargets(<name> [step1 [step2 [...]]])\n\n#\n\n# If STEP_TARGETS is set then ExternalProject_Add_StepTargets is automatically\n\n# called at the end of matching calls to ExternalProject_Add_Step. Pass\n\n# STEP_TARGETS explicitly to individual ExternalProject_Add calls, or\n\n# implicitly to all ExternalProject_Add calls by setting the directory property\n\n# EP_STEP_TARGETS.\n\n#\n\n# If STEP_TARGETS is not set, clients may still manually call\n\n# ExternalProject_Add_StepTargets after calling ExternalProject_Add or\n\n# ExternalProject_Add_Step.\n\n#\n\n# This functionality is provided to make it easy to drive the steps\n\n# independently of each other by specifying targets on build command lines.\n\n# For example, you may be submitting to a sub-project based dashboard, where\n\n# you want to drive the configure portion of the build, then submit to the\n\n# dashboard, followed by the build portion, followed by tests. If you invoke\n\n# a custom target that depends on a step halfway through the step dependency\n\n# chain, then all the previous steps will also run to ensure everything is\n\n# up to date.\n\n#\n\n# For example, to drive configure, build and test steps independently for each\n\n# ExternalProject_Add call in your project, write the following line prior to\n\n# any ExternalProject_Add calls in your CMakeLists file:\n\n#\n\n#   set_property(DIRECTORY PROPERTY EP_STEP_TARGETS configure build test)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2008-2012 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Pre-compute a regex to match documented keywords for each command.\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#message(\"function [${_ep_func}]\")\n",
        "Line" : 186,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#message(\"  keyword [${_ep_key}]\")\n",
        "Line" : 191,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Save regex matching supported hash algorithm names.\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Transfer the arguments to this function into target properties for the\n\n# new custom target we just added so that we can set up all the build steps\n\n# correctly based on target properties.\n\n#\n\n# We loop through ARGN and consider the namespace starting with an\n\n# upper-case letter followed by at least two more upper-case letters,\n\n# numbers or underscores to be keywords.\n",
        "Line" : 206,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Value\n",
        "Line" : 228,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# Missing Keyword\n",
        "Line" : 241,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# check for curl globals in the project\n",
        "Line" : 512,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# now check for curl locals so that the local values\n\n# will override the globals\n",
        "Line" : 520,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# check for tls_verify argument\n",
        "Line" : 523,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# check for tls_cainfo argument\n",
        "Line" : 528,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Make the directories at CMake configure time *and* add a custom command\n\n# to make them at build time. They need to exist at makefile generation\n\n# time for Borland make and wmake so that CMake may generate makefiles\n\n# with \"cd C:\\short\\paths\\with\\no\\spaces\" commands in them.\n\n#\n\n# Additionally, the add_custom_command is still used in case somebody\n\n# removes one of the necessary directories and tries to rebuild without\n\n# re-running cmake.\n",
        "Line" : 729,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# IMPORTANT: this MUST be a macro and not a function because of the\n\n# in-place replacements that occur in each ${var}\n\n#\n",
        "Line" : 748,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Write out values into an initial cache, that will be passed to CMake with -C\n",
        "Line" : 765,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# This is required to build up lists in variables, or complete an entry\n",
        "Line" : 772,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# Assume this is a list to append to the last var\n",
        "Line" : 789,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# Catch the final line of the args\n",
        "Line" : 793,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Replace location tags.\n",
        "Line" : 798,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Write out the initial cache file to the location specified.\n",
        "Line" : 800,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Explicit empty string means no configure step for this project\n",
        "Line" : 824,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Default is \"use cmake\":\n",
        "Line" : 828,
        "CharPositionInLine" : 6
      },
      "23" : {
        "Text" : "# Otherwise we have to analyze the value:\n",
        "Line" : 831,
        "CharPositionInLine" : 6
      },
      "24" : {
        "Text" : "# CMake project.  Select build command based on generator.\n",
        "Line" : 852,
        "CharPositionInLine" : 6
      },
      "25" : {
        "Text" : "# The project uses the same Makefile generator.  Use recursive make.\n",
        "Line" : 856,
        "CharPositionInLine" : 8
      },
      "26" : {
        "Text" : "# Drive the project with \"cmake --build\".\n",
        "Line" : 865,
        "CharPositionInLine" : 8
      },
      "27" : {
        "Text" : "# But for \"TEST\" drive the project with corresponding \"ctest\".\n",
        "Line" : 876,
        "CharPositionInLine" : 8
      },
      "28" : {
        "Text" : "# Non-CMake project.  Guess \"make\" and \"make install\" and \"make test\".\n",
        "Line" : 883,
        "CharPositionInLine" : 6
      },
      "29" : {
        "Text" : "# Try to get the parallel arguments\n",
        "Line" : 885,
        "CharPositionInLine" : 8
      },
      "30" : {
        "Text" : "# Use user-specified arguments instead of default arguments, if any.\n",
        "Line" : 898,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# GNU make recognizes the string \"$(MAKE)\" as recursive make, so\n\n# ensure that it appears directly in the makefile.\n",
        "Line" : 917,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# Wrap multiple 'COMMAND' lines up into a second-level wrapper\n\n# script so all output can be sent to one log file.\n",
        "Line" : 946,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# Wrap the command in a script to log output to files.\n",
        "Line" : 978,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# This module used to use \"/${CMAKE_CFG_INTDIR}\" directly and produced\n\n# makefiles with \"/./\" in paths for custom command dependencies. Which\n\n# resulted in problems with parallel make -j invocations.\n\n#\n\n# This function was added so that the suffix (search below for ${cfgdir}) is\n\n# only set to \"/${CMAKE_CFG_INTDIR}\" when ${CMAKE_CFG_INTDIR} is not going to\n\n# be \".\" (multi-configuration build systems like Visual Studio and Xcode...)\n\n#\n",
        "Line" : 1006,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Depend on other external projects (target-level).\n",
        "Line" : 1041,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# Steps depending on this step.\n",
        "Line" : 1065,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# Dependencies on files.\n",
        "Line" : 1075,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# Dependencies on steps.\n",
        "Line" : 1078,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "# The command to run.\n",
        "Line" : 1085,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# Replace list separators.\n",
        "Line" : 1094,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# Replace location tags.\n",
        "Line" : 1100,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# Custom comment?\n",
        "Line" : 1103,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# Run every time?\n",
        "Line" : 1109,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# Wrap with log script?\n",
        "Line" : 1118,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "# Add custom \"step target\"?\n",
        "Line" : 1134,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "# TODO: Perhaps file:// should be copied to download dir before extraction.\n",
        "Line" : 1202,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "# The git submodule update '--recursive' flag requires git >= v1.6.5\n\n#\n",
        "Line" : 1280,
        "CharPositionInLine" : 4
      },
      "48" : {
        "Text" : "# For the download step, and the git clone operation, only the repository\n\n# should be recorded in a configured RepositoryInfo file. If the repo\n\n# changes, the clone script should be run again. But if only the tag\n\n# changes, avoid running the clone script again. Let the 'always' running\n\n# update step checkout the new tag.\n\n#\n",
        "Line" : 1292,
        "CharPositionInLine" : 4
      },
      "49" : {
        "Text" : "# Since git clone doesn't succeed if the non-empty source_dir exists,\n\n# create a cmake script to invoke as download command.\n\n# The script will delete the source directory and then call git clone.\n\n#\n",
        "Line" : 1310,
        "CharPositionInLine" : 4
      },
      "50" : {
        "Text" : "# For the download step, and the hg clone operation, only the repository\n\n# should be recorded in a configured RepositoryInfo file. If the repo\n\n# changes, the clone script should be run again. But if only the tag\n\n# changes, avoid running the clone script again. Let the 'always' running\n\n# update step checkout the new tag.\n\n#\n",
        "Line" : 1332,
        "CharPositionInLine" : 4
      },
      "51" : {
        "Text" : "# Since hg clone doesn't succeed if the non-empty source_dir exists,\n\n# create a cmake script to invoke as download command.\n\n# The script will delete the source directory and then call hg clone.\n\n#\n",
        "Line" : 1350,
        "CharPositionInLine" : 4
      },
      "52" : {
        "Text" : "# TODO: Should download and extraction be different steps?\n",
        "Line" : 1392,
        "CharPositionInLine" : 8
      },
      "53" : {
        "Text" : "# TODO: Make sure external projects use the proper compiler\n",
        "Line" : 1572,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# Depend on other external projects (file-level).\n",
        "Line" : 1576,
        "CharPositionInLine" : 2
      },
      "55" : {
        "Text" : "# If there are any CMAKE_CACHE_ARGS, write an initial cache and use it\n",
        "Line" : 1601,
        "CharPositionInLine" : 4
      },
      "56" : {
        "Text" : "# If anything about the configure command changes, (command itself, cmake\n\n# used, cmake args or cmake generator) then re-run the configure step.\n\n# Fixes issue http://public.kitware.com/Bug/view.php?id=10258\n\n#\n",
        "Line" : 1633,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "# Only actually add the test step if one of the test related properties is\n\n# explicitly set. (i.e. the test step is omitted unless requested...)\n\n#\n",
        "Line" : 1720,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# Add a custom target for the external project.\n",
        "Line" : 1756,
        "CharPositionInLine" : 2
      },
      "59" : {
        "Text" : "# The 'complete' step depends on all other steps and creates a\n\n# 'done' mark.  A dependent external project's 'configure' step\n\n# depends on the 'done' mark so that it rebuilds when this project\n\n# rebuilds.  It is important that 'done' is not the output of any\n\n# custom command so that CMake does not propagate build rules to\n\n# other external project targets, which may cause problems during\n\n# parallel builds.  However, the Ninja generator needs to see the entire\n\n# dependency graph, and can cope with custom commands belonging to\n\n# multiple targets, so we add the 'done' mark as an output for Ninja only.\n",
        "Line" : 1767,
        "CharPositionInLine" : 2
      },
      "60" : {
        "Text" : "# Depend on other external projects (target-level).\n",
        "Line" : 1792,
        "CharPositionInLine" : 2
      },
      "61" : {
        "Text" : "# Set up custom build steps based on the target properties.\n\n# Each step depends on the previous one.\n\n#\n\n# The target depends on the output of the final step.\n\n# (Already set up above in the DEPENDS of the add_custom_target command.)\n\n#\n",
        "Line" : 1798,
        "CharPositionInLine" : 2
      },
      "62" : {
        "Text" : "# Test is special in that it might depend on build, or it might depend\n\n# on install.\n\n#\n",
        "Line" : 1812,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 63
    },
    "modules/FindCairo.cmake" : {
      "ObjectId" : "ddc8de7fd2b1e3f6d36dc9174ffddf78d3e1e937",
      "LastModified" : "2015-03-14T14:19:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Cairo\n\n# Once done, this will define\n\n#\n\n#  CAIRO_FOUND - system has Cairo\n\n#  CAIRO_INCLUDE_DIRS - the Cairo include directories\n\n#  CAIRO_LIBRARIES - link these to use Cairo\n\n#\n\n# Copyright (C) 2012 Raphael Kubo da Costa <rakuco@webkit.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# 1.  Redistributions of source code must retain the above copyright\n\n#     notice, this list of conditions and the following disclaimer.\n\n# 2.  Redistributions in binary form must reproduce the above copyright\n\n#     notice, this list of conditions and the following disclaimer in the\n\n#     documentation and/or other materials provided with the distribution.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND ITS CONTRIBUTORS ``AS\n\n# IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n\n# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\n# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR ITS\n\n# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\n# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\n# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;\n\n# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n\n# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n\n# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n\n# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FIXME: After we require CMake 2.8.2 we can pass QUIET to this call.\n",
        "Line" : 32,
        "CharPositionInLine" : 34
      },
      "2" : {
        "Text" : "# FIXME: Should not be needed anymore once we start depending on CMake 2.8.3\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# FIXME: Use if (NOT ...) with CMake 2.8.2+ to get rid of the ELSE block\n",
        "Line" : 69,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 4
    },
    "modules/FindEigen.cmake" : {
      "ObjectId" : "51728e88cc8c40eafe888153f59a0cc2b92a8534",
      "LastModified" : "2015-03-14T14:19:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#This hurts, but Eigen doesn't have a separate includes directory, so let's\n\n#pollute the whole damn include namespace shall we?\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "modules/FindVala.cmake" : {
      "ObjectId" : "c8fcc51f4a10bd882c05a4078c9f6f27d9d6551a",
      "LastModified" : "2015-03-14T14:19:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n# Find module for the Vala compiler (valac)\n\n#\n\n# This module determines wheter a Vala compiler is installed on the current\n\n# system and where its executable is.\n\n#\n\n# Call the module using \"find_package(Vala) from within your CMakeLists.txt.\n\n#\n\n# The following variables will be set after an invocation:\n\n#\n\n#  VALA_FOUND       Whether the vala compiler has been found or not\n\n#  VALA_EXECUTABLE  Full path to the valac executable if it has been found\n\n#  VALA_VERSION     Version number of the available valac\n\n#  VALA_USE_FILE    Include this file to define the vala_precompile function\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##\n\n# Copyright 2009-2010 Jakob Westhoff. All rights reserved.\n\n# Copyright 2010-2011 Daniel Pfeifer\n\n# \n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n# \n\n#    1. Redistributions of source code must retain the above copyright notice,\n\n#       this list of conditions and the following disclaimer.\n\n# \n\n#    2. Redistributions in binary form must reproduce the above copyright notice,\n\n#       this list of conditions and the following disclaimer in the documentation\n\n#       and/or other materials provided with the distribution.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY JAKOB WESTHOFF ``AS IS'' AND ANY EXPRESS OR\n\n# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n\n# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO\n\n# EVENT SHALL JAKOB WESTHOFF OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n\n# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\n# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\n# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n\n# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n\n# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n# \n\n# The views and conclusions contained in the software and documentation are those\n\n# of the authors and should not be interpreted as representing official policies,\n\n# either expressed or implied, of Jakob Westhoff\n\n##\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search for the valac executable in the usual system paths\n\n# Some distributions rename the valac to contain the major.minor in the binary name\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Determine the valac version\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments, which may be given to the find call.\n\n# Furthermore set VALA_FOUND to TRUE if Vala has been found (aka.\n\n# VALA_EXECUTABLE is set)\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "modules/UseVala.cmake" : {
      "ObjectId" : "ead9652d36159c5a05cbbe00f6e0418c2e711792",
      "LastModified" : "2015-03-14T14:19:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n# Compile vala files to their c equivalents for further processing. \n\n#\n\n# The \"vala_precompile\" function takes care of calling the valac executable on\n\n# the given source to produce c files which can then be processed further using\n\n# default cmake functions.\n\n#\n\n# The first parameter provided is a variable, which will be filled with a list\n\n# of c files outputted by the vala compiler. This list can than be used in\n\n# conjuction with functions like \"add_executable\" or others to create the\n\n# neccessary compile rules with CMake.\n\n#\n\n# The following sections may be specified afterwards to provide certain options\n\n# to the vala compiler:\n\n#\n\n# SOURCES\n\n#   A list of .vala files to be compiled. Please take care to add every vala\n\n#   file belonging to the currently compiled project or library as Vala will\n\n#   otherwise not be able to resolve all dependencies.\n\n#\n\n# PACKAGES\n\n#   A list of vala packages/libraries to be used during the compile cycle. The\n\n#   package names are exactly the same, as they would be passed to the valac\n\n#   \"--pkg=\" option.\n\n#\n\n# OPTIONS\n\n#   A list of optional options to be passed to the valac executable. This can be\n\n#   used to pass \"--thread\" for example to enable multi-threading support.\n\n#\n\n# DEFINITIONS\n\n#   A list of symbols to be used for conditional compilation. They are the same\n\n#   as they would be passed using the valac \"--define=\" option.\n\n#\n\n# CUSTOM_VAPIS\n\n#   A list of custom vapi files to be included for compilation. This can be\n\n#   useful to include freshly created vala libraries without having to install\n\n#   them in the system.\n\n#\n\n# GENERATE_VAPI\n\n#   Pass all the needed flags to the compiler to create a vapi for\n\n#   the compiled library. The provided name will be used for this and a\n\n#   <provided_name>.vapi file will be created.\n\n#\n\n# GENERATE_HEADER\n\n#   Let the compiler generate a header file for the compiled code. There will\n\n#   be a header file as well as an internal header file being generated called\n\n#   <provided_name>.h and <provided_name>_internal.h\n\n#\n\n# The following call is a simple example to the vala_precompile macro showing\n\n# an example to every of the optional sections:\n\n#\n\n#   find_package(Vala \"0.12\" REQUIRED)\n\n#   include(${VALA_USE_FILE})\n\n#\n\n#   vala_precompile(VALA_C\n\n#     SOURCES\n\n#       source1.vala\n\n#       source2.vala\n\n#       source3.vala\n\n#     PACKAGES\n\n#       gtk+-2.0\n\n#       gio-1.0\n\n#       posix\n\n#     DIRECTORY\n\n#       gen\n\n#     OPTIONS\n\n#       --thread\n\n#     CUSTOM_VAPIS\n\n#       some_vapi.vapi\n\n#     GENERATE_VAPI\n\n#       myvapi\n\n#     GENERATE_HEADER\n\n#       myheader\n\n#     )\n\n#\n\n# Most important is the variable VALA_C which will contain all the generated c\n\n# file names after the call.\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##\n\n# Copyright 2009-2010 Jakob Westhoff. All rights reserved.\n\n# Copyright 2010-2011 Daniel Pfeifer\n\n# \n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n# \n\n#    1. Redistributions of source code must retain the above copyright notice,\n\n#       this list of conditions and the following disclaimer.\n\n# \n\n#    2. Redistributions in binary form must reproduce the above copyright notice,\n\n#       this list of conditions and the following disclaimer in the documentation\n\n#       and/or other materials provided with the distribution.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY JAKOB WESTHOFF ``AS IS'' AND ANY EXPRESS OR\n\n# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n\n# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO\n\n# EVENT SHALL JAKOB WESTHOFF OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n\n# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\n# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\n# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n\n# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n\n# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n# \n\n# The views and conclusions contained in the software and documentation are those\n\n# of the authors and should not be interpreted as representing official policies,\n\n# either expressed or implied, of Jakob Westhoff\n\n##\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Header and internal header is needed to generate internal vapi\n",
        "Line" : 159,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 3
    }
  },
  "FileTypes" : {
    "CMAKE" : 13
  },
  "ElapsedTime" : 781
}