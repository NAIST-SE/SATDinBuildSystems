{
  "Repository" : "14274343",
  "Revision" : "HEAD",
  "ObjectId" : "00d07ea35a396dfc80f38b4ba6f18b4b6bc4f77e",
  "CommitTime" : "2019-04-13T20:27:58Z",
  "Files" : {
    "CMake/ARMA_FindACML.cmake" : {
      "ObjectId" : "42561cafda0378c836b259ad86510244aa4e2712",
      "LastModified" : "2016-03-21T22:23:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find AMD's ACML library (no includes) which provides optimised BLAS and LAPACK functions\n\n# This module defines\n\n#  ACML_LIBRARIES, the libraries needed to use ACML.\n\n#  ACML_FOUND, If false, do not try to use ACML.\n\n# also defined, but not for general use are\n\n#  ACML_LIBRARY, where to find the ACML library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Deprecated declarations.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMake/ARMA_FindACMLMP.cmake" : {
      "ObjectId" : "47a192ced6f959e42388d0390c2cc20246a5d580",
      "LastModified" : "2016-03-21T22:23:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find AMD's ACMLMP library (no includes) which provides optimised and parallelised BLAS and LAPACK functions\n\n# This module defines\n\n#  ACMLMP_LIBRARIES, the libraries needed to use ACMLMP.\n\n#  ACMLMP_FOUND, If false, do not try to use ACMLMP.\n\n# also defined, but not for general use are\n\n#  ACMLMP_LIBRARY, where to find the ACMLMP library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Deprecated declarations.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMake/ARMA_FindARPACK.cmake" : {
      "ObjectId" : "ff1ee2279773198d650ce99a70b36cb3669180ee",
      "LastModified" : "2017-03-29T13:11:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find ARPACK\n\n# Once done this will define\n\n#\n\n#  ARPACK_FOUND        - system has ARPACK\n\n#  ARPACK_LIBRARY      - Link this to use ARPACK\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Search for PARPACK.\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "CMake/ARMA_FindBLAS.cmake" : {
      "ObjectId" : "ff37b4fc79ed3c0957e8c38ebe90517c2cd3a761",
      "LastModified" : "2016-03-21T22:23:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find a BLAS library (no includes)\n\n# This module defines\n\n#  BLAS_LIBRARIES, the libraries needed to use BLAS.\n\n#  BLAS_FOUND, If false, do not try to use BLAS.\n\n# also defined, but not for general use are\n\n#  BLAS_LIBRARY, where to find the BLAS library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find the ATLAS version preferentially.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Deprecated declarations.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "CMake/ARMA_FindCBLAS.cmake" : {
      "ObjectId" : "da84c246b8fa54f0c6c73955332918efa22aa1c3",
      "LastModified" : "2016-03-21T22:23:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find CBLAS (includes and library)\n\n# This module defines\n\n#  CBLAS_INCLUDE_DIR\n\n#  CBLAS_LIBRARIES\n\n#  CBLAS_FOUND\n\n# also defined, but not for general use are\n\n#  CBLAS_LIBRARY, where to find the library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Deprecated declarations.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMake/ARMA_FindCLAPACK.cmake" : {
      "ObjectId" : "97a9792a3186867d974d4f7e7525b4e95cd1a36c",
      "LastModified" : "2016-03-21T22:23:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find a version of CLAPACK (includes and library)\n\n# This module defines\n\n#  CLAPACK_INCLUDE_DIR\n\n#  CLAPACK_LIBRARIES\n\n#  CLAPACK_FOUND\n\n# also defined, but not for general use are\n\n#  CLAPACK_LIBRARY, where to find the library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Deprecated declarations.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMake/ARMA_FindLAPACK.cmake" : {
      "ObjectId" : "b40d16d04c3bbf4658db53fcec1e27d6fd796e5e",
      "LastModified" : "2016-03-21T22:23:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find a LAPACK library (no includes)\n\n# This module defines\n\n#  LAPACK_LIBRARIES, the libraries needed to use LAPACK.\n\n#  LAPACK_FOUND, If false, do not try to use LAPACK.\n\n# also defined, but not for general use are\n\n#  LAPACK_LIBRARY, where to find the LAPACK library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check ATLAS paths preferentially, using this necessary hack (I love CMake).\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Deprecated declarations.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "CMake/ARMA_FindMKL.cmake" : {
      "ObjectId" : "452fa5a643cfc726aea1a0013300b6fd0ff3eac1",
      "LastModified" : "2016-03-21T22:23:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find the MKL libraries (no includes)\n\n# This module defines\n\n#  MKL_LIBRARIES, the libraries needed to use Intel's implementation of BLAS & LAPACK.\n\n#  MKL_FOUND, If false, do not try to use MKL.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(MKL_NAMES ${MKL_NAMES} pthread)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# mark_as_advanced(MKL_LIBRARY)\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "CMake/ARMA_FindOpenBLAS.cmake" : {
      "ObjectId" : "edfa27db83f36827ef0a0fa1ce733ab78f73b739",
      "LastModified" : "2016-03-21T22:23:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find the OpenBLAS library (no includes)\n\n# This module defines\n\n#  OpenBLAS_LIBRARIES, the libraries needed to use OpenBLAS.\n\n#  OpenBLAS_FOUND, If false, do not try to use OpenBLAS.\n\n# also defined, but not for general use are\n\n#  OpenBLAS_LIBRARY, where to find the OpenBLAS library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Deprecated declarations.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMake/ConfigureGeneratePYX.cmake" : {
      "ObjectId" : "f2cd7fd5a87de30c1514edbc8ad567361dac2bfc",
      "LastModified" : "2017-08-11T11:50:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ConfigureGeneratePYX.cmake: generate an mlpack .pyx file given input\n\n# arguments.\n\n#\n\n# This file depends on the following variables being set:\n\n#\n\n#  * GENERATE_CPP_IN: the .cpp.in file to configure.\n\n#  * GENERATE_CPP_OUT: the .cpp file we'll generate.\n\n#  * PROGRAM_MAIN_FILE: the file containing the main() function.\n\n#  * PROGRAM_NAME: the name of the program (i.e. \"pca\").\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/CreateArmaConfigInfo.cmake" : {
      "ObjectId" : "449f4193b4c4a3c811e5a3a04aa08dd132b2c71a",
      "LastModified" : "2018-04-30T15:30:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Using the CMake tools to create the file arma_config.hpp, which contains\n\n# information on the Armadillo configuration when mlpack was compiled.  This\n\n# assumes ${ARMADILLO_INCLUDE_DIR} is set.  In addition, we must be careful to\n\n# avoid overwriting arma_config.hpp with the exact same information, because\n\n# this may trigger a new complete rebuild, which is undesired.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If we are using Armadillo 5+, ARMA_64BIT_WORD is implicitly enabled.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This may be unnecessary.\n",
        "Line" : 14,
        "CharPositionInLine" : 27
      },
      "3" : {
        "Text" : "# ARMA_64BIT_WORD is only set if we are on a 64-bit system.\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Otherwise, we'll need to open the config.hpp we are using and inspect the\n\n# setting of ARMA_64BIT_WORD.\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Extract ARMA_64BIT_WORD.\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Assumes ARMA_64BIT_WORD is not set.\n",
        "Line" : 37,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Now use the value we gathered to generate the new file contents.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Next we need to know if we are compiling with OpenMP support.\n\n# Other places in the CMake configuration should have already done the\n\n# find(OpenMP).\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Did the contents of the file change at all?  If not, don't write it.\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# We have a reason to write the new file.\n",
        "Line" : 86,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 11
    },
    "CMake/CreateGitVersionHeader.cmake" : {
      "ObjectId" : "a44e60face63001f1ef84505bdc3cec8e23d9318",
      "LastModified" : "2017-08-11T11:50:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Using the CMake tools to create the gitversion.hpp, which just contains\n\n# the implementation of GetVersion() assuming that we are working inside of a\n\n# git repository.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Get the current version, if it exists.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Remove the old version.\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "CMake/FindArmadillo.cmake" : {
      "ObjectId" : "1244f649363d56883c61874741f02c8fb0b74136",
      "LastModified" : "2017-08-11T11:50:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find Armadillo\n\n# Find the Armadillo C++ library\n\n#\n\n# Using Armadillo:\n\n#  find_package(Armadillo REQUIRED)\n\n#  include_directories(${ARMADILLO_INCLUDE_DIRS})\n\n#  add_executable(foo foo.cc)\n\n#  target_link_libraries(foo ${ARMADILLO_LIBRARIES})\n\n# This module sets the following variables:\n\n#  ARMADILLO_FOUND - set to true if the library is found\n\n#  ARMADILLO_INCLUDE_DIRS - list of required include directories\n\n#  ARMADILLO_LIBRARIES - list of libraries to be linked\n\n#  ARMADILLO_VERSION_MAJOR - major version number\n\n#  ARMADILLO_VERSION_MINOR - minor version number\n\n#  ARMADILLO_VERSION_PATCH - patch version number\n\n#  ARMADILLO_VERSION_STRING - version number as a string (ex: \"1.0.4\")\n\n#  ARMADILLO_VERSION_NAME - name of the version (ex: \"Antipodean Antileech\")\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2011 Clement Creusot <creusot@cs.york.ac.uk>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Extract version information from <armadillo>\n\n# ------------------------------------------------------------------------\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# WARNING: Early releases of Armadillo didn't have the arma_version.hpp file.\n\n# (e.g. v.0.9.8-1 in ubuntu maverick packages (2001-03-15))\n\n# If the file is missing, set all values to 0\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Read and parse armdillo version header file for version number\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# WARNING: The number of spaces before the version name is not one.\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#======================\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Determine what support libraries are being used, and whether or not we need to\n\n# link against them.  We need to look in config.hpp.\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Assume true.\n",
        "Line" : 75,
        "CharPositionInLine" : 28
      },
      "9" : {
        "Text" : "# ARMA_USE_WRAPPER\n",
        "Line" : 78,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# ARMA_USE_LAPACK\n",
        "Line" : 81,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# ARMA_USE_BLAS\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# ARMA_USE_ARPACK\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# ARMA_USE_ARPACK\n",
        "Line" : 87,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Look for #define ARMA_USE_HDF5.\n",
        "Line" : 90,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# If we aren't wrapping, things get a little more complex.\n",
        "Line" : 93,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Search for LAPACK/BLAS (or replacement).\n",
        "Line" : 102,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# In order of preference: MKL, ACML, OpenBLAS, ATLAS\n",
        "Line" : 105,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# If we haven't found BLAS, try.\n",
        "Line" : 135,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Search for BLAS.\n",
        "Line" : 137,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "# Warn if ATLAS is found also.\n",
        "Line" : 146,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "# If we haven't found LAPACK, try.\n",
        "Line" : 170,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Search for LAPACK.\n",
        "Line" : 172,
        "CharPositionInLine" : 6
      },
      "23" : {
        "Text" : "# Only use ATLAS if OpenBLAS isn't being used.\n",
        "Line" : 178,
        "CharPositionInLine" : 6
      },
      "24" : {
        "Text" : "# Search for ARPACK (or replacement).\n",
        "Line" : 206,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# Use Armadillo ARPACK-finding procedure.\n",
        "Line" : 208,
        "CharPositionInLine" : 6
      },
      "26" : {
        "Text" : "# Search for HDF5 (or replacement).\n",
        "Line" : 221,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# On Debian systems, the HDF5 package has been split into multiple\n\n# packages so that it is co-installable.  But this may mean that the\n\n# include files are hidden somewhere very odd that the FindHDF5.cmake\n\n# script will not find.  Thus, we'll also quickly check pkgconfig to see\n\n# if there is information on what to use there.\n",
        "Line" : 226,
        "CharPositionInLine" : 8
      },
      "28" : {
        "Text" : "# But using pkgconfig is a little weird because HDF5_LIBRARIES won't\n\n# be filled with exact library paths, like the other scripts.  So\n\n# instead what we get is HDF5_LIBRARY_DIRS which is the equivalent of\n\n# what we'd pass to -L.\n",
        "Line" : 234,
        "CharPositionInLine" : 10
      },
      "29" : {
        "Text" : "# I'm not sure what I think of doing this here...\n",
        "Line" : 239,
        "CharPositionInLine" : 12
      },
      "30" : {
        "Text" : "# We tried but didn't find it.\n",
        "Line" : 246,
        "CharPositionInLine" : 8
      },
      "31" : {
        "Text" : "# Some older versions still require linking against HDF5 since they did not\n\n# wrap libhdf5.  This was true for versions older than 4.300.\n",
        "Line" : 256,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# We have HDF5 support and need to link against HDF5.\n",
        "Line" : 262,
        "CharPositionInLine" : 6
      },
      "33" : {
        "Text" : "# On Debian systems, the HDF5 package has been split into multiple\n\n# packages so that it is co-installable.  But this may mean that the\n\n# include files are hidden somewhere very odd that the FindHDF5.cmake\n\n# script will not find.  Thus, we'll also quickly check pkgconfig to see\n\n# if there is information on what to use there.\n",
        "Line" : 266,
        "CharPositionInLine" : 8
      },
      "34" : {
        "Text" : "# But using pkgconfig is a little weird because HDF5_LIBRARIES won't\n\n# be filled with exact library paths, like the other scripts.  So\n\n# instead what we get is HDF5_LIBRARY_DIRS which is the equivalent of\n\n# what we'd pass to -L.\n",
        "Line" : 274,
        "CharPositionInLine" : 10
      },
      "35" : {
        "Text" : "# I'm not sure what I think of doing this here...\n",
        "Line" : 279,
        "CharPositionInLine" : 12
      },
      "36" : {
        "Text" : "# We tried but didn't find it.\n",
        "Line" : 286,
        "CharPositionInLine" : 8
      },
      "37" : {
        "Text" : "# Versions between 4.300 and 4.500 did successfully wrap HDF5, but didn't have good support for setting the include directory correctly.\n",
        "Line" : 295,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# On Debian systems, the HDF5 package has been split into multiple\n\n# packages so that it is co-installable.  But this may mean that the\n\n# include files are hidden somewhere very odd that the FindHDF5.cmake\n\n# script will not find.  Thus, we'll also quickly check pkgconfig to see\n\n# if there is information on what to use there.\n",
        "Line" : 304,
        "CharPositionInLine" : 8
      },
      "39" : {
        "Text" : "# We tried but didn't find it.\n",
        "Line" : 316,
        "CharPositionInLine" : 8
      },
      "40" : {
        "Text" : "# UNIX paths are standard, no need to write.\n",
        "Line" : 331,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# Checks 'REQUIRED', 'QUIET' and versions.\n",
        "Line" : 337,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# version_var fails with cmake < 2.8.4.\n",
        "Line" : 342,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# Checks 'REQUIRED', 'QUIET' and versions.\n",
        "Line" : 344,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# Also include support include directories.\n",
        "Line" : 352,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "# Also include support libraries to link against.\n",
        "Line" : 354,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "# Hide internal variables\n",
        "Line" : 364,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#======================\n",
        "Line" : 369,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "CMake/FindBfd.cmake" : {
      "ObjectId" : "9f530bda211ccbb082344e3257a91ad6c077a571",
      "LastModified" : "2017-08-11T11:50:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find libbfd\n\n# Once done this will define\n\n#\n\n#  LIBBFD_FOUND - system has libbfd\n\n#  LIBBFD_INCLUDE_DIRS - the libbfd include directory\n\n#  LIBBFD_LIBRARIES - Link these to use libbfd\n\n#  LIBBFD_DEFINITIONS - Compiler switches required for using libbfd\n\n#\n\n# Based on:\n\n#\n\n#  Copyright (c) 2008 Bernhard Walle <bernhard.walle@gmx.de>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Ugly, yes ugly...\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#find_library (LIBBFD_IBERTY_LIBRARY\n\n#    NAMES\n\n#      iberty\n\n#    PATHS\n\n#      /usr/lib\n\n#      /usr/lib64\n\n#      /usr/local/lib\n\n#      /usr/local/lib64\n\n#      /usr/include\n\n#      /opt/local/lib\n\n#      /opt/usr/lib64\n\n#      ENV LIBRARY_PATH\n\n#      ENV LD_LIBRARY_PATH)\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#find_library (LIBBFD_OPCODES_LIBRARY\n\n#    NAMES\n\n#      opcodes\n\n#    PATHS\n\n#      /usr/lib\n\n#      /usr/lib64\n\n#      /usr/local/lib\n\n#      /usr/local/lib64\n\n#      /usr/include\n\n#      /opt/local/lib\n\n#      /opt/usr/lib64\n\n#      ENV LIBRARY_PATH\n\n#      ENV LD_LIBRARY_PATH)\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LIBBFD_FOUND to TRUE if all listed variables are TRUE\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#    LIBBFD_IBERTY_LIBRARY\n\n#    LIBBFD_OPCODES_LIBRARY\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "CMake/FindEnsmallen.cmake" : {
      "ObjectId" : "5ffed3ae12d1a2253b5b898f97d4318b88a68d51",
      "LastModified" : "2019-01-14T22:17:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find Ensmallen\n\n# Find the Ensmallen C++ library\n\n#\n\n# This module sets the following variables:\n\n#  ENSMALLEN_FOUND - set to true if the library is found\n\n#  ENSMALLEN_INCLUDE_DIR - list of required include directories\n\n#  ENSMALLEN_VERSION_MAJOR - major version number\n\n#  ENSMALLEN_VERSION_MINOR - minor version number\n\n#  ENSMALLEN_VERSION_PATCH - patch version number\n\n#  ENSMALLEN_VERSION_STRING - version number as a string (ex: \"1.0.4\")\n\n#  ENSMALLEN_VERSION_NAME - name of the version (ex: \"Antipodean Antileech\")\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Extract version information from <ensmallen>\n\n# ------------------------------------------------------------------------\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Read and parse armdillo version header file for version number\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# WARNING: The number of spaces before the version name is not one.\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Checks 'REQUIRED', 'QUIET' and versions.\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "CMake/FindLibDL.cmake" : {
      "ObjectId" : "dcbd4aa4a91f25c466e3decb71a97293cc235971",
      "LastModified" : "2017-08-11T11:50:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find libdl\n\n# Once done this will define\n\n#\n\n#  LIBDL_FOUND - system has libdl\n\n#  LIBDL_INCLUDE_DIRS - the libdl include directory\n\n#  LIBDL_LIBRARIES - Link these to use libdl\n\n#  LIBDL_NEEDS_UNDERSCORE - If extern \"C\" symbols are prefixed (BSD/Apple)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/FindMathJax.cmake" : {
      "ObjectId" : "41111838c67ca9f4e2c89dd857938012ee1253d7",
      "LastModified" : "2017-08-11T11:50:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the MathJax package.\n\n# Once done this will define\n\n#\n\n# MATHJAX_FOUND - system has MathJax\n\n# MATHJAX_JS_PATH - path to MathJax.js\n\n# MATHJAX_PATH - path to the MathJax root directory\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/FindMatlabMex.cmake" : {
      "ObjectId" : "43b342c4a5b580bb7000c99bf41687acb2ad2eeb",
      "LastModified" : "2017-08-11T11:50:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This module looks for mex, the MATLAB compiler.\n\n# The following variables are defined when the script completes:\n\n#   MATLAB_MEX: location of mex compiler\n\n#   MATLAB_ROOT: root of MATLAB installation\n\n#   MATLABMEX_FOUND: 0 if not found, 1 if found\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is untested but taken from the older FindMatlab.cmake script as well as\n\n# the modifications by Ramon Casero and Tom Doel for Gerardus.\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Search for a version of Matlab available, starting from the most modern one\n\n# to older versions.\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Check if this is a Mac.\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# This code is untested but taken from the older FindMatlab.cmake script as\n\n# well as the modifications by Ramon Casero and Tom Doel for Gerardus.\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# If this is a Mac and the attempts to find MATLAB_ROOT have so far failed,~\n\n# we look in the applications folder\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Search for a version of Matlab available, starting from the most modern\n\n# one to older versions\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# On a Linux system.  The goal is to find MATLAB_ROOT.\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Now all the versions\n",
        "Line" : 76,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# Strip ./bin/.\n",
        "Line" : 90,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 10
    },
    "CMake/FindPythonModule.cmake" : {
      "ObjectId" : "73a0b3e180fdc1fe8b02557f731176e56e900bb0",
      "LastModified" : "2018-11-05T14:22:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FindPythonModule.cmake: find a specific Python module.\n\n#\n\n# The source here is Mark Moll from a post on the CMake mailing list:\n\n# https://cmake.org/pipermail/cmake/2011-January/041666.html\n\n#\n\n# It has been modified to also check a minimum version if given.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Not required but we have version constraints.\n",
        "Line" : 17,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# A module's location is usually a directory, but for binary modules\n\n# it's a .so file.\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Now we have to check the version.\n",
        "Line" : 29,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# No version requirement so we are done.\n",
        "Line" : 48,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 5
    },
    "CMake/GenerateDoxyfile.cmake" : {
      "ObjectId" : "0f007bc225fa13379c93eaff578a6de184776723",
      "LastModified" : "2018-11-05T14:22:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We need to modify the Doxyfile slightly.  We'll copy the Doxyfile into the\n\n# build directory, update the location of the source, and then run Doxygen and\n\n# it will generate the documentation into the build directory.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# First, read the Doxyfile in as a variable.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Now, modify all the \"INPUT\" paths.  I've written each of the three out by\n\n# hand.  If more are added, they'll need to be added here too.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Change the STRIP_FROM_PATH so that it works right even in the build directory;\n\n# otherwise, every file will have the full path in it.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Apply the MathJax option. If the option is specified, we change the NO to\n\n# YES. Otherwise, it's off by default, so we needn't modify anything.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Include the path to MathJax. If we couldn't find the MathJax package,\n\n# we will use MathJax at the MathJax Content Delivery Network.\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Save the Doxyfile to its new location.\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "CMake/GeneratePkgConfig.cmake" : {
      "ObjectId" : "ef871ef5db2e89c29c591a6112a9910d159e2cdc",
      "LastModified" : "2017-08-11T11:50:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# As input the following variables should be set:\n\n#\n\n#   MLPACK_SOURCE_DIR: directory containing mlpack sources.\n\n#\n\n# And our goal in this file is to generate/configure mlpack.pc.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# First, we need to extract the version string.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMake/NewCXX11.cmake" : {
      "ObjectId" : "ba90af23e8056da45d72a95b105350a83a39f759",
      "LastModified" : "2017-08-11T11:50:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file should be incorporated into the main CMakeLists.txt when CMake 3.1\n\n# becomes the minimum required version (we should at least wait until late 2016\n\n# or early 2017 for this).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/RunProgram.cmake" : {
      "ObjectId" : "6ae385314debd20dc40edd5d795332f83b4f23b4",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# RunProgram.cmake: a CMake script that actually runs the given program to\n\n# generate a file, which is output into the given directory.\n\n#\n\n# This script depends on the following arguments:\n\n#\n\n#   PROGRAM: the program to run to.\n\n#   OUTPUT_FILE: the file to store the output in.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/TargetDistclean.cmake" : {
      "ObjectId" : "2aad7e23b0847599765128a5c717950de1123551",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add custom target distclean\n\n# cleans and removes cmake generated files etc.\n\n# Jan Woetzel 04/2003\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# taken from http://cmake.org/pipermail/cmake/2003-June/003953.html\n\n# hate at http://itk.org/Bug/view.php?id=6647\n\n# yacked and brought out of 2003 by rcurtin\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# since it's unix-specific we will use bash\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "CMake/UseCython.cmake" : {
      "ObjectId" : "63942f8b4cbd04fd2c9dae179ed6a49f9f6de12d",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define a function to create Cython modules.\n\n#\n\n# For more information on the Cython project, see http://cython.org/.\n\n# \"Cython is a language that makes writing C extensions for the Python language\n\n# as easy as Python itself.\"\n\n#\n\n# This file defines a CMake function to build a Cython Python module.\n\n# To use it, first include this file.\n\n#\n\n#   include( UseCython )\n\n#\n\n# Then call cython_add_module to create a module.\n\n#\n\n#   cython_add_module( <module_name> <src1> <src2> ... <srcN> )\n\n#\n\n# To create a standalone executable, the function\n\n#\n\n#   cython_add_standalone_executable( <executable_name> [MAIN_MODULE src1] <src1> <src2> ... <srcN> )\n\n#\n\n# To avoid dependence on Python, set the PYTHON_LIBRARY cache variable to point\n\n# to a static library.  If a MAIN_MODULE source is specified, \n\n# the \"if __name__ == '__main__':\" from that module is used as the C main() method\n\n# for the executable.  If MAIN_MODULE, the source with the same basename as\n\n# <executable_name> is assumed to be the MAIN_MODULE.\n\n#\n\n# Where <module_name> is the name of the resulting Python module and\n\n# <src1> <src2> ... are source files to be compiled into the module, e.g. *.pyx,\n\n# *.py, *.c, *.cxx, etc.  A CMake target is created with name <module_name>.  This can\n\n# be used for target_link_libraries(), etc.\n\n#\n\n# The sample paths set with the CMake include_directories() command will be used\n\n# for include directories to search for *.pxd when running the Cython complire.\n\n#\n\n# Cache variables that effect the behavior include:\n\n#\n\n#  CYTHON_ANNOTATE\n\n#  CYTHON_NO_DOCSTRINGS\n\n#  CYTHON_FLAGS\n\n#\n\n# Source file properties that effect the build process are\n\n#\n\n#  CYTHON_IS_CXX\n\n#\n\n# If this is set of a *.pyx file with CMake set_source_files_properties()\n\n# command, the file will be compiled as a C++ file.\n\n#\n\n# See also FindCython.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2011 Kitware, Inc.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#=============================================================================\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Configuration options.\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Create a *.c or *.cxx file from a *.pyx file.\n\n# Input the generated file basename.  The generate file will put into the variable\n\n# placed in the \"generated_file\" argument. Finally all the *.py and *.pyx files.\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Default to assuming all files are C.\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Determine if it is a C or C++ file.\n",
        "Line" : 99,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Get the include directories.\n",
        "Line" : 108,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Determine dependencies.\n\n# Add the pxd file will the same name as the given pyx file.\n",
        "Line" : 116,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# pxd files to check for additional dependencies.\n",
        "Line" : 126,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# check for C header dependencies\n",
        "Line" : 135,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Had trouble getting the quote in the regex\n",
        "Line" : 139,
        "CharPositionInLine" : 10
      },
      "11" : {
        "Text" : "# check for pxd dependencies\n",
        "Line" : 151,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# Look for cimport statements.\n",
        "Line" : 153,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# Add the module to the files to check, if appropriate.\n",
        "Line" : 165,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# if it is not already going to be checked\n",
        "Line" : 177,
        "CharPositionInLine" : 22
      },
      "15" : {
        "Text" : "# if it has not already been checked\n",
        "Line" : 178,
        "CharPositionInLine" : 20
      },
      "16" : {
        "Text" : "# if pxd file can be found\n",
        "Line" : 179,
        "CharPositionInLine" : 18
      },
      "17" : {
        "Text" : "# for each module dependency discovered\n",
        "Line" : 180,
        "CharPositionInLine" : 21
      },
      "18" : {
        "Text" : "# for each pxd file to check\n",
        "Line" : 181,
        "CharPositionInLine" : 19
      },
      "19" : {
        "Text" : "# Look for included pxi files \n",
        "Line" : 185,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# for each include statement found\n",
        "Line" : 195,
        "CharPositionInLine" : 17
      },
      "21" : {
        "Text" : "# pyx_file\n",
        "Line" : 197,
        "CharPositionInLine" : 15
      },
      "22" : {
        "Text" : "# Set additional flags.\n",
        "Line" : 199,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Include directory arguments. \n",
        "Line" : 221,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Determining generated file name.\n",
        "Line" : 228,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Add the command to run the compiler.\n",
        "Line" : 236,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Remove their visibility to the user.\n",
        "Line" : 247,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# cython_add_module( <name> src1 src2 ... srcN )\n\n# Build the Cython Python module.\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# cython_add_standalone_executable( _name [MAIN_MODULE src3.py] src1 src2 ... srcN )\n\n# Creates a standalone executable the given sources.\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 29
    },
    "CMake/cotire.cmake" : {
      "ObjectId" : "403c3eb83390bdfdbe045c4cf7461e3a4d135e84",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - cotire (compile time reducer)\n\n#\n\n# See the cotire manual for usage hints.\n\n#\n\n#=============================================================================\n\n# Copyright 2012-2017 Sascha Kratky\n\n#\n\n# Permission is hereby granted, free of charge, to any person\n\n# obtaining a copy of this software and associated documentation\n\n# files (the \"Software\"), to deal in the Software without\n\n# restriction, including without limitation the rights to use,\n\n# copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the\n\n# Software is furnished to do so, subject to the following\n\n# conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be\n\n# included in all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\n# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\n# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\n# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\n# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\n# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\n# OTHER DEALINGS IN THE SOFTWARE.\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# call cmake_minimum_required, but prevent modification of the CMake policy stack in include mode\n\n# cmake_minimum_required also sets the policy version as a side effect, which we have to avoid\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# activate select policies\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Compiler id for Apple Clang is now AppleClang\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# disallow use of the LOCATION target property\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# targets may not link directly to themselves\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# utility targets may not have link dependencies\n",
        "Line" : 65,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# target in the TARGET signature of add_custom_command() must exist\n",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# error on non-existent target in get_target_property\n",
        "Line" : 75,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# error on non-existent dependency in add_dependencies\n",
        "Line" : 80,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# do not expand variables in target source entries\n",
        "Line" : 85,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# disallow add_custom_command SOURCE signatures\n",
        "Line" : 90,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# include TARGET_OBJECTS expressions in a target's SOURCES property\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# simplify variable reference and escape sequence evaluation\n",
        "Line" : 100,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# only interpret if() arguments as variables or keywords when unquoted\n",
        "Line" : 105,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# strict checking for break() command\n",
        "Line" : 110,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# get_filename_component returns extension from first occurrence of . in file name\n\n# this function computes the extension from last occurrence of . in file name\n",
        "Line" : 134,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# as of CMake 3.1 target sources may contain generator expressions\n\n# since we cannot obtain required property information about source files added\n\n# through generator expressions at configure time, we filter them out\n",
        "Line" : 187,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# consider source file unless it is excluded explicitly\n",
        "Line" : 209,
        "CharPositionInLine" : 28
      },
      "19" : {
        "Text" : "# add to excluded sources, if file is not ignored and has correct language without having the correct extension\n",
        "Line" : 219,
        "CharPositionInLine" : 32
      },
      "20" : {
        "Text" : "# separate filtered source files from already cotired ones\n\n# the COTIRE_TARGET property of a source file may be set while a target is being processed by cotire\n",
        "Line" : 228,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# add to excluded sources, if file has custom compile flags\n",
        "Line" : 239,
        "CharPositionInLine" : 16
      },
      "22" : {
        "Text" : "# remove from head\n",
        "Line" : 332,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "# BFS traversal of transitive libraries\n",
        "Line" : 344,
        "CharPositionInLine" : 16
      },
      "24" : {
        "Text" : "# option with separate argument\n",
        "Line" : 368,
        "CharPositionInLine" : 16
      },
      "25" : {
        "Text" : "# remember option\n",
        "Line" : 372,
        "CharPositionInLine" : 16
      },
      "26" : {
        "Text" : "# option with joined argument\n",
        "Line" : 375,
        "CharPositionInLine" : 16
      },
      "27" : {
        "Text" : "# flush remembered option\n",
        "Line" : 379,
        "CharPositionInLine" : 16
      },
      "28" : {
        "Text" : "# add to unfiltered options\n",
        "Line" : 384,
        "CharPositionInLine" : 16
      },
      "29" : {
        "Text" : "# collect options from CMake language variables\n",
        "Line" : 422,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# add target compile flags\n",
        "Line" : 431,
        "CharPositionInLine" : 8
      },
      "31" : {
        "Text" : "# target compile options\n",
        "Line" : 444,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# interface compile options from linked library targets\n",
        "Line" : 451,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# handle language standard properties\n",
        "Line" : 462,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# used compiler supports language standard levels\n",
        "Line" : 464,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : "# handle the POSITION_INDEPENDENT_CODE target property\n",
        "Line" : 482,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# handle visibility target properties\n",
        "Line" : 494,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "# platform specific flags\n",
        "Line" : 505,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# default include dirs\n",
        "Line" : 540,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "# parse additional include directories from target compile flags\n",
        "Line" : 547,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# parse additional system include directories from target compile flags\n",
        "Line" : 559,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "# target include directories\n",
        "Line" : 571,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "# interface include directories from linked library targets\n",
        "Line" : 583,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "# CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE refers to CMAKE_CURRENT_BINARY_DIR and CMAKE_CURRENT_SOURCE_DIR\n\n# at the time, when the target was created. These correspond to the target properties BINARY_DIR and SOURCE_DIR\n\n# which are only available with CMake 3.4 or later.\n",
        "Line" : 591,
        "CharPositionInLine" : 16
      },
      "44" : {
        "Text" : "# convert Windows paths in include directories to CMake paths\n",
        "Line" : 641,
        "CharPositionInLine" : 8
      },
      "45" : {
        "Text" : "# CMAKE_INTDIR for multi-configuration build systems\n",
        "Line" : 687,
        "CharPositionInLine" : 4
      },
      "46" : {
        "Text" : "# target export define symbol\n",
        "Line" : 691,
        "CharPositionInLine" : 4
      },
      "47" : {
        "Text" : "# directory compile definitions\n",
        "Line" : 696,
        "CharPositionInLine" : 4
      },
      "48" : {
        "Text" : "# target compile definitions\n",
        "Line" : 705,
        "CharPositionInLine" : 4
      },
      "49" : {
        "Text" : "# interface compile definitions from linked library targets\n",
        "Line" : 714,
        "CharPositionInLine" : 4
      },
      "50" : {
        "Text" : "# parse additional compile definitions from target compile flags\n\n# and don't look at directory compile definitions, which we already handled\n",
        "Line" : 723,
        "CharPositionInLine" : 4
      },
      "51" : {
        "Text" : "# parse target compile flags omitting compile definitions and include directives\n",
        "Line" : 739,
        "CharPositionInLine" : 4
      },
      "52" : {
        "Text" : "# compiler launcher is only supported for Makefile and Ninja\n",
        "Line" : 894,
        "CharPositionInLine" : 8
      },
      "53" : {
        "Text" : "# IS_NEWER_THAN returns TRUE if both files have the same timestamp\n\n# thus we do the comparison in both directions to exclude ties\n",
        "Line" : 983,
        "CharPositionInLine" : 16
      },
      "54" : {
        "Text" : "# if path matches exactly, return short non-empty string\n",
        "Line" : 1027,
        "CharPositionInLine" : 12
      },
      "55" : {
        "Text" : "# check header path against ignored and honored include directories\n",
        "Line" : 1035,
        "CharPositionInLine" : 4
      },
      "56" : {
        "Text" : "# header is inside, but could be become outside if there is a shorter outside match\n",
        "Line" : 1038,
        "CharPositionInLine" : 8
      },
      "57" : {
        "Text" : "# header is outside\n",
        "Line" : 1052,
        "CharPositionInLine" : 8
      },
      "58" : {
        "Text" : "# heuristic: ignore C headers with embedded parent directory references or \"-fixed\" or \"_fixed\" in path\n\n# these often stem from using GCC #include_next tricks, which may break the precompiled header compilation\n\n# with the error message \"error: no include path in which to search for header.h\"\n",
        "Line" : 1063,
        "CharPositionInLine" : 8
      },
      "59" : {
        "Text" : "# check header file extension\n",
        "Line" : 1073,
        "CharPositionInLine" : 4
      },
      "60" : {
        "Text" : "# cl.exe /showIncludes output looks different depending on the language pack used, e.g.:\n\n# English: \"Note: including file:   C:\\directory\\file\"\n\n# German: \"Hinweis: Einlesen der Datei:   C:\\directory\\file\"\n\n# We use a very general regular expression, relying on the presence of the : characters\n",
        "Line" : 1086,
        "CharPositionInLine" : 8
      },
      "61" : {
        "Text" : "# Visual Studio compiler output\n",
        "Line" : 1091,
        "CharPositionInLine" : 12
      },
      "62" : {
        "Text" : "# GCC like output\n",
        "Line" : 1100,
        "CharPositionInLine" : 12
      },
      "63" : {
        "Text" : "# prevent CMake macro invocation errors due to backslash characters in Windows paths\n",
        "Line" : 1116,
        "CharPositionInLine" : 8
      },
      "64" : {
        "Text" : "# canonize slashes\n",
        "Line" : 1119,
        "CharPositionInLine" : 4
      },
      "65" : {
        "Text" : "# prevent semicolon from being interpreted as a line separator\n",
        "Line" : 1121,
        "CharPositionInLine" : 4
      },
      "66" : {
        "Text" : "# then separate lines\n",
        "Line" : 1123,
        "CharPositionInLine" : 4
      },
      "67" : {
        "Text" : "# remove duplicate lines to speed up parsing\n",
        "Line" : 1126,
        "CharPositionInLine" : 4
      },
      "68" : {
        "Text" : "# stack keeps track of inside/outside project status of processed header files\n",
        "Line" : 1144,
        "CharPositionInLine" : 4
      },
      "69" : {
        "Text" : "# update stack\n",
        "Line" : 1154,
        "CharPositionInLine" : 16
      },
      "70" : {
        "Text" : "# header is a candidate if it is outside project\n",
        "Line" : 1170,
        "CharPositionInLine" : 16
      },
      "71" : {
        "Text" : "# get parent header file's inside/outside status\n",
        "Line" : 1172,
        "CharPositionInLine" : 20
      },
      "72" : {
        "Text" : "# select header file if parent header file is inside project\n\n# (e.g., a project header file that includes a standard header file)\n",
        "Line" : 1179,
        "CharPositionInLine" : 20
      },
      "73" : {
        "Text" : "# fix header's inside status on stack, it is ignored by extension now\n",
        "Line" : 1188,
        "CharPositionInLine" : 32
      },
      "74" : {
        "Text" : "# for cl.exe do not keep unparsed lines which solely consist of a source file name\n",
        "Line" : 1200,
        "CharPositionInLine" : 20
      },
      "75" : {
        "Text" : "# only consider existing source files for scanning\n",
        "Line" : 1238,
        "CharPositionInLine" : 4
      },
      "76" : {
        "Text" : "# cl.exe messes with the output streams unless the environment variable VS_UNICODE_OUTPUT is cleared\n",
        "Line" : 1254,
        "CharPositionInLine" : 8
      },
      "77" : {
        "Text" : "# use absolute path as source file location\n",
        "Line" : 1405,
        "CharPositionInLine" : 8
      },
      "78" : {
        "Text" : "# create empty log file\n",
        "Line" : 1446,
        "CharPositionInLine" : 12
      },
      "79" : {
        "Text" : "# Intel compiler requires hdrstop pragma to stop generating PCH file\n",
        "Line" : 1462,
        "CharPositionInLine" : 8
      },
      "80" : {
        "Text" : "# cl.exe options used\n\n# /nologo suppresses display of sign-on banner\n\n# /TC treat all files named on the command line as C source files\n\n# /TP treat all files named on the command line as C++ source files\n\n# /EP preprocess to stdout without #line directives\n\n# /showIncludes list include files\n",
        "Line" : 1499,
        "CharPositionInLine" : 8
      },
      "81" : {
        "Text" : "# append to list\n",
        "Line" : 1508,
        "CharPositionInLine" : 12
      },
      "82" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1511,
        "CharPositionInLine" : 12
      },
      "83" : {
        "Text" : "# GCC options used\n\n# -H print the name of each header file used\n\n# -E invoke preprocessor\n\n# -fdirectives-only do not expand macros, requires GCC >= 4.3\n",
        "Line" : 1515,
        "CharPositionInLine" : 8
      },
      "84" : {
        "Text" : "# append to list\n",
        "Line" : 1520,
        "CharPositionInLine" : 12
      },
      "85" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1526,
        "CharPositionInLine" : 12
      },
      "86" : {
        "Text" : "# Clang options used\n\n# -H print the name of each header file used\n\n# -E invoke preprocessor\n\n# -fno-color-diagnostics don't prints diagnostics in color\n",
        "Line" : 1533,
        "CharPositionInLine" : 8
      },
      "87" : {
        "Text" : "# append to list\n",
        "Line" : 1538,
        "CharPositionInLine" : 12
      },
      "88" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1541,
        "CharPositionInLine" : 12
      },
      "89" : {
        "Text" : "# Windows Intel options used\n\n# /nologo do not display compiler version information\n\n# /QH display the include file order\n\n# /EP preprocess to stdout, omitting #line directives\n\n# /TC process all source or unrecognized file types as C source files\n\n# /TP process all source or unrecognized file types as C++ source files\n",
        "Line" : 1546,
        "CharPositionInLine" : 12
      },
      "90" : {
        "Text" : "# append to list\n",
        "Line" : 1555,
        "CharPositionInLine" : 16
      },
      "91" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1558,
        "CharPositionInLine" : 16
      },
      "92" : {
        "Text" : "# Linux / Mac OS X Intel options used\n\n# -H print the name of each header file used\n\n# -EP preprocess to stdout, omitting #line directives\n\n# -Kc++ process all source or unrecognized file types as C++ source files\n",
        "Line" : 1562,
        "CharPositionInLine" : 12
      },
      "93" : {
        "Text" : "# append to list\n",
        "Line" : 1567,
        "CharPositionInLine" : 16
      },
      "94" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1573,
        "CharPositionInLine" : 16
      },
      "95" : {
        "Text" : "# cl.exe options used\n\n# /Yc creates a precompiled header file\n\n# /Fp specifies precompiled header binary file name\n\n# /FI forces inclusion of file\n\n# /TC treat all files named on the command line as C source files\n\n# /TP treat all files named on the command line as C++ source files\n\n# /Zs syntax check only\n\n# /Zm precompiled header memory allocation scaling factor\n",
        "Line" : 1592,
        "CharPositionInLine" : 8
      },
      "96" : {
        "Text" : "# append to list\n",
        "Line" : 1603,
        "CharPositionInLine" : 12
      },
      "97" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1610,
        "CharPositionInLine" : 12
      },
      "98" : {
        "Text" : "# GCC / Clang options used\n\n# -x specify the source language\n\n# -c compile but do not link\n\n# -o place output in file\n\n# note that we cannot use -w to suppress all warnings upon pre-compiling, because turning off a warning may\n\n# alter compile flags as a side effect (e.g., -Wwrite-string implies -fconst-strings)\n",
        "Line" : 1617,
        "CharPositionInLine" : 8
      },
      "99" : {
        "Text" : "# append to list\n",
        "Line" : 1626,
        "CharPositionInLine" : 12
      },
      "100" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1629,
        "CharPositionInLine" : 12
      },
      "101" : {
        "Text" : "# Windows Intel options used\n\n# /nologo do not display compiler version information\n\n# /Yc create a precompiled header (PCH) file\n\n# /Fp specify a path or file name for precompiled header files\n\n# /FI tells the preprocessor to include a specified file name as the header file\n\n# /TC process all source or unrecognized file types as C source files\n\n# /TP process all source or unrecognized file types as C++ source files\n\n# /Zs syntax check only\n\n# /Wpch-messages enable diagnostics related to pre-compiled headers (requires Intel XE 2013 Update 2)\n",
        "Line" : 1637,
        "CharPositionInLine" : 12
      },
      "102" : {
        "Text" : "# append to list\n",
        "Line" : 1649,
        "CharPositionInLine" : 16
      },
      "103" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1656,
        "CharPositionInLine" : 16
      },
      "104" : {
        "Text" : "# Linux / Mac OS X Intel options used\n\n# -pch-dir location for precompiled header files\n\n# -pch-create name of the precompiled header (PCH) to create\n\n# -Kc++ process all source or unrecognized file types as C++ source files\n\n# -fsyntax-only check only for correct syntax\n\n# -Wpch-messages enable diagnostics related to pre-compiled headers (requires Intel XE 2013 Update 2)\n",
        "Line" : 1663,
        "CharPositionInLine" : 12
      },
      "105" : {
        "Text" : "# append to list\n",
        "Line" : 1678,
        "CharPositionInLine" : 16
      },
      "106" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1689,
        "CharPositionInLine" : 16
      },
      "107" : {
        "Text" : "# cl.exe options used\n\n# /Yu uses a precompiled header file during build\n\n# /Fp specifies precompiled header binary file name\n\n# /FI forces inclusion of file\n\n# /Zm precompiled header memory allocation scaling factor\n",
        "Line" : 1708,
        "CharPositionInLine" : 8
      },
      "108" : {
        "Text" : "# append to list\n",
        "Line" : 1716,
        "CharPositionInLine" : 16
      },
      "109" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1722,
        "CharPositionInLine" : 16
      },
      "110" : {
        "Text" : "# no precompiled header, force inclusion of prefix header\n",
        "Line" : 1729,
        "CharPositionInLine" : 12
      },
      "111" : {
        "Text" : "# append to list\n",
        "Line" : 1731,
        "CharPositionInLine" : 16
      },
      "112" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1734,
        "CharPositionInLine" : 16
      },
      "113" : {
        "Text" : "# GCC options used\n\n# -include process include file as the first line of the primary source file\n\n# -Winvalid-pch warns if precompiled header is found but cannot be used\n\n# note: ccache requires the -include flag to be used in order to process precompiled header correctly\n",
        "Line" : 1739,
        "CharPositionInLine" : 8
      },
      "114" : {
        "Text" : "# append to list\n",
        "Line" : 1744,
        "CharPositionInLine" : 12
      },
      "115" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1747,
        "CharPositionInLine" : 12
      },
      "116" : {
        "Text" : "# Clang options used\n\n# -include process include file as the first line of the primary source file\n\n# -include-pch include precompiled header file\n\n# -Qunused-arguments don't emit warning for unused driver arguments\n\n# note: ccache requires the -include flag to be used in order to process precompiled header correctly\n",
        "Line" : 1751,
        "CharPositionInLine" : 8
      },
      "117" : {
        "Text" : "# append to list\n",
        "Line" : 1757,
        "CharPositionInLine" : 12
      },
      "118" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1760,
        "CharPositionInLine" : 12
      },
      "119" : {
        "Text" : "# Windows Intel options used\n\n# /Yu use a precompiled header (PCH) file\n\n# /Fp specify a path or file name for precompiled header files\n\n# /FI tells the preprocessor to include a specified file name as the header file\n\n# /Wpch-messages enable diagnostics related to pre-compiled headers (requires Intel XE 2013 Update 2)\n",
        "Line" : 1766,
        "CharPositionInLine" : 12
      },
      "120" : {
        "Text" : "# append to list\n",
        "Line" : 1774,
        "CharPositionInLine" : 20
      },
      "121" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1780,
        "CharPositionInLine" : 20
      },
      "122" : {
        "Text" : "# no precompiled header, force inclusion of prefix header\n",
        "Line" : 1787,
        "CharPositionInLine" : 16
      },
      "123" : {
        "Text" : "# append to list\n",
        "Line" : 1789,
        "CharPositionInLine" : 20
      },
      "124" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1792,
        "CharPositionInLine" : 20
      },
      "125" : {
        "Text" : "# Linux / Mac OS X Intel options used\n\n# -pch-dir location for precompiled header files\n\n# -pch-use name of the precompiled header (PCH) to use\n\n# -include process include file as the first line of the primary source file\n\n# -Wpch-messages enable diagnostics related to pre-compiled headers (requires Intel XE 2013 Update 2)\n",
        "Line" : 1797,
        "CharPositionInLine" : 12
      },
      "126" : {
        "Text" : "# append to list\n",
        "Line" : 1810,
        "CharPositionInLine" : 20
      },
      "127" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1818,
        "CharPositionInLine" : 20
      },
      "128" : {
        "Text" : "# no precompiled header, force inclusion of prefix header\n",
        "Line" : 1827,
        "CharPositionInLine" : 16
      },
      "129" : {
        "Text" : "# append to list\n",
        "Line" : 1829,
        "CharPositionInLine" : 20
      },
      "130" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1832,
        "CharPositionInLine" : 20
      },
      "131" : {
        "Text" : "# cl.exe messes with the output streams unless the environment variable VS_UNICODE_OUTPUT is cleared\n",
        "Line" : 1869,
        "CharPositionInLine" : 8
      },
      "132" : {
        "Text" : "# Newer versions of Clang and GCC seem to embed a compilation timestamp into the precompiled header binary,\n\n# which results in \"file has been modified since the precompiled header was built\" errors if ccache is used.\n\n# We work around the problem by disabling ccache upon pre-compiling the prefix header.\n",
        "Line" : 1874,
        "CharPositionInLine" : 12
      },
      "133" : {
        "Text" : "# supported since Visual Studio C++ 6.0\n\n# and CMake does not support an earlier version\n",
        "Line" : 1893,
        "CharPositionInLine" : 8
      },
      "134" : {
        "Text" : "# GCC PCH support requires version >= 3.4\n",
        "Line" : 1897,
        "CharPositionInLine" : 8
      },
      "135" : {
        "Text" : "# all Clang versions have PCH support\n",
        "Line" : 1904,
        "CharPositionInLine" : 8
      },
      "136" : {
        "Text" : "# Intel PCH support requires version >= 8.0.0\n",
        "Line" : 1907,
        "CharPositionInLine" : 8
      },
      "137" : {
        "Text" : "# PCH compilation not supported by GCC / Clang for multi-architecture builds (e.g., i386, x86_64)\n",
        "Line" : 1946,
        "CharPositionInLine" : 8
      },
      "138" : {
        "Text" : "# ${CMAKE_CFG_INTDIR} may reference a build-time variable when using a generator which supports configuration types\n",
        "Line" : 1965,
        "CharPositionInLine" : 4
      },
      "139" : {
        "Text" : "# start new unity file segment\n",
        "Line" : 2008,
        "CharPositionInLine" : 16
      },
      "140" : {
        "Text" : "# there is only a single unity file\n",
        "Line" : 2019,
        "CharPositionInLine" : 8
      },
      "141" : {
        "Text" : "# end with final unity file segment\n",
        "Line" : 2022,
        "CharPositionInLine" : 8
      },
      "142" : {
        "Text" : "# For Xcode, we completely hand off the compilation of the prefix header to the IDE\n",
        "Line" : 2093,
        "CharPositionInLine" : 16
      },
      "143" : {
        "Text" : "# MSVC uses the extension .pch added to the prefix header base name\n",
        "Line" : 2098,
        "CharPositionInLine" : 16
      },
      "144" : {
        "Text" : "# Clang looks for a precompiled header corresponding to the prefix header with the extension .pch appended\n",
        "Line" : 2101,
        "CharPositionInLine" : 16
      },
      "145" : {
        "Text" : "# GCC looks for a precompiled header corresponding to the prefix header with the extension .gch appended\n",
        "Line" : 2104,
        "CharPositionInLine" : 16
      },
      "146" : {
        "Text" : "# Intel uses the extension .pchi added to the prefix header base name\n",
        "Line" : 2107,
        "CharPositionInLine" : 16
      },
      "147" : {
        "Text" : "# depend on target's generated source files\n",
        "Line" : 2139,
        "CharPositionInLine" : 4
      },
      "148" : {
        "Text" : "# but omit all generated source files that have the COTIRE_EXCLUDED property set to true\n",
        "Line" : 2143,
        "CharPositionInLine" : 8
      },
      "149" : {
        "Text" : "# and omit all generated source files that have the COTIRE_DEPENDENCY property set to false explicitly\n",
        "Line" : 2148,
        "CharPositionInLine" : 8
      },
      "150" : {
        "Text" : "# depend on target source files marked with custom COTIRE_DEPENDENCY property\n",
        "Line" : 2165,
        "CharPositionInLine" : 4
      },
      "151" : {
        "Text" : "# set up variables to be configured\n",
        "Line" : 2178,
        "CharPositionInLine" : 4
      },
      "152" : {
        "Text" : "# set up COTIRE_TARGET_SOURCES\n",
        "Line" : 2203,
        "CharPositionInLine" : 4
      },
      "153" : {
        "Text" : "# use absolute paths for generated files only, retrieving the LOCATION property is an expensive operation\n",
        "Line" : 2208,
        "CharPositionInLine" : 12
      },
      "154" : {
        "Text" : "# copy variable definitions to cotire target script\n",
        "Line" : 2215,
        "CharPositionInLine" : 4
      },
      "155" : {
        "Text" : "# omit COTIRE_*_INIT variables\n",
        "Line" : 2218,
        "CharPositionInLine" : 4
      },
      "156" : {
        "Text" : "# omit COTIRE_VERBOSE which is passed as a CMake define on command line\n",
        "Line" : 2223,
        "CharPositionInLine" : 4
      },
      "157" : {
        "Text" : "# generate target script file\n",
        "Line" : 2246,
        "CharPositionInLine" : 4
      },
      "158" : {
        "Text" : "# use file(GENERATE ...) to expand generator expressions in the target script at CMake generate-time\n",
        "Line" : 2251,
        "CharPositionInLine" : 8
      },
      "159" : {
        "Text" : "# for Visual Studio and Intel, we attach the precompiled header compilation to the host file\n\n# the remaining files include the precompiled header, see cotire_setup_pch_file_inclusion\n",
        "Line" : 2265,
        "CharPositionInLine" : 8
      },
      "160" : {
        "Text" : "# make object file generated from host file depend on prefix header\n",
        "Line" : 2274,
        "CharPositionInLine" : 12
      },
      "161" : {
        "Text" : "# mark host file as cotired to prevent it from being used in another cotired target\n",
        "Line" : 2276,
        "CharPositionInLine" : 12
      },
      "162" : {
        "Text" : "# for makefile based generator, we add a custom command to precompile the prefix header\n",
        "Line" : 2280,
        "CharPositionInLine" : 8
      },
      "163" : {
        "Text" : "# make precompiled header compilation depend on the actual compiler executable used to force\n\n# re-compilation when the compiler executable is updated. This prevents \"created by a different GCC executable\"\n\n# warnings when the precompiled header is included.\n",
        "Line" : 2289,
        "CharPositionInLine" : 12
      },
      "164" : {
        "Text" : "# for Visual Studio and Intel, we include the precompiled header in all but the host file\n\n# the host file does the precompiled header compilation, see cotire_setup_pch_file_compilation\n",
        "Line" : 2311,
        "CharPositionInLine" : 8
      },
      "165" : {
        "Text" : "# mark sources as cotired to prevent them from being used in another cotired target\n",
        "Line" : 2316,
        "CharPositionInLine" : 12
      },
      "166" : {
        "Text" : "# make object files generated from source files depend on precompiled header\n",
        "Line" : 2323,
        "CharPositionInLine" : 12
      },
      "167" : {
        "Text" : "# for makefile based generator, we force the inclusion of the prefix header for a subset\n\n# of the source files, if this is a multi-language target or has excluded files\n",
        "Line" : 2329,
        "CharPositionInLine" : 12
      },
      "168" : {
        "Text" : "# mark sources as cotired to prevent them from being used in another cotired target\n",
        "Line" : 2336,
        "CharPositionInLine" : 12
      },
      "169" : {
        "Text" : "# make object files generated from source files depend on precompiled header\n",
        "Line" : 2339,
        "CharPositionInLine" : 8
      },
      "170" : {
        "Text" : "# force the inclusion of the prefix header for the given source files\n",
        "Line" : 2346,
        "CharPositionInLine" : 4
      },
      "171" : {
        "Text" : "# mark sources as cotired to prevent them from being used in another cotired target\n",
        "Line" : 2353,
        "CharPositionInLine" : 4
      },
      "172" : {
        "Text" : "# make object files generated from source files depend on prefix header\n",
        "Line" : 2355,
        "CharPositionInLine" : 4
      },
      "173" : {
        "Text" : "# for Xcode, we attach a pre-build action to generate the unity sources and prefix headers\n",
        "Line" : 2419,
        "CharPositionInLine" : 8
      },
      "174" : {
        "Text" : "# we also generate a generic, single prefix header which includes all language specific prefix headers\n",
        "Line" : 2430,
        "CharPositionInLine" : 12
      },
      "175" : {
        "Text" : "# because CMake PRE_BUILD command does not support dependencies,\n\n# we check dependencies explicity in cotire script mode when the pre-build action is run\n",
        "Line" : 2441,
        "CharPositionInLine" : 8
      },
      "176" : {
        "Text" : "# make Xcode precompile the generated prefix header with ProcessPCH and ProcessPCH++\n",
        "Line" : 2449,
        "CharPositionInLine" : 8
      },
      "177" : {
        "Text" : "# for makefile based generator, we force inclusion of the prefix header for all target source files\n\n# if this is a single-language target without any excluded files\n",
        "Line" : 2453,
        "CharPositionInLine" : 8
      },
      "178" : {
        "Text" : "# for Visual Studio and Intel, precompiled header inclusion is always done on the source file level\n\n# see cotire_setup_pch_file_inclusion\n",
        "Line" : 2457,
        "CharPositionInLine" : 12
      },
      "179" : {
        "Text" : "# set up compiled unity source dependencies via OBJECT_DEPENDS\n\n# this ensures that missing source files are generated before the unity file is compiled\n",
        "Line" : 2479,
        "CharPositionInLine" : 8
      },
      "180" : {
        "Text" : "# the OBJECT_DEPENDS property requires a list of full paths\n",
        "Line" : 2485,
        "CharPositionInLine" : 12
      },
      "181" : {
        "Text" : "# unity file compilation results in potentially huge object file, thus use /bigobj by default unter MSVC and Windows Intel\n",
        "Line" : 2494,
        "CharPositionInLine" : 12
      },
      "182" : {
        "Text" : "# CMake 3.1.0 supports generator expressions in arguments to DEPENDS\n",
        "Line" : 2502,
        "CharPositionInLine" : 12
      },
      "183" : {
        "Text" : "# make prefix header generation depend on the actual compiler executable used to force\n\n# re-generation when the compiler executable is updated. This prevents \"file not found\"\n\n# errors for compiler version specific system header files.\n",
        "Line" : 2532,
        "CharPositionInLine" : 4
      },
      "184" : {
        "Text" : "# prevent pre-processing errors upon generating the prefix header when a target's generated include file does not yet exist\n\n# we do not add a file-level dependency for the target's generated files though, because we only want to depend on their existence\n\n# thus we make the prefix header generation depend on a custom helper target which triggers the generation of the files\n",
        "Line" : 2550,
        "CharPositionInLine" : 4
      },
      "185" : {
        "Text" : "# custom helper target has already been generated while processing a different language\n",
        "Line" : 2555,
        "CharPositionInLine" : 8
      },
      "186" : {
        "Text" : "# GNU and Clang require indirect compilation of the prefix header to make them honor the system_header pragma\n",
        "Line" : 2580,
        "CharPositionInLine" : 8
      },
      "187" : {
        "Text" : "# set up generation of a prefix source file which includes the prefix header\n",
        "Line" : 2589,
        "CharPositionInLine" : 8
      },
      "188" : {
        "Text" : "# GNU and Clang require indirect compilation of the prefix header to make them honor the system_header pragma\n",
        "Line" : 2598,
        "CharPositionInLine" : 8
      },
      "189" : {
        "Text" : "# set up generation of a prefix source file which includes the prefix header\n",
        "Line" : 2605,
        "CharPositionInLine" : 8
      },
      "190" : {
        "Text" : "# for Xcode, we cannot apply the precompiled header to individual sources, only to the whole target\n",
        "Line" : 2780,
        "CharPositionInLine" : 12
      },
      "191" : {
        "Text" : "# for Xcode, we cannot apply the required PRE_BUILD action to generate the prefix header to an OBJECT_LIBRARY target\n",
        "Line" : 2784,
        "CharPositionInLine" : 12
      },
      "192" : {
        "Text" : "# cache message to avoid redundant messages on re-configure\n",
        "Line" : 2798,
        "CharPositionInLine" : 12
      },
      "193" : {
        "Text" : "# use all available cores\n",
        "Line" : 2818,
        "CharPositionInLine" : 12
      },
      "194" : {
        "Text" : "# check for user provided unity source file list\n",
        "Line" : 2843,
        "CharPositionInLine" : 4
      },
      "195" : {
        "Text" : "# set up unity files for parallel compilation\n",
        "Line" : 2850,
        "CharPositionInLine" : 4
      },
      "196" : {
        "Text" : "# set up single unity file for prefix header generation\n",
        "Line" : 2860,
        "CharPositionInLine" : 4
      },
      "197" : {
        "Text" : "# set up prefix header\n",
        "Line" : 2865,
        "CharPositionInLine" : 4
      },
      "198" : {
        "Text" : "# check for user provided prefix header files\n",
        "Line" : 2867,
        "CharPositionInLine" : 8
      },
      "199" : {
        "Text" : "# check if selected language has enough sources at all\n",
        "Line" : 2876,
        "CharPositionInLine" : 8
      },
      "200" : {
        "Text" : "# first file in _sourceFiles is passed as the host file\n",
        "Line" : 2886,
        "CharPositionInLine" : 16
      },
      "201" : {
        "Text" : "# user provided prefix header must be included unconditionally\n",
        "Line" : 2893,
        "CharPositionInLine" : 12
      },
      "202" : {
        "Text" : "# mark target as cotired for language\n",
        "Line" : 2897,
        "CharPositionInLine" : 4
      },
      "203" : {
        "Text" : "# for makefile based generators, we add a custom target to trigger the generation of the cotire related files\n",
        "Line" : 2925,
        "CharPositionInLine" : 8
      },
      "204" : {
        "Text" : "# Visual Studio and Intel only create precompiled header as a side effect\n",
        "Line" : 2930,
        "CharPositionInLine" : 16
      },
      "205" : {
        "Text" : "# for other generators, we add the \"clean all\" target to clean up the precompiled header\n",
        "Line" : 2945,
        "CharPositionInLine" : 8
      },
      "206" : {
        "Text" : "# remove source files that are included in the unity source\n",
        "Line" : 2966,
        "CharPositionInLine" : 12
      },
      "207" : {
        "Text" : "# add unity source files instead\n",
        "Line" : 2974,
        "CharPositionInLine" : 12
      },
      "208" : {
        "Text" : "# user provided prefix header must be included unconditionally by unity sources\n",
        "Line" : 2997,
        "CharPositionInLine" : 16
      },
      "209" : {
        "Text" : "# determine unity target sub type\n",
        "Line" : 3009,
        "CharPositionInLine" : 4
      },
      "210" : {
        "Text" : "# determine unity target sources\n",
        "Line" : 3019,
        "CharPositionInLine" : 4
      },
      "211" : {
        "Text" : "# handle automatic Qt processing\n",
        "Line" : 3022,
        "CharPositionInLine" : 4
      },
      "212" : {
        "Text" : "# if the original target sources are subject to CMake's automatic Qt processing,\n\n# also include implicitly generated <targetname>_automoc.cpp file\n",
        "Line" : 3027,
        "CharPositionInLine" : 8
      },
      "213" : {
        "Text" : "# prevent AUTOMOC, AUTOUIC and AUTORCC properties from being set when the unity target is created\n",
        "Line" : 3037,
        "CharPositionInLine" : 4
      },
      "214" : {
        "Text" : "# generate unity target\n",
        "Line" : 3044,
        "CharPositionInLine" : 4
      },
      "215" : {
        "Text" : "# depend on original target's automoc target, if it exists\n",
        "Line" : 3051,
        "CharPositionInLine" : 8
      },
      "216" : {
        "Text" : "# depend on the original target's implicity generated <targetname>_automoc target\n",
        "Line" : 3057,
        "CharPositionInLine" : 12
      },
      "217" : {
        "Text" : "# copy output location properties\n",
        "Line" : 3065,
        "CharPositionInLine" : 4
      },
      "218" : {
        "Text" : "# append relative COTIRE_UNITY_OUTPUT_DIRECTORY to target's actual output directory\n",
        "Line" : 3075,
        "CharPositionInLine" : 12
      },
      "219" : {
        "Text" : "# copy output name\n",
        "Line" : 3100,
        "CharPositionInLine" : 4
      },
      "220" : {
        "Text" : "# copy compile stuff\n",
        "Line" : 3108,
        "CharPositionInLine" : 4
      },
      "221" : {
        "Text" : "# copy compile features\n",
        "Line" : 3120,
        "CharPositionInLine" : 4
      },
      "222" : {
        "Text" : "# copy interface stuff\n",
        "Line" : 3125,
        "CharPositionInLine" : 4
      },
      "223" : {
        "Text" : "# copy link stuff\n",
        "Line" : 3133,
        "CharPositionInLine" : 4
      },
      "224" : {
        "Text" : "# copy cmake stuff\n",
        "Line" : 3144,
        "CharPositionInLine" : 4
      },
      "225" : {
        "Text" : "# copy Apple platform specific stuff\n",
        "Line" : 3147,
        "CharPositionInLine" : 4
      },
      "226" : {
        "Text" : "# copy Windows platform specific stuff\n",
        "Line" : 3153,
        "CharPositionInLine" : 4
      },
      "227" : {
        "Text" : "# copy Android platform specific stuff\n",
        "Line" : 3169,
        "CharPositionInLine" : 4
      },
      "228" : {
        "Text" : "# use output name from original target\n",
        "Line" : 3177,
        "CharPositionInLine" : 4
      },
      "229" : {
        "Text" : "# use export symbol from original target\n",
        "Line" : 3182,
        "CharPositionInLine" : 4
      },
      "230" : {
        "Text" : "# check if cotire can be applied to target at all\n",
        "Line" : 3206,
        "CharPositionInLine" : 4
      },
      "231" : {
        "Text" : "# resolve alias\n",
        "Line" : 3218,
        "CharPositionInLine" : 4
      },
      "232" : {
        "Text" : "# check if target needs to be cotired for build type\n\n# when using configuration types, the test is performed at build time\n",
        "Line" : 3226,
        "CharPositionInLine" : 4
      },
      "233" : {
        "Text" : "# when not using configuration types, immediately create cotire intermediate dir\n",
        "Line" : 3242,
        "CharPositionInLine" : 4
      },
      "234" : {
        "Text" : "# choose languages that apply to the target\n",
        "Line" : 3247,
        "CharPositionInLine" : 4
      },
      "235" : {
        "Text" : "# use target's corresponding unity target, if available\n",
        "Line" : 3296,
        "CharPositionInLine" : 16
      },
      "236" : {
        "Text" : "# filter files in intermediate directory\n",
        "Line" : 3358,
        "CharPositionInLine" : 4
      },
      "237" : {
        "Text" : "# cotire is being run in script mode\n\n# locate -P on command args\n",
        "Line" : 3445,
        "CharPositionInLine" : 4
      },
      "238" : {
        "Text" : "# include target script if available\n",
        "Line" : 3457,
        "CharPositionInLine" : 4
      },
      "239" : {
        "Text" : "# the included target scripts sets up additional variables relating to the target (e.g., COTIRE_TARGET_SOURCES)\n",
        "Line" : 3459,
        "CharPositionInLine" : 8
      },
      "240" : {
        "Text" : "# check if target has been cotired for actual build type COTIRE_BUILD_TYPE\n",
        "Line" : 3475,
        "CharPositionInLine" : 4
      },
      "241" : {
        "Text" : "# executing pre-build action under Xcode, check dependency on target script\n",
        "Line" : 3495,
        "CharPositionInLine" : 12
      },
      "242" : {
        "Text" : "# executing custom command, no need to re-check for dependencies\n",
        "Line" : 3498,
        "CharPositionInLine" : 12
      },
      "243" : {
        "Text" : "# executing pre-build action under Xcode, check dependency on unity file and prefix dependencies\n",
        "Line" : 3517,
        "CharPositionInLine" : 12
      },
      "244" : {
        "Text" : "# executing custom command, no need to re-check for dependencies\n",
        "Line" : 3520,
        "CharPositionInLine" : 12
      },
      "245" : {
        "Text" : "# executing pre-build action under Xcode, check dependency on files to be combined\n",
        "Line" : 3588,
        "CharPositionInLine" : 12
      },
      "246" : {
        "Text" : "# executing custom command, no need to re-check for dependencies\n",
        "Line" : 3591,
        "CharPositionInLine" : 12
      },
      "247" : {
        "Text" : "# cotire is being run in include mode\n\n# set up all variable and property definitions\n",
        "Line" : 3614,
        "CharPositionInLine" : 4
      },
      "248" : {
        "Text" : "# enable parallelization for generators that run multiple jobs by default\n",
        "Line" : 3651,
        "CharPositionInLine" : 12
      },
      "249" : {
        "Text" : "# MSVC default PCH memory scaling factor of 100 percent (75 MB) is too small for template heavy C++ code\n\n# use a bigger default factor of 170 percent (128 MB)\n",
        "Line" : 3685,
        "CharPositionInLine" : 8
      },
      "250" : {
        "Text" : "# generated Ninja build files do not work if the unity target produces the same output file as the cotired target\n",
        "Line" : 3699,
        "CharPositionInLine" : 12
      },
      "251" : {
        "Text" : "# define cotire cache variables\n",
        "Line" : 3706,
        "CharPositionInLine" : 4
      },
      "252" : {
        "Text" : "# define cotire directory properties\n",
        "Line" : 3759,
        "CharPositionInLine" : 4
      },
      "253" : {
        "Text" : "# define cotire target properties\n",
        "Line" : 3831,
        "CharPositionInLine" : 4
      },
      "254" : {
        "Text" : "# define cotire source properties\n",
        "Line" : 3995,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 255
    },
    "CMakeLists.txt" : {
      "ObjectId" : "26dfd6e2c509b7b176d4875ede1080c97159c4fc",
      "LastModified" : "2019-04-08T02:09:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# First, define all the compilation options.\n\n# We default to debugging mode for developers.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Currently Python bindings aren't known to build successfully on Windows, so\n\n# set BUILD_PYTHON_BINDINGS to OFF when the platform is Windows.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Build Markdown bindings for documentation.  This is used as part of website\n\n# generation.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set required standard to C++11.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Include modules in the CMake directory.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If we are on a Unix-like system, use the GNU install directories module.\n\n# Otherwise set the values manually.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# This is as of yet unused.\n\n#option(PGO \"Use profile-guided optimization if not a debug build\" ON)\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Set the CFLAGS and CXXFLAGS depending on the options the user specified.\n\n# Only GCC-like compilers support -Wextra, and other compilers give tons of\n\n# output for -Wall, so only -Wall and -Wextra on GCC.\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Ensure that we can't compile with clang 3.4, since this causes strange\n\n# issues.\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# These support libraries are used if we need to link against something\n\n# specific.  This list is a subset of MLPACK_LIBRARIES.\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# If we are using MSVC, we need /bigobj.\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# If we are using MINGW, we need sections and big-obj, otherwise we create too\n\n# many sections.\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# If using clang, we have to link against libc++ depending on the\n\n# OS (at least on some systems). Further, gcc sometimes optimizes calls to\n\n# math.h functions, making -lm unnecessary with gcc, but it may still be\n\n# necessary with clang.\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Detect OS X version. Use '/usr/bin/sw_vers -productVersion' to\n\n# extract V from '10.V.x'.\n",
        "Line" : 102,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# OSX Lion (10.7) and OS X Mountain Lion (10.8) doesn't automatically\n\n# select the right stdlib.\n",
        "Line" : 111,
        "CharPositionInLine" : 5
      },
      "15" : {
        "Text" : "# Link everything with -lm.\n",
        "Line" : 123,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Use -pthread, but not on OS X.\n",
        "Line" : 126,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# If we're using gcc, then we need to link against pthreads to use std::thread,\n\n# which we do in the tests.\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Setup build for test coverage\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Currently coverage only works with GNU g++\n",
        "Line" : 142,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Find gcov and lcov\n",
        "Line" : 144,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Remove optimizations for better line coverage\n",
        "Line" : 156,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Debugging CFLAGS.  Turn optimizations off; turn debugging symbols on.\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# mlpack uses it's own mlpack::backtrace class based on Binary File Descriptor\n\n# <bfd.h> and linux Dynamic Loader <libdl.h> and more portable version in future\n",
        "Line" : 179,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Profiling CFLAGS.  Turn profiling information on.\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# If the user asked for running test cases with verbose output, turn that on.\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# If the user asked for extra Armadillo debugging output, turn that on.\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Now, find the libraries we need to compile against.  Several variables can be\n\n# set to manually specify the directory in which each of these libraries\n\n# resides.\n\n#   ARMADILLO_LIBRARY - location of libarmadillo.so / armadillo.lib\n\n#   ARMADILLO_INCLUDE_DIR - directory containing <armadillo>\n\n#   ARMADILLO_INCLUDE_DIRS - directories necessary for Armadillo includes\n\n#   BOOST_ROOT - root of Boost installation\n\n#   BOOST_INCLUDEDIR - include directory for Boost\n\n#   BOOST_LIBRARYDIR - library directory for Boost\n\n#   ENSMALLEN_INCLUDE_DIR - include directory for ensmallen\n\n#   MATHJAX_ROOT - root of MathJax installation\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# If Armadillo was compiled without ARMA_64BIT_WORD and we are on a 64-bit\n\n# system (where size_t will be 64 bits), suggest to the user that they should\n\n# compile Armadillo with 64-bit words.  Note that with Armadillo 5.000.0 and\n\n# newer, ARMA_64BIT_WORD is enabled by default.\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Check the version, to see if ARMA_64BIT_WORD is enabled by default.\n",
        "Line" : 243,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# Can we open the configuration file?  If not, issue a warning.\n",
        "Line" : 248,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# We are on a 64-bit system.  Does Armadillo have ARMA_64BIT_WORD enabled?\n",
        "Line" : 253,
        "CharPositionInLine" : 6
      },
      "32" : {
        "Text" : "# If we are on a 32-bit system, we must manually specify the size of the word\n\n# to be 32 bits, since otherwise Armadillo will produce a warning that it is\n\n# disabling 64-bit support.\n",
        "Line" : 272,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# On Windows, Armadillo should be using LAPACK and BLAS but we still need to\n\n# link against it.  We don't want to use the FindLAPACK or FindBLAS modules\n\n# because then we are required to have a FORTRAN compiler (argh!) so we will try\n\n# and find LAPACK and BLAS ourselves, using a slightly modified variant of the\n\n# script Armadillo uses to find these.\n",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Piggyback LAPACK and BLAS linking into Armadillo link.\n",
        "Line" : 304,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# Include directories for the previous dependencies.\n",
        "Line" : 309,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Find ensmallen.\n\n# Once ensmallen is readily available in package repos, the automatic downloader\n\n# here can be removed.\n",
        "Line" : 313,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Get the name of the directory.\n",
        "Line" : 329,
        "CharPositionInLine" : 6
      },
      "38" : {
        "Text" : "# Release versions will have ensmallen packaged with the release so we can\n\n# just reference that.\n",
        "Line" : 349,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "# Unfortunately this configuration variable is necessary and will need to be\n\n# updated as time goes on and new versions are released.\n",
        "Line" : 363,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# In Visual Studio, automatic linking is performed, so we don't need to worry\n\n# about it.  Clear the list of libraries to link against and let Visual Studio\n\n# handle it.\n",
        "Line" : 397,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# For Boost testing framework (will have no effect on non-testing executables).\n\n# This specifies to Boost that we are dynamically linking to the Boost test\n\n# library.\n",
        "Line" : 409,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Detect OpenMP support in a compiler. If the compiler supports OpenMP, flags\n\n# to compile with OpenMP are returned and added and the HAS_OPENMP definition\n\n# is added for compilation.\n\n#\n\n# This way we can skip calls to functions defined in omp.h with code like:\n\n# #ifdef HAS_OPENMP\n\n# {\n\n#   ... openMP code here ...\n\n# }\n\n# #endif\n",
        "Line" : 414,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Disable warnings for all the unknown OpenMP pragmas.\n",
        "Line" : 433,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# Create a 'distclean' target in case the user is using an in-source build for\n\n# some reason.\n",
        "Line" : 442,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# On Windows, things end up under Debug/ or Release/.\n",
        "Line" : 449,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# If not on Windows, put them under more standard UNIX-like places.  This is\n\n# necessary, otherwise they would all end up in\n\n# ${CMAKE_BINARY_DIR}/src/mlpack/methods/... or somewhere else random like\n\n# that.\n",
        "Line" : 455,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "# Determine whether or not this is a git repository, so that we can set the\n\n# version number if necessary.\n",
        "Line" : 464,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# Run 'git rev-parse HEAD' to find out if this is a working copy. If the\n\n# return code is not 0, then it isn't.\n",
        "Line" : 469,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "# Add gitversion.hpp to the list of sources.\n",
        "Line" : 486,
        "CharPositionInLine" : 2
      },
      "50" : {
        "Text" : "# Create a target to generate arma_config.hpp, which is used to warn the user\n\n# when they are doing something stupid when linking something against mlpack.\n",
        "Line" : 492,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Make a target to generate the man page documentation, but only if we are on a\n\n# UNIX-like system.\n",
        "Line" : 507,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# It's not a requirement that we make man pages.\n",
        "Line" : 512,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# We have the tools.  We can make them.\n",
        "Line" : 516,
        "CharPositionInLine" : 4
      },
      "54" : {
        "Text" : "# Set the rules to install the documentation.\n",
        "Line" : 526,
        "CharPositionInLine" : 4
      },
      "55" : {
        "Text" : "# Recurse into the rest of the project.\n",
        "Line" : 532,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# If we need to keep gitversion.hpp up to date, then make sure the mlpack target\n\n# depends on it.\n",
        "Line" : 535,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# Make the mlpack_arma_config target depend on mlpack (we couldn't do this\n\n# before the add_subdirectory() call because the mlpack target didn't exist\n\n# before that).\n",
        "Line" : 541,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# Make a target to generate the documentation.  If Doxygen isn't installed, then\n\n# I guess this option will just be unavailable.\n",
        "Line" : 546,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# Preprocess the Doxyfile.  This is done before 'make doc'.\n",
        "Line" : 557,
        "CharPositionInLine" : 2
      },
      "60" : {
        "Text" : "# Generate documentation.\n",
        "Line" : 571,
        "CharPositionInLine" : 2
      },
      "61" : {
        "Text" : "# Create the pkg-config file, if we have pkg-config.\n",
        "Line" : 586,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# mlpack.pc must be generated as a separate target, otherwise it is possible\n\n# that the given version could be out of date.  We don't need to worry about\n\n# the library or include directories changing, because CMake will re-run this\n\n# portion of the code whenever any of those changes.  But the version must be\n\n# re-extracted every time the library is built.\n",
        "Line" : 589,
        "CharPositionInLine" : 2
      },
      "63" : {
        "Text" : "# So, we have to parse our list of library directories, libraries, and include\n\n# directories in order to get the correct line to give to pkg-config.\n\n# Next, adapt the list of include directories.\n",
        "Line" : 595,
        "CharPositionInLine" : 2
      },
      "64" : {
        "Text" : "# Filter out some obviously unnecessary directories.\n",
        "Line" : 600,
        "CharPositionInLine" : 4
      },
      "65" : {
        "Text" : "# Add the install directory too.\n",
        "Line" : 606,
        "CharPositionInLine" : 2
      },
      "66" : {
        "Text" : "# Create the list of link directories.\n",
        "Line" : 610,
        "CharPositionInLine" : 2
      },
      "67" : {
        "Text" : "# We need to split the directory and the library.\n",
        "Line" : 619,
        "CharPositionInLine" : 6
      },
      "68" : {
        "Text" : "# Don't forget to add mlpack as a dependency too.\n",
        "Line" : 629,
        "CharPositionInLine" : 2
      },
      "69" : {
        "Text" : "# Filter duplicate dependencies and directories.\n",
        "Line" : 633,
        "CharPositionInLine" : 2
      },
      "70" : {
        "Text" : "# Filter out known unnecessary directories.\n",
        "Line" : 636,
        "CharPositionInLine" : 2
      },
      "71" : {
        "Text" : "# Do first stage of configuration.\n",
        "Line" : 647,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 72
    },
    "src/mlpack/CMakeLists.txt" : {
      "ObjectId" : "3c934972043e1019cbc368f8eca8430226f4410e",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# mlpack/mlpack_export.hpp\n",
        "Line" : 1,
        "CharPositionInLine" : 52
      },
      "1" : {
        "Text" : "# Add core.hpp to list of sources.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Recurse into both core/ and methods/.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# MLPACK_SRCS is set in the subdirectories.  The dependencies (MLPACK_LIBRARIES)\n\n# are set in the root CMakeLists.txt.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# If we are not forcing C++11 support, check that the compiler supports C++11\n\n# and enable it.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Use the newer C++11 checks.\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Generate export symbols for Windows, instead of adding __declspec(dllimport)\n\n# and __declspec(dllexport) everywhere.  However, those modifiers are still\n\n# necessary for global variables (of which there are a few in mlpack).\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Backtrace for Linux need those libs.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Collect all header files in the library.\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Move all of these header files to <builddir>/include/mlpack/ after the library\n\n# is built.  First we have to create that directory though.\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Then copy each of the header files over to that directory.\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# At install time, we simply install that directory of header files we\n\n# collected to include/.\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Set generated executables to be installed.  Unfortunately they must manually\n\n# be entered...\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# If we are building Python bindings, we have to configure setup.py but only\n\n# after we've recursed into methods/.\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Extract the version number.\n",
        "Line" : 108,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# If we are building Markdown documentation, we have to run some setup after we\n\n# recurse into methods/.  If not, this function is empty.\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "src/mlpack/bindings/CMakeLists.txt" : {
      "ObjectId" : "e726c515bd80313f87e4ec269e86e37472ad5f9b",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# All we have to do is recurse into the subdirectories.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/mlpack/bindings/cli/CMakeLists.txt" : {
      "ObjectId" : "1a16bd93434a6f93e0896049c7e06719e9f382bd",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile.\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append source (with directory name) to list of all mlpack sources (used at the\n\n# parent scope).\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This macro adds a command-line executable with the given name.  It assumes\n\n# that the file with main() is in <name>_main.cpp, and produces an output\n\n# program with the name mlpack_<name>.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Make sure that we set BINDING_TYPE to cli so the command-line program is\n\n# compiled with the correct int main() call.\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# If man documentation is being generated, make sure this is a dependency.\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "src/mlpack/bindings/markdown/CMakeLists.txt" : {
      "ObjectId" : "b6b31cfbab019c71f0274cf9cfc20e9552eb1f62",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Do nothing.\n",
        "Line" : 5,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Do nothing.\n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# We don't need to find any libraries or anything to generate markdown\n\n# documentation.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Get categories.  The list of allowable categories for add_markdown_docs() is\n\n# in that file.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add sources for Markdown bindings.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Copy all Markdown sources to the build directory.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Create the add_markdown_docs() macro.  It's meant to be used as\n\n# 'add_markdown_docs(knn, \"cli;python;julia\", \"classification\")', for instance.\n\n# See the file 'MarkdownCategories.cmake' for valid categories that can be used\n\n# by the macro.\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# First, make sure that the category is a valid category.\n",
        "Line" : 66,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Next, we should use configure_file() to generate each\n\n# generate_markdown.<binding>.cpp.  We need to loop over all the languages for\n\n# this binding to do that.\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Do the actual file configuration.\n",
        "Line" : 88,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Lastly, that generate_markdown.<binding>.cpp should be added to the list of\n\n# files to be compiled for the 'generate_markdown' target.  We also need to\n\n# add information about this binding to a set of variables we have to track.\n",
        "Line" : 97,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# After all the methods/ directories have been traversed, we can add the\n\n# 'generate_markdown' target.  This function is run at the bottom of\n\n# methods/CMakeLists.txt.\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# We need to generate the program file.  This consists of generating three\n\n# things:\n\n#\n\n# - MARKDOWN_INCLUDES: the list of files to be included.\n\n# - MARKDOWN_HEADER_CODE: the code used to print the header/sidebar.\n\n# - MARKDOWN_CALL_CODE: the code to actually call the functions to print\n\n#       documentation for each binding.\n",
        "Line" : 115,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Iterate over categories of binding.\n",
        "Line" : 123,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Put the things in this category in a div.\n",
        "Line" : 129,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Add an option for this binding.\n",
        "Line" : 135,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Remember that this is being run from some other directory, so we have to be\n\n# explicit with the locations of the files we are compiling against.\n",
        "Line" : 164,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 17
    },
    "src/mlpack/bindings/markdown/MarkdownCategories.cmake" : {
      "ObjectId" : "6b8d697cf29d229f7b332b275aea336d006576d5",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is a list of categories of binding that Markdown can handle.  If the\n\n# category you choose for a Markdown binding is not in this list, an error will\n\n# be thrown.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/mlpack/bindings/python/CMakeLists.txt" : {
      "ObjectId" : "b69f1ca567f4b9b6197c293e2b3a9db8b3582f8c",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Do nothing.\n",
        "Line" : 4,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# If we are not supposed to make Python bindings, define the macro so it does\n\n# nothing and leave this file.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Generate Python setuptools file.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Import find_python_module.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Nothing in this directory will be compiled into mlpack.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# These are all the files we need to compile Cython bindings for mlpack that are\n\n# not a part of mlpack itself.\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# mlpack/__init__.py is not included here---that is copied separately.\n",
        "Line" : 78,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Set the include directories correctly.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# By default, Python appears to compile with -DNDEBUG, but if we are in debug\n\n# mode we don't want that.  We also want to disable HAS_BFD_DL if it is set.\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Copy necessary files after making the mlpack/ directory.\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Install any dependencies via setuptools automatically.\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Then do the actual build.\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Copy the built artifacts, so that it is also an in-place build.\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Configure installation script file.\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Prepare __init__.py for having all of the convenience imports appended to it.\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Add a macro to build a python binding.\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Build the pyx.  Since distutils doesn't support a parallel build, we'll\n\n# enforce it here.  Although this will always be rebuilt, that's okay because\n\n# distutils will determine whether or not it *actually* needs to be rebuilt.\n",
        "Line" : 210,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Add the convenience import to __init__.py.  Note that this happens during\n\n# configuration.\n",
        "Line" : 225,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Add a test.\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "src/mlpack/bindings/python/PythonInstall.cmake" : {
      "ObjectId" : "96f04ef210ba93eddd91c72de88a63dc9dd3a0b3",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# PythonInstall.cmake\n\n#\n\n# A utility script to install Python bindings and fail fatally if installation\n\n# was not successful.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/mlpack/bindings/python/tests/CMakeLists.txt" : {
      "ObjectId" : "ade3623737ba84d1f56462af487f52a57e485e3b",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the Python binding test.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/mlpack/bindings/tests/CMakeLists.txt" : {
      "ObjectId" : "70b9928f91cec4e8458fab487337fd561e78cf3f",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile.\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append source (with directory name) to list of all mlpack sources (used at the\n\n# parent scope).\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/core/CMakeLists.txt" : {
      "ObjectId" : "5874cb687dfc4462aded4380d6bb1eb43157a925",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# All we have to do is recurse into the subdirectories.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/mlpack/core/arma_extend/CMakeLists.txt" : {
      "ObjectId" : "fc218442f4d3415a7d25ee4dfbe3290e499ff1df",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile.\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add directory name to sources\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/core/boost_backport/CMakeLists.txt" : {
      "ObjectId" : "08acb797b4e366b4132ff719ac4ecb5613dfccea",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files that we need to compile.\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add directory name to sources\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# parent scope).\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/core/cv/CMakeLists.txt" : {
      "ObjectId" : "67673a67a727f81e32d980cf6d85735e674a807c",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/core/cv/metrics/CMakeLists.txt" : {
      "ObjectId" : "4cf102787457dd63ca6cf42c0d6555acbd1388fd",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/core/data/CMakeLists.txt" : {
      "ObjectId" : "705ea5fa4eaba28bf03c63a4b5085ce64ecd602e",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files that we need to compile.\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add directory name to sources\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add subdirectories.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# parent scope).\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/mlpack/core/data/imputation_methods/CMakeLists.txt" : {
      "ObjectId" : "a3993192ec233c69c967a743ce263ce2d9125343",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/core/data/map_policies/CMakeLists.txt" : {
      "ObjectId" : "be2718c2473f02ceb073c038d01996121bc4e1a2",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/core/dists/CMakeLists.txt" : {
      "ObjectId" : "c8365faac36d9ac32184734586a7c8f28d551b52",
      "LastModified" : "2019-04-08T02:09:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile.\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add directory name to sources\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/core/hpt/CMakeLists.txt" : {
      "ObjectId" : "c39f9b674e3487a58fd7ec07ed7bb68dbd99b1b2",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/mlpack/core/kernels/CMakeLists.txt" : {
      "ObjectId" : "fa77bd7beba916f40831a983401a54ce71ff16a6",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile.\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add directory name to sources\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/core/math/CMakeLists.txt" : {
      "ObjectId" : "518895683839ec02a9882d135115b6490daecbfe",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add directory name to sources\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/core/metrics/CMakeLists.txt" : {
      "ObjectId" : "8e0738166b2e1430691db2205b6b7c538add7282",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile.\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add directory name to sources\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/core/tree/CMakeLists.txt" : {
      "ObjectId" : "ebba35b1cc35ad9e7ce2671594b053e49fde3184",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile.\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add directory name to sources\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/core/util/CMakeLists.txt" : {
      "ObjectId" : "6f8999647be494bb05d3629f5aa9934fc2370978",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile.\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add directory name to sources\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/CMakeLists.txt" : {
      "ObjectId" : "83c96e68ddb2f666a3738009e6310ea2b33b9ccf",
      "LastModified" : "2019-04-08T02:09:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Recurse into each method mlpack provides.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# mvu # Note: this implementation of MVU does not work.  See #189.\n",
        "Line" : 3,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "src/mlpack/methods/adaboost/CMakeLists.txt" : {
      "ObjectId" : "f940729a1c11157cf8d162b8062eced45cd8eabf",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile.\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/amf/CMakeLists.txt" : {
      "ObjectId" : "4f98ff408748a57158f47a3208e432d08b2acd23",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/amf/init_rules/CMakeLists.txt" : {
      "ObjectId" : "17ddfe2ea5de18a7bfe72fadc39eefc350b59dfe",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/amf/termination_policies/CMakeLists.txt" : {
      "ObjectId" : "4471d8a3078087eec31dfc7f4855b8dcfd4983cc",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/amf/update_rules/CMakeLists.txt" : {
      "ObjectId" : "c040c427b08cbca6fa694f63d5bc5c3dc7b16508",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/ann/CMakeLists.txt" : {
      "ObjectId" : "f6e3c5dab3244ac0cadf759380870e8fc945e749",
      "LastModified" : "2019-04-08T02:09:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/ann/activation_functions/CMakeLists.txt" : {
      "ObjectId" : "cad7606542a2dd6a911f57287eb932ce987c2073",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/ann/augmented/CMakeLists.txt" : {
      "ObjectId" : "975cf176afb68a165e8bfb39d1c56ae1bd66830c",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/ann/augmented/tasks/CMakeLists.txt" : {
      "ObjectId" : "ced921e2dba2dec580188a13ad2a050e03f07b56",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/ann/convolution_rules/CMakeLists.txt" : {
      "ObjectId" : "3e69071278aa5d17a198ec509aa8f0e320a0dad5",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/ann/dists/CMakeLists.txt" : {
      "ObjectId" : "eea77c413c3c5ef9e6794fe2d3a584a2b1b24f06",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/ann/gan/CMakeLists.txt" : {
      "ObjectId" : "05c120d0082a996d063563d5551554b30c986bdf",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/ann/init_rules/CMakeLists.txt" : {
      "ObjectId" : "7d18f987fe824bcd1c905e8089e2034ae51ee2bb",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/ann/layer/CMakeLists.txt" : {
      "ObjectId" : "1990f693a2c9c5cbe04448fe0509234538437c04",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/ann/loss_functions/CMakeLists.txt" : {
      "ObjectId" : "afca2ea0fd519adab11bccddc35d35857f306016",
      "LastModified" : "2019-04-08T02:09:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/ann/rbm/CMakeLists.txt" : {
      "ObjectId" : "001b85b752b2f81d141493839669305db3daae52",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile.\n\n# Any file not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/ann/visitor/CMakeLists.txt" : {
      "ObjectId" : "67178361d806ad9de522b2db13042f6cb7e9659c",
      "LastModified" : "2019-04-08T02:09:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/approx_kfn/CMakeLists.txt" : {
      "ObjectId" : "be1a5c4f03e59bc2ff2e0ac3ef99d95ff58046f3",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile.\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# DrusillaSelect sources.\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# QDAFN sources.\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# This program computes approximate furthest neighbors.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/mlpack/methods/bias_svd/CMakeLists.txt" : {
      "ObjectId" : "3ca501362c69c149e143a093c85475e79dd34d5d",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile.\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/block_krylov_svd/CMakeLists.txt" : {
      "ObjectId" : "6380befb28a8173b45c460417ee54a3177b042a3",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile.\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/cf/CMakeLists.txt" : {
      "ObjectId" : "81670919429d1ec744b35874d577245f1d6949f4",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/cf/decomposition_policies/CMakeLists.txt" : {
      "ObjectId" : "b57c094e3ccc74844e2b902fbcbfe31a96a206ec",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/cf/interpolation_policies/CMakeLists.txt" : {
      "ObjectId" : "c1e7144063697ec0f93a90ca18c50a1a3967271d",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/cf/neighbor_search_policies/CMakeLists.txt" : {
      "ObjectId" : "13f7fa3f7095954ee87fdb51b85af959cc778f31",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/cf/normalization/CMakeLists.txt" : {
      "ObjectId" : "648bf7eca5e16e89779f069f772fa9c5826f4e69",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/dbscan/CMakeLists.txt" : {
      "ObjectId" : "d6d29faa741e7667112f29190d46857a499975dc",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/decision_stump/CMakeLists.txt" : {
      "ObjectId" : "3684a69fbbafe57219a6989039168fe2916c8209",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile.\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/decision_tree/CMakeLists.txt" : {
      "ObjectId" : "bdc2ec6d5101332537f4b06a65ef6517ed0ca313",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile.\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/det/CMakeLists.txt" : {
      "ObjectId" : "58b402c7c7946c6e236f186791ec5bbd5aeaffd1",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile\n\n# Anything not in this list will not be compiled into the output library\n\n# Do not include test programs here\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# the DET class\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Utility files\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# add directory name to sources\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# append sources (with directory name) to list of all mlpack sources (used at the parent scope)\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/mlpack/methods/emst/CMakeLists.txt" : {
      "ObjectId" : "7a073a8f956d77c8bc251051f2a992413acff436",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# union_find\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# dtb\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/mlpack/methods/fastmks/CMakeLists.txt" : {
      "ObjectId" : "e6b6e55c1b9418da0435ab3e275a00d8689125f0",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile.\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/gmm/CMakeLists.txt" : {
      "ObjectId" : "da3b50824c753584ccfa0eb45d1261edda23dd41",
      "LastModified" : "2019-04-08T02:09:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile.\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/hmm/CMakeLists.txt" : {
      "ObjectId" : "7247430bb079d19aec89c88fe9e86c534a04ae66",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile.\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/hoeffding_trees/CMakeLists.txt" : {
      "ObjectId" : "2a94415b355abb69ec66c106bba755de95158c2b",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/kde/CMakeLists.txt" : {
      "ObjectId" : "fa5977534b96ff6ad7be9125ca64fb4b95179faf",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile.\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/kernel_pca/CMakeLists.txt" : {
      "ObjectId" : "9bd0cd3a0098b878fe6bbcb7ee61e63e669b0322",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/kernel_pca/kernel_rules/CMakeLists.txt" : {
      "ObjectId" : "72f21281a381fe6fed8fac6b21fff4fa3c6ca8ce",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/kmeans/CMakeLists.txt" : {
      "ObjectId" : "9cfec0fdc309dd0d3916836a01a3a443720f8ff9",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile.\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/lars/CMakeLists.txt" : {
      "ObjectId" : "7e4cb789015ea7c086ba8ecb54744b019eda9524",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile\n\n# Anything not in this list will not be compiled into the output library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add directory name to sources\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# append sources (with directory name) to list of all mlpack sources (used at the parent scope)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/linear_regression/CMakeLists.txt" : {
      "ObjectId" : "b4e63cdca0fdfed3e6c2766efa800de927f9e6b0",
      "LastModified" : "2019-01-25T02:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile\n\n# Anything not in this list will not be compiled into the output library\n\n# Do not include test programs here\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add directory name to sources\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/linear_svm/CMakeLists.txt" : {
      "ObjectId" : "e267e357953aff3b7fb370517198d8fe584610bb",
      "LastModified" : "2019-04-08T02:09:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile\n\n# Anything not in this list will not be compiled into the output library\n\n# Do not include test programs here\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add directory name to sources\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope)\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/lmnn/CMakeLists.txt" : {
      "ObjectId" : "3a7ea883a3d3a1f0127a600fc85a312e7d793c00",
      "LastModified" : "2019-04-08T02:09:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile.\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/local_coordinate_coding/CMakeLists.txt" : {
      "ObjectId" : "d4b498e55255de4ce6edeabc60366b0d59a494ea",
      "LastModified" : "2019-04-08T02:09:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile\n\n# Anything not in this list will not be compiled into the output library\n\n# Do not include test programs here\n\n# In this library, these are specified twice, once here, and once for the individual library it belongs to, so make sure\n\n# that you have files in both sections\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add directory name to sources\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# append sources (with directory name) to list of all mlpack sources (used at the parent scope)\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/logistic_regression/CMakeLists.txt" : {
      "ObjectId" : "673e214c6bd7b3b3672d6aa447f45b5e68d95967",
      "LastModified" : "2019-04-08T02:09:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile\n\n# Anything not in this list will not be compiled into the output library\n\n# Do not include test programs here\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add directory name to sources\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope)\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/lsh/CMakeLists.txt" : {
      "ObjectId" : "4ec7baacfeb2c2767ba0af4d2d7d4b6527c37fb5",
      "LastModified" : "2019-04-08T02:09:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile.\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# LSH-search class\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The code to compute the approximate neighbor for the given query and reference\n\n# sets with p-stable LSH.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/mlpack/methods/matrix_completion/CMakeLists.txt" : {
      "ObjectId" : "818ec34c8013d8322285cdee2dae727500c98bb4",
      "LastModified" : "2019-04-08T02:09:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile.\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/mean_shift/CMakeLists.txt" : {
      "ObjectId" : "5aced5225139c129105d004b1701353d8d00ce67",
      "LastModified" : "2019-04-08T02:09:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile.\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/mvu/CMakeLists.txt" : {
      "ObjectId" : "8fbaec54429dcaf48db0205632f8c8d85acbb3a3",
      "LastModified" : "2019-04-08T02:09:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile.\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/naive_bayes/CMakeLists.txt" : {
      "ObjectId" : "b2afe070731b92df70f6222e8f10afe884d3a224",
      "LastModified" : "2019-04-08T02:09:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile.\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/nca/CMakeLists.txt" : {
      "ObjectId" : "7b1fd98f5443fe2b8850f53b0b9ebc2c85e21f27",
      "LastModified" : "2019-04-08T02:09:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile.\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/neighbor_search/CMakeLists.txt" : {
      "ObjectId" : "789beb295fd8431c4ffc86ade4a931b15263acf8",
      "LastModified" : "2019-04-08T02:09:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile.\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add mlpack_knn and mlpack_kfn executables.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/mlpack/methods/nmf/CMakeLists.txt" : {
      "ObjectId" : "f1c4666f399642b5ac88aab03366497bb8007312",
      "LastModified" : "2019-04-08T02:09:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/mlpack/methods/nystroem_method/CMakeLists.txt" : {
      "ObjectId" : "8677e1e065bb95eef4580946198b626d18a48d8e",
      "LastModified" : "2019-04-08T02:09:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/pca/CMakeLists.txt" : {
      "ObjectId" : "8b317c4fcbb81a244ad1fca5dc23c757f96a8263",
      "LastModified" : "2019-04-08T02:09:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#  pca_nomain.hpp\n\n#  pca_nomain.cpp\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/mlpack/methods/pca/decomposition_policies/CMakeLists.txt" : {
      "ObjectId" : "85bbb7c305bc5d520fcbcdca25f7f4da7e5364c0",
      "LastModified" : "2019-04-08T02:09:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/perceptron/CMakeLists.txt" : {
      "ObjectId" : "9463f1139e6f4ddcc22ed9a3b085de0f658d4879",
      "LastModified" : "2019-04-08T02:09:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile.\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/perceptron/initialization_methods/CMakeLists.txt" : {
      "ObjectId" : "25b8122c4c44008029f492d8bf1a8a6850984893",
      "LastModified" : "2019-04-08T02:09:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/perceptron/learning_policies/CMakeLists.txt" : {
      "ObjectId" : "a6ef3bf2442aeba70479bd9c28777c80f696df99",
      "LastModified" : "2019-04-08T02:09:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/preprocess/CMakeLists.txt" : {
      "ObjectId" : "a654879810ac9397c4747814debe15ceabfdbb3e",
      "LastModified" : "2019-04-08T02:09:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile.\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#add_cli_executable(preprocess_stats)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#add_cli_executable(preprocess_scan)\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#add_python_binding(preprocess_imputer)\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/mlpack/methods/quic_svd/CMakeLists.txt" : {
      "ObjectId" : "ef7def2f080fec81afcc7a5e2304a8547f674fb2",
      "LastModified" : "2019-04-08T02:09:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile.\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/radical/CMakeLists.txt" : {
      "ObjectId" : "c7dc29cac9c4f0da90e78b62e28c7395e9e1bb3b",
      "LastModified" : "2019-04-08T02:09:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile\n\n# Anything not in this list will not be compiled into the output library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add directory name to sources\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# append sources (with directory name) to list of all mlpack sources (used at the parent scope)\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/random_forest/CMakeLists.txt" : {
      "ObjectId" : "11872c4a16be61cbec219eb21f0fc33b054413b7",
      "LastModified" : "2019-04-08T02:09:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile.\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/randomized_svd/CMakeLists.txt" : {
      "ObjectId" : "ad0e5b34faf565edf71a0e7168267e6cfcf4642c",
      "LastModified" : "2019-04-08T02:09:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile.\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/range_search/CMakeLists.txt" : {
      "ObjectId" : "68a0203152c936b56342c5c2bd93e8e098d30b8f",
      "LastModified" : "2019-04-08T02:09:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile.\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#add_python_binding(range_search)\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/mlpack/methods/rann/CMakeLists.txt" : {
      "ObjectId" : "3ba78994a5509b5789a9117758f2bb42c9e095b1",
      "LastModified" : "2019-04-08T02:09:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile\n\n# Anything not in this list will not be compiled into the output library\n\n# Do not include test programs here\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# rank-approximate search files\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# rank-approximate search rules\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# query statistic\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# typedefs\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# utilities\n",
        "Line" : 19,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# model\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# add directory name to sources\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at the parent scope)\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# The code to compute the rank-approximate neighbor for the given query and\n\n# reference sets.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "src/mlpack/methods/regularized_svd/CMakeLists.txt" : {
      "ObjectId" : "106fb194bbaf8c0ac2f45c2bff678fd325ebe573",
      "LastModified" : "2019-04-08T02:09:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile.\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/reinforcement_learning/CMakeLists.txt" : {
      "ObjectId" : "a8910e7bfcee6f34d4646d419ed98ed493193c93",
      "LastModified" : "2019-04-08T02:09:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/reinforcement_learning/environment/CMakeLists.txt" : {
      "ObjectId" : "3aabc6373c3345777f03008ea37fbd53bc8785c5",
      "LastModified" : "2019-04-08T02:09:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/reinforcement_learning/policy/CMakeLists.txt" : {
      "ObjectId" : "5232d782c2bf3f9fd9fa7efd37b2001575d37b9e",
      "LastModified" : "2019-04-08T02:09:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/reinforcement_learning/replay/CMakeLists.txt" : {
      "ObjectId" : "03ff3a572047c15b23645923159823b63b793fa9",
      "LastModified" : "2019-04-08T02:09:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/reinforcement_learning/worker/CMakeLists.txt" : {
      "ObjectId" : "7880a982db72a5f9b97d5cfd9b0fa61d92ecfa92",
      "LastModified" : "2019-04-08T02:09:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/softmax_regression/CMakeLists.txt" : {
      "ObjectId" : "60a7d4cff61d86dae89f8183bee0a986ce990f01",
      "LastModified" : "2019-04-08T02:09:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile.\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/sparse_autoencoder/CMakeLists.txt" : {
      "ObjectId" : "799d9cafcd2d512ca8984db72b1a67a902dffece",
      "LastModified" : "2019-04-08T02:09:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile.\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/sparse_coding/CMakeLists.txt" : {
      "ObjectId" : "7bb0f7b799954bd126111523776b498a89ee2caf",
      "LastModified" : "2019-04-08T02:09:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile\n\n# Anything not in this list will not be compiled into the output library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add directory name to sources\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# append sources (with directory name) to list of all mlpack sources (used at the parent scope)\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/methods/svdplusplus/CMakeLists.txt" : {
      "ObjectId" : "c6f7e0f0570cb1bff406440a02c3efc3ef38246a",
      "LastModified" : "2019-04-08T02:09:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the files we need to compile.\n\n# Anything not in this list will not be compiled into mlpack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append sources (with directory name) to list of all mlpack sources (used at\n\n# the parent scope).\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/mlpack/tests/CMakeLists.txt" : {
      "ObjectId" : "fa3bbb291ed47a0f5750c4955860e643d68acfdf",
      "LastModified" : "2019-04-08T02:09:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# mlpack test executable.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Link dependencies of test executable.\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Copy test data into right place.\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The list of long running parallel tests\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add tests to the testing framework\n\n# Get the list of sources from the test target\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Go through the list of test sources and parse the test suite name\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Regex for parsing files with AUTO_TEST_SUITE\n",
        "Line" : 196,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Get the substring of test_suite within brackets in test_name\n",
        "Line" : 199,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Get the substring excluding the brackets, by calculating the indices\n",
        "Line" : 201,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Add the test to the testing tool, test is the name of the test suite\n",
        "Line" : 205,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Regex for parsing files with FIXTURE_TEST_SUITE similarly\n",
        "Line" : 209,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Get the substring of test_suite within brackets and comma in test_name\n",
        "Line" : 212,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Use RUN_SERIAL for long running parallel tests\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    }
  },
  "FileTypes" : {
    "CMAKE" : 128
  },
  "ElapsedTime" : 7260
}