{
  "Repository" : "47535741",
  "Revision" : "HEAD",
  "ObjectId" : "fae7d2649253a5084d8444ea2fd21ec79ccbcc4c",
  "CommitTime" : "2019-02-11T22:11:09Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "047bbaa845a5060ce277edc37b464c802d9429ab",
      "LastModified" : "2019-02-11T00:53:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Do not allow in-source builds\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Set a default build type\n\n#\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the possible values of build type for cmake-gui\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Compiler settings (this must come before calling project)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Core set of warnings\n\n#\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Additional warnings\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Some very strict warnings, that will be nice to use, but require some hefty refactoring\n\n# set(cxx_warnings \"${cxx_warnings} -Wcast-qual\")\n\n# set(cxx_warnings \"${cxx_warnings} -Wconversion\")\n\n# set(cxx_warnings \"${cxx_warnings} -Wformat=2\")\n\n# set(cxx_warnings \"${cxx_warnings} -Wpadded\")\n\n# set(cxx_warnings \"${cxx_warnings} -Wstrict-overflow\")\n\n# set(cxx_warnings \"${cxx_warnings} -fno-strict-aliasing\")\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Temporary support for GCC 8.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n# Set the flags and warnings for the debug/release builds\n\n#\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\n\n# Source files and directories\n\n#\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\n\n# Set up the install paths and files\n\n#\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Core game data files\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Various support files (readme, etc.)\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#\n\n# Extract the Umoria version number from version.h\n\n#\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#\n\n# Update the data files with the current version number and date\n\n#\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Fetch release date from CHANGELOG if it's there :-)\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# All of the game resource files\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Also add resources to the target so they are visible in the IDE\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# This is horrible, but needed bacause `find_package()` doesn't use the\n\n# include/lib inside the /mingw32 or /mingw64 directories, and with\n\n# `ncurses-devel` installed, it won't compile.\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Make the ncurses library static\n",
        "Line" : 261,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Build and install the umoria binary\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    }
  },
  "FileTypes" : {
    "CMAKE" : 1
  },
  "ElapsedTime" : 575
}