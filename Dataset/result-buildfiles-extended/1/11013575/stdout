{
  "Repository" : "11013575",
  "Revision" : "HEAD",
  "ObjectId" : "b8008c49edd10a9ca50923b89e3b469c342d9cee",
  "CommitTime" : "2016-01-16T13:40:25Z",
  "Files" : {
    "Makefile.am" : {
      "ObjectId" : "cc5c39a981bb437c60cc57a132440d451b4aa194",
      "LastModified" : "2014-07-23T13:48:15Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#not installed\n",
        "Line" : 19,
        "CharPositionInLine" : 44
      },
      "CommentCount" : 1
    },
    "contrib/bitcoin-qt.pro" : {
      "ObjectId" : "3a72d10f4732b80e50d943d9d600e8d38b9957b9",
      "LastModified" : "2014-02-23T10:57:37Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "contrib/monitorsScanner/Makefile.am" : {
      "ObjectId" : "ff8c61eb5c0ac0e12891e5c03e84511dc353d466",
      "LastModified" : "2015-03-08T21:24:19Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "share/qt/protobuf.pri" : {
      "ObjectId" : "865fe865550ae21f2eec4bb7c8f8c1817bdf1bce",
      "LastModified" : "2014-02-23T10:57:37Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Based on: http://code.google.com/p/ostinato/source/browse/protobuf.pri\n\n#\n\n# Qt qmake integration with Google Protocol Buffers compiler protoc\n\n#\n\n# To compile protocol buffers with qt qmake, specify PROTOS variable and\n\n# include this file\n\n#\n\n# Example:\n\n# PROTOS = a.proto b.proto\n\n# include(protobuf.pri)\n\n#\n\n# Set PROTO_PATH if you need to set the protoc --proto_path search path\n\n# Set PROTOC to the path to the protoc compiler if it is not in your $PATH\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/Makefile.am" : {
      "ObjectId" : "dbf50ee5ef07d8de4b8cac5bd908d4b711f1de4e",
      "LastModified" : "2015-12-31T18:01:06Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# tracker core #\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# bitcoin core #\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# tracker core #\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# this repetition is temporary workaround\n\n# dims_tracker binary #\n",
        "Line" : 284,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n",
        "Line" : 305,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# NOTE: This dependency is not strictly necessary, but without it make may try to build both in parallel, which breaks the LevelDB build system in a race\n",
        "Line" : 309,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "src/appLib/Makefile.am" : {
      "ObjectId" : "06298ad260c10e4268ccabefbb8a876347b995a8",
      "LastModified" : "2015-12-31T18:01:06Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/appLib/app.pro" : {
      "ObjectId" : "0cf8b5555e2235dbb64baa1e941616a0c3d5803e",
      "LastModified" : "2015-09-01T17:14:16Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "src/leveldb/Makefile" : {
      "ObjectId" : "344ff2972a57dd6925b96ca47b5f3c9c6bfdf7e1",
      "LastModified" : "2015-09-01T17:14:16Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n\n# Use of this source code is governed by a BSD-style license that can be\n\n# found in the LICENSE file. See the AUTHORS file for names of contributors.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------\n\n# Uncomment exactly one of the lines labelled (A), (B), and (C) below\n\n# to switch between compilation modes.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# (A) Production use (optimized mode)\n",
        "Line" : 9,
        "CharPositionInLine" : 26
      },
      "3" : {
        "Text" : "# OPT ?= -g2              # (B) Debug mode, w/ full line-level debugging symbols\n\n# OPT ?= -O2 -g2 -DNDEBUG # (C) Profiling mode: opt, but w/debugging symbols\n\n#-----------------------------------------------\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# detect what platform we're building on\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# this file is generated by the previous line to set build flags and sources\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Should we build shared libraries?\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Update db.h if you change these.\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# PLATFORM_SHARED_EXT\n",
        "Line" : 89,
        "CharPositionInLine" : 7
      },
      "9" : {
        "Text" : "# For iOS, create universal object files to be used on both the simulator and\n\n# a device.\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "src/monitor/Makefile.am" : {
      "ObjectId" : "1712ebe4d25862d71f214f8059d3e802804a5553",
      "LastModified" : "2015-12-31T18:01:06Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# dims_monitor binary #\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/qt/Makefile.am" : {
      "ObjectId" : "567ea9aedd6924deb35bcb56c48f1ea47f8b222f",
      "LastModified" : "2015-12-31T18:01:06Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# bitcoin qt core #\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Generating these with a half-written protobuf header leads to wacky results.\n\n#This makes sure it's done.\n",
        "Line" : 360,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# dims_client binary #\n",
        "Line" : 365,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# fix  mess one day\n",
        "Line" : 375,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# forms/foo.h -> forms/ui_foo.h\n",
        "Line" : 382,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#locale/foo.ts -> locale/foo.qm\n",
        "Line" : 385,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/qt/test/Makefile.am" : {
      "ObjectId" : "edf2ff9fce79b03ec037ba89cc11ac056baae8f5",
      "LastModified" : "2015-09-01T17:14:16Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/seed/Makefile.am" : {
      "ObjectId" : "9e41c2810a6fb297d3a3cf2c9fee2f3ccfde611f",
      "LastModified" : "2015-12-31T18:01:06Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# dims_seed binary #\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/test/Makefile.am" : {
      "ObjectId" : "729524b568eee83830f17042f553aba324fd510f",
      "LastModified" : "2015-09-01T17:14:16Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#  data/script_valid.json \\\n#  data/base58_keys_valid.json \\\n#  data/sig_canonical.json \\\n#  data/sig_noncanonical.json \\\n#  data/base58_encode_decode.json \\\n#  data/base58_keys_invalid.json \\\n#  data/script_invalid.json \\\n#  data/tx_invalid.json \\\n#  data/tx_valid.json\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#RAW_TEST_FILES = data/alertTests.raw\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# test_bitcoin binary #\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#test_bitcoin_SOURCES += \\\n#   accounting_tests.cpp \\\n#   wallet_tests.cpp \\\n#   rpc_wallet_tests.cpp\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    }
  },
  "FileTypes" : {
    "QMAKE" : 3,
    "MAKEFILE" : 1,
    "AUTOMAKE" : 9
  },
  "ElapsedTime" : 1662
}