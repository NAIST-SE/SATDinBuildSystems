{
  "Repository" : "5930282",
  "Revision" : "HEAD",
  "ObjectId" : "4b4496fba57e44040d0867bbbe211609ff9002da",
  "CommitTime" : "2019-04-18T22:43:57Z",
  "Files" : {
    "3rdparty/libossia.cmake" : {
      "ObjectId" : "46827c507917ce8b7c069817b659bd5f17308cb8",
      "LastModified" : "2019-03-24T13:23:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# OSSIA-specific configuration\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/Configurations/WindowsRelease.cmake" : {
      "ObjectId" : "eeef9aa134fd20e56eb4a9509bb8f2fe4d9d32d6",
      "LastModified" : "2019-02-22T19:44:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# phidgets:\n\n# cmake  -G\"Visual Studio 15 2017 Win64\" -T host=x64 ../score/API -DCMAKE_BUILD_TYPE=Release -DOSSIA_MAX=1 -DOSSIA_STATIC=1 -DOSSIA_PD=0 -DOSSIA_PROTOCOL_PHIDGETS=1 -DBOOST_ROOT=c:/boost_1_66_0 -DOSSIA_DATAFLOW=0 -DOSSIA_EDITOR=0\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#cmake -G \"Visual Studio 15 2017 Win64\" -T host=x64 -DSCORE_CONFIGURATION=static-release -DBOOST_ROOT=c:/boost_1_66_0 -DCMAKE_PREFIX_PATH=c:/Qt/5.11.0/msvc2017_64/lib/cmake/Qt5 -DCOTIRE_UNITY_SOURCE_MAXIMUM_NUMBER_OF_INCLUDES=-j1 ../score\n\n# cmake -G Ninja -DCMAKE_C_COMPILER=\"c:/program files/LLVM/msbuild-bin/cl.exe\" -DCMAKE_CXX_COMPILER=\"c:/program files/LLVM/msbuild-bin/cl.exe\" -DSCORE_CONFIGURATION=static-release -DBOOST_ROOT=c:/boost_1_66_0 -DCMAKE_PREFIX_PATH=c:/Qt/5.11.0/msvc2017_64/lib/cmake/Qt5 -DCOTIRE_UNITY_SOURCE_MAXIMUM_NUMBER_OF_INCLUDES=-j1 ../score  -DCMAKE_MAKE_PROGRAM=c:/Ninja.exe -DCMAKE_C_FLAGS=\"-fmsc-version=1913 /EHsc\" -DCMAKE_CXX_FLAGS=\"-fmsc-version=1913 /EHsc\" -DSCORE_COTIRE=0 -DOSSIA_DISABLE_COTIRE=1\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ok: cmake -G Ninja -DCMAKE_C_COMPILER=\"c:/program files/LLVM/msbuild-bin/cl.exe\" -DCMAKE_CXX_COMPILER=\"c:/program files/LLVM/msbuild-bin/cl.exe\" -DSCORE_CONFIGURATION=static-release -DBOOST_ROOT=c:/boost_1_66_0 -DCMAKE_PREFIX_PATH=c:/Qt/5.11.0/msvc2017_64/lib/cmake/Qt5 -DCOTIRE_UNITY_SOURCE_MAXIMUM_NUMBER_OF_INCLUDES=-j1 ../score  -DCMAKE_MAKE_PROGRAM=c:/Ninja.exe -DCMAKE_C_FLAGS=\"-fmsc-version=1913 /EHsc -m64\" -DCMAKE_CXX_FLAGS=\"-fmsc-version=1913 /EHsc -m64\" -DSCORE_COTIRE=0 -DOSSIA_DISABLE_COTIRE=1 -DCMAKE_BUILD_TYPE=Release\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# c:\\PROGRA~1\\LLVM\\MSBUIL~1\\cl.exe  /nologo -TP -DASIO_STANDALONE=1 -DFMT_HEADER_ONLY=1 -DNOMINMAX -DOSSIA_DISABLE_QT_PLUGIN -DQT_CORE_LIB -DQT_DISABLE_DEPRECATED_BEFORE=0x050800 -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_NO_DEBUG -DQT_NO_KEYWORDS -DQT_QML_LIB -DQT_QUICK_LIB -DQT_SERIALPORT_LIB -DQT_WEBSOCKETS_LIB -DRAPIDJSON_HAS_STDSTRING=1 -DTINYSPLINE_DOUBLE_PRECISION -DWIN32_LEAN_AND_MEAN -D_CRT_SECURE_NO_WARNINGS -D_HAS_AUTO_PTR_ETC=1 -D_SILENCE_ALL_CXX17_DEPRECATION_WARNINGS=1 -IAPI\\OSSIA -IC:\\Users\\blah\\score\\API\\OSSIA -IC:\\boost_1_66_0 -IC:\\Users\\blah\\score\\API\\3rdparty\\readerwriterqueue -IC:\\Users\\blah\\score\\API\\3rdparty\\SmallFunction\\smallfun\\include -IC:\\Users\\blah\\score\\API\\3rdparty\\asio\\asio\\include -IC:\\Users\\blah\\score\\API\\3rdparty\\websocketpp -IC:\\Users\\blah\\score\\API\\OSSIA\\ossia-qt -IC:\\Users\\blah\\score\\API\\3rdparty\\verdigris\\src -IC:\\Users\\blah\\score\\API\\3rdparty\\variant\\include -IC:\\Users\\blah\\score\\API\\3rdparty\\nano-signal-slot\\include -IC:\\Users\\blah\\score\\API\\3rdparty\\spdlog\\include -IC:\\Users\\blah\\score\\API\\3rdparty\\brigand\\include -IC:\\Users\\blah\\score\\API\\3rdparty\\fmt -IC:\\Users\\blah\\score\\API\\3rdparty\\hopscotch-map\\src -IC:\\Users\\blah\\score\\API\\3rdparty\\chobo-shl\\include -IC:\\Users\\blah\\score\\API\\3rdparty\\frozen\\include -IC:\\Users\\blah\\score\\API\\3rdparty\\bitset2 -IC:\\Users\\blah\\score\\API\\3rdparty\\GSL\\include -IC:\\Users\\blah\\score\\API\\3rdparty\\flat_hash_map -IC:\\Users\\blah\\score\\API\\3rdparty\\rapidjson\\include -IC:\\Users\\blah\\score\\API\\3rdparty\\ModernMIDI -IC:\\Users\\blah\\score\\API\\3rdparty\\ModernMIDI\\third_party -IC:\\Users\\blah\\score\\API\\3rdparty\\oscpack -IAPI\\3rdparty\\ModernMIDI -IC:\\Qt\\5.11.0\\msvc2017_64\\include -IC:\\Qt\\5.11.0\\msvc2017_64\\include\\QtQml -IC:\\Qt\\5.11.0\\msvc2017_64\\include\\QtNetwork -IC:\\Qt\\5.11.0\\msvc2017_64\\include\\QtCore -IC:\\Qt\\5.11.0\\msvc2017_64\\.\\mkspecs\\win32-msvc -IC:\\Qt\\5.11.0\\msvc2017_64\\include\\QtWebSockets -IC:\\Qt\\5.11.0\\msvc2017_64\\include\\QtSerialPort -IC:\\Qt\\5.11.0\\msvc2017_64\\include\\QtGui -IC:\\Qt\\5.11.0\\msvc2017_64\\include\\QtANGLE -IC:\\Qt\\5.11.0\\msvc2017_64\\include\\QtQuick -IAPI\\3rdparty\\Servus\\servus -IC:\\Users\\blah\\score\\API\\3rdparty\\Servus\\servus\\.. -IC:\\portaudio\\include -Ic:\\Users\\blah\\score\\base\\lib -Ic:\\Users\\blah\\score\\base\\plugins\\score-lib-process -Ic:\\Users\\blah\\score\\base\\plugins\\score-lib-state -Ic:\\Users\\blah\\score\\base\\plugins\\score-lib-device -Ic:\\Users\\blah\\score\\base\\plugins\\score-plugin-media  -DNOGDI -DLF_FACESIZE=32 /std:c++latest -fmsc-version=1913 /EHsc -m64 /std:c++latest /MD /O2 /Ob2 /DNDEBUG   /wd4065 /wd4068 /wd4250 /wd4251 /wd4275 /wd4244 /wd4800 /wd4804 /wd4805 /wd4996 /wd4503 /wd4305 /bigobj  /Fofx.obj -I.  -Ic:\\Users\\blah\\score\\base\\plugins\\score-plugin-fx -Ic:\\Users\\blah\\score\\base\\plugins\\score-plugin-engine -c C:\\Users\\blah\\score\\base\\plugins\\score-plugin-fx\\score_plugin_fx.cpp -DQT_WIDGETS_LIB -Ic:/Qt/5.11.0/msvc2017_64/include -Ic:/Qt/5.11.0/msvc2017_64/include/QtWidgets -Ic:\\Users\\blah\\score\\base\\plugins\\score-plugin-scenario -Ic:\\Users\\blah\\score\\base\\plugins\\score-plugin-deviceexplorer -Ic:\\Users\\blah\\score\\base\\plugins\\score-lib-inspector -Ic:\\Users\\blah\\score\\API\\3rdparty\\exprtk\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "CMake/Configurations/all-plugins.cmake" : {
      "ObjectId" : "b663e4abe41c55a9209ee070ac284764275ed25b",
      "LastModified" : "2019-02-22T19:44:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/Configurations/clear.cmake" : {
      "ObjectId" : "dfcf9044f89a9bbb39c993157b3d63d62c6f4e1e",
      "LastModified" : "2019-02-22T19:44:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/Configurations/default-plugins.cmake" : {
      "ObjectId" : "9466285c029d81cf31fb1ae3beb2b5f4feb203f3",
      "LastModified" : "2019-04-07T13:25:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/Configurations/developer.cmake" : {
      "ObjectId" : "6e3a6fc9532c1358296a7cd9653d046c78ba7022",
      "LastModified" : "2019-02-22T19:44:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/Configurations/ieee.cmake" : {
      "ObjectId" : "406b9d27f2deabe12cdea3e68617a5a82a69d8b4",
      "LastModified" : "2017-09-08T10:49:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/Configurations/minimal-plugins.cmake" : {
      "ObjectId" : "a1fd8470d993827b7f4a5e1069aea172ec58c9df",
      "LastModified" : "2019-03-24T13:23:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/Configurations/none.cmake" : {
      "ObjectId" : "fbd6698276ca48a2f352b44d756ac00c3a5052cd",
      "LastModified" : "2019-02-22T19:44:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(CMAKE_CXX_COMPILER /usr/bin/clazy)\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/Configurations/optimized.cmake" : {
      "ObjectId" : "7b65f47af0bd7d50773adc68e434a720953be184",
      "LastModified" : "2017-09-08T10:49:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/Configurations/release-msvc.cmake" : {
      "ObjectId" : "b474760e875512714f0bf740bde761b9a752f075",
      "LastModified" : "2017-09-08T10:49:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/Configurations/sanitized.cmake" : {
      "ObjectId" : "98464805f62248a9641dffe84607ee472354fe13",
      "LastModified" : "2019-04-07T13:25:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/Configurations/segment.cmake" : {
      "ObjectId" : "eb312c5eca9ba07cfbca168537bf21a93b564090",
      "LastModified" : "2019-02-22T19:44:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/Configurations/travis/android-debug.cmake" : {
      "ObjectId" : "186116303c5015d5ded4b19042e0ede4ec9f1b61",
      "LastModified" : "2019-02-22T19:44:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/Configurations/travis/android-release.cmake" : {
      "ObjectId" : "47c0b22117479603ae4a2e882880a4868588ebcd",
      "LastModified" : "2019-02-22T19:44:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/Configurations/travis/appveyor-mingw-static-release.cmake" : {
      "ObjectId" : "5e5d67e81230dbb65ac46ad29cffa6cf2e24cc98",
      "LastModified" : "2019-02-22T19:44:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/Configurations/travis/debug.cmake" : {
      "ObjectId" : "8c9f5c9f999bffd79e5549622287f1b51db03fb0",
      "LastModified" : "2019-04-07T13:25:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/Configurations/travis/full-static.cmake" : {
      "ObjectId" : "1a48973fd93a643d43237c747d9e907dfd8b5575",
      "LastModified" : "2019-02-22T19:44:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/Configurations/travis/linux-clang-tidy.cmake" : {
      "ObjectId" : "9e8bf2946516d8bb91e8a1854b9c9c92a3333aed",
      "LastModified" : "2019-04-07T13:25:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \"-checks=*,-readability-*,-google-*,-llvm-header-guard,-cppcoreguidelines-*,-llvm-namespace-comment,-misc-macro-parentheses,-llvm-include-order,-modernize-*\"\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "CMake/Configurations/travis/linux-clazy.cmake" : {
      "ObjectId" : "1c6a11bca736a8688144981c6856ce1de969cd14",
      "LastModified" : "2019-04-07T13:25:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/Configurations/travis/linux-gcov.cmake" : {
      "ObjectId" : "edb3a8f7b83984dbc2e291160c224694394dd07a",
      "LastModified" : "2019-04-07T13:25:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/Configurations/travis/linux-scan-build.cmake" : {
      "ObjectId" : "488c3e0a32477b2c07a34944d48f0e26d30b059a",
      "LastModified" : "2019-04-07T13:25:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/Configurations/travis/mingw-static-debug.cmake" : {
      "ObjectId" : "cc215199b0ec694030d0fb4921e649fbc7f6c345",
      "LastModified" : "2019-04-07T13:25:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/Configurations/travis/mingw-static-release.cmake" : {
      "ObjectId" : "2ba98ff5f6eb52f92357d03477393e8d137126d8",
      "LastModified" : "2019-04-07T13:25:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/Configurations/travis/release.cmake" : {
      "ObjectId" : "f1a8f300ffd7dc4d9089bf9136f23a6629016da6",
      "LastModified" : "2019-04-07T13:25:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/Configurations/travis/static-debug-travis.cmake" : {
      "ObjectId" : "a045b690c4e5825fc056ffdfb238756239f8aadb",
      "LastModified" : "2019-02-22T19:44:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/Configurations/travis/static-debug.cmake" : {
      "ObjectId" : "a2b8ac3421858bfe2d167f2e237cb184f8bffb6f",
      "LastModified" : "2019-02-22T19:44:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/Configurations/travis/static-reldeb.cmake" : {
      "ObjectId" : "6f951bbc6b2a08bbad99a40768bb0c085703f03d",
      "LastModified" : "2019-04-07T13:25:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/Configurations/travis/static-release.cmake" : {
      "ObjectId" : "0e9a52f1e39e8267e4998753ff85eb6f42c1c01e",
      "LastModified" : "2019-02-22T19:44:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/Configurations/travis/staticqt-debug.cmake" : {
      "ObjectId" : "39ba074105d94747631ab6fa79ec608bc318e645",
      "LastModified" : "2019-02-22T19:44:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#~ LTO doesn't seem to work sadly on current ubuntu\n\n#~ e.g. lto1: internal compiler error: in add_symbol_to_partition_1, at lto/lto-partition.c:158\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/Configurations/travis/staticqt-release.cmake" : {
      "ObjectId" : "968132d0b0ad4cdc83ae94b5e32ac25d5163e2f7",
      "LastModified" : "2019-02-22T19:44:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#~ LTO doesn't seem to work sadly on current ubuntu\n\n#~ e.g. lto1: internal compiler error: in add_symbol_to_partition_1, at lto/lto-partition.c:158\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/Configurations/travis/wasm.cmake" : {
      "ObjectId" : "688c1dea10d2c47c61205b0b37f9911052061346",
      "LastModified" : "2019-03-24T13:23:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/GenerateLicense.cmake" : {
      "ObjectId" : "db8ca008b6a2e2b6aadc50555388ca4a9d21e2bb",
      "LastModified" : "2019-03-24T13:23:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#taken from https://gist.github.com/sivachandran/3a0de157dccef822a230\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Function to wrap a given string into multiple lines at the given column position.\n\n# Parameters:\n\n#   VARIABLE    - The name of the CMake variable holding the string.\n\n#   AT_COLUMN   - The column position at which string will be wrapped.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Function to embed contents of a file as byte array in C/C++ header file(.h). The header file\n\n# will contain a byte array and integer variable holding the size of the array.\n\n# Parameters\n\n#   SOURCE_FILE     - The path of source file whose contents will be embedded in the header file.\n\n#   VARIABLE_NAME   - The name of the variable for the byte array. The string \"_SIZE\" will be append\n\n#                     to this name and will be used a variable name for size variable.\n\n#   HEADER_FILE     - The path of header file.\n\n#   APPEND          - If specified appends to the header file instead of overwriting it\n\n#   NULL_TERMINATE  - If specified a null byte(zero) will be append to the byte array. This will be\n\n#                     useful if the source file is a text file and we want to use the file contents\n\n#                     as string. But the size variable holds size of the byte array without this\n\n#                     null byte.\n\n# Usage:\n\n#   bin2h(SOURCE_FILE \"Logo.png\" HEADER_FILE \"Logo.h\" VARIABLE_NAME \"LOGO_PNG\")\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# reads source file contents as hex string\n",
        "Line" : 52,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# appends null byte if asked\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# wraps the hex string into multiple lines at column 32(i.e. 16 bytes per line)\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# adds '0x' prefix and comma suffix before and after every byte respectively\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# removes trailing comma\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# converts the variable name into proper C identifier\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# declares byte array and the length variables\n",
        "Line" : 73,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 10
    },
    "CMake/GenerateQMake.cmake" : {
      "ObjectId" : "70cfb4912a8c39e646de94c2226ac3e8d4cfac74",
      "LastModified" : "2019-03-24T13:23:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ignore\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# ignore\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# ignore\n",
        "Line" : 90,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# ignore\n",
        "Line" : 92,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# ignore\n",
        "Line" : 94,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 5
    },
    "CMake/GenerateUnity.cmake" : {
      "ObjectId" : "4d6f22fe90c801ae00852ce6b78862af34098b41",
      "LastModified" : "2019-03-24T13:23:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ignore\n",
        "Line" : 19,
        "CharPositionInLine" : 6
      },
      "1" : {
        "Text" : "# ignore\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# ignore\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# ignore\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# ignore)\n",
        "Line" : 27,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# ignore\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# ignore\n",
        "Line" : 112,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# ignore\n",
        "Line" : 114,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# interface\n",
        "Line" : 135,
        "CharPositionInLine" : 10
      },
      "9" : {
        "Text" : "## Build script ##\n\n# C build line\n",
        "Line" : 161,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# C++ build line\n",
        "Line" : 168,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Qt resources\n",
        "Line" : 175,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Link line\n",
        "Line" : 184,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "## Unity source ##\n",
        "Line" : 192,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 14
    },
    "CMake/IScoreConfiguration.cmake" : {
      "ObjectId" : "0f28a95490706b60d6fbd923bb610c361362ed92",
      "LastModified" : "2019-03-24T13:23:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Options\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# broken in ubuntu 17.10\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Note : if building with a Qt installed in e.g. /home/myuser/Qt/ or /Users/Qt or c:\\Qt\\\n\n# keep in mind that you have to call CMake with :\n\n# $ cmake -DCMAKE_MODULE_PATH={path/to/qt/5.3}/{gcc64,clang,msvc2013...}/lib/cmake/Qt5\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Settings\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Useful header files\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Commit and version information\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "CMake/IScoreDeployment.cmake" : {
      "ObjectId" : "ef6a1e7106853a8e5e43db2838d12a6d66f7da41",
      "LastModified" : "2019-03-24T13:23:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/IScoreDeploymentAndroid.cmake" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2019-03-24T13:23:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/IScoreDeploymentGenericLinux.cmake" : {
      "ObjectId" : "a88a08204b7510ff71f4701634e9f96557c2ac95",
      "LastModified" : "2019-03-24T13:23:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Qt Libraries\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO Same than for windows deployment\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Qt conf file\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Qt Platform Plugin\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Qt helper script\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "CMake/IScoreDeploymentLinux.cmake" : {
      "ObjectId" : "b30b88faa8f2bac9af4862de9ea19b61378f6dcb",
      "LastModified" : "2019-04-07T19:03:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#use the LSB stuff if possible :)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(CPACK_DEBIAN_PACKAGE_DEPENDS \"libgl1-mesa-glx, libpng16-16, libc6, zlib1g, libpcre2-16-0, libdbus-1-3, libjpeg62-turbo, libfontconfig1, libfreetype6, libx11-xcb1, libxcb-render-util0, libxcb-render0, libxcb-xkb1, libxrender1, libxext6, libx11-xcb1, libsm6, libxcb-sync1, libxcb-xfixes0, libxcb-xinerama0, libxcb-randr0, libxcb-image0, libxcb-shm0, libxcb-keysyms1, libxcb-icccm4, libxcb-shape0, libxcb1, libxkbcommon-x11-0, libxkbcommon0, libxcb-glx0, libasound2, libudev1\")\n",
        "Line" : 117,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "CMake/IScoreDeploymentOSX.cmake" : {
      "ObjectId" : "8db66c37ee5edf9e0c80875cdfb6c5759128f576",
      "LastModified" : "2019-03-24T13:23:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copy our dylibs if necessary\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copy score plugins into the app bundle\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# set-up Qt stuff.\n\n# Remember to set CMAKE_INSTALL_PREFIX on the CMake command line.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# set-up Faust stuff\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "CMake/IScoreDeploymentWindows.cmake" : {
      "ObjectId" : "d5b409e4a938f8d552054fed605bf4687c72b957",
      "LastModified" : "2019-04-07T13:25:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Compiler Runtime DLLs\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Qt Libraries\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Qt conf file\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Qt plug-ins\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Faust stuff\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# NSIS metadata\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "CMake/IScoreFunctions.cmake" : {
      "ObjectId" : "250c45cd1c29d99edb9b46a33cbd7d33f829b164",
      "LastModified" : "2019-03-24T13:23:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### Generate files of commands ###\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Initialize our lists\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# First look for the SCORE_COMMAND_DECL(...) ones\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# If there are matching strings, we add the file to our include list\n",
        "Line" : 38,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Then look for the SCORE_COMMAND_DECL_T(...) ones\n",
        "Line" : 45,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Generate a file with the list of includes\n",
        "Line" : 67,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Generate a file with the list of types\n",
        "Line" : 79,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "### Adds tests ###\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "CMake/IScoreTargetSetup.cmake" : {
      "ObjectId" : "6e5bf78de2b70b9ac0104139d7a0acebb9ac6416",
      "LastModified" : "2019-04-07T13:25:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIXME on windows\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# We reuse the same prefix header\n",
        "Line" : 23,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "### Call at the beginning of a plug-in cmakelists ###\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "### Initialization of most common stuff ###\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#    \"/Za\"\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# pragma mark -\n\n# inherits via dominance\n\n# DLL stuff\n\n# DLL stuff\n\n# return : conversion from foo to bar, possible loss of data\n\n# conversion from int to bool, performance warning\n\n# decorated name length exceeded\n",
        "Line" : 57,
        "CharPositionInLine" : 14
      },
      "6" : {
        "Text" : "# set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Werror -Wno-error=shadow -Wno-error=switch -Wno-error=switch-enum -Wno-error=empty-body -Wno-error=overloaded-virtual -Wno-error=suggest-final-methods -Wno-error=suggest-final-types -Wno-error=suggest-override -Wno-error=maybe-uninitialized\")\n",
        "Line" : 107,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#          \"$<$<CONFIG:Debug>:-Wa,--compress-debug-sections>\"\n\n#          \"$<$<CONFIG:Debug>:-Wl,--compress-debug-sections=zlib>\"\n",
        "Line" : 134,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "#            \"$<$<BOOL:${SCORE_ENABLE_LTO}>:-s>\"\n\n#            \"$<$<BOOL:${SCORE_ENABLE_LTO}>:-flto>\"\n\n#            \"$<$<BOOL:${SCORE_ENABLE_LTO}>:-fuse-linker-plugin>\"\n\n#            \"$<$<BOOL:${SCORE_ENABLE_LTO}>:-fno-fat-lto-objects>\"\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#          \"$<$<BOOL:${SCORE_ENABLE_LTO}>:-s>\"\n\n#          \"$<$<BOOL:${SCORE_ENABLE_LTO}>:-flto>\"\n\n#          \"$<$<BOOL:${SCORE_ENABLE_LTO}>:-fuse-linker-plugin>\"\n\n#          \"$<$<BOOL:${SCORE_ENABLE_LTO}>:-fno-fat-lto-objects>\"\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# -Wcast-qual is nice but requires more work...\n\n# -Wzero-as-null-pointer-constant  is garbage\n\n# Too much clutter :set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wswitch-enum -Wshadow  -Wsuggest-attribute=const  -Wsuggest-attribute=pure \")\n",
        "Line" : 172,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "#  -Wweak-vtables\n",
        "Line" : 184,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "#if (\"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"Clang\")\n\n#\tset(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Weverything -Wno-c++98-compat -Wno-exit-time-destructors -Wno-padded\")\n\n#endif()\n",
        "Line" : 188,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Debug options\n",
        "Line" : 198,
        "CharPositionInLine" : 12
      },
      "14" : {
        "Text" : "#          \"$<$<CONFIG:Debug>:-Wa,--compress-debug-sections>\"\n\n#          \"$<$<CONFIG:Debug>:-Wl,--compress-debug-sections=zlib>\"\n\n# \"$<$<CONFIG:Debug>:-gsplit-dwarf>\"\n",
        "Line" : 199,
        "CharPositionInLine" : 10
      },
      "15" : {
        "Text" : "# Debug options\n",
        "Line" : 207,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# Debug options\n",
        "Line" : 211,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# General options\n",
        "Line" : 217,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wabi -Wctor-dtor-privacy -Wnon-virtual-dtor -Wreorder -Wstrict-null-sentinel -Wno-non-template-friend -Woverloaded-virtual -Wno-pmf-conversions -Wsign-promo -Wextra -Wall -Waddress -Waggregate-return -Warray-bounds -Wno-attributes -Wno-builtin-macro-redefined\")\n\n#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wc++0x-compat -Wcast-align -Wcast-qual -Wchar-subscripts -Wclobbered -Wcomment -Wconversion -Wcoverage-mismatch -Wno-deprecated -Wno-deprecated-declarations -Wdisabled-optimization -Wno-div-by-zero -Wempty-body -Wenum-compare\")\n",
        "Line" : 219,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# -std=c++17\n\n# Release options\n",
        "Line" : 236,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "#set_target_properties(${TheTarget} PROPERTIES CXX_STANDARD 17)\n",
        "Line" : 250,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# various options\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# debugmode_build(${theTarget})\n",
        "Line" : 277,
        "CharPositionInLine" : 6
      },
      "23" : {
        "Text" : "# OS X\n",
        "Line" : 296,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Linux\n",
        "Line" : 301,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# currently breaks build : add_linker_warnings(${theTarget})\n",
        "Line" : 306,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "### Initialization of common stuff ###\n",
        "Line" : 327,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "### Call with a library target ###\n",
        "Line" : 377,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "### Call with a plug-in target ###\n",
        "Line" : 404,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 29
    },
    "CMake/modules/CodeCoverage.cmake" : {
      "ObjectId" : "0a89f2ba57a9587b4ed54b4e796974073be14b63",
      "LastModified" : "2019-03-24T13:23:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2012 - 2015, Lars Bilke\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without modification,\n\n# are permitted provided that the following conditions are met:\n\n#\n\n# 1. Redistributions of source code must retain the above copyright notice, this\n\n#    list of conditions and the following disclaimer.\n\n#\n\n# 2. Redistributions in binary form must reproduce the above copyright notice,\n\n#    this list of conditions and the following disclaimer in the documentation\n\n#    and/or other materials provided with the distribution.\n\n#\n\n# 3. Neither the name of the copyright holder nor the names of its contributors\n\n#    may be used to endorse or promote products derived from this software without\n\n#    specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n\n# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\n# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\n# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\n# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n\n# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\n# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n#\n\n#\n\n# 2012-01-31, Lars Bilke\n\n# - Enable Code Coverage\n\n#\n\n# 2013-09-17, Joakim Söderberg\n\n# - Added support for Clang.\n\n# - Some additional usage instructions.\n\n#\n\n# USAGE:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# 0. (Mac only) If you use Xcode 5.1 make sure to patch geninfo as described here:\n\n#      http://stackoverflow.com/a/22404544/80480\n\n#\n\n# 1. Copy this file into your cmake modules path.\n\n#\n\n# 2. Add the following line to your CMakeLists.txt:\n\n#      INCLUDE(CodeCoverage)\n\n#\n\n# 3. Set compiler flags to turn off optimization and enable coverage:\n\n#    SET(CMAKE_CXX_FLAGS \"-g -O0 -fprofile-arcs -ftest-coverage\")\n\n#\t SET(CMAKE_C_FLAGS \"-g -O0 -fprofile-arcs -ftest-coverage\")\n\n#\n\n# 3. Use the function SETUP_TARGET_FOR_COVERAGE to create a custom make target\n\n#    which runs your test executable and produces a lcov code coverage report:\n\n#    Example:\n\n#\t SETUP_TARGET_FOR_COVERAGE(\n\n#\t\t\t\tmy_coverage_target  # Name for custom target.\n\n#\t\t\t\ttest_driver         # Name of the test driver executable that runs the tests.\n\n#\t\t\t\t\t\t\t\t\t# NOTE! This should always have a ZERO as exit code\n\n#\t\t\t\t\t\t\t\t\t# otherwise the coverage generation will not complete.\n\n#\t\t\t\tcoverage            # Name of output directory.\n\n#\t\t\t\t)\n\n#\n\n# 4. Build a Debug build:\n\n#\t cmake -DCMAKE_BUILD_TYPE=Debug ..\n\n#\t make\n\n#\t make my_coverage_target\n\n#\n\n#\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check prereqs\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# NOT GCOV_PATH\n",
        "Line" : 78,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Clang version 3.0.0 and greater now supports gcov as well.\n",
        "Line" : 81,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# NOT CMAKE_COMPILER_IS_GNUCXX\n",
        "Line" : 87,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# NOT CMAKE_BUILD_TYPE STREQUAL \"Debug\"\n",
        "Line" : 113,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Param _targetname     The name of new the custom make target\n\n# Param _testrunner     The name of the target which runs the tests.\n\n#\t\t\t\t\t\tMUST return ZERO always, even on errors.\n\n#\t\t\t\t\t\tIf not, no coverage report will be created!\n\n# Param _outputname     lcov output is generated as _outputname.info\n\n#                       HTML report is generated in _outputname/index.html\n\n# Optional fourth parameter is passed as arguments to _testrunner\n\n#   Pass them in list form, e.g.: \"-j;2\" for -j 2\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# NOT LCOV_PATH\n",
        "Line" : 128,
        "CharPositionInLine" : 16
      },
      "9" : {
        "Text" : "# NOT GENHTML_PATH\n",
        "Line" : 132,
        "CharPositionInLine" : 16
      },
      "10" : {
        "Text" : "# Setup target\n",
        "Line" : 134,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# Cleanup lcov\n",
        "Line" : 137,
        "CharPositionInLine" : 16
      },
      "12" : {
        "Text" : "# Run tests\n",
        "Line" : 140,
        "CharPositionInLine" : 16
      },
      "13" : {
        "Text" : "# Capturing lcov counters and generating report\n",
        "Line" : 143,
        "CharPositionInLine" : 16
      },
      "14" : {
        "Text" : "# Show info where to find the report\n",
        "Line" : 151,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# SETUP_TARGET_FOR_COVERAGE\n",
        "Line" : 157,
        "CharPositionInLine" : 14
      },
      "16" : {
        "Text" : "# Param _targetname     The name of new the custom make target\n\n# Param _testrunner     The name of the target which runs the tests\n\n# Param _outputname     cobertura output is generated as _outputname.xml\n\n# Optional fourth parameter is passed as arguments to _testrunner\n\n#   Pass them in list form, e.g.: \"-j;2\" for -j 2\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# NOT PYTHON_EXECUTABLE\n",
        "Line" : 168,
        "CharPositionInLine" : 16
      },
      "18" : {
        "Text" : "# NOT GCOVR_PATH\n",
        "Line" : 172,
        "CharPositionInLine" : 16
      },
      "19" : {
        "Text" : "# Run tests\n",
        "Line" : 176,
        "CharPositionInLine" : 16
      },
      "20" : {
        "Text" : "# Running gcovr\n",
        "Line" : 179,
        "CharPositionInLine" : 16
      },
      "21" : {
        "Text" : "# Show info where to find the report\n",
        "Line" : 185,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# SETUP_TARGET_FOR_COVERAGE_COBERTURA\n",
        "Line" : 191,
        "CharPositionInLine" : 14
      },
      "CommentCount" : 23
    },
    "CMake/modules/DeployQt5.cmake" : {
      "ObjectId" : "2f1eab6dce1b0511af4805dc5c7b2e7c51d31fc5",
      "LastModified" : "2019-03-24T13:23:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# DeployQt5\n\n# ---------\n\n#\n\n# Functions to help assemble a standalone Qt5 executable.\n\n#\n\n# A collection of CMake utility functions useful for deploying Qt5\n\n# executables.\n\n#\n\n# The following functions are provided by this module:\n\n#\n\n# ::\n\n#\n\n#    write_qt5_conf\n\n#    resolve_qt5_paths\n\n#    fixup_qt5_executable\n\n#    install_qt5_plugin_path\n\n#    install_qt5_plugin\n\n#    install_qt5_executable\n\n#\n\n# Requires CMake 2.8.9 or greater because Qt 5 does.\n\n# Also depends on BundleUtilities.cmake.\n\n#\n\n# ::\n\n#\n\n#   WRITE_QT5_CONF(<qt_conf_dir> <qt_conf_contents>)\n\n#\n\n# Writes a qt.conf file with the <qt_conf_contents> into <qt_conf_dir>.\n\n#\n\n# ::\n\n#\n\n#   RESOLVE_QT5_PATHS(<paths_var> [<executable_path>])\n\n#\n\n# Loop through <paths_var> list and if any don't exist resolve them\n\n# relative to the <executable_path> (if supplied) or the\n\n# CMAKE_INSTALL_PREFIX.\n\n#\n\n# ::\n\n#\n\n#   FIXUP_QT5_EXECUTABLE(<executable> [<qtplugins> <libs> <dirs> <plugins_dir> <request_qt_conf>])\n\n#\n\n# Copies Qt plugins, writes a Qt configuration file (if needed) and\n\n# fixes up a Qt5 executable using BundleUtilities so it is standalone\n\n# and can be drag-and-drop copied to another machine as long as all of\n\n# the system libraries are compatible.\n\n#\n\n# <executable> should point to the executable to be fixed-up.\n\n#\n\n# <qtplugins> should contain a list of the names or paths of any Qt\n\n# plugins to be installed.\n\n#\n\n# <libs> will be passed to BundleUtilities and should be a list of any\n\n# already installed plugins, libraries or executables to also be\n\n# fixed-up.\n\n#\n\n# <dirs> will be passed to BundleUtilities and should contain and\n\n# directories to be searched to find library dependencies.\n\n#\n\n# <plugins_dir> allows an custom plugins directory to be used.\n\n#\n\n# <request_qt_conf> will force a qt.conf file to be written even if not\n\n# needed.\n\n#\n\n# ::\n\n#\n\n#   INSTALL_QT5_PLUGIN_PATH(plugin executable copy installed_plugin_path_var <plugins_dir> <component> <configurations>)\n\n#\n\n# Install (or copy) a resolved <plugin> to the default plugins directory\n\n# (or <plugins_dir>) relative to <executable> and store the result in\n\n# <installed_plugin_path_var>.\n\n#\n\n# If <copy> is set to TRUE then the plugins will be copied rather than\n\n# installed.  This is to allow this module to be used at CMake time\n\n# rather than install time.\n\n#\n\n# If <component> is set then anything installed will use this COMPONENT.\n\n#\n\n# ::\n\n#\n\n#   INSTALL_QT5_PLUGIN(plugin executable copy installed_plugin_path_var <plugins_dir> <component>)\n\n#\n\n# Install (or copy) an unresolved <plugin> to the default plugins\n\n# directory (or <plugins_dir>) relative to <executable> and store the\n\n# result in <installed_plugin_path_var>.  See documentation of\n\n# INSTALL_QT5_PLUGIN_PATH.\n\n#\n\n# ::\n\n#\n\n#   INSTALL_QT5_EXECUTABLE(<executable> [<qtplugins> <libs> <dirs> <plugins_dir> <request_qt_conf> <component>])\n\n#\n\n# Installs Qt plugins, writes a Qt configuration file (if needed) and\n\n# fixes up a Qt5 executable using BundleUtilities so it is standalone\n\n# and can be drag-and-drop copied to another machine as long as all of\n\n# the system libraries are compatible.  The executable will be fixed-up\n\n# at install time.  <component> is the COMPONENT used for bundle fixup\n\n# and plugin installation.  See documentation of FIXUP_QT5_BUNDLE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2011 Mike McQuaid <mike@mikemcquaid.com>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The functions defined in this file depend on the fixup_bundle function\n\n# (and others) found in BundleUtilities.cmake\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "CMake/modules/DoxygenTargets.cmake" : {
      "ObjectId" : "09a4a8eb825760fa9c86a908c7fb7178c111cef8",
      "LastModified" : "2019-03-24T13:23:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Run doxygen on source files as a custom target\n\n#\n\n#  include(DoxygenTargets)\n\n#  add_doxygen(<doxyfile> [OUTPUT_DIRECTORY <outputdir>]\n\n#   [INSTALL_DESTINATION <installdir>\n\n#   [INSTALL_COMPONENT <installcomponent>]\n\n#   [INSTALL_PDF_NAME <installpdfname>] ]\n\n#   [DOC_TARGET <targetname>]\n\n#   [PROJECT_NUMBER <versionnumber>]\n\n#   [NO_WARNINGS]\n\n#   [NO_PDF])\n\n#\n\n# Requires these CMake modules:\n\n#  FindDoxygen\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We must run the following at \"include\" time, not at function call time,\n\n# to find the path to this module rather than the path to a calling list file\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# An optional single-file install that supports cmake older than 2.8.0\n\n# For internal use\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# An optional single-directory install that supports cmake older than 2.8.0\n\n# For internal use\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# parse arguments\n",
        "Line" : 144,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Create a target to open the generated HTML file.\n",
        "Line" : 219,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "# Doesn't currently work on Windows, so don't bother\n",
        "Line" : 245,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# See http://www.cmake.org/pipermail/cmake/2006-August/010786.html\n\n# for info on this variable\n",
        "Line" : 268,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#MAIN_DEPENDENCY ${DOC_TARGET}\n",
        "Line" : 292,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 9
    },
    "CMake/modules/EnableExtraCompilerWarnings.cmake" : {
      "ObjectId" : "0115ef3ae26c3fca321212230138b51cf36835bb",
      "LastModified" : "2019-03-24T13:23:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Add flags to compile with extra warnings\n\n#\n\n#  enable_extra_compiler_warnings(<targetname>)\n\n#  globally_enable_extra_compiler_warnings() - to modify CMAKE_CXX_FLAGS, etc\n\n#    to change for all targets declared after the command, instead of per-command\n\n#\n\n#\n\n# Original Author:\n\n# 2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/modules/EnableProfiling.cmake" : {
      "ObjectId" : "e2a340f7c83dacd3cd30e365aba4699bb96a7809",
      "LastModified" : "2019-03-24T13:23:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Add flags to compile with profiling support - currently only for GCC\n\n#\n\n#  enable_profiling(<targetname>)\n\n#  globally_enable_profiling() - to modify CMAKE_CXX_FLAGS, etc\n\n#    to change for all targets declared after the command, instead of per-command\n\n#\n\n#\n\n# Original Author:\n\n# 2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO: what kind of flags are needed to profile on MSVC?\n\n#set(_flags /W4)\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "CMake/modules/FindFFmpeg.cmake" : {
      "ObjectId" : "69fda168c14f92f710a089cc0b7581ed2f2bb44f",
      "LastModified" : "2019-03-24T13:23:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# vim: ts=2 sw=2\n\n# - Try to find the required ffmpeg components(default: AVFORMAT, AVUTIL, AVCODEC)\n\n#\n\n# Once done this will define\n\n#  FFMPEG_FOUND         - System has the all required components.\n\n#  FFMPEG_INCLUDE_DIRS  - Include directory necessary for using the required components headers.\n\n#  FFMPEG_LIBRARIES     - Link these to use the required ffmpeg components.\n\n#  FFMPEG_DEFINITIONS   - Compiler switches required for using the required ffmpeg components.\n\n#\n\n# For each of the components it will additionally set.\n\n#   - AVCODEC\n\n#   - AVDEVICE\n\n#   - AVFORMAT\n\n#   - AVUTIL\n\n#   - POSTPROCESS\n\n#   - SWSCALE\n\n# the following variables will be defined\n\n#  <component>_FOUND        - System has <component>\n\n#  <component>_INCLUDE_DIRS - Include directory necessary for using the <component> headers\n\n#  <component>_LIBRARIES    - Link these to use <component>\n\n#  <component>_DEFINITIONS  - Compiler switches required for using <component>\n\n#  <component>_VERSION      - The components version\n\n#\n\n# Copyright (c) 2006, Matthias Kretz, <kretz@kde.org>\n\n# Copyright (c) 2008, Alexander Neundorf, <neundorf@kde.org>\n\n# Copyright (c) 2011, Michael Jansen, <kde@michael-jansen.biz>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Taken from https://stackoverflow.com/a/32751261/1495627\n\n# _combine_targets_property(VAR PROP target1 target2 ...)\n\n# Helper function: Collects @PROP properties (as lists) from @target1, @target2 ..,\n\n# combines these lists into one and store into variable @VAR.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Resulted list\n",
        "Line" : 38,
        "CharPositionInLine" : 16
      },
      "3" : {
        "Text" : "# imported_link_libraries(t_dest target1 target2 ...)\n\n# Make imported library target @t_dest effectively linked with @target1, @target2 ...\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# IMPORTED_LOCATION's and INTERFACE_LINK_LIBRARIES's from dependencies\n\n# should be appended to target's INTERFACE_LINK_LIBRARIES.\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# The default components were taken from a survey over other FindFFMPEG.cmake files\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n### Macro: set_component_found\n\n#\n\n# Marks the given component as found if both *_LIBRARIES AND *_INCLUDE_DIRS is present.\n\n#\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n### Macro: find_component\n\n#\n\n# Checks for the given component by invoking pkgconfig and then looking up the libraries and\n\n# include directories.\n\n#\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 88,
        "CharPositionInLine" : 5
      },
      "9" : {
        "Text" : "# Check for all possible component.\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Check if the required components were found and add their stuff to the FFMPEG_* vars.\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# message(STATUS \"Required component ${_component} present.\")\n",
        "Line" : 156,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# message(STATUS \"Required component ${_component} missing.\")\n",
        "Line" : 161,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Set-up minimal dependencies\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Build the include path with duplicates removed.\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# cache the vars.\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Now set the noncached _FOUND vars for the components.\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Compile the list of required vars\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Give a nice error message if some of the required vars are missing.\n",
        "Line" : 251,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "CMake/modules/FindFaust.cmake" : {
      "ObjectId" : "b341e0601edbfdbc238442b807fdaffd3411c91b",
      "LastModified" : "2019-04-07T13:25:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find Faust2\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is a static build of faust, hence\n\n# we have to add all the LLVM flags...\n",
        "Line" : 31,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "CMake/modules/FindReadline.cmake" : {
      "ObjectId" : "ab3e8f917a9b1e917346056619faf6c957494d32",
      "LastModified" : "2019-03-24T13:23:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# READLINE_FOUND\n\n# READLINE_INCLUDE_DIRS\n\n# READLINE_LIBRARIES\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/modules/GetGitRevisionDescription.cmake" : {
      "ObjectId" : "c8d27f2e8ce494c96404086ce58982239916a44c",
      "LastModified" : "2019-03-24T13:23:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Returns a version string from Git\n\n#\n\n# These functions force a re-configure on each git commit so that you can\n\n# trust the values of the variables in your build system.\n\n#\n\n#  get_git_head_revision(<refspecvar> <hashvar> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the refspec and sha hash of the current head revision\n\n#\n\n#  git_describe(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe on the source tree, and adjusting\n\n# the output so that it tests false if an error occurs.\n\n#\n\n#  git_get_exact_tag(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe --exact-match on the source tree,\n\n# and adjusting the output so that it tests false if there was no exact\n\n# matching tag.\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We must run the following at \"include\" time, not at function call time,\n\n# to find the path to this module rather than the path to a calling list file\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# .git dir not found, search parent directories\n",
        "Line" : 45,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "# We have reached the root directory, we are not in git\n",
        "Line" : 49,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# check if this is a submodule\n",
        "Line" : 56,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# TODO sanitize\n\n#if((${ARGN}\" MATCHES \"&&\") OR\n\n#\t(ARGN MATCHES \"||\") OR\n\n#\t(ARGN MATCHES \"\\\\;\"))\n\n#\tmessage(\"Please report the following error to the project!\")\n\n#\tmessage(FATAL_ERROR \"Looks like someone's doing something nefarious with git_describe! Passed arguments ${ARGN}\")\n\n#endif()\n",
        "Line" : 97,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "#message(STATUS \"Arguments to execute_process: ${ARGN}\")\n",
        "Line" : 105,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 7
    },
    "CMake/modules/LilvConfig.cmake" : {
      "ObjectId" : "6a17627365e67534d633bc3a1e75060da7442692",
      "LastModified" : "2019-03-24T13:23:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/modules/SuilConfig.cmake" : {
      "ObjectId" : "5970b6fe46a5b4240f4750bd4907a3303b5e8744",
      "LastModified" : "2019-03-24T13:23:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/modules/emscripten.toolchain.cmake" : {
      "ObjectId" : "598efa0c06aa6fdb9562c1fc24f3d0a8d9cbabb4",
      "LastModified" : "2019-03-24T13:23:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is a 'toolchain description file' for CMake.\n\n# It teaches CMake about the Emscripten compiler, so that CMake can generate makefiles\n\n# from CMakeLists.txt that invoke emcc.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# To use this toolchain file with CMake, invoke CMake with the following command line parameters\n\n# cmake -DCMAKE_TOOLCHAIN_FILE=<EmscriptenRoot>/cmake/Modules/Platform/Emscripten.cmake\n\n#       -DCMAKE_BUILD_TYPE=<Debug|RelWithDebInfo|Release|MinSizeRel>\n\n#       -G \"Unix Makefiles\" (Linux and OSX)\n\n#       -G \"MinGW Makefiles\" (Windows)\n\n#       <path/to/CMakeLists.txt> # Note, pass in here ONLY the path to the file, not the filename 'CMakeLists.txt' itself.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# After that, build the generated Makefile with the command 'make'. On Windows, you may download and use 'mingw32-make' instead.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The following variable describes the target OS we are building to.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Advertise Emscripten as a 32-bit platform (as opposed to CMAKE_SYSTEM_PROCESSOR=x86_64 for 64-bit platform),\n\n# since some projects (e.g. OpenCV) use this to detect bitness.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Tell CMake how it should instruct the compiler to generate multiple versions of an outputted .so library: e.g. \"libfoo.so, libfoo.so.1, libfoo.so.1.4\" etc.\n\n# This feature is activated if a shared library project has the property SOVERSION defined.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# In CMake, CMAKE_HOST_WIN32 is set when we are cross-compiling from Win32 to Emscripten: http://www.cmake.org/cmake/help/v2.8.12/cmake.html#variable:CMAKE_HOST_WIN32\n\n# The variable WIN32 is set only when the target arch that will run the code will be WIN32, so unset WIN32 when cross-compiling.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# The same logic as above applies for APPLE and CMAKE_HOST_APPLE, so unset APPLE.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# And for UNIX and CMAKE_HOST_UNIX. However, Emscripten is often able to mimic being a Linux/Unix system, in which case a lot of existing CMakeLists.txt files can be configured for Emscripten while assuming UNIX build, so this is left enabled.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Do a no-op access on the CMAKE_TOOLCHAIN_FILE variable so that CMake will not issue a warning on it being unused.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# In order for check_function_exists() detection to work, we must signal it to pass an additional flag, which causes the compilation\n\n# to abort if linking results in any undefined symbols. The CMake detection mechanism depends on the undefined symbol error to be raised.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Locate where the Emscripten compiler resides in relative to this toolchain file.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# If not found by above search, locate using the EMSCRIPTEN environment variable.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Abort if not found.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Normalize, convert Windows backslashes to forward slashes or CMake will crash.\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Specify the compilers to use for C and C++\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Don't do compiler autodetection, since we are cross-compiling.\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# To find programs to execute during CMake run time with find_program(), e.g. 'git' or so, we allow looking\n\n# into system paths.\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Since Emscripten is a cross-compiler, we should never look at the system-provided directories like /usr/include and so on.\n\n# Therefore only CMAKE_FIND_ROOT_PATH should be used as a find directory. See http://www.cmake.org/cmake/help/v3.0/variable/CMAKE_FIND_ROOT_PATH_MODE_INCLUDE.html\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# We would prefer to specify a standard set of Clang+Emscripten-friendly common convention for suffix files, especially for CMake executable files,\n\n# but if these are adjusted, ${CMAKE_ROOT}/Modules/CheckIncludeFile.cmake will fail, since it depends on being able to compile output files with predefined names.\n\n#SET(CMAKE_LINK_LIBRARY_SUFFIX \"\")\n\n#SET(CMAKE_STATIC_LIBRARY_PREFIX \"\")\n\n#SET(CMAKE_STATIC_LIBRARY_SUFFIX \".bc\")\n\n#SET(CMAKE_SHARED_LIBRARY_PREFIX \"\")\n\n#SET(CMAKE_SHARED_LIBRARY_SUFFIX \".bc\")\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#SET(CMAKE_FIND_LIBRARY_PREFIXES \"\")\n\n#SET(CMAKE_FIND_LIBRARY_SUFFIXES \".bc\")\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Specify the program to use when building static libraries. Force Emscripten-related command line options to clang.\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Set a global EMSCRIPTEN variable that can be used in client CMakeLists.txt to detect when building using Emscripten.\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Hardwire support for cmake-2.8/Modules/CMakeBackwardsCompatibilityC.cmake without having CMake to try complex things\n\n# to autodetect these:\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# A global counter to guarantee unique names for js library files.\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Internal function: Do not call from user CMakeLists.txt files. Use one of em_link_js_library()/em_link_pre_js()/em_link_post_js() instead.\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# User can input list of JS files either as a single list, or as variable arguments to this function, so iterate over varargs, and treat each\n\n# item in varargs as a list itself, to support both syntax forms.\n",
        "Line" : 190,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# If the user edits the JS file, we want to relink the emscripten application, but unfortunately it is not possible to make a link step\n\n# depend directly on a source file. Instead, we must make a dummy no-op build target on that source file, and make the project depend on\n\n# that target.\n",
        "Line" : 194,
        "CharPositionInLine" : 12
      },
      "28" : {
        "Text" : "# Sanitate the source .js filename to a good symbol name to use as a dummy filename.\n",
        "Line" : 198,
        "CharPositionInLine" : 12
      },
      "29" : {
        "Text" : "# Create a new static library target that with a single dummy .c file.\n",
        "Line" : 204,
        "CharPositionInLine" : 12
      },
      "30" : {
        "Text" : "# Make the dummy .c file depend on the .js file we are linking, so that if the .js file is edited, the dummy .c file, and hence the static library will be rebuild (no-op). This causes the main application to be relinked, which is what we want.\n\n# This approach was recommended by http://www.cmake.org/pipermail/cmake/2010-May/037206.html\n",
        "Line" : 206,
        "CharPositionInLine" : 12
      },
      "31" : {
        "Text" : "# Link the js-library to the target\n\n# When a linked library starts with a \"-\" cmake will just add it to the linker command line as it is.\n\n# The advantage of doing it this way is that the js-library will also be automatically linked to targets\n\n# that depend on this target.\n",
        "Line" : 211,
        "CharPositionInLine" : 12
      },
      "32" : {
        "Text" : "# This function links a (list of ) .js library file(s) to the given CMake project.\n\n# Example: em_link_js_library(my_executable \"lib1.js\" \"lib2.js\")\n\n#    will result in emcc passing --js-library lib1.js --js-library lib2.js to the emscripten linker, as well as\n\n#    tracking the modification timestamp between the linked .js files and the main project, so that editing the .js file\n\n#    will cause the target project to be relinked.\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# This function is identical to em_link_js_library(), except the .js files will be added with '--pre-js file.js' command line flag,\n\n# which is generally used to add some preamble .js code to a generated output file.\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# This function is identical to em_link_js_library(), except the .js files will be added with '--post-js file.js' command line flag,\n\n# which is generally used to add some postamble .js code to a generated output file.\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Experimental support for targeting generation of Visual Studio project files (vs-tool) of Emscripten projects for Windows.\n\n# To use this, pass the combination -G \"Visual Studio 10\" -DCMAKE_TOOLCHAIN_FILE=Emscripten.cmake\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# By default, CMake generates VS project files with a <GenerateManifest>true</GenerateManifest> directive.\n\n# This causes VS to attempt to invoke rc.exe during the build, which will fail since app manifests are meaningless for Emscripten.\n\n# To disable this, add the following linker flag. This flag will not go to emcc, since the Visual Studio CMake generator will swallow it.\n",
        "Line" : 247,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "# CMake is hardcoded to write a ClCompile directive <ObjectFileName>$(IntDir)</ObjectFileName> in all VS project files it generates.\n\n# This makes VS pass emcc a -o param that points to a directory instead of a file, which causes emcc autogenerate the output filename.\n\n# CMake is hardcoded to assume all object files have the suffix .obj, so adjust the emcc-autogenerated default suffix name to match.\n",
        "Line" : 251,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# Also hint CMake that it should not hardcode <ObjectFileName> generation. Requires a custom CMake build for this to work (ignored on others)\n\n# See http://www.cmake.org/Bug/view.php?id=14673 and https://github.com/juj/CMake\n",
        "Line" : 255,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "# Apply and cache Emscripten Visual Studio IDE-specific linker flags.\n",
        "Line" : 259,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# No-op on CMAKE_CROSSCOMPILING_EMULATOR so older versions of cmake do not\n\n# complain about unused CMake variable.\n",
        "Line" : 271,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 41
    },
    "CMakeLists.txt" : {
      "ObjectId" : "34f3e817fbfe9b6eb17aa9d1ebcd9cdd6d37f1c6",
      "LastModified" : "2019-04-10T08:23:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Tests/Integration/CMakeLists.txt" : {
      "ObjectId" : "6612951fec37d0d8fdba30653202acfa32359810",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Commands\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# addIntegrationTest(Test1\n\n#              \"${CMAKE_CURRENT_SOURCE_DIR}/Test1.cpp\")\n\n# addIntegrationTest(TestStatesMinMax\n\n#              \"${CMAKE_CURRENT_SOURCE_DIR}/States/TestStatesMinMax.cpp\")\n\n# addIntegrationTest(TestStatesCurve\n\n#              \"${CMAKE_CURRENT_SOURCE_DIR}/States/TestStatesCurve.cpp\")\n\n# addIntegrationTest(TestStatesDragDrop\n\n# \t\t\t \"${CMAKE_CURRENT_SOURCE_DIR}/States/TestStatesDragDrop.cpp\")\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Tests/testbed/CMakeLists.txt" : {
      "ObjectId" : "11df42c850e2387e82f9154a6f6ef2151de0a551",
      "LastModified" : "2019-03-24T13:23:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "score-wasm.pro" : {
      "ObjectId" : "a09bb5b73bbddeab8e7208d4e0cf626c9038cad8",
      "LastModified" : "2019-03-24T13:23:38Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# cp *.h *.hpp from cmake\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "041b5bb05d93236f0377c53e27148531a88b62df",
      "LastModified" : "2019-03-24T13:23:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/addon-skeleton/CMakeLists.txt" : {
      "ObjectId" : "2ac52dfb57601a18f67696c0cf1c65a65221aa40",
      "LastModified" : "2019-03-24T13:23:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# General initialization\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Source files\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Creation of the library\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Code generation\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Link\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Target-specific options\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/addons/CMakeLists.txt" : {
      "ObjectId" : "b3370ef9ec6f558a4cacb038836ec881bb6590b9",
      "LastModified" : "2019-03-24T13:23:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/app/CMakeLists.txt" : {
      "ObjectId" : "b57e7d166c15e194372a29aa404a788e0ff8bc84",
      "LastModified" : "2019-04-07T15:18:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_executable(score-main WIN32 AppLauncher.cpp)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#target_link_libraries(score-main PRIVATE ${APPNAME})\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# target_link_libraries(score-main PUBLIC -Wl,--stack,16777216)\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Necessary for JACK on windows.\n\n# http://jack-audio.10948.n7.nabble.com/Cannot-run-64bit-windows-client-td18952.html\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Linux package is called ossia-score\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "src/app/StaticApp.cmake" : {
      "ObjectId" : "1595247433c5fee3adc93e1641e82de9f14533b4",
      "LastModified" : "2019-03-24T13:23:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Taken and modified from what's in the Qt CMake config files\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# The Qt builds of some libraries are present as e.g. \\$\\$[QT_INSTALL_LIBS]/libqtharfbuzz.a\n\n# so we replace with their install path\n",
        "Line" : 40,
        "CharPositionInLine" : 18
      },
      "2" : {
        "Text" : "# The flag is an absolute path to an existing library\n",
        "Line" : 44,
        "CharPositionInLine" : 18
      },
      "3" : {
        "Text" : "# Covers most cases\n",
        "Line" : 63,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# First we generate _FOO_STATIC_RELEASE_LIB_DEPENDENCIES variables by parsing the .prl files\n",
        "Line" : 73,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Then we generate the actual list of linked libraries\n",
        "Line" : 110,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Link order is important, this must stay at the end\n",
        "Line" : 139,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "src/app/UnityApp.cmake" : {
      "ObjectId" : "1930ef7d570cab627b210d6d03f9ea2d1a65f7c3",
      "LastModified" : "2019-03-24T13:23:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/lib/CMakeLists.txt" : {
      "ObjectId" : "d4f6e85ed835bd48dfb3e52b6c05aab18c9630de",
      "LastModified" : "2019-04-07T13:25:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Packages\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Files & main target\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#    \"${CMAKE_CURRENT_SOURCE_DIR}/score/widgets/QmlContainerPanel.hpp\"\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\"${CMAKE_CURRENT_SOURCE_DIR}/3rdparty/Qt-Color-Widgets/QtColorWidgets/color_palette_model.hpp\"\n\n#\"${CMAKE_CURRENT_SOURCE_DIR}/3rdparty/Qt-Color-Widgets/QtColorWidgets/color_palette_widget.hpp\"\n\n#\"${CMAKE_CURRENT_SOURCE_DIR}/3rdparty/Qt-Color-Widgets/QtColorWidgets/colorwidgets_global.hpp\"\n\n#\"${CMAKE_CURRENT_SOURCE_DIR}/3rdparty/Qt-Color-Widgets/QtColorWidgets/color_wheel.hpp\"\n\n#\"${CMAKE_CURRENT_SOURCE_DIR}/3rdparty/Qt-Color-Widgets/QtColorWidgets/color_line_edit.hpp\"\n\n#\"${CMAKE_CURRENT_SOURCE_DIR}/3rdparty/Qt-Color-Widgets/QtColorWidgets/swatch.hpp\"\n\n#\"${CMAKE_CURRENT_SOURCE_DIR}/3rdparty/Qt-Color-Widgets/QtColorWidgets/color_delegate.hpp\"\n\n#\"${CMAKE_CURRENT_SOURCE_DIR}/3rdparty/Qt-Color-Widgets/QtColorWidgets/color_palette.hpp\"\n\n#\"${CMAKE_CURRENT_SOURCE_DIR}/3rdparty/Qt-Color-Widgets/QtColorWidgets/hue_slider.hpp\"\n\n#\"${CMAKE_CURRENT_SOURCE_DIR}/3rdparty/Qt-Color-Widgets/QtColorWidgets/abstract_widget_list.hpp\"\n\n#\"${CMAKE_CURRENT_SOURCE_DIR}/3rdparty/Qt-Color-Widgets/QtColorWidgets/bound_color_selector.hpp\"\n\n#\"${CMAKE_CURRENT_SOURCE_DIR}/3rdparty/Qt-Color-Widgets/QtColorWidgets/color_dialog.hpp\"\n\n#\"${CMAKE_CURRENT_SOURCE_DIR}/3rdparty/Qt-Color-Widgets/QtColorWidgets/color_2d_slider.hpp\"\n\n#\"${CMAKE_CURRENT_SOURCE_DIR}/3rdparty/Qt-Color-Widgets/QtColorWidgets/color_selector.hpp\"\n\n#\"${CMAKE_CURRENT_SOURCE_DIR}/3rdparty/Qt-Color-Widgets/QtColorWidgets/color_list_widget.hpp\"\n\n#\"${CMAKE_CURRENT_SOURCE_DIR}/3rdparty/Qt-Color-Widgets/QtColorWidgets/color_preview.hpp\"\n\n#\"${CMAKE_CURRENT_SOURCE_DIR}/3rdparty/Qt-Color-Widgets/QtColorWidgets/gradient_slider.hpp\"\n\n#\"${CMAKE_CURRENT_SOURCE_DIR}/3rdparty/Qt-Color-Widgets/QtColorWidgets/color_names.hpp\"\n",
        "Line" : 220,
        "CharPositionInLine" : 5
      },
      "4" : {
        "Text" : "# \"${CMAKE_CURRENT_SOURCE_DIR}/score/widgets/QmlContainerPanel.cpp\" # TODO MOVEME\n",
        "Line" : 327,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# \"${CMAKE_CURRENT_SOURCE_DIR}/3rdparty/Qt-Color-Widgets/src/color_list_widget.cpp\"\n",
        "Line" : 365,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# \"${CMAKE_CURRENT_SOURCE_DIR}/3rdparty/Qt-Color-Widgets/src/bound_color_selector.cpp\"\n",
        "Line" : 369,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# \"${CMAKE_CURRENT_SOURCE_DIR}/3rdparty/Qt-Color-Widgets/src/color_2d_slider.cpp\"\n\n# \"${CMAKE_CURRENT_SOURCE_DIR}/3rdparty/Qt-Color-Widgets/src/abstract_widget_list.cpp\"\n\n# \"${CMAKE_CURRENT_SOURCE_DIR}/3rdparty/Qt-Color-Widgets/src/color_delegate.cpp\"\n",
        "Line" : 372,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# \"${CMAKE_CURRENT_SOURCE_DIR}/3rdparty/Qt-Color-Widgets/src/color_selector.cpp\"\n",
        "Line" : 378,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Qt5::Qml Qt5::QuickWidgets\n",
        "Line" : 387,
        "CharPositionInLine" : 40
      },
      "CommentCount" : 10
    },
    "src/player/CMakeLists.txt" : {
      "ObjectId" : "8cdc52409cb0b7aa38c8f5fe82a79010324ddb4c",
      "LastModified" : "2019-03-24T13:23:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/player/i-score-pd/CMakeLists.txt" : {
      "ObjectId" : "d4b7e5da397f96f129d72115fa7c20549fdb7f52",
      "LastModified" : "2019-03-24T13:23:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# On windows we have to create a .lib file for Pd since the original one is incomplete\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# First download Pd.\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Extract Pd.\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Then we follow this process :\n\n# https://adrianhenke.wordpress.com/2008/12/05/create-lib-file-from-dll\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Convert to list\n",
        "Line" : 27,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Only keep the relevant lines\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Filter each line to get only the function name\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Finally, create a .lib from the .def\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# needed for score_player_export.h\n",
        "Line" : 67,
        "CharPositionInLine" : 54
      },
      "9" : {
        "Text" : "#set(OSSIA_3RDPARTY_FOLDER \"${CMAKE_CURRENT_SOURCE_DIR}/../../3rdparty\")\n\n#include_directories(SYSTEM \"${OSSIA_3RDPARTY_FOLDER}/nano-signal-slot/include\")\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Win32 uses DLL as a suffix for pd externals\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "src/plugins/CMakeLists.txt" : {
      "ObjectId" : "69246ef178fec94b3e4b6c68605b27d02a3f43b9",
      "LastModified" : "2019-03-24T13:23:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# SCORE_PLUGINS_TO_BUILD is defined in the configuration.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/plugins/score-lib-device/CMakeLists.txt" : {
      "ObjectId" : "0206aea6240e8a7a57f16322b754d3436eed836a",
      "LastModified" : "2019-03-24T13:23:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Packages\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Files & main target\n\n### Plugin ###\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO move in 3rdparty\n",
        "Line" : 52,
        "CharPositionInLine" : 61
      },
      "CommentCount" : 3
    },
    "src/plugins/score-lib-inspector/CMakeLists.txt" : {
      "ObjectId" : "a63e55f7e499e91778b4863b88304a8fb7b1ee21",
      "LastModified" : "2019-03-24T13:23:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Packages\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Inspector interface\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/plugins/score-lib-process/CMakeLists.txt" : {
      "ObjectId" : "fabc948624aa6e2bb1e7d11b0aae1a35bb501208",
      "LastModified" : "2019-04-07T13:25:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Packages\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### Library ###\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# setup_score_tests(Tests)\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/plugins/score-lib-process/Tests/CMakeLists.txt" : {
      "ObjectId" : "a98ca184d20903ec9640ced0a08f4e953e89e3b9",
      "LastModified" : "2019-03-24T13:23:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Commands\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/plugins/score-lib-state/CMakeLists.txt" : {
      "ObjectId" : "90fbb5a000854318bb3e0505d2684730cc641460",
      "LastModified" : "2019-03-24T13:23:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Packages\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Files & main target\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#setup_score_tests(Tests)\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/plugins/score-lib-state/Tests/CMakeLists.txt" : {
      "ObjectId" : "2cdccc7b08623c9fb5223b329932903ec2331a4a",
      "LastModified" : "2019-03-24T13:23:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Commands\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# addStateTest(SerializationTest\n\n#              \"${CMAKE_CURRENT_SOURCE_DIR}/SerializationTest.cpp\")\n\n# addStateTest(EqualityTest\n\n#              \"${CMAKE_CURRENT_SOURCE_DIR}/EqualityTest.cpp\")\n\n# addStateTest(UnitTest\n\n#              \"${CMAKE_CURRENT_SOURCE_DIR}/UnitTests.cpp\")\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/plugins/score-plugin-automation/CMakeLists.txt" : {
      "ObjectId" : "857a22f00acd1157ddc0b46b59ff4ef2e0531523",
      "LastModified" : "2019-03-24T13:23:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Packages\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Files & main target\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/plugins/score-plugin-curve/CMakeLists.txt" : {
      "ObjectId" : "64c68777193ec97341d4167f44c8154e7b61e350",
      "LastModified" : "2019-03-24T13:23:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Packages\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Files & main target\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/plugins/score-plugin-deviceexplorer/CMakeLists.txt" : {
      "ObjectId" : "f8cb9f533f1295a401b5964926d19a12c3ce7f0b",
      "LastModified" : "2019-03-24T13:23:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Packages\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Files & main target\n\n### Plugin ###\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\"${CMAKE_CURRENT_SOURCE_DIR}/Explorer/ModelTest/dynamictreemodel.cpp\"\n\n#\"${CMAKE_CURRENT_SOURCE_DIR}/Explorer/ModelTest/modeltest.cpp\"\n\n#\"${CMAKE_CURRENT_SOURCE_DIR}/Explorer/ModelTest/tst_modeltest.cpp\"\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#setup_score_tests(Tests)\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/plugins/score-plugin-deviceexplorer/Tests/CMakeLists.txt" : {
      "ObjectId" : "cd01d4f7b2875bdc23360d58455686736c7bfa52",
      "LastModified" : "2019-03-24T13:23:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/plugins/score-plugin-engine/CMakeLists.txt" : {
      "ObjectId" : "63be2feab5c7f62938c9eaf913b2262f41cd2c55",
      "LastModified" : "2019-03-24T13:23:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Packages\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Files & main target\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/plugins/score-plugin-fx/CMakeLists.txt" : {
      "ObjectId" : "eb044776170b40910a6f71b42aec012a10895736",
      "LastModified" : "2019-03-24T13:23:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/plugins/score-plugin-inspector/CMakeLists.txt" : {
      "ObjectId" : "a2419f9249933585fb3afadd75ff85b7d73ee435",
      "LastModified" : "2019-03-24T13:23:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Inspector panel plug-in\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/plugins/score-plugin-js/CMakeLists.txt" : {
      "ObjectId" : "93ad8c3d601987dfdb56d6b248a64e1e0dfc6b74",
      "LastModified" : "2019-03-24T13:23:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Packages\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Files & main target\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO make this automatic in some way, and extend to other components\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/plugins/score-plugin-library/CMakeLists.txt" : {
      "ObjectId" : "f0960699ece803490d693acbcb1eb39dff853e6b",
      "LastModified" : "2019-03-24T13:23:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Packages\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/plugins/score-plugin-loop/CMakeLists.txt" : {
      "ObjectId" : "2a77232b2dda8d44333dabcd4f4ff5302ff27900",
      "LastModified" : "2019-03-24T13:23:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Packages\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Files & main target\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/plugins/score-plugin-mapping/CMakeLists.txt" : {
      "ObjectId" : "a9d74e06aa83a7bfa8f4daa2c3fdf445af700783",
      "LastModified" : "2019-03-24T13:23:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Packages\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Files & main target\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/plugins/score-plugin-media/CMakeLists.txt" : {
      "ObjectId" : "f2a6c56517c3bb0fe3def1f571187856163e068b",
      "LastModified" : "2019-04-07T15:18:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Packages\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Concurrent)\n",
        "Line" : 7,
        "CharPositionInLine" : 54
      },
      "2" : {
        "Text" : "#if(SCORE_AUDIO_PLUGINS)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#endif()\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Files & main target\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Qt5::Concurrent\n",
        "Line" : 195,
        "CharPositionInLine" : 44
      },
      "6" : {
        "Text" : "### FFMPEG ###\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "src/plugins/score-plugin-midi/CMakeLists.txt" : {
      "ObjectId" : "0aad2c55efe2c25d563a3dfe096379f1e99fe8d9",
      "LastModified" : "2019-03-24T13:23:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Packages\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Files & main target\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/plugins/score-plugin-recording/CMakeLists.txt" : {
      "ObjectId" : "1128134b93afd76a5c511b9468d26681c50fae59",
      "LastModified" : "2019-03-24T13:23:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Packages\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Files & main target\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/plugins/score-plugin-scenario/CMakeLists.txt" : {
      "ObjectId" : "503d45fad80e747e854515b52b8bcb46b4ff1eb4",
      "LastModified" : "2019-03-24T13:23:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Packages\n\n# TODO make a check to see what libs aren't necessary\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### Scenario plugin ###\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/plugins/score-plugin-scenario/tests/CMakeLists.txt" : {
      "ObjectId" : "6ed6c923f08b265df063143ca16c80d391bbe85c",
      "LastModified" : "2019-03-24T13:23:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Commands\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## elementCreation\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## elementDeletion\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TODO Rename in RemoveLayerModel\n",
        "Line" : 66,
        "CharPositionInLine" : 40
      },
      "4" : {
        "Text" : "## Intervals\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## TimeSyncs\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/vstpuppet/CMakeLists.txt" : {
      "ObjectId" : "08f0750e599531d9189fc7a38352a146a1522295",
      "LastModified" : "2019-03-24T13:23:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/score-plugin-wizard/plugin.cmake" : {
      "ObjectId" : "8e9484c87766d60e7135957bd2f434ea1df041ae",
      "LastModified" : "2019-03-24T13:23:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Packages\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Files & main target\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "CMAKE" : 93,
    "QMAKE" : 1
  },
  "ElapsedTime" : 2736
}