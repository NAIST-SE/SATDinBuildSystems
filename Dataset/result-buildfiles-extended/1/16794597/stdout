{
  "Repository" : "16794597",
  "Revision" : "HEAD",
  "ObjectId" : "0f3aebd9290208c8439434d6315f989832ce8472",
  "CommitTime" : "2019-04-11T00:25:11Z",
  "Files" : {
    "avro-console-scripts/pom.xml" : {
      "ObjectId" : "fd6b8619bbed415d16e4e09a18ac5db3e9a96349",
      "LastModified" : "2019-02-11T22:24:28Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "avro-converter/pom.xml" : {
      "ObjectId" : "fbc510f12a64c38f5825e3865c5706e5e652c6b0",
      "LastModified" : "2019-02-11T22:24:28Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " fix for Java 10: podam depends on java.xml.ws module ",
        "Line" : 64,
        "CharPositionInLine" : 74
      },
      "CommentCount" : 1
    },
    "avro-serde/pom.xml" : {
      "ObjectId" : "78c61177d34f2407d6373de12466663bf20751ca",
      "LastModified" : "2019-02-11T22:24:28Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Test dependencies ",
        "Line" : 44,
        "CharPositionInLine" : 35
      },
      "CommentCount" : 1
    },
    "avro-serializer/pom.xml" : {
      "ObjectId" : "43d23eb10b3e7310956003817a990c60f6014436",
      "LastModified" : "2019-02-11T22:24:28Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "client/pom.xml" : {
      "ObjectId" : "ddf1fe539dd32dd511275546a76b3e0e42bdc1fd",
      "LastModified" : "2019-02-11T22:24:28Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "core/pom.xml" : {
      "ObjectId" : "abf11d46f9bdd539db177baef69dfa2f0d05be26",
      "LastModified" : "2019-02-11T22:24:28Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " To prevent a UniqueResourceException due the same resource existing in both\n             org.apache.directory.api/api-all and org.apache.directory.api/api-ldap-schema-data, api-ldap-schema-data\n             needs to be excluded from all directory-related maven dependencies. ",
        "Line" : 89,
        "CharPositionInLine" : 85
      },
      "CommentCount" : 1
    },
    "debian/Makefile" : {
      "ObjectId" : "1097ed90e96733d1f325cc87c7af4cadc24d48e8",
      "LastModified" : "2019-02-11T22:24:28Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Dependencies you'll probably need to install to compile this: make, curl, git,\n\n# zip, unzip, patch, java7-jdk | openjdk-7-jdk, maven.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Note that this is sensitive to this package's version being the first\n\n# <version> tag in the pom.xml\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Defaults that are likely to vary by platform. These are cleanly separated so\n\n# it should be easy to maintain altered values on platform-specific branches\n\n# when the values aren't overridden by the script invoking the Makefile\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Whether we should apply patches. This only makes sense for alternate packaging\n\n# systems that know how to apply patches themselves, e.g. Debian.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# DESTDIR may be overriden by e.g. debian packaging\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Whether we should run tests during the build.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Safety precatuion to avoid removing of root dir when DESTDIR or PREFIX is not set, for wathever reason\n",
        "Line" : 70,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# kafka-serde-tools\n",
        "Line" : 86,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# Get any -alpha, -beta (preview), -rc (release candidate), -SNAPSHOT (nightly), -cp (confluent patch), -hotfix piece that we need to put into the Release part of\n\n# the version since RPM versions don't support non-numeric\n\n# characters. Ultimately, for something like 0.8.2-beta, we want to end up with\n\n# Version=0.8.2 Release=0.X.beta\n\n# where X is the RPM release # of 0.8.2-beta (the prefix 0. forces this to be\n\n# considered earlier than any 0.8.2 final releases since those will start with\n\n# Version=0.8.2 Release=1)\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Unfortunately, because of version naming issues and the way rpmbuild expects\n\n# the paths in the tar file to be named, we need to rearchive the package. So\n\n# instead of depending on archive, this target just uses the unarchived,\n\n# installed version to generate a new archive. Note that we always regenerate\n\n# the symlink because the RPM_VERSION doesn't include all the version info -- it\n\n# can leave of things like -beta, -rc1, etc.\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "json-serializer/pom.xml" : {
      "ObjectId" : "bc102c1f941ac424064bece08596a0373632b629",
      "LastModified" : "2019-02-11T22:24:28Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "maven-plugin/pom.xml" : {
      "ObjectId" : "ae71f34bd13f2e8960ed4bfe4fe02f7cd875d3ff",
      "LastModified" : "2019-02-11T22:24:28Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "package-kafka-serde-tools/pom.xml" : {
      "ObjectId" : "fd52bf6b9715bc905416a15d4bb8649b58f1d9a9",
      "LastModified" : "2019-02-11T22:24:28Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Dependencies are required only to ensure this module is built last. ",
        "Line" : 25,
        "CharPositionInLine" : 81
      },
      "1" : {
        "Text" : " kafka -> zookeeper -> jline ends up including junit 3.8.1 here. Explicitly list the\n             dependency and scope it to test to avoid pulling it in ",
        "Line" : 44,
        "CharPositionInLine" : 72
      },
      "2" : {
        "Text" : " Include Kafka Connect runtime as a provided dependency. It should not be pulled in,\n             but this reference allows us to package it with the development-mode \"packaging\" so\n             you don't need to jump through classpath hoops ",
        "Line" : 52,
        "CharPositionInLine" : 64
      },
      "CommentCount" : 3
    },
    "package-schema-registry/pom.xml" : {
      "ObjectId" : "18b47fb63b8e9322726e3cc79a749773d390b345",
      "LastModified" : "2019-02-11T22:24:28Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Dependencies are required only to ensure this module is built last. ",
        "Line" : 17,
        "CharPositionInLine" : 81
      },
      "1" : {
        "Text" : " kafka -> zookeeper -> jline ends up including junit 3.8.1 here. Explicitly list the\n             dependency and scope it to test to avoid pulling it in ",
        "Line" : 33,
        "CharPositionInLine" : 72
      },
      "CommentCount" : 2
    },
    "pom.xml" : {
      "ObjectId" : "8379479e58e9ac4a50033e0cbee1edfbb1462f36",
      "LastModified" : "2019-02-11T22:24:28Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "children",
        "Line" : 91,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 1
    },
    "schema-registry-console-scripts/pom.xml" : {
      "ObjectId" : "915dd0c16a1aad7a25bd3bbeb373e646307ddd97",
      "LastModified" : "2019-02-11T22:24:28Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 1,
    "MAVEN" : 12
  },
  "ElapsedTime" : 1597
}