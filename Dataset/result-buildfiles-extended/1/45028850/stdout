{
  "Repository" : "45028850",
  "Revision" : "HEAD",
  "ObjectId" : "3cb6ae5508d758af89408493b0ac41e3b3bec6a2",
  "CommitTime" : "2019-04-18T23:39:06Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "b324fce7361488498519abf3a5ce46e05d97f925",
      "LastModified" : "2019-04-16T19:30:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#####################\n\n## Project Metadata #\n\n#####################\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########################\n\n# Set helper-variables #\n\n########################\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# OS\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Cygwin thinks it's actually Linux.\n",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# 32 or 64 bit\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#############################\n\n# System-dependent defaults #\n\n#############################\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Windows only compiles statically.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Disable ASAN for macOS due to \"AddressSanitizer: odr-violation: global\". see #957\n\n# Windows doesn't compile with asan enabled.\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# ASAN causes uTox to be slower so do no use it for release builds\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "###########\n\n# Options #\n\n###########\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#################################\n\n# Include toolchain if required #\n\n#################################\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Helping Cygwin out again..\n",
        "Line" : 101,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "#######################################################################\n\n# CMake Settings\n\n#######################################################################\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# make version available in C files\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#######################################################################\n\n# C compiler flags\n\n#######################################################################\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# this requires at least cmake 3.1\n",
        "Line" : 134,
        "CharPositionInLine" : 25
      },
      "16" : {
        "Text" : "# add compiler flag for all build types\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Grab environment CFLAGS.\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Warn on non-ISO C.\n\n#add_cflag(\"-pedantic\") # throws a lot of warning, quite sure we do not want this at current state.\n\n## Add all warning flags we can.\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## Warnings we don't tolerate\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## Warnings we don't care about\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "## Everything Else\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "## Optimization Flags\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Fix GNU stack\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Have ld strip the symbols from Release and MinSizeRel build types.\n",
        "Line" : 180,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# enable Link Time Optimization on gcc (linux only currently)\n\n# TODO someone should figure out how this works on windows, or we need to have gitlab-ci for GCC\n",
        "Line" : 185,
        "CharPositionInLine" : 8
      },
      "26" : {
        "Text" : "## -flto is a flag that needs to exist at link time as well,\n\n#  so we use some hacky save/restore to help cmake.\n",
        "Line" : 188,
        "CharPositionInLine" : 12
      },
      "27" : {
        "Text" : "# Disable warning for `= { 0 }` in Clang.\n\n# Remove once they've resolved https://bugs.llvm.org//show_bug.cgi?id=21689\n",
        "Line" : 202,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# Enable Link Time Optimization on Clang\n",
        "Line" : 206,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "## -flto is a flag that needs to exist at link time as well,\n\n#  so we use some hacky save/restore to help cmake.\n",
        "Line" : 208,
        "CharPositionInLine" : 8
      },
      "30" : {
        "Text" : "# Have ld strip the symbols from Release and MinSizeRel build types. (-Oz is clang specific)\n",
        "Line" : 216,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# set define for GIT_VERSION\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#######################################################################\n\n# Build options\n\n#######################################################################\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# https://github.com/google/sanitizers/wiki/AddressSanitizer\n",
        "Line" : 243,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Protip, you must use a different directory for each build target...\n\n# -DMAKE_TOOLCHAIN_FILE has no effect unless the target directory is empty\n\n# 1.5 hours to learn this...\n",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Windows icons\n",
        "Line" : 298,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# Required for v4l (at least in the Linux static builds on Jenkins)\n",
        "Line" : 315,
        "CharPositionInLine" : 8
      },
      "37" : {
        "Text" : "# Acquire 3rd party headers\n",
        "Line" : 320,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# set FOO_INCLUDE_DIR properly\n",
        "Line" : 325,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "# include utoxLAYOUT\n",
        "Line" : 330,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# include utoxUI\n",
        "Line" : 332,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# include utoxAV\n",
        "Line" : 334,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#######################################################################\n\n# :: uTox main\n\n#######################################################################\n",
        "Line" : 337,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# check that the app is valid and when the app is static\n\n# also check that it does not depend on external libs (system libs excepted)\n",
        "Line" : 392,
        "CharPositionInLine" : 4
      },
      "44" : {
        "Text" : "# needed for packaging, so that CPack can find the app\n",
        "Line" : 400,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "# install App\n",
        "Line" : 402,
        "CharPositionInLine" : 4
      },
      "46" : {
        "Text" : "# packaging\n",
        "Line" : 410,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "###########\n\n# Testing #\n\n###########\n",
        "Line" : 413,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# Tests currently only run on Unix-like OSes.\n",
        "Line" : 419,
        "CharPositionInLine" : 4
      },
      "49" : {
        "Text" : "#############\n\n# Info dump #\n\n#############\n",
        "Line" : 426,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 50
    },
    "cmake/FindCheck.cmake" : {
      "ObjectId" : "8ad818f42b2c3639f33e8451488bd520b31ff020",
      "LastModified" : "2017-04-02T00:05:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the CHECK libraries\n\n#  Once done this will define\n\n#\n\n#  CHECK_FOUND - system has check\n\n#  CHECK_INCLUDE_DIRS - the check include directory\n\n#  CHECK_LIBRARIES - check library\n\n#\n\n#  Copyright (c) 2007 Daniel Gollub <gollub@b1-systems.de>\n\n#  Copyright (c) 2007-2009 Bjoern Ricks  <bjoern.ricks@gmail.com>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Look for CHECK include dir and libraries\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Hide advanced variables from CMake GUIs\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/FindDBus.cmake" : {
      "ObjectId" : "4a1a180561a5b980e4f7cc06ff69f873324eb10c",
      "LastModified" : "2017-04-07T00:35:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find DBus\n\n# Once done, this will define\n\n#\n\n#  DBUS_FOUND - system has DBus\n\n#  DBUS_INCLUDE_DIRS - the DBus include directories\n\n#  DBUS_LIBRARIES - link these to use DBus\n\n#\n\n# Copyright (C) 2012 Raphael Kubo da Costa <rakuco@webkit.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# 1.  Redistributions of source code must retain the above copyright\n\n#     notice, this list of conditions and the following disclaimer.\n\n# 2.  Redistributions in binary form must reproduce the above copyright\n\n#     notice, this list of conditions and the following disclaimer in the\n\n#     documentation and/or other materials provided with the distribution.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND ITS CONTRIBUTORS ``AS\n\n# IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n\n# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\n# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR ITS\n\n# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\n# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\n# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;\n\n# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n\n# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n\n# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n\n# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Findlibfilteraudio.cmake" : {
      "ObjectId" : "84a82955b7fd60ea948e685029c74b98d573b8f1",
      "LastModified" : "2017-08-29T18:54:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find FilterAudio\n\n# Once done this will define\n\n#  LIBFILTERAUDIO_FOUND - System has FilterAudio\n\n#  LIBFILTERAUDIO_INCLUDE_DIRS - The FilterAudio include directories\n\n#  LIBFILTERAUDIO_LIBRARIES - The libraries needed to use FilterAudio\n\n#  LIBFILTERAUDIO_DEFINITIONS - Compiler switches required for using FilterAudio\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LIBFILTERAUDIO_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Findlibfontconfig.cmake" : {
      "ObjectId" : "c3f9442af5c0ca0a17b56c80607d8da8a03ef16d",
      "LastModified" : "2018-09-13T17:54:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find FontConfig\n\n# Once done this will define\n\n#  LIBFONTCONFIG_FOUND - System has FontConfig\n\n#  LIBFONTCONFIG_INCLUDE_DIRS - The FontConfig include directories\n\n#  LIBFONTCONFIG_LIBRARIES - The libraries needed to use FontConfig\n\n#  LIBFONTCONFIG_DEFINITIONS - Compiler switches required for using FontConfig\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set LIBFONTCONFIG_FOUND to TRUE\n\n# if all listed variables are TRUE.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Findlibopus.cmake" : {
      "ObjectId" : "d9915e73b3f2e3927b913977b757bb08543a42b9",
      "LastModified" : "2018-09-13T17:54:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find opus\n\n# Once done this will define\n\n#  LIBOPUS_FOUND - System has opus\n\n#  LIBOPUS_INCLUDE_DIRS - The opus include directories\n\n#  LIBOPUS_LIBRARIES - The libraries needed to use opus\n\n#  LIBOPUS_DEFINITIONS - Compiler switches required for using opus\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LIBOPUS_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Findlibsodium.cmake" : {
      "ObjectId" : "97340d30b35669604a1f2de8e26b78631cb10027",
      "LastModified" : "2018-09-13T17:54:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find sodium\n\n# Once done this will define\n\n#  LIBSODIUM_FOUND - System has sodium\n\n#  LIBSODIUM_INCLUDE_DIRS - The sodium include directories\n\n#  LIBSODIUM_LIBRARIES - The libraries needed to use sodium\n\n#  LIBSODIUM_DEFINITIONS - Compiler switches required for using sodium\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LIBSODIUM_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Findlibtox.cmake" : {
      "ObjectId" : "99ebd4ed49dde6387b5ba963cf5458856c05da15",
      "LastModified" : "2018-09-13T17:54:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Tox\n\n# Once done this will define\n\n#  LIBTOX_FOUND - System has Tox\n\n#  LIBTOX_INCLUDE_DIRS - The Tox include directories\n\n#  LIBTOX_LIBRARIES - The libraries needed to use Tox\n\n#  LIBTOX_DEFINITIONS - Compiler switches required for using Tox\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set LIBTOX_FOUND to TRUE\n\n# if all listed variables are TRUE.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Findlibv4lconvert.cmake" : {
      "ObjectId" : "c8f8f3b8cb2113a5d0bdf9fb7dabefe51ba15a2f",
      "LastModified" : "2018-09-13T17:54:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find V4Lconvert\n\n# Once done this will define\n\n#  LIBV4LCONVERT_FOUND - System has V4Lconvert\n\n#  LIBV4LCONVERT_INCLUDE_DIRS - The V4Lconvert include directories\n\n#  LIBV4LCONVERT_LIBRARIES - The libraries needed to use V4Lconvert\n\n#  LIBV4LCONVERT_DEFINITIONS - Compiler switches required for using V4Lconvert\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set LIBV4LCONVERT_FOUND to TRUE\n\n# if all listed variables are TRUE.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Findlibvpx.cmake" : {
      "ObjectId" : "0c9974b1c0b053757f51e865d7c62b12b9317fb6",
      "LastModified" : "2018-09-13T17:54:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find VPX\n\n# Once done this will define\n\n#  LIBVPX_FOUND - System has VPX\n\n#  LIBVPX_INCLUDE_DIRS - The VPX include directories\n\n#  LIBVPX_LIBRARIES - The libraries needed to use VPX\n\n#  LIBVPX_DEFINITIONS - Compiler switches required for using VPX\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set LIBVPX_FOUND to TRUE\n\n# if all listed variables are TRUE.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/macOS.cmake" : {
      "ObjectId" : "e1590e9afc2af77d95d8ea87e2c934ae2d875725",
      "LastModified" : "2018-09-13T17:54:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# These variables are needed to generate the Info.plist\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Xcode needs these to find libs\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Make apple icon\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make apple menu\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Copy files\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# create DMG\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/toolchain-win32.cmake" : {
      "ObjectId" : "00f11c5f7a980ce53783dd08d5933931e15d30b9",
      "LastModified" : "2018-09-13T17:54:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file has a lot of CACHE STRING \"\" FORCE because cmake likes caching\n\n# things and won't use what we do in here unless we CACHE FORCE it.\n\n#\n\n# See: https://cmake.org/pipermail/cmake/2012-January/048429.html\n\n#      http://stackoverflow.com/a/30217088\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# the name of the target operating system\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Required to prevent duplication of flags from this file.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Windows only compiles statically.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Required for line numbers in gdb on Windows.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# adjust the default behaviour of the FIND_XXX() commands:\n\n# search headers and libraries in the target environment, search\n\n# programs in the host environment\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# This is for cmake\n",
        "Line" : 36,
        "CharPositionInLine" : 16
      },
      "CommentCount" : 7
    },
    "cmake/toolchain-win64.cmake" : {
      "ObjectId" : "349cfdd936815e0a89c4563a7e9444fedd7fe6b1",
      "LastModified" : "2018-09-13T17:54:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file has a lot of CACHE STRING \"\" FORCE because cmake likes caching\n\n# things and won't use what we do in here unless we CACHE FORCE it.\n\n#\n\n# See: https://cmake.org/pipermail/cmake/2012-January/048429.html\n\n#      http://stackoverflow.com/a/30217088\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# the name of the target operating system\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Required to prevent duplication of flags from this file.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Windows only compiles statically.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Required for line numbers in gdb on Windows.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# adjust the default behaviour of the FIND_XXX() commands:\n\n# search headers and libraries in the target environment, search\n\n# programs in the host environment\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# This is for cmake\n\n# This is for uTox lib dirs\n",
        "Line" : 36,
        "CharPositionInLine" : 16
      },
      "CommentCount" : 7
    },
    "cmake/win.cmake" : {
      "ObjectId" : "7a8e31b62864491ea099398c801b8c497af2cb95",
      "LastModified" : "2018-09-13T17:54:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Having a mingw32 compiler set is vital. Otherwise you get weird errors because\n\n# of Windows headers.\n\n# From $UTOX_ROOT/build/\n\n# CC=x86_64-w64-mingw32-gcc cmake .. -DCMAKE_BUILD_TYPE=Debug\n\n# make -j\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Required to prevent duplication of flags from this file.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Windows only compiles statically.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Required for line numbers in gdb on Windows.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set default dependency path.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/av/CMakeLists.txt" : {
      "ObjectId" : "ce49a97a99bcba39960a08bb142c32aa31b2911b",
      "LastModified" : "2018-09-13T17:54:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Windows needs to be linked against OpenAL32\n",
        "Line" : 11,
        "CharPositionInLine" : 43
      },
      "1" : {
        "Text" : "# Link OSX against opus\n",
        "Line" : 15,
        "CharPositionInLine" : 55
      },
      "2" : {
        "Text" : "# Both openal and opus are required for the static Linux builds on Jenkins.\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "src/cocoa/CMakeLists.txt" : {
      "ObjectId" : "445912a1e517460b9008ba2c315b963f3626ae32",
      "LastModified" : "2018-09-13T17:54:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/layout/CMakeLists.txt" : {
      "ObjectId" : "547abb9f754c657b1415d2510cb403046760b53c",
      "LastModified" : "2019-04-16T20:07:04Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/ui/CMakeLists.txt" : {
      "ObjectId" : "26a448f66dc0febe960d4f68bdb4c49836652f7e",
      "LastModified" : "2018-09-13T17:54:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/windows/CMakeLists.txt" : {
      "ObjectId" : "9f0773a381c3af7a8419ff7fcac9b81b7f15a453",
      "LastModified" : "2018-09-13T17:54:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#########################################\n\n## Native Icon data\n\n#########################################\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#########################################\n\n## Native Interface\n\n#########################################\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## The following two have ifdef's for __WIN_LEGACY\n\n#  We include them both here even though only one will compile with content\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "src/xlib/CMakeLists.txt" : {
      "ObjectId" : "2cf3ece3904e86ed53bc9010b9c509601892e079",
      "LastModified" : "2018-09-13T17:54:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#########################################\n\n## Native Icon data\n\n#########################################\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#########################################\n\n## Native Interface\n\n#########################################\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "f166c100a058d03acd65d87f237c027d3e9d98f4",
      "LastModified" : "2018-09-13T17:54:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# generic testing defines\n\n#\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# tests\n\n#\n\n# TODO add a cmake macro for adding tests, this will be too verbose if we add more.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "CMAKE" : 21
  },
  "ElapsedTime" : 2912
}