{
  "Repository" : "19554163",
  "Revision" : "HEAD",
  "ObjectId" : "26aff226ba0a09b30c103e034d673bfb06103889",
  "CommitTime" : "2019-03-05T02:16:57Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "dd73bd4fd70fe9e5dbca0e3844d31d2aad54ebf1",
      "LastModified" : "2018-03-29T08:27:26Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "deps/http-parser/Makefile" : {
      "ObjectId" : "f56b93414147f9242c73f8abba7b1b7ad3eb7043",
      "LastModified" : "2016-04-16T02:22:44Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright Joyent, Inc. and other Node contributors. All rights reserved.\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to\n\n# deal in the Software without restriction, including without limitation the\n\n# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n\n# sell copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in\n\n# all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n\n# IN THE SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#ifneq (darwin,$(PLATFORM))\n\n# TODO(bnoordhuis) The native SunOS linker expects -h rather than -soname...\n\n#LDFLAGS_LIB += -Wl,-soname=$(SONAME)\n\n#endif\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/libuuid-1.0.3/Makefile.am" : {
      "ObjectId" : "e2a980c8d19e769b00eb90c13280bc9962b6ed0c",
      "LastModified" : "2016-04-03T14:17:27Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# includes\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/linenoise/Makefile" : {
      "ObjectId" : "9e90c8fa86657f4890f605e60aade1a92297e576",
      "LastModified" : "2016-12-04T01:36:03Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "deps/lua-5.3.0/Makefile" : {
      "ObjectId" : "7fa91c858bb1e5a832a07e06f2635324858582eb",
      "LastModified" : "2016-12-04T01:36:03Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for installing Lua\n\n# See doc/readme.html for installation and customization instructions.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# == CHANGE THE SETTINGS BELOW TO SUIT YOUR ENVIRONMENT =======================\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Your platform. See PLATS for possible values.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Where to install. The installation starts in the src and doc directories,\n\n# so take care if INSTALL_TOP is not an absolute path. See the local target.\n\n# You may want to make INSTALL_LMOD and INSTALL_CMOD consistent with\n\n# LUA_ROOT, LUA_LDIR, and LUA_CDIR in luaconf.h.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# How to install. If your install program does not support \"-p\", then\n\n# you may have to run ranlib on the installed liblua.a.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# If you don't have \"install\" you can use \"cp\" instead.\n\n# INSTALL= cp -p\n\n# INSTALL_EXEC= $(INSTALL)\n\n# INSTALL_DATA= $(INSTALL)\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Other utilities.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# == END OF USER SETTINGS -- NO NEED TO CHANGE ANYTHING BELOW THIS LINE =======\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Convenience platforms targets.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# What to install.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Lua version and release.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Targets start here.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# make may get confused with test/ and install/\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# echo config parameters\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# echo pkg-config data\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# list targets that do not create files (but not all makes understand .PHONY)\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# (end of Makefile)\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "deps/lua-5.3.0/src/Makefile" : {
      "ObjectId" : "ef5e6b0f2534b4bd0d88f5e6de8333bf8a4656d8",
      "LastModified" : "2016-12-04T01:36:03Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for building Lua\n\n# See ../doc/readme.html for installation and customization instructions.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# == CHANGE THE SETTINGS BELOW TO SUIT YOUR ENVIRONMENT =======================\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Your platform. See PLATS for possible values.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# == END OF USER SETTINGS -- NO NEED TO CHANGE ANYTHING BELOW THIS LINE =======\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Targets start here.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Convenience targets for popular platforms\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# list targets that do not create files (but not all makes understand .PHONY)\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# DO NOT DELETE\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# (end of Makefile)\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "deps/lua-cjson-2.1.0/CMakeLists.txt" : {
      "ObjectId" : "c17239b2dab580f88499b083fde778b7accccea2",
      "LastModified" : "2016-12-04T01:36:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If Lua is installed in a non-standard location, please set the LUA_DIR\n\n# environment variable to point to prefix for the install. Eg:\n\n#       Unix: export LUA_DIR=/home/user/pkg\n\n#       Windows: set LUA_DIR=c:\\lua51\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use libc number conversion routines (strtod(), sprintf())\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Use internal number conversion routines\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Handle platforms missing isinf() macro (Eg, some Solaris systems).\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Win32 modules need to be linked to the Lua library.\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Windows sprintf()/strtod() handle NaN/inf differently. Not supported.\n",
        "Line" : 65,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# vi:ai et sw=4 ts=4:\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "deps/lua-cjson-2.1.0/Makefile" : {
      "ObjectId" : "cf3b63fea5e99fad7e932eb4ada660be1774ba20",
      "LastModified" : "2017-12-24T01:44:41Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##### Available defines for CJSON_CFLAGS #####\n\n##\n\n## USE_INTERNAL_ISINF:      Workaround for Solaris platforms missing isinf().\n\n## DISABLE_INVALID_NUMBERS: Permanently disable invalid JSON numbers:\n\n##                          NaN, Infinity, hex.\n\n##\n\n## Optional built-in number conversion uses the following defines:\n\n## USE_INTERNAL_FPCONV:     Use builtin strtod/dtoa for numeric conversions.\n\n## IEEE_BIG_ENDIAN:         Required on big endian architectures.\n\n## MULTIPLE_THREADS:        Must be set when Lua CJSON may be used in a\n\n##                          multi-threaded application. Requries _pthreads_.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##### Build defaults #####\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#CFLAGS =            -g -Wall -pedantic -fno-inline\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##### Platform overrides #####\n\n##\n\n## Tweak one of the platform sections below to suit your situation.\n\n##\n\n## See http://lua-users.org/wiki/BuildingModules for further platform\n\n## specific details.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Linux\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## FreeBSD\n\n#LUA_INCLUDE_DIR =   $(PREFIX)/include/lua51\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## MacOSX (Macports)\n\n#PREFIX =            /opt/local\n\n#CJSON_LDFLAGS =     -bundle -undefined dynamic_lookup\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## Solaris\n\n#CC           =      gcc\n\n#CJSON_CFLAGS =      -fpic -DUSE_INTERNAL_ISINF\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Windows (MinGW)\n\n#TARGET =            cjson.dll\n\n#PREFIX =            /home/user/opt\n\n#CJSON_CFLAGS =      -DDISABLE_INVALID_NUMBERS\n\n#CJSON_LDFLAGS =     -shared -L$(PREFIX)/lib -llua51\n\n#LUA_BIN_SUFFIX =    .lua\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "##### Number conversion configuration #####\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## Use Libc support for number conversion (default)\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## Use built in number conversion\n\n#FPCONV_OBJS =       g_fmt.o dtoa.o\n\n#CJSON_CFLAGS +=     -DUSE_INTERNAL_FPCONV\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## Compile built in number conversion for big endian architectures\n\n#CJSON_CFLAGS +=     -DIEEE_BIG_ENDIAN\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## Compile built in number conversion to support multi-threaded\n\n## applications (recommended)\n\n#CJSON_CFLAGS +=     -pthread -DMULTIPLE_THREADS\n\n#CJSON_LDFLAGS +=    -pthread\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "##### End customisable sections #####\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "deps/myluajit/LuaJIT-2.0.4/Makefile" : {
      "ObjectId" : "0cbe741a424cb65797e7adf071ff96c862d81cdb",
      "LastModified" : "2016-12-04T01:36:03Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\n\n# LuaJIT top level Makefile for installation. Requires GNU Make.\n\n#\n\n# Please read doc/install.html before changing any variables!\n\n#\n\n# Suitable for POSIX platforms (Linux, *BSD, OSX etc.).\n\n# Note: src/Makefile has many more configurable options.\n\n#\n\n# ##### This Makefile is NOT useful for Windows! #####\n\n# For MSVC, please follow the instructions given in src/msvcbuild.bat.\n\n# For MinGW and Cygwin, cd to src and run make with the Makefile there.\n\n#\n\n# Copyright (C) 2005-2015 Mike Pall. See Copyright Notice in luajit.h\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n#\n\n# Change the installation path as needed. This automatically adjusts\n\n# the paths in src/luaconf.h, too. Note: PREFIX must be an absolute path!\n\n#\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##############################################################################\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##############################################################################\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##############################################################################\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "##############################################################################\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "deps/myluajit/LuaJIT-2.0.4/src/Makefile" : {
      "ObjectId" : "4c52ae45866bdfa32df8147a45a7ea90fd525181",
      "LastModified" : "2016-12-04T01:36:03Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\n\n# LuaJIT Makefile. Requires GNU Make.\n\n#\n\n# Please read doc/install.html before changing any variables!\n\n#\n\n# Suitable for POSIX platforms (Linux, *BSD, OSX etc.).\n\n# Also works with MinGW and Cygwin on Windows.\n\n# Please check msvcbuild.bat for building with MSVC on Windows.\n\n#\n\n# Copyright (C) 2005-2015 Mike Pall. See Copyright Notice in luajit.h\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n#############################  COMPILER OPTIONS  #############################\n\n##############################################################################\n\n# These options mainly affect the speed of the JIT compiler itself, not the\n\n# speed of the JIT-compiled code. Turn any of the optional settings on by\n\n# removing the '#' in front of them. Make sure you force a full recompile\n\n# with \"make clean\", followed by \"make\" if you change any options.\n\n#\n\n# LuaJIT builds as a native 32 or 64 bit binary by default.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Use this if you want to force a 32 bit build on a 64 bit multilib OS.\n\n#CC= gcc -m32\n\n#\n\n# Since the assembler part does NOT maintain a frame pointer, it's pointless\n\n# to slow down the C part by not omitting it. Debugging, tracebacks and\n\n# unwinding are not affected -- the assembler part has frame unwind\n\n# information and GCC emits it where needed (x64) or with -g (see CCDEBUG).\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Use this if you want to generate a smaller binary (but it's slower):\n\n#CCOPT= -Os -fomit-frame-pointer\n\n# Note: it's no longer recommended to use -O3 with GCC 4.x.\n\n# The I-Cache bloat usually outweighs the benefits from aggressive inlining.\n\n#\n\n# Target-specific compiler options:\n\n#\n\n# x86 only: it's recommended to compile at least for i686. Better yet,\n\n# compile for an architecture that has SSE2, too (-msse -msse2).\n\n#\n\n# x86/x64 only: For GCC 4.2 or higher and if you don't intend to distribute\n\n# the binaries to a different machine you could also use: -march=native\n\n#\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Uncomment the next line to generate debug information:\n\n#CCDEBUG= -g\n\n#\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Uncomment the next line to enable more warnings:\n\n#CCWARN+= -Wextra -Wdeclaration-after-statement -Wredundant-decls -Wshadow -Wpointer-arith\n\n#\n\n##############################################################################\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "##############################################################################\n\n################################  BUILD MODE  ################################\n\n##############################################################################\n\n# The default build mode is mixed mode on POSIX. On Windows this is the same\n\n# as dynamic mode.\n\n#\n\n# Mixed mode creates a static + dynamic library and a statically linked luajit.\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n# Static mode creates a static library and a statically linked luajit.\n\n#BUILDMODE= static\n\n#\n\n# Dynamic mode creates a dynamic library and a dynamically linked luajit.\n\n# Note: this executable will only run when the library is installed!\n\n#BUILDMODE= dynamic\n\n#\n\n##############################################################################\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "##############################################################################\n\n#################################  FEATURES  #################################\n\n##############################################################################\n\n# Enable/disable these features as needed, but make sure you force a full\n\n# recompile with \"make clean\", followed by \"make\".\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\n\n# Permanently disable the FFI extension to reduce the size of the LuaJIT\n\n# executable. But please consider that the FFI library is compiled-in,\n\n# but NOT loaded by default. It only allocates any memory, if you actually\n\n# make use of it.\n\n#XCFLAGS+= -DLUAJIT_DISABLE_FFI\n\n#\n\n# Features from Lua 5.2 that are unlikely to break existing code are\n\n# enabled by default. Some other features that *might* break some existing\n\n# code (e.g. __pairs or os.execute() return values) can be enabled here.\n\n# Note: this does not provide full compatibility with Lua 5.2 at this time.\n\n#XCFLAGS+= -DLUAJIT_ENABLE_LUA52COMPAT\n\n#\n\n# Disable the JIT compiler, i.e. turn LuaJIT into a pure interpreter.\n\n#XCFLAGS+= -DLUAJIT_DISABLE_JIT\n\n#\n\n# Some architectures (e.g. PPC) can use either single-number (1) or\n\n# dual-number (2) mode. Uncomment one of these lines to override the\n\n# default mode. Please see LJ_ARCH_NUMMODE in lj_arch.h for details.\n\n#XCFLAGS+= -DLUAJIT_NUMMODE=1\n\n#XCFLAGS+= -DLUAJIT_NUMMODE=2\n\n#\n\n##############################################################################\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\n\n############################  DEBUGGING SUPPORT  #############################\n\n##############################################################################\n\n# Enable these options as needed, but make sure you force a full recompile\n\n# with \"make clean\", followed by \"make\".\n\n# Note that most of these are NOT suitable for benchmarking or release mode!\n\n#\n\n# Use the system provided memory allocator (realloc) instead of the\n\n# bundled memory allocator. This is slower, but sometimes helpful for\n\n# debugging. This option cannot be enabled on x64, since realloc usually\n\n# doesn't return addresses in the right address range.\n\n# OTOH this option is mandatory for Valgrind's memcheck tool on x64 and\n\n# the only way to get useful results from it for all other architectures.\n\n#XCFLAGS+= -DLUAJIT_USE_SYSMALLOC\n\n#\n\n# This define is required to run LuaJIT under Valgrind. The Valgrind\n\n# header files must be installed. You should enable debug information, too.\n\n# Use --suppressions=lj.supp to avoid some false positives.\n\n#XCFLAGS+= -DLUAJIT_USE_VALGRIND\n\n#\n\n# This is the client for the GDB JIT API. GDB 7.0 or higher is required\n\n# to make use of it. See lj_gdbjit.c for details. Enabling this causes\n\n# a non-negligible overhead, even when not running under GDB.\n\n#XCFLAGS+= -DLUAJIT_USE_GDBJIT\n\n#\n\n# Turn on assertions for the Lua/C API to debug problems with lua_* calls.\n\n# This is rather slow -- use only while developing C libraries/embeddings.\n\n#XCFLAGS+= -DLUA_USE_APICHECK\n\n#\n\n# Turn on assertions for the whole LuaJIT VM. This significantly slows down\n\n# everything. Use only if you suspect a problem with LuaJIT itself.\n\n#XCFLAGS+= -DLUA_USE_ASSERT\n\n#\n\n##############################################################################\n\n# You probably don't need to change anything below this line!\n\n##############################################################################\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\n\n# Flags and options for host and target.\n\n##############################################################################\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# You can override the following variables at the make command line:\n\n#   CC       HOST_CC       STATIC_CC       DYNAMIC_CC\n\n#   CFLAGS   HOST_CFLAGS   TARGET_CFLAGS\n\n#   LDFLAGS  HOST_LDFLAGS  TARGET_LDFLAGS  TARGET_SHLDFLAGS\n\n#   LIBS     HOST_LIBS     TARGET_LIBS\n\n#   CROSS    HOST_SYS      TARGET_SYS      TARGET_FLAGS\n\n#\n\n# Cross-compilation examples:\n\n#   make HOST_CC=\"gcc -m32\" CROSS=i586-mingw32msvc- TARGET_SYS=Windows\n\n#   make HOST_CC=\"gcc -m32\" CROSS=powerpc-linux-gnu-\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# If left blank, minilua is built and used. You can supply an installed\n\n# copy of (plain) Lua 5.1 or 5.2, plus Lua BitOp. E.g. with: HOST_LUA=lua\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "##############################################################################\n\n# System detection.\n\n##############################################################################\n",
        "Line" : 268,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "##############################################################################\n\n# Files and pathnames.\n\n##############################################################################\n",
        "Line" : 356,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "##############################################################################\n\n# Build mode handling.\n\n##############################################################################\n",
        "Line" : 486,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Mixed mode defaults.\n",
        "Line" : 490,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Mixed mode is not supported on Windows. And static mode doesn't work well.\n\n# C modules cannot be loaded, because they bind to lua51.dll.\n",
        "Line" : 505,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "#Q=\n\n#E= @:\n",
        "Line" : 562,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "##############################################################################\n\n# Make targets.\n\n##############################################################################\n",
        "Line" : 565,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 22,
      "Errorlog" : "line 529:19 token recognition error at: '\\m'\nline 530:19 token recognition error at: '\\b'\nline 583:10 token recognition error at: '\"s| [^ ]*/dasm_\\S'\nline 584:29 token recognition error at: '\\1'\nline 585:24 token recognition error at: '\\S'\nline 586:22 token recognition error at: '\\S'\nline 587:21 token recognition error at: '\\S'\nline 682:42 token recognition error at: '\"\\n\\n##############################################################################\\n\u0000'\n"
    },
    "deps/openssl-1.1.0c/demos/bio/Makefile" : {
      "ObjectId" : "493e8a58a52d84dae6db1322197f730686c23c36",
      "LastModified" : "2017-12-24T01:44:41Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Quick instruction:\n\n# To build against an OpenSSL built in the source tree, do this:\n\n#\n\n#    make OPENSSL_INCS_LOCATION=-I../../include OPENSSL_LIBS_LOCATION=-L../..\n\n#\n\n# To run the demos when linked with a shared library (default):\n\n#\n\n#    LD_LIBRARY_PATH=../.. ./server-arg\n\n#    LD_LIBRARY_PATH=../.. ./server-cmod\n\n#    LD_LIBRARY_PATH=../.. ./server-conf\n\n#    LD_LIBRARY_PATH=../.. ./client-arg\n\n#    LD_LIBRARY_PATH=../.. ./client-conf\n\n#    LD_LIBRARY_PATH=../.. ./saccept\n\n#    LD_LIBRARY_PATH=../.. ./sconnect\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/openssl-1.1.0c/util/indent.pro" : {
      "ObjectId" : "932c9b0f00d2d703dd40109550b56f151a15f92a",
      "LastModified" : "2017-12-24T01:44:41Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/pbc/Makefile" : {
      "ObjectId" : "f2486f8752f4c44de41f8ba946cc1f9c9b01e1f6",
      "LastModified" : "2017-12-24T01:44:41Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "deps/pbc/binding/lua/Makefile" : {
      "ObjectId" : "ebed2ab580a1551c783148213f9b772aa39ed522",
      "LastModified" : "2017-12-24T01:44:41Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "deps/pbc/binding/lua53/Makefile" : {
      "ObjectId" : "1019f870712822c3e4da5b762ce936e22903732c",
      "LastModified" : "2017-12-24T01:44:41Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "flyfish/Makefile" : {
      "ObjectId" : "ad5dad95a5f667ffcf0dc326d2da814cf19ce4e1",
      "LastModified" : "2019-03-01T09:54:21Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/Makefile" : {
      "ObjectId" : "d532b3bf931a7473c3b6da888c010baee71967e5",
      "LastModified" : "2019-03-01T09:54:21Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Platform-specific overrides\r\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 1,
    "QMAKE" : 1,
    "MAKEFILE" : 14,
    "AUTOMAKE" : 1
  },
  "ElapsedTime" : 1391
}