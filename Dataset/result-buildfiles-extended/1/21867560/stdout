{
  "Repository" : "21867560",
  "Revision" : "HEAD",
  "ObjectId" : "0ec8c13aa6b43b75da0dcbc1b05aeefbc3209c7b",
  "CommitTime" : "2019-04-16T14:05:20Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "1be9d7fce6a1252afc71400b6c934837df2c92d5",
      "LastModified" : "2018-09-06T13:40:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2013-2018 Fondazione Istituto Italiano di Tecnologia\n\n# \n\n# Licensed under either the GNU Lesser General Public License v3.0 : \n\n# https://www.gnu.org/licenses/lgpl-3.0.html\n\n# or the GNU Lesser General Public License v2.1 :\n\n# https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html\n\n# at your option.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Disable in source build, unless Eclipse is used\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Pick up our CMake scripts - they are all in the cmake subdirectory.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Use options specified in iDynTreeOptions.cmake file\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Find dependecies\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Add external libraries that are embedded in iDynTree\n\n# source tree, if necessary (by default does not adds\n\n# anything) feel free to check teh logic inside\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# add the actual components of the library\n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# add a dox target to generate doxygen documentation\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "bindings/CMakeLists.txt" : {
      "ObjectId" : "151131bdb409691d33c34797cd21cbcf38363cb2",
      "LastModified" : "2017-08-30T10:23:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#############################################################################\n\n## Options for compiling supported languages.  There's nothing magical\n\n## about this list, any SWIG-supported language should work - take a\n\n## look at e.g. ruby code below for how to do it.\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# It is possible to compile matlab/octave bindings without using SWIG\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Remove the deprecation warnings because by definition we always build bindings also of deprecated modules\n",
        "Line" : 26,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# list all dependencies of the process of generating\n\n# SWIG bindings (for now just .i files included in the main\n\n# iDynTree.i file)\n\n# This will not be necessary once http://public.kitware.com/Bug/view.php?id=4147\n\n# is resolved\n\n# (not working at the moment, todo \\TODO fix)\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "bindings/lua/CMakeLists.txt" : {
      "ObjectId" : "210481cc74ab370868c3bcfe65061d060b9e1363",
      "LastModified" : "2016-04-27T08:52:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "bindings/matlab/CMakeLists.txt" : {
      "ObjectId" : "f7f9bcf82135d26997fe1b20946cb133d4eae80b",
      "LastModified" : "2018-06-12T09:51:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# As matlab support is higly experimental for now in swig, we split the binding generation in two phases:\n\n#  * Generation of the .cxx code, left to the author of the library that needs to have a recent (non-standard) swig\n\n#  * Compilation of the .cxx, that is left to the user that compiles the library.\n\n# For doing this we split the traditional swig_add_module macro in two macro: one for generating the wrapper and one\n\n# for compiling it. As soon as upstream swig distributed by the distro gains Matlab support, we can drop this workaround\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Options related to installation directories\n\n# If you want to install bindings for packaging you may need to install\n\n# following several rules (for example placing the .m files in share\n\n# and the compiled libraries in some architecture-specific directory)\n\n# We support this use-cases by exposing this CMake advanced option.\n\n# The default values, however, are choosen to simplify the use of\n\n# the bindings for a developer that compiled the library from source:\n\n# to use the octave bindings just add <prefix>/octave to the octave path,\n\n# to use the matlab bindings just add <prefix>/mex    to the matlab path.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The name of the generated source named is\n\n# defined by the variable swig_generated_file_fullname\n\n# in the SWIG_ADD_SOURCE_TO_MODULE macro in UseSWIG.cmake\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The name of the generated source should instead match the one\n\n# used by SWIG when generating the .m file.\n\n# See https://github.com/jaeandersson/swig/issues/44 for more details\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Directory in which the bindings are generated\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Generate SWIG wrapper\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# generate the wrapper\n",
        "Line" : 66,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# generate files in the source directory, so we can commit it\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#set(CMAKE_SWIG_FLAGS \"-redirectoutput\")\n",
        "Line" : 71,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# use previously generated files\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Set the generated mex name to be iDynTreeMEX, as it the defaul one used by SWIG while generating bindings\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# entry point in the mex file + taking care of visibility and symbol clashes.\n",
        "Line" : 93,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Install the generated front-end to ${CMAKE_INSTALL_PREFIX}/mex\n",
        "Line" : 100,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#On new versions of Clang, MATLAB requires C++11.\n\n#I enable it on all Clangs\n",
        "Line" : 107,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "#this should set explictly the option in xcode. Unfortunately it does not work.\n",
        "Line" : 113,
        "CharPositionInLine" : 14
      },
      "15" : {
        "Text" : "# Compile MEX file\n",
        "Line" : 126,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Install the generated front-end to ${CMAKE_INSTALL_PREFIX}/mex\n",
        "Line" : 141,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# if compile tests compile also matlab/octave tests\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "bindings/matlab/tests/CMakeLists.txt" : {
      "ObjectId" : "38c10e2d6e02c164e61fd058fc3a581baa2b9c0f",
      "LastModified" : "2017-06-02T10:19:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Call moxunit_runtests in ${CMAKE_CURRENT_SOURCE_DIR}\n\n# Furthermore add to the pass the direcotry of iDynTreeMEX.mex* ,\n\n# the location of +iDynTree and the location of MOxUnit\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "bindings/python/CMakeLists.txt" : {
      "ObjectId" : "67910fb27a974a2e0e2b1f7d7fff08ed1b880149",
      "LastModified" : "2016-04-27T08:52:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## in Windows it seems necessary to declare explictly the link_directory\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# installation path is determined reliably on most platforms using distutils\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# if compile tests execute also python tests\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "bindings/python/tests/CMakeLists.txt" : {
      "ObjectId" : "2631adf495bb177e9bcec26040d72c3918bff07d",
      "LastModified" : "2018-03-14T11:41:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/AddInstallRPATHSupport.cmake" : {
      "ObjectId" : "a69347ced96a4cbe8ab9b674329b0f4d5971ab5c",
      "LastModified" : "2018-06-07T09:33:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# AddInstallRPATHSupport\n\n# ----------------------\n\n#\n\n# Add support to RPATH during installation to your project::\n\n#\n\n#   add_install_rpath_support([BIN_DIRS dir [dir]]\n\n#                             [LIB_DIRS dir [dir]]\n\n#                             [DEPENDS condition]\n\n#                             [USE_LINK_PATH])\n\n#\n\n# Normally (depending on the platform) when you install a shared\n\n# library you can either specify its absolute path as the install name,\n\n# or leave just the library name itself. In the former case the library\n\n# will be correctly linked during run time by all executables and other\n\n# shared libraries, but it must not change its install location. This\n\n# is often the case for libraries installed in the system default\n\n# library directory (e.g. ``/usr/lib``).\n\n# In the latter case, instead, the library can be moved anywhere in the\n\n# file system but at run time the dynamic linker must be able to find\n\n# it. This is often accomplished by setting environmental variables\n\n# (i.e. ``LD_LIBRARY_PATH`` on Linux).\n\n# This procedure is usually not desirable for two main reasons:\n\n#\n\n# - by setting the variable you are changing the default behaviour\n\n#   of the dynamic linker thus potentially breaking executables (not as\n\n#   destructive as ``LD_PRELOAD``)\n\n# - the variable will be used only by applications spawned by the shell\n\n#   and not by other processes.\n\n#\n\n# RPATH is aimed to solve the issues introduced by the second\n\n# installation method. Using run-path dependent libraries you can\n\n# create a directory structure containing executables and dependent\n\n# libraries that users can relocate without breaking it.\n\n# A run-path dependent library is a dependent library whose complete\n\n# install name is not known when the library is created.\n\n# Instead, the library specifies that the dynamic loader must resolve\n\n# the library’s install name when it loads the executable that depends\n\n# on the library. The executable or the other shared library will\n\n# hardcode in the binary itself the additional search directories\n\n# to be passed to the dynamic linker. This works great in conjunction\n\n# with relative paths.\n\n# This macro will enable support to RPATH to your project.\n\n# It will enable the following things:\n\n#\n\n#  - If the project builds shared libraries it will generate a run-path\n\n#    enabled shared library, i.e. its install name will be resolved\n\n#    only at run time.\n\n#  - In all cases (building executables and/or shared libraries)\n\n#    dependent shared libraries with RPATH support will be properly\n\n#\n\n# The macro has the following parameters:\n\n#\n\n# Options:\n\n#  - ``USE_LINK_PATH``: if passed the macro will automatically adds to\n\n#    the RPATH the path to all the dependent libraries\n\n#\n\n# Arguments:\n\n#  - ``BIN_DIRS`` list of directories when the targets (bins or shared\n\n#    libraries) will be installed\n\n#  - ``LIB_DIRS`` list of directories to be added to the RPATH. These\n\n#    directories will be added \"relative\" w.r.t. the ``BIN_DIRS``\n\n#  - ``DEPENDS`` boolean variable. If ``TRUE`` RPATH will be enabled.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=======================================================================\n\n# Copyright 2014 RBCS, Istituto Italiano di Tecnologia\n\n# @author Francesco Romano <francesco.romano@iit.it>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=======================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n# License text for the above reference.)\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Enable RPATH on OSX. This also suppress warnings on CMake >= 3.0\n",
        "Line" : 97,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Find system implicit lib directories\n",
        "Line" : 100,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# is this a debian system ?\n",
        "Line" : 102,
        "CharPositionInLine" : 37
      },
      "5" : {
        "Text" : "# This is relative RPATH for libraries built in the same project\n",
        "Line" : 108,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# add the automatically determined parts of the RPATH\n\n# which point to directories outside the build tree to the install RPATH\n",
        "Line" : 126,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "cmake/AddUninstallTarget.cmake" : {
      "ObjectId" : "cfec3f5a7c3fac602b62d2abaebb95a9eb0ea6e2",
      "LastModified" : "2015-05-18T11:09:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# AddUninstallTarget\n\n# ------------------\n\n#\n\n# Add the \"uninstall\" target for your project::\n\n#\n\n#   include(AddUninstallTarget)\n\n#\n\n#\n\n# will create a file cmake_uninstall.cmake in the build directory and add a\n\n# custom target uninstall that will remove the files installed by your package\n\n# (using install_manifest.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2008-2013 Kitware, Inc.\n\n# Copyright 2013 iCub Facility, Istituto Italiano di Tecnologia\n\n#   Authors: Daniele E. Domenichelli <daniele.domenichelli@iit.it>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/CMakePackageConfigHelpers.cmake" : {
      "ObjectId" : "c6dc14199eb7687a4fe7fb59e8054e292fef6f96",
      "LastModified" : "2015-05-18T11:09:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# CMakePackageConfigHelpers\n\n# -------------------------\n\n#\n\n# Helpers functions for creating config files that can be included by other\n\n# projects to find and use a package.\n\n#\n\n# Adds the :command:`configure_package_config_file()` and\n\n# :command:`write_basic_package_version_file()` commands.\n\n#\n\n# Generating a Package Configuration File\n\n# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n#\n\n# .. command:: configure_package_config_file\n\n#\n\n#  Create a config file for a project::\n\n#\n\n#     configure_package_config_file(<input> <output> INSTALL_DESTINATION <path>\n\n#                                                    [PATH_VARS <var1> <var2> ... <varN>]\n\n#                                                    [NO_SET_AND_CHECK_MACRO]\n\n#                                                    [NO_CHECK_REQUIRED_COMPONENTS_MACRO]\n\n#                                                    [INSTALL_PREFIX <path>])\n\n#\n\n#\n\n# ``configure_package_config_file()`` should be used instead of the plain\n\n# :command:`configure_file()` command when creating the ``<Name>Config.cmake``\n\n# or ``<Name>-config.cmake`` file for installing a project or library.  It helps\n\n# making the resulting package relocatable by avoiding hardcoded paths in the\n\n# installed ``Config.cmake`` file.\n\n#\n\n# In a ``FooConfig.cmake`` file there may be code like this to make the install\n\n# destinations know to the using project:\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#    set(FOO_INCLUDE_DIR   \"@CMAKE_INSTALL_FULL_INCLUDEDIR@\" )\n\n#    set(FOO_DATA_DIR   \"@CMAKE_INSTALL_PREFIX@/@RELATIVE_DATA_INSTALL_DIR@\" )\n\n#    set(FOO_ICONS_DIR   \"@CMAKE_INSTALL_PREFIX@/share/icons\" )\n\n#    ...logic to determine installedPrefix from the own location...\n\n#    set(FOO_CONFIG_DIR  \"${installedPrefix}/@CONFIG_INSTALL_DIR@\" )\n\n#\n\n# All 4 options shown above are not sufficient, since the first 3 hardcode the\n\n# absolute directory locations, and the 4th case works only if the logic to\n\n# determine the ``installedPrefix`` is correct, and if ``CONFIG_INSTALL_DIR``\n\n# contains a relative path, which in general cannot be guaranteed.  This has the\n\n# effect that the resulting ``FooConfig.cmake`` file would work poorly under\n\n# Windows and OSX, where users are used to choose the install location of a\n\n# binary package at install time, independent from how\n\n# :variable:`CMAKE_INSTALL_PREFIX` was set at build/cmake time.\n\n#\n\n# Using ``configure_package_config_file`` helps.  If used correctly, it makes\n\n# the resulting ``FooConfig.cmake`` file relocatable.  Usage:\n\n#\n\n#    1. write a ``FooConfig.cmake.in`` file as you are used to\n\n#    2. insert a line containing only the string ``@PACKAGE_INIT@``\n\n#    3. instead of ``set(FOO_DIR \"@SOME_INSTALL_DIR@\")``, use\n\n#       ``set(FOO_DIR \"@PACKAGE_SOME_INSTALL_DIR@\")`` (this must be after the\n\n#       ``@PACKAGE_INIT@`` line)\n\n#    4. instead of using the normal :command:`configure_file()`, use\n\n#       ``configure_package_config_file()``\n\n#\n\n#\n\n#\n\n# The ``<input>`` and ``<output>`` arguments are the input and output file, the\n\n# same way as in :command:`configure_file()`.\n\n#\n\n# The ``<path>`` given to ``INSTALL_DESTINATION`` must be the destination where\n\n# the ``FooConfig.cmake`` file will be installed to.  This path can either be\n\n# absolute, or relative to the ``INSTALL_PREFIX`` path.\n\n#\n\n# The variables ``<var1>`` to ``<varN>`` given as ``PATH_VARS`` are the\n\n# variables which contain install destinations.  For each of them the macro will\n\n# create a helper variable ``PACKAGE_<var...>``.  These helper variables must be\n\n# used in the ``FooConfig.cmake.in`` file for setting the installed location.\n\n# They are calculated by ``configure_package_config_file`` so that they are\n\n# always relative to the installed location of the package.  This works both for\n\n# relative and also for absolute locations.  For absolute locations it works\n\n# only if the absolute location is a subdirectory of ``INSTALL_PREFIX``.\n\n#\n\n# If the ``INSTALL_PREFIX`` argument is passed, this is used as base path to\n\n# calculate all the relative paths.  The ``<path>`` argument must be an absolute\n\n# path.  If this argument is not passed, the :variable:`CMAKE_INSTALL_PREFIX`\n\n# variable will be used instead.  The default value is good when generating a\n\n# FooConfig.cmake file to use your package from the install tree.  When\n\n# generating a FooConfig.cmake file to use your package from the build tree this\n\n# option should be used.\n\n#\n\n# By default ``configure_package_config_file`` also generates two helper macros,\n\n# ``set_and_check()`` and ``check_required_components()`` into the\n\n# ``FooConfig.cmake`` file.\n\n#\n\n# ``set_and_check()`` should be used instead of the normal ``set()`` command for\n\n# setting directories and file locations.  Additionally to setting the variable\n\n# it also checks that the referenced file or directory actually exists and fails\n\n# with a ``FATAL_ERROR`` otherwise.  This makes sure that the created\n\n# ``FooConfig.cmake`` file does not contain wrong references.\n\n# When using the ``NO_SET_AND_CHECK_MACRO``, this macro is not generated\n\n# into the ``FooConfig.cmake`` file.\n\n#\n\n# ``check_required_components(<package_name>)`` should be called at the end of\n\n# the ``FooConfig.cmake`` file if the package supports components.  This macro\n\n# checks whether all requested, non-optional components have been found, and if\n\n# this is not the case, sets the ``Foo_FOUND`` variable to ``FALSE``, so that\n\n# the package is considered to be not found.  It does that by testing the\n\n# ``Foo_<Component>_FOUND`` variables for all requested required components.\n\n# When using the ``NO_CHECK_REQUIRED_COMPONENTS_MACRO`` option, this macro is\n\n# not generated into the ``FooConfig.cmake`` file.\n\n#\n\n# For an example see below the documentation for\n\n# :command:`write_basic_package_version_file()`.\n\n#\n\n# Generating a Package Version File\n\n# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n#\n\n# .. command:: write_basic_package_version_file\n\n#\n\n#  Create a version file for a project::\n\n#\n\n#     write_basic_package_version_file(<filename>\n\n#                                      [VERSION <major.minor.patch>]\n\n#                                      COMPATIBILITY <AnyNewerVersion|SameMajorVersion|ExactVersion> )\n\n#\n\n#\n\n# Writes a file for use as ``<package>ConfigVersion.cmake`` file to\n\n# ``<filename>``.  See the documentation of :command:`find_package()` for\n\n# details on this.\n\n#\n\n# ``<filename>`` is the output filename, it should be in the build tree.\n\n# ``<major.minor.patch>`` is the version number of the project to be installed.\n\n#\n\n# If no ``VERSION`` is given, the :variable:`PROJECT_VERSION` variable is used.\n\n# If this hasn't been set, it errors out.\n\n#\n\n# The ``COMPATIBILITY`` mode ``AnyNewerVersion`` means that the installed\n\n# package version will be considered compatible if it is newer or exactly the\n\n# same as the requested version.  This mode should be used for packages which\n\n# are fully backward compatible, also across major versions.\n\n# If ``SameMajorVersion`` is used instead, then the behaviour differs from\n\n# ``AnyNewerVersion`` in that the major version number must be the same as\n\n# requested, e.g.  version 2.0 will not be considered compatible if 1.0 is\n\n# requested.  This mode should be used for packages which guarantee backward\n\n# compatibility within the same major version.\n\n# If ``ExactVersion`` is used, then the package is only considered compatible if\n\n# the requested version matches exactly its own version number (not considering\n\n# the tweak version).  For example, version 1.2.3 of a package is only\n\n# considered compatible to requested version 1.2.3.  This mode is for packages\n\n# without compatibility guarantees.\n\n# If your project has more elaborated version matching rules, you will need to\n\n# write your own custom ``ConfigVersion.cmake`` file instead of using this\n\n# macro.\n\n#\n\n# Internally, this macro executes :command:`configure_file()` to create the\n\n# resulting version file.  Depending on the ``COMPATIBLITY``, either the file\n\n# ``BasicConfigVersion-SameMajorVersion.cmake.in`` or\n\n# ``BasicConfigVersion-AnyNewerVersion.cmake.in`` is used.  Please note that\n\n# these two files are internal to CMake and you should not call\n\n# :command:`configure_file()` on them yourself, but they can be used as starting\n\n# point to create more sophisticted custom ``ConfigVersion.cmake`` files.\n\n#\n\n# Example Generating Package Files\n\n# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n#\n\n# Example using both :command:`configure_package_config_file` and\n\n# ``write_basic_package_version_file()``:\n\n#\n\n# ``CMakeLists.txt``:\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#    set(INCLUDE_INSTALL_DIR include/ ... CACHE )\n\n#    set(LIB_INSTALL_DIR lib/ ... CACHE )\n\n#    set(SYSCONFIG_INSTALL_DIR etc/foo/ ... CACHE )\n\n#    ...\n\n#    include(CMakePackageConfigHelpers)\n\n#    configure_package_config_file(FooConfig.cmake.in ${CMAKE_CURRENT_BINARY_DIR}/FooConfig.cmake\n\n#                                  INSTALL_DESTINATION ${LIB_INSTALL_DIR}/Foo/cmake\n\n#                                  PATH_VARS INCLUDE_INSTALL_DIR SYSCONFIG_INSTALL_DIR)\n\n#    write_basic_package_version_file(${CMAKE_CURRENT_BINARY_DIR}/FooConfigVersion.cmake\n\n#                                     VERSION 1.2.3\n\n#                                     COMPATIBILITY SameMajorVersion )\n\n#    install(FILES ${CMAKE_CURRENT_BINARY_DIR}/FooConfig.cmake ${CMAKE_CURRENT_BINARY_DIR}/FooConfigVersion.cmake\n\n#            DESTINATION ${LIB_INSTALL_DIR}/Foo/cmake )\n\n#\n\n# ``FooConfig.cmake.in``:\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#    set(FOO_VERSION x.y.z)\n\n#    ...\n\n#    @PACKAGE_INIT@\n\n#    ...\n\n#    set_and_check(FOO_INCLUDE_DIR \"@PACKAGE_INCLUDE_INSTALL_DIR@\")\n\n#    set_and_check(FOO_SYSCONFIG_DIR \"@PACKAGE_SYSCONFIG_INSTALL_DIR@\")\n\n#\n\n#    check_required_components(Foo)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2012 Alexander Neundorf <neundorf@kde.org>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Handle \"/usr move\" symlinks created by some Linux distros.\n",
        "Line" : 276,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "cmake/ECMEnableSanitizers.cmake" : {
      "ObjectId" : "5f7cb73e976d6a6f40e8a4457ce6509bb700e7d6",
      "LastModified" : "2018-06-07T09:33:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# ECMEnableSanitizers\n\n# -------------------\n\n#\n\n# Enable compiler sanitizer flags.\n\n#\n\n# The following sanitizers are supported:\n\n#\n\n# - Address Sanitizer\n\n# - Memory Sanitizer\n\n# - Thread Sanitizer\n\n# - Leak Sanitizer\n\n# - Undefined Behaviour Sanitizer\n\n#\n\n# All of them are implemented in Clang, depending on your version, and\n\n# there is an work in progress in GCC, where some of them are currently\n\n# implemented.\n\n#\n\n# This module will check your current compiler version to see if it\n\n# supports the sanitizers that you want to enable\n\n#\n\n# Usage\n\n# =====\n\n#\n\n# Simply add::\n\n#\n\n#    include(ECMEnableSanitizers)\n\n#\n\n# to your ``CMakeLists.txt``. Note that this module is included in\n\n# KDECompilerSettings, so projects using that module do not need to also\n\n# include this one.\n\n#\n\n# The sanitizers are not enabled by default. Instead, you must set\n\n# ``ECM_ENABLE_SANITIZERS`` (either in your ``CMakeLists.txt`` or on the\n\n# command line) to a semicolon-separated list of sanitizers you wish to enable.\n\n# The options are:\n\n#\n\n# - address\n\n# - memory\n\n# - thread\n\n# - leak\n\n# - undefined\n\n#\n\n# The sanitizers \"address\", \"memory\" and \"thread\" are mutually exclusive.  You\n\n# cannot enable two of them in the same build.\n\n#\n\n# \"leak\" requires the  \"address\" sanitizer.\n\n#\n\n# .. note::\n\n#\n\n#   To reduce the overhead induced by the instrumentation of the sanitizers, it\n\n#   is advised to enable compiler optimizations (``-O1`` or higher).\n\n#\n\n# Example\n\n# =======\n\n#\n\n# This is an example of usage::\n\n#\n\n#   mkdir build\n\n#   cd build\n\n#   cmake -DECM_ENABLE_SANITIZERS='address;leak;undefined' ..\n\n#\n\n# .. note::\n\n#\n\n#   Most of the sanitizers will require Clang. To enable it, use::\n\n#\n\n#     -DCMAKE_CXX_COMPILER=clang++\n\n#\n\n# Since 1.3.0.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2014 Mathieu Tarral <mathieu.tarral@gmail.com>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file COPYING-CMAKE-SCRIPTS for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of extra-cmake-modules, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# MACRO check_compiler_version\n\n#-----------------------------\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# error !\n",
        "Line" : 100,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# MACRO check_compiler_support\n\n#------------------------------\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# for each element of the ECM_ENABLE_SANITIZERS list\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# lowercase filter\n",
        "Line" : 138,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# check option and enable appropriate flags\n",
        "Line" : 140,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "cmake/ExtractVersion.cmake" : {
      "ObjectId" : "00abce40183809e45fc4b8bcfbfbaa2d5956351d",
      "LastModified" : "2018-06-07T09:33:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# ExtractVersion\n\n# --------------\n\n#\n\n# Extracts version numbers from a version string::\n\n#\n\n#  extract_version (<name> [REVERSE_NAME])\n\n#\n\n#\n\n# Tries to extract the following variables (the second version is used\n\n# if REVERSE_NAME is set as argument)::\n\n#\n\n#   <name>_MAJOR_VERSION or <name>_VERSION_MAJOR - <name> major version\n\n#   <name>_MINOR_VERSION or <name>_VERSION_MINOR - <name> minor version\n\n#   <name>_PATCH_VERSION or <name>_VERSION_PATCH - <name> patch version\n\n#   <name>_TWEAK_VERSION or <name>_VERSION_TWEAK - <name> tweak version\n\n#   <name>_VERSION_COUNT - number of version components, 0 to 4\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2013 iCub Facility, Istituto Italiano di Tecnologia\n\n#   Authors: Daniele E. Domenichelli <daniele.domenichelli@iit.it>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindEigen3.cmake" : {
      "ObjectId" : "c0995981fd9b0317f0b0949e6021968e397682d6",
      "LastModified" : "2018-06-07T09:33:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Eigen3 lib\n\n#\n\n# This module supports requiring a minimum version, e.g. you can do\n\n#   find_package(Eigen3 3.1.2)\n\n# to require version 3.1.2 or newer of Eigen3.\n\n#\n\n# Once done this will define\n\n#\n\n#  EIGEN3_FOUND - system has eigen lib with correct version\n\n#  EIGEN3_INCLUDE_DIR - the eigen include directory\n\n#  EIGEN3_VERSION - eigen version\n\n#\n\n# This module reads hints about search locations from \n\n# the following enviroment variables:\n\n#\n\n# EIGEN3_ROOT\n\n# EIGEN3_ROOT_DIR\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Copyright (c) 2009 Benoit Jacob <jacob.benoit.1@gmail.com>\n\n# Redistribution and use is allowed according to the terms of the 2-clause BSD license.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/FindIPOPT.cmake" : {
      "ObjectId" : "975adc4cb4768ffcb21e4a8a6be5f76708e14837",
      "LastModified" : "2018-06-07T09:33:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindIPOPT\n\n# ---------\n\n#\n\n# Try to locate the IPOPT library\n\n#\n\n# On non Windows systems, use pkg-config to try to locate the library,\n\n# if this fails then try to locate the library in the directory pointed by\n\n# the IPOPT_DIR enviromental variable.\n\n#\n\n# On Windows systems,  just try to find the library using the IPOPT_DIR\n\n# enviromental variable.\n\n#\n\n# Create the following variables::\n\n#\n\n#  IPOPT_INCLUDE_DIRS - Directories to include to use IPOPT\n\n#  IPOPT_LIBRARIES    - Default library to link against to use IPOPT\n\n#  IPOPT_DEFINITIONS  - Flags to be added to linker's options\n\n#  IPOPT_LINK_FLAGS   - Flags to be added to linker's options\n\n#  IPOPT_FOUND        - If false, don't try to use IPOPT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright (C) 2008-2010 RobotCub Consortium\n\n# Copyright (C) 2016 iCub Facility - Istituto Italiano di Tecnologia\n\n#   Authors: Ugo Pattacini <ugo.pattacini@iit.it>\n\n#   Authors: Daniele E. Domenichelli <daniele.domenichelli@iit.it>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of YCM, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# On non Windows systems we use PkgConfig to find IPOPT\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Workaround for https://github.com/robotology/icub-main/issues/418\n",
        "Line" : 63,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# If pkg-config fails, try to find the package using IPOPT_DIR\n",
        "Line" : 76,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# parse the file and acquire the dependencies\n",
        "Line" : 97,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# remove any possible auto-dependency\n",
        "Line" : 102,
        "CharPositionInLine" : 76
      },
      "7" : {
        "Text" : "# use the find_library command in order to prepare rpath correctly\n",
        "Line" : 105,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# handle non-system libraries (e.g. coinblas)\n",
        "Line" : 112,
        "CharPositionInLine" : 12
      },
      "9" : {
        "Text" : "# handle system libraries (e.g. gfortran)\n",
        "Line" : 115,
        "CharPositionInLine" : 12
      },
      "10" : {
        "Text" : "# Windows platforms\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Some old version of binary releases of IPOPT have Intel fortran\n\n# libraries embedded in the library, newer releases require them to\n\n# be explicitly linked.\n",
        "Line" : 144,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Find the lib.exe executable\n",
        "Line" : 150,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# backup PATH environment variable\n",
        "Line" : 165,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Add th MSVC \"Common7/IDE\" dir containing the dlls in the PATH when needed.\n",
        "Line" : 168,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 15
    },
    "cmake/FindIrrlicht.cmake" : {
      "ObjectId" : "2454034f840a063bb1fa0e3ef7a28bcd125d501e",
      "LastModified" : "2018-06-07T09:33:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Irrlicht\n\n# Once done this will define\n\n#\n\n#  IRRLICHT_FOUND - system has Irrlicht\n\n#  IRRLICHT_INCLUDE_DIRS - the Irrlicht include directory\n\n#  IRRLICHT_LIBRARIES - Link these to use Irrlicht\n\n#  IRRLICHT_DEFINITIONS - Compiler switches required for using Irrlicht\n\n#\n\n#  Copyright (c) 2006 Andreas Schneider <mail@cynapses.org>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# show the IRRLICHT_INCLUDE_DIRS and IRRLICHT_LIBRARIES variables only in the advanced view\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/FindMatlab.cmake" : {
      "ObjectId" : "7a7a326a4dbd100761443738fbcb0758aaced5a6",
      "LastModified" : "2018-06-07T09:33:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindMatlab\n\n# ----------\n\n#\n\n# Finds Matlab installations and provides Matlab tools and libraries to cmake.\n\n#\n\n# This package first intention is to find the libraries associated with Matlab\n\n# in order to be able to build Matlab extensions (mex files). It can also be\n\n# used:\n\n#\n\n# * run specific commands in Matlab\n\n# * declare Matlab unit test\n\n# * retrieve various information from Matlab (mex extensions, versions and\n\n#   release queries, ...)\n\n#\n\n# The module supports the following components:\n\n#\n\n# * ``MX_LIBRARY`` and ``ENG_LIBRARY`` respectively the MX and ENG libraries of\n\n#   Matlab\n\n# * ``MAIN_PROGRAM`` the Matlab binary program.\n\n#\n\n# .. note::\n\n#\n\n#   The version given to the :command:`find_package` directive is the Matlab\n\n#   **version**, which should not be confused with the Matlab *release* name\n\n#   (eg. `R2014`).\n\n#   The :command:`matlab_get_version_from_release_name` and\n\n#   :command:`matlab_get_release_name_from_version` allow a mapping\n\n#   from the release name to the version.\n\n#\n\n# The variable :variable:`Matlab_ROOT_DIR` may be specified in order to give\n\n# the path of the desired Matlab version. Otherwise, the behaviour is platform\n\n# specific:\n\n#\n\n# * Windows: The installed versions of Matlab are retrieved from the\n\n#   Windows registry\n\n# * OS X: The installed versions of Matlab are given by the MATLAB\n\n#   paths in ``/Application``. If no such application is found, it falls back\n\n#   to the one that might be accessible from the PATH.\n\n# * Unix: The desired Matlab should be accessible from the PATH.\n\n#\n\n# Additional information is provided when :variable:`MATLAB_FIND_DEBUG` is set.\n\n# When a Matlab binary is found automatically and the ``MATLAB_VERSION``\n\n# is not given, the version is queried from Matlab directly.\n\n# On Windows, it can make a window running Matlab appear.\n\n#\n\n# The mapping of the release names and the version of Matlab is performed by\n\n# defining pairs (name, version).  The variable\n\n# :variable:`MATLAB_ADDITIONAL_VERSIONS` may be provided before the call to\n\n# the :command:`find_package` in order to handle additional versions.\n\n#\n\n# A Matlab scripts can be added to the set of tests using the\n\n# :command:`matlab_add_unit_test`. By default, the Matlab unit test framework\n\n# will be used (>= 2013a) to run this script, but regular ``.m`` files\n\n# returning an exit code can be used as well (0 indicating a success).\n\n#\n\n# Module Input Variables\n\n# ----------------------\n\n#\n\n# Users or projects may set the following variables to configure the module\n\n# behaviour:\n\n#\n\n# :variable:`Matlab_ROOT_DIR`\n\n#   the root of the Matlab installation.\n\n# :variable:`MATLAB_FIND_DEBUG`\n\n#   outputs debug information\n\n# :variable:`MATLAB_ADDITIONAL_VERSIONS`\n\n#   additional versions of Matlab for the automatic retrieval of the installed\n\n#   versions.\n\n#\n\n# Variables defined by the module\n\n# -------------------------------\n\n#\n\n# Result variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# ``Matlab_FOUND``\n\n#   ``TRUE`` if the Matlab installation is found, ``FALSE``\n\n#   otherwise. All variable below are defined if Matlab is found.\n\n# ``Matlab_ROOT_DIR``\n\n#   the final root of the Matlab installation determined by the FindMatlab\n\n#   module.\n\n# ``Matlab_MAIN_PROGRAM``\n\n#   the Matlab binary program. Available only if the component ``MAIN_PROGRAM``\n\n#   is given in the :command:`find_package` directive.\n\n# ``Matlab_INCLUDE_DIRS``\n\n#  the path of the Matlab libraries headers\n\n# ``Matlab_MEX_LIBRARY``\n\n#   library for mex, always available.\n\n# ``Matlab_MX_LIBRARY``\n\n#   mx library of Matlab (arrays). Available only if the component\n\n#   ``MX_LIBRARY`` has been requested.\n\n# ``Matlab_ENG_LIBRARY``\n\n#   Matlab engine library. Available only if the component ``ENG_LIBRARY``\n\n#   is requested.\n\n# ``Matlab_LIBRARIES``\n\n#   the whole set of libraries of Matlab\n\n# ``Matlab_MEX_COMPILER``\n\n#   the mex compiler of Matlab. Currently not used.\n\n#   Available only if the component ``MEX_COMPILER`` is asked\n\n#\n\n# Cached variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# ``Matlab_MEX_EXTENSION``\n\n#   the extension of the mex files for the current platform (given by Matlab).\n\n# ``Matlab_ROOT_DIR``\n\n#   the location of the root of the Matlab installation found. If this value\n\n#   is changed by the user, the result variables are recomputed.\n\n#\n\n# Provided macros\n\n# ---------------\n\n#\n\n# :command:`matlab_get_version_from_release_name`\n\n#   returns the version from the release name\n\n# :command:`matlab_get_release_name_from_version`\n\n#   returns the release name from the Matlab version\n\n#\n\n# Provided functions\n\n# ------------------\n\n#\n\n# :command:`matlab_add_mex`\n\n#   adds a target compiling a MEX file.\n\n# :command:`matlab_add_unit_test`\n\n#   adds a Matlab unit test file as a test to the project.\n\n# :command:`matlab_extract_all_installed_versions_from_registry`\n\n#   parses the registry for all Matlab versions. Available on Windows only.\n\n#   The part of the registry parsed is dependent on the host processor\n\n# :command:`matlab_get_all_valid_matlab_roots_from_registry`\n\n#   returns all the possible Matlab paths, according to a previously\n\n#   given list. Only the existing/accessible paths are kept. This is mainly\n\n#   useful for the searching all possible Matlab installation.\n\n# :command:`matlab_get_mex_suffix`\n\n#   returns the suffix to be used for the mex files\n\n#   (platform/architecture dependant)\n\n# :command:`matlab_get_version_from_matlab_run`\n\n#   returns the version of Matlab, given the full directory of the Matlab program.\n\n#\n\n#\n\n# Known issues\n\n# ------------\n\n#\n\n# **Symbol clash in a MEX target**\n\n#   By default, every symbols inside a MEX\n\n#   file defined with the command :command:`matlab_add_mex` have hidden\n\n#   visibility, except for the entry point. This is the default behaviour of\n\n#   the MEX compiler, which lowers the risk of symbol collision between the\n\n#   libraries shipped with Matlab, and the libraries to which the MEX file is\n\n#   linking to. This is also the default on Windows platforms.\n\n#\n\n#   However, this is not sufficient in certain case, where for instance your\n\n#   MEX file is linking against libraries that are already loaded by Matlab,\n\n#   even if those libraries have different SONAMES.\n\n#   A possible solution is to hide the symbols of the libraries to which the\n\n#   MEX target is linking to. This can be achieved in GNU GCC compilers with\n\n#   the linker option ``-Wl,--exclude-libs,ALL``.\n\n#\n\n# **Tests using GPU resources**\n\n#   in case your MEX file is using the GPU and\n\n#   in order to be able to run unit tests on this MEX file, the GPU resources\n\n#   should be properly released by Matlab. A possible solution is to make\n\n#   Matlab aware of the use of the GPU resources in the session, which can be\n\n#   performed by a command such as ``D = gpuDevice()`` at the beginning of\n\n#   the test script (or via a fixture).\n\n#\n\n#\n\n# Reference\n\n# --------------\n\n#\n\n# .. variable:: Matlab_ROOT_DIR\n\n#\n\n#    The root folder of the Matlab installation. If set before the call to\n\n#    :command:`find_package`, the module will look for the components in that\n\n#    path. If not set, then an automatic search of Matlab\n\n#    will be performed. If set, it should point to a valid version of Matlab.\n\n#\n\n# .. variable:: MATLAB_FIND_DEBUG\n\n#\n\n#    If set, the lookup of Matlab and the intermediate configuration steps are\n\n#    outputted to the console.\n\n#\n\n# .. variable:: MATLAB_ADDITIONAL_VERSIONS\n\n#\n\n#   If set, specifies additional versions of Matlab that may be looked for.\n\n#   The variable should be a list of strings, organised by pairs of release\n\n#   name and versions, such as follows::\n\n#\n\n#     set(MATLAB_ADDITIONAL_VERSIONS\n\n#         \"release_name1=corresponding_version1\"\n\n#         \"release_name2=corresponding_version2\"\n\n#         ...\n\n#         )\n\n#\n\n#   Example::\n\n#\n\n#     set(MATLAB_ADDITIONAL_VERSIONS\n\n#         \"R2013b=8.2\"\n\n#         \"R2013a=8.1\"\n\n#         \"R2012b=8.0\")\n\n#\n\n#   The order of entries in this list matters when several versions of\n\n#   Matlab are installed. The priority is set according to the ordering in\n\n#   this list.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2014-2015 Raffi Enficiaud, Max Planck Society\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The currently supported versions. Other version can be added by the user by\n\n# providing MATLAB_ADDITIONAL_VERSIONS\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# temporary folder for all Matlab runs\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#.rst:\n\n# .. command:: matlab_get_version_from_release_name\n\n#\n\n#   Returns the version of Matlab (17.58) from a release name (R2017k)\n",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#.rst:\n\n# .. command:: matlab_get_release_name_from_version\n\n#\n\n#   Returns the release name (R2017k) from the version of Matlab (17.58)\n",
        "Line" : 279,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# extracts all the supported release names (R2017k...) of Matlab\n\n# internal use\n",
        "Line" : 306,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# extracts all the supported versions of Matlab\n\n# internal use\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#.rst:\n\n# .. command:: matlab_extract_all_installed_versions_from_registry\n\n#\n\n#   This function parses the registry and founds the Matlab versions that are\n\n#   installed. The found versions are returned in `matlab_versions`.\n\n#   Set `win64` to `TRUE` if the 64 bit version of Matlab should be looked for\n\n#   The returned list contains all versions under\n\n#   ``HKLM\\\\SOFTWARE\\\\Mathworks\\\\MATLAB`` or an empty list in case an error\n\n#   occurred (or nothing found).\n\n#\n\n#   .. note::\n\n#\n\n#     Only the versions are provided. No check is made over the existence of the\n\n#     installation referenced in the registry,\n\n#\n",
        "Line" : 339,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# /reg:64 should be added on 64 bits capable OSs in order to enable the\n\n# redirection of 64 bits applications\n",
        "Line" : 367,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# (internal)\n",
        "Line" : 415,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# get the supported versions\n",
        "Line" : 417,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# this is a manual population of the versions we want to look for\n\n# this can be done as is, but preferably with the call to\n\n# matlab_get_supported_versions and variable\n",
        "Line" : 422,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# populating the versions we want to look for\n\n# set(matlab_supported_versions)\n",
        "Line" : 426,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# # Matlab 7\n\n# set(matlab_major 7)\n\n# foreach(current_matlab_minor RANGE 4 20)\n",
        "Line" : 429,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# list(APPEND matlab_supported_versions \"${matlab_major}.${current_matlab_minor}\")\n",
        "Line" : 432,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# endforeach(current_matlab_minor)\n",
        "Line" : 433,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# # Matlab 8\n\n# set(matlab_major 8)\n\n# foreach(current_matlab_minor RANGE 0 5)\n",
        "Line" : 435,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# list(APPEND matlab_supported_versions \"${matlab_major}.${current_matlab_minor}\")\n",
        "Line" : 438,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# endforeach(current_matlab_minor)\n",
        "Line" : 439,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# # taking into account the possible additional versions provided by the user\n\n# if(DEFINED MATLAB_ADDITIONAL_VERSIONS)\n",
        "Line" : 441,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# list(APPEND matlab_supported_versions MATLAB_ADDITIONAL_VERSIONS)\n",
        "Line" : 443,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# endif()\n",
        "Line" : 444,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# we order from more recent to older\n",
        "Line" : 447,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "#.rst:\n\n# .. command:: matlab_get_all_valid_matlab_roots_from_registry\n\n#\n\n#   Populates the Matlab root with valid versions of Matlab.\n\n#   The returned matlab_roots is organized in pairs\n\n#   ``(version_number,matlab_root_path)``.\n\n#\n\n#   ::\n\n#\n\n#     matlab_get_all_valid_matlab_roots_from_registry(\n\n#         matlab_versions\n\n#         matlab_roots)\n\n#\n\n#   ``matlab_versions``\n\n#     the versions of each of the Matlab installations\n\n#   ``matlab_roots``\n\n#     the location of each of the Matlab installations\n",
        "Line" : 463,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# The matlab_versions comes either from\n\n# extract_matlab_versions_from_registry_brute_force or\n\n# matlab_extract_all_installed_versions_from_registry.\n",
        "Line" : 482,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "#.rst:\n\n# .. command:: matlab_get_mex_suffix\n\n#\n\n#   Returns the extension of the mex files (the suffixes).\n\n#   This function should not be called before the appropriate Matlab root has\n\n#   been found.\n\n#\n\n#   ::\n\n#\n\n#     matlab_get_mex_suffix(\n\n#         matlab_root\n\n#         mex_suffix)\n\n#\n\n#   ``matlab_root``\n\n#     the root of the Matlab installation\n\n#   ``mex_suffix``\n\n#     the variable name in which the suffix will be returned.\n",
        "Line" : 504,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# todo setup the extension properly. Currently I do not know if this is\n\n# sufficient for all win32 distributions.\n\n# there is also CMAKE_EXECUTABLE_SUFFIX that could be tweaked\n",
        "Line" : 523,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# we first try without suffix, since cmake does not understand a list with\n\n# one empty string element\n",
        "Line" : 531,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# this call should populate the cache automatically\n",
        "Line" : 543,
        "CharPositionInLine" : 6
      },
      "30" : {
        "Text" : "# the program has been found?\n",
        "Line" : 555,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "#.rst:\n\n# .. command:: matlab_get_version_from_matlab_run\n\n#\n\n#   This function runs Matlab program specified on arguments and extracts its\n\n#   version.\n\n#\n\n#   ::\n\n#\n\n#     matlab_get_version_from_matlab_run(\n\n#         matlab_binary_path\n\n#         matlab_list_versions)\n\n#\n\n#   ``matlab_binary_path``\n\n#     the location of the `matlab` binary executable\n\n#   ``matlab_list_versions``\n\n#     the version extracted from Matlab\n",
        "Line" : 587,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# the log file is needed since on windows the command executes in a new\n\n# window and it is not possible to get back the answer of Matlab\n\n# the -wait command is needed on windows, otherwise the call returns\n\n# immediately after the program launches itself.\n",
        "Line" : 620,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# timeout set to 30 seconds, in case it does not start\n\n# note as said before OUTPUT_VARIABLE cannot be used in a platform\n\n# independent manner however, not setting it would flush the output of Matlab\n\n# in the current console (unix variant)\n",
        "Line" : 635,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# if successful, read back the log\n",
        "Line" : 662,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "#.rst:\n\n# .. command:: matlab_add_unit_test\n\n#\n\n#   Adds a Matlab unit test to the test set of cmake/ctest.\n\n#   This command requires the component ``MAIN_PROGRAM``.\n\n#   The unit test uses the Matlab unittest framework (default, available\n\n#   starting Matlab 2013b+) except if the option ``NO_UNITTEST_FRAMEWORK``\n\n#   is given.\n\n#\n\n#   The function expects one Matlab test script file to be given.\n\n#   In the case ``NO_UNITTEST_FRAMEWORK`` is given, the unittest script file\n\n#   should contain the script to be run, plus an exit command with the exit\n\n#   value. This exit value will be passed to the ctest framework (0 success,\n\n#   non 0 failure). Additional arguments accepted by :command:`add_test` can be\n\n#   passed through ``TEST_ARGS`` (eg. ``CONFIGURATION <config> ...``).\n\n#\n\n#   ::\n\n#\n\n#     matlab_add_unit_test(\n\n#         NAME <name>\n\n#         UNITTEST_FILE matlab_file_containing_unittest.m\n\n#         [UNITTEST_PRECOMMAND matlab_command_to_run]\n\n#         [TIMEOUT timeout]\n\n#         [ADDITIONAL_PATH path1 [path2 ...]]\n\n#         [MATLAB_ADDITIONAL_STARTUP_OPTIONS option1 [option2 ...]]\n\n#         [TEST_ARGS arg1 [arg2 ...]]\n\n#         [NO_UNITTEST_FRAMEWORK]\n\n#         )\n\n#\n\n#   The function arguments are:\n\n#\n\n#   ``NAME``\n\n#     name of the unittest in ctest.\n\n#   ``UNITTEST_FILE``\n\n#     the matlab unittest file. Its path will be automatically\n\n#     added to the Matlab path.\n\n#   ``UNITTEST_PRECOMMAND``\n\n#     Matlab script command to be ran before the file\n\n#     containing the test (eg. GPU device initialisation based on CMake\n\n#     variables).\n\n#   ``TIMEOUT``\n\n#     the test timeout in seconds. Defaults to 180 seconds as the\n\n#     Matlab unit test may hang.\n\n#   ``ADDITIONAL_PATH``\n\n#     a list of paths to add to the Matlab path prior to\n\n#     running the unit test.\n\n#   ``MATLAB_ADDITIONAL_STARTUP_OPTIONS``\n\n#     a list of additional option in order\n\n#     to run Matlab from the command line.\n\n#   ``TEST_ARGS``\n\n#     Additional options provided to the add_test command. These\n\n#     options are added to the default options (eg. \"CONFIGURATIONS Release\")\n\n#   ``NO_UNITTEST_FRAMEWORK``\n\n#     when set, indicates that the test should not\n\n#     use the unittest framework of Matlab (available for versions >= R2013a).\n\n#\n",
        "Line" : 699,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#.rst:\n\n# .. command:: matlab_add_mex\n\n#\n\n#   Adds a Matlab MEX target.\n\n#   This commands compiles the given sources with the current tool-chain in\n\n#   order to produce a MEX file. The final name of the produced output may be\n\n#   specified, as well as additional link libraries, and a documentation entry\n\n#   for the MEX file. Remaining arguments of the call are passed to the\n\n#   :command:`add_library` command.\n\n#\n\n#   ::\n\n#\n\n#      matlab_add_mex(\n\n#          NAME <name>\n\n#          SRC src1 [src2 ...]\n\n#          [OUTPUT_NAME output_name]\n\n#          [DOCUMENTATION file.txt]\n\n#          [LINK_TO target1 target2 ...]\n\n#          [...]\n\n#      )\n\n#\n\n#   ``NAME``\n\n#     name of the target.\n\n#   ``SRC``\n\n#     list of tje source files.\n\n#   ``LINK_TO``\n\n#     a list of additional link dependencies.  The target links to ``libmex``\n\n#     by default. If ``Matlab_MX_LIBRARY`` is defined, it also\n\n#     links to ``libmx``.\n\n#   ``OUTPUT_NAME``\n\n#     if given, overrides the default name. The default name is\n\n#     the name of the target without any prefix and\n\n#     with ``Matlab_MEX_EXTENSION`` suffix.\n\n#   ``DOCUMENTATION``\n\n#     if given, the file ``file.txt`` will be considered as\n\n#     being the documentation file for the MEX file. This file is copied into\n\n#     the same folder without any processing, with the same name as the final\n\n#     mex file, and with extension `.m`. In that case, typing ``help <name>``\n\n#     in Matlab prints the documentation contained in this file.\n\n#\n\n#   The documentation file is not processed and should be in the following\n\n#   format:\n\n#\n\n#   ::\n\n#\n\n#     % This is the documentation\n\n#     function ret = mex_target_output_name(input1)\n\n#\n",
        "Line" : 790,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# we do not need all this on Windows\n\n# pthread options\n",
        "Line" : 841,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# we should use try_compile instead, the link flags are discarded from\n\n# this compiler_flag function.\n\n#check_cxx_compiler_flag(-Wl,--exclude-libs,ALL HAS_SYMBOL_HIDING_CAPABILITY)\n",
        "Line" : 844,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "# documentation\n",
        "Line" : 883,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# documentation\n",
        "Line" : 892,
        "CharPositionInLine" : 10
      },
      "41" : {
        "Text" : "# entry point in the mex file + taking care of visibility and symbol clashes.\n",
        "Line" : 894,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# Apparently, compiling with -pthread generated the proper link flags\n\n# and some defines at compilation\n",
        "Line" : 902,
        "CharPositionInLine" : 6
      },
      "43" : {
        "Text" : "# if we do not do that, the symbols linked from eg. boost remain weak and\n\n# then clash with the ones defined in the matlab process. So by default\n\n# the symbols are hidden.\n\n# This also means that for shared libraries (like MEX), the entry point\n\n# should be explicitly declared with default visibility, otherwise Matlab\n\n# cannot find the entry point.\n\n# Note that this is particularly meaningful if the MEX wrapper itself\n\n# contains symbols that are clashing with Matlab (that are compiled in the\n\n# MEX file). In order to propagate the visibility options to the libraries\n\n# to which the MEX file is linked against, the -Wl,--exclude-libs,ALL\n\n# option should also be specified.\n",
        "Line" : 908,
        "CharPositionInLine" : 4
      },
      "44" : {
        "Text" : "#  get_target_property(\n\n#    _previous_link_flags\n\n#    ${${prefix}_NAME}\n\n#    LINK_FLAGS)\n\n#  if(NOT _previous_link_flags)\n\n#    set(_previous_link_flags)\n\n#  endif()\n",
        "Line" : 927,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "#  if(\"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"GNU\")\n\n#    set_target_properties(${${prefix}_NAME}\n\n#      PROPERTIES\n\n#        LINK_FLAGS \"${_previous_link_flags} -Wl,--exclude-libs,ALL\"\n\n#        # -Wl,--version-script=${_FindMatlab_SELF_DIR}/MatlabLinuxVisibility.map\"\n\n#    )\n\n#  elseif(\"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"Clang\")\n\n#    # in this case, all other symbols become hidden.\n\n#    set_target_properties(${${prefix}_NAME}\n\n#      PROPERTIES\n\n#        LINK_FLAGS \"${_previous_link_flags} -Wl,-exported_symbol,_mexFunction\"\n\n#        #-Wl,-exported_symbols_list,${_FindMatlab_SELF_DIR}/MatlabOSXVisilibity.map\"\n\n#    )\n\n#  endif()\n",
        "Line" : 935,
        "CharPositionInLine" : 4
      },
      "46" : {
        "Text" : "# (internal)\n\n# Used to get the version of matlab, using caching. This basically transforms the\n\n# output of the root list, with possible unknown version, to a version\n\n#\n",
        "Line" : 963,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# if the version is not trivial, we query matlab for that\n\n# we keep track of the location of matlab that induced this version\n\n#if(NOT DEFINED Matlab_PROG_VERSION_STRING_AUTO_DETECT)\n\n#  set(Matlab_PROG_VERSION_STRING_AUTO_DETECT \"\" CACHE INTERNAL \"internal matlab location for the discovered version\")\n\n#endif()\n",
        "Line" : 969,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "# the version is known, we just return it\n",
        "Line" : 976,
        "CharPositionInLine" : 4
      },
      "49" : {
        "Text" : "#\n",
        "Line" : 982,
        "CharPositionInLine" : 2
      },
      "50" : {
        "Text" : "# do we already have a matlab program?\n",
        "Line" : 985,
        "CharPositionInLine" : 2
      },
      "51" : {
        "Text" : "# if not found, clear the dependent variables\n",
        "Line" : 1002,
        "CharPositionInLine" : 4
      },
      "52" : {
        "Text" : "# full real path for path comparison\n",
        "Line" : 1013,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# is it the same as the previous one?\n",
        "Line" : 1018,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# update the location of the program\n",
        "Line" : 1024,
        "CharPositionInLine" : 2
      },
      "55" : {
        "Text" : "# set the version into the cache\n",
        "Line" : 1032,
        "CharPositionInLine" : 2
      },
      "56" : {
        "Text" : "# warning, just in case several versions found (should not happen)\n",
        "Line" : 1035,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "# return the updated value\n",
        "Line" : 1041,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# ###################################\n\n# Exploring the possible Matlab_ROOTS\n",
        "Line" : 1052,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# this variable will get all Matlab installations found in the current system.\n",
        "Line" : 1055,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# if the user specifies a possible root, we keep this one\n",
        "Line" : 1061,
        "CharPositionInLine" : 2
      },
      "61" : {
        "Text" : "# if Matlab_ROOT_DIR specified but erroneous\n",
        "Line" : 1064,
        "CharPositionInLine" : 4
      },
      "62" : {
        "Text" : "# NOTFOUND indicates the code below to search for the version automatically\n",
        "Line" : 1069,
        "CharPositionInLine" : 4
      },
      "63" : {
        "Text" : "# empty version\n",
        "Line" : 1071,
        "CharPositionInLine" : 72
      },
      "64" : {
        "Text" : "# cached version\n",
        "Line" : 1073,
        "CharPositionInLine" : 95
      },
      "65" : {
        "Text" : "# if the user does not specify the possible installation root, we look for\n\n# one installation using the appropriate heuristics\n",
        "Line" : 1080,
        "CharPositionInLine" : 2
      },
      "66" : {
        "Text" : "# On WIN32, we look for Matlab installation in the registry\n\n# if unsuccessful, we look for all known revision and filter the existing\n\n# ones.\n",
        "Line" : 1085,
        "CharPositionInLine" : 4
      },
      "67" : {
        "Text" : "# testing if we are able to extract the needed information from the registry\n",
        "Line" : 1089,
        "CharPositionInLine" : 4
      },
      "68" : {
        "Text" : "# the returned list is empty, doing the search on all known versions\n",
        "Line" : 1093,
        "CharPositionInLine" : 4
      },
      "69" : {
        "Text" : "# filtering the results with the registry keys\n",
        "Line" : 1103,
        "CharPositionInLine" : 4
      },
      "70" : {
        "Text" : "# on mac, we look for the /Application paths\n\n# this corresponds to the behaviour on Windows. On Linux, we do not have\n\n# any other guess.\n",
        "Line" : 1109,
        "CharPositionInLine" : 4
      },
      "71" : {
        "Text" : "# if we have not found anything, we fall back on the PATH\n",
        "Line" : 1144,
        "CharPositionInLine" : 2
      },
      "72" : {
        "Text" : "# At this point, we have no other choice than trying to find it from PATH.\n\n# If set by the user, this wont change\n",
        "Line" : 1147,
        "CharPositionInLine" : 2
      },
      "73" : {
        "Text" : "# we then populate the list of roots, with empty version\n",
        "Line" : 1155,
        "CharPositionInLine" : 4
      },
      "74" : {
        "Text" : "# resolve symlinks\n",
        "Line" : 1160,
        "CharPositionInLine" : 4
      },
      "75" : {
        "Text" : "# get the directory (the command below has to be run twice)\n\n# this will be the matlab root\n",
        "Line" : 1163,
        "CharPositionInLine" : 4
      },
      "76" : {
        "Text" : "# Matlab should be in bin\n",
        "Line" : 1166,
        "CharPositionInLine" : 88
      },
      "77" : {
        "Text" : "# take the first possible Matlab root\n",
        "Line" : 1189,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# adding a warning in case of ambiguity\n",
        "Line" : 1196,
        "CharPositionInLine" : 2
      },
      "79" : {
        "Text" : "# check if the root changed against the previous defined one, if so\n\n# clear all the cached variables\n",
        "Line" : 1204,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# internal\n",
        "Line" : 1218,
        "CharPositionInLine" : 8
      },
      "81" : {
        "Text" : "#Matlab_PROG_VERSION_STRING_AUTO_DETECT\n",
        "Line" : 1221,
        "CharPositionInLine" : 8
      },
      "82" : {
        "Text" : "# Fix the version, in case this one is NOTFOUND\n",
        "Line" : 1235,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# i should be for intel\n",
        "Line" : 1262,
        "CharPositionInLine" : 32
      },
      "84" : {
        "Text" : "# This variable goes to the cache.\n",
        "Line" : 1304,
        "CharPositionInLine" : 2
      },
      "85" : {
        "Text" : "# internal\n\n# This small stub around find_library is to prevent any pollution of CMAKE_FIND_LIBRARY_PREFIXES in the global scope.\n\n# This is the function to be used below instead of the find_library directives.\n",
        "Line" : 1316,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# the MEX library/header are required\n",
        "Line" : 1328,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# the MEX extension is required\n",
        "Line" : 1348,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "# the matlab root is required\n",
        "Line" : 1351,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# component Mex Compiler\n",
        "Line" : 1355,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "# component Matlab program\n",
        "Line" : 1372,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "# Component MX library\n",
        "Line" : 1391,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "# Component ENG library\n",
        "Line" : 1409,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "#Matlab_LIBRARIES\n",
        "Line" : 1452,
        "CharPositionInLine" : 4
      },
      "94" : {
        "Text" : "#Matlab_ROOT_DIR\n\n#Matlab_VERSION_STRING\n",
        "Line" : 1458,
        "CharPositionInLine" : 4
      },
      "95" : {
        "Text" : "#Matlab_MEX_EXTENSION\n",
        "Line" : 1461,
        "CharPositionInLine" : 4
      },
      "96" : {
        "Text" : "#Matlab_BINARIES_DIR\n",
        "Line" : 1464,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 97
    },
    "cmake/FindOctave.cmake" : {
      "ObjectId" : "10882b70213a544031b4a7cd2a7c3d0f16fc12a9",
      "LastModified" : "2018-06-07T09:33:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find Octave\n\n# GNU Octave is a high-level interpreted language, primarily intended for numerical computations.\n\n# available at http://www.gnu.org/software/octave/\n\n#\n\n# This module defines:\n\n#  OCTAVE_EXECUTABLE           - octave interpreter\n\n#  OCTAVE_INCLUDE_DIRS         - include path for mex.h, mexproto.h\n\n#  OCTAVE_LIBRARIES            - required libraries: octinterp, octave, cruft\n\n#  OCTAVE_OCTINTERP_LIBRARY    - path to the library octinterp\n\n#  OCTAVE_OCTAVE_LIBRARY       - path to the library octave\n\n#  OCTAVE_CRUFT_LIBRARY        - path to the library cruft\n\n#  OCTAVE_VERSION_STRING       - octave version string\n\n#  OCTAVE_MAJOR_VERSION        - major version\n\n#  OCTAVE_MINOR_VERSION        - minor version\n\n#  OCTAVE_PATCH_VERSION        - patch version\n\n#  OCTAVE_OCT_FILE_DIR         - object files that will be dynamically loaded\n\n#  OCTAVE_OCT_LIB_DIR          - oct libraries\n\n#  OCTAVE_ROOT_DIR             - octave prefix\n\n#\n\n# The macro octave_add_oct allows to create compiled modules.\n\n# octave_add_oct ( target_name\n\n#         [SOURCES] source1 [source2 ...]\n\n#         [LINK_LIBRARIES  lib1 [lib2 ...]]\n\n#         [EXTENSION ext]\n\n# )\n\n#\n\n# To install it, you can the use the variable OCTAVE_OCT_FILE_DIR as follow:\n\n#  file ( RELATIVE_PATH PKG_OCTAVE_OCT_FILE_DIR ${OCTAVE_ROOT_DIR} ${OCTAVE_OCT_FILE_DIR} )\n\n#  install (\n\n#    TARGETS target_name\n\n#    DESTINATION ${PKG_OCTAVE_OCT_FILE_DIR}\n\n#  )\n\n#=============================================================================\n\n# Copyright 2013, Julien Schueller\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# 1. Redistributions of source code must retain the above copyright notice, this\n\n#    list of conditions and the following disclaimer.\n\n# 2. Redistributions in binary form must reproduce the above copyright notice,\n\n#    this list of conditions and the following disclaimer in the documentation\n\n#    and/or other materials provided with the distribution.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n\n# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\n# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\n# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\n# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n\n# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\n# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n# The views and conclusions contained in the software and documentation are those\n\n# of the authors and should not be interpreted as representing official policies,\n\n# either expressed or implied, of the FreeBSD Project.\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle REQUIRED and QUIET options\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindTinyXML.cmake" : {
      "ObjectId" : "053428d2e9d8a2e4e1c8fd8cd77a42244b0975d3",
      "LastModified" : "2018-06-07T09:33:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindTinyXML\n\n# -----------\n\n#\n\n# Try to find the TinyXML library.\n\n# Once done this will define the following variables::\n\n#\n\n#  TinyXML_FOUND         - System has TinyXML\n\n#  TinyXML_INCLUDE_DIRS  - TinyXML include directory\n\n#  TinyXML_LIBRARIES     - TinyXML libraries\n\n#  TinyXML_DEFINITIONS   - Additional compiler flags for TinyXML\n\n#  TinyXML_VERSION       - TinyXML version\n\n#  TinyXML_MAJOR_VERSION - TinyXML major version\n\n#  TinyXML_MINOR_VERSION - TinyXML minor version\n\n#  TinyXML_PATCH_VERSION - TinyXML patch version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2012-2013  iCub Facility, Istituto Italiano di Tecnologia\n\n#   Authors: Daniele E. Domenichelli <daniele.domenichelli@iit.it>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of YCM, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set package properties if FeatureSummary was included\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/FindValgrind.cmake" : {
      "ObjectId" : "f20fad8eaa95ea4cbb5bf7f8f7690ba4096d17c3",
      "LastModified" : "2018-06-07T09:33:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find Valgrind.\n\n#\n\n# This module defines:\n\n#  VALGRIND_INCLUDE_DIR, where to find valgrind/memcheck.h, etc.\n\n#  VALGRIND_PROGRAM, the valgrind executable.\n\n#  VALGRIND_FOUND, If false, do not try to use valgrind.\n\n#\n\n# If you have valgrind installed in a non-standard place, you can define\n\n# VALGRIND_ROOT to tell cmake where it is.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# if VALGRIND_ROOT is empty, we explicitly add /bin to the search\n\n# path, but this does not hurt...\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/InstallBasicPackageFiles.cmake" : {
      "ObjectId" : "2a2a35c3096f78cb3d490d6cc5bdd726641ef45d",
      "LastModified" : "2018-06-07T09:33:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# InstallBasicPackageFiles\n\n# ------------------------\n\n#\n\n# A helper module to make your package easier to be found by other\n\n# projects.\n\n#\n\n#\n\n# .. command:: install_basic_package_files\n\n#\n\n# Create and install a basic version of cmake config files for your\n\n# project::\n\n#\n\n#  install_basic_package_files(<Name>\n\n#                              VERSION <version>\n\n#                              COMPATIBILITY <compatibility>\n\n#                              TARGETS_PROPERTY <property_name>\n\n#                              [NO_SET_AND_CHECK_MACRO]\n\n#                              [NO_CHECK_REQUIRED_COMPONENTS_MACRO]\n\n#                              [VARS_PREFIX <prefix>] # (default = \"<name>\")\n\n#                              [DESTINATION <destination>]\n\n#                              [NAMESPACE <namespace>] # (default = \"<name>::\")\n\n#                              [EXTRA_PATH_VARS_SUFFIX path1 [path2 ...]]\n\n#                              [UPPERCASE_FILENAMES | LOWERCASE_FILENAMES]\n\n#                             )\n\n#\n\n# Depending on UPPERCASE_FILENAMES and LOWERCASE_FILENAMES, this\n\n# function generates 3 files:\n\n#\n\n#  - ``<Name>ConfigVersion.cmake`` or ``<name>-config-version.cmake``\n\n#  - ``<Name>Config.cmake`` or ``<name>-config.cmake``\n\n#  - ``<Name>Targets.cmake`` or ``<name>-targets.cmake``\n\n#\n\n# If neither UPPERCASE_FILENAMES nor LOWERCASE_FILENAMES is set, a file\n\n# ``<Name>ConfigVersion.cmake.in`` or\n\n# ``<name>-config-version.cmake.in`` is searched, and the convention\n\n# is chosed according to the file found. If no file was found, the\n\n# uppercase convention is used.\n\n#\n\n# Each file is generated twice, one for the build directory and one for\n\n# the installation directory.  The ``DESTINATION`` argument can be\n\n# passed to install the files in a location different from the default\n\n# one (``CMake`` on Windows, ``${CMAKE_INSTALL_LIBDIR}/cmake/${name}``\n\n# on other platforms.\n\n#\n\n#\n\n# The ``<Name>ConfigVersion.cmake`` is generated using\n\n# ``write_basic_package_version_file``.  The ``VERSION``,\n\n# ``COMPATIBILITY``, ``NO_SET_AND_CHECK_MACRO``, and\n\n# ``NO_CHECK_REQUIRED_COMPONENTS_MACRO`` are passed to this function.\n\n# See the documentation for the :module:`CMakePackageConfigHelpers`\n\n# module for further information. The files in the build and install\n\n# directory are exactly the same.\n\n#\n\n#\n\n# The ``<Name>Config.cmake`` is generated using\n\n# ``configure_package_config_file``.  See the documentation for the\n\n# :module:`CMakePackageConfigHelpers` module for further information.\n\n# The module expects to find a ``<Name>Config.cmake.in`` or\n\n# ``<name>-config.cmake.in`` file in the root directory of the project.\n\n# If the file does not exist, a very basic file is created.\n\n#\n\n# A set of variables are checked and passed to\n\n# ``configure_package_config_file`` as ``PATH_VARS``. For each of the\n\n# ``SUFFIX`` considered, if one of the variables::\n\n#\n\n#     <VARS_PREFIX>_(BUILD|INSTALL)_<SUFFIX>\n\n#     (BUILD|INSTALL)_<VARS_PREFIX>_<SUFFIX>\n\n#\n\n# is defined, the ``<VARS_PREFIX>_<SUFFIX>`` variable will be defined\n\n# before configuring the package.  In order to use that variable in the\n\n# config file, a line ou can access to that variable in the config\n\n# file by using::\n\n#\n\n#   set_and_check(<VARS_PREFIX>_<SUFFIX> \\\"@PACKAGE_<VARS_PREFIX>_<SUFFIX>@\\\")\n\n#\n\n# These variable will have different values whether you are using the\n\n# package from the build tree or from the install directory.  Also these\n\n# files will contain only relative paths, meaning that you can move the\n\n# whole installation and the CMake files will still work.\n\n#\n\n# Default ``PATH_VARS`` suffixes are::\n\n#\n\n#   BINDIR          BIN_DIR\n\n#   SBINDIR         SBIN_DIR\n\n#   LIBEXECDIR      LIBEXEC_DIR\n\n#   SYSCONFDIR      SYSCONF_DIR\n\n#   SHAREDSTATEDIR  SHAREDSTATE_DIR\n\n#   LOCALSTATEDIR   LOCALSTATE_DIR\n\n#   LIBDIR          LIB_DIR\n\n#   INCLUDEDIR      INCLUDE_DIR\n\n#   OLDINCLUDEDIR   OLDINCLUDE_DIR\n\n#   DATAROOTDIR     DATAROOT_DIR\n\n#   DATADIR         DATA_DIR\n\n#   INFODIR         INFO_DIR\n\n#   LOCALEDIR       LOCALE_DIR\n\n#   MANDIR          MAN_DIR\n\n#   DOCDIR          DOC_DIR\n\n#\n\n# more suffixes can be added using the ``EXTRA_PATH_VARS_SUFFIX``\n\n# argument.\n\n#\n\n#\n\n# The ``<name>Targets.cmake`` is generated using\n\n# :command:`export(TARGETS)` in the build tree and\n\n# :command:`install(EXPORT)` in the installation directory.\n\n# The targets are exported using the value for the ``NAMESPACE``\n\n# argument as namespace.\n\n# The targets should be listed in a global property, that must be passed\n\n# to the function using the ``TARGETS_PROPERTY`` argument\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2013 iCub Facility, Istituto Italiano di Tecnologia\n\n#   Authors: Daniele E. Domenichelli <daniele.domenichelli@iit.it>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO check that _Name does not contain \"-\" characters\n",
        "Line" : 139,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Path for installed cmake files\n",
        "Line" : 174,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Make relative paths absolute (needed later on) and append the\n\n# defined variables to _(build|install)_path_vars_suffix\n",
        "Line" : 216,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Get targets from GLOBAL PROPERTY\n",
        "Line" : 254,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# <name>ConfigVersion.cmake file (same for build tree and intall)\n",
        "Line" : 263,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# If there is no Config.cmake.in file, write a basic one\n",
        "Line" : 272,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# <name>Config.cmake (build tree)\n",
        "Line" : 293,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# <name>Config.cmake (installed)\n",
        "Line" : 308,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# <name>Targets.cmake (build tree)\n",
        "Line" : 327,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# <name>Targets.cmake (installed)\n",
        "Line" : 332,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 12
    },
    "cmake/OrocosKDLFindLogic.cmake" : {
      "ObjectId" : "73b8f2b53423aa5763deee0fcbaf1eb7c33038db",
      "LastModified" : "2018-06-07T09:33:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#support also for the old version of kdl cmake package\n\n#mostly for people getting orocos_kdl from old ROS versions\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add OROCOS_KDL version definitions on the code\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/StandardFindModule.cmake" : {
      "ObjectId" : "67ffe154978434e34ea97fd01c34bc7badba7cab",
      "LastModified" : "2018-06-07T09:33:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# StandardFindModule\n\n# ------------------\n\n#\n\n# Try to find a package using a cmake config file, or pkgconfig\n\n#\n\n#\n\n# ::\n\n#\n\n#   standard_find_module(<name>\n\n#                        <pkgconfig name>\n\n#                        [NOT_REQUIRED]\n\n#                        [QUIET]\n\n#                        [SKIP_CMAKE_CONFIG]\n\n#                        [SKIP_PKG_CONFIG])\n\n#\n\n# If the package is found, the following variables (where possible)\n\n# are created:\n\n#\n\n# ::\n\n#\n\n#   <name>_FOUND         - System has <name>\n\n#   <name>_INCLUDE_DIRS  - <name> include directory\n\n#   <name>_LIBRARIES     - <name> libraries\n\n#   <name>_DEFINITIONS   - Additional compiler flags for <name>\n\n#   <name>_VERSION       - <name> version\n\n#   <name>_MAJOR_VERSION - <name> major version\n\n#   <name>_MINOR_VERSION - <name> minor version\n\n#   <name>_PATCH_VERSION - <name> patch version\n\n#   <name>_TWEAK_VERSION - <name> tweak version\n\n#   <name>_VERSION_COUNT - Number of version components, 0 to 4\n\n#\n\n# For each library that requires to be linked (i.e. \"-llib\") it creates\n\n#\n\n# ::\n\n#\n\n#   <name>_<LIB>_LIBRARY_RELEASE (cached, advanced)\n\n#   <name>_<LIB>_LIBRARY_DEBUG (cached, advanced, and empty by default)\n\n#   <name>_<LIB>_LIBRARY\n\n#   <name>_<LIB>_LIBRARY_FOUND\n\n#\n\n# In a FindXXX.cmake module, this macro can be used at the beginning.\n\n# The NOT_REQUIRED can be added to avoid failing if the package was not\n\n# found, but pkg-config is installed.\n\n# The `QUIET` argument can be used to hide the output from\n\n# `find_package_handle_standard_args`.\n\n# If <name>_FOUND is FALSE at the end, more \"custom\" searches can be\n\n# used (for windows, etc.)\n\n#\n\n# If SKIP_CMAKE_CONFIG or SKIP_PKG_CONFIG are set, the relative step\n\n# is skipped\n\n#\n\n# If one of the variables STANDARD_FIND_MODULE_DEBUG or\n\n# STANDARD_FIND_MODULE_DEBUG_<name> is TRUE, prints more useful debug\n\n# output\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2012-2013 iCub Facility, Istituto Italiano di Tecnologia\n\n#   Authors: Daniele E. Domenichelli <daniele.domenichelli@iit.it>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Try to use CMake Config file to locate the package\n",
        "Line" : 87,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Disable package cache when not done automatically by CMake\n\n# This is a workaround for CMake bug #14849\n",
        "Line" : 89,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# No CMake Config file was found. Try using PkgConfig\n",
        "Line" : 110,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# If NOT_REQUIRED unset the _FIND_REQUIRED variable and save it for later\n",
        "Line" : 152,
        "CharPositionInLine" : 12
      },
      "6" : {
        "Text" : "# If NOT_REQUIRED reset the _FIND_REQUIRED variable\n",
        "Line" : 165,
        "CharPositionInLine" : 12
      },
      "7" : {
        "Text" : "# ${_name}_FOUND is uppercase after find_package_handle_standard_args\n",
        "Line" : 174,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Extract version numbers\n",
        "Line" : 177,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Print some debug output if either STANDARD_FIND_MODULE_DEBUG\n\n# or STANDARD_FIND_MODULE_DEBUG_${_name} is set to TRUE\n",
        "Line" : 183,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 10
    },
    "cmake/UseSWIG.cmake" : {
      "ObjectId" : "c527088894e51435aabcfd083afbc6be5609f890",
      "LastModified" : "2018-06-07T09:33:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# UseSWIG\n\n# -------\n\n#\n\n# Defines the following macros for use with SWIG:\n\n#\n\n# ::\n\n#\n\n#    SWIG_ADD_MODULE(name language [ files ])\n\n#      - Define swig module with given name and specified language\n\n#    SWIG_LINK_LIBRARIES(name [ libraries ])\n\n#      - Link libraries to swig module\n\n#\n\n# Source files properties on module files can be set before the invocation\n\n# of the SWIG_ADD_MODULE macro to specify special behavior of SWIG.\n\n#\n\n# The source file property CPLUSPLUS calls SWIG in c++ mode, e.g.::\n\n#\n\n#    set_property(SOURCE mymod.i PROPERTY CPLUSPLUS ON)\n\n#    swig_add_module(mymod python mymod.i)\n\n#\n\n# The source file property SWIG_FLAGS adds custom flags to the SWIG executable.\n\n#\n\n# The source-file property SWIG_MODULE_NAME have to be provided to specify the actual\n\n# import name of the module in the target language if it cannot be scanned automatically\n\n# from source or different from the module file basename.::\n\n#\n\n#    set_property(SOURCE mymod.i PROPERTY SWIG_MODULE_NAME mymod_realname)\n\n#\n\n# To get the name of the swig module target library, use: ${SWIG_MODULE_${name}_REAL_NAME}.\n\n#\n\n# Also some variables can be set to specify special behavior of SWIG.\n\n#\n\n# CMAKE_SWIG_FLAGS can be used to add special flags to all swig calls.\n\n#\n\n# Another special variable is CMAKE_SWIG_OUTDIR, it allows one to specify\n\n# where to write all the swig generated module (swig -outdir option)\n\n#\n\n# The name-specific variable SWIG_MODULE_<name>_EXTRA_DEPS may be used to specify extra\n\n# dependencies for the generated modules.\n\n#\n\n# If the source file generated by swig need some special flag you can use::\n\n#\n\n#    set_source_files_properties( ${swig_generated_file_fullname}\n\n#                                 PROPERTIES COMPILE_FLAGS \"-bla\")\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2004-2009 Kitware, Inc.\n\n# Copyright 2009 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# For given swig module initialize variables associated with it\n\n#\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# swig will produce a module.py containing an 'import _modulename' statement,\n\n# which implies having a corresponding _modulename.so (*NIX), _modulename.pyd (Win32),\n\n# unless the -noproxy flag is used\n",
        "Line" : 82,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# This makes sure that the name used in the generated DllImport\n\n# matches the library name created by CMake\n",
        "Line" : 89,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#\n\n# For a given language, input file, and output file, determine extra files that\n\n# will be generated. This is internal swig macro.\n\n#\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# try to get module name from \"%module foo\" syntax\n",
        "Line" : 107,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# try to get module name from \"%module (options=...) foo\" syntax\n",
        "Line" : 116,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# fallback to file basename\n",
        "Line" : 125,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "#\n\n# Take swig (*.i) file and add proper custom commands for it\n\n#\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# If CMAKE_SWIG_OUTDIR was specified then pass it to -outdir\n",
        "Line" : 151,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# add the language into the name of the file (i.e. TCL_wrap)\n\n# this allows for the same .i file to be wrapped into different languages\n",
        "Line" : 165,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# default is c, so add c++ flag if it is c++\n",
        "Line" : 186,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Let's create the ${swig_outdir} at execution time, in case dir contains $(OutDir)\n",
        "Line" : 196,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "#\n\n# Create Swig module\n\n#\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# In java you want:\n\n#      System.loadLibrary(\"LIBRARY\");\n\n# then JNI will look for a library whose name is platform dependent, namely\n\n#   MacOS  : libLIBRARY.jnilib\n\n#   Windows: LIBRARY.dll\n\n#   Linux  : libLIBRARY.so\n",
        "Line" : 252,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# this is only needed for the python case where a _modulename.so is generated\n",
        "Line" : 263,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Python extension modules on Windows must have the extension \".pyd\"\n\n# instead of \".dll\" as of Python 2.5.  Older python versions do support\n\n# this suffix.\n\n# http://docs.python.org/whatsnew/ports.html#SECTION0001510000000000000000\n\n# <quote>\n\n# Windows: .dll is no longer supported as a filename extension for extension modules.\n\n# .pyd is now the only filename extension that will be searched for.\n\n# </quote>\n",
        "Line" : 265,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# In ruby you want:\n\n#      require 'LIBRARY'\n\n# then ruby will look for a library whose name is platform dependent, namely\n\n#   MacOS  : LIBRARY.bundle\n\n#   Windows: LIBRARY.dll\n\n#   Linux  : LIBRARY.so\n",
        "Line" : 279,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "#\n\n# Like TARGET_LINK_LIBRARIES but for swig modules\n\n#\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "cmake/iDynTreeDependencies.cmake" : {
      "ObjectId" : "79e1c19696010554ff657c1b0e8dbe3f22c70c0e",
      "LastModified" : "2018-09-16T17:42:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright: (C) 2017 Fondazione Istituto Italiano di Tecnologia\n\n# Authors: Silvio Traversaro\n\n# CopyPolicy: Released under the terms of the LGPLv2.1 or later, see LGPL.TXT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#########################################################################\n\n# Enable/disable dependencies\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Eigen is compulsory (minimum version 3.2.92)\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# For orocos_kdl we have custom logic, because we want to set it to FALSE by default\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# KDL requires a system version of TinyXML\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "cmake/iDynTreeOptions.cmake" : {
      "ObjectId" : "ec8420ad238d22e535b39c67b53c19436628bf24",
      "LastModified" : "2018-06-07T09:33:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#########################################################################\n\n# Control whether libraries are shared or static.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#########################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#########################################################################\n\n# Use position indipendent code\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#########################################################################\n\n# Turn on testing.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# adding support for checking the tests with valgrind\n",
        "Line" : 27,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "#########################################################################\n\n# Turn on compilation of geometrical relations semantics check.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#########################################################################\n\n# Deal with RPATH\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "##########################################################################\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Compile flags definitions for Semantic checks\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#set default build type to \"Release\" in single-config generators\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Include ECM Sanitizers, for enable compilation support of GCC and Clang\n\n# sanitizers. Imported from http://api.kde.org/ecm/module/ECMEnableSanitizers.html\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Enable warnings if requested\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Save compiler specific warnings flags\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Create build artifacts in ${build}/bin for binaries and ${build}/lib for libraries\n\n# This simplifies the use of isaac software directly from the build directory\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Macro to remove deprecation warnings for a specific part of iDynTree\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "doc/CMakeLists.txt" : {
      "ObjectId" : "ba340a31ae3ad615a346e74b0906bb0ce647309c",
      "LastModified" : "2018-06-07T09:33:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright: (C) 2009 RobotCub Consortium\n\n# Authors: Paul Fitzpatrick\n\n# CopyPolicy: Released under the terms of the LGPLv2.1 or later, see LGPL.TXT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Options related to doxygen\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# iDynTree documentation is always verbose now.  It used to be\n\n# partially stripped of stuff less interesting to end-users.\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# search mscgen program\n\n# for setting the MSCGEN_PATH variable in the Doxyfile\n",
        "Line" : 37,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# set the MSCGEN_PATH variable by stripping the name (mscgen)\n\n# from the MSCGEN_EXECUTABLE\n",
        "Line" : 45,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# search dot program\n\n# for setting the DOT_PATH variable in the Doxyfile\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# set the DOT_PATH variable by stripping the name (dot)\n\n# from the DOT_EXECUTABLE\n",
        "Line" : 58,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 7
    },
    "examples/CMakeLists.txt" : {
      "ObjectId" : "14f4742beae61d12967e827b7351a1c6ea54fdc6",
      "LastModified" : "2018-06-07T09:33:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright: 2015 Fondazione Istituto Italiano di Tecnologia\n\n# Author: Silvio Traversaro\n\n# CopyPolicy: Released under the terms of the GNU GPL v2.0.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/KinDynComputationsWithEigen/CMakeLists.txt" : {
      "ObjectId" : "ad040a59c8647c5f2f727f6a62d4a1a7d831f6f7",
      "LastModified" : "2018-06-07T09:33:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright: 2017 Fondazione Istituto Italiano di Tecnologia\n\n# Author: Silvio Traversaro\n\n# CopyPolicy: Released under the terms of the GNU LGPL v2.0+.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Note that while Eigen3 is using internally by iDynTree\n\n# its public (installed) headers do not use it, so if you\n\n# want to use Eigen3 in your project you need to find and include it\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/fixedBaseGravityCompensation/CMakeLists.txt" : {
      "ObjectId" : "7f39afeee1fe1596b76165e5644ab2aad3386dbd",
      "LastModified" : "2018-06-07T09:33:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright: 2015 Fondazione Istituto Italiano di Tecnologia\n\n# Author: Silvio Traversaro\n\n# CopyPolicy: Released under the terms of the GNU GPL v2.0.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/icubArmRegressor/CMakeLists.txt" : {
      "ObjectId" : "e56b2f6d45882b97727464de8475596b2ff51ac9",
      "LastModified" : "2018-06-07T09:33:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright: 2015 Fondazione Istituto Italiano di Tecnologia\n\n# Author: Silvio Traversaro\n\n# CopyPolicy: Released under the terms of the GNU GPL v2.0.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "extern/CMakeLists.txt" : {
      "ObjectId" : "4d644676691b3cb67061b1c5d50daeb3130b32b0",
      "LastModified" : "2018-08-03T14:03:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  iDynTree\n\n#  Copyright: (C) 2016 iCub Facility, Istituto Italiano di Tecnologia\n\n#  Authors: Silvio Traversaro <silvio.traversaro@iit.it>\n\n#\n\n#  Copy Policy: Released under the terms of the LGPLv2.1 or later, see LGPL.TXT\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# MOxUnit ( https://github.com/MOxUnit/MOxUnit ) is an xUnit testing\n\n# framework for Matlab and Octave, it is only included if testing\n\n# is enabled in Matlab or Octave\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We save the location of MOxUnit in a variable that is then accessible to the test\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "c59ead73e73476b5b7b9fe62a743f38d4aac1c89",
      "LastModified" : "2018-06-07T09:33:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2013-2018 Fondazione Istituto Italiano di Tecnologia\n\n#\n\n# Licensed under either the GNU Lesser General Public License v3.0 :\n\n# https://www.gnu.org/licenses/lgpl-3.0.html\n\n# or the GNU Lesser General Public License v2.1 :\n\n# https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html\n\n# at your option.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# include test data before everything,\n\n# to be sure that is available to test\n\n# of all components\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This should directory should not compiled if IDYNTREE_USES_KDL\n\n# is not enabled, but they are necessary to compile the bindings,\n\n# see https://github.com/robotology/idyntree/issues/227\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# compile simple command line tools\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/core/CMakeLists.txt" : {
      "ObjectId" : "26ef3b8f629d079006be0588f23a524db616f807",
      "LastModified" : "2018-06-07T09:33:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2015 Fondazione Istituto Italiano di Tecnologia\n\n#\n\n# Licensed under either the GNU Lesser General Public License v3.0 :\n\n# https://www.gnu.org/licenses/lgpl-3.0.html\n\n# or the GNU Lesser General Public License v2.1 :\n\n# https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html\n\n# at your option.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#SOURCE_GROUP(\"Header Files\\\\Private\" FILES ${IDYNTREE_CORE_EXP_PRIVATE_INCLUDES})\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check if this does not break existing build\n\n# reason: avoid including with <iDynTree/Core/**> inside .cpp but using directly\n\n# \"**\" which clearly states the difference between in-library files and external files\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/core/tests/CMakeLists.txt" : {
      "ObjectId" : "9e74c1e7cbb065b4e35c6f10d0336aa57fd95d1e",
      "LastModified" : "2018-06-07T09:33:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We have also some usages of the API that we want to make sure that do not compile\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Inspired from  https://stackoverflow.com/questions/30155619/expected-build-failure-tests-in-cmake\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "src/estimation/CMakeLists.txt" : {
      "ObjectId" : "cbe660cc58ab7743e54ae9bc8376915f5671dded",
      "LastModified" : "2018-09-16T17:42:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2015 Fondazione Istituto Italiano di Tecnologia\n\n#\n\n# Licensed under either the GNU Lesser General Public License v3.0 :\n\n# https://www.gnu.org/licenses/lgpl-3.0.html\n\n# or the GNU Lesser General Public License v2.1 :\n\n# https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html\n\n# at your option.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Ensure that build include directories are always included before system ones\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/estimation/tests/CMakeLists.txt" : {
      "ObjectId" : "6f859688d85c55d558ffc3fb71b721a106905a9f",
      "LastModified" : "2018-06-07T09:33:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2015 Fondazione Istituto Italiano di Tecnologia\n\n#\n\n# Licensed under either the GNU Lesser General Public License v3.0 :\n\n# https://www.gnu.org/licenses/lgpl-3.0.html\n\n# or the GNU Lesser General Public License v2.1 :\n\n# https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html\n\n# at your option.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/high-level/CMakeLists.txt" : {
      "ObjectId" : "0f946c520359282b880306f68358609d2d79ecc1",
      "LastModified" : "2018-09-16T17:42:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2015 Fondazione Istituto Italiano di Tecnologia\n\n#\n\n# Licensed under either the GNU Lesser General Public License v3.0 :\n\n# https://www.gnu.org/licenses/lgpl-3.0.html\n\n# or the GNU Lesser General Public License v2.1 :\n\n# https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html\n\n# at your option.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Ensure that build include directories are always included before system ones\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/high-level/tests/CMakeLists.txt" : {
      "ObjectId" : "d15822110681d3f87a389bd82855ff8578e3478d",
      "LastModified" : "2018-06-07T09:33:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# todo\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/icub/CMakeLists.txt" : {
      "ObjectId" : "0bbb5052f22f454375f6f33c2443729631c1272d",
      "LastModified" : "2018-09-16T17:42:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2015 Fondazione Istituto Italiano di Tecnologia\n\n#\n\n# Licensed under either the GNU Lesser General Public License v3.0 :\n\n# https://www.gnu.org/licenses/lgpl-3.0.html\n\n# or the GNU Lesser General Public License v2.1 :\n\n# https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html\n\n# at your option.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Ensure that build include directories are always included before system ones\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# share headers with all iDynTree targets\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Install headers in deprecated location\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/inverse-kinematics/CMakeLists.txt" : {
      "ObjectId" : "194ff7d75308916007aa2d1634c0029f52844f89",
      "LastModified" : "2018-09-16T17:42:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Probably SYSTEM is not compatible with cmake 2.8.12, but I think as YARP requires\n\n# CMake 3.0 we can increase the min version\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/inverse-kinematics/tests/CMakeLists.txt" : {
      "ObjectId" : "b663ac9b11bffda861485cae369538d1fb46a61b",
      "LastModified" : "2018-06-07T09:33:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/legacy/estimation-kdl/CMakeLists.txt" : {
      "ObjectId" : "9dddef74243fc515824d7dc5cba632a938fd1064",
      "LastModified" : "2018-09-16T17:42:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2015 Fondazione Istituto Italiano di Tecnologia\n\n#\n\n# Licensed under either the GNU Lesser General Public License v3.0 :\n\n# https://www.gnu.org/licenses/lgpl-3.0.html\n\n# or the GNU Lesser General Public License v2.1 :\n\n# https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html\n\n# at your option.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Legacy library, remove deprecated warnings when compiling\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Ensure that build include directories are always included before system ones\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/legacy/high-level-kdl/CMakeLists.txt" : {
      "ObjectId" : "4336528a3160471134144a30f04fc777196a5204",
      "LastModified" : "2018-06-07T09:33:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2015 Fondazione Istituto Italiano di Tecnologia\n\n#\n\n# Licensed under either the GNU Lesser General Public License v3.0 :\n\n# https://www.gnu.org/licenses/lgpl-3.0.html\n\n# or the GNU Lesser General Public License v2.1 :\n\n# https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html\n\n# at your option.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Legacy library, remove deprecated warnings when compiling\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Ensure that build include directories are always included before system ones\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/legacy/high-level-kdl/tests/CMakeLists.txt" : {
      "ObjectId" : "d358a8025f98a829b8cc7be8543a5b6b7f015da2",
      "LastModified" : "2018-06-07T09:33:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2015 Fondazione Istituto Italiano di Tecnologia\n\n#\n\n# Licensed under either the GNU Lesser General Public License v3.0 :\n\n# https://www.gnu.org/licenses/lgpl-3.0.html\n\n# or the GNU Lesser General Public License v2.1 :\n\n# https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html\n\n# at your option.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# todo\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/legacy/icub-kdl/CMakeLists.txt" : {
      "ObjectId" : "6c788845dee41b753076158165b5d0ad8788d6c0",
      "LastModified" : "2018-09-16T17:42:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2015 Fondazione Istituto Italiano di Tecnologia\n\n#\n\n# Licensed under either the GNU Lesser General Public License v3.0 :\n\n# https://www.gnu.org/licenses/lgpl-3.0.html\n\n# or the GNU Lesser General Public License v2.1 :\n\n# https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html\n\n# at your option.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Legacy library, remove deprecated warnings when compiling\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Ensure that build include directories are always included before system ones\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/legacy/icub-kdl/tests/CMakeLists.txt" : {
      "ObjectId" : "dda98636648595201aa4ce15293032169a8d9a4c",
      "LastModified" : "2018-06-07T09:33:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/legacy/kdl/CMakeLists.txt" : {
      "ObjectId" : "b4793a4d051d3bca34f81fb6c2b714fd94d86f6c",
      "LastModified" : "2018-09-16T17:42:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2015 Fondazione Istituto Italiano di Tecnologia\n\n#\n\n# Licensed under either the GNU Lesser General Public License v3.0 :\n\n# https://www.gnu.org/licenses/lgpl-3.0.html\n\n# or the GNU Lesser General Public License v2.1 :\n\n# https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html\n\n# at your option.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Legacy library, remove deprecated warnings when compiling\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Ensure that build include directories are always included before system ones\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/legacy/kdl/cmake/AddUninstallTarget.cmake" : {
      "ObjectId" : "0587ed344f42d5679f5c32bc263c0fe821aa80fc",
      "LastModified" : "2018-06-07T09:33:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# AddUninstallTarget\n\n# ------------------\n\n#\n\n# Add the \"uninstall\" target for your project\n\n#\n\n# ::\n\n#\n\n#   include(AddUninstallTarget)\n\n#\n\n#\n\n# will create a file cmake_uninstall.cmake in the build directory and add a\n\n# custom target uninstall that will remove the files installed by your package\n\n# (using install_manifest.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2008-2013 Kitware, Inc.\n\n# Copyright 2013  iCub Facility, Istituto Italiano di Tecnologia\n\n#     @author Daniele E. Domenichelli <daniele.domenichelli@iit.it>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright\n\n#  notice, this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright\n\n#  notice, this list of conditions and the following disclaimer in the\n\n#  documentation and/or other materials provided with the distribution.\n\n#\n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#  nor the names of their contributors may be used to endorse or promote\n\n#  products derived from this software without specific prior written\n\n#  permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n#=============================================================================\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/legacy/kdl/cmake/FindEigen3.cmake" : {
      "ObjectId" : "847e654bbdd85720ef48aa2aa0bb7007a813029d",
      "LastModified" : "2018-06-07T09:33:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Eigen3 lib\n\n#\n\n# This module supports requiring a minimum version, e.g. you can do\n\n#   find_package(Eigen3 3.1.2)\n\n# to require version 3.1.2 or newer of Eigen3.\n\n#\n\n# Once done this will define\n\n#\n\n#  EIGEN3_FOUND - system has eigen lib with correct version\n\n#  EIGEN3_INCLUDE_DIR - the eigen include directory\n\n#  EIGEN3_VERSION - eigen version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module reads hints about search locations from \n\n# the following enviroment variables:\n\n#\n\n# EIGEN3_ROOT\n\n# EIGEN3_ROOT_DIR\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Copyright (c) 2009 Benoit Jacob <jacob.benoit.1@gmail.com>\n\n# Redistribution and use is allowed according to the terms of the 2-clause BSD license.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# in cache already\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "src/legacy/kdl/doc/CMakeLists.txt" : {
      "ObjectId" : "5590abf6b4a69237e7420dc7354c3ecd56c14571",
      "LastModified" : "2018-06-07T09:33:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright: (C) 2009 RobotCub Consortium\n\n# Authors: Paul Fitzpatrick\n\n# CopyPolicy: Released under the terms of the LGPLv2.1 or later, see LGPL.TXT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# YARP documentation is always verbose now.  It used to be\n\n# partially stripped of stuff less interesting to end-users.\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "src/legacy/kdl/examples/subtree_base_regressor/CMakeLists.txt" : {
      "ObjectId" : "8d5541f39cf1bab3d9f09a3a13d9a971fa418563",
      "LastModified" : "2018-06-07T09:33:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2015 Fondazione Istituto Italiano di Tecnologia\n\n#\n\n# Licensed under either the GNU Lesser General Public License v3.0 :\n\n# https://www.gnu.org/licenses/lgpl-3.0.html\n\n# or the GNU Lesser General Public License v2.1 :\n\n# https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html\n\n# at your option.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Start a project.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#find orocos_kdl, with some glue code to support also the use of the old version\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for source code.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Automatically add include directories if needed.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set up our main executable.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/legacy/kdl/examples/tree_inverse_dynamics/CMakeLists.txt" : {
      "ObjectId" : "0fbde32a50821bf8f67a8fde9a5f13bda55097d6",
      "LastModified" : "2018-06-07T09:33:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2015 Fondazione Istituto Italiano di Tecnologia\n\n#\n\n# Licensed under either the GNU Lesser General Public License v3.0 :\n\n# https://www.gnu.org/licenses/lgpl-3.0.html\n\n# or the GNU Lesser General Public License v2.1 :\n\n# https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html\n\n# at your option.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Start a project.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#find orocos_kdl, with some glue code to support also the use of the old version\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#support also for the old version of kdl cmake package\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Search for source code.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Automatically add include directories if needed.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set up our main executable.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "src/legacy/yarp-kdl/CMakeLists.txt" : {
      "ObjectId" : "a10248b5b2ad4cb3a7cbca8d8cfc6667851a6a1a",
      "LastModified" : "2018-09-16T17:42:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2015 Fondazione Istituto Italiano di Tecnologia\n\n#\n\n# Licensed under either the GNU Lesser General Public License v3.0 :\n\n# https://www.gnu.org/licenses/lgpl-3.0.html\n\n# or the GNU Lesser General Public License v2.1 :\n\n# https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html\n\n# at your option.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# share headers with all iDynTree targes\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Legacy library, remove deprecated warnings when compiling\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/model/CMakeLists.txt" : {
      "ObjectId" : "f716378e2aba38143fa8ffac1d6a4a97ec1840e1",
      "LastModified" : "2018-06-07T09:33:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2015 Fondazione Istituto Italiano di Tecnologia\n\n#\n\n# Licensed under either the GNU Lesser General Public License v3.0 :\n\n# https://www.gnu.org/licenses/lgpl-3.0.html\n\n# or the GNU Lesser General Public License v2.1 :\n\n# https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html\n\n# at your option.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Ensure that build include directories are always included before system ones\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/model/tests/CMakeLists.txt" : {
      "ObjectId" : "f58eb7674a933085509cdf9c15c35e9c23ebded3",
      "LastModified" : "2018-06-07T09:33:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2015 Fondazione Istituto Italiano di Tecnologia\n\n#\n\n# Licensed under either the GNU Lesser General Public License v3.0 :\n\n# https://www.gnu.org/licenses/lgpl-3.0.html\n\n# or the GNU Lesser General Public License v2.1 :\n\n# https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html\n\n# at your option.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/model_io/CMakeLists.txt" : {
      "ObjectId" : "3a79e44ed0782435177509df95c09af322294834",
      "LastModified" : "2018-09-16T17:42:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2015 Fondazione Istituto Italiano di Tecnologia\n\n#\n\n# Licensed under either the GNU Lesser General Public License v3.0 :\n\n# https://www.gnu.org/licenses/lgpl-3.0.html\n\n# or the GNU Lesser General Public License v2.1 :\n\n# https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html\n\n# at your option.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Specify a base directory where tests file can be located by the unit tests\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# if(IDYNTREE_COMPILE_TESTS AND IDYNTREE_USES_KDL)\n\n#     add_subdirectory(tests)\n\n# endif()\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/model_io/iKin-kdl/CMakeLists.txt" : {
      "ObjectId" : "38498691be56cfd0543438781f2335812d5476a9",
      "LastModified" : "2018-09-16T17:42:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2015 Fondazione Istituto Italiano di Tecnologia\n\n#\n\n# Licensed under either the GNU Lesser General Public License v3.0 :\n\n# https://www.gnu.org/licenses/lgpl-3.0.html\n\n# or the GNU Lesser General Public License v2.1 :\n\n# https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html\n\n# at your option.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/model_io/symoro/CMakeLists.txt" : {
      "ObjectId" : "c2e340a487dc9d1a01ce607bff02a3d6ada3e73b",
      "LastModified" : "2018-06-07T09:33:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2015 Fondazione Istituto Italiano di Tecnologia\n\n#\n\n# Licensed under either the GNU Lesser General Public License v3.0 :\n\n# https://www.gnu.org/licenses/lgpl-3.0.html\n\n# or the GNU Lesser General Public License v2.1 :\n\n# https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html\n\n# at your option.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add external parser\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/model_io/symoro/external/expression_parser/CMakeLists.txt" : {
      "ObjectId" : "18cc5c4f4a9d87ca85e9b83767bf66f3300ed7a3",
      "LastModified" : "2018-06-07T09:33:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2015 Fondazione Istituto Italiano di Tecnologia\n\n#\n\n# Licensed under either the GNU Lesser General Public License v3.0 :\n\n# https://www.gnu.org/licenses/lgpl-3.0.html\n\n# or the GNU Lesser General Public License v2.1 :\n\n# https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html\n\n# at your option.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/model_io/tests/CMakeLists.txt" : {
      "ObjectId" : "4722185e237340f3238c60f4c9bc4d258a342846",
      "LastModified" : "2018-06-07T09:33:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2015 Fondazione Istituto Italiano di Tecnologia\n\n#\n\n# Licensed under either the GNU Lesser General Public License v3.0 :\n\n# https://www.gnu.org/licenses/lgpl-3.0.html\n\n# or the GNU Lesser General Public License v2.1 :\n\n# https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html\n\n# at your option.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#check iKin Denavit Hartenberg parameters export\n\n#add_executable(check_iKin_export_random_chain check_iKin_export_random_chain.cpp)\n\n#target_link_libraries(check_iKin_export_random_chain ${kdl_codyco_LIBRARIES} ${YARP_LIBRARIES} ${ICUB_LIBRARIES} kdl-format-io)\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#In Release mode, don't compile the HRP2 Regressor model because it takes a lot of time\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/model_io/urdf-kdl/CMakeLists.txt" : {
      "ObjectId" : "c31e7ee64c8e980b00a3db8b528c443a8174ac24",
      "LastModified" : "2018-06-07T09:33:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2015 Fondazione Istituto Italiano di Tecnologia\n\n#\n\n# Licensed under either the GNU Lesser General Public License v3.0 :\n\n# https://www.gnu.org/licenses/lgpl-3.0.html\n\n# or the GNU Lesser General Public License v2.1 :\n\n# https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html\n\n# at your option.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# urdfdom not available in the system, using the internal version\n",
        "Line" : 12,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# urdfdom_headers_VERSION is defined for all the versions of urdfdom_headers\n\n# that provide their own typedefs, so we need to redefine them only\n\n# for urdfdom_headers <= 0.4, that incidentally do not define urdfdom_headers_VERSION\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# make sure that the installed include directories are added after the include\n\n# directories added with the other targets\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/model_io/urdf-kdl/external/urdfdom/CMakeLists.txt" : {
      "ObjectId" : "01bf77f244208251c5028ce7c9a3ee8d6a99ee9e",
      "LastModified" : "2018-06-07T09:33:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# hack: by default this would be 'lib/x86_64-linux-gnu'\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#add_definitions(-DURDFDOM_STATIC)\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# we are building this internal copy only on windows\n\n# if we are not finding urdfdom, so to avoid to depend\n\n# on Boost we use plain pointers\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This shouldn't be necessary, but there has been trouble\n\n# with MSVC being set off, but MSVCXX ON.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# CMake options\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#find_package(urdfdom_headers)\n\n#include_directories(SYSTEM ${urdfdom_headers_INCLUDE_DIRS})\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#In Visual Studio a special postfix for\n\n#libraries compiled in debug is used\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#configure_file(\"${CMAKE_CURRENT_SOURCE_DIR}/${cmake_conf_file}.in\" \"${CMAKE_BINARY_DIR}/${cmake_conf_file}\" @ONLY)\n\n#install(FILES ${CMAKE_BINARY_DIR}/${cmake_conf_file}\n\n#  DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/${PROJECT_NAME}/cmake/ COMPONENT cmake)\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# If the proper option is selected by the user\n\n# avoid trying to install urdf_parser_py via CMake\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "src/model_io/urdf-kdl/external/urdfdom/urdf_parser/CMakeLists.txt" : {
      "ObjectId" : "55ed97a01a782cd2b29c4c800165616989436688",
      "LastModified" : "2018-06-07T09:33:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# share headers with all iDynTree targes\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#add_library(iDynTree_priv_urdfdom_world SHARED src/pose.cpp src/model.cpp src/link.cpp src/joint.cpp src/world.cpp)\n\n#target_link_libraries(iDynTree_priv_urdfdom_world ${TinyXML_LIBRARIES})\n\n#set_target_properties(iDynTree_priv_urdfdom_world PROPERTIES SOVERSION 0.3)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# comment out unused files\n",
        "Line" : 20,
        "CharPositionInLine" : 14
      },
      "3" : {
        "Text" : "#src/urdf_sensor.cpp\n\n#src/urdf_model_state.cpp\n\n#src/twist.cpp\n",
        "Line" : 21,
        "CharPositionInLine" : 47
      },
      "4" : {
        "Text" : "# --------------------------------\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#add_executable(check_urdf src/check_urdf.cpp)\n\n#target_link_libraries(check_urdf iDynTree_priv_urdfdom_model)\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#add_executable(urdf_to_graphiz src/urdf_to_graphiz.cpp)\n\n#target_link_libraries(urdf_to_graphiz iDynTree_priv_urdfdom_model)\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#add_executable(urdf_mem_test test/memtest.cpp)\n\n#target_link_libraries(urdf_mem_test iDynTree_priv_urdfdom_model)\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#INSTALL(TARGETS iDynTree_priv_urdfdom_world DESTINATION ${CMAKE_INSTALL_LIBDIR})\n\n#INSTALL(TARGETS check_urdf urdf_to_graphiz urdf_mem_test\n\n#  DESTINATION ${CMAKE_INSTALL_BINDIR})\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#INSTALL(DIRECTORY ../urdfdom_headers/urdf_model/include/urdf_model DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})\n\n#INSTALL(DIRECTORY ../urdfdom_headers/urdf_exception/include/urdf_exception  DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})\n\n#INSTALL(DIRECTORY ../urdfdom_headers/urdf_sensor/include/urdf_sensor DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})\n\n#INSTALL(DIRECTORY ../urdfdom_headers/urdf_world/include/urdf_world  DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})\n\n#INSTALL(DIRECTORY ../urdfdom_headers/urdf_model_state/include/urdf_model_state  DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "src/model_io/urdf-kdl/external/urdfdom_headers/CMakeLists.txt" : {
      "ObjectId" : "c981de153855e647bbaf630b60ad97c049d285bc",
      "LastModified" : "2018-06-07T09:33:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This shouldn't be necessary, but there has been trouble\n\n# with MSVC being set off, but MSVCXX ON.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Make the package config file\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/model_io/urdf-kdl/external/urdfdom_headers/urdf_exception/CMakeLists.txt" : {
      "ObjectId" : "82caa8db766274a0ffe1dc4c7f6f76e1b98d075b",
      "LastModified" : "2018-06-07T09:33:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/model_io/urdf-kdl/external/urdfdom_headers/urdf_model/CMakeLists.txt" : {
      "ObjectId" : "ca21a1f29b9a91504b527d1e6e51c2ba25798d04",
      "LastModified" : "2018-06-07T09:33:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/model_io/urdf-kdl/external/urdfdom_headers/urdf_model_state/CMakeLists.txt" : {
      "ObjectId" : "a043ee347a0286ddc7e1213c4918a65ad6dbf16e",
      "LastModified" : "2018-06-07T09:33:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/model_io/urdf-kdl/external/urdfdom_headers/urdf_sensor/CMakeLists.txt" : {
      "ObjectId" : "d049fde3247d86b46233bf1d8f1bc51ee9f728d4",
      "LastModified" : "2018-06-07T09:33:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/model_io/urdf-kdl/external/urdfdom_headers/urdf_world/CMakeLists.txt" : {
      "ObjectId" : "37167c41702119851d53958e9a9396a88f7ebaf4",
      "LastModified" : "2018-06-07T09:33:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/model_io/urdf/CMakeLists.txt" : {
      "ObjectId" : "90cab89a983161e9a0c8fb5d52d6ce6279ec8bd1",
      "LastModified" : "2018-09-16T17:42:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2015 Fondazione Istituto Italiano di Tecnologia\n\n#\n\n# Licensed under either the GNU Lesser General Public License v3.0 :\n\n# https://www.gnu.org/licenses/lgpl-3.0.html\n\n# or the GNU Lesser General Public License v2.1 :\n\n# https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html\n\n# at your option.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# share headers with all iDynTree targets\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Ensure that build include directories are always included before system ones\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/model_io/urdf/tests/CMakeLists.txt" : {
      "ObjectId" : "fc1c0e40da3facd9cb9c1e4952a797b91c311f89",
      "LastModified" : "2018-06-07T09:33:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2015 Fondazione Istituto Italiano di Tecnologia\n\n#\n\n# Licensed under either the GNU Lesser General Public License v3.0 :\n\n# https://www.gnu.org/licenses/lgpl-3.0.html\n\n# or the GNU Lesser General Public License v2.1 :\n\n# https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html\n\n# at your option.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/model_io/xml/CMakeLists.txt" : {
      "ObjectId" : "b3903e0ba8d2c34942ca42f0334220ae5ea6275f",
      "LastModified" : "2018-09-16T17:42:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2015 Fondazione Istituto Italiano di Tecnologia\n\n#\n\n# Licensed under either the GNU Lesser General Public License v3.0 :\n\n# https://www.gnu.org/licenses/lgpl-3.0.html\n\n# or the GNU Lesser General Public License v2.1 :\n\n# https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html\n\n# at your option.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# share headers with all iDynTree targets\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Test if this works:\n\n# We want to include the same-library header files directly (in the implementation), but with the full prefix in the .h (as this will be public)\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Ensure that build include directories are always included before system ones\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/model_io/xml/tests/CMakeLists.txt" : {
      "ObjectId" : "a3106f8ec3b0e47f664a36bff582a0f5ca1ec892",
      "LastModified" : "2018-09-16T17:42:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2018 Fondazione Istituto Italiano di Tecnologia\n\n#\n\n# Licensed under either the GNU Lesser General Public License v3.0 :\n\n# https://www.gnu.org/licenses/lgpl-3.0.html\n\n# or the GNU Lesser General Public License v2.1 :\n\n# https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html\n\n# at your option.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/optimalcontrol/CMakeLists.txt" : {
      "ObjectId" : "e6815e1a3a784c8492759cb40c401457c66bcdac",
      "LastModified" : "2018-09-16T17:42:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Dependencies\n\n# IPOPT\n\n# SUNDIALS (?)\n\n# find_package(IPOPT REQUIRED)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# install\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/optimalcontrol/tests/CMakeLists.txt" : {
      "ObjectId" : "f61701d99c928b9555bec0c3964d24c21c3f473f",
      "LastModified" : "2018-09-16T17:42:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/regressors/CMakeLists.txt" : {
      "ObjectId" : "5a3487d4afc4fad4d10ea0e7a7bfb31e8e39c534",
      "LastModified" : "2018-09-16T17:42:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2015 Fondazione Istituto Italiano di Tecnologia\n\n#\n\n# Licensed under either the GNU Lesser General Public License v3.0 :\n\n# https://www.gnu.org/licenses/lgpl-3.0.html\n\n# or the GNU Lesser General Public License v2.1 :\n\n# https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html\n\n# at your option.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO \\todo : avoid globbing and explicitly state everithing\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Legacy library, remove deprecated warnings when compiling\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Ensure that build include directories are always included before system ones\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Install headers in iDynTree/Regressors directory\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/sensors/CMakeLists.txt" : {
      "ObjectId" : "3115e8bd46810d71c0180dbe961ac021ecf99038",
      "LastModified" : "2018-09-16T17:42:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2015 Fondazione Istituto Italiano di Tecnologia\n\n#\n\n# Licensed under either the GNU Lesser General Public License v3.0 :\n\n# https://www.gnu.org/licenses/lgpl-3.0.html\n\n# or the GNU Lesser General Public License v2.1 :\n\n# https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html\n\n# at your option.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# share headers with all iDynTree targets\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#include system headers\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Ensure that build include directories are always included before system ones\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/sensors/tests/CMakeLists.txt" : {
      "ObjectId" : "4201db03e68f7a9d7cd2e2da8a56e0d588db1619",
      "LastModified" : "2018-09-16T17:42:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tests/CMakeLists.txt" : {
      "ObjectId" : "a3bf250a9f7d870c497b6474b4d5e3a8d7a1d834",
      "LastModified" : "2018-09-16T17:42:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add integration tests, that\n\n# test interaction between components\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Integration tests of old kdl_codyco project\n",
        "Line" : 6,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Consistency tests with kdl stuff\n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Benchmarks against old RNEA & CRBA based on kdl\n",
        "Line" : 12,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Comparative tests of implementations of similar methods in iDynTree, Eigen, KDL and YARP\n\n# if( IDYNTREE_USES_YARP )\n\n#     add_subdirectory(yarp_kdl_consistency)\n\n# endif()\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Add benchmark test against yarp/icub functions\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Add a subdirectory of all the consistency tests between the old\n\n# iCub-dependent external force/internal torque estimation\n\n# implementations and the new native iDynTree implementations\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "src/tests/benchmark/CMakeLists.txt" : {
      "ObjectId" : "0df14d67b3fc38bd485d3da3059e82a01305e027",
      "LastModified" : "2018-09-16T17:42:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2015 Fondazione Istituto Italiano di Tecnologia\n\n#\n\n# Licensed under either the GNU Lesser General Public License v3.0 :\n\n# https://www.gnu.org/licenses/lgpl-3.0.html\n\n# or the GNU Lesser General Public License v2.1 :\n\n# https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html\n\n# at your option.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/tests/data/CMakeLists.txt" : {
      "ObjectId" : "d6510c1d0eca7443f0e42ae57f18de3b16f43bff",
      "LastModified" : "2018-09-16T17:42:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2015 Fondazione Istituto Italiano di Tecnologia\n\n#\n\n# Licensed under either the GNU Lesser General Public License v3.0 :\n\n# https://www.gnu.org/licenses/lgpl-3.0.html\n\n# or the GNU Lesser General Public License v2.1 :\n\n# https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html\n\n# at your option.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This folder contains resources useful for testing (such as URDF files)\n\n# that are copied in all the test directories\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# if you add a file to this list, please\n\n# remember to add it also in the\n\n# testModels.h.in file\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# configure an header containing the path\n\n# where the test files are stored and the list of files\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/tests/icub_consistency/CMakeLists.txt" : {
      "ObjectId" : "24abaaa0acb4de808b061ea7823bfe75aab678f3",
      "LastModified" : "2018-09-16T17:42:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2015 Fondazione Istituto Italiano di Tecnologia\n\n#\n\n# Licensed under either the GNU Lesser General Public License v3.0 :\n\n# https://www.gnu.org/licenses/lgpl-3.0.html\n\n# or the GNU Lesser General Public License v2.1 :\n\n# https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html\n\n# at your option.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/tests/integration/CMakeLists.txt" : {
      "ObjectId" : "fcca1bd131c89978c4d70af1f13f5b9550a26022",
      "LastModified" : "2018-09-16T17:42:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2015 Fondazione Istituto Italiano di Tecnologia\n\n#\n\n# Licensed under either the GNU Lesser General Public License v3.0 :\n\n# https://www.gnu.org/licenses/lgpl-3.0.html\n\n# or the GNU Lesser General Public License v2.1 :\n\n# https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html\n\n# at your option.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# See issue https://github.com/robotology/idyntree/issues/367\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Until we fix it, add DynamicsLinearization test but don't execute it\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/tests/kdl_consistency/CMakeLists.txt" : {
      "ObjectId" : "6d868a8f9c951cff38c4832651db7422f256ec62",
      "LastModified" : "2018-09-16T17:42:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2015 Fondazione Istituto Italiano di Tecnologia\n\n#\n\n# Licensed under either the GNU Lesser General Public License v3.0 :\n\n# https://www.gnu.org/licenses/lgpl-3.0.html\n\n# or the GNU Lesser General Public License v2.1 :\n\n# https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html\n\n# at your option.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Legacy tests, remove deprecated warnings when compiling\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/tests/kdl_tests/CMakeLists.txt" : {
      "ObjectId" : "d378b3961c5abfd96c8ccfc1d5158beca0ae0f2d",
      "LastModified" : "2018-09-16T17:42:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2015 Fondazione Istituto Italiano di Tecnologia\n\n#\n\n# Licensed under either the GNU Lesser General Public License v3.0 :\n\n# https://www.gnu.org/licenses/lgpl-3.0.html\n\n# or the GNU Lesser General Public License v2.1 :\n\n# https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html\n\n# at your option.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Legacy tests, remove deprecated warnings when compiling\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Commented because at the moment it takes a lot of time\n\n# add_all_components_test(urdf2dh)\n\n# target_link_libraries(urdf2dh_test iKin idyntree-kdl idyntree-yarp-kdl idyntree-regressors idyntree-modelio-urdf-kdl idyntree-modelio-ikin)\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# \\todo reenable this test\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#add_test(NAME test_urdf2dh COMMAND urdf2dh_test urdf_icub_test.urdf)\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#add_test(NAME test_urdf_forward_kinematics  COMMAND urdf_forward_kinematics black_icub.urdf root_link r_hip_3)\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/tests/yarp_benchmark/CMakeLists.txt" : {
      "ObjectId" : "2e572f83b8377d53ac08801ab6e9e1b03fc5636e",
      "LastModified" : "2018-09-16T17:42:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2015 Fondazione Istituto Italiano di Tecnologia\n\n#\n\n# Licensed under either the GNU Lesser General Public License v3.0 :\n\n# https://www.gnu.org/licenses/lgpl-3.0.html\n\n# or the GNU Lesser General Public License v2.1 :\n\n# https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html\n\n# at your option.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/tests/yarp_kdl_consistency/CMakeLists.txt" : {
      "ObjectId" : "9bfdac09c30553c953fea231c4b9a6b1002f34b0",
      "LastModified" : "2018-09-16T17:42:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2015 Fondazione Istituto Italiano di Tecnologia\n\n#\n\n# Licensed under either the GNU Lesser General Public License v3.0 :\n\n# https://www.gnu.org/licenses/lgpl-3.0.html\n\n# or the GNU Lesser General Public License v2.1 :\n\n# https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html\n\n# at your option.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/tools/CMakeLists.txt" : {
      "ObjectId" : "3a574853f9a4aedaf6d9a1040d84f0076f5823be",
      "LastModified" : "2018-09-16T17:42:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2015 Fondazione Istituto Italiano di Tecnologia\n\n#\n\n# Licensed under either the GNU Lesser General Public License v3.0 :\n\n# https://www.gnu.org/licenses/lgpl-3.0.html\n\n# or the GNU Lesser General Public License v2.1 :\n\n# https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html\n\n# at your option.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/tools/idyntree-sole-gui/CMakeLists.txt" : {
      "ObjectId" : "9f41fb98754ced912762f03a89b84ccd1b36ee50",
      "LastModified" : "2018-09-16T17:42:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2015  iCub Facility, Istituto Italiano di Tecnologia\n\n# Author: Daniele E. Domenichelli <daniele.domenichelli@iit.it>\n\n# CopyPolicy: Released under the terms of the LGPLv2.1 or later, see LGPL.TXT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Remove -rdynamic from CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS.\n\n# This is needed for some weird reason, or executables will not load resources\n\n# from the plugins.\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Configure config.h file\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Include current binary dir to be able to find the config.h file\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Instruct CMake to issue deprecation warnings for macros and functions.\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Instruct CMake to run moc automatically when needed.\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/tools/idyntree-sole-gui/plugin/CMakeLists.txt" : {
      "ObjectId" : "4094ef75756234bf4a2360b8c3298373e2ca39d5",
      "LastModified" : "2018-09-16T17:42:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2015  iCub Facility, Istituto Italiano di Tecnologia\n\n# Author: Daniele E. Domenichelli <daniele.domenichelli@iit.it>\n\n# CopyPolicy: Released under the terms of the LGPLv2.1 or later, see LGPL.TXT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/tools/idyntree-sole-gui/src/CMakeLists.txt" : {
      "ObjectId" : "6154e7b412ddb60d2555b51b6f19403d20e88a0a",
      "LastModified" : "2018-09-16T17:42:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2015  iCub Facility, Istituto Italiano di Tecnologia\n\n# Author: Daniele E. Domenichelli <daniele.domenichelli@iit.it>\n\n# CopyPolicy: Released under the terms of the LGPLv2.1 or later, see LGPL.TXT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Remove -rdynamic from CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS.\n\n# This is needed for some weird reason, or executables will not load resources\n\n# from the plugins.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/tools/plotter/CMakeLists.txt" : {
      "ObjectId" : "ea09dd5790519f830418538167466540999db725",
      "LastModified" : "2018-09-16T17:42:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tools/yarprobotstatepublisher/CMakeLists.txt" : {
      "ObjectId" : "ec47729d2dc1d9553871d0ab6ef06f9464e4864a",
      "LastModified" : "2018-09-16T17:42:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2017 Fondazione Istituto Italiano di Tecnologia (IIT)  \n\n# All Rights Reserved.\n\n# Authors: Silvio Traversaro <silvio.traversaro@iit.it>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Workaround for yarp_add_idl problems\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/visualization/CMakeLists.txt" : {
      "ObjectId" : "fb5f0024f51359aa01a3359b87a797c168481712",
      "LastModified" : "2018-09-16T17:42:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright: (C) 2016 Fondazione Istituto Italiano di Tecnologia\n\n# Authors: Silvio Traversaro\n\n# CopyPolicy: Released under the terms of the LGPLv2.1 or later, see LGPL.TXT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Some files are compiled only when irrlicht is available\n",
        "Line" : 12,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# share headers with all iDynTree targets\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# enable warnings on this part of the add_library\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# To avoid having to regenerate the SWIG bindings code, we compile the visualization library\n\n# even if irrlicht is not used, this can be removed when we stop to commit swig generated code\n\n# to the repo\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# On Apple system, irrlicht uses some system libraries \n",
        "Line" : 73,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "src/visualization/tests/CMakeLists.txt" : {
      "ObjectId" : "74c583e10a81dab2de5b189ccb4f3ea362801d4d",
      "LastModified" : "2018-09-16T17:42:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2015 Fondazione Istituto Italiano di Tecnologia\n\n#\n\n# Licensed under either the GNU Lesser General Public License v3.0 :\n\n# https://www.gnu.org/licenses/lgpl-3.0.html\n\n# or the GNU Lesser General Public License v2.1 :\n\n# https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html\n\n# at your option.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/yarp/CMakeLists.txt" : {
      "ObjectId" : "1429ae8539e43e7565bed220cf80169a6d7ab420",
      "LastModified" : "2018-09-16T17:42:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2015 Fondazione Istituto Italiano di Tecnologia\n\n#\n\n# Licensed under either the GNU Lesser General Public License v3.0 :\n\n# https://www.gnu.org/licenses/lgpl-3.0.html\n\n# or the GNU Lesser General Public License v2.1 :\n\n# https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html\n\n# at your option.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# share headers with all iDynTree targets\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "CMAKE" : 96
  },
  "ElapsedTime" : 2508
}