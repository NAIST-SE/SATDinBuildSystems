{
  "Repository" : "5556378",
  "Revision" : "HEAD",
  "ObjectId" : "92b040fa2aab42d9bfedefe4daf47e5cac7abbd5",
  "CommitTime" : "2019-04-11T16:01:35Z",
  "Files" : {
    "ImageLounge/3rdparty/libqpsd/CMakeLists.txt" : {
      "ObjectId" : "941bf353a5d42519aaa541bfce281f6d3d183e44",
      "LastModified" : "2018-12-20T13:33:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# qt warnings\n",
        "Line" : 8,
        "CharPositionInLine" : 32
      },
      "1" : {
        "Text" : "# COMPILE_DEFINITIONS_<CONFIG> warnings\n",
        "Line" : 11,
        "CharPositionInLine" : 34
      },
      "CommentCount" : 2
    },
    "ImageLounge/3rdparty/libqpsd/QPsdPlugin.pro" : {
      "ObjectId" : "8c63256c2b25812244dfc59da573070ab1f53d3e",
      "LastModified" : "2018-12-20T13:33:06Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2013-04-13T20:22:14\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ImageLounge/CMakeLists.txt" : {
      "ObjectId" : "030e773756d2ec2cdba4eabf7d8c066eee4e622b",
      "LastModified" : "2019-04-08T14:09:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# check cmake requirements\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# IF(CMAKE_VERSION VERSION_GREATER 2.8.10)\n\n# \tcmake_policy(SET CMP0020 NEW)\t# qt warnings\n\n# ENDIF()\n\n# IF(CMAKE_VERSION VERSION_GREATER 2.8.12.9)\n\n# \tcmake_policy(SET CMP0043 NEW)\t# COMPILE_DEFINITIONS_<CONFIG> warnings\n\n# ENDIF()\n",
        "Line" : 8,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "######################## begin of project\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# needed for soname\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# include macros needed\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# different compile options\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Codecov\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# cannot be incorporated into if one line above\n",
        "Line" : 66,
        "CharPositionInLine" : 25
      },
      "8" : {
        "Text" : "# set output path when building for READ\n",
        "Line" : 67,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# load paths from the user file if exists\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Codecov\n",
        "Line" : 100,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# find Qt\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# gui\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# core\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# gather information for building\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# needed for linux psd hack\n",
        "Line" : 146,
        "CharPositionInLine" : 46
      },
      "16" : {
        "Text" : "# todo: somehow add this to Mac.cmake or MacBuildTarget.cmake\n",
        "Line" : 150,
        "CharPositionInLine" : 11
      },
      "17" : {
        "Text" : "#debug for printing out all variables\n\n# get_cmake_property(_variableNames VARIABLES)\n\n# foreach (_variableName ${_variableNames})\n\n#     message(STATUS \"${_variableName}=${${_variableName}}\")\n\n# endforeach()\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# set the snapcraft dir\n",
        "Line" : 204,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# get rid of VSCode warning (when using MSBuild)\n\n# see: https://stackoverflow.com/questions/36451368/get-rid-of-cmake-warning-manually-specified-variables-were-not-used-by-the-proj/36452112\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# status\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "ImageLounge/CMakeUserPathsGit.cmake" : {
      "ObjectId" : "7fcffb014f70b7cc85ba16b027679d7edd0db3b5",
      "LastModified" : "2018-08-31T11:52:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If you want to use prefix paths with cmake, copy and rename this file to CMakeUser.cmake\n\n# Do not add this file to GIT!\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set your preferred OpenCV Library path\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "ImageLounge/cmake/CodeCoverage.cmake" : {
      "ObjectId" : "64f6d5f34fa7aa490bc7adb2df335155c163f5eb",
      "LastModified" : "2017-06-21T09:05:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2012 - 2015, Lars Bilke\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without modification,\n\n# are permitted provided that the following conditions are met:\n\n#\n\n# 1. Redistributions of source code must retain the above copyright notice, this\n\n#    list of conditions and the following disclaimer.\n\n#\n\n# 2. Redistributions in binary form must reproduce the above copyright notice,\n\n#    this list of conditions and the following disclaimer in the documentation\n\n#    and/or other materials provided with the distribution.\n\n#\n\n# 3. Neither the name of the copyright holder nor the names of its contributors\n\n#    may be used to endorse or promote products derived from this software without\n\n#    specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n\n# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\n# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\n# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\n# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n\n# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\n# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n#\n\n#\n\n# 2012-01-31, Lars Bilke\n\n# - Enable Code Coverage\n\n#\n\n# 2013-09-17, Joakim Sï¿½derberg\n\n# - Added support for Clang.\n\n# - Some additional usage instructions.\n\n#\n\n# USAGE:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# 0. (Mac only) If you use Xcode 5.1 make sure to patch geninfo as described here:\n\n#      http://stackoverflow.com/a/22404544/80480\n\n#\n\n# 1. Copy this file into your cmake modules path.\n\n#\n\n# 2. Add the following line to your CMakeLists.txt:\n\n#      INCLUDE(CodeCoverage)\n\n#\n\n# 3. Set compiler flags to turn off optimization and enable coverage:\n\n#    SET(CMAKE_CXX_FLAGS \"-g -O0 -fprofile-arcs -ftest-coverage\")\n\n#\t SET(CMAKE_C_FLAGS \"-g -O0 -fprofile-arcs -ftest-coverage\")\n\n#\n\n# 3. Use the function SETUP_TARGET_FOR_COVERAGE to create a custom make target\n\n#    which runs your test executable and produces a lcov code coverage report:\n\n#    Example:\n\n#\t SETUP_TARGET_FOR_COVERAGE(\n\n#\t\t\t\tmy_coverage_target  # Name for custom target.\n\n#\t\t\t\ttest_driver         # Name of the test driver executable that runs the tests.\n\n#\t\t\t\t\t\t\t\t\t# NOTE! This should always have a ZERO as exit code\n\n#\t\t\t\t\t\t\t\t\t# otherwise the coverage generation will not complete.\n\n#\t\t\t\tcoverage            # Name of output directory.\n\n#\t\t\t\t)\n\n#\n\n# 4. Build a Debug build:\n\n#\t cmake -DCMAKE_BUILD_TYPE=Debug ..\n\n#\t make\n\n#\t make my_coverage_target\n\n#\n\n#\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check prereqs\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# NOT GCOV_PATH\n",
        "Line" : 78,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# CHECK VALID COMPILER\n",
        "Line" : 86,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# NOT CMAKE_BUILD_TYPE STREQUAL \"Debug\"\n",
        "Line" : 112,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Param _targetname     The name of new the custom make target\n\n# Param _testrunner     The name of the target which runs the tests.\n\n#\t\t\t\t\t\tMUST return ZERO always, even on errors.\n\n#\t\t\t\t\t\tIf not, no coverage report will be created!\n\n# Param _outputname     lcov output is generated as _outputname.info\n\n#                       HTML report is generated in _outputname/index.html\n\n# Optional fourth parameter is passed as arguments to _testrunner\n\n#   Pass them in list form, e.g.: \"-j;2\" for -j 2\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# NOT LCOV_PATH\n",
        "Line" : 127,
        "CharPositionInLine" : 9
      },
      "8" : {
        "Text" : "# NOT GENHTML_PATH\n",
        "Line" : 131,
        "CharPositionInLine" : 9
      },
      "9" : {
        "Text" : "# Setup target\n",
        "Line" : 138,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# Cleanup lcov\n",
        "Line" : 141,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Run tests\n",
        "Line" : 144,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Capturing lcov counters and generating report\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Show info where to find the report\n",
        "Line" : 157,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# SETUP_TARGET_FOR_COVERAGE\n",
        "Line" : 163,
        "CharPositionInLine" : 14
      },
      "15" : {
        "Text" : "# Param _targetname     The name of new the custom make target\n\n# Param _testrunner     The name of the target which runs the tests\n\n# Param _outputname     cobertura output is generated as _outputname.xml\n\n# Optional fourth parameter is passed as arguments to _testrunner\n\n#   Pass them in list form, e.g.: \"-j;2\" for -j 2\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# NOT PYTHON_EXECUTABLE\n",
        "Line" : 174,
        "CharPositionInLine" : 9
      },
      "17" : {
        "Text" : "# NOT GCOVR_PATH\n",
        "Line" : 178,
        "CharPositionInLine" : 9
      },
      "18" : {
        "Text" : "# Run tests\n",
        "Line" : 182,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Running gcovr\n",
        "Line" : 185,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Show info where to find the report\n",
        "Line" : 191,
        "CharPositionInLine" : 1
      },
      "21" : {
        "Text" : "# SETUP_TARGET_FOR_COVERAGE_COBERTURA",
        "Line" : 197,
        "CharPositionInLine" : 14
      },
      "CommentCount" : 22
    },
    "ImageLounge/cmake/FindQuaZip5.cmake" : {
      "ObjectId" : "7c020d798574e69ca84449cf331b5a116097b238",
      "LastModified" : "2018-09-03T08:03:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# QUAZIP_FOUND               - QuaZip library was found\n\n# QUAZIP_INCLUDE_DIR         - Path to QuaZip include dir\n\n# QUAZIP_INCLUDE_DIRS        - Path to QuaZip and zlib include dir (combined from QUAZIP_INCLUDE_DIR + ZLIB_INCLUDE_DIR)\n\n# QUAZIP_LIBRARIES           - List of QuaZip libraries\n\n# QUAZIP_ZLIB_INCLUDE_DIR    - The include dir of zlib headers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 9,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "ImageLounge/cmake/Mac.cmake" : {
      "ObjectId" : "e1050e3d9eb4c76b0976037cc19266de7ea61ddc",
      "LastModified" : "2018-09-03T08:03:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# nomacs cmake file for a mac build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# search for pkgConfig, needed for exvi2, libraw, and older OpenCV versions\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# search for exiv2\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# search for opencv\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# not sure: pkgconfig is needed for old linux  with old old opencv systems\n",
        "Line" : 37,
        "CharPositionInLine" : 22
      },
      "5" : {
        "Text" : "# OpenCV has really draconian dependencies on mac (generating bundle greater tha 105MB)\n\n# so I play bad games here - expecting all will work with manually updated library names\n",
        "Line" : 52,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# search for libraw\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#search for multi-layer tiff\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#search for quazip\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# add libqpsd\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "ImageLounge/cmake/MacBuildTarget.cmake" : {
      "ObjectId" : "dd41af4e90ff5aa96a4acd03313ca4272e2656dd",
      "LastModified" : "2018-09-03T08:03:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#taken from https://cmake.org/Wiki/CMake_RPATH_handling to avoid warning\n\n# use, i.e. don't skip the full RPATH for the build tree\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# when building, don't use the install RPATH already\n\n# (but later on when installing)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# the RPATH to be used when installing\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# don't add the automatically determined parts of the RPATH\n\n# which point to directories outside the build tree to the install RPATH\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# create the targets\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#binary\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# add core\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# core flags\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# mac's bundle install\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# create a \"transportable\" bundle - all libs into the bundle: \"make bundle\" after make install\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# generate configuration file\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "ImageLounge/cmake/Unix.cmake" : {
      "ObjectId" : "5567084b00ff4624795ecafb536f5693dbbc89d5",
      "LastModified" : "2018-10-11T09:04:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# nomacs cmake file for a Unix/Linux build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# try to use system libraries or not\n\n# currently disabled due to packaging problems\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# search for pkgConfig, needed for exvi2, libraw, and older OpenCV versions\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# search for exiv2\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# search for opencv\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# OpenCV_FOUND can not be used since it is set in Ubuntu 12.04 (without finding opencv)\n",
        "Line" : 42,
        "CharPositionInLine" : 27
      },
      "6" : {
        "Text" : "# Older OpenCV versions only supplied pkg-config files\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# search for libraw\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#search for multi-layer tiff\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#search for quazip\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# add libqpsd\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "ImageLounge/cmake/UnixBuildTarget.cmake" : {
      "ObjectId" : "9506402d344760306bc556ccacb213c6007cf2d1",
      "LastModified" : "2018-10-11T11:47:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# create the targets\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#binary\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add core\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# core flags\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# installation\n\n#  binary\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#  desktop file\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#  icon\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#  translations\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#  manpage\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#  appdata\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# themes\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# \"make dist\" target\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# simulate autotools' \"make dist\"\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# generate configuration file\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "ImageLounge/cmake/Utils.cmake" : {
      "ObjectId" : "0c7cd18b821123b40a403eb755f999a68fe8607e",
      "LastModified" : "2019-04-09T08:01:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Searches for Qt with the required components\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set(CMAKE_INCLUDE_CURRENT_DIR ON)\n",
        "Line" : 5,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# copy all themes\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "ImageLounge/cmake/Win.cmake" : {
      "ObjectId" : "48bc9015796c161fe4d781171c197effb45d3604",
      "LastModified" : "2019-04-09T08:01:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# nomacs cmake file for a windows build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# load pathes from the user file if exists\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# prepare build directory\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add exiv2\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# search for opencv\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# unset(OpenCV_DIR CACHE) # maa that always set it to default!\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# unset include directories since OpenCV sets them global\n",
        "Line" : 45,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# search for libraw\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# we need our CMAKE (https://github.com/nomacs/LibRaw) to add LibRaw like this\n",
        "Line" : 55,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# search for multi-layer tiff\n\n# we try to grab the OpenCV's libtiff\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# @stefan we need here the path to opencv/3rdparty/libtiff ... update 10.07.2013 stefan: currently not possible with the cmake of opencv\n",
        "Line" : 82,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# TODO: remove - just for flo\n",
        "Line" : 92,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# these variables need to be set before adding subdirectory with projects\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "ImageLounge/cmake/WinBuildTarget.cmake" : {
      "ObjectId" : "596cbcfe8c8add4237bba5bf88e679bdac962fb9",
      "LastModified" : "2019-04-09T08:01:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add resource file when compiling with MSVC\n",
        "Line" : 1,
        "CharPositionInLine" : 29
      },
      "1" : {
        "Text" : "# create the targets\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#binary\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# define that changelog should not be compiled\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# add DLL\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# metadata support\n",
        "Line" : 46,
        "CharPositionInLine" : 19
      },
      "6" : {
        "Text" : "# needed for registering the curren version\n",
        "Line" : 47,
        "CharPositionInLine" : 20
      },
      "7" : {
        "Text" : "# RAW support (optional)\n",
        "Line" : 48,
        "CharPositionInLine" : 23
      },
      "8" : {
        "Text" : "# image manipulation support (optional)\n",
        "Line" : 49,
        "CharPositionInLine" : 20
      },
      "9" : {
        "Text" : "# multip page tiff support (optional)\n",
        "Line" : 50,
        "CharPositionInLine" : 22
      },
      "10" : {
        "Text" : "# ZIP support (optional)\n",
        "Line" : 51,
        "CharPositionInLine" : 23
      },
      "11" : {
        "Text" : "# set(_moc ${CMAKE_CURRENT_BINARY_DIR}/GeneratedFiles)\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# core flags\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# make RelWithDebInfo link against release instead of debug opencv dlls\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# copy additional Qt files\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# add image plugins\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# *d.dll would exclude qpsd.dll - so copy this manually...\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Platforms\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# PrintSupport\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# add default settings file\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# # WinExtras\n\n# file(COPY ${QT_QMAKE_PATH}/../../qtwinextras/bin/Qt5WinExtras.dll DESTINATION ${CMAKE_BINARY_DIR}/Release/)\n\n# file(COPY ${QT_QMAKE_PATH}/../../qtwinextras/bin/Qt5WinExtras.dll DESTINATION ${CMAKE_BINARY_DIR}/RelWithDebInfo/)\n\n# file(COPY ${QT_QMAKE_PATH}/../../qtwinextras/bin/Qt5WinExtrasd.dll DESTINATION ${CMAKE_BINARY_DIR}/Debug/)\n",
        "Line" : 119,
        "CharPositionInLine" : 1
      },
      "21" : {
        "Text" : "# # SVG support\n\n# file(COPY ${QT_QMAKE_PATH}/../../qtsvg/bin/Qt5Svg.dll DESTINATION ${CMAKE_BINARY_DIR}/Release/)\n\n# file(COPY ${QT_QMAKE_PATH}/../../qtsvg/bin/Qt5Svg.dll DESTINATION ${CMAKE_BINARY_DIR}/RelWithDebInfo/)\n\n# file(COPY ${QT_QMAKE_PATH}/../../qtsvg/bin/Qt5Svgd.dll DESTINATION ${CMAKE_BINARY_DIR}/Debug/)\n",
        "Line" : 124,
        "CharPositionInLine" : 1
      },
      "22" : {
        "Text" : "# file(COPY ${QT_QMAKE_PATH}/../../qtsvg/plugins/imageformats/qsvg.dll DESTINATION ${CMAKE_BINARY_DIR}/Release/imageformats)\n\n# file(COPY ${QT_QMAKE_PATH}/../../qtsvg/plugins/imageformats/qsvg.dll DESTINATION ${CMAKE_BINARY_DIR}/RelWithDebInfo/imageformats)\n\n# file(COPY ${QT_QMAKE_PATH}/../../qtsvg/plugins/imageformats/qsvgd.dll DESTINATION ${CMAKE_BINARY_DIR}/Debug/imageformats)\n",
        "Line" : 129,
        "CharPositionInLine" : 1
      },
      "23" : {
        "Text" : "# WinExtras\n",
        "Line" : 133,
        "CharPositionInLine" : 1
      },
      "24" : {
        "Text" : "# SVG support\n",
        "Line" : 138,
        "CharPositionInLine" : 1
      },
      "25" : {
        "Text" : "# Themes\n",
        "Line" : 145,
        "CharPositionInLine" : 1
      },
      "26" : {
        "Text" : "# create settings file for portable version while working\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# copy translation files after each build\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# add build incrementer command if requested\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# set properties for Visual Studio Projects\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# generate configuration file\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "### DependencyCollector\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# CMAKE_MAKE_PROGRAM works for VS 2017 too\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# path hints for the dependency collector\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 34
    }
  },
  "FileTypes" : {
    "CMAKE" : 12,
    "QMAKE" : 1
  },
  "ElapsedTime" : 3181
}