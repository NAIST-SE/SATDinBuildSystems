{
  "Repository" : "41445014",
  "Revision" : "HEAD",
  "ObjectId" : "4316b2a7c6211edda32f48ba20ec0fb841d571ff",
  "CommitTime" : "2019-03-03T14:12:09Z",
  "Files" : {
    "Plugins/JoystickPlugin/ThirdParty/SDL2/SDL_Patches/CMakeLists.txt" : {
      "ObjectId" : "e4276aca863568aa74aa077ef1d6a65ee27d6e68",
      "LastModified" : "2016-10-25T06:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# General settings\n\n# Edit include/SDL_version.h and change the version, then:\n\n#   SDL_MICRO_VERSION += 1;\n\n#   SDL_INTERFACE_AGE += 1;\n\n#   SDL_BINARY_AGE += 1;\n\n# if any functions have been added, set SDL_INTERFACE_AGE to 0.\n\n# if backwards compatibility has been broken,\n\n# set SDL_BINARY_AGE and SDL_INTERFACE_AGE to 0.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Calculate a libtool-like version number\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# General settings & flags\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Check for 64 or 32 bit\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Get the platform\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# TODO: iOS?\n",
        "Line" : 100,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Don't mistake osx for unix\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# JavaScript does not yet have threading support, so disable pthreads when building for Emscripten.\n",
        "Line" : 120,
        "CharPositionInLine" : 40
      },
      "8" : {
        "Text" : "# Default option knobs\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Compiler info\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# VisualStudio 8.0+\n",
        "Line" : 141,
        "CharPositionInLine" : 34
      },
      "11" : {
        "Text" : "#set(CMAKE_C_FLAGS \"/ZI /WX- /\n",
        "Line" : 143,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Default flags, if not set otherwise\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Hackish, but does the trick on Win32\n",
        "Line" : 157,
        "CharPositionInLine" : 37
      },
      "14" : {
        "Text" : "# Those are used for pkg-config and friends, so that the SDL2.pc, sdl2-config,\n\n# etc. are created correctly.\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Emscripten toolchain has a nonempty default value for this, and the checks \n\n# in this file need to change that, so remember the original value, and \n\n# restore back to that afterwards. For check_function_exists() to work in\n\n# Emscripten, this value must be at its default value.\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# We build SDL on cygwin without the UNIX emulation layer\n",
        "Line" : 186,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# General includes\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# All these ENABLED_BY_DEFAULT vars will default to ON if not specified, so\n\n#  you only need to have a platform override them if they are disabling.\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Set up default values for the currently supported set of subsystems:\n\n# Emscripten/Javascript does not have assembly support, a dynamic library \n\n# loading architecture, low-level CPU inspection or multithreading.\n",
        "Line" : 207,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "#set_option(DEPENDENCY_TRACKING \"Use gcc -MMD -MT dependency tracking\" ON)\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# TODO: We should (should we?) respect cmake's ${BUILD_SHARED_LIBS} flag here\n\n# The options below are for compatibility to configure's default behaviour.\n",
        "Line" : 290,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# General source files\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Do nada - use optimization settings to determine the assertion level\n",
        "Line" : 314,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Compiler option evaluation\n",
        "Line" : 328,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# TODO: Those all seem to be quite GCC specific - needs to be\n\n# reworked for better compiler support\n",
        "Line" : 394,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# if only HAVE_ALTIVEC_H_HDR is set\n",
        "Line" : 507,
        "CharPositionInLine" : 31
      },
      "27" : {
        "Text" : "# TODO: SDL_cpuinfo.h needs to support the user's configuration wish\n\n# for MSVC - right now it is always activated\n",
        "Line" : 516,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# TODO:\n\n#else()\n\n#  if(USE_GCC OR USE_CLANG)\n\n#    list(APPEND EXTRA_CFLAGS \"-mno-sse\" \"-mno-sse2\" \"-mno-mmx\")\n\n#  endif()\n",
        "Line" : 526,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# TODO: Can't deactivate on FreeBSD? w/o LIBC, SDL_stdinc.h can't define\n\n# anything.\n",
        "Line" : 533,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# needed for M_PI\n",
        "Line" : 557,
        "CharPositionInLine" : 41
      },
      "31" : {
        "Text" : "# TODO: refine the mprotect check\n",
        "Line" : 573,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# Enable/disable various subsystems of the SDL library\n",
        "Line" : 629,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Haptic requires some private functions from the joystick subsystem.\n",
        "Line" : 642,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# TODO: in configure.in, the test for LOADSO and SDL_DLOPEN is a bit weird:\n\n# if LOADSO is not wanted, SDL_LOADSO_DISABLED is set\n\n# If however on Unix or APPLE dlopen() is detected via CheckDLOPEN(),\n\n# SDL_LOADSO_DISABLED will not be set, regardless of the LOADSO settings\n",
        "Line" : 652,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# General SDL subsystem options, valid for all platforms\n",
        "Line" : 657,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# CheckDummyAudio/CheckDiskAudio - valid for all platforms\n",
        "Line" : 659,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# Relevant for Unix/Darwin only\n",
        "Line" : 675,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# Platform-specific options and settings\n",
        "Line" : 691,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Hide noisy warnings that intend to aid mostly during initial stages of porting a new\n\n# project. Uncomment at will for verbose cross-compiling -I/../ path info.\n",
        "Line" : 693,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "#enable gles\n",
        "Line" : 726,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "# Need to check for Raspberry PI first and add platform specific compiler flags, otherwise the test for GLES fails!\n",
        "Line" : 763,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "# !!! FIXME: this needs pkg-config to find the include path, I think.\n",
        "Line" : 813,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "# seems to be BSD specific - limit the test to BSD only?\n",
        "Line" : 828,
        "CharPositionInLine" : 20
      },
      "44" : {
        "Text" : "# Check for DirectX\n",
        "Line" : 901,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "# xinput.h may need windows.h, but doesn't include it itself.\n",
        "Line" : 911,
        "CharPositionInLine" : 6
      },
      "46" : {
        "Text" : "# TODO: change $ENV{DXSDL_DIR} to get the path from the include checks\n",
        "Line" : 930,
        "CharPositionInLine" : 6
      },
      "47" : {
        "Text" : "# requires SDL_LOADSO on Windows (IME, DX, etc.)\n",
        "Line" : 958,
        "CharPositionInLine" : 4
      },
      "48" : {
        "Text" : "# Libraries for Win32 native and MinGW\n",
        "Line" : 1001,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "# TODO: in configure.in the check for timers is set on\n\n# cygwin | mingw32* - does this include mingw32CE?\n",
        "Line" : 1006,
        "CharPositionInLine" : 2
      },
      "50" : {
        "Text" : "# TODO: rework this for proper MacOS X, iOS and Darwin support\n",
        "Line" : 1088,
        "CharPositionInLine" : 2
      },
      "51" : {
        "Text" : "# Requires the darwin file implementation\n",
        "Line" : 1090,
        "CharPositionInLine" : 2
      },
      "52" : {
        "Text" : "# Actually load the frameworks at the end so we don't duplicate include.\n",
        "Line" : 1156,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# iOS hack needed - http://code.google.com/p/ios-cmake/ ?\n",
        "Line" : 1186,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# TODO: Use FIND_PACKAGE(OpenGL) instead\n",
        "Line" : 1218,
        "CharPositionInLine" : 6
      },
      "55" : {
        "Text" : "# Dummies\n\n# configure.in does it differently:\n\n# if not have X\n\n#   if enable_X {  SDL_X_DISABLED = 1 }\n\n#   [add dummy sources]\n\n# so it always adds a dummy, without checking, if it was actually requested.\n\n# This leads to missing internal references on building, since the\n\n# src/X/*.c does not get included.\n",
        "Line" : 1230,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# results in unresolved symbols on OSX\n",
        "Line" : 1240,
        "CharPositionInLine" : 33
      },
      "57" : {
        "Text" : "# We always need to have threads and timers around\n",
        "Line" : 1262,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# Append the -MMD -MT flags\n\n# if(DEPENDENCY_TRACKING)\n\n#   if(COMPILER_IS_GNUCC)\n\n#     set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -MMD -MT \\$@\")\n\n#   endif()\n\n# endif()\n",
        "Line" : 1278,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# Prepare the flags and remove duplicates\n",
        "Line" : 1288,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# Compat helpers for the configuration files\n",
        "Line" : 1301,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# TODO: we need a Windows script, too\n",
        "Line" : 1303,
        "CharPositionInLine" : 2
      },
      "62" : {
        "Text" : "# Clean up the different lists\n",
        "Line" : 1326,
        "CharPositionInLine" : 2
      },
      "63" : {
        "Text" : "# MESSAGE(STATUS \"SDL_LIBS: ${SDL_LIBS}\")\n\n# MESSAGE(STATUS \"SDL_STATIC_LIBS: ${SDL_STATIC_LIBS}\")\n",
        "Line" : 1335,
        "CharPositionInLine" : 2
      },
      "64" : {
        "Text" : "##### Info output #####\n",
        "Line" : 1348,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# Longest option is VIDEO_X11_XSCREENSAVER = 22 characters\n\n# Get the padding\n",
        "Line" : 1365,
        "CharPositionInLine" : 2
      },
      "66" : {
        "Text" : "# Ensure that the extra cflags are used at compile time\n",
        "Line" : 1388,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# Always build SDLmain\n",
        "Line" : 1391,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# TODO: Win32 platforms keep the same suffix .lib for import and static\n\n# libraries - do we need to consider this?\n",
        "Line" : 1421,
        "CharPositionInLine" : 2
      },
      "69" : {
        "Text" : "#@changed tsky\n",
        "Line" : 1424,
        "CharPositionInLine" : 2
      },
      "70" : {
        "Text" : "##### Installation targets #####\n",
        "Line" : 1428,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# FreeBSD uses ${PREFIX}/libdata/pkgconfig\n",
        "Line" : 1451,
        "CharPositionInLine" : 4
      },
      "72" : {
        "Text" : "# TODO: what about the .spec file? Is it only needed for RPM creation?\n",
        "Line" : 1458,
        "CharPositionInLine" : 2
      },
      "73" : {
        "Text" : "##### Uninstall target #####\n",
        "Line" : 1462,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 74
    }
  },
  "FileTypes" : {
    "CMAKE" : 1
  },
  "ElapsedTime" : 1460
}