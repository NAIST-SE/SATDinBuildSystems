{
  "Repository" : "10371906",
  "Revision" : "HEAD",
  "ObjectId" : "b9ced85d5d8a82d11691b5f458f62b9c53060721",
  "CommitTime" : "2019-04-11T10:06:22Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "f3edd45717af9df196d0865e79040f56c71ec368",
      "LastModified" : "2019-01-29T15:55:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set policies explicitly to avoid warnings.\n\n# Read more on CMP0022 here: https://cmake.org/cmake/help/v3.0/policy/CMP0022.html\n\n# This was set as a fix for windows builds where FAST was expecting the name of\n\n# the zlib library to be 'zlib' when it was in fact 'zlibd'.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### Options\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Python version\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#### Set build type\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set the possible values of build types for cmake-gui\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "## Set continous integration define, used to enabled auto-close application on examples\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Set build folders\n\n# First for the generic no-config case (e.g. with mingw)\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Second, for multi-config builds (e.g. msvc)\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Force libs and bins to go into bin and lib directory instead of Release/Debug\n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#### Paths\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#### Module path\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# For finding the custom Find modules\n",
        "Line" : 76,
        "CharPositionInLine" : 73
      },
      "12" : {
        "Text" : "# Headers for Qt objects\n\n# TODO make a macro for adding these\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Set debug define if debug mode is set\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Set FAST include dirs\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Some extra build settings (C++14 and OpenMP)\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Remove deprecated warnings GCC\n",
        "Line" : 102,
        "CharPositionInLine" : 75
      },
      "17" : {
        "Text" : "# This will setup all of FAST's depedencies\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# This will download the test data\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#### Set include dirs\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Set up RPATH with relative path so that binaries will find libraries in the lib folder\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Parallel build in MSVC\n",
        "Line" : 132,
        "CharPositionInLine" : 1
      },
      "22" : {
        "Text" : "#### Add all subdirs\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#### Create FAST library and executables\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "## Link everything\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Add Qt 5 modules\n",
        "Line" : 168,
        "CharPositionInLine" : 41
      },
      "26" : {
        "Text" : "## Build test executable\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Create config and use file\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Set paths needed at runtime to be written to config file\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# If test data dir has been set by user, use that instead\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Remove any existing \"\n",
        "Line" : 199,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# If OpenCL kernel binary path has been set by user, write it to the config\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Remove any existing \"\n",
        "Line" : 206,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# configure the configuration file.\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Setup process object for pipelines setup\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Setup inference engines\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Using pre-built binaries on Windows so add custom command to copy \n\n# dlls automatically to the bin folder. \n",
        "Line" : 247,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 37
    },
    "cmake/Depdendencies.cmake" : {
      "ObjectId" : "91671bbba318dff7a796dc09822bf93d7a86b843",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Setup all dependencies for FAST, both internal (have to be installed on the system)\n\n# and external (downloaded and built automatically)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## OpenCL\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#list(APPEND FAST_INCLUDE_DIRS \"${OpenCL_INCLUDE_DIRS}\")\n\n#message(\"-- OpenCL include dir: ${OpenCL_INCLUDE_DIRS}\")\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## OpenGL\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# If OS is Linux, also need X\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Qt\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Use FAST Qt CMake files\n",
        "Line" : 26,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "#set(CMAKE_AUTOMOC ON)\n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Get rid of Qt error with position independent code\n",
        "Line" : 66,
        "CharPositionInLine" : 33
      },
      "9" : {
        "Text" : "## External depedencies\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Optional modules\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Make sure FAST can find external includes and libaries\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "cmake/Documentation.cmake" : {
      "ObjectId" : "1e6d2c38e9ac0e56480da281d84d8cbb371da6c8",
      "LastModified" : "2017-05-07T09:22:23Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/DownloadTestData.cmake" : {
      "ObjectId" : "b0001c1c899f9530bd0edd676ce7cbe3c5110dd4",
      "LastModified" : "2017-06-06T08:11:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This will automatically download the FAST test data zip file and unzip it\n\n# The data will only be downloaded if not already present\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Download\n",
        "Line" : 13,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# TODO Try other download URL\n",
        "Line" : 25,
        "CharPositionInLine" : 12
      },
      "3" : {
        "Text" : "# Unzip\n",
        "Line" : 27,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "# Delete zip\n",
        "Line" : 33,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 5
    },
    "cmake/ExternalDCMTK.cmake" : {
      "ObjectId" : "29cdbccc361461f21578dc78b72b28d34cdfa6c6",
      "LastModified" : "2018-09-10T12:40:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Download and set up DCMTK\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/ExternalEigen.cmake" : {
      "ObjectId" : "a6a296bbc831fd34457891d47d5d0f3690c02f2d",
      "LastModified" : "2017-06-06T08:11:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Download and set up Eigen\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#GIT_REPOSITORY \"https://github.com/RLovelett/eigen.git\"\n\n#GIT_TAG \"a46d2e7337c4656f00abe54a8115f6d76153a048\"\n",
        "Line" : 8,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "cmake/ExternalFreenect2.cmake" : {
      "ObjectId" : "1e9d223366854b0c02e2006abd4096139872d923",
      "LastModified" : "2018-09-10T12:40:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Download and set up libfreenect2\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/ExternalOpenIGTLink.cmake" : {
      "ObjectId" : "35e854d62aa25a9e80613e0362115e204e45eb28",
      "LastModified" : "2018-09-10T12:40:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Download and set up zlib\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/ExternalQt5.cmake" : {
      "ObjectId" : "bf54cc339ce7b0f5a7e60bd2a3a28265ec4e7f01",
      "LastModified" : "2019-03-12T09:18:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Download and build Qt5\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# List of modules can be found in git repo here: github.com/qt/qt5\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#set(BUILD_COMMAND set CL=/MP; nmake)\n",
        "Line" : 54,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 3
    },
    "cmake/ExternalRealSense.cmake" : {
      "ObjectId" : "40b60cb5b18b16a630677c23725f8d0790ec1686",
      "LastModified" : "2018-12-03T13:04:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Download and set up libfreenect2\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/ExternalTensorflow.cmake" : {
      "ObjectId" : "0450b7ce115b152d1010f456229251df3206f1af",
      "LastModified" : "2018-09-10T12:40:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Download and set up Tensorflow\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use CMake to build tensorflow on windows\n",
        "Line" : 7,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Need to override this because tensorflow creates a file in the source dir\n\n# and cmake files to stash these files\n",
        "Line" : 13,
        "CharPositionInLine" : 12
      },
      "3" : {
        "Text" : "# Must use CONFIGURE_COMMAND because CMakeLists.txt is not in the src root of tensorflow\n",
        "Line" : 17,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "#-Dtensorflow_ENABLE_GPU=ON\n",
        "Line" : 31,
        "CharPositionInLine" : 16
      },
      "5" : {
        "Text" : "#libprotobuf.lib # For windows we need this protobuf static lib for some reason..\n",
        "Line" : 38,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Use bazel to build tensorflow on linux\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Run TF configure in the form of a shell script. CUDA should be installed in /usr/local/cuda\n",
        "Line" : 49,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# Build using bazel\n",
        "Line" : 52,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "#echo \"Installing mkl binaries\" &&\n\n#bash -c \"cp $(readlink -f ${FAST_EXTERNAL_BUILD_DIR}/tensorflow/src/tensorflow/bazel-out/)/../../../external/mkl/lib/libmklml_intel.so ${FAST_EXTERNAL_INSTALL_DIR}/lib/ -Rf\" &&\n\n#bash -c \"cp $(readlink -f ${FAST_EXTERNAL_BUILD_DIR}/tensorflow/src/tensorflow/bazel-out/)/../../../external/mkl/lib/libiomp5.so ${FAST_EXTERNAL_INSTALL_DIR}/lib/ -Rf\" &&\n",
        "Line" : 59,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 10
    },
    "cmake/ExternalZlib.cmake" : {
      "ObjectId" : "8027b348dad8b5b3e4490834f67c401e38369181",
      "LastModified" : "2018-09-10T12:40:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Download and set up zlib\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Externals.cmake" : {
      "ObjectId" : "1759f020184c49b423a5207a32d9e62e37afde4c",
      "LastModified" : "2017-06-06T08:11:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/FASTCustomCommands.cmake" : {
      "ObjectId" : "2188b3515908958d14032e67c4ade73ed9b8cd60",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/FindNumPy.cmake" : {
      "ObjectId" : "4d729b2a3c9699479d467962300505ebf94bb7c6",
      "LastModified" : "2017-01-10T21:55:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the Python NumPy package\n\n# PYTHON_NUMPY_INCLUDE_DIR\n\n# PYTHON_NUMPY_FOUND\n\n# will be set by this script\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find out the include path\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# And the version\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/FindOpenCL.cmake" : {
      "ObjectId" : "dbaad4fd7d1d559c68a85d43c3b14bb059e87c1e",
      "LastModified" : "2017-06-06T08:11:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\r\n\n# FindOpenCL\r\n\n# ----------\r\n\n#\r\n\n# Try to find OpenCL\r\n\n#\r\n\n# Once done this will define::\r\n\n#\r\n\n#   OpenCL_FOUND          - True if OpenCL was found\r\n\n#   OpenCL_INCLUDE_DIRS   - include directories for OpenCL\r\n\n#   OpenCL_LIBRARIES      - link against this library to use OpenCL\r\n\n#   OpenCL_VERSION_STRING - Highest supported OpenCL version (eg. 1.2)\r\n\n#   OpenCL_VERSION_MAJOR  - The major version of the OpenCL implementation\r\n\n#   OpenCL_VERSION_MINOR  - The minor version of the OpenCL implementation\r\n\n#\r\n\n# The module will also define two cache variables::\r\n\n#\r\n\n#   OpenCL_INCLUDE_DIR    - the OpenCL include directory\r\n\n#   OpenCL_LIBRARY        - the path to the OpenCL library\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\r\n\n# Copyright 2014 Matthaeus G. Chajdas\r\n\n#\r\n\n# Distributed under the OSI-approved BSD License (the \"License\");\r\n\n# see accompanying file Copyright.txt for details.\r\n\n#\r\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\r\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n\n# See the License for more information.\r\n\n#=============================================================================\r\n\n# (To distribute this file outside of CMake, substitute the full\r\n\n#  License text for the above reference.)\r\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindTensorRT.cmake" : {
      "ObjectId" : "86970c96feae60cadc7ac620559d23dab51b039e",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This module defines the following variables:\n\n#\n\n# ::\n\n#\n\n#   TensorRT_INCLUDE_DIRS\n\n#   TensorRT_LIBRARIES\n\n#   TensorRT_FOUND\n\n#\n\n# ::\n\n#\n\n#   TensorRT_VERSION_STRING - version (x.y.z)\n\n#   TensorRT_VERSION_MAJOR  - major version (x)\n\n#   TensorRT_VERSION_MINOR  - minor version (y)\n\n#   TensorRT_VERSION_PATCH  - patch version (z)\n\n#\n\n# Hints\n\n# ^^^^^\n\n# A user may set ``TensorRT_ROOT`` to an installation root to tell this module where to look.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# appends some common paths\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Include dir\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find additional library files needed\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/InstallFAST.cmake" : {
      "ObjectId" : "65e0f1b49d8338e20437882db818aefb09f8cfff",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This will install FAST binaries, libraries and necessary include files to the path given by CMAKE_INSTALL_PREFIX\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Install FAST library\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# DLL should be in binary folder\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Install test executable\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Examples are installed in the macro fast_add_example\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Install dependency libraries\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Install Qt plugins\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Install qt.conf\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Install headers\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Files with no extension\n",
        "Line" : 86,
        "CharPositionInLine" : 35
      },
      "10" : {
        "Text" : "# Install created headers\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Install OpenCL kernels\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Install GL shaders\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Install GL shaders\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Install CMake files\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Install docs\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Install pipelines\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Install Python wrapper\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Copy configuration file\n\n# Create new configuration file for install\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Install FAST license file\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Install README\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Install license files for depedencies\n\n# Qt5\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Eigen\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# zlib\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# OpenIGTLink\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# DCMTK\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# NumPy (numpy.i file)\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Semaphore implementation\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Tensorflow license\n",
        "Line" : 211,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 29
    },
    "cmake/Macros.cmake" : {
      "ObjectId" : "a7db9168d8710ee1ea45f34f2a4a3d204856e87e",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### Macro for adding source files and directories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# propagate FAST_SOURCE_FILES to parent directory\n",
        "Line" : 12,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# propagate FAST_TEST_SOURCE_FILES to parent directory\n",
        "Line" : 27,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# propagate FAST_PYTHON_INTERFACE_FILES to parent directory\n",
        "Line" : 42,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# propagate to parent directory\n",
        "Line" : 53,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# propagate to parent directory\n",
        "Line" : 73,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "### Macro for add examples\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# propagate to parent directory\n",
        "Line" : 101,
        "CharPositionInLine" : 12
      },
      "8" : {
        "Text" : "### Macro for add tool\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# propagate to parent directory\n",
        "Line" : 118,
        "CharPositionInLine" : 12
      },
      "10" : {
        "Text" : "### Macro for add process objects\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# propagate to parent directory\n",
        "Line" : 132,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "### Macro for add inference engines\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# propagate to parent directory\n",
        "Line" : 146,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 14
    },
    "cmake/ModuleClarius.cmake" : {
      "ObjectId" : "57adae8570de9d71f3767201a1f60d2183186ece",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# User has to supply the path to the claris sdk\n",
        "Line" : 2,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "cmake/ModuleITK.cmake" : {
      "ObjectId" : "319c655ea1e858acd4121262031755dc5ce007ed",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## ITK\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/ModuleKinect.cmake" : {
      "ObjectId" : "2314ecdbef9a67211f6ce9ac2936f95bca33bee9",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/ModuleOpenIGTLink.cmake" : {
      "ObjectId" : "fa1e8f0e99afd6230765e4fe18f8e677365ef730",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# OpenIGTLink module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(LIBRARY_OUTPUT_PATH  \"${FAST_BINARY_DIR}\") # Needed to output the libraries in the correct folder\n\n#set(EXECUTABLE_OUTPUT_PATH \"${FAST_BINARY_DIR}\") # Needed to output the executables in correct folder\n\n#add_subdirectory(source/OpenIGTLink)\n\n#find_package(OpenIGTLink PATHS \"${FAST_BINARY_DIR}/source/OpenIGTLink/\" REQUIRED)\n\n#include(${OpenIGTLink_USE_FILE})\n\n#list(APPEND FAST_INCLUDE_DIRS ${OpenIGTLink_INCLUDE_DIRS})\n\n#list(APPEND LIBRARIES ${OpenIGTLink_LIBRARIES})\n",
        "Line" : 5,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "cmake/ModuleOpenVINO.cmake" : {
      "ObjectId" : "8c3b747a44d738cac91ee89dfac50f246cfaa3d4",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#include(${InferenceEngine_DIR}/ie_parallel.cmake)\n\n#set_ie_threading_interface_for(FAST)\n",
        "Line" : 11,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 1
    },
    "cmake/ModulePython.cmake" : {
      "ObjectId" : "878319c6a257b1a2975ad894758eb00cd7cae776",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build Python bindings (requires SWIG installed)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Avoid a error on windows when compiling in debug mode\n",
        "Line" : 21,
        "CharPositionInLine" : 81
      },
      "2" : {
        "Text" : "# Generate the PyFAST interface file\n\n# Include all header files\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Include all python interface files\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Build it\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "cmake/ModuleRealSense.cmake" : {
      "ObjectId" : "684eb75b5ab1d60b4b9cb7da18213a36acbbc4b4",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/ModuleTensorFlow.cmake" : {
      "ObjectId" : "4d23d1847e96c93469d12aeb69b91ae563646a48",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## TensorFlow module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Tensorflow\n\n#list(APPEND FAST_INCLUDE_DIRS ${Tensorflow_INCLUDE_DIRS})\n",
        "Line" : 6,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Some definitions needed to compile with tensorflow on windows\n\n# These are taken from tensorflow/contrib/cmake/CMakeLists.txt\n",
        "Line" : 12,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Suppress warnings to reduce build log size.\n",
        "Line" : 17,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# To get rid of this error: Not found: No session factory registered for the given session options: {target: \"\" config: } Registered factories are {}.\n\n#set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} /WHOLEARCHIVE:\\\"${Tensorflow_LIBRARY}\\\"\")\n",
        "Line" : 21,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 5
    },
    "cmake/ModuleTensorRT.cmake" : {
      "ObjectId" : "ec01251a689d44475a524db0a613de64c34143fe",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/ModuleVTK.cmake" : {
      "ObjectId" : "a4996c0afd32c327186eaa1da5c7670788e6da6e",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## VTK\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/OpenMP.cmake" : {
      "ObjectId" : "f09284de0ec532fc6156745cd1b09e4953a201aa",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# OpenMP\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Qt5Core/Qt5CTestMacros.cmake" : {
      "ObjectId" : "962d49d6b2e8fd90f8e4fcfea0534238f0985444",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n#  W A R N I N G\n\n#  -------------\n\n#\n\n# This file is not part of the Qt API.  It exists purely as an\n\n# implementation detail.  This file, and its contents may change from version to\n\n# version without notice, or even be removed.\n\n#\n\n# We mean it.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Qt requires C++11 features in header files, which means\n\n# the buildsystem needs to add a -std flag for certain compilers\n\n# CMake adds the flag automatically in most cases, but notably not\n\n# on Windows prior to CMake 3.3\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Qt5Core/Qt5CoreConfig.cmake" : {
      "ObjectId" : "876243f1eed205c78a996d24fafd01617f18423a",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# For backwards compatibility only. Use Qt5Core_VERSION instead.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#if(NOT EXISTS \"${file}\" )\n\n#    message(FATAL_ERROR \"The imported target \\\"Qt5::Core\\\" references the file\n\n#\\\"${file}\\\"\n\n#but this file does not exist.  Possible reasons include:\n\n#* The file was deleted, renamed, or moved to another location.\n\n#* An install or uninstall procedure did not complete successfully.\n\n#* The installation package was faulty and contained\n\n#   \\\"${CMAKE_CURRENT_LIST_FILE}\\\"\n\n#but not all the files it references.\n\n#\")\n\n#    endif()\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# For backward compatibility with CMake < 2.8.12\n",
        "Line" : 36,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Only check existence of private includes if the Private component is\n\n# specified.\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#set_property(TARGET Qt5::Core PROPERTY\n\n#  INTERFACE_INCLUDE_DIRECTORIES ${_Qt5Core_OWN_INCLUDE_DIRS})\n",
        "Line" : 115,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "cmake/Qt5Core/Qt5CoreConfigExtras.cmake" : {
      "ObjectId" : "eefe463d30d0f6b5f27059710f47f1116c42a273",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# For CMake automoc feature\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "#set_property(TARGET Qt5::Core APPEND PROPERTY INTERFACE_INCLUDE_DIRECTORIES ${_qt5_corelib_extra_includes})\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Targets using Qt need to use the POSITION_INDEPENDENT_CODE property. The\n\n# Qt5_POSITION_INDEPENDENT_CODE variable is used in the # qt5_use_module\n\n# macro to add it.\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# On x86 and x86-64 systems with ELF binaries (especially Linux), due to\n\n# a new optimization in GCC 5.x in combination with a recent version of\n\n# GNU binutils, compiling Qt applications with -fPIE is no longer\n\n# enough.\n\n# Applications now need to be compiled with the -fPIC option if the Qt option\n\n# \"reduce relocations\" is active. For backward compatibility only, Qt accepts\n\n# the use of -fPIE for GCC 4.x versions.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Applications using qmake or cmake >= 2.8.12 as their build system will\n\n# adapt automatically. Applications using an older release of cmake in\n\n# combination with GCC 5.x need to change their CMakeLists.txt to add\n\n# Qt5Core_EXECUTABLE_COMPILE_FLAGS to CMAKE_CXX_FLAGS. In particular,\n\n# applications using cmake >= 2.8.9 and < 2.8.11 will continue to build\n\n# with the -fPIE option and invoke the special compatibility mode if using\n\n# GCC 4.x.\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/Qt5Core/Qt5CoreConfigExtrasMkspecDir.cmake" : {
      "ObjectId" : "0ac40cd409dfd0d094c247503a3cb150b3059ea6",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Qt5Core/Qt5CoreConfigVersion.cmake" : {
      "ObjectId" : "16fa9f384fbb711decbcec18f0eea13ae6b62b3c",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Qt5Core/Qt5CoreMacros.cmake" : {
      "ObjectId" : "ebe76e054ac6008210608fbac1839a3b8f5261e5",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n# Copyright 2005-2011 Kitware, Inc.\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n#\n\n# * Neither the name of Kitware, Inc. nor the names of its\n\n#   contributors may be used to endorse or promote products derived\n\n#   from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "######################################\n\n#\n\n#       Macros for building Qt files\n\n#\n\n######################################\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# macro used to create the names of output files preserving relative dirs\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# absolute path\n",
        "Line" : 56,
        "CharPositionInLine" : 50
      },
      "4" : {
        "Text" : "# helper macro to set up a moc rule\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Pass the parameters in a file.  Set the working directory to\n\n# be that containing the parameters file and reference it by\n\n# just the file name.  This is necessary because the moc tool on\n\n# MinGW builds does not seem to handle spaces in the path to the\n\n# file given with the @ syntax.\n",
        "Line" : 98,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# get include dirs and flags\n",
        "Line" : 141,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# dont run automoc on this file\n",
        "Line" : 155,
        "CharPositionInLine" : 74
      },
      "8" : {
        "Text" : "# qt5_wrap_cpp(outfiles inputfile ... )\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# get include dirs\n",
        "Line" : 162,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# _qt5_parse_qrc_file(infile _out_depends _rc_depends)\n\n# internal\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#  parse file for dependencies\n\n#  all files are absolute paths or relative to the location of the qrc file\n",
        "Line" : 197,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# Since this cmake macro is doing the dependency scanning for these files,\n\n# let's make a configured file and add it as a dependency so cmake is run\n\n# again when dependencies need to be recomputed.\n",
        "Line" : 208,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# The .qrc file does not exist (yet). Let's add a dependency and hope\n\n# that it will be generated later\n",
        "Line" : 214,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# qt5_add_binary_resources(target inputfiles ... )\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# qt5_add_resources(outfiles inputfile ... )\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#target_link_libraries(${_target} ${_qt5_link_type} ${Qt5${_module}_LIBRARIES})\n",
        "Line" : 331,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 17
    },
    "cmake/Qt5Gui/Qt5GuiConfig.cmake" : {
      "ObjectId" : "f597a24465cae9f84d198eca0ad9ef42233d6c4d",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# For backwards compatibility only. Use Qt5Gui_VERSION instead.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#if(NOT EXISTS \"${file}\" )\n\n#    message(FATAL_ERROR \"The imported target \\\"Qt5::Gui\\\" references the file\n\n#\\\"${file}\\\"\n\n#but this file does not exist.  Possible reasons include:\n\n#* The file was deleted, renamed, or moved to another location.\n\n#* An install or uninstall procedure did not complete successfully.\n\n#* The installation package was faulty and contained\n\n#   \\\"${CMAKE_CURRENT_LIST_FILE}\\\"\n\n#but not all the files it references.\n\n#\")\n\n#    endif()\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# For backward compatibility with CMake < 2.8.12\n",
        "Line" : 36,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "#foreach(_dir ${_Qt5Gui_OWN_INCLUDE_DIRS})\n\n#    _qt5_Gui_check_file_exists(${_dir})\n\n#endforeach()\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Only check existence of private includes if the Private component is\n\n# specified.\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#set_property(TARGET Qt5::Gui PROPERTY\n\n#  INTERFACE_INCLUDE_DIRECTORIES ${_Qt5Gui_OWN_INCLUDE_DIRS})\n",
        "Line" : 115,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "cmake/Qt5Gui/Qt5GuiConfigExtras.cmake" : {
      "ObjectId" : "29ec6c13bce85fbf64a1d13ad565756ca9e87132",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if (NOT _qt5gui_OPENGL_INCLUDE_DIR)\n\n#    message(FATAL_ERROR \"Failed to find \\\"GL/gl.h\\\" in \\\"${_GL_INCDIRS}\\\".\")\n\n#endif()\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Don't check for existence of the _qt5gui_OPENGL_INCLUDE_DIR because it is\n\n# optional.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#list(APPEND Qt5Gui_INCLUDE_DIRS ${_qt5gui_OPENGL_INCLUDE_DIR})\n\n#set_property(TARGET Qt5::Gui APPEND PROPERTY INTERFACE_INCLUDE_DIRECTORIES ${_qt5gui_OPENGL_INCLUDE_DIR})\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The above find_library call doesn't work for finding\n\n# libraries in Windows SDK paths outside of the proper\n\n# environment, even if the libraries are present.  In other\n\n# cases it is OK for the libraries to not be found\n\n# because they are optional dependencies of Qt5Gui, needed\n\n# only if the qopengl.h header is used.\n\n# We try to find the libraries in the first place because Qt may be\n\n# compiled with another set of GL libraries (such as coming\n\n# from ANGLE).  The point of these find calls is to try to\n\n# find the same binaries as Qt is compiled with (as they are\n\n# in the interface of QtGui), so an effort is made to do so\n\n# above with paths known to qmake.\n",
        "Line" : 31,
        "CharPositionInLine" : 16
      },
      "4" : {
        "Text" : "#set_property(TARGET Qt5::Gui_${_cmake_lib_name} APPEND PROPERTY INTERFACE_INCLUDE_DIRECTORIES ${Qt5Gui_${Name}_INCLUDE_DIRS})\n",
        "Line" : 47,
        "CharPositionInLine" : 16
      },
      "CommentCount" : 5
    },
    "cmake/Qt5Gui/Qt5GuiConfigVersion.cmake" : {
      "ObjectId" : "16fa9f384fbb711decbcec18f0eea13ae6b62b3c",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Qt5Multimedia/Qt5MultimediaConfig.cmake" : {
      "ObjectId" : "cd62291120be72f69aae342baa5e8a54a740ba54",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# For backwards compatibility only. Use Qt5Multimedia_VERSION instead.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#        message(FATAL_ERROR \"The imported target \\\"Qt5::Multimedia\\\" references the file\n\n#   \\\"${file}\\\"\n\n#but this file does not exist.  Possible reasons include:\n\n#* The file was deleted, renamed, or moved to another location.\n\n#* An install or uninstall procedure did not complete successfully.\n\n#* The installation package was faulty and contained\n\n#   \\\"${CMAKE_CURRENT_LIST_FILE}\\\"\n\n#but not all the files it references.\n\n#\")\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For backward compatibility with CMake < 2.8.12\n",
        "Line" : 36,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Only check existence of private includes if the Private component is\n\n# specified.\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#set_property(TARGET Qt5::Multimedia PROPERTY\n\n#  INTERFACE_INCLUDE_DIRECTORIES ${_Qt5Multimedia_OWN_INCLUDE_DIRS})\n",
        "Line" : 115,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "cmake/Qt5Multimedia/Qt5MultimediaConfigVersion.cmake" : {
      "ObjectId" : "16fa9f384fbb711decbcec18f0eea13ae6b62b3c",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Qt5Multimedia/Qt5Multimedia_AudioCaptureServicePlugin.cmake" : {
      "ObjectId" : "649214460a80ce3c7b08b71bc1dd8db6fd8f5cbd",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Qt5Multimedia/Qt5Multimedia_QM3uPlaylistPlugin.cmake" : {
      "ObjectId" : "7d0f5610ebdc76852704e4e592fb5433315a51d3",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Qt5MultimediaWidgets/Qt5MultimediaWidgetsConfig.cmake" : {
      "ObjectId" : "abf30f9c1b5f4d79b90113cef5078c7d1edeffce",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# For backwards compatibility only. Use Qt5MultimediaWidgets_VERSION instead.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#        message(FATAL_ERROR \"The imported target \\\"Qt5::MultimediaWidgets\\\" references the file\n\n#   \\\"${file}\\\"\n\n#but this file does not exist.  Possible reasons include:\n\n#* The file was deleted, renamed, or moved to another location.\n\n#* An install or uninstall procedure did not complete successfully.\n\n#* The installation package was faulty and contained\n\n#   \\\"${CMAKE_CURRENT_LIST_FILE}\\\"\n\n#but not all the files it references.\n\n#\")\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For backward compatibility with CMake < 2.8.12\n",
        "Line" : 36,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Only check existence of private includes if the Private component is\n\n# specified.\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#set_property(TARGET Qt5::MultimediaWidgets PROPERTY\n\n#  INTERFACE_INCLUDE_DIRECTORIES ${_Qt5MultimediaWidgets_OWN_INCLUDE_DIRS})\n",
        "Line" : 115,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "cmake/Qt5MultimediaWidgets/Qt5MultimediaWidgetsConfigVersion.cmake" : {
      "ObjectId" : "16fa9f384fbb711decbcec18f0eea13ae6b62b3c",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Qt5Network/Qt5NetworkConfig.cmake" : {
      "ObjectId" : "5a8c67c865079aa2f859dc34b40f64848bf81948",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# For backwards compatibility only. Use Qt5Network_VERSION instead.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#        message(FATAL_ERROR \"The imported target \\\"Qt5::Network\\\" references the file\n\n#   \\\"${file}\\\"\n\n#but this file does not exist.  Possible reasons include:\n\n#* The file was deleted, renamed, or moved to another location.\n\n#* An install or uninstall procedure did not complete successfully.\n\n#* The installation package was faulty and contained\n\n#   \\\"${CMAKE_CURRENT_LIST_FILE}\\\"\n\n#but not all the files it references.\n\n#\")\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For backward compatibility with CMake < 2.8.12\n",
        "Line" : 36,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Only check existence of private includes if the Private component is\n\n# specified.\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#set_property(TARGET Qt5::Network PROPERTY\n\n#  INTERFACE_INCLUDE_DIRECTORIES ${_Qt5Network_OWN_INCLUDE_DIRS})\n",
        "Line" : 115,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "cmake/Qt5Network/Qt5NetworkConfigVersion.cmake" : {
      "ObjectId" : "16fa9f384fbb711decbcec18f0eea13ae6b62b3c",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Qt5Network/Qt5Network_QConnmanEnginePlugin.cmake" : {
      "ObjectId" : "4ad7d2a7387d6dba9343c31adced9872daa3ed5f",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Qt5Network/Qt5Network_QGenericEnginePlugin.cmake" : {
      "ObjectId" : "8536ae8d55654f8277518f946e245e2be53e5a90",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Qt5Network/Qt5Network_QNetworkManagerEnginePlugin.cmake" : {
      "ObjectId" : "04a0bc7ee3017ebaf9986e49875714158cada554",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Qt5OpenGL/Qt5OpenGLConfig.cmake" : {
      "ObjectId" : "06c21981e0c845704c320e12f019f6459ff19436",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# For backwards compatibility only. Use Qt5OpenGL_VERSION instead.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#if(NOT EXISTS \"${file}\" )\n\n#    message(FATAL_ERROR \"The imported target \\\"Qt5::OpenGL\\\" references the file\n\n#\\\"${file}\\\"\n\n#but this file does not exist.  Possible reasons include:\n\n#* The file was deleted, renamed, or moved to another location.\n\n#* An install or uninstall procedure did not complete successfully.\n\n#* The installation package was faulty and contained\n\n#   \\\"${CMAKE_CURRENT_LIST_FILE}\\\"\n\n#but not all the files it references.\n\n#\")\n\n#    endif()\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# For backward compatibility with CMake < 2.8.12\n",
        "Line" : 36,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "#foreach(_dir ${_Qt5OpenGL_OWN_INCLUDE_DIRS})\n\n#    _qt5_OpenGL_check_file_exists(${_dir})\n\n#endforeach()\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Only check existence of private includes if the Private component is\n\n# specified.\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#set_property(TARGET Qt5::OpenGL PROPERTY\n\n#  INTERFACE_INCLUDE_DIRECTORIES ${_Qt5OpenGL_OWN_INCLUDE_DIRS})\n",
        "Line" : 115,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "cmake/Qt5OpenGL/Qt5OpenGLConfigVersion.cmake" : {
      "ObjectId" : "16fa9f384fbb711decbcec18f0eea13ae6b62b3c",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Qt5SerialPort/Qt5SerialPortConfig.cmake" : {
      "ObjectId" : "0de3ae27ee977d4f66977879c97bd64a88b24491",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# For backwards compatibility only. Use Qt5SerialPort_VERSION instead.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#if(NOT EXISTS \"${file}\" )\n\n#    message(FATAL_ERROR \"The imported target \\\"Qt5::SerialPort\\\" references the file\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#\\\"${file}\\\"\n\n#but this file does not exist.  Possible reasons include:\n\n#* The file was deleted, renamed, or moved to another location.\n\n#* An install or uninstall procedure did not complete successfully.\n\n#* The installation package was faulty and contained\n\n#\\\"${CMAKE_CURRENT_LIST_FILE}\\\"\n\n#but not all the files it references.\n\n#\")\n",
        "Line" : 16,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "#endif()\n",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# For backward compatibility with CMake < 2.8.12\n",
        "Line" : 35,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Only check existence of private includes if the Private component is\n\n# specified.\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "cmake/Qt5SerialPort/Qt5SerialPortConfigVersion.cmake" : {
      "ObjectId" : "d0933fede8e28b94c30898f16cad3657733b542c",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Qt5Widgets/Qt5WidgetsConfig.cmake" : {
      "ObjectId" : "1a93d5986044156c73b08212bab925c84902ee07",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# For backwards compatibility only. Use Qt5Widgets_VERSION instead.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#if(NOT EXISTS \"${file}\" )\n\n#    message(FATAL_ERROR \"The imported target \\\"Qt5::Widgets\\\" references the file\n\n#\\\"${file}\\\"\n\n#but this file does not exist.  Possible reasons include:\n\n#* The file was deleted, renamed, or moved to another location.\n\n#* An install or uninstall procedure did not complete successfully.\n\n#* The installation package was faulty and contained\n\n#   \\\"${CMAKE_CURRENT_LIST_FILE}\\\"\n\n#but not all the files it references.\n\n#\")\n\n#    endif()\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# For backward compatibility with CMake < 2.8.12\n",
        "Line" : 36,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "#foreach(_dir ${_Qt5Widgets_OWN_INCLUDE_DIRS})\n\n#    _qt5_Widgets_check_file_exists(${_dir})\n\n#endforeach()\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Only check existence of private includes if the Private component is\n\n# specified.\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#set_property(TARGET Qt5::Widgets PROPERTY\n\n#  INTERFACE_INCLUDE_DIRECTORIES ${_Qt5Widgets_OWN_INCLUDE_DIRS})\n",
        "Line" : 115,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "cmake/Qt5Widgets/Qt5WidgetsConfigExtras.cmake" : {
      "ObjectId" : "ce28d42b5fc93157fef2e63652e42cb0d24f56f8",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Qt5Widgets/Qt5WidgetsConfigVersion.cmake" : {
      "ObjectId" : "16fa9f384fbb711decbcec18f0eea13ae6b62b3c",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Qt5Widgets/Qt5WidgetsMacros.cmake" : {
      "ObjectId" : "f5e7b7f05006fa73e4e459c74ed7303504ed7909",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n# Copyright 2005-2011 Kitware, Inc.\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n#\n\n# * Neither the name of Kitware, Inc. nor the names of its\n\n#   contributors may be used to endorse or promote products derived\n\n#   from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "######################################\n\n#\n\n#       Macros for building Qt files\n\n#\n\n######################################\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# qt5_wrap_ui(outfiles inputfile ... )\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "source/FAST/Algorithms/AddTransformation/CMakeLists.txt" : {
      "ObjectId" : "ee429215795dc3c831dca675835e3a514afa5f8b",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Algorithms/AirwaySegmentation/CMakeLists.txt" : {
      "ObjectId" : "a3d11d4d71ce8aa78a2820e7913abd9ace0e5325",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Algorithms/BinaryThresholding/CMakeLists.txt" : {
      "ObjectId" : "e4907e4b8206c3abe223be748c574082d3354efd",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Algorithms/BlockMatching/CMakeLists.txt" : {
      "ObjectId" : "d8d940f13a8c07af7c7fe85ed77dda0e7803460a",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Algorithms/CMakeLists.txt" : {
      "ObjectId" : "d79db0a97912fa7370f8d8ff26a0ded8ec129869",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Algorithms/CenterlineExtraction/CMakeLists.txt" : {
      "ObjectId" : "8e0641ecad172e5c3491f429d87eb99794132c0a",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Algorithms/CoherentPointDrift/CMakeLists.txt" : {
      "ObjectId" : "9b1380dce6b886d6ea955d1a4904bff3893d0f67",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Algorithms/GaussianSmoothingFilter/CMakeLists.txt" : {
      "ObjectId" : "dcb029ede434439644187c7e8cf711fe78d157bf",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Algorithms/GradientVectorFlow/CMakeLists.txt" : {
      "ObjectId" : "e212e7b91bccd1ebb882d070d491c79c15f6478e",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Algorithms/HounsefieldConverter/CMakeLists.txt" : {
      "ObjectId" : "15120cf56957c2000e42118404d0c2d0a6a90857",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Algorithms/ImageCropper/CMakeLists.txt" : {
      "ObjectId" : "ea2b4f010bc9716a6ea58df469ad9225f6e2e15b",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Algorithms/ImageGradient/CMakeLists.txt" : {
      "ObjectId" : "117ae78dc01238489b63e2cef60b617e8b358e2f",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Algorithms/ImageInverter/CMakeLists.txt" : {
      "ObjectId" : "216c8a007e7e1d82427d76129680089711f9518a",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Algorithms/ImageMultiply/CMakeLists.txt" : {
      "ObjectId" : "086f4631c363b506619d1e75b2b38fa5035b9226",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Algorithms/ImageResampler/CMakeLists.txt" : {
      "ObjectId" : "a262c1cb311366f620b059fc999b6ffc03d3a410",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Algorithms/ImageResizer/CMakeLists.txt" : {
      "ObjectId" : "5e052ba566af9167c0c47124e97453291b35d511",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Algorithms/ImageSlicer/CMakeLists.txt" : {
      "ObjectId" : "a1b5588d351f2d20631ae6ce6fbbfebda4f26e4c",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Algorithms/IterativeClosestPoint/CMakeLists.txt" : {
      "ObjectId" : "0b1cfcdabbc4a4de5e974720815623d19fabc071",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Algorithms/LaplacianOfGaussian/CMakeLists.txt" : {
      "ObjectId" : "6fc0306e2c0178678ce65cbc1f2021f8aade6e0c",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Algorithms/LevelSet/CMakeLists.txt" : {
      "ObjectId" : "5d5708b155d71dfd18467a28423fbecb1e38aa25",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Algorithms/LungSegmentation/CMakeLists.txt" : {
      "ObjectId" : "054529d530011f3d719631b1d574544c18bc0e52",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Algorithms/MeshToSegmentation/CMakeLists.txt" : {
      "ObjectId" : "b7e5d5e9ff92245a3514af9c23ecb34483cefaff",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Algorithms/ModelBasedSegmentation/AppearanceModels/CMakeLists.txt" : {
      "ObjectId" : "675a93ef114d89edd96ae248a63ff3a03e8176c6",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Algorithms/ModelBasedSegmentation/AppearanceModels/RidgeEdge/CMakeLists.txt" : {
      "ObjectId" : "b388b1de64d3d1d468b6eb7ef6527036e9707498",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Algorithms/ModelBasedSegmentation/AppearanceModels/StepEdge/CMakeLists.txt" : {
      "ObjectId" : "ff26ec6e3ea354c0adeb30f6a642bc828785b7a7",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Algorithms/ModelBasedSegmentation/CMakeLists.txt" : {
      "ObjectId" : "55b3d23326f2b831ed039308e5aaca959c1ddfde",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#fast_add_example(exportLVmeshes exportLVmeshes.cpp)",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/FAST/Algorithms/ModelBasedSegmentation/ShapeModels/CMakeLists.txt" : {
      "ObjectId" : "675a93ef114d89edd96ae248a63ff3a03e8176c6",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Algorithms/ModelBasedSegmentation/ShapeModels/CardinalSpline/CMakeLists.txt" : {
      "ObjectId" : "2a22f1e95e677445142c3b44634fd15550713fe9",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Algorithms/ModelBasedSegmentation/ShapeModels/Ellipse/CMakeLists.txt" : {
      "ObjectId" : "c95998ab9bb5cb0a5afe7bf93a61a01c9ff26197",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Algorithms/ModelBasedSegmentation/ShapeModels/MeanValueCoordinates/CMakeLists.txt" : {
      "ObjectId" : "c5c586561a63471d9516141b4b87e0c13fd0c51e",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Algorithms/Morphology/CMakeLists.txt" : {
      "ObjectId" : "fddc4f30fc4d2a4a268525af36c4d90db36ec18c",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Algorithms/NeuralNetwork/CMakeLists.txt" : {
      "ObjectId" : "001fee1f4bde496ba05e00b34e918a91acd41e41",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ObjectDetection.cpp\n\n#ObjectDetection.hpp\n\n#ShapeRegressor.cpp\n\n#ShapeRegressor.hpp\n",
        "Line" : 6,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "#fast_add_example(timingNetwork timingNetwork.cpp)\n\n#fast_add_example(imageClassification imageClassification.cpp)\n\n#fast_add_example(leftVentricleSegmentation leftVentricleSegmentation.cpp)\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "source/FAST/Algorithms/NonLocalMeans/CMakeLists.txt" : {
      "ObjectId" : "f7db64464c7116531b3403499f72779be0e9db12",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Algorithms/ScaleImage/CMakeLists.txt" : {
      "ObjectId" : "92fc90a37e373ffcc88461ca6cad5190adab470b",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Algorithms/SeededRegionGrowing/CMakeLists.txt" : {
      "ObjectId" : "595f2cfb7612c54abd7c9734630cd85f9cfa55f5",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Algorithms/SegmentationVolumeReconstructor/CMakeLists.txt" : {
      "ObjectId" : "e1732e101bf2df48486a7ec3b36f9f1d84b5681b",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Algorithms/Skeletonization/CMakeLists.txt" : {
      "ObjectId" : "4b29d785fddbfdf0ca380a21ec66b7efab475b98",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Algorithms/SurfaceExtraction/CMakeLists.txt" : {
      "ObjectId" : "fb0befcd05d62cd9263d711301c625e230b23508",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Algorithms/TemplateMatching/CMakeLists.txt" : {
      "ObjectId" : "f37efa763056b97a77dc4ffd837ab2d4c744ae69",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Algorithms/TubeSegmentationAndCenterlineExtraction/CMakeLists.txt" : {
      "ObjectId" : "ba5a3dea171b0831ce4c489cab5301a177581808",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#   CircleFittingTDF.cpp\n\n#   CircleFittingTDF.hpp\n\n#   ParallelCenterlineExtraction.cpp\n\n#   ParallelCenterlineExtraction.hpp\n",
        "Line" : 6,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "source/FAST/Algorithms/UltrasoundImageCropper/CMakeLists.txt" : {
      "ObjectId" : "ca0bffd71999148976f22293242fa095d73335da",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Algorithms/UltrasoundImageEnhancement/CMakeLists.txt" : {
      "ObjectId" : "84b07518b0dcfa90e42ba77141d372e3b0b6b39e",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Algorithms/UltrasoundVesselDetection/CMakeLists.txt" : {
      "ObjectId" : "2f8a21b1585b45f266e40b149f32203e5d1056ca",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\tfast_add_sources(\n\n#\t\tUltrasoundVesselDetection.cpp\n\n#\t\tUltrasoundVesselDetection.hpp\n\n#\t\tUltrasoundVesselSegmentation.cpp\n\n#\t\tUltrasoundVesselSegmentation.hpp\n\n#\t\tVesselCrossSection.cpp\n\n#\t\tVesselCrossSection.hpp\n\n#\t\tVesselCrossSectionAccess.cpp\n\n#\t\tVesselCrossSectionAccess.hpp\n\n#\t)\n\n#\tfast_add_test_sources(\n\n#\t\tTests.cpp\n\n#\t)\n\n#\tfast_add_example(extractVesselRegionProposals extractVesselRegionProposals.cpp)\n\n#\tfast_add_example(ultrasoundVesselDetection ultrasoundVesselDetectionExample.cpp)\n\n#\tfast_add_example(ultrasoundVesselSegmentation ultrasoundVesselSegmentationExample.cpp)\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/FAST/Algorithms/VectorMedianFilter/CMakeLists.txt" : {
      "ObjectId" : "d17dedbbabc8ae4440ff1b77bb467905adc77efd",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/CMakeLists.txt" : {
      "ObjectId" : "8f2ae1bcac581853f28f5f183dad1e25dd855383",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### Add all subdirs\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/FAST/Data/Access/CMakeLists.txt" : {
      "ObjectId" : "22958211b357581903552c1a8226024f06ece385",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Data/CMakeLists.txt" : {
      "ObjectId" : "2a12b6337b3b8784a81c57f2400075113628a33c",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#DynamicData.cpp\n\n#DynamicData.hpp\n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "source/FAST/Examples/CMakeLists.txt" : {
      "ObjectId" : "7c68d78fa39a4e9b9b68988b022cab22c510da78",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Examples/DataExport/CMakeLists.txt" : {
      "ObjectId" : "8f488e6beadc66b19c95b907c15a20c054d17301",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Examples/DataImport/CMakeLists.txt" : {
      "ObjectId" : "bef7d889aa8bb4007c81b5da5fdad021bc27321c",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Examples/Filtering/CMakeLists.txt" : {
      "ObjectId" : "278d2f7e5953ca52711ea99c5f7aa6dde5419074",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Examples/Filtering/NeuralNetworkDespeckling/CMakeLists.txt" : {
      "ObjectId" : "3ab075a4a17c93c25a79af29c82dc05d09c174d4",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Examples/Filtering/NonLocalMeans/CMakeLists.txt" : {
      "ObjectId" : "6a9c6bce2e70ad25ecebdbbf1c45ec0fc071e5e9",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#fast_add_example(\n\n#\tNonLocalMeans3D\n\n#\tNLMGUI3D.cpp\n\n#\tNLMGUI3D.hpp\n\n#\tnonLocalMeans3D.cpp\n\n#)",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/FAST/Examples/GUI/CMakeLists.txt" : {
      "ObjectId" : "943e4e89ed5f788a9f3826910ac6c1458b6151b9",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Examples/GUI/SimpleGUI/CMakeLists.txt" : {
      "ObjectId" : "2f3cf31f2ad38fa4c041318c3ed2a8320eb125d3",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Examples/Interoperability/CMakeLists.txt" : {
      "ObjectId" : "6c7527eb3fb802ebb7538beab4e5823c77d7f4cc",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Examples/Kinect/CMakeLists.txt" : {
      "ObjectId" : "6c72f98caa3e9ead13468127ffee1bcf357d1e6d",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Examples/RealSense/CMakeLists.txt" : {
      "ObjectId" : "ab686a4f2dae315e3e990a09bf03f7a8c7100488",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Examples/Registration/CMakeLists.txt" : {
      "ObjectId" : "7be3d67f2eef6b14337ba69485ec23a8a518a449",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#fast_add_example(iterativeClosestPoint iterativeClosestPoint.cpp)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/FAST/Examples/Segmentation/CMakeLists.txt" : {
      "ObjectId" : "cb45d0e8f803ac8069f749ed395867d7f4c0d322",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Examples/Visualization/CMakeLists.txt" : {
      "ObjectId" : "e5c279eaae933bd7c307cd7c6cd6d6d381354757",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Exporters/CMakeLists.txt" : {
      "ObjectId" : "e72283623fea7448b49c678e229c6270936e747c",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Importers/CMakeLists.txt" : {
      "ObjectId" : "9a54b700d04a3b3d8b3b4771c91d9ed50fcbcafe",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Streamers/CMakeLists.txt" : {
      "ObjectId" : "3f9a9a2e2b2b0f98795470dd72684c76be5f0425",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Tests/CMakeLists.txt" : {
      "ObjectId" : "9e4d84bef5fa7974bd591700a28158ff363fa3b0",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Tools/CMakeLists.txt" : {
      "ObjectId" : "3dbc8775481bdbb78de6ccc0c1804d7c628ff128",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Tools/OpenIGTLinkClient/CMakeLists.txt" : {
      "ObjectId" : "d0fa873168567d86b322fceb96e9f8d1e300c012",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Tools/OpenIGTLinkServer/CMakeLists.txt" : {
      "ObjectId" : "175206e5a95cce385db4df96444353ee3480de19",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Tools/viewer/CMakeLists.txt" : {
      "ObjectId" : "0dcaca1c37ec27697809f04ebd2f3b3e8891f129",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Visualization/BoundingBoxRenderer/CMakeLists.txt" : {
      "ObjectId" : "661faf319386ef2856ee518cb8045280670cf87e",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Visualization/CMakeLists.txt" : {
      "ObjectId" : "fd3011955f28b85e4f01a490b63e7e363d45b7fc",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Visualization/HeatmapRenderer/CMakeLists.txt" : {
      "ObjectId" : "2f37d16fe10432b24fc40243debef32e349aa10c",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Visualization/ImageRenderer/CMakeLists.txt" : {
      "ObjectId" : "8929b56c5f12d17a7b76c00bdc726ef2e5da51c4",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Visualization/LineRenderer/CMakeLists.txt" : {
      "ObjectId" : "0310b61aefb0239172f18e306d8eb1dc797d1dd6",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Visualization/SegmentationRenderer/CMakeLists.txt" : {
      "ObjectId" : "baf8e20ff12df766fd75f19a8af81c4d2c1ec0e3",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Visualization/SliceRenderer/CMakeLists.txt" : {
      "ObjectId" : "645c3a4ca79ae8aca2b2c8529b810e7e9a13ad03",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Visualization/Tests/CMakeLists.txt" : {
      "ObjectId" : "b805394de2063d641562599e2125c4acad45c1c6",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Visualization/TextRenderer/CMakeLists.txt" : {
      "ObjectId" : "fcf29637d4e69a2d5149658aaa92fe87d7118078",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Visualization/TriangleRenderer/CMakeLists.txt" : {
      "ObjectId" : "9188461d153fab921532962e0980ee34ca6d194b",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Visualization/VectorFieldRenderer/CMakeLists.txt" : {
      "ObjectId" : "568a1289583e8f7c40dc6cafeb837657db163eb1",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Visualization/VertexRenderer/CMakeLists.txt" : {
      "ObjectId" : "30e52cd90fb6d0fde221cf3c3f9925cbc286b17a",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/FAST/Visualization/VolumeRenderer/CMakeLists.txt" : {
      "ObjectId" : "f59ea2263e306ed2cffa34f3905aab72a27c58e2",
      "LastModified" : "2019-03-11T13:55:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 140
  },
  "ElapsedTime" : 1250
}