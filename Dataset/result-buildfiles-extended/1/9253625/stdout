{
  "Repository" : "9253625",
  "Revision" : "HEAD",
  "ObjectId" : "eb24b2d264937d84d2d1a799d9e483b919516fa8",
  "CommitTime" : "2018-12-08T17:46:03Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "b598fd334d36065f8804809ec9591cc31f8ab104",
      "LastModified" : "2015-10-29T08:36:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Projet name\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Detect compiler\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For GCC and Clang, enable C++11 support and add some other flags\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Compilation options\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Detect and add SFML\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# copy SFML frameworks into app bundle for Mac OS X\n",
        "Line" : 92,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Packaging\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# TODO: CPACK_DMG_BACKGROUND_IMAGE\n\n# TODO: CPACK_DMG_DS_STORE\n",
        "Line" : 121,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "cmake_modules/FindSFML.cmake" : {
      "ObjectId" : "31c1c705ed6f8342edb9787ec441172aa7e9218c",
      "LastModified" : "2014-04-15T21:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This script locates the SFML library\n\n# ------------------------------------\n\n#\n\n# Usage\n\n# -----\n\n#\n\n# When you try to locate the SFML libraries, you must specify which modules you want to use (system, window, graphics, network, audio, main).\n\n# If none is given, the SFML_LIBRARIES variable will be empty and you'll end up linking to nothing.\n\n# example:\n\n#   find_package(SFML COMPONENTS graphics window system) // find the graphics, window and system modules\n\n#\n\n# You can enforce a specific version, either MAJOR.MINOR or only MAJOR.\n\n# If nothing is specified, the version won't be checked (ie. any version will be accepted).\n\n# example:\n\n#   find_package(SFML COMPONENTS ...)     // no specific version required\n\n#   find_package(SFML 2 COMPONENTS ...)   // any 2.x version\n\n#   find_package(SFML 2.4 COMPONENTS ...) // version 2.4 or greater\n\n#\n\n# By default, the dynamic libraries of SFML will be found. To find the static ones instead,\n\n# you must set the SFML_STATIC_LIBRARIES variable to TRUE before calling find_package(SFML ...).\n\n# Since you have to link yourself all the SFML dependencies when you link it statically, the following\n\n# additional variables are defined: SFML_XXX_DEPENDENCIES and SFML_DEPENDENCIES (see their detailed\n\n# description below).\n\n# In case of static linking, the SFML_STATIC macro will also be defined by this script.\n\n# example:\n\n#   set(SFML_STATIC_LIBRARIES TRUE)\n\n#   find_package(SFML 2 COMPONENTS network system)\n\n#\n\n# On Mac OS X if SFML_STATIC_LIBRARIES is not set to TRUE then by default CMake will search for frameworks unless\n\n# CMAKE_FIND_FRAMEWORK is set to \"NEVER\" for example. Please refer to CMake documentation for more details.\n\n# Moreover, keep in mind that SFML frameworks are only available as release libraries unlike dylibs which\n\n# are available for both release and debug modes.\n\n#\n\n# If SFML is not installed in a standard path, you can use the SFML_ROOT CMake (or environment) variable\n\n# to tell CMake where SFML is.\n\n#\n\n# Output\n\n# ------\n\n#\n\n# This script defines the following variables:\n\n# - For each specified module XXX (system, window, graphics, network, audio, main):\n\n#   - SFML_XXX_LIBRARY_DEBUG:   the name of the debug library of the xxx module (set to SFML_XXX_LIBRARY_RELEASE is no debug version is found)\n\n#   - SFML_XXX_LIBRARY_RELEASE: the name of the release library of the xxx module (set to SFML_XXX_LIBRARY_DEBUG is no release version is found)\n\n#   - SFML_XXX_LIBRARY:         the name of the library to link to for the xxx module (includes both debug and optimized names if necessary)\n\n#   - SFML_XXX_FOUND:           true if either the debug or release library of the xxx module is found\n\n#   - SFML_XXX_DEPENDENCIES:    the list of libraries the module depends on, in case of static linking\n\n# - SFML_LIBRARIES:    the list of all libraries corresponding to the required modules\n\n# - SFML_FOUND:        true if all the required modules are found\n\n# - SFML_INCLUDE_DIR:  the path where SFML headers are located (the directory containing the SFML/Config.hpp file)\n\n# - SFML_DEPENDENCIES: the list of libraries SFML depends on, in case of static linking\n\n#\n\n# example:\n\n#   find_package(SFML 2 COMPONENTS system window graphics audio REQUIRED)\n\n#   include_directories(${SFML_INCLUDE_DIR})\n\n#   add_executable(myapp ...)\n\n#   target_link_libraries(myapp ${SFML_LIBRARIES})\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# define the SFML_STATIC macro if static build was chosen\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# deduce the libraries suffix from the options\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# define the list of search paths for headers and libraries\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# find the SFML include directory\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# check the version number\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# extract the major and minor version numbers from SFML/Config.hpp\n\n# we have to handle framework a little bit differently :\n",
        "Line" : 90,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# if we could extract them, compare with the requested version number\n",
        "Line" : 103,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# transform version numbers to an integer\n",
        "Line" : 105,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# compare them\n",
        "Line" : 108,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# SFML version is < 2.0\n",
        "Line" : 113,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# find the requested modules\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# will be set to false if one of the required modules is not found\n",
        "Line" : 123,
        "CharPositionInLine" : 21
      },
      "13" : {
        "Text" : "# no suffix for sfml-main, it is always a static library\n",
        "Line" : 129,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# debug library\n",
        "Line" : 134,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# release library\n",
        "Line" : 140,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# library found\n",
        "Line" : 147,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# if both are found, set SFML_XXX_LIBRARY to contain both\n",
        "Line" : 150,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# if only one debug/release variant is found, set the other to be equal to the found one\n",
        "Line" : 156,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# debug and not release\n",
        "Line" : 158,
        "CharPositionInLine" : 12
      },
      "20" : {
        "Text" : "# release and not debug\n",
        "Line" : 163,
        "CharPositionInLine" : 12
      },
      "21" : {
        "Text" : "# library not found\n",
        "Line" : 168,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# mark as advanced\n",
        "Line" : 175,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# add to the global list of libraries\n",
        "Line" : 180,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# in case of static linking, we must also define the list of all the dependencies of SFML libraries\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# detect the OS\n",
        "Line" : 187,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# start with an empty list\n",
        "Line" : 198,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# macro that searches for a 3rd-party library\n",
        "Line" : 202,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# sfml-system\n",
        "Line" : 211,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# update the list -- these are only system libraries, no need to find them\n",
        "Line" : 215,
        "CharPositionInLine" : 8
      },
      "30" : {
        "Text" : "# sfml-network\n",
        "Line" : 228,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# update the list -- these are only system libraries, no need to find them\n",
        "Line" : 232,
        "CharPositionInLine" : 8
      },
      "32" : {
        "Text" : "# sfml-window\n",
        "Line" : 239,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# find libraries\n",
        "Line" : 243,
        "CharPositionInLine" : 8
      },
      "34" : {
        "Text" : "# update the list\n",
        "Line" : 249,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : "# sfml-graphics\n",
        "Line" : 263,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# find libraries\n",
        "Line" : 267,
        "CharPositionInLine" : 8
      },
      "37" : {
        "Text" : "# update the list\n",
        "Line" : 272,
        "CharPositionInLine" : 8
      },
      "38" : {
        "Text" : "# sfml-audio\n",
        "Line" : 277,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "# find libraries\n",
        "Line" : 281,
        "CharPositionInLine" : 8
      },
      "40" : {
        "Text" : "# update the list\n",
        "Line" : 285,
        "CharPositionInLine" : 8
      },
      "41" : {
        "Text" : "# handle errors\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# SFML version not ok\n",
        "Line" : 294,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "# include directory or library not found\n",
        "Line" : 301,
        "CharPositionInLine" : 4
      },
      "44" : {
        "Text" : "# fatal error\n",
        "Line" : 306,
        "CharPositionInLine" : 8
      },
      "45" : {
        "Text" : "# error but continue\n",
        "Line" : 309,
        "CharPositionInLine" : 8
      },
      "46" : {
        "Text" : "# handle success\n",
        "Line" : 314,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    }
  },
  "FileTypes" : {
    "CMAKE" : 2
  },
  "ElapsedTime" : 2546
}