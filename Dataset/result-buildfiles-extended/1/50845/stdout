{
  "Repository" : "50845",
  "Revision" : "HEAD",
  "ObjectId" : "6cafe33f7b365a76082b48ca2fd4b5da5a5b9ef8",
  "CommitTime" : "2019-04-05T11:22:50Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "92c5e711a14068a83f3c3f6fd7bd2fc17855e68d",
      "LastModified" : "2019-03-06T11:40:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake; tab-width: 2; indent-tabs-mode: nil; truncate-lines: t\n\n# vim: set filetype=cmake autoindent tabstop=2 shiftwidth=2 noexpandtab softtabstop=2 nowrap:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###########################################################################\n\n#                                                                         #\n\n# Note: The bulk of the build system is located in the cmake/ directory.  #\n\n#       This file only contains the specializations for this particular   #\n\n#       project. Most likely you are interested in editing one of these   #\n\n#       files instead:                                                    #\n\n#                                                                         #\n\n#       dune.module                              Name and version number  #\n\n#       CMakeLists_files.cmake                   Path of source files     #\n\n#       cmake/Modules/${project}-prereqs.cmake   Dependencies             #\n\n#                                                                         #\n\n###########################################################################\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Mandatory call to project\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add the current projects cmake module directory to the search\n\n# path. This is not required anymore once support for federated builds\n\n# is merged.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# guess the sibling dir\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#Try if <module-name>/<build-dir> is used\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# We are using build directories named <prefix><module-name><postfix>\n",
        "Line" : 41,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# All modules are in a common build dir\n",
        "Line" : 44,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# Testing\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# list of prerequisites for this particular project; this is in a\n\n# separate file (in cmake/Modules sub-directory) because it is shared\n\n# with the find module\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# read the list of components from this file (in the project directory);\n\n# it should set various lists with the names of the files to include\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# For eWoms, we set the BUILD_TESTING variable to off by default. The\n\n# reason is that builing the tests takes quite some time and they are\n\n# not very interesting for people who just want to use eWoms but not\n\n# develop it. To enable testing, either pass --enable-testing to the\n\n# configure script or call cmake with -DBUILD_TESTING=ON\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# all setup common to the OPM library modules\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# restore the value of the BUILD_TESTING variable to its original\n\n# value. This is required because OpmLibMain thinks it is smarter\n\n# appropriate and sets it...\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# copy the data files (i.e., grid files, etc) needed to run the unit\n\n# tests from the source to the build directory\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# include the macros required to build the tests and applications\n\n# shipped as part of the eWoms distribution\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# the ART to DGF file format conversion utility\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# add targets for all tests of the models. we add the water-air test\n\n# first because it take longest and so that we don't have to wait for\n\n# them as long for parallel test runs\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# this test is identical to the simulation of the lens problem that\n\n# uses the element centered finite volume discretization in\n\n# conjunction with automatic differentiation\n\n# (lens_immiscible_ecfv_ad). The only difference is that it uses\n\n# multiple compile units in order to ensure that eWoms code can be\n\n# used within libraries that use the same type tag within multiple\n\n# compile units.\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# test for the parallelization of the element centered finite volume\n\n# discretization (using the non-isothermal NCP model and the parallel\n\n# AMG linear solver)\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# test for the parallelization of the vertex centered finite volume\n\n# discretization (using BiCGSTAB + ILU0)\n",
        "Line" : 243,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# test for the parallel AMG linear solver using the vertex centered\n\n# finite volume discretization\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 22
    },
    "CMakeLists_files.cmake" : {
      "ObjectId" : "2e05d89a7a91a9823b9ef0153d63d3aa2f6be19f",
      "LastModified" : "2019-02-28T13:30:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake; tab-width: 2; indent-tabs-mode: t; truncate-lines: t; compile-command: \"cmake -Wdev\" -*-\n\n# vim: set filetype=cmake autoindent tabstop=2 shiftwidth=2 noexpandtab softtabstop=2 nowrap:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This file sets up five lists:\n\n#\tMAIN_SOURCE_FILES     List of compilation units which will be included in\n\n#\t                      the library. If it isn't on this list, it won't be\n\n#\t                      part of the library. Please try to keep it sorted to\n\n#\t                      maintain sanity.\n\n#\n\n#\tTEST_SOURCE_FILES     List of programs that will be run as unit tests.\n\n#\n\n#\tTEST_DATA_FILES       Files from the source three that should be made\n\n#\t                      available in the corresponding location in the build\n\n#\t                      tree in order to run tests there.\n\n#\n\n#\tEXAMPLE_SOURCE_FILES  Other programs that will be compiled as part of the\n\n#\t                      build, but which is not part of the library nor is\n\n#\t                      run as tests.\n\n#\n\n#\tPUBLIC_HEADER_FILES   List of public header files that should be\n\n#\t                      distributed together with the library. The source\n\n#\t                      files can of course include other files than these;\n\n#\t                      you should only add to this list if the *user* of\n\n#\t                      the library needs it.\n\n#\n\n# ATTIC_FILES           Unmaintained files. This for the projects developers\n\n#                       only. Don't expect these files to build.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# originally generated with the command:\n\n# find opm -name '*.c*' -printf '\\t%p\\n' | sort\n\n#list(APPEND MAIN_SOURCE_FILES \"\")\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# originally generated with the command:\n\n# find tests -name '*.cpp' -a ! -wholename '*/not-unit/*' -printf '\\t%p\\n' | sort\n\n#list(APPEND TEST_SOURCE_FILES \"\")\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# originally generated with the command:\n\n# find tests -name '*.xml' -a ! -wholename '*/not-unit/*' -printf '\\t%p\\n' | sort\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# originally generated with the command:\n\n# find tutorials examples -name '*.c*' -printf '\\t%p\\n' | sort\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# programs listed here will not only be compiled, but also marked for\n\n# installation\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# for eWoms we do not list all headers explicitly. instead we\n\n# glob through the source tree...\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "CTestConfig.cmake" : {
      "ObjectId" : "9dddb004c0242b1f8782d6ffedb266b8bdca80bd",
      "LastModified" : "2015-11-11T15:41:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# this file tells CTest where it should upload its results. To run\n\n# CTest manually, run\n\n#\n\n#  ctest -D Experimental\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in the build directory of the eWoms module. (You must use the CMake\n\n# build system to make this work.)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Modules/EwomsAddApplication.cmake" : {
      "ObjectId" : "2d456e1497d3443191d6d2ebcf7aee2eead3c284",
      "LastModified" : "2015-05-26T10:22:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add an application. the main difference to EwomsAddTest() is that\n\n# applications are always compiled if CONDITION evaluates to true...\n\n#\n\n# EwomsAddApplication(AppName\n\n#                     [EXE_NAME AppExecutableName]\n\n#                     [CONDITION ConditionalExpression]\n\n#                     [SOURCES SourceFile1 SourceFile2 ...])\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ewoms-prereqs.cmake" : {
      "ObjectId" : "6443f99984a83834ced81ccfe759fe1f6439c7de",
      "LastModified" : "2019-02-28T13:30:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# this avoids an annoying deprecation warning on DUNE 2.4 (which we\n\n# are not interested in anyway)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# defines that must be present in config.h for our headers\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# dependencies\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# compile with C++0x/11 support if available\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Need boost::test\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# DUNE prerequisites\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# valgrind client requests\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# quadruple precision floating point calculations\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    }
  },
  "FileTypes" : {
    "CMAKE" : 5
  },
  "ElapsedTime" : 2617
}