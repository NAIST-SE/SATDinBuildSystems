{
  "Repository" : "9702866",
  "Revision" : "HEAD",
  "ObjectId" : "3b073cad9baa462ba440a8e3dd4f0937891547d2",
  "CommitTime" : "2019-04-08T23:46:35Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "90c3702e163b787a92d0e758baf6909b299d81ce",
      "LastModified" : "2019-02-13T12:23:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# $Format:Packaged from commit %H%nset(COMMIT %h)%nset(REFS \"%d\")$\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Note that at the time of this writing the -Wstrict-prototypes flag added below will make this fail\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Since gcc 4.9 the LTO format is non-standard (slim), so we need the gcc-specific ar and ranlib binaries\n",
        "Line" : 65,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#if(CMAKE_C_COMPILER_ID STREQUAL \"GNU\" AND NOT MINGW)\n\n#  set(RELEASE_FLAGS \"${RELEASE_FLAGS} -fno-fat-lto-objects\")\n\n#endif()\n",
        "Line" : 109,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "Makefile" : {
      "ObjectId" : "451319b08697cc1207bc0a12c4c5a120ebd0d594",
      "LastModified" : "2014-04-19T15:47:37Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "contrib/CMakeLists.txt" : {
      "ObjectId" : "a6614eea59bde1c767c619e3fd1ec6eba7654f51",
      "LastModified" : "2018-10-01T00:20:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/db/CMakeLists.txt" : {
      "ObjectId" : "f9c20de97387b7e2e1714394ff781b87cfcd1e25",
      "LastModified" : "2018-03-21T03:46:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/db/liblmdb/CMakeLists.txt" : {
      "ObjectId" : "d730142010c880cb967d089ac5f6dbb2868c2227",
      "LastModified" : "2018-10-01T00:20:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/db/liblmdb/Makefile" : {
      "ObjectId" : "72d0984607c15ec79d77448ba6f496eb86d50864",
      "LastModified" : "2018-03-21T03:46:15Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for liblmdb (Lightning memory-mapped database library).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########################################################################\n\n# Configuration. The compiler options must enable threaded compilation.\n\n#\n\n# Preprocessor macros (for CPPFLAGS) of interest...\n\n# Note that the defaults should already be correct for most\n\n# platforms; you should not need to change any of these.\n\n# Read their descriptions in mdb.c if you do:\n\n#\n\n# - MDB_USE_POSIX_MUTEX, MDB_USE_POSIX_SEM, MDB_USE_SYSV_SEM\n\n# - MDB_DSYNC\n\n# - MDB_FDATASYNC\n\n# - MDB_FDATASYNC_WORKS\n\n# - MDB_USE_PWRITEV\n\n# - MDB_USE_ROBUST\n\n#\n\n# There may be other macros in mdb.c of interest. You should\n\n# read mdb.c before changing any of them.\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# -lntdll # Windows needs ntdll\n\n# -lntdll\n",
        "Line" : 27,
        "CharPositionInLine" : 9
      },
      "3" : {
        "Text" : "########################################################################\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\t$(CC) $(LDFLAGS) -pthread -shared -Wl,-Bsymbolic -o $@ mdb.o midl.o $(SOLIBS)\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "contrib/epee/demo/CMakeLists.txt" : {
      "ObjectId" : "b4ac2cc8ba945ae6bd1b30f8f814964cec28af44",
      "LastModified" : "2018-03-21T03:46:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(Boost_DEBUG 1) \n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set stuff for other systems\n",
        "Line" : 12,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Add folders to filters\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#source_group(general  FILES ${HTTP_GENERAL_SECTION})\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "contrib/epee/tests/src/CMakeLists.txt" : {
      "ObjectId" : "b1bb3c334bea66266c5a56bde71d19d55dda3151",
      "LastModified" : "2018-10-01T00:20:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set stuff for other systems\n",
        "Line" : 16,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# needed for AES\n",
        "Line" : 18,
        "CharPositionInLine" : 45
      },
      "2" : {
        "Text" : "# Add folders to filters\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "contrib/miniupnpc/CMakeLists.txt" : {
      "ObjectId" : "464ae74b07141207cb56772c1009d5814fc05186",
      "LastModified" : "2018-03-21T03:46:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# XP or higher for getnameinfo and friends\n",
        "Line" : 35,
        "CharPositionInLine" : 42
      },
      "1" : {
        "Text" : "# Set compiler specific build flags\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set our own default flags at first run.\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# CMAKE_C_FLAGS gets appended to the other C flags\n",
        "Line" : 51,
        "CharPositionInLine" : 52
      },
      "4" : {
        "Text" : "#  find_library (WINSOCK2_LIBRARY NAMES ws2_32 WS2_32 Ws2_32)\n\n#  find_library (IPHLPAPI_LIBRARY NAMES iphlpapi)\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#elseif (CMAKE_SYSTEM_NAME STREQUAL \"Solaris\")\n\n#  find_library (SOCKET_LIBRARY NAMES socket)\n\n#  find_library (NSL_LIBRARY NAMES nsl)\n\n#  find_library (RESOLV_LIBRARY NAMES resolv)\n\n#  set (LDLIBS ${SOCKET_LIBRARY} ${NSL_LIBRARY} ${RESOLV_LIBRARY} ${LDLIBS})\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# set (UPNPC_INSTALL_TARGETS ${UPNPC_INSTALL_TARGETS} testminixml minixmlvalid testupnpreplyparse testigddescparse testminiwget)\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# vim: ts=2:sw=2\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "contrib/miniupnpc/Makefile" : {
      "ObjectId" : "1040ac256e8f1efa6c2c5a906391a3316e6d1508",
      "LastModified" : "2018-03-21T03:46:15Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# $Id: Makefile,v 1.107 2014/01/31 14:19:12 nanard Exp $\n\n# MiniUPnP Project\n\n# http://miniupnp.free.fr/\n\n# http://miniupnp.tuxfamily.org/\n\n# https://github.com/miniupnp/miniupnp\n\n# (c) 2005-2014 Thomas Bernard\n\n# to install use :\n\n# $ make DESTDIR=/tmp/dummylocation install\n\n# or\n\n# $ INSTALLPREFIX=/usr/local make install\n\n# or\n\n# $ make install (default INSTALLPREFIX is /usr)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#AR = gar\n\n#CFLAGS = -O -g -DDEBUG\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# -DNO_GETADDRINFO\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# see http://code.google.com/p/jnaerator/\n\n#JNAERATOR = jnaerator-0.9.7.jar\n\n#JNAERATOR = jnaerator-0.9.8-shaded.jar\n\n#JNAERATORARGS = -library miniupnpc\n\n#JNAERATOR = jnaerator-0.10-shaded.jar\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# APIVERSION is used to build SONAME\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# HEADERS to install\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# library names\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Linux/BSD/etc.\n",
        "Line" : 93,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# install directories\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\tvalidateminixml validateminiwget\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# clean python stuff\n",
        "Line" : 177,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "#python setup.py clean\n\n# clean jnaerator stuff\n",
        "Line" : 181,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "#\t$(CC) -dynamiclib $(LDFLAGS) -Wl,-install_name,$(SONAME) -o $@ $^\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# ftp tool supplied with OpenBSD can download files from http.\n",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# make .deb packages\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# install .deb packages\n",
        "Line" : 281,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 293,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17,
      "Errorlog" : "line 190:33 token recognition error at: '\\s'\nline 190:47 token recognition error at: '\\1'\n"
    },
    "contrib/miniupnpc/miniupnpcstrings.h.cmake" : {
      "ObjectId" : "236b2dca674dc8e50d858be9eaa673fb47276bbf",
      "LastModified" : "2018-03-21T03:46:15Z",
      "FileType" : "CMAKESOURCE",
      "CommentCount" : 0
    },
    "contrib/zlib/CMakeLists.txt" : {
      "ObjectId" : "e357dd3d62c68b96f5394e3d2b2b60201166bbaa",
      "LastModified" : "2018-10-01T00:20:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Check to see if we have large file support\n\n#\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We add these other definitions here because CheckTypeSize.cmake\n\n# in CMake 2.4.x does not automatically do so and we want\n\n# compatibility with CMake 2.4.x.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# clear variable\n",
        "Line" : 38,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "#\n\n# Check for fseeko\n\n#\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Check for unistd.h\n\n#\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If we're doing an out of source build and the user has a zconf.h\n\n# in their source tree...\n",
        "Line" : 61,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#============================================================================\n\n# zlib\n\n#============================================================================\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# If present will override custom build rule below.\n",
        "Line" : 119,
        "CharPositionInLine" : 23
      },
      "8" : {
        "Text" : "# parse the full version number from zlib.h and include in ZLIB_FULL_VERSION\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# On unix-like platforms the library is almost always called libz\n",
        "Line" : 166,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 10
    },
    "contrib/zlib/Makefile" : {
      "ObjectId" : "6bba86c73fca2abda416baa1a7cf883b3494fb29",
      "LastModified" : "2018-10-01T00:20:00Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "contrib/zlib/contrib/blast/Makefile" : {
      "ObjectId" : "9be80bafe050eed57029ef2e690f36677a3003c0",
      "LastModified" : "2018-10-01T00:20:00Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "contrib/zlib/contrib/minizip/Makefile" : {
      "ObjectId" : "84eaad20d4fb19b00965268dd75d7e9b66c8cc21",
      "LastModified" : "2018-10-01T00:20:00Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "contrib/zlib/contrib/minizip/Makefile.am" : {
      "ObjectId" : "d343011ebc3b3fd78d2bc3a29801a083c038cf0c",
      "LastModified" : "2018-10-01T00:20:00Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "contrib/zlib/contrib/puff/Makefile" : {
      "ObjectId" : "0e2594c80885c0dbea13c6d22b2e60e9fb82b51f",
      "LastModified" : "2018-10-01T00:20:00Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# puff full coverage test (should say 100%)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/zlib/contrib/untgz/Makefile" : {
      "ObjectId" : "b54266fba20a167a1d83b7afd503dfd2f849ca57",
      "LastModified" : "2018-10-01T00:20:00Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "contrib/zlib/nintendods/Makefile" : {
      "ObjectId" : "21337d01ab2fe20743682125994666e20af6b7e7",
      "LastModified" : "2018-10-01T00:20:00Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# TARGET is the name of the output\n\n# BUILD is the directory where object files & intermediate files will be placed\n\n# SOURCES is a list of directories containing source code\n\n# DATA is a list of directories containing data files\n\n# INCLUDES is a list of directories containing header files\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# options for code generation\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# list of directories containing libraries, this must be the top level containing\n\n# include and lib\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# no real need to edit anything past this point unless you need to add additional\n\n# rules for different file extensions\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# use CXX for linking C++ projects, CC for standard C\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# main targets\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#---------------------------------------------------------------------------------------\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#---------------------------------------------------------------------------------------\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "c0fbddd5e0c26a61cc956a10c36adc998a250a1f",
      "LastModified" : "2019-03-11T18:40:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# file(GLOB_RECURSE SIMPLEMINER miner/*)\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# source_group(simpleminer FILES ${SIMPLEMINER})\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add_executable(simpleminer ${SIMPLEMINER})\n\n# add_dependencies(simpleminer version)\n\n# target_link_libraries(simpleminer currency_core crypto common ${CMAKE_THREAD_LIBS_INIT} ${Boost_LIBRARIES})\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/version.cmake" : {
      "ObjectId" : "9bc0131ca8d49834cf7184ad36a52746bee55464",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "9f476b627758379cbdf33d6ec2464c097c14ba2a",
      "LastModified" : "2018-10-29T09:26:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add_subdirectory(daemon_tests)\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/daemon_tests/CMakeLists.txt" : {
      "ObjectId" : "57e9e7432cbcd229396a0b2b95ca221dcabcd4c8",
      "LastModified" : "2018-10-01T00:20:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/gtest/CMakeLists.txt" : {
      "ObjectId" : "0fe26540b345fcab7b3260a8d7f6e784a1128e14",
      "LastModified" : "2018-10-01T00:20:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# CMake build script for Google Test.\n\n#\n\n# To run the tests for Google Test itself on Linux, use 'make test' or\n\n# ctest.  You can select which tests to run using 'ctest -R regex'.\n\n# For more options, run 'ctest --help'.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BUILD_SHARED_LIBS is a standard CMake variable, but we declare it here to\n\n# make it prominent in the GUI.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# When other libraries are using a shared version of runtime libraries,\n\n# Google Test also has to use one.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Defines pre_project_set_up_hermetic_build() and set_up_hermetic_build().\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "########################################################################\n\n#\n\n# Project-wide settings\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Name of the project.\n\n#\n\n# CMake files in this project can refer to the root source directory\n\n# as ${gtest_SOURCE_DIR} and to the root binary directory as\n\n# ${gtest_BINARY_DIR}.\n\n# Language \"C\" is required for find_package(Threads).\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define helper functions and macros used by Google Test.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Defined in internal_utils.cmake.\n",
        "Line" : 52,
        "CharPositionInLine" : 30
      },
      "8" : {
        "Text" : "# Where Google Test's .h files can be found.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Where Google Test's libraries can be found.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "########################################################################\n\n#\n\n# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Google Test libraries.  We build them using more strict warnings than what\n\n# are used for other targets, to ensure that gtest can be compiled by a user\n\n# aggressive about warnings.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "########################################################################\n\n#\n\n# Samples on how to link user tests with gtest or gtest_main.\n\n#\n\n# They are not built by default.  To build them, set the\n\n# gtest_build_samples option to ON.  You can do it by running ccmake\n\n# or specifying the -Dbuild_gtest_samples=ON flag when running cmake.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "########################################################################\n\n#\n\n# Google Test's own tests.\n\n#\n\n# You can skip this section if you aren't interested in testing\n\n# Google Test itself.\n\n#\n\n# The tests are not built by default.  To build them, set the\n\n# gtest_build_tests option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_tests=ON flag when running cmake.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# This must be set in the root directory for the tests to be run by\n\n# 'make test' or ctest.\n",
        "Line" : 107,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "############################################################\n\n# C++ tests built with standard compiler flags.\n",
        "Line" : 111,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "############################################################\n\n# C++ tests built with non-standard compiler flags.\n",
        "Line" : 140,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# The C++ Standard specifies tuple_element<int, class>.\n\n# Yet MSVC 10's <utility> declares tuple_element<size_t, class>.\n\n# That declaration conflicts with our own standard-conforming\n\n# tuple implementation.  Therefore using our own tuple with\n\n# MSVC 10 doesn't compile.\n",
        "Line" : 170,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "############################################################\n\n# Python tests.\n",
        "Line" : 186,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 19
    },
    "tests/gtest/cmake/internal_utils.cmake" : {
      "ObjectId" : "7efc2ac797aa6ec29cb011191373b3bb5242b74f",
      "LastModified" : "2018-10-01T00:20:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Defines functions and macros useful for building Google Test and\n\n# Google Mock.\n\n#\n\n# Note:\n\n#\n\n# - This file will be run twice when building Google Mock (once via\n\n#   Google Test's CMakeLists.txt, and once via Google Mock's).\n\n#   Therefore it shouldn't have any side effects other than defining\n\n#   the functions and macros.\n\n#\n\n# - The functions/macros defined in this file may depend on Google\n\n#   Test and Google Mock's option() definitions, and thus must be\n\n#   called *after* the options have been defined.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Tweaks CMake's default compiler/linker settings to suit Google Test's needs.\n\n#\n\n# This must be a macro(), as inside a function string() can only\n\n# update variables in the function scope.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For MSVC, CMake sets certain flags to defaults we want to override.\n\n# This replacement code is taken from sample in the CMake Wiki at\n\n# http://www.cmake.org/Wiki/CMake_FAQ#Dynamic_Replace.\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# When Google Test is built as a shared library, it should also use\n\n# shared runtime libraries.  Otherwise, it may end up with multiple\n\n# copies of runtime library data in different modules, resulting in\n\n# hard-to-find crashes. When it is built as a static library, it is\n\n# preferable to use CRT as static libraries, as we don't have to rely\n\n# on CRT DLLs being available. CMake always defaults to using shared\n\n# CRT libraries, so we override that default here.\n",
        "Line" : 28,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# We prefer more strict warning checking for building Google Test.\n\n# Replaces /W3 with /W4 in defaults.\n",
        "Line" : 38,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Defines the compiler/linker flags used to build Google Test and\n\n# Google Mock.  You can tweak these definitions to suit your need.  A\n\n# variable's value is empty before it's explicitly assigned to.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Defines CMAKE_USE_PTHREADS_INIT and CMAKE_THREAD_LIBS_INIT.\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Newlines inside flags variables break CMake's NMake generator.\n\n# TODO(vladl@google.com): Add -RTCs and -RTCu to debug builds.\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Until version 4.3.2, GCC doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 68,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Sun Pro doesn't provide macros to indicate whether exceptions and\n\n# RTTI are enabled, so we define GTEST_HAS_* explicitly.\n",
        "Line" : 75,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# CMake 2.8 changes Visual Age's compiler ID to \"XL\".\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Until version 9.0, Visual Age doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 84,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# RTTI can not be disabled in HP aCC compiler.\n",
        "Line" : 92,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# The pthreads library is available and allowed.\n",
        "Line" : 96,
        "CharPositionInLine" : 32
      },
      "14" : {
        "Text" : "# For building gtest's own tests and samples.\n",
        "Line" : 102,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# For building the gtest libraries.\n",
        "Line" : 110,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# type can be either STATIC or SHARED to denote a static or shared library.\n\n# ARGN refers to additional arguments after 'cxx_flags'.\n",
        "Line" : 117,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "########################################################################\n\n#\n\n# Helper functions for creating build targets.\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# cxx_executable_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ executable that depends on the given libraries and\n\n# is built from the given source files with the given compiler flags.\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# To support mixing linking in static and dynamic libraries, link each\n\n# library in with an extra call to target_link_libraries.\n",
        "Line" : 161,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# cxx_executable(name dir lib srcs...)\n\n#\n\n# creates a named target that depends on the given libs and is built\n\n# from the given source files.  dir/name.cc is implicitly included in\n\n# the source file list.\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Sets PYTHONINTERP_FOUND and PYTHON_EXECUTABLE.\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# cxx_test_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ test that depends on the given libs and is built\n\n# from the given source files with the given compiler flags.\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# cxx_test(name libs srcs...)\n\n#\n\n# creates a named test target that depends on the given libs and is\n\n# built from the given source files.  Unlike cxx_test_with_flags,\n\n# test/name.cc is already implicitly included in the source file list.\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# py_test(name)\n\n#\n\n# creates a Python test with the given name whose main module is in\n\n# test/name.py.  It does nothing if Python is not installed.\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# We are not supporting Python tests on Linux yet as they consider\n\n# all Linux environments to be google3 and try to use google3 features.\n",
        "Line" : 205,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# ${CMAKE_BINARY_DIR} is known at configuration time, so we can\n\n# directly bind it from cmake. ${CTEST_CONFIGURATION_TYPE} is known\n\n# only at ctest runtime (by calling ctest -c <Configuration>), so\n\n# we have to escape $ to delay variable substitution here.\n",
        "Line" : 208,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 28
    }
  },
  "FileTypes" : {
    "CMAKE" : 14,
    "CMAKESOURCE" : 1,
    "MAKEFILE" : 9,
    "AUTOMAKE" : 1
  },
  "ElapsedTime" : 2505
}