{
  "Repository" : "30218241",
  "Revision" : "HEAD",
  "ObjectId" : "3f3ca556c1e035e187796db8e6233092a7d0ab3b",
  "CommitTime" : "2019-02-18T15:40:59Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "990c2f273fe3536c5bc2309317ca37ccaa2bea55",
      "LastModified" : "2019-02-17T12:27:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------------------------------------------\n\n# Version\n\n#-------------------------------------------------------------------------------------------------------------------\n\n# as seen in the github.com/QuantStack/xtensor\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Old ABI to be compatible with boost\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Disable autolinking on MSVC.\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# from externals..\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# vigra uses old stuff....\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# cplex\n",
        "Line" : 69,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# boost geometry needs this \n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#-------------------------------------------------------------------------------------------------------------------\n\n# check for c++ 14 / 17 support\n\n#-------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# WITH_LP_MP needs special treatment since\n\n# it requires C++ 14 and used OpenMP\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#-------------------------------------------------------------------------------------------------------------------\n\n# Set a default build configuraton if none is specified. 'MinSizeRel' produces the smallest binaries\n\n#-------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#-------------------------------------------------------------------------------------------------------------------\n\n# thread libs\n\n#-------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#-------------------------------------------------------------------------------------------------------------------\n\n# rt lib\n\n#-------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#message(STATUS \"Linking to RT is enabled\")\n",
        "Line" : 133,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#message(STATUS \"Linking to RT is diabled\")\n",
        "Line" : 136,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "#-------------------------------------------------------------------------------------------------------------------\n\n# externals\n\n#-------------------------------------------------------------------------------------------------------------------\n\n# FIXME external maxflow project doews not exist anymore\n\n# was this removed accidentally?\n\n# include_directories( \"${CMAKE_CURRENT_SOURCE_DIR}/externals/maxflow\")\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#-------------------------------------------------------------------------------------------------------------------\n\n# hdf5 libs\n\n#-------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#-------------------------------------------------------------------------------------------------------------------\n\n# find boost\n\n#-------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#-------------------------------------------------------------------------------------------------------------------\n\n# find LP SOLVERS\n\n#-------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#-------------------------------------------------------------------------------------------------------------------\n\n# find cplex\n\n#-------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#-------------------------------------------------------------------------------------------------------------------\n\n# find gurobi\n\n#-------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#-------------------------------------------------------------------------------------------------------------------\n\n# find glpk\n\n#-------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#-------------------------------------------------------------------------------------------------------------------\n\n# find fastfilters\n\n#-------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#-------------------------------------------------------------------------------------------------------------------\n\n# find z5\n\n#-------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# TODO need to do this for conda package or add necessary things to cmake modules here \n\n# set(CMAKE_MODULE_PATH \"${CMAKE_MODULE_PATH};${CMAKE_CURRENT_SOURCE_DIR}/externals/z5/cmake\")\n\n# z5 compression libraries\n",
        "Line" : 236,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "#-------------------------------------------------------------------------------------------------------------------\n\n# additional dependencies for LP_MP\n\n#-------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# set additional flags for the release build\n",
        "Line" : 285,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# adding only -ffast-math will result in infinity and nan not being checked (but e.g. graph matching and discrete tomography have infinite costs)\n\n#add_definitions(-ffast-math -fno-finite-math-only)\n",
        "Line" : 287,
        "CharPositionInLine" : 8
      },
      "27" : {
        "Text" : "# include LP_MP dependencies\n",
        "Line" : 294,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "## TODO this seems to be a pretty old version, would the newer version help?!\n\n## FIXME we actually don't need to link this for building the LP_MP multicut\n\n#include(ExternalProject)\n\n#ExternalProject_ADD(\n\n#   lingeling\n\n#   #SOURCE_DIR \"${CMAKE_CURRENT_SOURCE_DIR}/external/lingeling-ala\"\n\n#   URL \"http://fmv.jku.at/lingeling/lingeling-bal-2293bef-151109.tar.gz\"\n\n#   BUILD_IN_SOURCE 1\n\n#   #BINARY_DIR \"${CMAKE_CURRENT_BINARY_DIR}/lingeling-ala\"\n\n#   CONFIGURE_COMMAND \"./configure.sh\"\n\n#   BUILD_COMMAND \"make\"\n\n#   INSTALL_COMMAND \"\"\n\n#   )\n\n#include_directories(\"${CMAKE_CURRENT_BINARY_DIR}/lingeling-prefix/src/lingeling\")\n\n##link_directories(\"${CMAKE_CURRENT_BINARY_DIR}/lingeling-prefix/src/lingeling\")\n",
        "Line" : 304,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "#-------------------------------------------------------------------------------------------------------------------\n\n# enable_testing\n\n#-------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 329,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#-------------------------------------------------------------------------------------------------------------------\n\n# global headers\n\n#-------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 334,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#-------------------------------------------------------------------------------------------------------------------\n\n# src folder\n\n#-------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 341,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#-------------------------------------------------------------------------------------------------------------------\n\n# docsrc folder\n\n#-------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 347,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#-------------------------------------------------------------------------------------------------------------------\n\n#  install headers\n\n#-------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 353,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#------------------------------------------------------------------------------------------------------------------\n\n# install\n\n#-------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 365,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 35
    },
    "cmake/modules/FindBLOSC.cmake" : {
      "ObjectId" : "9c4daa3dae3e7f40395b2912818314e9c6efe955",
      "LastModified" : "2018-11-17T22:37:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# copied from:\n\n# https://github.com/Intel-HLS/TileDB/blob/master/cmake/Modules/FindBLOSC.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# FindBLOSC.cmake\n\n#\n\n#\n\n# The MIT License\n\n#\n\n# Copyright (c) 2016 MIT and Intel Corporation\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in\n\n# all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\n# THE SOFTWARE.\n\n#\n\n# Finds the Blosc library. This module defines:\n\n#   - BLOSC_INCLUDE_DIR, directory containing headers\n\n#   - BLOSC_LIBRARIES, the Blosc library path\n\n#   - BLOSC_FOUND, whether Blosc has been found\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find header files  \n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find library\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#include(FindPackageHandleStandardArgs)\n\n#find_package_handle_standard_args(BLOSC DEFAULT_MSG)\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/modules/FindBOOST_COMPUTE.cmake" : {
      "ObjectId" : "ff70e9871520c5e5ececda0a258f22a762674e1c",
      "LastModified" : "2018-11-17T22:37:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/modules/FindCPLEX.cmake" : {
      "ObjectId" : "7aeeee8705f413f1abc4bd9db2d8e1df299084b7",
      "LastModified" : "2018-11-17T22:37:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This module finds cplex.\n\n#\n\n# User can give CPLEX_ROOT_DIR as a hint stored in the cmake cache.\n\n#\n\n# It sets the following variables:\n\n#  CPLEX_FOUND              - Set to false, or undefined, if cplex isn't found.\n\n#  CPLEX_INCLUDE_DIRS       - include directory\n\n#  CPLEX_LIBRARIES          - library files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# now, generate platform string\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#windows\n",
        "Line" : 106,
        "CharPositionInLine" : 58
      },
      "3" : {
        "Text" : "#unix\n",
        "Line" : 107,
        "CharPositionInLine" : 68
      },
      "4" : {
        "Text" : "#unix\n",
        "Line" : 108,
        "CharPositionInLine" : 65
      },
      "5" : {
        "Text" : "#osx\n",
        "Line" : 109,
        "CharPositionInLine" : 58
      },
      "6" : {
        "Text" : "#osx\n",
        "Line" : 110,
        "CharPositionInLine" : 61
      },
      "7" : {
        "Text" : "#unix\n",
        "Line" : 111,
        "CharPositionInLine" : 25
      },
      "8" : {
        "Text" : "#unix\n",
        "Line" : 112,
        "CharPositionInLine" : 28
      },
      "9" : {
        "Text" : "#windows\n",
        "Line" : 118,
        "CharPositionInLine" : 58
      },
      "10" : {
        "Text" : "#unix\n",
        "Line" : 119,
        "CharPositionInLine" : 68
      },
      "11" : {
        "Text" : "#unix\n",
        "Line" : 120,
        "CharPositionInLine" : 65
      },
      "12" : {
        "Text" : "#osx\n",
        "Line" : 121,
        "CharPositionInLine" : 58
      },
      "13" : {
        "Text" : "#osx\n",
        "Line" : 122,
        "CharPositionInLine" : 61
      },
      "14" : {
        "Text" : "#windows\n",
        "Line" : 130,
        "CharPositionInLine" : 60
      },
      "15" : {
        "Text" : "#unix\n",
        "Line" : 131,
        "CharPositionInLine" : 70
      },
      "16" : {
        "Text" : "#unix\n",
        "Line" : 132,
        "CharPositionInLine" : 67
      },
      "17" : {
        "Text" : "#osx\n",
        "Line" : 133,
        "CharPositionInLine" : 60
      },
      "18" : {
        "Text" : "#osx\n",
        "Line" : 134,
        "CharPositionInLine" : 63
      },
      "19" : {
        "Text" : "#unix\n",
        "Line" : 145,
        "CharPositionInLine" : 62
      },
      "20" : {
        "Text" : "#unix\n",
        "Line" : 146,
        "CharPositionInLine" : 65
      },
      "21" : {
        "Text" : "#osx\n",
        "Line" : 147,
        "CharPositionInLine" : 55
      },
      "22" : {
        "Text" : "#osx\n",
        "Line" : 148,
        "CharPositionInLine" : 54
      },
      "CommentCount" : 23
    },
    "cmake/modules/FindFASTFILTERS.cmake" : {
      "ObjectId" : "5a5a678a9c7495e2a1658111b0f2f164a3c575e4",
      "LastModified" : "2018-11-17T22:37:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/modules/FindGLPK.cmake" : {
      "ObjectId" : "4e576af4ed19594ba7987b9bb788751988d72372",
      "LastModified" : "2018-11-17T22:37:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/modules/FindGUROBI.cmake" : {
      "ObjectId" : "c56abfe57edf7d119a9314df31dca2e266743a8f",
      "LastModified" : "2018-11-17T22:37:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/modules/FindHDF5.cmake" : {
      "ObjectId" : "3ce6d90e536b8abdf3069945a9f8e07d48f03d8c",
      "LastModified" : "2018-11-17T22:37:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find HDF5, a library for reading and writing self describing array data.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Only configure HDF5 if a suitable version of the library was found\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# FIXME: as of version 1.8.9 and 1.8.10-patch1 (but NOT 1.8.10), these flags are\n\n#        already set correctly => remove or set conditionally according to version\n",
        "Line" : 38,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set HDF5_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# undo unsuccessful configuration\n",
        "Line" : 85,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "cmake/modules/FindNUMPY.cmake" : {
      "ObjectId" : "a5f9d6cb77916c2f4d107a3d734b76fd97811eab",
      "LastModified" : "2018-11-17T22:37:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the Python NumPy package\n\n# PYTHON_NUMPY_INCLUDE_DIR\n\n# NUMPY_FOUND\n\n# will be set by this script\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# write a python script that finds the numpy path\n",
        "Line" : 19,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# execute the find script\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#message(STATUS \"the numpy path is: ${NUMPY_PATH}\")\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#include(FindPackageHandleStandardArgs)\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/modules/FindPYBIND_ELEVEN.cmake" : {
      "ObjectId" : "c1ba38149e02d987b5ced26adb7203538bbb3c75",
      "LastModified" : "2018-11-17T22:37:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/modules/FindSPHINX.cmake" : {
      "ObjectId" : "5053a4bef9c209fafd4fea266354af38bdade033",
      "LastModified" : "2018-11-17T22:37:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/modules/FindVIGRA.cmake" : {
      "ObjectId" : "7176ea6ea45ad41d048c7365d2b3cbd5ca505bd0",
      "LastModified" : "2018-11-17T22:37:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This module finds an installed Vigra package.\n\n#\n\n# It sets the following variables:\n\n#  VIGRA_FOUND              - Set to false, or undefined, if vigra isn't found.\n\n#  VIGRA_INCLUDE_DIR        - Vigra include directory.\n\n#  VIGRA_IMPEX_LIBRARY      - Vigra's impex library\n\n#  VIGRA_IMPEX_LIBRARY_DIR  - path to Vigra impex library\n\n#  VIGRA_NUMPY_CORE_LIBRARY - Vigra's vigranumpycore library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# configVersion.hxx only present, after build of Vigra\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Windows, buildem system\n",
        "Line" : 21,
        "CharPositionInLine" : 62
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set VIGRA_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/modules/PythonLibTest.cmake" : {
      "ObjectId" : "7eaa72e4ea82662850c293ba0bfe77402c166ede",
      "LastModified" : "2018-11-17T22:37:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#message(PYTHON_VERSION_MAJOR ${PYTHON_VERSION_MAJOR})\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#message(STATUS \"222222\")\n",
        "Line" : 4,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#\"nosetests${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR}\"\n\n#\"nosetests-${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR}\"\n\n#\"nosetests${PYTHON_VERSION_MAJOR}\"\n\n#\"nosetests-${PYTHON_VERSION_MAJOR}\"\n",
        "Line" : 6,
        "CharPositionInLine" : 12
      },
      "3" : {
        "Text" : "#\"nosetests${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR}\"\n\n#\"nosetests-${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR}\"\n\n#\"nosetests${PYTHON_VERSION_MAJOR}\"\n\n#\"nosetests-${PYTHON_VERSION_MAJOR}\"\n",
        "Line" : 13,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Try again to find nosetests here. We may have switched virtualenvs or\n\n# something since first running cmake.\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Copy Python files to the local binary directory so they can find the\n\n# dynamic library.\n",
        "Line" : 75,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# We add a separate target for copying Python files. This way we can set\n\n# it as a dependency for the nosetests target.\n",
        "Line" : 79,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Make sure the directory exists before we copy the files.\n",
        "Line" : 83,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Add commands to copy each file in the list of sources.\n",
        "Line" : 87,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#get_target_property(TARGET_LIB_NAME ${TARGET_LIB} LOCATION)\n\n#$<TARGET_FILE:${TARGET_LIB}>\n",
        "Line" : 94,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Make the copy target a dependency of the testing target to ensure it\n\n# gets done first.\n",
        "Line" : 99,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 11
    },
    "docsrc/CMakeLists.txt" : {
      "ObjectId" : "7dd4b6bb1d01738ed9e5836186c98b7be874c80d",
      "LastModified" : "2018-11-17T22:37:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------------------------------------------\n\n# Documentation\n\n#-------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "docsrc/cpp/CMakeLists.txt" : {
      "ObjectId" : "b204980fff7a9a00d82769dccf3855e6ad8adc48",
      "LastModified" : "2018-11-17T22:37:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------------------------------------------\n\n# Doxygen Documentation\n\n#-------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ordinary build\n",
        "Line" : 11,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# create output folder\n",
        "Line" : 16,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# xml build for breathe\n",
        "Line" : 29,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 4
    },
    "docsrc/python/CMakeLists.txt" : {
      "ObjectId" : "cb2d1a01157f124da87c31c9a585743229b06d80",
      "LastModified" : "2018-11-17T22:37:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# configured documentation tools and intermediate build results\n",
        "Line" : 11,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "# Sphinx cache with pickled ReST documents\n",
        "Line" : 16,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# HTML output directory\n",
        "Line" : 18,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "#install(DIRECTORY ${SPHINX_HTML_DIR}\n\n#    DESTINATION share/doc/nifty_python\n\n#)\n",
        "Line" : 51,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# if there is a cpp doc \n",
        "Line" : 55,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 5
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "304df5801af4ae12ac163ec82be637359e292eef",
      "LastModified" : "2018-11-17T22:37:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------------------------------------------\n\n# src folder\n\n#-------------------------------------------------------------------------------------------------------------------\n\n#add_subdirectory(sandbox)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#add_subdirectory(sandbox)\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/examples/CMakeLists.txt" : {
      "ObjectId" : "147064fdcc1fa24b8c681ffce49db151336a3141",
      "LastModified" : "2018-11-17T22:37:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------------------------------------------\n\n# examples\n\n#-------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/examples/graph/CMakeLists.txt" : {
      "ObjectId" : "67ba87e9ae5bf84fa45584a3d1c46d2efbd6652d",
      "LastModified" : "2018-11-17T22:37:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/examples/graph/multicut/CMakeLists.txt" : {
      "ObjectId" : "bd8d7fde135ef71c33d8dc77b420c4174c767579",
      "LastModified" : "2018-11-17T22:37:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/external_libs/CMakeLists.txt" : {
      "ObjectId" : "6cb8c8214961653618aed0d473875b15fc02ea4c",
      "LastModified" : "2018-11-17T22:37:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if(WITH_LP_MP)\n\n#    add_subdirectory(lp_mp)\n\n#    # For now we don't need to link against lingeling\n\n#    #add_subdirectory(lingeling)\n\n#endif(WITH_LP_MP)\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/external_libs/lingeling/CMakeLists.txt" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2018-11-17T22:37:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/external_libs/lp_mp/CMakeLists.txt" : {
      "ObjectId" : "cf35475e5b35b5e97b9896ca4465b0e1227ff43b",
      "LastModified" : "2018-11-17T22:37:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/external_libs/lp_mp/SVM-NEW/CMakeLists.txt" : {
      "ObjectId" : "4f676421250f19470c9637ef3e102f27c9ea55f2",
      "LastModified" : "2018-11-17T22:37:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/external_libs/qpbo/CMakeLists.txt" : {
      "ObjectId" : "d16fb014fa8fd0b3506278914268592ec9e3b8ae",
      "LastModified" : "2018-11-17T22:37:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/python/CMakeLists.txt" : {
      "ObjectId" : "b3774bbaaefa2fa7afa412a8abfc343568e652db",
      "LastModified" : "2019-02-17T13:19:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#################################\n\n# INSTALL THE PYTHON MODULE\n\n#################################\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# this is the install path relative to CMAKE_INSTALL_PREFIX,\n\n# use this in INSTALL() commands to get packaging right\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/python/lib/CMakeLists.txt" : {
      "ObjectId" : "80a14d716d384bc914adc04daa444c874f17106a",
      "LastModified" : "2019-02-18T15:39:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################################\n\n# create a custom target which bundles all python building and copying\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###########################################################################\n\n# copy all python files from:\n\n#    src/python/module\n\n# recursively into\n\n#   /blddir/python/\n\n###########################################################################\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###########################################################################\n\n# macro to simplyfy the adding of a submodule\n\n###########################################################################\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#message(STATUS \"BRAAA\"  ${ADD_PY_MOD_NESTED_NAME})\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# get name of the module\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#Create the binding library\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#if (APPLE AND NOT ${CMAKE_BUILD_TYPE} MATCHES Debug)\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#endif()\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#message(STATUS ********Module: ${MODULE_NAME})\n\n#message(STATUS ********Libs: ${ADD_PY_MOD_LIBRRARIES})\n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# NOTE it's not necessary to link against the python library here\n\n# and if we do, this causes seg-faults on mac, so don't do it!\n\n# link additional libraries\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# ${PYTHON_LIBRARIES}\n",
        "Line" : 71,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# create module dir\n",
        "Line" : 75,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# copy the module file\n",
        "Line" : 78,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# submodules\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "src/python/lib/carving/CMakeLists.txt" : {
      "ObjectId" : "f675e8075be536cf438264097a2e8f0a5d54c182",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/python/lib/cgp/CMakeLists.txt" : {
      "ObjectId" : "7dd93cabf2b46533c6cfd3bc287a8e7338c713c1",
      "LastModified" : "2018-11-17T22:37:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/python/lib/distributed/CMakeLists.txt" : {
      "ObjectId" : "0881dd11eba4de8bbb9a4a8b27733d9c4b44d66f",
      "LastModified" : "2019-02-17T13:19:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ${FASTFILTERS_LIBRARY}\n",
        "Line" : 14,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 1
    },
    "src/python/lib/filters/CMakeLists.txt" : {
      "ObjectId" : "322dd83d5353b8abaa6bd2ec886133228a1de6a2",
      "LastModified" : "2019-02-17T13:19:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/python/lib/graph/CMakeLists.txt" : {
      "ObjectId" : "1513c8797cbfd6a19a75793e1f350093a1d38818",
      "LastModified" : "2019-02-17T13:19:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# submodules\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/python/lib/graph/agglo/CMakeLists.txt" : {
      "ObjectId" : "29a3c422722af5ba10a824b208ee27f1e3780f61",
      "LastModified" : "2018-11-17T22:37:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# generalized_long_range_cluster_policy.cxx\n",
        "Line" : 11,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 1
    },
    "src/python/lib/graph/long_range_adjacency/CMakeLists.txt" : {
      "ObjectId" : "05b7ece5adf39954b677b50bf52df1703d5921ec",
      "LastModified" : "2019-02-17T13:19:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/python/lib/graph/opt/CMakeLists.txt" : {
      "ObjectId" : "cef928282fcb2b6bf7667498f7e7ca0c4c09f8d3",
      "LastModified" : "2018-11-17T22:37:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# SET(MOD_LIBS \"\")\n\n# SET(MOD_SOURCES\n\n#     opt.cxx\n\n# )\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# if(WITH_QPBO)\n\n#     SET(MOD_LIBS ${MOD_LIBS})\n\n# endif(WITH_QPBO)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#LIBRRARIES\n\n#    ${MOD_LIBS}\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "src/python/lib/graph/opt/lifted_multicut/CMakeLists.txt" : {
      "ObjectId" : "dd217d7fadef06ec8f151aed42f889446f451072",
      "LastModified" : "2019-02-17T13:19:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# pixel_wise_lifted_multicut.cxx\n",
        "Line" : 14,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 1
    },
    "src/python/lib/graph/opt/mincut/CMakeLists.txt" : {
      "ObjectId" : "7b496b7130596eb5e9dae4bbc97dd7f078ae3998",
      "LastModified" : "2018-11-17T22:37:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# solvers\n",
        "Line" : 10,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "src/python/lib/graph/opt/minstcut/CMakeLists.txt" : {
      "ObjectId" : "16a18e3cc6de65c3f392003b1232471e29d408a8",
      "LastModified" : "2019-02-17T13:19:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# solvers\n\n#mincut_cc_fusion_move_based.cxx\n\n#minstcut_maxflow.cxx\n",
        "Line" : 10,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "src/python/lib/graph/opt/multicut/CMakeLists.txt" : {
      "ObjectId" : "1cc19b86cbf080a76dca53d27d15862fcab18de9",
      "LastModified" : "2019-02-17T13:19:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# if(WITH_LP_MP)\n\n#     SET(MOD_LIBS    ${MOD_LIBS} ${HDF5_LIBRARIES} )#llgl)\n\n#     SET(MOD_SOURCES ${MOD_SOURCES} multicut_mp.cxx)\n\n# endif(WITH_LP_MP)\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/python/lib/graph/rag/CMakeLists.txt" : {
      "ObjectId" : "f3ac90c53ad8ff62c154a988450f1abbe0a61572",
      "LastModified" : "2019-02-17T13:19:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/python/lib/ground_truth/CMakeLists.txt" : {
      "ObjectId" : "5a38af3bda87501a756e30725858cd8b8b3924aa",
      "LastModified" : "2018-11-17T22:37:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/python/lib/hdf5/CMakeLists.txt" : {
      "ObjectId" : "a9436ed7240d2f9ac82863867de578e0ea0b2f76",
      "LastModified" : "2018-11-17T22:37:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# NOTE: this is probably a hack, but without this the windows build\n\n# does not work. Longer term, the right solution is probably to use\n\n# the hdf5 exported targets provided by the installed CMake files.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#hdf5_watershed.cxx\n",
        "Line" : 13,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "src/python/lib/skeletons/CMakeLists.txt" : {
      "ObjectId" : "524fe3d2e0d663ea7fa162ed0c0e344dac5ca3a2",
      "LastModified" : "2019-02-17T13:19:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/python/lib/tools/CMakeLists.txt" : {
      "ObjectId" : "92359f0cec3149983180021a5e1c14e22332b6ca",
      "LastModified" : "2018-11-17T22:37:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/python/lib/ufd/CMakeLists.txt" : {
      "ObjectId" : "b1ad7e72ecf98d6ecf2082030781352fd3c2d323",
      "LastModified" : "2018-11-17T22:37:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/python/lib/z5/CMakeLists.txt" : {
      "ObjectId" : "90cf799b08890b8101c492c99bd9caa95df96a29",
      "LastModified" : "2019-02-17T13:19:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/python/test/CMakeLists.txt" : {
      "ObjectId" : "b6e27aa366eef707da48b6405b6f1e818cd6f100",
      "LastModified" : "2018-11-17T22:37:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#message(STATUS \"222222\")\n",
        "Line" : 4,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "#\"nosetests${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR}\"\n\n#\"nosetests-${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR}\"\n\n#\"nosetests${PYTHON_VERSION_MAJOR}\"\n\n#\"nosetests-${PYTHON_VERSION_MAJOR}\"\n",
        "Line" : 6,
        "CharPositionInLine" : 16
      },
      "2" : {
        "Text" : "#\"nosetests${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR}\"\n\n#\"nosetests-${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR}\"\n\n#\"nosetests${PYTHON_VERSION_MAJOR}\"\n\n#\"nosetests-${PYTHON_VERSION_MAJOR}\"\n",
        "Line" : 13,
        "CharPositionInLine" : 12
      },
      "3" : {
        "Text" : "#graph/minstcut/test_minstcut_maxflow.py\n",
        "Line" : 44,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 4
    },
    "src/test/CMakeLists.txt" : {
      "ObjectId" : "10083b3ca72da018c75df33728d8f3679c6a4b07",
      "LastModified" : "2019-02-17T13:19:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------------------------------------------\n\n# unittest\n\n#-------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/test/test_array/CMakeLists.txt" : {
      "ObjectId" : "ce73d618748b3bb6cc15c50ba9b2d58d2dabf902",
      "LastModified" : "2018-11-17T22:37:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/test/test_features/CMakeLists.txt" : {
      "ObjectId" : "5858ba0f1dda1460605d85e71ed89e382056ea3b",
      "LastModified" : "2018-11-17T22:37:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/test/test_graph/CMakeLists.txt" : {
      "ObjectId" : "23094def9cfd290b42f6eaf95069660b2cad388f",
      "LastModified" : "2018-11-17T22:37:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/test/test_graph/test_rag/CMakeLists.txt" : {
      "ObjectId" : "5fff6fc492b3f59b428e7c9ea03279c79819301e",
      "LastModified" : "2018-11-17T22:37:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/test/test_histogram/CMakeLists.txt" : {
      "ObjectId" : "0cb7f364f326544f8f541305b8b7c43ae84b06ed",
      "LastModified" : "2018-11-17T22:37:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 53
  },
  "ElapsedTime" : 1633
}