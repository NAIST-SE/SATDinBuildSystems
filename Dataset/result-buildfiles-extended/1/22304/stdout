{
  "Repository" : "22304",
  "Revision" : "HEAD",
  "ObjectId" : "96d27ac96b8daaafb953042c806ae23117dd6dfc",
  "CommitTime" : "2019-04-10T15:56:38Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "13208a97b893a1f15a64b9696d53d536b1033b2d",
      "LastModified" : "2019-01-29T14:50:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## (c) 2010-2012 Shadow, Rob Jansen jansen@cs.umn.edu\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## set build parameters\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## ensure cmake version\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## ensure unix environment (CMAKE_SYSTEM_NAME == \"Linux\")\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## ensure out-of-source build\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## additional user-defined include directories\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## additional user-defined library directories\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## get general includes\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## general tests and configurations\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)\n\n#set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## construct info/version strings\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## current git commit version and hash\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "## current git commit short date\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "## current build date\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## setup shadow options\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "## display selected user options\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## now handle the options, set up our own flags\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "## see src/main/CMakeLists.txt, where we add the -pg flags\n",
        "Line" : 120,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "## the actual work happens in the CMakeLists files in each plug-in directory\n",
        "Line" : 124,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "## generate config header and make sure its on the include path\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## recurse our project tree\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "## http://www.cmake.org/Wiki/CMake_Testing_With_CTest\n",
        "Line" : 143,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "## install our 'exported' libs so they can be imported by others\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "cmake/FindDL.cmake" : {
      "ObjectId" : "0bd03bede7a328a591a3ead13f00345a31a1691c",
      "LastModified" : "2014-07-06T22:35:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check for the presence of DL\n\n#\n\n# The following variables are set when DL is found:\n\n#  HAVE_DL       = Set to true, if all components of DL\n\n#                          have been found.\n\n#  DL_INCLUDES   = Include path for the header files of DL\n\n#  DL_LIBRARIES  = Link these to use DL\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## -----------------------------------------------------------------------------\n\n## Check for the header files\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## -----------------------------------------------------------------------------\n\n## Check for the library\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## -----------------------------------------------------------------------------\n\n## Actions taken when all components have been found\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/FindGLIB.cmake" : {
      "ObjectId" : "63ce73202f64dad477c580e15b4a8e5e734382d3",
      "LastModified" : "2017-04-14T19:41:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check for the presence of GLIB\n\n#\n\n# The following variables are set when GLIB is found:\n\n#  HAVE_GLIB       = Set to true, if all components of GLIB\n\n#                          have been found.\n\n#  GLIB_INCLUDES   = Include path for the header files of GLIB\n\n#  GLIB_LIBRARIES  = Link these to use GLIB\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## -----------------------------------------------------------------------------\n\n## Check for the header files\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## glibconfig is actually under the lib/ directory, so also use LIB directories\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## we need both include directories\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## -----------------------------------------------------------------------------\n\n## Check for the library\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## -----------------------------------------------------------------------------\n\n## Actions taken when all components have been found\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/FindIGRAPH.cmake" : {
      "ObjectId" : "cfeca639fe5ad851eb44c633d646c914375469d3",
      "LastModified" : "2015-08-05T22:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check for the presence of IGRAPH\n\n#\n\n# The following variables are set when IGRAPH is found:\n\n#  HAVE_IGRAPH       = Set to true, if all components of IGRAPH\n\n#                          have been found.\n\n#  IGRAPH_INCLUDES   = Include path for the header files of IGRAPH\n\n#  IGRAPH_LIBRARIES  = Link these to use IGRAPH\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## -----------------------------------------------------------------------------\n\n## Check for the header files\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## -----------------------------------------------------------------------------\n\n## Check for the library\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## -----------------------------------------------------------------------------\n\n## Actions taken when all components have been found\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/FindM.cmake" : {
      "ObjectId" : "baf0d184e70162b8e767c51f28252407ad360eef",
      "LastModified" : "2014-07-06T22:35:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check for the presence of M\n\n#\n\n# The following variables are set when M is found:\n\n#  HAVE_M       = Set to true, if all components of M\n\n#                          have been found.\n\n#  M_INCLUDES   = Include path for the header files of M\n\n#  M_LIBRARIES  = Link these to use M\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## -----------------------------------------------------------------------------\n\n## Check for the header files\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## -----------------------------------------------------------------------------\n\n## Check for the library\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## -----------------------------------------------------------------------------\n\n## Actions taken when all components have been found\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/FindRPTH.cmake" : {
      "ObjectId" : "4468b6658d6c914b9449cf23a90e1a92767f1ab7",
      "LastModified" : "2015-08-05T22:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check for the presence of RPTH\n\n#\n\n# The following variables are set when RPTH is found:\n\n#  HAVE_RPTH       = Set to true, if all components of RPTH\n\n#                          have been found.\n\n#  RPTH_INCLUDES   = Include path for the header files of RPTH\n\n#  RPTH_LIBRARIES  = Link these to use RPTH\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## -----------------------------------------------------------------------------\n\n## Check for the header files\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## -----------------------------------------------------------------------------\n\n## Check for the library\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## -----------------------------------------------------------------------------\n\n## Actions taken when all components have been found\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/FindRT.cmake" : {
      "ObjectId" : "59609509cea5f8ed97d1a987cea099a2b01c13a4",
      "LastModified" : "2015-08-05T22:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check for the presence of RT\n\n#\n\n# The following variables are set when RT is found:\n\n#  HAVE_RT       = Set to true, if all components of RT\n\n#                          have been found.\n\n#  RT_INCLUDES   = Include path for the header files of RT\n\n#  RT_LIBRARIES  = Link these to use RT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## -----------------------------------------------------------------------------\n\n## Check for the header files\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## -----------------------------------------------------------------------------\n\n## Check for the library\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## -----------------------------------------------------------------------------\n\n## Actions taken when all components have been found\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/ShadowTools.cmake" : {
      "ObjectId" : "20f06a2a70dba976164becfbede4e89453ebb111",
      "LastModified" : "2017-09-06T21:44:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "######################################################################################################\n\n## ADD_SHADOW_PLUGIN                                                                                ##\n\n######################################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## the \"ususal\" way to build plug-ins, i.e., as shared libraries\n\n## the main benefit of a shared library is that the internal symbols can be interposed with LD_PRELOAD\n\n## so, this should be used for plugins that want to interpose their internal symbols\n\n## (also, the .so extension may make it more obvious this is meant to be loaded by shadow)\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "######################################################################################################\n\n## ADD_SHADOW_EXE                                                                                   ##\n\n######################################################################################################\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## an alternative to the shared library is to build a position-independent executable as follows\n\n## the main benefit is that the executable produced can be run outside of shadow as usual\n\n## this can still be loaded by shadow, but the internal symbols will not be interposed by LD_PRELOAD\n\n## so, this should be used for plugins that dont need or want their internal symbols interposed\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "######################################################################################################\n\n## ADD_CFLAGS                                                                                       ##\n\n######################################################################################################\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "######################################################################################################\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cpack/CMakeLists.txt" : {
      "ObjectId" : "f1993f9867c4d91be0f2a320e35c790af392337e",
      "LastModified" : "2017-09-06T21:44:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## CPack generic config (package specific config found in CPackConfig.cmake)\n\n## http://www.cmake.org/Wiki/CMake:CPackConfiguration\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(CPACK_INSTALL_CMAKE_PROJECTS \"\")\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#set(CPACK_PACKAGE_EXECUTABLES \"\")\n\n#set(CPACK_PACKAGE_FILE_NAME \"\")\n\n#set(CPACK_PACKAGE_INSTALL_DIRECTORY \"/usr/local\")\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#set(CPACK_PACKAGE_INSTALL_REGISTRY_KEY \"\")\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#set(CPACK_SOURCE_IGNORE_FILES \"\")\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#(CPACK_SOURCE_STRIP_FILES \"\")\n\n#set(CPACK_STRIP_FILES \"\")\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cpack/CPackConfig.cmake" : {
      "ObjectId" : "2a365a0f32357178963abdcb62cdd2805df4463a",
      "LastModified" : "2017-09-06T21:44:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## CPack generator-specific CPack configuration\n\n## http://www.cmake.org/Wiki/CMake:CPackPackageGenerators\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## rpm package release (NOT the source release)\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "resource/CMakeLists.txt" : {
      "ObjectId" : "6060b61e36bdc3fe5d92cdad68e7f6b4bfc7cdbe",
      "LastModified" : "2017-09-06T21:44:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## resources useful for simulations\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "3a641f712e73166e1a56988f1451a7aca8a523a8",
      "LastModified" : "2019-04-03T15:35:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## build the core simulator\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## build the library that will intercept system calls using LD_PRELOAD\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## build rpth and elf-loader\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/external/CMakeLists.txt" : {
      "ObjectId" : "ab3fd5f8c02da81feb8f3d5306f1add9f57f5c5f",
      "LastModified" : "2019-04-03T15:35:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## we will use cmake's external module feature to build our external projects\n\n## http://www.kitware.com/media/html/BuildingExternalProjectsWithCMake2.8.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##### rpth #####\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#    CFLAGS=-Qunused-arguments\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# trying to make sure the external project gets rebuilt when a rpth src file changes.\n\n# i dont think this works yet...\n\n## see here for how to fix it\n\n# https://gist.github.com/socantre/7ee63133a0a3a08f3990\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#ADD_LIBRARY(rpth-imp STATIC IMPORTED)\n\n#SET_TARGET_PROPERTIES(rpth PROPERTIES\n\n#    IMPORTED_LOCATION \"${CMAKE_CURRENT_BINARY_DIR}/rpth/rpth${CMAKE_STATIC_LIBRARY_SUFFIX}\"\n\n#    IMPORTED_IMPLIB \"${CMAKE_CURRENT_BINARY_DIR}/rpth/librpth.la\"\n\n#)\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "##### elf-loader #####\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/external/elf-loader/CMakeLists.txt" : {
      "ObjectId" : "042e9fa727da9537236902642d6e0ba5e4e35223",
      "LastModified" : "2019-04-03T15:35:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# https://gcc.gnu.org/bugzilla/show_bug.cgi?id=56888\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#add_cflags(-Werror)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#    display-relocs.c\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#    elfedit.c\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#    libvdl.c\n\n#    readversiondef.c\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## build test if enabled\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/external/elf-loader/Makefile" : {
      "ObjectId" : "6ba2a86a88ce2ec57c2718e56660eed2d21609f4",
      "LastModified" : "2017-09-06T21:44:56Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#DEBUG=-DDPRINTF_DEBUG_ENABLE\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#OPT=-O2\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#CFLAGS+=-g3 -Wall -Werror $(DEBUG) $(OPT) $(VALGRIND_CFLAGS) -D_GNU_SOURCE -Wp,-MD,$(dir $@).$(notdir $@).d\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# for valgrind macros\n\n#alloc.o: CFLAGS+=-Wno-unused-but-set-variable\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# build rules.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# we have two generated files and need to build them.\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# build the program used to generate ldso.version\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "src/external/elf-loader/test/CMakeLists.txt" : {
      "ObjectId" : "beee9b29f693961d4f64b41fb02005dfb652ab0b",
      "LastModified" : "2019-04-03T15:35:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# forced circular dependency\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#add_executable(test26 test26.c)\n\n#target_link_libraries(test26 -lpthread -ldl)\n\n#add_test(NAME elfloader-test26 COMMAND /bin/bash ${CMAKE_CURRENT_SOURCE_DIR}/runtest.sh test26 ${CMAKE_CURRENT_SOURCE_DIR})\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/external/elf-loader/test/test12.cmake" : {
      "ObjectId" : "8f77d985a14d8db3f59a59cd1ef813f0f0039e13",
      "LastModified" : "2017-09-06T21:44:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/main/CMakeLists.txt" : {
      "ObjectId" : "c898a4e823ef8c344d392b5622e556ad97ab3d01",
      "LastModified" : "2019-04-03T15:35:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## check for dependencies with our own Find scripts in \"./cmake\"\n\n## these don't have built-in cmake files in /usr/share/cmake/Modules/Findxxx.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## pthreads\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## TODO if we have cmake > 3.1, can we do the following?\n\n#pkg_check_modules (GLIB2   glib-2.0>=2.32)\n\n#message(STATUS \"GLIB2_VERSION = ${GLIB2_VERSION}\")\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## make sure shadow.h is in the include path\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## make sure rpth.h is in the include and link path\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## make sure vdl.h is in the include and link path\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## compile defs and flags\n\n#add_definitions(-D_SVID_SOURCE -D_XOPEN_SOURCE=600 -D_ISOC11_SOURCE) #-D_GNU_SOURCE\n\n## set the igraph version guesses\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#add_cflags(-Wno-unknown-attributes)\n\n#add_cflags(-Wno-unused-command-line-argument)\n\n#add_cflags(-Wno-unknown-warning-option)\n\n#add_cflags(-Wno-visibility)\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## sources for our main shadow program\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## specify the main shadow executable, build, link, and install\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## 'shadow-interpose-helper' and 'vdl' are cmake targets, the rest are external libs for which '-l' is needed\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## shadow needs to find libshadow-interpose and custom libs after install\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "src/preload/CMakeLists.txt" : {
      "ObjectId" : "07ee5c25906d4d52dbe894f6251109f1a291ad02",
      "LastModified" : "2017-09-06T21:44:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## for now, interposer includes shadow.h, so it needs to know about glib and igraph\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#add_cflags(-Wno-invalid-noreturn)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## build the required library for intercepting system and library calls.\n\n## create the interpose library, to be set as LD_PRELOAD to intercept functions.\n\n## the functions we intercept MUST be in a shared library for dlsym searching.\n\n## we redirect them to our internal shadow versions, or to libc.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/test/CMakeLists.txt" : {
      "ObjectId" : "9047eedf3e3cc686b12ea0e917cef054394a4b12",
      "LastModified" : "2019-04-03T15:35:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## testing for the shadow simulator\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## these are common flags that are needed for shadow plugins\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## ensure that the Host LLVM plugin is built first\n\n#get_property(LLVMHoistGlobalsPATH TARGET LLVMHoistGlobals PROPERTY LOCATION)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## a helper program for tests needing multiple processes\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## add the test directories\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## FIXME - the LastTest.log.tmp file does not contain all output when we do\n\n## the grep above, so we get an inconsistent number of results in the output.\n\n## For now, we just check the first 20 results so that some checking is in place.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/test/bind/CMakeLists.txt" : {
      "ObjectId" : "ef74ad88c4007fee6eba329ace22cdfcbd34c241",
      "LastModified" : "2017-09-06T21:44:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## build the test as a dynamic executable that plugs into shadow\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## create and install an executable that can run outside of shadow\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## register the tests\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/test/cpp/CMakeLists.txt" : {
      "ObjectId" : "3192873647f935fd69433af3188366e26e3fc583",
      "LastModified" : "2019-04-03T15:35:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## if this test needs any libraries, find and include them here\n\n#find_package(RT REQUIRED)\n\n#find_package(DL REQUIRED)\n\n#find_package(M REQUIRED)\n\n#include_directories(${RT_INCLUDES} ${DL_INCLUDES} ${M_INCLUDES})\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## build the test as a dynamic executable that plugs into shadow\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## if the test needs any libraries, link them here\n\n#target_link_libraries(shadow-plugin-test-cpp ${M_LIBRARIES} ${DL_LIBRARIES} ${RT_LIBRARIES})\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## register the tests\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/test/determinism/CMakeLists.txt" : {
      "ObjectId" : "faec7f87df5a1c8a879900011da2add1688b9b15",
      "LastModified" : "2019-04-03T15:35:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## TEST 1 (Basic tests)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## build the test as a dynamic executable that plugs into shadow\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## We need to run twice to make sure the 'random' output is the same both times\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## now compare the output\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## make sure the tests that produce output finish before we compare the output\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## TEST 2 (Extended packet tests)\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## TODO\n\n## We could also split the shadow.log file into a separate file for each host\n\n## and then grep each file for \"packet_add\", and do diffs on the output of that.\n\n## That way we could check the order of every packet event at every processing point.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## now let's run a phold test and compare the order of packet events\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## copy the file to the build test dir so that the relative path to it is correct\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## now compare the output\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## make sure the tests that produce output finish before we compare the output\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "src/test/determinism/determinism1_compare.cmake" : {
      "ObjectId" : "7c523fe0977137f840711f32eadbed522873b62e",
      "LastModified" : "2019-04-03T15:35:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/test/determinism/determinism2_compare.cmake" : {
      "ObjectId" : "439c6b517e14a5f87de7f1942af1fea4b458fbd5",
      "LastModified" : "2019-04-03T15:35:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/test/dynlink/CMakeLists.txt" : {
      "ObjectId" : "7cf5de6a740cdd331ea21de2a11d669f18c46386",
      "LastModified" : "2019-04-03T15:35:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## build the dynamically loaded plugin\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## build the helper library used by the plugin\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## link the helper library to the plugin\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## build test executable\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## link the test exe to required libraries\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## build .so test for running in shadow\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## register the test\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "##########################\n\n## To do this manually: ##\n\n##########################\n\n## Link the lib, plugin, and executable; then run the test\n\n# gcc -shared -Wl,-soname,libshadow-test-dynlink-lib.so -fPIC -ftls-model=global-dynamic -o libshadow-test-dynlink-lib.so shd-test-dynlink-lib.c\n\n# gcc -L`pwd` -shared -Wl,-rpath=`pwd`,-soname,libshadow-test-dynlink-plugin.so -fPIC -ftls-model=global-dynamic -o libshadow-test-dynlink-plugin.so shd-test-dynlink-plugin.c -lshadow-test-dynlink-lib\n\n# gcc -Wl,-rpath=`pwd` -fPIC -ftls-model=global-dynamic `pkg-config --cflags glib-2.0 gmodule-2.0` -o shd-test-dynlink shd-test-dynlink.c `pkg-config --libs glib-2.0 gmodule-2.0` -ldl -lpthread\n\n# ./shd-test-dynlink\n\n##\n\n## important links ##\n\n# https://sourceware.org/bugzilla/show_bug.cgi?id=11787\n\n# https://bugzilla.redhat.com/show_bug.cgi?id=1124987\n\n# http://stackoverflow.com/questions/19268293/matlab-error-cannot-open-with-static-tls\n\n# http://stackoverflow.com/questions/14892101/cannot-load-any-more-object-with-static-tls\n\n# https://github.com/lattera/glibc/blob/master/sysdeps/generic/ldsodefs.h#L490\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "src/test/epoll/CMakeLists.txt" : {
      "ObjectId" : "baeaa456d87d1921ef1788d72a2e067c89d5f229",
      "LastModified" : "2019-04-03T15:35:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## build the test as a dynamic executable that plugs into shadow\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## create and install an executable that can run outside of shadow\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## register the tests\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/test/file/CMakeLists.txt" : {
      "ObjectId" : "55ea08969fa5314a8570f6ac6de67eceefc15f7a",
      "LastModified" : "2019-04-03T15:35:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## build the test as a dynamic executable that plugs into shadow\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## create and install an executable that can run outside of shadow\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## register the tests\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/test/phold/CMakeLists.txt" : {
      "ObjectId" : "6014d78eb120c4e81bf9b293336475936627e469",
      "LastModified" : "2019-04-03T15:35:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## build the test as a dynamic executable that plugs into shadow\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## if the test needs any libraries, link them here\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## copy the file to the build test dir so that the relative path to it is correct\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## register the tests\n\n## dont run with debug logging because it causes the test case to take too long\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/test/poll/CMakeLists.txt" : {
      "ObjectId" : "80eae40dafc8c6dcaa88adbdc30507a4edc6ec40",
      "LastModified" : "2019-04-03T15:35:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## build the test as a dynamic executable that plugs into shadow\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## create and install an executable that can run outside of shadow\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## if the test needs any libraries, link them here\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## if the test needs any libraries, link them here\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## register the tests\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/test/preload/CMakeLists.txt" : {
      "ObjectId" : "65ba4215ba9a06ce616bdc2b2fbaed86522e5cf5",
      "LastModified" : "2019-04-03T15:35:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#################################\n\n## build the preload libraries ##\n\n#################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## this one has no constructor, preloads time() and does dlsym() lookup there\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## this one has a constructor in which it does a dlsym() lookup\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## this one meant for chaining preloads\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## define time and return a constant\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## different test cases in library form\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#######################################################################\n\n## basic preload test from an exe and symbol lookup from constructor ##\n\n#######################################################################\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## glibc loader\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## elf loader\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "###################################################################\n\n## preload test for chaining symbol lookups across multiple libs ##\n\n###################################################################\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## glibc loader\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## elf loader\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#####################################################\n\n## test preloading functions called from a library ##\n\n#####################################################\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## glibc loader\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## elf loader\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#######################################################################\n\n## test preloading functions called from a dynamically loaded plugin ##\n\n#######################################################################\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## glibc loader\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# note - in order for this to work correctly in glibc, you must link to the interpose library\n\n# this requirement is not ideal - the loaded plugin should not care about preloading\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## elf loader\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# note - in order for this to work in elf loader, you must link to the library that\n\n# is also linked in the dynamically loaded plugin\n\n# o/w, b/c of the search order, dlsym(\"time\") from interpose.so will find the symbol\n\n# in the libc dependency of the executable before the library dependency of the\n\n# dynamically loaded plugin\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## shadow\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "## shadow itself already dynamically loads the plugin, so just combine main() and run_test()\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "## register the shadow tests\n\n## test loading the preloads with the environment variables\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "## test loading the preload libs at runtime with elf-loader\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24
    },
    "src/test/pthreads/CMakeLists.txt" : {
      "ObjectId" : "4c400613cc7fc0cd0aab7ac9b6ffbac2b0bca54e",
      "LastModified" : "2019-04-03T15:35:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## build the test as a dynamic executable that plugs into shadow\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## create and install an executable that can run outside of shadow\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## if the test needs any libraries, link them here\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## register the tests\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/test/random/CMakeLists.txt" : {
      "ObjectId" : "7fac366837d14eebf7d824efd6e9e19baf6dd84c",
      "LastModified" : "2019-04-03T15:35:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## if this test needs any libraries, find and include them here\n\n#find_package(RT REQUIRED)\n\n#find_package(DL REQUIRED)\n\n#find_package(M REQUIRED)\n\n#include_directories(${RT_INCLUDES} ${DL_INCLUDES} ${M_INCLUDES})\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## build the test as a dynamic executable that plugs into shadow\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## if the test needs any libraries, link them here\n\n#target_link_libraries(shadow-plugin-test-random ${M_LIBRARIES} ${DL_LIBRARIES} ${RT_LIBRARIES})\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## register the tests\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/test/shutdown/CMakeLists.txt" : {
      "ObjectId" : "b5006ae23b7845f3c17a207a429c29a1f00df383",
      "LastModified" : "2019-04-03T15:35:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## build the test as a dynamic executable that plugs into shadow\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## create and install an executable that can run outside of shadow\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## register the tests\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/test/signal/CMakeLists.txt" : {
      "ObjectId" : "912f4fd490bf84c3e95f909e419ef6f0b6c73fc8",
      "LastModified" : "2019-04-03T15:35:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## if this test needs any libraries, find and include them here\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## build the test as a dynamic executable that plugs into shadow\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## create and install an executable that can run outside of shadow\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## if the test needs any libraries, link them here\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## register the tests\n\n## here we are testing 3 nodes to make sure they don't share signal handlers (in Shadow)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/test/sleep/CMakeLists.txt" : {
      "ObjectId" : "95d981d8268382f49f0b24185c9b5ee6e62e84df",
      "LastModified" : "2019-04-03T15:35:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## if this test needs any libraries, find and include them here\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## build the test as a dynamic executable that plugs into shadow\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## create and install an executable that can run outside of shadow\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## if the test needs any libraries, link them here\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## register the tests\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/test/sockbuf/CMakeLists.txt" : {
      "ObjectId" : "569f94f238652b36ebc3f85998162ea4ac386015",
      "LastModified" : "2019-04-03T15:35:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## build the test as a dynamic executable that plugs into shadow\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## create and install an executable that can run outside of shadow\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## register the tests\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/test/tcp/CMakeLists.txt" : {
      "ObjectId" : "32f93812572e12c5a171aec2ee90cc1c299402b0",
      "LastModified" : "2019-04-03T15:35:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## build the test as a dynamic executable that plugs into shadow\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## create and install an executable that can run outside of shadow\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## register the tests\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## tcp blocking - loopback, lossless and lossy\n\n## these also test \"localhost\" instead of \"127.0.0.1\" in the loopback tests\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## tcp nonblocking poll - loopback, lossless and lossy\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## tcp nonblocking epoll - loopback, lossless and lossy\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## tcp nonblocking select - loopback, lossless and lossy\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "src/test/timerfd/CMakeLists.txt" : {
      "ObjectId" : "d845f3d4b66b0fc84e57a0f158fd8663dff55b0b",
      "LastModified" : "2019-04-03T15:35:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## build the test as a dynamic executable that plugs into shadow\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## create and install an executable that can run outside of shadow\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## register the tests\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    }
  },
  "FileTypes" : {
    "CMAKE" : 38,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 4481
}