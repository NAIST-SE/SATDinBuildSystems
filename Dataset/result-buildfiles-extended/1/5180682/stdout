{
  "Repository" : "5180682",
  "Revision" : "HEAD",
  "ObjectId" : "d40fd0ec4add265ffc6fab314df7529d646dc818",
  "CommitTime" : "2015-08-16T00:10:40Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "fac2defa38d8ed066bf6cbdf55f5006b20d7605d",
      "LastModified" : "2013-12-23T14:11:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Including Boost\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Including SDL2\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Including SDL2_image\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Including SDL2_mixer\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Including OpenGL\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Including GLEW\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Including FFMPEG\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# FIXME improve swscale detection\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Includes checks\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Documentation generation\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# i18n support with gnu gettext\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Files with text to translate.\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "cmake-modules/CMakeParseArguments.cmake" : {
      "ObjectId" : "406780eb4b6c9fef76a485251c5f18a3ea020ff8",
      "LastModified" : "2013-09-09T17:25:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMAKE_PARSE_ARGUMENTS(<prefix> <options> <one_value_keywords> <multi_value_keywords> args...)\n\n#\n\n# CMAKE_PARSE_ARGUMENTS() is intended to be used in macros or functions for\n\n# parsing the arguments given to that macro or function.\n\n# It processes the arguments and defines a set of variables which hold the\n\n# values of the respective options.\n\n#\n\n# The <options> argument contains all options for the respective macro,\n\n# i.e. keywords which can be used when calling the macro without any value\n\n# following, like e.g. the OPTIONAL keyword of the install() command.\n\n#\n\n# The <one_value_keywords> argument contains all keywords for this macro\n\n# which are followed by one value, like e.g. DESTINATION keyword of the\n\n# install() command.\n\n#\n\n# The <multi_value_keywords> argument contains all keywords for this macro\n\n# which can be followed by more than one value, like e.g. the TARGETS or\n\n# FILES keywords of the install() command.\n\n#\n\n# When done, CMAKE_PARSE_ARGUMENTS() will have defined for each of the\n\n# keywords listed in <options>, <one_value_keywords> and\n\n# <multi_value_keywords> a variable composed of the given <prefix>\n\n# followed by \"_\" and the name of the respective keyword.\n\n# These variables will then hold the respective value from the argument list.\n\n# For the <options> keywords this will be TRUE or FALSE.\n\n#\n\n# All remaining arguments are collected in a variable\n\n# <prefix>_UNPARSED_ARGUMENTS, this can be checked afterwards to see whether\n\n# your macro was called with unrecognized parameters.\n\n#\n\n# As an example here a my_install() macro, which takes similar arguments as the\n\n# real install() command:\n\n#\n\n#   function(MY_INSTALL)\n\n#     set(options OPTIONAL FAST)\n\n#     set(oneValueArgs DESTINATION RENAME)\n\n#     set(multiValueArgs TARGETS CONFIGURATIONS)\n\n#     cmake_parse_arguments(MY_INSTALL \"${options}\" \"${oneValueArgs}\" \"${multiValueArgs}\" ${ARGN} )\n\n#     ...\n\n#\n\n# Assume my_install() has been called like this:\n\n#   my_install(TARGETS foo bar DESTINATION bin OPTIONAL blub)\n\n#\n\n# After the cmake_parse_arguments() call the macro will have set the following\n\n# variables:\n\n#   MY_INSTALL_OPTIONAL = TRUE\n\n#   MY_INSTALL_FAST = FALSE (this option was not used when calling my_install()\n\n#   MY_INSTALL_DESTINATION = \"bin\"\n\n#   MY_INSTALL_RENAME = \"\" (was not used)\n\n#   MY_INSTALL_TARGETS = \"foo;bar\"\n\n#   MY_INSTALL_CONFIGURATIONS = \"\" (was not used)\n\n#   MY_INSTALL_UNPARSED_ARGUMENTS = \"blub\" (no value expected after \"OPTIONAL\"\n\n#\n\n# You can the continue and process these variables.\n\n#\n\n# Keywords terminate lists of values, e.g. if directly after a one_value_keyword\n\n# another recognized keyword follows, this is interpreted as the beginning of\n\n# the new option.\n\n# E.g. my_install(TARGETS foo DESTINATION OPTIONAL) would result in\n\n# MY_INSTALL_DESTINATION set to \"OPTIONAL\", but MY_INSTALL_DESTINATION would\n\n# be empty and MY_INSTALL_OPTIONAL would be set to TRUE therefor.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2010 Alexander Neundorf <neundorf@kde.org>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# first set all result variables to empty/FALSE\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# now iterate over all arguments and fill the result variables\n",
        "Line" : 98,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# ... then this marks the end of the arguments belonging to this keyword\n",
        "Line" : 100,
        "CharPositionInLine" : 57
      },
      "5" : {
        "Text" : "# ... then this marks the end of the arguments belonging to this keyword\n",
        "Line" : 101,
        "CharPositionInLine" : 63
      },
      "6" : {
        "Text" : "# ... then this marks the end of the arguments belonging to this keyword\n",
        "Line" : 102,
        "CharPositionInLine" : 61
      },
      "7" : {
        "Text" : "# propagate the result variables to the caller:\n",
        "Line" : 132,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "cmake-modules/CheckFunctionExists.cmake" : {
      "ObjectId" : "7aa1748da627c6a5df360b4f265c5b94e5e68469",
      "LastModified" : "2013-09-09T17:25:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check if a C function can be linked\n\n# CHECK_FUNCTION_EXISTS(<function> <variable>)\n\n#\n\n# Check that the <function> is provided by libraries on the system and\n\n# store the result in a <variable>.  This does not verify that any\n\n# system header file declares the function, only that it can be found\n\n# at link time (considure using CheckSymbolExists).\n\n#\n\n# The following variables may be set before calling this macro to\n\n# modify the way the check is run:\n\n#\n\n#  CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n#  CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n#  CMAKE_REQUIRED_INCLUDES = list of include directories\n\n#  CMAKE_REQUIRED_LIBRARIES = list of libraries to link\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2002-2011 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake-modules/CheckLibraryExists.cmake" : {
      "ObjectId" : "fb7d0ec017a8f6fec59d9b243bf20df6b6fa41a2",
      "LastModified" : "2013-09-09T17:25:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check if the function exists.\n\n# CHECK_LIBRARY_EXISTS (LIBRARY FUNCTION LOCATION VARIABLE)\n\n#\n\n#  LIBRARY  - the name of the library you are looking for\n\n#  FUNCTION - the name of the function\n\n#  LOCATION - location where the library should be found\n\n#  VARIABLE - variable to store the result\n\n#\n\n# The following variables may be set before calling this macro to\n\n# modify the way the check is run:\n\n#\n\n#  CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n#  CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n#  CMAKE_REQUIRED_LIBRARIES = list of libraries to link\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2002-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake-modules/FindBoost.cmake" : {
      "ObjectId" : "0cf103450d8ab2ae88c5089417c07b391a97f546",
      "LastModified" : "2013-10-26T17:27:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find Boost include dirs and libraries\n\n# Use this module by invoking find_package with the form:\n\n#  find_package(Boost\n\n#    [version] [EXACT]      # Minimum or EXACT version e.g. 1.36.0\n\n#    [REQUIRED]             # Fail with error if Boost is not found\n\n#    [COMPONENTS <libs>...] # Boost libraries by their canonical name\n\n#    )                      # e.g. \"date_time\" for \"libboost_date_time\"\n\n# This module finds headers and requested component libraries OR a CMake\n\n# package configuration file provided by a \"Boost CMake\" build.  For the\n\n# latter case skip to the \"Boost CMake\" section below.  For the former\n\n# case results are reported in variables:\n\n#  Boost_FOUND            - True if headers and requested libraries were found\n\n#  Boost_INCLUDE_DIRS     - Boost include directories\n\n#  Boost_LIBRARY_DIRS     - Link directories for Boost libraries\n\n#  Boost_LIBRARIES        - Boost component libraries to be linked\n\n#  Boost_<C>_FOUND        - True if component <C> was found (<C> is upper-case)\n\n#  Boost_<C>_LIBRARY      - Libraries to link for component <C> (may include\n\n#                           target_link_libraries debug/optimized keywords)\n\n#  Boost_VERSION          - BOOST_VERSION value from boost/version.hpp\n\n#  Boost_LIB_VERSION      - Version string appended to library filenames\n\n#  Boost_MAJOR_VERSION    - Boost major version number (X in X.y.z)\n\n#  Boost_MINOR_VERSION    - Boost minor version number (Y in x.Y.z)\n\n#  Boost_SUBMINOR_VERSION - Boost subminor version number (Z in x.y.Z)\n\n#  Boost_LIB_DIAGNOSTIC_DEFINITIONS (Windows)\n\n#                         - Pass to add_definitions() to have diagnostic\n\n#                           information about Boost's automatic linking\n\n#                           displayed during compilation\n\n#\n\n# This module reads hints about search locations from variables:\n\n#  BOOST_ROOT             - Preferred installation prefix\n\n#   (or BOOSTROOT)\n\n#  BOOST_INCLUDEDIR       - Preferred include directory e.g. <prefix>/include\n\n#  BOOST_LIBRARYDIR       - Preferred library directory e.g. <prefix>/lib\n\n#  Boost_NO_SYSTEM_PATHS  - Set to ON to disable searching in locations not\n\n#                           specified by these hint variables. Default is OFF.\n\n#  Boost_ADDITIONAL_VERSIONS\n\n#                         - List of Boost versions not known to this module\n\n#                           (Boost install locations may contain the version)\n\n# and saves search results persistently in CMake cache entries:\n\n#  Boost_INCLUDE_DIR         - Directory containing Boost headers\n\n#  Boost_LIBRARY_DIR         - Directory containing Boost libraries\n\n#  Boost_<C>_LIBRARY_DEBUG   - Component <C> library debug variant\n\n#  Boost_<C>_LIBRARY_RELEASE - Component <C> library release variant\n\n# Users may set the these hints or results as cache entries.  Projects should\n\n# not read these entries directly but instead use the above result variables.\n\n# Note that some hint names start in upper-case \"BOOST\".  One may specify\n\n# these as environment variables if they are not specified as CMake variables\n\n# or cache entries.\n\n#\n\n# This module first searches for the Boost header files using the above hint\n\n# variables (excluding BOOST_LIBRARYDIR) and saves the result in\n\n# Boost_INCLUDE_DIR.  Then it searches for requested component libraries using\n\n# the above hints (excluding BOOST_INCLUDEDIR and Boost_ADDITIONAL_VERSIONS),\n\n# \"lib\" directories near Boost_INCLUDE_DIR, and the library name configuration\n\n# settings below.  It saves the library directory in Boost_LIBRARY_DIR and\n\n# individual library locations in Boost_<C>_LIBRARY_DEBUG and\n\n# Boost_<C>_LIBRARY_RELEASE.  When one changes settings used by previous\n\n# searches in the same build tree (excluding environment variables) this\n\n# module discards previous search results affected by the changes and searches\n\n# again.\n\n#\n\n# Boost libraries come in many variants encoded in their file name.  Users or\n\n# projects may tell this module which variant to find by setting variables:\n\n#  Boost_USE_MULTITHREADED  - Set to OFF to use the non-multithreaded\n\n#                             libraries ('mt' tag).  Default is ON.\n\n#  Boost_USE_STATIC_LIBS    - Set to ON to force the use of the static\n\n#                             libraries.  Default is OFF.\n\n#  Boost_USE_STATIC_RUNTIME - Set to ON or OFF to specify whether to use\n\n#                             libraries linked statically to the C++ runtime\n\n#                             ('s' tag).  Default is platform dependent.\n\n#  Boost_USE_DEBUG_PYTHON   - Set to ON to use libraries compiled with a\n\n#                             debug Python build ('y' tag). Default is OFF.\n\n#  Boost_USE_STLPORT        - Set to ON to use libraries compiled with\n\n#                             STLPort ('p' tag).  Default is OFF.\n\n#  Boost_USE_STLPORT_DEPRECATED_NATIVE_IOSTREAMS\n\n#                           - Set to ON to use libraries compiled with\n\n#                             STLPort deprecated \"native iostreams\"\n\n#                             ('n' tag).  Default is OFF.\n\n#  Boost_COMPILER           - Set to the compiler-specific library suffix\n\n#                             (e.g. \"-gcc43\").  Default is auto-computed\n\n#                             for the C++ compiler in use.\n\n#  Boost_THREADAPI          - Suffix for \"thread\" component library name,\n\n#                             such as \"pthread\" or \"win32\".  Names with\n\n#                             and without this suffix will both be tried.\n\n# Other variables one may set to control this module are:\n\n#  Boost_DEBUG              - Set to ON to enable debug output from FindBoost.\n\n#                             Please enable this before filing any bug report.\n\n#  Boost_DETAILED_FAILURE_MSG\n\n#                           - Set to ON to add detailed information to the\n\n#                             failure message even when the REQUIRED option\n\n#                             is not given to the find_package call.\n\n#  Boost_REALPATH           - Set to ON to resolve symlinks for discovered\n\n#                             libraries to assist with packaging.  For example,\n\n#                             the \"system\" component library may be resolved to\n\n#                             \"/usr/lib/libboost_system.so.1.42.0\" instead of\n\n#                             \"/usr/lib/libboost_system.so\".  This does not\n\n#                             affect linking and should not be enabled unless\n\n#                             the user needs this information.\n\n# On Visual Studio and Borland compilers Boost headers request automatic\n\n# linking to corresponding libraries.  This requires matching libraries to be\n\n# linked explicitly or available in the link library search path.  In this\n\n# case setting Boost_USE_STATIC_LIBS to OFF may not achieve dynamic linking.\n\n# Boost automatic linking typically requests static libraries with a few\n\n# exceptions (such as Boost.Python).  Use\n\n#  add_definitions(${Boost_LIB_DIAGNOSTIC_DEFINITIONS})\n\n# to ask Boost to report information about automatic linking requests.\n\n#\n\n# Example to find Boost headers only:\n\n#  find_package(Boost 1.36.0)\n\n#  if(Boost_FOUND)\n\n#    include_directories(${Boost_INCLUDE_DIRS})\n\n#    add_executable(foo foo.cc)\n\n#  endif()\n\n# Example to find Boost headers and some libraries:\n\n#  set(Boost_USE_STATIC_LIBS        ON)\n\n#  set(Boost_USE_MULTITHREADED      ON)\n\n#  set(Boost_USE_STATIC_RUNTIME    OFF)\n\n#  find_package(Boost 1.36.0 COMPONENTS date_time filesystem system ...)\n\n#  if(Boost_FOUND)\n\n#    include_directories(${Boost_INCLUDE_DIRS})\n\n#    add_executable(foo foo.cc)\n\n#    target_link_libraries(foo ${Boost_LIBRARIES})\n\n#  endif()\n\n#\n\n# Boost CMake ----------------------------------------------------------\n\n#\n\n# If Boost was built using the boost-cmake project it provides a package\n\n# configuration file for use with find_package's Config mode.  This module\n\n# looks for the package configuration file called BoostConfig.cmake or\n\n# boost-config.cmake and stores the result in cache entry \"Boost_DIR\".  If\n\n# found, the package configuration file is loaded and this module returns with\n\n# no further action.  See documentation of the Boost CMake package\n\n# configuration for details on what it provides.\n\n#\n\n# Set Boost_NO_BOOST_CMAKE to ON to disable the search for boost-cmake.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2006-2012 Kitware, Inc.\n\n# Copyright 2006-2008 Andreas Schneider <mail@cynapses.org>\n\n# Copyright 2007      Wengo\n\n# Copyright 2007      Mike Jackson\n\n# Copyright 2008      Andreas Pakulat <apaku@gmx.de>\n\n# Copyright 2008-2012 Philip Lowman <philip@yhbt.com>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# Before we go searching, check whether boost-cmake is avaialble, unless the\n\n# user specifically asked NOT to search for boost-cmake.\n\n#\n\n# If Boost_DIR is set, this behaves as any find_package call would. If not,\n\n# it looks at BOOST_ROOT and BOOSTROOT to find Boost.\n\n#\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If Boost_DIR is not set, look for BOOSTROOT and BOOST_ROOT as alternatives,\n\n# since these are more conventional for Boost.\n",
        "Line" : 164,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Do the same find_package call but look specifically for the CMake version.\n\n# Note that args are passed in the Boost_FIND_xxxxx variables, so there is no\n\n# need to delegate them to this find_package call.\n",
        "Line" : 174,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# If we found boost-cmake, then we're done.  Print out what we found.\n\n# Otherwise let the rest of the module try to find it.\n",
        "Line" : 180,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#  FindBoost functions & macros\n\n#\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "############################################\n\n#\n\n# Check the existence of the libraries.\n\n#\n\n############################################\n\n# This macro was taken directly from the FindQt4.cmake file that is included\n\n# with the CMake distribution. This is NOT my work. All work was done by the\n\n# original authors of the FindQt4.cmake file. Only minor modifications were\n\n# made to remove references to Qt and make this file more generally applicable\n\n# And ELSE/ENDIF pairs were removed for readability.\n\n#########################################################################\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# if the generator supports configuration types then set\n\n# optimized and debug libraries, or if the CMAKE_BUILD_TYPE has a value\n",
        "Line" : 212,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# if there are no configuration types and CMAKE_BUILD_TYPE has no value\n\n# then just use the release libraries\n",
        "Line" : 217,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# if only the release version was found, set the debug variable also to the release version\n",
        "Line" : 224,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# if only the debug version was found, set the release variable also to the debug version\n",
        "Line" : 231,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# If the debug & release library ends up being the same, omit the keywords\n",
        "Line" : 238,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Make variables changeble to the advanced user\n",
        "Line" : 249,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# If we found the first library save Boost_LIBRARY_DIR.\n",
        "Line" : 281,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# If Boost_LIBRARY_DIR is known then search only there.\n",
        "Line" : 287,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 293,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#\n\n# Runs compiler with \"-dumpversion\" and parses major/minor\n\n# version with a regex.\n\n#\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#\n\n# Take a list of libraries with \"thread\" in it\n\n# and prepend duplicates with \"thread_${Boost_THREADAPI}\"\n\n# at the front of the list\n\n#\n",
        "Line" : 311,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#\n\n# If a library is found, replace its cache entry with its REALPATH\n\n#\n",
        "Line" : 322,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Guesses Boost's compiler prefix used in built library names\n\n# Returns the guess by setting the variable pointed to by _ret\n",
        "Line" : 340,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Good luck!\n",
        "Line" : 363,
        "CharPositionInLine" : 18
      },
      "22" : {
        "Text" : "# yes, this is correct\n",
        "Line" : 364,
        "CharPositionInLine" : 32
      },
      "23" : {
        "Text" : "# Good luck!\n",
        "Line" : 365,
        "CharPositionInLine" : 18
      },
      "24" : {
        "Text" : "# yes, this is correct\n",
        "Line" : 366,
        "CharPositionInLine" : 32
      },
      "25" : {
        "Text" : "# no GCC version encoding prior to 1.34\n",
        "Line" : 373,
        "CharPositionInLine" : 36
      },
      "26" : {
        "Text" : "# no GCC version encoding prior to 1.34\n",
        "Line" : 381,
        "CharPositionInLine" : 36
      },
      "27" : {
        "Text" : "# Determine which version of GCC we have.\n",
        "Line" : 384,
        "CharPositionInLine" : 8
      },
      "28" : {
        "Text" : "# In Boost 1.36.0 and newer, the mangled compiler name used\n\n# on Mac OS X/Darwin is \"xgcc\".\n",
        "Line" : 388,
        "CharPositionInLine" : 14
      },
      "29" : {
        "Text" : "# In Boost <= 1.35.0, there is no mangled compiler name for\n\n# the Mac OS X/Darwin version of GCC.\n",
        "Line" : 392,
        "CharPositionInLine" : 14
      },
      "30" : {
        "Text" : "# We don't know the Boost version, so assume it's\n\n# pre-1.36.0.\n",
        "Line" : 397,
        "CharPositionInLine" : 12
      },
      "31" : {
        "Text" : "#\n\n# End functions/macros\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 412,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# main.\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 417,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Check the version of Boost against the requested version.\n",
        "Line" : 425,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# The version may appear in a directory with or without the patch\n\n# level, even when the patch level is non-zero.\n",
        "Line" : 431,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# The user has not requested an exact version.  Among known\n\n# versions, find those that are acceptable to the user request.\n",
        "Line" : 437,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# Select acceptable versions.\n",
        "Line" : 450,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "# This version is high enough.\n",
        "Line" : 453,
        "CharPositionInLine" : 8
      },
      "38" : {
        "Text" : "# This version is a short-form for the requested version with\n\n# the patch level dropped.\n",
        "Line" : 456,
        "CharPositionInLine" : 8
      },
      "39" : {
        "Text" : "# Any version is acceptable.\n",
        "Line" : 462,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# The reason that we failed to find Boost. This will be set to a\n\n# user-friendly message when we fail to find some necessary piece of\n\n# Boost.\n",
        "Line" : 467,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Output some of their choices\n",
        "Line" : 473,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# In windows, automatic linking is performed, so you do not have\n\n# to specify the libraries.  If you are linking to a dynamic\n\n# runtime, then you can choose to link to either a static or a\n\n# dynamic Boost library, the default is to do a static link.  You\n\n# can alter this for a specific library \"whatever\" by defining\n\n# BOOST_WHATEVER_DYN_LINK to force Boost library \"whatever\" to be\n\n# linked dynamically.  Alternatively you can force all Boost\n\n# libraries to dynamic link by defining BOOST_ALL_DYN_LINK.\n",
        "Line" : 489,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# This feature can be disabled for Boost library \"whatever\" by\n\n# defining BOOST_WHATEVER_NO_LIB, or for all of Boost by defining\n\n# BOOST_ALL_NO_LIB.\n",
        "Line" : 498,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# If you want to observe which libraries are being linked against\n\n# then defining BOOST_LIB_DIAGNOSTIC will cause the auto-linking\n\n# code to emit a #pragma message each time a library is selected\n\n# for linking.\n",
        "Line" : 502,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "# Collect environment variable inputs as hints.  Do not consider changes.\n",
        "Line" : 513,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Collect inputs and cached results.  Detect changes since the last run.\n",
        "Line" : 526,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Search for Boost include DIR\n\n# ------------------------------------------------------------------------\n",
        "Line" : 548,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# Clear Boost_INCLUDE_DIR if it did not change but other input affecting the\n\n# location did.  We will find a new one based on the new inputs.\n",
        "Line" : 554,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Try to find Boost by stepping backwards through the Boost versions\n\n# we know about.\n\n# Build a list of path suffixes for each version.\n",
        "Line" : 584,
        "CharPositionInLine" : 2
      },
      "50" : {
        "Text" : "# Add in a path suffix, based on the required version, ideally\n\n# we could read this from version.hpp, but for that to work we'd\n\n# need to know the include dir already\n",
        "Line" : 589,
        "CharPositionInLine" : 4
      },
      "51" : {
        "Text" : "# Transform 1.35 => 1_35 and 1.36.0 => 1_36_0\n",
        "Line" : 594,
        "CharPositionInLine" : 4
      },
      "52" : {
        "Text" : "# Look for a standard boost header file.\n",
        "Line" : 621,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Extract version information from version.hpp\n\n# ------------------------------------------------------------------------\n",
        "Line" : 629,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# Set Boost_FOUND based only on header location and version.\n\n# It will be updated below for component libraries.\n",
        "Line" : 633,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# Extract Boost_VERSION and Boost_LIB_VERSION from version.hpp\n",
        "Line" : 641,
        "CharPositionInLine" : 2
      },
      "56" : {
        "Text" : "# Set Boost_FOUND based on requested version.\n",
        "Line" : 667,
        "CharPositionInLine" : 4
      },
      "57" : {
        "Text" : "# State that we found a version of Boost that is too new or too old.\n",
        "Line" : 680,
        "CharPositionInLine" : 6
      },
      "58" : {
        "Text" : "# Caller will accept any Boost version.\n",
        "Line" : 693,
        "CharPositionInLine" : 4
      },
      "59" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Suffix initialization and compiler suffix detection.\n\n# ------------------------------------------------------------------------\n",
        "Line" : 702,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# Setting some more suffixes for the library\n",
        "Line" : 718,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# Attempt to guess the compiler suffix\n\n# NOTE: this is not perfect yet, if you experience any issues\n\n# please report them and use the Boost_COMPILER variable\n\n# to work around the problems.\n",
        "Line" : 731,
        "CharPositionInLine" : 2
      },
      "62" : {
        "Text" : "#======================\n\n# Systematically build up the Boost ABI tag\n\n# http://boost.org/doc/libs/1_41_0/more/getting_started/windows.html#library-naming\n",
        "Line" : 751,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# Key       Use this library when:\n\n#  s        linking statically to the C++ standard library and\n\n#           compiler runtime support libraries.\n",
        "Line" : 756,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "#  g        using debug versions of the standard and runtime\n\n#           support libraries\n",
        "Line" : 763,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "#  y        using special debug build of python\n",
        "Line" : 771,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "#  d        using a debug version of your code\n",
        "Line" : 775,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "#  p        using the STLport standard library rather than the\n\n#           default one supplied with your compiler\n",
        "Line" : 777,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "#  n        using the STLport deprecated \"native iostreams\" feature\n",
        "Line" : 783,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Begin finding boost libraries\n\n# ------------------------------------------------------------------------\n",
        "Line" : 796,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# Clear Boost_LIBRARY_DIR if it did not change but other input affecting the\n\n# location did.  We will find a new one based on the new inputs.\n",
        "Line" : 801,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Support preference of static libs by adjusting CMAKE_FIND_LIBRARY_SUFFIXES\n",
        "Line" : 844,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# We want to use the tag inline below without risking double dashes\n",
        "Line" : 854,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# The previous behavior of FindBoost when Boost_USE_STATIC_LIBS was enabled\n\n# on WIN32 was to:\n\n#  1. Search for static libs compiled against a SHARED C++ standard runtime library (use if found)\n\n#  2. Search for static libs compiled against a STATIC C++ standard runtime library (use if found)\n\n# We maintain this behavior since changing it could break people's builds.\n\n# To disable the ambiguous behavior, the user need only\n\n# set Boost_USE_STATIC_RUNTIME either ON or OFF.\n",
        "Line" : 866,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# On versions < 1.35, remove the System library from the considered list\n\n# since it wasn't added until 1.35.\n",
        "Line" : 880,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# If the user changed any of our control inputs flush previous results.\n",
        "Line" : 888,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "#\n\n# Find RELEASE libraries\n\n#\n",
        "Line" : 907,
        "CharPositionInLine" : 2
      },
      "77" : {
        "Text" : "# Avoid passing backslashes to _Boost_FIND_LIBRARY due to macro re-parsing.\n",
        "Line" : 932,
        "CharPositionInLine" : 2
      },
      "78" : {
        "Text" : "#\n\n# Find DEBUG libraries\n\n#\n",
        "Line" : 942,
        "CharPositionInLine" : 2
      },
      "79" : {
        "Text" : "# Avoid passing backslashes to _Boost_FIND_LIBRARY due to macro re-parsing.\n",
        "Line" : 968,
        "CharPositionInLine" : 2
      },
      "80" : {
        "Text" : "# Restore the original find library ordering\n",
        "Line" : 987,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  End finding boost libraries\n\n# ------------------------------------------------------------------------\n",
        "Line" : 992,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "# The above setting of Boost_FOUND was based only on the header files.\n\n# Update it for the requested component libraries.\n",
        "Line" : 999,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# The headers were found.  Check for requested component libs.\n",
        "Line" : 1002,
        "CharPositionInLine" : 2
      },
      "84" : {
        "Text" : "# We were unable to find some libraries, so generate a sensible\n\n# error message that lists the libraries we were unable to find.\n",
        "Line" : 1020,
        "CharPositionInLine" : 4
      },
      "85" : {
        "Text" : "# Compatibility Code for backwards compatibility with CMake\n\n# 2.4's FindBoost module.\n",
        "Line" : 1041,
        "CharPositionInLine" : 4
      },
      "86" : {
        "Text" : "# Look for the boost library path.\n\n# Note that the user may not have installed any libraries\n\n# so it is quite possible the Boost_LIBRARY_DIRS may not exist.\n",
        "Line" : 1044,
        "CharPositionInLine" : 4
      },
      "87" : {
        "Text" : "# Strip off the trailing \"/include\" in the path.\n",
        "Line" : 1054,
        "CharPositionInLine" : 6
      },
      "88" : {
        "Text" : "# Boost headers were not found so no components were found.\n",
        "Line" : 1074,
        "CharPositionInLine" : 2
      },
      "89" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Notification to end user about what was found\n\n# ------------------------------------------------------------------------\n",
        "Line" : 1081,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "# we opt not to automatically output Boost_ERROR_REASON here as\n\n# it could be quite lengthy and somewhat imposing in its requests\n\n# Since Boost is not always a required dependency we'll leave this\n\n# up to the end-user.\n",
        "Line" : 1107,
        "CharPositionInLine" : 6
      },
      "91" : {
        "Text" : "# Configure display of cache entries in GUI.\n",
        "Line" : 1120,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "# Record last used values of input variables so we can\n\n# detect on the next run if the user changed them.\n",
        "Line" : 1135,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "# Maintain a persistent list of components requested anywhere since\n\n# the last flush.\n",
        "Line" : 1148,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 94
    },
    "cmake-modules/FindDoxygen.cmake" : {
      "ObjectId" : "d2ede6ab9459738352862400f8668ca1e87e147c",
      "LastModified" : "2013-11-22T22:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - This module looks for Doxygen and the path to Graphviz's dot\n\n# Doxygen is a documentation generation tool.  Please see\n\n# http://www.doxygen.org\n\n#\n\n# This module accepts the following optional variables:\n\n#\n\n#   DOXYGEN_SKIP_DOT       = If true this module will skip trying to find Dot\n\n#                            (an optional component often used by Doxygen)\n\n#\n\n# This modules defines the following variables:\n\n#\n\n#   DOXYGEN_EXECUTABLE     = The path to the doxygen command.\n\n#   DOXYGEN_FOUND          = Was Doxygen found or not?\n\n#   DOXYGEN_VERSION        = The version reported by doxygen --version\n\n#\n\n#   DOXYGEN_DOT_EXECUTABLE = The path to the dot program used by doxygen.\n\n#   DOXYGEN_DOT_FOUND      = Was Dot found or not?\n\n#   DOXYGEN_DOT_PATH       = The path to dot not including the executable\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2001-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For backwards compatibility support\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ===== Rationale for OS X AppBundle mods below =====\n\n#     With the OS X GUI version, Doxygen likes to be installed to /Applications and\n\n#     it contains the doxygen executable in the bundle. In the versions I've\n\n#     seen, it is located in Resources, but in general, more often binaries are\n\n#     located in MacOS.\n\n#\n\n#     NOTE: The official Doxygen.app that is distributed for OS X uses non-standard\n\n#     conventions.  Instead of the command-line \"doxygen\" tool being placed in\n\n#     Doxygen.app/Contents/MacOS, \"Doxywizard\" is placed there instead and\n\n#     \"doxygen\" is placed in Contents/Resources.  This is most likely done\n\n#     so that something happens when people double-click on the Doxygen.app\n\n#     package.  Unfortunately, CMake gets confused by this as when it sees the\n\n#     bundle it uses \"Doxywizard\" as the executable to use instead of\n\n#     \"doxygen\".  Therefore to work-around this issue we temporarily disable\n\n#     the app-bundle feature, just for this CMake module:\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#  Save the old setting\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Disable the App-bundle detection feature\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#     FYI:\n\n#     In the older versions of OS X Doxygen, dot was included with the\n\n#     Doxygen bundle. But the new versions require you to download\n\n#     Graphviz.app which contains \"dot\" in it's bundle.\n\n# ============== End OSX stuff ================\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# Find Doxygen...\n\n#\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n# Find Dot...\n\n#\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# The Doxyfile wants the path to Dot, not the entire path and executable\n",
        "Line" : 108,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "#\n\n# Backwards compatibility...\n\n#\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Restore the old app-bundle setting setting\n",
        "Line" : 119,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Maintain the _FOUND variables as \"YES\" or \"NO\" for backwards compatibility\n\n# (allows people to stuff them directly into Doxyfile with configure_file())\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# For backwards compatibility support\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "cmake-modules/FindFFMPEG.cmake" : {
      "ObjectId" : "0e887c456353c2d86f38f1229829cbe77afcabab",
      "LastModified" : "2013-11-22T22:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find ffmpeg libraries (libavcodec, libavformat and libavutil)\n\n# Once done this will define\n\n#\n\n# FFMPEG_FOUND - system has ffmpeg or libav\n\n# FFMPEG_INCLUDE_DIR - the ffmpeg include directory\n\n# FFMPEG_LIBRARIES - Link these to use ffmpeg\n\n# FFMPEG_LIBAVCODEC\n\n# FFMPEG_LIBAVFORMAT\n\n# FFMPEG_LIBAVUTIL\n\n#\n\n# Copyright (c) 2008 Andreas Schneider <mail@cynapses.org>\n\n# Modified for other libraries by Lasse Kärkkäinen <tronic>\n\n# Modified for Hedgewars by Stepik777\n\n#\n\n# Redistribution and use is allowed according to the terms of the New\n\n# BSD license.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "cmake-modules/FindGLEW.cmake" : {
      "ObjectId" : "37dff0324bf778815697af145b188a0d15a48fbf",
      "LastModified" : "2013-11-22T22:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find the OpenGL Extension Wrangler Library (GLEW)\n\n# This module defines the following variables:\n\n#  GLEW_INCLUDE_DIRS - include directories for GLEW\n\n#  GLEW_LIBRARIES - libraries to link against GLEW\n\n#  GLEW_FOUND - true if GLEW has been found and can be used\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2012 Benjamin Eikel\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake-modules/FindOpenGL.cmake" : {
      "ObjectId" : "96c4d8db5f28bc53771233a68b49da79ba0f603b",
      "LastModified" : "2013-11-22T22:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find OpenGL\n\n# Once done this will define\n\n#\n\n#  OPENGL_FOUND        - system has OpenGL\n\n#  OPENGL_XMESA_FOUND  - system has XMESA\n\n#  OPENGL_GLU_FOUND    - system has GLU\n\n#  OPENGL_INCLUDE_DIR  - the GL include directory\n\n#  OPENGL_LIBRARIES    - Link these to use OpenGL and GLU\n\n#\n\n# If you want to use just GL you can use these values\n\n#  OPENGL_gl_LIBRARY   - Path to OpenGL Library\n\n#  OPENGL_glu_LIBRARY  - Path to GLU Library\n\n#\n\n# On OSX default to using the framework version of opengl\n\n# People will have to change the cache values of OPENGL_glu_LIBRARY\n\n# and OPENGL_gl_LIBRARY to use OpenGL with X11 on OSX\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2001-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Handle HP-UX cases where we only want to find OpenGL in either hpux64\n\n# or hpux32 depending on if we're doing a 64 bit build.\n",
        "Line" : 62,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# The first line below is to make sure that the proper headers\n\n# are used on a Linux machine with the NVidia drivers installed.\n\n# They replace Mesa with NVidia's own library but normally do not\n\n# install headers and that causes the linking to\n\n# fail since the compiler finds the Mesa headers but NVidia's library.\n\n# Make sure the NVIDIA directory comes BEFORE the others.\n\n#  - Atanas Georgiev <atanas@cs.columbia.edu>\n",
        "Line" : 79,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# On Unix OpenGL most certainly always requires X11.\n\n# Feel free to tighten up these conditions if you don't\n\n# think this is always true.\n\n# It's not true on OSX.\n",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# This deprecated setting is for backward compatibility with CMake1.4\n",
        "Line" : 154,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# This deprecated setting is for backward compatibility with CMake1.4\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set OPENGL_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake-modules/FindPackageHandleStandardArgs.cmake" : {
      "ObjectId" : "70423a7e432199d5ab32c84ffb8dd69660894cea",
      "LastModified" : "2013-11-22T22:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIND_PACKAGE_HANDLE_STANDARD_ARGS(<name> ... )\n\n#\n\n# This function is intended to be used in FindXXX.cmake modules files.\n\n# It handles the REQUIRED, QUIET and version-related arguments to find_package().\n\n# It also sets the <packagename>_FOUND variable.\n\n# The package is considered found if all variables <var1>... listed contain\n\n# valid results, e.g. valid filepaths.\n\n#\n\n# There are two modes of this function. The first argument in both modes is\n\n# the name of the Find-module where it is called (in original casing).\n\n#\n\n# The first simple mode looks like this:\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(<name> (DEFAULT_MSG|\"Custom failure message\") <var1>...<varN> )\n\n# If the variables <var1> to <varN> are all valid, then <UPPERCASED_NAME>_FOUND\n\n# will be set to TRUE.\n\n# If DEFAULT_MSG is given as second argument, then the function will generate\n\n# itself useful success and error messages. You can also supply a custom error message\n\n# for the failure case. This is not recommended.\n\n#\n\n# The second mode is more powerful and also supports version checking:\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(NAME [FOUND_VAR <resultVar>]\n\n#                                           [REQUIRED_VARS <var1>...<varN>]\n\n#                                           [VERSION_VAR   <versionvar>]\n\n#                                           [HANDLE_COMPONENTS]\n\n#                                           [CONFIG_MODE]\n\n#                                           [FAIL_MESSAGE \"Custom failure message\"] )\n\n#\n\n# In this mode, the name of the result-variable can be set either to either\n\n# <UPPERCASED_NAME>_FOUND or <OriginalCase_Name>_FOUND using the FOUND_VAR option.\n\n# Other names for the result-variable are not allowed.\n\n# So for a Find-module named FindFooBar.cmake, the two possible names are\n\n# FooBar_FOUND and FOOBAR_FOUND. It is recommended to use the original case version.\n\n# If the FOUND_VAR option is not used, the default is <UPPERCASED_NAME>_FOUND.\n\n#\n\n# As in the simple mode, if <var1> through <varN> are all valid,\n\n# <packagename>_FOUND will be set to TRUE.\n\n# After REQUIRED_VARS the variables which are required for this package are listed.\n\n# Following VERSION_VAR the name of the variable can be specified which holds\n\n# the version of the package which has been found. If this is done, this version\n\n# will be checked against the (potentially) specified required version used\n\n# in the find_package() call. The EXACT keyword is also handled. The default\n\n# messages include information about the required version and the version\n\n# which has been actually found, both if the version is ok or not.\n\n# If the package supports components, use the HANDLE_COMPONENTS option to enable\n\n# handling them. In this case, find_package_handle_standard_args() will report\n\n# which components have been found and which are missing, and the <packagename>_FOUND\n\n# variable will be set to FALSE if any of the required components (i.e. not the\n\n# ones listed after OPTIONAL_COMPONENTS) are missing.\n\n# Use the option CONFIG_MODE if your FindXXX.cmake module is a wrapper for\n\n# a find_package(... NO_MODULE) call.  In this case VERSION_VAR will be set\n\n# to <NAME>_VERSION and the macro will automatically check whether the\n\n# Config module was found.\n\n# Via FAIL_MESSAGE a custom failure message can be specified, if this is not\n\n# used, the default message will be displayed.\n\n#\n\n# Example for mode 1:\n\n#\n\n#    find_package_handle_standard_args(LibXml2  DEFAULT_MSG  LIBXML2_LIBRARY LIBXML2_INCLUDE_DIR)\n\n#\n\n# LibXml2 is considered to be found, if both LIBXML2_LIBRARY and\n\n# LIBXML2_INCLUDE_DIR are valid. Then also LIBXML2_FOUND is set to TRUE.\n\n# If it is not found and REQUIRED was used, it fails with FATAL_ERROR,\n\n# independent whether QUIET was used or not.\n\n# If it is found, success will be reported, including the content of <var1>.\n\n# On repeated Cmake runs, the same message won't be printed again.\n\n#\n\n# Example for mode 2:\n\n#\n\n#    find_package_handle_standard_args(LibXslt FOUND_VAR LibXslt_FOUND\n\n#                                             REQUIRED_VARS LibXslt_LIBRARIES LibXslt_INCLUDE_DIRS\n\n#                                             VERSION_VAR LibXslt_VERSION_STRING)\n\n# In this case, LibXslt is considered to be found if the variable(s) listed\n\n# after REQUIRED_VAR are all valid, i.e. LibXslt_LIBRARIES and LibXslt_INCLUDE_DIRS\n\n# in this case. The result will then be stored in LibXslt_FOUND .\n\n# Also the version of LibXslt will be checked by using the version contained\n\n# in LibXslt_VERSION_STRING.\n\n# Since no FAIL_MESSAGE is given, the default messages will be printed.\n\n#\n\n# Another example for mode 2:\n\n#\n\n#    find_package(Automoc4 QUIET NO_MODULE HINTS /opt/automoc4)\n\n#    find_package_handle_standard_args(Automoc4  CONFIG_MODE)\n\n# In this case, FindAutmoc4.cmake wraps a call to find_package(Automoc4 NO_MODULE)\n\n# and adds an additional search directory for automoc4.\n\n# Here the result will be stored in AUTOMOC4_FOUND.\n\n# The following FIND_PACKAGE_HANDLE_STANDARD_ARGS() call produces a proper\n\n# success/error message.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2007-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# internal helper macro\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# internal helper macro to generate the failure message when used in CONFIG_MODE:\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# <name>_CONFIG is set, but FOUND is false, this means that some other of the REQUIRED_VARS was not found:\n",
        "Line" : 119,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# If _CONSIDERED_CONFIGS is set, the config-file has been found, but no suitable version.\n\n# List them all in the error message:\n",
        "Line" : 123,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Simple case: No Config-file was found at all:\n",
        "Line" : 140,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# set up the arguments for CMAKE_PARSE_ARGUMENTS and check whether we are in\n\n# new extended or in the \"old\" mode:\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# now that we collected all arguments, process them\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# In config-mode, we rely on the variable <package>_CONFIG, which is set by find_package()\n\n# when it successfully found the config-file, including version checking:\n",
        "Line" : 180,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# collect all variables which were not found, so they can be printed, so the\n\n# user knows better what went wrong (#6375)\n",
        "Line" : 207,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# check if all passed variables are valid\n",
        "Line" : 211,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# component handling\n",
        "Line" : 225,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# version handling:\n",
        "Line" : 256,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# exact version required\n",
        "Line" : 264,
        "CharPositionInLine" : 44
      },
      "15" : {
        "Text" : "# minimum version specified:\n",
        "Line" : 272,
        "CharPositionInLine" : 17
      },
      "16" : {
        "Text" : "# if the package was not found, but a version was given, add that to the output:\n",
        "Line" : 283,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# print the result:\n",
        "Line" : 304,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 18
    },
    "cmake-modules/FindPackageMessage.cmake" : {
      "ObjectId" : "5cea43e352283d0f343045fd5261c82858ba4cf8",
      "LastModified" : "2013-11-22T22:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIND_PACKAGE_MESSAGE(<name> \"message for user\" \"find result details\")\n\n#\n\n# This macro is intended to be used in FindXXX.cmake modules files.\n\n# It will print a message once for each unique find result.\n\n# This is useful for telling the user where a package was found.\n\n# The first argument specifies the name (XXX) of the package.\n\n# The second argument specifies the message to display.\n\n# The third argument lists details about the find result so that\n\n# if they change the message will be displayed again.\n\n# The macro also obeys the QUIET argument to the find_package command.\n\n#\n\n# Example:\n\n#\n\n#  if(X11_FOUND)\n\n#    FIND_PACKAGE_MESSAGE(X11 \"Found X11: ${X11_X11_LIB}\"\n\n#      \"[${X11_X11_LIB}][${X11_INCLUDE_DIR}]\")\n\n#  else()\n\n#   ...\n\n#  endif()\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2008-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Avoid printing a message repeatedly for the same find result.\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# The message has not yet been printed.\n",
        "Line" : 40,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# Save the find details in the cache to avoid printing the same\n\n# message again.\n",
        "Line" : 43,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 5
    },
    "cmake-modules/FindPkgConfig.cmake" : {
      "ObjectId" : "2766f978086f8960fbecabc14d2972bb6fcf370c",
      "LastModified" : "2013-11-22T22:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - a pkg-config module for CMake\n\n#\n\n# Usage:\n\n#   pkg_check_modules(<PREFIX> [REQUIRED] [QUIET] <MODULE> [<MODULE>]*)\n\n#     checks for all the given modules\n\n#\n\n#   pkg_search_module(<PREFIX> [REQUIRED] [QUIET] <MODULE> [<MODULE>]*)\n\n#     checks for given modules and uses the first working one\n\n#\n\n# When the 'REQUIRED' argument was set, macros will fail with an error\n\n# when module(s) could not be found\n\n#\n\n# When the 'QUIET' argument is set, no status messages will be printed.\n\n#\n\n# It sets the following variables:\n\n#   PKG_CONFIG_FOUND          ... if pkg-config executable was found\n\n#   PKG_CONFIG_EXECUTABLE     ... pathname of the pkg-config program\n\n#   PKG_CONFIG_VERSION_STRING ... the version of the pkg-config program found\n\n#                                 (since CMake 2.8.8)\n\n#\n\n# For the following variables two sets of values exist; first one is the\n\n# common one and has the given PREFIX. The second set contains flags\n\n# which are given out when pkgconfig was called with the '--static'\n\n# option.\n\n#   <XPREFIX>_FOUND          ... set to 1 if module(s) exist\n\n#   <XPREFIX>_LIBRARIES      ... only the libraries (w/o the '-l')\n\n#   <XPREFIX>_LIBRARY_DIRS   ... the paths of the libraries (w/o the '-L')\n\n#   <XPREFIX>_LDFLAGS        ... all required linker flags\n\n#   <XPREFIX>_LDFLAGS_OTHER  ... all other linker flags\n\n#   <XPREFIX>_INCLUDE_DIRS   ... the '-I' preprocessor flags (w/o the '-I')\n\n#   <XPREFIX>_CFLAGS         ... all required cflags\n\n#   <XPREFIX>_CFLAGS_OTHER   ... the other compiler flags\n\n#\n\n#   <XPREFIX> = <PREFIX>        for common case\n\n#   <XPREFIX> = <PREFIX>_STATIC for static linking\n\n#\n\n# There are some special variables whose prefix depends on the count\n\n# of given modules. When there is only one module, <PREFIX> stays\n\n# unchanged. When there are multiple modules, the prefix will be\n\n# changed to <PREFIX>_<MODNAME>:\n\n#   <XPREFIX>_VERSION    ... version of the module\n\n#   <XPREFIX>_PREFIX     ... prefix-directory of the module\n\n#   <XPREFIX>_INCLUDEDIR ... include-dir of the module\n\n#   <XPREFIX>_LIBDIR     ... lib-dir of the module\n\n#\n\n#   <XPREFIX> = <PREFIX>  when |MODULES| == 1, else\n\n#   <XPREFIX> = <PREFIX>_<MODNAME>\n\n#\n\n# A <MODULE> parameter can have the following formats:\n\n#   {MODNAME}            ... matches any version\n\n#   {MODNAME}>={VERSION} ... at least version <VERSION> is required\n\n#   {MODNAME}={VERSION}  ... exactly version <VERSION> is required\n\n#   {MODNAME}<={VERSION} ... modules must not be newer than <VERSION>\n\n#\n\n# Examples\n\n#   pkg_check_modules (GLIB2   glib-2.0)\n\n#\n\n#   pkg_check_modules (GLIB2   glib-2.0>=2.10)\n\n#     requires at least version 2.10 of glib2 and defines e.g.\n\n#       GLIB2_VERSION=2.10.3\n\n#\n\n#   pkg_check_modules (FOO     glib-2.0>=2.10 gtk+-2.0)\n\n#     requires both glib2 and gtk2, and defines e.g.\n\n#       FOO_glib-2.0_VERSION=2.10.3\n\n#       FOO_gtk+-2.0_VERSION=2.8.20\n\n#\n\n#   pkg_check_modules (XRENDER REQUIRED xrender)\n\n#     defines e.g.:\n\n#       XRENDER_LIBRARIES=Xrender;X11\n\n#       XRENDER_STATIC_LIBRARIES=Xrender;X11;pthread;Xau;Xdmcp\n\n#\n\n#   pkg_search_module (BAR     libxml-2.0 libxml2 libxml>=2)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2006-2009 Kitware, Inc.\n\n# Copyright 2006 Enrico Scholz <enrico.scholz@informatik.tu-chemnitz.de>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "### Common stuff ####\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This is needed because the module name is \"PkgConfig\" but the name of\n\n# this variable has always been PKG_CONFIG_FOUND so this isn't automatically\n\n# handled by FPHSA.\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Unsets the given variables\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Invokes pkgconfig, cleans up the result and sets variables\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#message(STATUS \"  ${_varname} ... ${_pkgconfig_invoke_result}\")\n",
        "Line" : 142,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Invokes pkgconfig two times; once without '--static' and once with\n\n# '--static'\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Splits given arguments into options and a package list\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "###\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# create a better addressable variable of the modules and calculate its size\n",
        "Line" : 197,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# give out status message telling checked module\n",
        "Line" : 202,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# iterate through module list and check whether they exist and match the required version\n",
        "Line" : 214,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# check whether version is given\n",
        "Line" : 218,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# handle the operands\n",
        "Line" : 229,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# create the final query which is of the format:\n\n# * --atleast-version <version> <pkg-name>\n\n# * --exact-version <version> <pkg-name>\n\n# * --max-version <version> <pkg-name>\n\n# * --exists <pkg-name>\n",
        "Line" : 242,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# execute the query\n",
        "Line" : 261,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# evaluate result and tell failures\n",
        "Line" : 266,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# fail when requested\n",
        "Line" : 277,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "# when we are here, we checked whether requested modules\n\n# exist. Now, go through them and set variables\n",
        "Line" : 282,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "# iterate through all modules again and set individual variables\n",
        "Line" : 288,
        "CharPositionInLine" : 6
      },
      "21" : {
        "Text" : "# handle case when there is only one package required\n",
        "Line" : 290,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# set variables which are combined for multiple modules\n",
        "Line" : 307,
        "CharPositionInLine" : 6
      },
      "23" : {
        "Text" : "###\n\n### User visible macros start here\n\n###\n",
        "Line" : 324,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "###\n",
        "Line" : 328,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# check cached value\n",
        "Line" : 330,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "###\n",
        "Line" : 339,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# check cached value\n",
        "Line" : 341,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# iterate through all modules and stop at the first working one.\n",
        "Line" : 350,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "### Local Variables:\n\n### mode: cmake\n\n### End:\n",
        "Line" : 371,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 30
    },
    "cmake-modules/FindSDL2.cmake" : {
      "ObjectId" : "a1517395a661a2d7bd387af59735b4979d14f950",
      "LastModified" : "2013-11-22T22:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find SDL2 library and headers\n\n# \n\n# Find module for SDL 2.0 (http://www.libsdl.org/).\n\n# It defines the following variables:\n\n#  SDL2_INCLUDE_DIRS - The location of the headers, e.g., SDL.h.\n\n#  SDL2_LIBRARIES - The libraries to link against to use SDL2.\n\n#  SDL2_FOUND - If false, do not try to use SDL2.\n\n#  SDL2_VERSION_STRING - Human-readable string containing the version of SDL2.\n\n#\n\n# This module responds to the the flag:\n\n#  SDL2_BUILDING_LIBRARY\n\n#    If this is defined, then no SDL2_main will be linked in because\n\n#    only applications need main().\n\n#    Otherwise, it is assumed you are building an application and this\n\n#    module will attempt to locate and set the the proper link flags\n\n#    as part of the returned SDL2_LIBRARIES variable.\n\n#\n\n# Also defined, but not for general use are:\n\n#   SDL2_INCLUDE_DIR - The directory that contains SDL.h.\n\n#   SDL2_LIBRARY - The location of the SDL2 library.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2013 Benjamin Eikel\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n\n#\n\n# Some modification by Luc Chabassier (removed linking of SDL_main)\n\n#\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake-modules/FindSDL2_image.cmake" : {
      "ObjectId" : "b0708f683dab0e14e8dda7c143330fee125bb558",
      "LastModified" : "2013-11-22T22:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find SDL2_image library and headers\n\n# \n\n# Find module for SDL_image 2.0 (http://www.libsdl.org/projects/SDL_image/).\n\n# It defines the following variables:\n\n#  SDL2_IMAGE_INCLUDE_DIRS - The location of the headers, e.g., SDL_image.h.\n\n#  SDL2_IMAGE_LIBRARIES - The libraries to link against to use SDL2_image.\n\n#  SDL2_IMAGE_FOUND - If false, do not try to use SDL2_image.\n\n#  SDL2_IMAGE_VERSION_STRING\n\n#    Human-readable string containing the version of SDL2_image.\n\n#\n\n# Also defined, but not for general use are:\n\n#   SDL2_IMAGE_INCLUDE_DIR - The directory that contains SDL_image.h.\n\n#   SDL2_IMAGE_LIBRARY - The location of the SDL2_image library.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2013 Benjamin Eikel\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake-modules/FindSDL2_mixer.cmake" : {
      "ObjectId" : "d4a30b245288fc696536414210b4c1221a9046f3",
      "LastModified" : "2013-11-22T22:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# this module look for SDL2_Mixer (http://www.libsdl.org) support\n\n# it will define the following values\n\n#\n\n# SDLMIXER_INCLUDE_DIR = where SDL_mixer.h can be found\n\n# SDLMIXER_LIBRARY = the library to link against SDL2_mixer\n\n# SDLMIXER_FOUND = set to 1 if SDL2_mixer is found\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake-modules/FindX11.cmake" : {
      "ObjectId" : "3cd3cefeb7d529426f06aa5d46f50740143f091a",
      "LastModified" : "2013-11-22T22:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find X11 installation\n\n# Try to find X11 on UNIX systems. The following values are defined\n\n#  X11_FOUND        - True if X11 is available\n\n#  X11_INCLUDE_DIR  - include directories to use X11\n\n#  X11_LIBRARIES    - link against these to use X11\n\n#\n\n# and also the following more fine grained variables:\n\n# Include paths: X11_ICE_INCLUDE_PATH,          X11_ICE_LIB,        X11_ICE_FOUND\n\n#                X11_SM_INCLUDE_PATH,           X11_SM_LIB,         X11_SM_FOUND\n\n#                X11_X11_INCLUDE_PATH,          X11_X11_LIB\n\n#                X11_Xaccessrules_INCLUDE_PATH,                     X11_Xaccess_FOUND\n\n#                X11_Xaccessstr_INCLUDE_PATH,                       X11_Xaccess_FOUND\n\n#                X11_Xau_INCLUDE_PATH,          X11_Xau_LIB,        X11_Xau_FOUND\n\n#                X11_Xcomposite_INCLUDE_PATH,   X11_Xcomposite_LIB, X11_Xcomposite_FOUND\n\n#                X11_Xcursor_INCLUDE_PATH,      X11_Xcursor_LIB,    X11_Xcursor_FOUND\n\n#                X11_Xdamage_INCLUDE_PATH,      X11_Xdamage_LIB,    X11_Xdamage_FOUND\n\n#                X11_Xdmcp_INCLUDE_PATH,        X11_Xdmcp_LIB,      X11_Xdmcp_FOUND\n\n#                                               X11_Xext_LIB,       X11_Xext_FOUND\n\n#                X11_dpms_INCLUDE_PATH,         (in X11_Xext_LIB),  X11_dpms_FOUND\n\n#                X11_XShm_INCLUDE_PATH,         (in X11_Xext_LIB),  X11_XShm_FOUND\n\n#                X11_Xshape_INCLUDE_PATH,       (in X11_Xext_LIB),  X11_Xshape_FOUND\n\n#                X11_xf86misc_INCLUDE_PATH,     X11_Xxf86misc_LIB,  X11_xf86misc_FOUND\n\n#                X11_xf86vmode_INCLUDE_PATH,    X11_Xxf86vm_LIB     X11_xf86vmode_FOUND\n\n#                X11_Xfixes_INCLUDE_PATH,       X11_Xfixes_LIB,     X11_Xfixes_FOUND\n\n#                X11_Xft_INCLUDE_PATH,          X11_Xft_LIB,        X11_Xft_FOUND\n\n#                X11_Xi_INCLUDE_PATH,           X11_Xi_LIB,         X11_Xi_FOUND\n\n#                X11_Xinerama_INCLUDE_PATH,     X11_Xinerama_LIB,   X11_Xinerama_FOUND\n\n#                X11_Xinput_INCLUDE_PATH,       X11_Xinput_LIB,     X11_Xinput_FOUND\n\n#                X11_Xkb_INCLUDE_PATH,                              X11_Xkb_FOUND\n\n#                X11_Xkblib_INCLUDE_PATH,                           X11_Xkb_FOUND\n\n#                X11_Xkbfile_INCLUDE_PATH,      X11_Xkbfile_LIB,    X11_Xkbfile_FOUND\n\n#                X11_Xmu_INCLUDE_PATH,          X11_Xmu_LIB,        X11_Xmu_FOUND\n\n#                X11_Xpm_INCLUDE_PATH,          X11_Xpm_LIB,        X11_Xpm_FOUND\n\n#                X11_XTest_INCLUDE_PATH,        X11_XTest_LIB,      X11_XTest_FOUND\n\n#                X11_Xrandr_INCLUDE_PATH,       X11_Xrandr_LIB,     X11_Xrandr_FOUND\n\n#                X11_Xrender_INCLUDE_PATH,      X11_Xrender_LIB,    X11_Xrender_FOUND\n\n#                X11_Xscreensaver_INCLUDE_PATH, X11_Xscreensaver_LIB, X11_Xscreensaver_FOUND\n\n#                X11_Xt_INCLUDE_PATH,           X11_Xt_LIB,         X11_Xt_FOUND\n\n#                X11_Xutil_INCLUDE_PATH,                            X11_Xutil_FOUND\n\n#                X11_Xv_INCLUDE_PATH,           X11_Xv_LIB,         X11_Xv_FOUND\n\n#                X11_XSync_INCLUDE_PATH,        (in X11_Xext_LIB),  X11_XSync_FOUND\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2001-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# X11 is never a framework and some header files may be\n\n# found in tcl on the mac\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Look for includes; keep the list sorted by name of the cmake *_INCLUDE_PATH\n\n# variable (which doesn't need to match the include file name).\n",
        "Line" : 83,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Solaris lacks XKBrules.h, so we should skip kxkbd there.\n",
        "Line" : 86,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Find additional X libraries. Keep list sorted by library name.\n",
        "Line" : 124,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# start with empty list\n",
        "Line" : 156,
        "CharPositionInLine" : 23
      },
      "7" : {
        "Text" : "# start with empty list\n",
        "Line" : 175,
        "CharPositionInLine" : 21
      },
      "8" : {
        "Text" : "# Most of the X11 headers will be in the same directories, avoid\n\n# creating a huge list of duplicates.\n",
        "Line" : 327,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Deprecated variable for backwards compatibility with CMake 1.4\n",
        "Line" : 333,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Translated from an autoconf-generated configure script.\n\n# See libs.m4 in autoconf's m4 directory.\n",
        "Line" : 342,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# See if XOpenDisplay in X11 works by itself.\n",
        "Line" : 349,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# Find library needed for dnet_ntoa.\n",
        "Line" : 352,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# Find library needed for gethostbyname.\n",
        "Line" : 364,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# Find library needed for connect.\n",
        "Line" : 378,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# Find library needed for remove.\n",
        "Line" : 387,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# Find library needed for shmat.\n",
        "Line" : 396,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# Build the final list of libraries.\n",
        "Line" : 417,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# X11_FIND_REQUIRED_<component> could be checked too\n",
        "Line" : 497,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "src/Box2D/CMakeLists.txt" : {
      "ObjectId" : "8ed6560de18d48f17cc5206d5ff7fdc10bdd0f9f",
      "LastModified" : "2015-08-15T21:06:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Disables warnings, that's not our code\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# These are used to create visual studio folders.\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# install headers\n",
        "Line" : 161,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# install libraries\n",
        "Line" : 171,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# install build system hooks for third-party apps\n",
        "Line" : 179,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 5
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "2670bf12f2d97cabbbb7878b3a04122ebb67932a",
      "LastModified" : "2015-08-15T21:40:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# List file here\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/audio/CMakeLists.txt" : {
      "ObjectId" : "7d21021ff38fb936ff2b02e7b686ee0c8e758a2c",
      "LastModified" : "2015-08-15T21:06:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# List file here\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/core/CMakeLists.txt" : {
      "ObjectId" : "d31f80a6069710f4259c85e4f2b09542adc62eb5",
      "LastModified" : "2015-08-15T21:06:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# List file here\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/events/CMakeLists.txt" : {
      "ObjectId" : "292b3bdbf6f1393b3f0420a95d14561f5f23cea4",
      "LastModified" : "2015-08-15T21:06:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# List file here\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/gameplay/CMakeLists.txt" : {
      "ObjectId" : "7c9c6fcda9f094d5a25e45e2d565c510b181e4b3",
      "LastModified" : "2015-08-15T21:06:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# List file here\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/geometry/CMakeLists.txt" : {
      "ObjectId" : "c543ee24c2fa3eedf592f4f03cef17dd5f297bb6",
      "LastModified" : "2015-08-15T21:06:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# List file here\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/graphics/CMakeLists.txt" : {
      "ObjectId" : "c688ec35cb83507e41d7035544e7b4734c9e915a",
      "LastModified" : "2015-08-15T21:06:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# List file here\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/gui/CMakeLists.txt" : {
      "ObjectId" : "3fcb5f84d82f44a2bd06326a205bd1d9e227ac36",
      "LastModified" : "2015-08-15T21:06:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# List file here\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/liblua/CMakeLists.txt" : {
      "ObjectId" : "a7b7124c6cbc7ba647f5e1f490e9f816b67bac46",
      "LastModified" : "2015-08-15T21:06:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Disables warnings, that's not our code\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/liblua/lua-5.2.3/CMakeLists.txt" : {
      "ObjectId" : "3807c542cded4f2aa33ac0d09b871d5b3b1ab600",
      "LastModified" : "2015-08-15T21:06:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add options\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# HEADERS\n",
        "Line" : 6,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# SOURCE\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#Library\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/lua/CMakeLists.txt" : {
      "ObjectId" : "1b7c4934976776d59bb90a54e284bf854491a6f2",
      "LastModified" : "2015-08-15T21:06:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# List file here\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/menus/CMakeLists.txt" : {
      "ObjectId" : "96d8c3cac215addfb5b4d1b1b5506e19badf7a39",
      "LastModified" : "2015-08-15T21:06:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# List file here\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/physics/CMakeLists.txt" : {
      "ObjectId" : "cece42dfcb00db34d87ed60108494f8ca408788a",
      "LastModified" : "2015-08-15T21:06:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# List file here\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "341df20d513f1f5acb4264f00075f3296f8caf8e",
      "LastModified" : "2015-08-15T21:40:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Each subdirectory has its own tests\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/audio/CMakeLists.txt" : {
      "ObjectId" : "5e670f432a6c33401b528da8ab5cafb5c7be705e",
      "LastModified" : "2015-08-15T21:06:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Each test here\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/core/CMakeLists.txt" : {
      "ObjectId" : "b1fcee34ad8c56a8a63e08b0f711e960c735cbda",
      "LastModified" : "2015-08-15T21:06:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Each test here\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/events/CMakeLists.txt" : {
      "ObjectId" : "afa8a91d2b945f552e74cf488e25915ff987cf3e",
      "LastModified" : "2015-08-15T21:06:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Each test here\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/gameplay/CMakeLists.txt" : {
      "ObjectId" : "a0427dc0aabd4c4927123d8ce74b1520bfbab895",
      "LastModified" : "2015-08-15T21:06:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Each test here\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/geometry/CMakeLists.txt" : {
      "ObjectId" : "8c98268a0657a49b4719804b393e568c6e6a00d9",
      "LastModified" : "2015-08-15T21:06:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Each test here\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/graphics/CMakeLists.txt" : {
      "ObjectId" : "d5dab25a8980b8c13acb5e8594b03804324b33ee",
      "LastModified" : "2015-08-15T21:06:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Each test here\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/gui/CMakeLists.txt" : {
      "ObjectId" : "ae8fa096108edaf75287b2ffb3d13e3e9103cdac",
      "LastModified" : "2015-08-15T21:06:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Each test here\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/lua/CMakeLists.txt" : {
      "ObjectId" : "3b23e45681b58ec81dbdc1761734ac482ef4db8a",
      "LastModified" : "2015-08-15T21:06:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Each test here\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/physics/CMakeLists.txt" : {
      "ObjectId" : "f42cc01b902ee8b64da798889ea2ea49bcb71143",
      "LastModified" : "2015-08-15T21:06:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/CMakeLists.txt" : {
      "ObjectId" : "de70cdeeafe065c0dca259f8202bebf44b2fa174",
      "LastModified" : "2015-08-15T21:40:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Each tool here\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "wiki/CMakeLists.txt" : {
      "ObjectId" : "6039543e4848b30ca4662fb39637cd0fed34d487",
      "LastModified" : "2015-08-15T21:06:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 42
  },
  "ElapsedTime" : 953
}