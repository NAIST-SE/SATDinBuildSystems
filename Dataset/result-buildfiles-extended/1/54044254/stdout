{
  "Repository" : "54044254",
  "Revision" : "HEAD",
  "ObjectId" : "02f9e6fc798335d7f2a5088df246aeab14ef8b02",
  "CommitTime" : "2019-03-02T15:25:03Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "40eecf3a256e5d68b9e927d0d3b33cdb62bc56bc",
      "LastModified" : "2019-01-11T18:33:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=================================================================\n\n# CMake options ==================================================\n\n#=================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=================================================================\n\n#=================================================================\n\n#=================================================================\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#=================================================================\n\n# Include guard ==================================================\n\n#=================================================================\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#=================================================================\n\n#=================================================================\n\n#=================================================================\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#=================================================================\n\n# General variables ==============================================\n\n#=================================================================\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Output params\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#=================================================================\n\n#=================================================================\n\n#=================================================================\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#=================================================================\n\n# Add misc files =================================================\n\n#=================================================================\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#=================================================================\n\n#=================================================================\n\n#=================================================================\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#=================================================================\n\n# BangEngine sources =============================================\n\n#=================================================================\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#=================================================================\n\n#=================================================================\n\n#=================================================================\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#=================================================================\n\n# Dependencies ===================================================\n\n#=================================================================\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# If shared building, split compilation into some different shared libs\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Math lib\n",
        "Line" : 97,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Components lib\n",
        "Line" : 105,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Graphics lib\n",
        "Line" : 114,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "#=================================================================\n\n#=================================================================\n\n#=================================================================\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "Compile/CMakeIncludes/CMakeCheckInputParams.cmake" : {
      "ObjectId" : "e95b092e9275d117d0b56d76333bbed40f583161",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=================================================================\n\n# Include guard ==================================================\n\n#=================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=================================================================\n\n#=================================================================\n\n#=================================================================\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# BuildSharedLibs\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# CMakeBuildType\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Compile/CMakeIncludes/CMakeMacros.cmake" : {
      "ObjectId" : "1469db3dfc87a179cf0d6b7e1dbc510ee1e4d9bf",
      "LastModified" : "2019-01-11T18:33:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=================================================================\n\n# Include guard ==================================================\n\n#=================================================================\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=================================================================\n\n#=================================================================\n\n#=================================================================\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Some global vars\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#=================================================================\n\n# Macros =========================================================\n\n#=================================================================\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# When executing set these environment variables:\n\n# ASAN_OPTIONS  = \"abort_on_error=1\"\n\n# UBSAN_OPTIONS = \"print_stacktrace=1:halt_on_error=1\"\n\n# LD_PRELOAD    = /path/to/libasan.x.so\n",
        "Line" : 113,
        "CharPositionInLine" : 12
      },
      "5" : {
        "Text" : "# gperftools\n",
        "Line" : 131,
        "CharPositionInLine" : 35
      },
      "6" : {
        "Text" : "#=================================================================\n\n#=================================================================\n\n#=================================================================\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Compile/CMakeIncludes/FindMiniZip.cmake" : {
      "ObjectId" : "04fb52197ed1d746a7929710e29d58a80059c211",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find minizip\n\n# Find the native MINIZIP includes and library\n\n#\n\n#  MINIZIP_INCLUDE_DIR - where to find minizip.h, etc.\n\n#  MINIZIP_LIBRARIES   - List of libraries when using minizip.\n\n#  MINIZIP_FOUND       - True if minizip found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set MINIZIP_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Compile/CMakeIncludes/FindOggVorbis.cmake" : {
      "ObjectId" : "ce2fc42920672fc8ea4726410df5fe0f10123ee9",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### shamelessly copied from:\n\n###  http://websvn.kde.org/*checkout*/trunk/KDE/kdelibs/cmake/modules/FindOggVorbis.cmake?revision=735587\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Try to find the OggVorbis libraries\n\n# Once done this will define\n\n#\n\n#  OGGVORBIS_FOUND - system has OggVorbis\n\n#  OGGVORBIS_VERSION - set either to 1 or 2\n\n#  OGG_INCLUDE_DIR - the OggVorbis include directory\n\n#  VORBIS_INCLUDE_DIR - the OggVorbis include directory\n\n#  OGGVORBIS_LIBRARIES - The libraries needed to use OggVorbis\n\n#  OGG_LIBRARY         - The Ogg library\n\n#  VORBIS_LIBRARY      - The Vorbis library\n\n#  VORBISFILE_LIBRARY  - The VorbisFile library\n\n#  VORBISENC_LIBRARY   - The VorbisEnc library\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Copyright (c) 2006, Richard Laerkaeng, <richard@goteborg.utfors.se>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#check_include_files(vorbis/vorbisfile.h HAVE_VORBISFILE_H)\n\n#check_library_exists(ogg ogg_page_version \"\" HAVE_LIBOGG)\n\n#check_library_exists(vorbis vorbis_info_init \"\" HAVE_LIBVORBIS)\n\n#check_library_exists(vorbisfile ov_open \"\" HAVE_LIBVORBISFILE)\n\n#check_library_exists(vorbisenc vorbis_info_clear \"\" HAVE_LIBVORBISENC)\n\n#check_library_exists(vorbis vorbis_bitrate_addblock \"\" HAVE_LIBVORBISENC2)\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#if (HAVE_LIBOGG AND HAVE_VORBISFILE_H AND HAVE_LIBVORBIS AND HAVE_LIBVORBISFILE AND HAVE_LIBVORBISENC)\n\n#    message(STATUS \"Ogg/Vorbis found\")\n\n#    set (VORBIS_LIBS \"-lvorbis -logg\")\n\n#    set (VORBISFILE_LIBS \"-lvorbisfile\")\n\n#    set (VORBISENC_LIBS \"-lvorbisenc\")\n\n#    set (OGGVORBIS_FOUND TRUE)\n\n#    if (HAVE_LIBVORBISENC2)\n\n#        set (HAVE_VORBIS 2)\n\n#    else (HAVE_LIBVORBISENC2)\n\n#        set (HAVE_VORBIS 1)\n\n#    endif (HAVE_LIBVORBISENC2)\n\n#else (HAVE_LIBOGG AND HAVE_VORBISFILE_H AND HAVE_LIBVORBIS AND HAVE_LIBVORBISFILE AND HAVE_LIBVORBISENC)\n\n#    message(STATUS \"Ogg/Vorbis not found\")\n\n#endif (HAVE_LIBOGG AND HAVE_VORBISFILE_H AND HAVE_LIBVORBIS AND HAVE_LIBVORBISFILE AND HAVE_LIBVORBISENC)\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Compile/CMakeIncludes/FindSDL2.cmake" : {
      "ObjectId" : "a0c08b6357ad23ab1ca5cda6f24343f9752c9628",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate SDL2 library\n\n# This module defines\n\n# SDL2_LIBRARY, the name of the library to link against\n\n# SDL2_FOUND, if false, do not try to link to SDL2\n\n# SDL2_INCLUDE_DIR, where to find SDL.h\n\n#\n\n# This module responds to the the flag:\n\n# SDL2_BUILDING_LIBRARY\n\n# If this is defined, then no SDL2main will be linked in because\n\n# only applications need main().\n\n# Otherwise, it is assumed you are building an application and this\n\n# module will attempt to locate and set the the proper link flags\n\n# as part of the returned SDL2_LIBRARY variable.\n\n#\n\n# Don't forget to include SDLmain.h and SDLmain.m your project for the\n\n# OS X framework based version. (Other versions link to -lSDL2main which\n\n# this module will try to find on your behalf.) Also for OS X, this\n\n# module will automatically add the -framework Cocoa on your behalf.\n\n#\n\n#\n\n# Additional Note: If you see an empty SDL2_LIBRARY_TEMP in your configuration\n\n# and no SDL2_LIBRARY, it means CMake did not find your SDL2 library\n\n# (SDL2.dll, libsdl2.so, SDL2.framework, etc).\n\n# Set SDL2_LIBRARY_TEMP to point to your SDL2 library, and configure again.\n\n# Similarly, if you see an empty SDL2MAIN_LIBRARY, you should set this value\n\n# as appropriate. These values are used to generate the final SDL2_LIBRARY\n\n# variable, but when these values are unset, SDL2_LIBRARY does not get created.\n\n#\n\n#\n\n# $SDL2DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$SDL2DIR\n\n# used in building SDL2.\n\n# l.e.galup  9-20-02\n\n#\n\n# Modified by Eric Wing.\n\n# Added code to assist with automated building by using environmental variables\n\n# and providing a more controlled/consistent search behavior.\n\n# Added new modifications to recognize OS X frameworks and\n\n# additional Unix paths (FreeBSD, etc).\n\n# Also corrected the header search path to follow \"proper\" SDL guidelines.\n\n# Added a search for SDL2main which is needed by some platforms.\n\n# Added a search for threads which is needed by some platforms.\n\n# Added needed compile switches for MinGW.\n\n#\n\n# On OSX, this will prefer the Framework version (if found) over others.\n\n# People will have to manually change the cache values of\n\n# SDL2_LIBRARY to override this selection or set the CMake environment\n\n# CMAKE_INCLUDE_PATH to modify the search paths.\n\n#\n\n# Note that the header path has changed from SDL2/SDL.h to just SDL.h\n\n# This needed to change because \"proper\" SDL convention\n\n# is #include \"SDL.h\", not <SDL2/SDL.h>. This is done for portability\n\n# reasons because not all systems place things in SDL2/ (see FreeBSD).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2003-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fink\n",
        "Line" : 73,
        "CharPositionInLine" : 5
      },
      "3" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 74,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "# Blastwave\n",
        "Line" : 75,
        "CharPositionInLine" : 10
      },
      "5" : {
        "Text" : "# Non-OS X framework versions expect you to also dynamically link to\n\n# SDL2main. This is mainly for Windows and OS X. Other (Unix) platforms\n\n# seem to provide SDL2main for compatibility even though they don't\n\n# necessarily need it.\n",
        "Line" : 96,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# SDL2 may require threads on your system.\n\n# The Apple build may not need an explicit flag because one of the\n\n# frameworks may already provide it.\n\n# But for non-OSX systems, I will use the CMake Threads package.\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# MinGW needs an additional library, mwindows\n\n# It's total link flags should look like -lmingw32 -lSDL2main -lSDL2 -lmwindows\n\n# (Actually on second look, I think it only needs one of the m* libraries.)\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# For SDL2main\n",
        "Line" : 126,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# For OS X, SDL2 uses Cocoa as a backend so it must link to Cocoa.\n\n# CMake doesn't display the -framework Cocoa string in the UI even\n\n# though it actually is there if I modify a pre-used variable.\n\n# I think it has something to do with the CACHE STRING.\n\n# So I use a temporary variable until the end so I can set the\n\n# \"real\" variable in one-shot.\n",
        "Line" : 133,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# For threads, as mentioned Apple doesn't need this.\n\n# In fact, there seems to be a problem if I used the Threads package\n\n# and try using this line, so I'm just skipping it entirely for OS X.\n",
        "Line" : 143,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# For MinGW library\n",
        "Line" : 150,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# Set the final string here so the GUI reflects the final state.\n",
        "Line" : 155,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# Set the temp variable to INTERNAL so it is not seen in the CMake GUI\n",
        "Line" : 157,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 14
    },
    "Compile/CMakeIncludes/FindSDL2_ttf.cmake" : {
      "ObjectId" : "9bf9ca240ab1ab8577acaaafa78ea2a79272d8ac",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate SDL_ttf library\n\n#\n\n# This module defines:\n\n#\n\n# ::\n\n#\n\n#   SDL2_TTF_LIBRARIES, the name of the library to link against\n\n#   SDL2_TTF_INCLUDE_DIRS, where to find the headers\n\n#   SDL2_TTF_FOUND, if false, do not try to link against\n\n#   SDL2_TTF_VERSION_STRING - human-readable string containing the version of SDL_ttf\n\n#\n\n#\n\n#\n\n# For backward compatibility the following variables are also set:\n\n#\n\n# ::\n\n#\n\n#   SDLTTF_LIBRARY (same value as SDL2_TTF_LIBRARIES)\n\n#   SDLTTF_INCLUDE_DIR (same value as SDL2_TTF_INCLUDE_DIRS)\n\n#   SDLTTF_FOUND (same value as SDL2_TTF_FOUND)\n\n#\n\n#\n\n#\n\n# $SDLDIR is an environment variable that would correspond to the\n\n# ./configure --prefix=$SDLDIR used in building SDL.\n\n#\n\n# Created by Eric Wing.  This was influenced by the FindSDL.cmake\n\n# module, but with modifications to recognize OS X frameworks and\n\n# additional Unix paths (FreeBSD, etc).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2005-2009 Kitware, Inc.\n\n# Copyright 2012 Benjamin Eikel\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# path suffixes to search inside ENV{SDLDIR}\n",
        "Line" : 50,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# for backward compatibility\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Compile/CompileDependencies/CMakeLists.txt" : {
      "ObjectId" : "3682c6d75d93d93c78209b9785a8730ee63c1f32",
      "LastModified" : "2019-01-11T18:33:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=================================================================\n\n# CMake options ==================================================\n\n#=================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=================================================================\n\n#=================================================================\n\n#=================================================================\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#=================================================================\n\n# Include guard ==================================================\n\n#=================================================================\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#=================================================================\n\n#=================================================================\n\n#=================================================================\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# string(REPLACE \"-lpthread\" \"\" SDL2_LIBRARY \"${SDL2_LIBRARY}\")\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Common shared dependencies ===================\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#  \"zlib\"    PATHS ${SEARCH_LIB_PATHS})\n",
        "Line" : 84,
        "CharPositionInLine" : 39
      },
      "7" : {
        "Text" : "# PhysX\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# YAML\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# =================================================\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "Compile/CompileDependencies/ThirdParty/CMakeLists.txt" : {
      "ObjectId" : "28fcf78d936ed01dd66ecfd3eb7f75ded966dc7f",
      "LastModified" : "2019-01-11T18:33:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=================================================================\n\n# CMake options ==================================================\n\n#=================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=================================================================\n\n#=================================================================\n\n#=================================================================\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#=================================================================\n\n# Variables ======================================================\n\n#=================================================================\n\n# General\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Assimp\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Minizip\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# IRRXML (used by Assimp)\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Freetype2\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# GLEW\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# JPEG\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# PNG\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# SNDIO\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# OPENAL\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# SDL2\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# SDL2_ttf\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#=================================================================\n\n#=================================================================\n\n#=================================================================\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#=================================================================\n\n# Assimp Compile =================================================\n\n#=================================================================\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#=================================================================\n\n#=================================================================\n\n#=================================================================\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#=================================================================\n\n# MINIZIP Compile ================================================\n\n#=================================================================\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#=================================================================\n\n#=================================================================\n\n#=================================================================\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#=================================================================\n\n# IRRXML Copy when Assimp has built it ===========================\n\n#=================================================================\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#=================================================================\n\n#=================================================================\n\n#=================================================================\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#=================================================================\n\n# Freetype Compile ===============================================\n\n#=================================================================\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#=================================================================\n\n#=================================================================\n\n#=================================================================\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#=================================================================\n\n# GLEW Compile ===================================================\n\n#=================================================================\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#=================================================================\n\n#=================================================================\n\n#=================================================================\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#=================================================================\n\n# JPEG Compile ===================================================\n\n#=================================================================\n",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#=================================================================\n\n#=================================================================\n\n#=================================================================\n",
        "Line" : 281,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#=================================================================\n\n# PNG Compile ====================================================\n\n#=================================================================\n",
        "Line" : 285,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#=================================================================\n\n#=================================================================\n\n#=================================================================\n",
        "Line" : 309,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#=================================================================\n\n# SNDIO Compile =================================================\n\n#=================================================================\n",
        "Line" : 313,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#=================================================================\n\n#=================================================================\n\n#=================================================================\n",
        "Line" : 332,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#=================================================================\n\n# OPENAL Compile =================================================\n\n#=================================================================\n",
        "Line" : 336,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#=================================================================\n\n#=================================================================\n\n#=================================================================\n",
        "Line" : 358,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#=================================================================\n\n# SDL2 Compile ===================================================\n\n#=================================================================\n",
        "Line" : 362,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#=================================================================\n\n#=================================================================\n\n#=================================================================\n",
        "Line" : 388,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#=================================================================\n\n# SDL2TTF Compile ================================================\n\n#=================================================================\n",
        "Line" : 392,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#=================================================================\n\n#=================================================================\n\n#=================================================================\n",
        "Line" : 415,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#=================================================================\n\n# Create output lists ============================================\n\n#=================================================================\n",
        "Line" : 419,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#=================================================================\n\n#=================================================================\n\n#=================================================================\n",
        "Line" : 457,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#=================================================================\n\n# Copy all libraries to BANG_ENGINE_LIBRARIES_DIR ================\n\n#=================================================================\n",
        "Line" : 461,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#=================================================================\n\n#=================================================================\n\n#=================================================================\n",
        "Line" : 482,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "#=================================================================\n\n# Check Force rebuild ============================================\n\n#=================================================================\n\n# if (${FORCE_REBUILD}) # If force rebuild, remove all outputlibs\n\n#     foreach(OUTPUT_LIB_FILE ${THIRD_PARTY_LIB_PATHS})\n\n#         file(REMOVE ${OUTPUT_LIB_FILE})\n\n#     endforeach()\n\n# endif()\n\n#=================================================================\n\n#=================================================================\n\n#=================================================================\n",
        "Line" : 486,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 42
    },
    "Compile/CompileDependencies/ThirdParty/PhysX/CMakeLists.txt" : {
      "ObjectId" : "6ef871210849b1ccbd775fb272cfdaa4ed0053a1",
      "LastModified" : "2019-01-11T18:33:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -----------------------------------------------------------------------------------------------------------------------------\n\n# PROJECT\n\n# -----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -----------------------------------------------------------------------------------------------------------------------------\n\n# SUB-DIRECTORIES\n\n# -----------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Remove not needed sources\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# target_compile_options(PhysXLib PUBLIC \"-frtti\")\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# target_compile_options(PhysXLib PUBLIC \"-fdata-sections\")\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# target_compile_options(PhysXLib PUBLIC \"-fvisibility=hidden\")\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# target_compile_options(PhysXLib PUBLIC \"-ffunction-sections\")\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Compile/CompileDependencies/ThirdParty/SDL2-2.0.8/CMakeLists.txt" : {
      "ObjectId" : "8f1e828d15d64f6c3e911d2deaa914bd1f1e92b6",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# !!! FIXME: this should probably do \"MACOSX_RPATH ON\" as a target property\n\n# !!! FIXME:  for the SDL2 shared library (so you get an\n\n# !!! FIXME:  install_name (\"soname\") of \"@rpath/libSDL-whatever.dylib\"\n\n# !!! FIXME:  instead of \"/usr/local/lib/libSDL-whatever.dylib\"), but I'm\n\n# !!! FIXME:  punting for now and leaving the existing behavior. Until this\n\n# !!! FIXME:  properly resolved, this line silences a warning in CMake 3.0+.\n\n# !!! FIXME:  remove it and this comment entirely once the problem is\n\n# !!! FIXME:  properly resolved.\n\n#cmake_policy(SET CMP0042 OLD)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# General settings\n\n# Edit include/SDL_version.h and change the version, then:\n\n#   SDL_MICRO_VERSION += 1;\n\n#   SDL_INTERFACE_AGE += 1;\n\n#   SDL_BINARY_AGE += 1;\n\n# if any functions have been added, set SDL_INTERFACE_AGE to 0.\n\n# if backwards compatibility has been broken,\n\n# set SDL_BINARY_AGE and SDL_INTERFACE_AGE to 0.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set defaults preventing destination file conflicts\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Calculate a libtool-like version number\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# General settings & flags\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Check for 64 or 32 bit\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Get the platform\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# TODO: iOS?\n",
        "Line" : 119,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Don't mistake osx for unix\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# JavaScript does not yet have threading support, so disable pthreads when building for Emscripten.\n",
        "Line" : 139,
        "CharPositionInLine" : 40
      },
      "10" : {
        "Text" : "# Default option knobs\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Compiler info\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# VisualStudio 8.0+\n",
        "Line" : 162,
        "CharPositionInLine" : 34
      },
      "13" : {
        "Text" : "#set(CMAKE_C_FLAGS \"/ZI /WX- /\n",
        "Line" : 164,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Default flags, if not set otherwise\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Hackish, but does the trick on Win32\n",
        "Line" : 184,
        "CharPositionInLine" : 37
      },
      "16" : {
        "Text" : "# Make sure /RTC1 is disabled, otherwise it will use functions from the CRT\n",
        "Line" : 200,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Those are used for pkg-config and friends, so that the SDL2.pc, sdl2-config,\n\n# etc. are created correctly.\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Emscripten toolchain has a nonempty default value for this, and the checks \n\n# in this file need to change that, so remember the original value, and \n\n# restore back to that afterwards. For check_function_exists() to work in\n\n# Emscripten, this value must be at its default value.\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# We build SDL on cygwin without the UNIX emulation layer\n",
        "Line" : 220,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# General includes\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# All these ENABLED_BY_DEFAULT vars will default to ON if not specified, so\n\n#  you only need to have a platform override them if they are disabling.\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Set up default values for the currently supported set of subsystems:\n\n# Emscripten/Javascript does not have assembly support, a dynamic library \n\n# loading architecture, low-level CPU inspection or multithreading.\n",
        "Line" : 246,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "#set_option(DEPENDENCY_TRACKING \"Use gcc -MMD -MT dependency tracking\" ON)\n",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# TODO: We should (should we?) respect cmake's ${BUILD_SHARED_LIBS} flag here\n\n# The options below are for compatibility to configure's default behaviour.\n",
        "Line" : 337,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# General source files\n",
        "Line" : 345,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Do nada - use optimization settings to determine the assertion level\n",
        "Line" : 365,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Compiler option evaluation\n",
        "Line" : 379,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Check for -Wall first, so later things can override pieces of it.\n",
        "Line" : 381,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# TODO: Those all seem to be quite GCC specific - needs to be\n\n# reworked for better compiler support\n",
        "Line" : 460,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# if only HAVE_ALTIVEC_H_HDR is set\n",
        "Line" : 601,
        "CharPositionInLine" : 31
      },
      "31" : {
        "Text" : "# TODO: SDL_cpuinfo.h needs to support the user's configuration wish\n\n# for MSVC - right now it is always activated\n",
        "Line" : 610,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# TODO:\n\n#else()\n\n#  if(USE_GCC OR USE_CLANG)\n\n#    list(APPEND EXTRA_CFLAGS \"-mno-sse\" \"-mno-sse2\" \"-mno-sse3\" \"-mno-mmx\")\n\n#  endif()\n",
        "Line" : 621,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# TODO: Can't deactivate on FreeBSD? w/o LIBC, SDL_stdinc.h can't define\n\n# anything.\n",
        "Line" : 628,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# needed for M_PI\n",
        "Line" : 655,
        "CharPositionInLine" : 41
      },
      "35" : {
        "Text" : "# TODO: refine the mprotect check\n",
        "Line" : 671,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# Enable/disable various subsystems of the SDL library\n",
        "Line" : 727,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Haptic requires some private functions from the joystick subsystem.\n",
        "Line" : 740,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# TODO: in configure.in, the test for LOADSO and SDL_DLOPEN is a bit weird:\n\n# if LOADSO is not wanted, SDL_LOADSO_DISABLED is set\n\n# If however on Unix or APPLE dlopen() is detected via CheckDLOPEN(),\n\n# SDL_LOADSO_DISABLED will not be set, regardless of the LOADSO settings\n",
        "Line" : 750,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# General SDL subsystem options, valid for all platforms\n",
        "Line" : 755,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# CheckDummyAudio/CheckDiskAudio - valid for all platforms\n",
        "Line" : 757,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# Relevant for Unix/Darwin only\n",
        "Line" : 773,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# SDL_spinlock.c Needs to be compiled in ARM mode.\n\n# There seems to be no better way currently to set the ARM mode.\n\n# see: https://issuetracker.google.com/issues/62264618\n\n# Another option would be to set ARM mode to all compiled files\n",
        "Line" : 793,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# Core stuff\n",
        "Line" : 853,
        "CharPositionInLine" : 4
      },
      "44" : {
        "Text" : "#enable gles\n",
        "Line" : 860,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "# Platform-specific options and settings\n",
        "Line" : 891,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Hide noisy warnings that intend to aid mostly during initial stages of porting a new\n\n# project. Uncomment at will for verbose cross-compiling -I/../ path info.\n",
        "Line" : 893,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "#enable gles\n",
        "Line" : 936,
        "CharPositionInLine" : 4
      },
      "48" : {
        "Text" : "# Need to check for Raspberry PI first and add platform specific compiler flags, otherwise the test for GLES fails!\n",
        "Line" : 975,
        "CharPositionInLine" : 4
      },
      "49" : {
        "Text" : "# seems to be BSD specific - limit the test to BSD only?\n",
        "Line" : 1061,
        "CharPositionInLine" : 20
      },
      "50" : {
        "Text" : "# Prevent codegen that would use the VC runtime libraries.\n",
        "Line" : 1142,
        "CharPositionInLine" : 4
      },
      "51" : {
        "Text" : "# Check for DirectX\n",
        "Line" : 1149,
        "CharPositionInLine" : 2
      },
      "52" : {
        "Text" : "# xinput.h may need windows.h, but doesn't include it itself.\n",
        "Line" : 1162,
        "CharPositionInLine" : 6
      },
      "53" : {
        "Text" : "# TODO: change $ENV{DXSDL_DIR} to get the path from the include checks\n",
        "Line" : 1192,
        "CharPositionInLine" : 6
      },
      "54" : {
        "Text" : "# requires SDL_LOADSO on Windows (IME, DX, etc.)\n",
        "Line" : 1220,
        "CharPositionInLine" : 4
      },
      "55" : {
        "Text" : "# Libraries for Win32 native and MinGW\n",
        "Line" : 1263,
        "CharPositionInLine" : 2
      },
      "56" : {
        "Text" : "# TODO: in configure.in the check for timers is set on\n\n# cygwin | mingw32* - does this include mingw32CE?\n",
        "Line" : 1266,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "# TODO: rework this all for proper MacOS X, iOS and Darwin support\n",
        "Line" : 1348,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# We always need these libs on macOS at the moment.\n\n# !!! FIXME: we need Carbon for some very old API calls in\n\n# !!! FIXME:  src/video/cocoa/SDL_cocoakeyboard.c, but we should figure out\n\n# !!! FIXME:  how to dump those.\n",
        "Line" : 1350,
        "CharPositionInLine" : 2
      },
      "59" : {
        "Text" : "# Requires the darwin file implementation\n",
        "Line" : 1359,
        "CharPositionInLine" : 2
      },
      "60" : {
        "Text" : "# !!! FIXME: modern CMake doesn't need \"LANGUAGE C\" for Objective-C.\n",
        "Line" : 1363,
        "CharPositionInLine" : 4
      },
      "61" : {
        "Text" : "# !!! FIXME: why is COREVIDEO inside this if() block?\n",
        "Line" : 1366,
        "CharPositionInLine" : 4
      },
      "62" : {
        "Text" : "# !!! FIXME: modern CMake doesn't need \"LANGUAGE C\" for Objective-C.\n",
        "Line" : 1375,
        "CharPositionInLine" : 4
      },
      "63" : {
        "Text" : "# !!! FIXME: modern CMake doesn't need \"LANGUAGE C\" for Objective-C.\n",
        "Line" : 1435,
        "CharPositionInLine" : 4
      },
      "64" : {
        "Text" : "# Actually load the frameworks at the end so we don't duplicate include.\n",
        "Line" : 1441,
        "CharPositionInLine" : 2
      },
      "65" : {
        "Text" : "# iOS hack needed - http://code.google.com/p/ios-cmake/ ?\n",
        "Line" : 1471,
        "CharPositionInLine" : 2
      },
      "66" : {
        "Text" : "# TODO: Use FIND_PACKAGE(OpenGL) instead\n",
        "Line" : 1516,
        "CharPositionInLine" : 6
      },
      "67" : {
        "Text" : "# Dummies\n\n# configure.in does it differently:\n\n# if not have X\n\n#   if enable_X {  SDL_X_DISABLED = 1 }\n\n#   [add dummy sources]\n\n# so it always adds a dummy, without checking, if it was actually requested.\n\n# This leads to missing internal references on building, since the\n\n# src/X/*.c does not get included.\n",
        "Line" : 1532,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# results in unresolved symbols on OSX\n",
        "Line" : 1542,
        "CharPositionInLine" : 33
      },
      "69" : {
        "Text" : "# We always need to have threads and timers around\n",
        "Line" : 1564,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# Append the -MMD -MT flags\n\n# if(DEPENDENCY_TRACKING)\n\n#   if(COMPILER_IS_GNUCC)\n\n#     set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -MMD -MT \\$@\")\n\n#   endif()\n\n# endif()\n",
        "Line" : 1580,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Prepare the flags and remove duplicates\n",
        "Line" : 1590,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# Compat helpers for the configuration files\n",
        "Line" : 1603,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# TODO: we need a Windows script, too\n",
        "Line" : 1605,
        "CharPositionInLine" : 2
      },
      "74" : {
        "Text" : "# Clean up the different lists\n",
        "Line" : 1628,
        "CharPositionInLine" : 2
      },
      "75" : {
        "Text" : "# MESSAGE(STATUS \"SDL_LIBS: ${SDL_LIBS}\")\n\n# MESSAGE(STATUS \"SDL_STATIC_LIBS: ${SDL_STATIC_LIBS}\")\n",
        "Line" : 1637,
        "CharPositionInLine" : 2
      },
      "76" : {
        "Text" : "##### Info output #####\n",
        "Line" : 1650,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# Longest option is VIDEO_X11_XSCREENSAVER = 22 characters\n\n# Get the padding\n",
        "Line" : 1667,
        "CharPositionInLine" : 2
      },
      "78" : {
        "Text" : "# Ensure that the extra cflags are used at compile time\n",
        "Line" : 1693,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# Always build SDLmain\n",
        "Line" : 1696,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# Don't try to link with the default set of libraries.\n",
        "Line" : 1720,
        "CharPositionInLine" : 4
      },
      "81" : {
        "Text" : "# Note: Apparently, OUTPUT_NAME must really be unique; even when\n\n# CMAKE_IMPORT_LIBRARY_SUFFIX or the like are given. Otherwise\n\n# the static build may race with the import lib and one will get\n\n# clobbered, when the suffix is realized via subsequent rename.\n",
        "Line" : 1738,
        "CharPositionInLine" : 4
      },
      "82" : {
        "Text" : "# TODO: Win32 platforms keep the same suffix .lib for import and static\n\n# libraries - do we need to consider this?\n",
        "Line" : 1749,
        "CharPositionInLine" : 2
      },
      "83" : {
        "Text" : "##### Tests #####\n",
        "Line" : 1759,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "##### Installation targets #####\n",
        "Line" : 1768,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "##### Export files #####\n",
        "Line" : 1774,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# FreeBSD uses ${PREFIX}/libdata/pkgconfig\n",
        "Line" : 1826,
        "CharPositionInLine" : 4
      },
      "87" : {
        "Text" : "# TODO: what about the .spec file? Is it only needed for RPM creation?\n",
        "Line" : 1833,
        "CharPositionInLine" : 2
      },
      "88" : {
        "Text" : "##### Uninstall target #####\n",
        "Line" : 1837,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 89
    },
    "Compile/CompileDependencies/ThirdParty/SDL2-2.0.8/SDL2Config.cmake" : {
      "ObjectId" : "4a5f646020ef4c415e082c799932104c37ddaa3a",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/SDL2-2.0.8/android-project/app/proguard-rules.pro" : {
      "ObjectId" : "eaf0e916cdf0b2a92e4ad3c261f620b2f0f50dbb",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# By default, the flags in this file are appended to flags specified\n\n# in [sdk]/tools/proguard/proguard-android.txt\n\n# You can edit the include path and order by changing the proguardFiles\n\n# directive in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add any project specific keep options here:\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Compile/CompileDependencies/ThirdParty/SDL2-2.0.8/cmake/macros.cmake" : {
      "ObjectId" : "96a7ce8b1406692acaf32a25d9c864da3f94cb45",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Message Output\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# prefix for each element\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Do not use string(REPLACE \";\" \" \") here to avoid messing up list\n\n# entries\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "Compile/CompileDependencies/ThirdParty/SDL2-2.0.8/cmake/sdlchecks.cmake" : {
      "ObjectId" : "b822c7a560efaf084df7c01f769c32843daabd53",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# reduce the library name for shared linking\n",
        "Line" : 7,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# resolves symlinks\n",
        "Line" : 9,
        "CharPositionInLine" : 69
      },
      "2" : {
        "Text" : "# Requires:\n\n# - n/a\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Requires:\n\n# - n/a\n\n# Optional:\n\n# - ALSA_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Requires:\n\n# - PkgCheckModules\n\n# Optional:\n\n# - PULSEAUDIO_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Requires:\n\n# - PkgCheckModules\n\n# Optional:\n\n# - JACK_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Requires:\n\n# - PkgCheckModules\n\n# Optional:\n\n# - ESD_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Requires:\n\n# - n/a\n\n# Optional:\n\n# - ARTS_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# TODO\n",
        "Line" : 243,
        "CharPositionInLine" : 10
      },
      "9" : {
        "Text" : "# Requires:\n\n# - n/a\n\n# Optional:\n\n# - NAS_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# TODO: set include paths properly, so the NAS headers are found\n",
        "Line" : 263,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Requires:\n\n# - n/a\n\n# Optional:\n\n# - SNDIO_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 287,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# TODO: set include paths properly, so the sndio headers are found\n",
        "Line" : 294,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Requires:\n\n# - PkgCheckModules\n\n# Optional:\n\n# - FUSIONSOUND_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 318,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Requires:\n\n# - LIBSAMPLERATE\n\n# Optional:\n\n# - LIBSAMPLERATE_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 348,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Requires:\n\n# - n/a\n\n# Optional:\n\n# - X11_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 373,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Check for multitouch\n",
        "Line" : 500,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# Requires:\n\n# - EGL\n\n# - PkgCheckModules\n\n# Optional:\n\n# - MIR_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 557,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Requires:\n\n# - EGL\n\n# - PkgCheckModules\n\n# Optional:\n\n# - WAYLAND_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 618,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# We have to generate some protocol interface code for some various Wayland features.\n",
        "Line" : 628,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# We have to generate some protocol interface code for some unstable Wayland features.\n",
        "Line" : 684,
        "CharPositionInLine" : 6
      },
      "21" : {
        "Text" : "# Requires:\n\n# - n/a\n\n#\n",
        "Line" : 722,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Apple always has Cocoa.\n",
        "Line" : 727,
        "CharPositionInLine" : 14
      },
      "23" : {
        "Text" : "# Requires:\n\n# - PkgCheckModules\n\n# Optional:\n\n# - DIRECTFB_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 740,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Requires:\n\n# - n/a\n",
        "Line" : 771,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Requires:\n\n# - nada\n",
        "Line" : 801,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Requires:\n\n# - nada\n",
        "Line" : 819,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Requires:\n\n# - nada\n\n# Optional:\n\n# - THREADS opt\n\n# Sets:\n\n# PTHREAD_CFLAGS\n\n# PTHREAD_LIBS\n",
        "Line" : 852,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# the android libc provides built-in support for pthreads, so no\n\n# additional linking or compile flags are necessary\n",
        "Line" : 862,
        "CharPositionInLine" : 6
      },
      "29" : {
        "Text" : "# causes Carbon.p complaints?\n\n# set(PTHREAD_CFLAGS \"-D_REENTRANT -D_THREAD_SAFE\")\n",
        "Line" : 872,
        "CharPositionInLine" : 6
      },
      "30" : {
        "Text" : "# Run some tests\n",
        "Line" : 904,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# Can be faked, if necessary\n\n# Can be faked, if necessary\n",
        "Line" : 971,
        "CharPositionInLine" : 65
      },
      "32" : {
        "Text" : "# Requires\n\n# - nada\n\n# Optional:\n\n# Sets:\n\n# USB_LIBS\n\n# USB_CFLAGS\n",
        "Line" : 988,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Requires:\n\n# - n/a\n",
        "Line" : 1128,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Requires:\n\n# - EGL\n\n# - PkgCheckModules\n\n# Optional:\n\n# - KMSDRM_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 1163,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 35
    },
    "Compile/CompileDependencies/ThirdParty/SDL2-2.0.8/include/SDL_config.h.cmake" : {
      "ObjectId" : "a8d230c46574ef7aac8feb6442907e43519d0c98",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/*\n  Simple DirectMedia Layer\n  Copyright (C) 1997-2018 Sam Lantinga <slouken@libsdl.org>\n\n  This software is provided 'as-is', without any express or implied\n  warranty.  In no event will the authors be held liable for any damages\n  arising from the use of this software.\n\n  Permission is granted to anyone to use this software for any purpose,\n  including commercial applications, and to alter it and redistribute it\n  freely, subject to the following restrictions:\n\n  1. The origin of this software must not be misrepresented; you must not\n     claim that you wrote the original software. If you use this software\n     in a product, an acknowledgment in the product documentation would be\n     appreciated but is not required.\n  2. Altered source versions must be plainly marked as such, and must not be\n     misrepresented as being the original software.\n  3. This notice may not be removed or altered from any source distribution.\n*/",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/**\n *  \\file SDL_config.h.in\n *\n *  This is a set of defines to configure the SDL features\n */",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/* General platform specific identifiers */",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* C language features */",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* C datatypes */\n/* Define SIZEOF_VOIDP for 64/32 architectures */",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* Comment this if you want to build without any C library requirements */",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/* Useful headers */",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/* C library functions */",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "/* We may need some replacement for stdarg.h here */",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "/* SDL internal assertion support */",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "/* Allow disabling of core subsystems */",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "/* Enable various audio drivers */",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "/* Enable various input drivers */",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "/* Enable various shared object loading systems */",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "/* Enable various threading systems */",
        "Line" : 294,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "/* Enable various timer systems */",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "/* Enable various video drivers */",
        "Line" : 307,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "/* Enable OpenGL support */",
        "Line" : 364,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "/* Enable Vulkan support */",
        "Line" : 376,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "/* Enable system power support */",
        "Line" : 379,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "/* Enable system filesystem support */",
        "Line" : 388,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "/* Enable assembly routines */",
        "Line" : 397,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "/* Enable dynamic libsamplerate support */",
        "Line" : 401,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "/* Platform specific definitions */",
        "Line" : 404,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "/* Older Visual C++ headers don't have the Win64-compatible typedefs... */",
        "Line" : 439,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "Compile/CompileDependencies/ThirdParty/SDL2_ttf-2.0.14/Makefile.am" : {
      "ObjectId" : "8166d9141820cf7705f03f6bb7efde177d024060",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Makefile.am for the SDL truetype font loading library and viewer\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Rule to build tar-gzipped distribution package\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Rule to build RPM distribution package\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Compile/CompileDependencies/ThirdParty/alsa-lib-1.1.4/Makefile.am" : {
      "ObjectId" : "52f7654ac0a7f306c1eef42bcc7b1c048412ed7c",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/alsa-lib-1.1.4/alsalisp/Makefile.am" : {
      "ObjectId" : "8e3e0159c0ee01d1b1288c89f8696e7c6f3e93a4",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/alsa-lib-1.1.4/aserver/Makefile.am" : {
      "ObjectId" : "fbdb94cf94029634d53e76d59baa36ac785ab079",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# aserver_LDADD = -lasound\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Compile/CompileDependencies/ThirdParty/alsa-lib-1.1.4/doc/Makefile.am" : {
      "ObjectId" : "e087f42449a568fd28adec25818ab471e842d3f7",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/alsa-lib-1.1.4/doc/pictures/Makefile.am" : {
      "ObjectId" : "17b6e12dccd0bf28bca7a7019110ce167608f8fb",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/alsa-lib-1.1.4/include/Makefile.am" : {
      "ObjectId" : "67f32e36c91170f2623a22c0402189aacb6f3d8b",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/alsa-lib-1.1.4/include/sound/Makefile.am" : {
      "ObjectId" : "b659985e7e36212047192212deb6bfdf5ab6d84f",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/alsa-lib-1.1.4/modules/Makefile.am" : {
      "ObjectId" : "bf9543e936c9e5d19541207edbfdc7f473ff1dd9",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/alsa-lib-1.1.4/modules/mixer/Makefile.am" : {
      "ObjectId" : "9f5917fee751bb5d278a09ea206d87ddba7d624d",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/alsa-lib-1.1.4/modules/mixer/simple/Makefile.am" : {
      "ObjectId" : "c21dd07d518025484004650d5b1829e2e598c53d",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/alsa-lib-1.1.4/src/Makefile.am" : {
      "ObjectId" : "57686a612fd8abddf4250950b8bf1d9c69db1778",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/alsa-lib-1.1.4/src/alisp/Makefile.am" : {
      "ObjectId" : "1234e111e3884ba7514f013c26762030a227d237",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/alsa-lib-1.1.4/src/conf/Makefile.am" : {
      "ObjectId" : "4f3266259087959f14f7395e53803b44479b67ce",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/alsa-lib-1.1.4/src/conf/alsa.conf.d/Makefile.am" : {
      "ObjectId" : "c91661e99143dd9b8fecbde9d569aedff8f10e7b",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/alsa-lib-1.1.4/src/conf/cards/Makefile.am" : {
      "ObjectId" : "00999f0186d6616d8c87ad2d876868471fc0634c",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/alsa-lib-1.1.4/src/conf/pcm/Makefile.am" : {
      "ObjectId" : "c548660d169657d8d61a09f83fdaf9b19dc350dd",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/alsa-lib-1.1.4/src/conf/topology/Makefile.am" : {
      "ObjectId" : "8adaed903053542bc06bd01703490c65d45c216f",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/alsa-lib-1.1.4/src/conf/topology/broadwell/Makefile.am" : {
      "ObjectId" : "35d1e83cb64534b42a8c3e3bfba8d787ce1df543",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/alsa-lib-1.1.4/src/conf/topology/bxtrt298/Makefile.am" : {
      "ObjectId" : "152d5cff4fc4a2220dd8b279bf83bf5a4a82860d",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/alsa-lib-1.1.4/src/conf/topology/sklrt286/Makefile.am" : {
      "ObjectId" : "2cbfd0595a2a76af0ab707ff0f9718657d6a02e6",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/alsa-lib-1.1.4/src/conf/ucm/DAISY-I2S/Makefile.am" : {
      "ObjectId" : "1a0160aab7bcc8cda97f7ffd2d657404614dae63",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/alsa-lib-1.1.4/src/conf/ucm/DB410c/Makefile.am" : {
      "ObjectId" : "e10a1363dc3206096e7c93143bd3925c8af89bd6",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/alsa-lib-1.1.4/src/conf/ucm/GoogleNyan/Makefile.am" : {
      "ObjectId" : "47c7fc9d797603cdb848dad0a6c197351106bcf4",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/alsa-lib-1.1.4/src/conf/ucm/Makefile.am" : {
      "ObjectId" : "ea9b3850e2dd48a40377bd5f102332bc5585510f",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/alsa-lib-1.1.4/src/conf/ucm/PAZ00/Makefile.am" : {
      "ObjectId" : "1bf98a67515fba526312d8e7d39ba768dfdf20dd",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/alsa-lib-1.1.4/src/conf/ucm/PandaBoard/Makefile.am" : {
      "ObjectId" : "1693d07819cc3e992e1243b285d2bedf96b5137e",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/alsa-lib-1.1.4/src/conf/ucm/PandaBoardES/Makefile.am" : {
      "ObjectId" : "6413fc735d166a5627a41690108ed285eaea2d61",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/alsa-lib-1.1.4/src/conf/ucm/SDP4430/Makefile.am" : {
      "ObjectId" : "ca8340dd5eff8539e124f8535b7887eb77a1380b",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/alsa-lib-1.1.4/src/conf/ucm/VEYRON-I2S/Makefile.am" : {
      "ObjectId" : "2bb628e24be92f3bacf474b642c786bd8c076712",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/alsa-lib-1.1.4/src/conf/ucm/broadwell-rt286/Makefile.am" : {
      "ObjectId" : "73861faaf7a6a3549c92894c8d2d55a166a2a23c",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/alsa-lib-1.1.4/src/conf/ucm/broxton-rt298/Makefile.am" : {
      "ObjectId" : "80f480ec422226515d9f2e8016865abbec3ce7e4",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/alsa-lib-1.1.4/src/conf/ucm/chtrt5645/Makefile.am" : {
      "ObjectId" : "b3a82f598caf9b697a16f3aaee619ace4348be7b",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/alsa-lib-1.1.4/src/conf/ucm/skylake-rt286/Makefile.am" : {
      "ObjectId" : "9d6a85a5bdcf66d40803458db1d06576c6b3eabc",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/alsa-lib-1.1.4/src/conf/ucm/tegraalc5632/Makefile.am" : {
      "ObjectId" : "c0f451eff652c8dc6f0e6bfa2175a52e2e356ec4",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/alsa-lib-1.1.4/src/control/Makefile.am" : {
      "ObjectId" : "3d476a210e6ee2c499b197472765e9a1325c9346",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/alsa-lib-1.1.4/src/hwdep/Makefile.am" : {
      "ObjectId" : "b543e581e47366bb98ee25b646fb0d69863bda9a",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/alsa-lib-1.1.4/src/mixer/Makefile.am" : {
      "ObjectId" : "6eeff8af459a7777a894247efd760a9c8c2d7a49",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/alsa-lib-1.1.4/src/pcm/Makefile.am" : {
      "ObjectId" : "8edbd0b5c719810434c06019873148819f72baa8",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/alsa-lib-1.1.4/src/pcm/scopes/Makefile.am" : {
      "ObjectId" : "0ce845d1819d8b1e5c52375930cdc660b7e23d49",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/alsa-lib-1.1.4/src/rawmidi/Makefile.am" : {
      "ObjectId" : "41858a1fb07e3d2d40f6e316f332664b9eadf722",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/alsa-lib-1.1.4/src/seq/Makefile.am" : {
      "ObjectId" : "6cefe3970f4a3f06924653f1ca639f6594533226",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/alsa-lib-1.1.4/src/timer/Makefile.am" : {
      "ObjectId" : "7cfbe455af561f5801ff6db87d39d8b8883c8553",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/alsa-lib-1.1.4/src/topology/Makefile.am" : {
      "ObjectId" : "3fb8bf7a929074ea341ccd33ffbfb66cb5fc18b8",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/alsa-lib-1.1.4/src/ucm/Makefile.am" : {
      "ObjectId" : "9d66b24439c290544808d8a4db68807abf882d20",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/alsa-lib-1.1.4/test/Makefile.am" : {
      "ObjectId" : "5f35159af2d64c12e5d394cff884765808d38e5b",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/alsa-lib-1.1.4/test/lsb/Makefile.am" : {
      "ObjectId" : "ceb4d7150066dff84c906663208d6edfd6976f82",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/alsa-lib-1.1.4/utils/Makefile.am" : {
      "ObjectId" : "7220c02029f4ce5dd2834b1ca26cf7cb819d57cc",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/assimp/CMakeLists.txt" : {
      "ObjectId" : "dea5917fd781a51a0440457fe2d38d8e5db7bc84",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Open Asset Import Library (assimp)\n\n# ----------------------------------------------------------------------\n\n# Copyright (c) 2006-2017, assimp team\n\n# All rights reserved.\n\n#\n\n# Redistribution and use of this software in source and binary forms,\n\n# with or without modification, are permitted provided that the\n\n# following conditions are met:\n\n#\n\n# * Redistributions of source code must retain the above\n\n#   copyright notice, this list of conditions and the\n\n#   following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above\n\n#   copyright notice, this list of conditions and the\n\n#   following disclaimer in the documentation and/or other\n\n#   materials provided with the distribution.\n\n#\n\n# * Neither the name of the assimp team, nor the names of its\n\n#   contributors may be used to endorse or promote products\n\n#   derived from this software without specific prior\n\n#   written permission of the assimp team.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#----------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Remove when CMake >= 2.8.4 is required\n",
        "Line" : 36,
        "CharPositionInLine" : 33
      },
      "2" : {
        "Text" : "# All supported options ###############################################\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Define here the needed parameters\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Needed for openddl_parser config, no use of c++11 at this moment\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Get the current working branch\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Get the latest abbreviated commit hash of the working branch\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Ensure that we do not run into issues like http://www.tcm.phy.cam.ac.uk/sw/inodes64.html on 32 bit linux\n",
        "Line" : 194,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# only necessary for 32-bit linux\n",
        "Line" : 197,
        "CharPositionInLine" : 38
      },
      "9" : {
        "Text" : "#ADD_DEFINITIONS(-D_FILE_OFFSET_BITS=64 )\n",
        "Line" : 198,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# Use GNUInstallDirs for Unix predefined directories\n",
        "Line" : 202,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Grouped compiler settings\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# hide all not-exported symbols\n",
        "Line" : 209,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Modified by Bang\n",
        "Line" : 210,
        "CharPositionInLine" : 91
      },
      "14" : {
        "Text" : "# SET(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -g -fvisibility=hidden -fPIC -Wall -std=c++0x\")\n",
        "Line" : 211,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# enable multi-core compilation with MSVC\n",
        "Line" : 215,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# disable \"elements of array '' will be default initialized\" warning on MSVC2013\n",
        "Line" : 218,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# If this is an in-source build (CMAKE_SOURCE_DIR == CMAKE_BINARY_DIR),\n\n# write the library/executable files to the respective directories in the\n\n# source tree. During an out-of-source build, however, do not litter this\n\n# directory, since that is probably what the user wanted to avoid.\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Cache these to allow the user to override them manually.\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Only generate this target if no higher-level project already has\n",
        "Line" : 287,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# add make uninstall capability\n",
        "Line" : 289,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# cmake configuration files\n",
        "Line" : 294,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Look for system installed irrXML\n",
        "Line" : 305,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Search for external dependencies, and build them from source if not found\n\n# Search for zlib\n",
        "Line" : 310,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# compile from sources\n",
        "Line" : 321,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Search for unzip\n",
        "Line" : 332,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# ${CMAKE_GENERATOR}\n",
        "Line" : 348,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# pick the correct prebuilt library\n",
        "Line" : 367,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# winsock and winmm are necessary dependencies of melange (this is undocumented, but true.)\n",
        "Line" : 393,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# Check dependencies for assimp_qt_viewer.\n\n# Why here? Maybe user do not want Qt viewer and have no Qt.\n\n# Why assimp_qt_viewer/CMakeLists.txt still contain similar check?\n\n# Because viewer can be build independently of Assimp.\n",
        "Line" : 417,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# Generate a pkg-config .pc for the Assimp library.\n",
        "Line" : 455,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Packing information\n",
        "Line" : 460,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# debian\n",
        "Line" : 485,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 33
    },
    "Compile/CompileDependencies/ThirdParty/assimp/cmake-modules/Coveralls.cmake" : {
      "ObjectId" : "5343f1583c176f41c197667f7419935745912a6a",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# The MIT License (MIT)\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n\n#\n\n# Copyright (C) 2014 Joakim Söderberg <joakim.soderberg@gmail.com>\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# must be outside coveralls_setup() to get correct path\n",
        "Line" : 25,
        "CharPositionInLine" : 50
      },
      "2" : {
        "Text" : "#\n\n# Param _COVERAGE_SRCS\tA list of source files that coverage should be collected for.\n\n# Param _COVERALLS_UPLOAD Upload the result to coveralls?\n\n#\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# When passing a CMake list to an external process, the list\n\n# will be converted from the format \"1;2;3\" to \"1 2 3\".\n\n# This means the script we're calling won't see it as a list\n\n# of sources, but rather just one long path. We remedy this\n\n# by replacing \";\" with \"*\" and then reversing that in the script\n\n# that we're calling.\n\n# http://cmake.3232098.n2.nabble.com/Passing-a-CMake-list-quot-as-is-quot-to-a-custom-target-td6505681.html\n",
        "Line" : 47,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "#message(\"Coverage sources: ${COVERAGE_SRCS}\")\n",
        "Line" : 60,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Zero the coverage counters.\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Run regress tests.\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Generate Gcov and translate it into coveralls JSON.\n\n# We do this by executing an external CMake script.\n\n# (We don't want this to run at CMake generation time, but after compilation and everything has run).\n",
        "Line" : 71,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# TODO: This is passed like: \"a b c\", not \"a;b;c\"\n",
        "Line" : 75,
        "CharPositionInLine" : 39
      },
      "9" : {
        "Text" : "# Upload the JSON to coveralls.\n",
        "Line" : 95,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 10
    },
    "Compile/CompileDependencies/ThirdParty/assimp/cmake-modules/CoverallsClear.cmake" : {
      "ObjectId" : "a9ad487630513df789ffcfec5ac058361e21fccb",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# The MIT License (MIT)\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n\n#\n\n# Copyright (C) 2014 Joakim Söderberg <joakim.soderberg@gmail.com>\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# do not follow symlinks in file(GLOB_RECURSE ...)\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Compile/CompileDependencies/ThirdParty/assimp/cmake-modules/CoverallsGenerateGcov.cmake" : {
      "ObjectId" : "1047371642ca0eed4f16c31d510aaeb489ab0427",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# The MIT License (MIT)\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n\n#\n\n# Copyright (C) 2014 Joakim Söderberg <joakim.soderberg@gmail.com>\n\n#\n\n# This is intended to be run by a custom target in a CMake project like this.\n\n# 0. Compile program with coverage support.\n\n# 1. Clear coverage data. (Recursively delete *.gcda in build dir)\n\n# 2. Run the unit tests.\n\n# 3. Run this script specifying which source files the coverage should be performed on.\n\n#\n\n# This script will then use gcov to generate .gcov files in the directory specified\n\n# via the COV_PATH var. This should probably be the same as your cmake build dir.\n\n#\n\n# It then parses the .gcov files to convert them into the Coveralls JSON format:\n\n# https://coveralls.io/docs/api\n\n#\n\n# Example for running as standalone CMake script from the command line:\n\n# (Note it is important the -P is at the end...)\n\n# $ cmake -DCOV_PATH=$(pwd)\n\n#         -DCOVERAGE_SRCS=\"catcierge_rfid.c;catcierge_timer.c\"\n\n#         -P ../cmake/CoverallsGcovUpload.cmake\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Make sure we have the needed arguments.\n\n#\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Since it's not possible to pass a CMake list properly in the\n\n# \"1;2;3\" format to an external process, we have replaced the\n\n# \";\" with \"*\", so reverse that here so we get it back into the\n\n# CMake list format.\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# convert all paths in COVERAGE_SRCS to absolute paths\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# TODO: Fill in git remote data\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Branch.\n",
        "Line" : 110,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "############################# Macros #########################################\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# This macro converts from the full path format gcov outputs:\n\n#\n\n#    /path/to/project/root/build/#path#to#project#root#subdir#the_file.c.gcov\n\n#\n\n# to the original source file path the .gcov is for:\n\n#\n\n#   /path/to/project/root/subdir/the_file.c\n\n#\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# /path/to/project/root/build/#path#to#project#root#subdir#the_file.c.gcov\n\n# ->\n\n# #path#to#project#root#subdir#the_file.c.gcov\n",
        "Line" : 165,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# #path#to#project#root#subdir#the_file.c.gcov -> /path/to/project/root/subdir/the_file.c\n",
        "Line" : 170,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "##############################################################################\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Get the coverage data.\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Get a list of all the object directories needed by gcov\n\n# (The directories the .gcda files and .o files are found in)\n\n# and run gcov on those.\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#\n\n# The -p below refers to \"Preserve path components\",\n\n# This means that the generated gcov filename of a source file will\n\n# keep the original files entire filepath, but / is replaced with #.\n\n# Example:\n\n#\n\n# /path/to/project/root/build/CMakeFiles/the_file.dir/subdir/the_file.c.gcda\n\n# ------------------------------------------------------------------------------\n\n# File '/path/to/project/root/subdir/the_file.c'\n\n# Lines executed:68.34% of 199\n\n# /path/to/project/root/subdir/the_file.c:creating '#path#to#project#root#subdir#the_file.c.gcov'\n\n#\n\n# If -p is not specified then the file is named only \"the_file.c.gcov\"\n\n#\n",
        "Line" : 190,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# TODO: Make these be absolute path\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Get only the filenames to use for filtering.\n\n#set(COVERAGE_SRCS_NAMES \"\")\n\n#foreach (COVSRC ${COVERAGE_SRCS})\n\n#\tget_filename_component(COVSRC_NAME ${COVSRC} NAME)\n\n#\tmessage(\"${COVSRC} -> ${COVSRC_NAME}\")\n\n#\tlist(APPEND COVERAGE_SRCS_NAMES \"${COVSRC_NAME}\")\n\n#endforeach()\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#\n\n# Filter out all but the gcov files we want.\n\n#\n\n# We do this by comparing the list of COVERAGE_SRCS filepaths that the\n\n# user wants the coverage data for with the paths of the generated .gcov files,\n\n# so that we only keep the relevant gcov files.\n\n#\n\n# Example:\n\n# COVERAGE_SRCS =\n\n#\t\t\t\t/path/to/project/root/subdir/the_file.c\n\n#\n\n# ALL_GCOV_FILES =\n\n#\t\t\t\t/path/to/project/root/build/#path#to#project#root#subdir#the_file.c.gcov\n\n#\t\t\t\t/path/to/project/root/build/#path#to#project#root#subdir#other_file.c.gcov\n\n#\n\n# Result should be:\n\n# GCOV_FILES =\n\n#\t\t\t\t/path/to/project/root/build/#path#to#project#root#subdir#the_file.c.gcov\n\n#\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#message(\"Look in coverage sources: ${COVERAGE_SRCS}\")\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#\n\n# /path/to/project/root/build/#path#to#project#root#subdir#the_file.c.gcov\n\n# ->\n\n# /path/to/project/root/subdir/the_file.c\n",
        "Line" : 249,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "# Is this in the list of source files?\n\n# TODO: We want to match against relative path filenames from the source file root...\n",
        "Line" : 256,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "# We remove it from the list, so we don't bother searching for it again.\n\n# Also files left in COVERAGE_SRCS_REMAINING after this loop ends should\n\n# have coverage data generated from them (no lines are covered).\n",
        "Line" : 264,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# TODO: Enable setting these\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Read the GCOV files line by line and get the coverage data.\n",
        "Line" : 301,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# The new coveralls API doesn't need the entire source (Yay!)\n\n# However, still keeping that part for now. Will cleanup in the future.\n",
        "Line" : 307,
        "CharPositionInLine" : 1
      },
      "24" : {
        "Text" : "# Loads the gcov file as a list of lines.\n\n# (We first open the file and replace all occurrences of [] with _\n\n#  because CMake will fail to parse a line containing unmatched brackets...\n\n#  also the \\ to escaped \\n in macros screws up things.)\n\n# https://public.kitware.com/Bug/view.php?id=15369\n",
        "Line" : 312,
        "CharPositionInLine" : 1
      },
      "25" : {
        "Text" : "# Remove file contents to avoid encoding issues (cmake 2.8 has no ENCODING option)\n",
        "Line" : 322,
        "CharPositionInLine" : 1
      },
      "26" : {
        "Text" : "# Instead of trying to parse the source from the\n\n# gcov file, simply read the file contents from the source file.\n\n# (Parsing it from the gcov is hard because C-code uses ; in many places\n\n#  which also happens to be the same as the CMake list delimiter).\n",
        "Line" : 329,
        "CharPositionInLine" : 1
      },
      "27" : {
        "Text" : "# According to http://json.org/ these should be escaped as well.\n\n# Don't know how to do that in CMake however...\n\n#string(REPLACE \"\\b\" \"\\\\\\\\b\" GCOV_FILE_SOURCE \"${GCOV_FILE_SOURCE}\")\n\n#string(REPLACE \"\\f\" \"\\\\\\\\f\" GCOV_FILE_SOURCE \"${GCOV_FILE_SOURCE}\")\n\n#string(REGEX REPLACE \"\\u([a-fA-F0-9]{4})\" \"\\\\\\\\u\\\\1\" GCOV_FILE_SOURCE \"${GCOV_FILE_SOURCE}\")\n",
        "Line" : 340,
        "CharPositionInLine" : 1
      },
      "28" : {
        "Text" : "# We want a json array of coverage data as a single string\n\n# start building them from the contents of the .gcov\n",
        "Line" : 346,
        "CharPositionInLine" : 1
      },
      "29" : {
        "Text" : "# Line number for the .gcov.\n",
        "Line" : 350,
        "CharPositionInLine" : 24
      },
      "30" : {
        "Text" : "#message(\"${GCOV_LINE}\")\n\n# Example of what we're parsing:\n\n# Hitcount  |Line | Source\n\n# \"        8:   26:        if (!allowed || (strlen(allowed) == 0))\"\n",
        "Line" : 353,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# Check if we should exclude lines using the Lcov syntax.\n",
        "Line" : 363,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# Lines with 0 line numbers are metadata and can be ignored.\n",
        "Line" : 393,
        "CharPositionInLine" : 3
      },
      "33" : {
        "Text" : "# Translate the hitcount into valid JSON values.\n",
        "Line" : 399,
        "CharPositionInLine" : 5
      },
      "34" : {
        "Text" : "# Advanced way of removing the trailing comma in the JSON array.\n\n# \"[1, 2, 3, \" -> \"[1, 2, 3\"\n",
        "Line" : 421,
        "CharPositionInLine" : 1
      },
      "35" : {
        "Text" : "# Append the trailing ] to complete the JSON array.\n",
        "Line" : 425,
        "CharPositionInLine" : 1
      },
      "36" : {
        "Text" : "# Generate the final JSON for this file.\n",
        "Line" : 428,
        "CharPositionInLine" : 1
      },
      "37" : {
        "Text" : "# Loop through all files we couldn't find any coverage for\n\n# as well, and generate JSON for those as well with 0% coverage.\n",
        "Line" : 435,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Set variables for json replacement\n",
        "Line" : 439,
        "CharPositionInLine" : 1
      },
      "39" : {
        "Text" : "# Loads the source file as a list of lines.\n",
        "Line" : 444,
        "CharPositionInLine" : 1
      },
      "40" : {
        "Text" : "# Remove trailing comma, and complete JSON array with ]\n",
        "Line" : 460,
        "CharPositionInLine" : 1
      },
      "41" : {
        "Text" : "# Generate the final JSON for this file.\n",
        "Line" : 464,
        "CharPositionInLine" : 1
      },
      "42" : {
        "Text" : "# Get rid of trailing comma.\n",
        "Line" : 470,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Generate the final complete JSON!\n",
        "Line" : 474,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 44
    },
    "Compile/CompileDependencies/ThirdParty/assimp/cmake-modules/DebSourcePPA.cmake" : {
      "ObjectId" : "d8a786fb2bdc8cfba48c4260600dbe6e9525eed6",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Debian Source Package Generator\n\n#\n\n# Copyright (c) 2010 Daniel Pfeifer <daniel@pfeifer-mail.de>\n\n# Many modifications by Rosen Diankov <rosen.diankov@gmail.com>\n\n#\n\n# Creates source debian files and manages library dependencies\n\n#\n\n# Features:\n\n# \n\n# - Automatically generates symbols and run-time dependencies from the build dependencies\n\n# - Custom copy of source directory via CPACK_DEBIAN_PACKAGE_SOURCE_COPY\n\n# - Simultaneous output of multiple debian source packages for each distribution\n\n# - Can specificy distribution-specific dependencies by suffixing DEPENDS with _${DISTRO_NAME}, for example: CPACK_DEBIAN_PACKAGE_DEPENDS_LUCID, CPACK_COMPONENT_MYCOMP0_DEPENDS_LUCID\n\n#\n\n# Usage:\n\n#\n\n# set(CPACK_DEBIAN_BUILD_DEPENDS debhelper cmake)\n\n# set(CPACK_DEBIAN_PACKAGE_PRIORITY optional)\n\n# set(CPACK_DEBIAN_PACKAGE_SECTION devel)\n\n# set(CPACK_DEBIAN_CMAKE_OPTIONS \"-DMYOPTION=myvalue\")\n\n# set(CPACK_DEBIAN_PACKAGE_DEPENDS mycomp0 mycomp1 some_ubuntu_package)\n\n# set(CPACK_DEBIAN_PACKAGE_DEPENDS_UBUNTU_LUCID mycomp0 mycomp1 lucid_specific_package)\n\n# set(CPACK_DEBIAN_PACKAGE_NAME mypackage)\n\n# set(CPACK_DEBIAN_PACKAGE_REMOVE_SOURCE_FILES unnecessary_file unnecessary_dir/file0)\n\n# set(CPACK_DEBIAN_PACKAGE_SOURCE_COPY svn export --force) # if using subversion\n\n# set(CPACK_DEBIAN_DISTRIBUTION_NAME ubuntu)\n\n# set(CPACK_DEBIAN_DISTRIBUTION_RELEASES karmic lucid maverick natty)\n\n# set(CPACK_DEBIAN_CHANGELOG \"  * Extra change log lines\")\n\n# set(CPACK_DEBIAN_PACKAGE_SUGGESTS \"ipython\")\n\n# set(CPACK_COMPONENT_X_RECOMMENDS \"recommended-package\")\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# DEBIAN/control\n\n# debian policy enforce lower case for package name\n\n# Package: (mandatory)\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Section: (recommended)\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Priority: (recommended)\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# remove unnecessary folders\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# create the original source tar\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "##############################################################################\n\n# debian/control\n",
        "Line" : 89,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "##############################################################################\n\n# debian/copyright\n",
        "Line" : 248,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "##############################################################################\n\n# debian/rules\n",
        "Line" : 255,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# for reducing size\n",
        "Line" : 290,
        "CharPositionInLine" : 18
      },
      "10" : {
        "Text" : "##############################################################################\n\n# debian/compat\n",
        "Line" : 314,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "##############################################################################\n\n# debian/source/format\n",
        "Line" : 318,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "##############################################################################\n\n# debian/changelog\n",
        "Line" : 322,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "##############################################################################\n\n# debuild -S\n",
        "Line" : 333,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "##############################################################################\n\n# dput ppa:your-lp-id/ppa <source.changes>\n",
        "Line" : 345,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "Compile/CompileDependencies/ThirdParty/assimp/cmake-modules/FindDevIL.cmake" : {
      "ObjectId" : "381a75dd2af039f3b647ba56df232e4986976b0f",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindDevIL\n\n# ---------\n\n#\n\n#\n\n#\n\n# This module locates the developer's image library.\n\n# http://openil.sourceforge.net/\n\n#\n\n# This module sets:\n\n#\n\n# ::\n\n#\n\n#    IL_LIBRARIES -   the name of the IL library. These include the full path to\n\n#                     the core DevIL library. This one has to be linked into the\n\n#                     application.\n\n#    ILU_LIBRARIES -  the name of the ILU library. Again, the full path. This\n\n#                     library is for filters and effects, not actual loading. It\n\n#                     doesn't have to be linked if the functionality it provides\n\n#                     is not used.\n\n#    ILUT_LIBRARIES - the name of the ILUT library. Full path. This part of the\n\n#                     library interfaces with OpenGL. It is not strictly needed\n\n#                     in applications.\n\n#    IL_INCLUDE_DIR - where to find the il.h, ilu.h and ilut.h files.\n\n#    IL_FOUND -       this is set to TRUE if all the above variables were set.\n\n#                     This will be set to false if ILU or ILUT are not found,\n\n#                     even if they are not needed. In most systems, if one\n\n#                     library is found all the others are as well. That's the\n\n#                     way the DevIL developers release it.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO: Add version support.\n\n# Tested under Linux and Windows (MSVC)\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#include(${CMAKE_CURRENT_LIST_DIR}/FindPackageHandleStandardArgs.cmake)\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#message(\"IL_INCLUDE_DIR is ${IL_INCLUDE_DIR}\")\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#message(\"IL_LIBRARIES is ${IL_LIBRARIES}\")\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#message(\"ILUT_LIBRARIES is ${ILUT_LIBRARIES}\")\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#message(\"ILU_LIBRARIES is ${ILU_LIBRARIES}\")\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "Compile/CompileDependencies/ThirdParty/assimp/cmake-modules/FindDirectX.cmake" : {
      "ObjectId" : "70704314233f84221f7b3b6ebd78d36dfd00a395",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Find DirectX SDK\n\n# Define:\n\n# DirectX_FOUND\n\n# DirectX_INCLUDE_DIR\n\n# DirectX_LIBRARY\n\n# DirectX_ROOT_DIR\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The only platform it makes sense to check for DirectX SDK\n",
        "Line" : 18,
        "CharPositionInLine" : 10
      },
      "3" : {
        "Text" : "# Get path, convert backslashes as ${ENV_DXSDK_DIR}\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# construct search paths\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# redo search if prefix path changed\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# dlls are in DirectX_ROOT_DIR/Developer Runtime/x64|x86\n\n# lib files are in DirectX_ROOT_DIR/Lib/x64|x86\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# look for dxgi (needed by both 10 and 11)\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# look for d3dcompiler (needed by 11)\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# look for D3D11 components\n",
        "Line" : 79,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 10
    },
    "Compile/CompileDependencies/ThirdParty/assimp/cmake-modules/FindIrrXML.cmake" : {
      "ObjectId" : "5434e0b8629010b790d5e8190f0c209dfe6e5b31",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find IrrXMl from irrlicht project\n\n#\n\n# Find LibIrrXML headers and library\n\n#\n\n#   IRRXML_FOUND          - IrrXML found\n\n#   IRRXML_INCLUDE_DIR    - Headers location\n\n#   IRRXML_LIBRARY        - IrrXML main library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Compile/CompileDependencies/ThirdParty/assimp/cmake-modules/FindPkgMacros.cmake" : {
      "ObjectId" : "074cce35236c472f0e8131c10e0dde066d63a0da",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##################################################################\n\n# Provides some common functionality for the FindPackage modules\n\n##################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Begin processing of package\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Display a status message unless FIND_QUIETLY is set\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Get environment variable, define it as ENV_$var and make sure backslashes are converted to forward slashes\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# replace won't work if var is blank\n",
        "Line" : 31,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "# Construct search paths for includes and libraries from a PREFIX_PATH\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# clear cache variables if a certain variable changed\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# test against internal check variable\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Try to get some hints from pkg-config, if available\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Android does not support PKG_CONFIG so we disable it\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Couple a set of release AND debug libraries (or frameworks)\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Generate debug names from given release names\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Add the parent dir from DIR to VAR\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Do the final processing for the package find.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# skip if already processed during this run\n",
        "Line" : 99,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Slightly customised framework finder\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "Compile/CompileDependencies/ThirdParty/assimp/cmake-modules/FindRT.cmake" : {
      "ObjectId" : "17d5df81db5ebfaa67e09e4dbf9c0d41cee230cc",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find real time libraries\n\n# Once done, this will define\n\n#\n\n# RT_FOUND - system has rt library\n\n# RT_LIBRARIES - rt libraries directory\n\n#\n\n# Source: https://gitlab.cern.ch/dss/eos/commit/44070e575faaa46bd998708ef03eedb381506ff0\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set\n\n# RT_FOUND to TRUE if all listed variables are TRUE\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Compile/CompileDependencies/ThirdParty/assimp/cmake-modules/FindZLIB.cmake" : {
      "ObjectId" : "95eb51547377ad817104e6cdbf8367dcdc6c6c90",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Try to find ZLIB\n\n# Once done, this will define\n\n#\n\n#  ZLIB_FOUND - system has ZLIB\n\n#  ZLIB_INCLUDE_DIRS - the ZLIB include directories\n\n#  ZLIB_LIBRARIES - link these to use ZLIB\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Get path, convert backslashes as ${ENV_${var}}\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# construct search paths\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# redo search if prefix path changed\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Compile/CompileDependencies/ThirdParty/assimp/cmake-modules/Findassimp.cmake" : {
      "ObjectId" : "95f3250b3fc9d01b2a9c2f1c8b548f2bcab1a68f",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find path of each library\n",
        "Line" : 10,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "Compile/CompileDependencies/ThirdParty/assimp/cmake-modules/MinGW_x86_64.cmake" : {
      "ObjectId" : "d5c1f15011ed47146856b311cd27d55d9e93e570",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# this one sets internal to crosscompile (in theory)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# the minimalistic settings\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# where is the target (so called staging) environment\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# search for programs in the build host directories (default BOTH)\n\n#SET(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)\n\n# for libraries and headers in the target directories\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Compile/CompileDependencies/ThirdParty/assimp/cmake-modules/PrecompiledHeader.cmake" : {
      "ObjectId" : "6af7866f5034660c9e6b84192cdd2e7f678cef47",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Do not consider .c files\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Add precompiled header to SourcesVar\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "Compile/CompileDependencies/ThirdParty/assimp/code/CMakeLists.txt" : {
      "ObjectId" : "4d02240da7123b30441af19faeb51488cbb90f41",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Open Asset Import Library (assimp)\n\n# ----------------------------------------------------------------------\n\n#\n\n# Copyright (c) 2006-2017, assimp team\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# All rights reserved.\n\n#\n\n# Redistribution and use of this software in source and binary forms,\n\n# with or without modification, are permitted provided that the\n\n# following conditions are met:\n\n#\n\n# * Redistributions of source code must retain the above\n\n#   copyright notice, this list of conditions and the\n\n#   following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above\n\n#   copyright notice, this list of conditions and the\n\n#   following disclaimer in the documentation and/or other\n\n#   materials provided with the distribution.\n\n#\n\n# * Neither the name of the assimp team, nor the names of its\n\n#   contributors may be used to endorse or promote products\n\n#   derived from this software without specific prior\n\n#   written permission of the assimp team.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n#----------------------------------------------------------------------\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Listing and grouping of all the source files.\n\n# 1) Set the file lists for each component\n\n# 2) Create a Source Group for each component, for IDE project orginization\n\n# 3) Add libassimp using the file lists (eliminates duplication of file names between\n\n#    source groups and library command)\n\n#\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# if this variable is set to TRUE, the user can manually disable importers by setting\n\n# ASSIMP_BUILD_XXX_IMPORTER to FALSE for each importer\n\n# if this variable is set to FALSE, the user can manually enable importers by setting\n\n# ASSIMP_BUILD_XXX_IMPORTER to TRUE for each importer\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# macro to add the CMake Option ADD_ASSIMP_IMPORTER_<name> which enables compile of loader\n\n# this way selective loaders can be compiled (reduces filesize + compile time)\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# list of enabled importers\n",
        "Line" : 218,
        "CharPositionInLine" : 33
      },
      "6" : {
        "Text" : "# disabled list (used to print)\n",
        "Line" : 219,
        "CharPositionInLine" : 34
      },
      "7" : {
        "Text" : "# Check dependencies for glTF importer with Open3DGC-compression.\n\n# RT-extensions is used in \"contrib/Open3DGC/o3dgcTimer.h\" for collecting statistics. Pointed file\n\n# has implementation for different platforms: WIN32, __MACH__ and other (\"else\" block).\n",
        "Line" : 804,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#!TODO: off course is better to remove statistics timers from o3dgc codec. Or propose to choose what to use.\n",
        "Line" : 814,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# VC2010 fixes\n",
        "Line" : 820,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Assimp Files\n",
        "Line" : 846,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Model Support\n",
        "Line" : 855,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Third-party libraries\n",
        "Line" : 858,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Necessary to show the headers in the project when using the VC++ generator:\n",
        "Line" : 866,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# in order to prevent DLL hell, each of the DLLs have to be suffixed with the major version and msvc prefix\n",
        "Line" : 901,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# use full version\n",
        "Line" : 924,
        "CharPositionInLine" : 32
      },
      "16" : {
        "Text" : "# PUBLIC_HEADER option does not support directory structure creation\n\n# add ./Compiler/*.h to assimp.framework via copy command\n",
        "Line" : 941,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Build against external unzip, or add ../contrib/unzip so\n\n# assimp can #include \"unzip.h\"\n",
        "Line" : 951,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Add RT-extension library for glTF importer with Open3DGC-compression.\n",
        "Line" : 960,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Create the coveralls target.\n",
        "Line" : 1007,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# The source files.\n\n# If we should upload.\n",
        "Line" : 1009,
        "CharPositionInLine" : 27
      },
      "21" : {
        "Text" : "# (Optional) Alternate project cmake module path.\n",
        "Line" : 1011,
        "CharPositionInLine" : 48
      },
      "CommentCount" : 22
    },
    "Compile/CompileDependencies/ThirdParty/assimp/contrib/CMakeLists.txt" : {
      "ObjectId" : "362f1653d1c569470eb7035459672a1da0b4622d",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Compile internal irrXML only if system is not requested\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Compile/CompileDependencies/ThirdParty/assimp/contrib/android-cmake/AndroidNdkGdb.cmake" : {
      "ObjectId" : "0677dcda9115ee1dd11762c034267085eadd3a48",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2014, Pavel Rojtberg\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# 1. Redistributions of source code must retain the above copyright notice,\n\n# this list of conditions and the following disclaimer.\n\n#\n\n# 2. Redistributions in binary form must reproduce the above copyright notice,\n\n# this list of conditions and the following disclaimer in the documentation\n\n# and/or other materials provided with the distribution.\n\n#\n\n# 3. Neither the name of the copyright holder nor the names of its\n\n# contributors may be used to endorse or promote products derived from this\n\n# software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ------------------------------------------------------------------------------\n\n# Usage:\n\n# 1. place AndroidNdkGdb.cmake somewhere inside ${CMAKE_MODULE_PATH}\n\n# 2. inside your project add\n\n#\n\n#    include(AndroidNdkGdb)\n\n#    android_ndk_gdb_enable()\n\n#    # for each target\n\n#    add_library(MyLibrary ...)\n\n#    android_ndk_gdb_debuggable(MyLibrary)    \n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add gdbserver and general gdb configuration to project\n\n# also create a mininal NDK skeleton so ndk-gdb finds the paths\n\n#\n\n# the optional parameter defines the path to the android project.\n\n# uses PROJECT_SOURCE_DIR by default.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# create custom target that depends on the real target so it gets executed afterwards\n",
        "Line" : 49,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# 1. generate essential Android Makefiles\n",
        "Line" : 61,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# 2. generate gdb.setup\n",
        "Line" : 70,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# 3. copy gdbserver executable\n",
        "Line" : 76,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# register a target for remote debugging\n\n# copies the debug version to NDK_GDB_SOLIB_PATH then strips symbols of original\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# create custom target that depends on the real target so it gets executed afterwards\n",
        "Line" : 87,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# 4. copy lib to obj\n",
        "Line" : 90,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# 5. strip symbols\n",
        "Line" : 93,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 11
    },
    "Compile/CompileDependencies/ThirdParty/assimp/contrib/android-cmake/AndroidNdkModules.cmake" : {
      "ObjectId" : "64f37fdee264493a5e6f97e336eaf8afb096ad60",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2014, Pavel Rojtberg\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# 1. Redistributions of source code must retain the above copyright notice,\n\n# this list of conditions and the following disclaimer.\n\n#\n\n# 2. Redistributions in binary form must reproduce the above copyright notice,\n\n# this list of conditions and the following disclaimer in the documentation\n\n# and/or other materials provided with the distribution.\n\n#\n\n# 3. Neither the name of the copyright holder nor the names of its\n\n# contributors may be used to endorse or promote products derived from this\n\n# software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Compile/CompileDependencies/ThirdParty/assimp/contrib/android-cmake/android.toolchain.cmake" : {
      "ObjectId" : "ffa26126a79200d142e8ac1acecb1c095476be7e",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2010-2011, Ethan Rublee\n\n# Copyright (c) 2011-2014, Andrey Kamaev\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# 1.  Redistributions of source code must retain the above copyright notice,\n\n#     this list of conditions and the following disclaimer.\n\n#\n\n# 2.  Redistributions in binary form must reproduce the above copyright notice,\n\n#     this list of conditions and the following disclaimer in the documentation\n\n#     and/or other materials provided with the distribution.\n\n#\n\n# 3.  Neither the name of the copyright holder nor the names of its\n\n#     contributors may be used to endorse or promote products derived from this\n\n#     software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ------------------------------------------------------------------------------\n\n#  Android CMake toolchain file, for use with the Android NDK r5-r10d\n\n#  Requires cmake 2.6.3 or newer (2.8.9 or newer is recommended).\n\n#  See home page: https://github.com/taka-no-me/android-cmake\n\n#\n\n#  Usage Linux:\n\n#   $ export ANDROID_NDK=/absolute/path/to/the/android-ndk\n\n#   $ mkdir build && cd build\n\n#   $ cmake -DCMAKE_TOOLCHAIN_FILE=path/to/the/android.toolchain.cmake ..\n\n#   $ make -j8\n\n#\n\n#  Usage Windows:\n\n#     You need native port of make to build your project.\n\n#     Android NDK r7 (and newer) already has make.exe on board.\n\n#     For older NDK you have to install it separately.\n\n#     For example, this one: http://gnuwin32.sourceforge.net/packages/make.htm\n\n#\n\n#   $ SET ANDROID_NDK=C:\\absolute\\path\\to\\the\\android-ndk\n\n#   $ mkdir build && cd build\n\n#   $ cmake.exe -G\"MinGW Makefiles\"\n\n#       -DCMAKE_TOOLCHAIN_FILE=path\\to\\the\\android.toolchain.cmake\n\n#       -DCMAKE_MAKE_PROGRAM=\"%ANDROID_NDK%\\prebuilt\\windows\\bin\\make.exe\" ..\n\n#   $ cmake.exe --build .\n\n#\n\n#\n\n#  Options (can be set as cmake parameters: -D<option_name>=<value>):\n\n#    ANDROID_NDK=/opt/android-ndk - path to the NDK root.\n\n#      Can be set as environment variable. Can be set only at first cmake run.\n\n#\n\n#    ANDROID_ABI=armeabi-v7a - specifies the target Application Binary\n\n#      Interface (ABI). This option nearly matches to the APP_ABI variable\n\n#      used by ndk-build tool from Android NDK.\n\n#\n\n#      Possible targets are:\n\n#        \"armeabi\" - ARMv5TE based CPU with software floating point operations\n\n#        \"armeabi-v7a\" - ARMv7 based devices with hardware FPU instructions\n\n#            this ABI target is used by default\n\n#        \"armeabi-v7a with NEON\" - same as armeabi-v7a, but\n\n#            sets NEON as floating-point unit\n\n#        \"armeabi-v7a with VFPV3\" - same as armeabi-v7a, but\n\n#            sets VFPV3 as floating-point unit (has 32 registers instead of 16)\n\n#        \"armeabi-v6 with VFP\" - tuned for ARMv6 processors having VFP\n\n#        \"x86\" - IA-32 instruction set\n\n#        \"mips\" - MIPS32 instruction set\n\n#\n\n#      64-bit ABIs for NDK r10 and newer:\n\n#        \"arm64-v8a\" - ARMv8 AArch64 instruction set\n\n#        \"x86_64\" - Intel64 instruction set (r1)\n\n#        \"mips64\" - MIPS64 instruction set (r6)\n\n#\n\n#    ANDROID_NATIVE_API_LEVEL=android-8 - level of Android API compile for.\n\n#      Option is read-only when standalone toolchain is used.\n\n#      Note: building for \"android-L\" requires explicit configuration.\n\n#\n\n#    ANDROID_TOOLCHAIN_NAME=arm-linux-androideabi-4.9 - the name of compiler\n\n#      toolchain to be used. The list of possible values depends on the NDK\n\n#      version. For NDK r10c the possible values are:\n\n#\n\n#        * aarch64-linux-android-4.9\n\n#        * aarch64-linux-android-clang3.4\n\n#        * aarch64-linux-android-clang3.5\n\n#        * arm-linux-androideabi-4.6\n\n#        * arm-linux-androideabi-4.8\n\n#        * arm-linux-androideabi-4.9 (default)\n\n#        * arm-linux-androideabi-clang3.4\n\n#        * arm-linux-androideabi-clang3.5\n\n#        * mips64el-linux-android-4.9\n\n#        * mips64el-linux-android-clang3.4\n\n#        * mips64el-linux-android-clang3.5\n\n#        * mipsel-linux-android-4.6\n\n#        * mipsel-linux-android-4.8\n\n#        * mipsel-linux-android-4.9\n\n#        * mipsel-linux-android-clang3.4\n\n#        * mipsel-linux-android-clang3.5\n\n#        * x86-4.6\n\n#        * x86-4.8\n\n#        * x86-4.9\n\n#        * x86-clang3.4\n\n#        * x86-clang3.5\n\n#        * x86_64-4.9\n\n#        * x86_64-clang3.4\n\n#        * x86_64-clang3.5\n\n#\n\n#    ANDROID_FORCE_ARM_BUILD=OFF - set ON to generate 32-bit ARM instructions\n\n#      instead of Thumb. Is not available for \"armeabi-v6 with VFP\"\n\n#      (is forced to be ON) ABI.\n\n#\n\n#    ANDROID_NO_UNDEFINED=ON - set ON to show all undefined symbols as linker\n\n#      errors even if they are not used.\n\n#\n\n#    ANDROID_SO_UNDEFINED=OFF - set ON to allow undefined symbols in shared\n\n#      libraries. Automatically turned for NDK r5x and r6x due to GLESv2\n\n#      problems.\n\n#\n\n#    ANDROID_STL=gnustl_static - specify the runtime to use.\n\n#\n\n#      Possible values are:\n\n#        none           -> Do not configure the runtime.\n\n#        system         -> Use the default minimal system C++ runtime library.\n\n#                          Implies -fno-rtti -fno-exceptions.\n\n#                          Is not available for standalone toolchain.\n\n#        system_re      -> Use the default minimal system C++ runtime library.\n\n#                          Implies -frtti -fexceptions.\n\n#                          Is not available for standalone toolchain.\n\n#        gabi++_static  -> Use the GAbi++ runtime as a static library.\n\n#                          Implies -frtti -fno-exceptions.\n\n#                          Available for NDK r7 and newer.\n\n#                          Is not available for standalone toolchain.\n\n#        gabi++_shared  -> Use the GAbi++ runtime as a shared library.\n\n#                          Implies -frtti -fno-exceptions.\n\n#                          Available for NDK r7 and newer.\n\n#                          Is not available for standalone toolchain.\n\n#        stlport_static -> Use the STLport runtime as a static library.\n\n#                          Implies -fno-rtti -fno-exceptions for NDK before r7.\n\n#                          Implies -frtti -fno-exceptions for NDK r7 and newer.\n\n#                          Is not available for standalone toolchain.\n\n#        stlport_shared -> Use the STLport runtime as a shared library.\n\n#                          Implies -fno-rtti -fno-exceptions for NDK before r7.\n\n#                          Implies -frtti -fno-exceptions for NDK r7 and newer.\n\n#                          Is not available for standalone toolchain.\n\n#        gnustl_static  -> Use the GNU STL as a static library.\n\n#                          Implies -frtti -fexceptions.\n\n#        gnustl_shared  -> Use the GNU STL as a shared library.\n\n#                          Implies -frtti -fno-exceptions.\n\n#                          Available for NDK r7b and newer.\n\n#                          Silently degrades to gnustl_static if not available.\n\n#\n\n#    ANDROID_STL_FORCE_FEATURES=ON - turn rtti and exceptions support based on\n\n#      chosen runtime. If disabled, then the user is responsible for settings\n\n#      these options.\n\n#\n\n#  What?:\n\n#    android-cmake toolchain searches for NDK/toolchain in the following order:\n\n#      ANDROID_NDK - cmake parameter\n\n#      ANDROID_NDK - environment variable\n\n#      ANDROID_STANDALONE_TOOLCHAIN - cmake parameter\n\n#      ANDROID_STANDALONE_TOOLCHAIN - environment variable\n\n#      ANDROID_NDK - default locations\n\n#      ANDROID_STANDALONE_TOOLCHAIN - default locations\n\n#\n\n#    Make sure to do the following in your scripts:\n\n#      SET( CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${my_cxx_flags}\" )\n\n#      SET( CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} ${my_cxx_flags}\" )\n\n#    The flags will be prepopulated with critical flags, so don't loose them.\n\n#    Also be aware that toolchain also sets configuration-specific compiler\n\n#    flags and linker flags.\n\n#\n\n#    ANDROID and BUILD_ANDROID will be set to true, you may test any of these\n\n#    variables to make necessary Android-specific configuration changes.\n\n#\n\n#    Also ARMEABI or ARMEABI_V7A or X86 or MIPS or ARM64_V8A or X86_64 or MIPS64\n\n#    will be set true, mutually exclusive. NEON option will be set true\n\n#    if VFP is set to NEON.\n\n#\n\n# ------------------------------------------------------------------------------\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# subsequent toolchain loading is not really needed\n",
        "Line" : 190,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# touch toolchain variable to suppress \"unused variable\" warning\n",
        "Line" : 195,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# inherit settings in recursive loads\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# this one is important\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# this one not so much\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# rpath makes low sense for Android\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# NDK search paths\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# known ABIs\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# API level defaults\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# fight against cygwin\n",
        "Line" : 338,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# remove cygwin from PATH\n",
        "Line" : 347,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# detect current host platform\n",
        "Line" : 356,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# see if we have path to Android NDK\n",
        "Line" : 381,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# see if we have path to Android standalone toolchain\n",
        "Line" : 386,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "#try to find Android NDK in one of the the default locations\n",
        "Line" : 390,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "#try to find Android standalone toolchain in one of the the default locations\n",
        "Line" : 404,
        "CharPositionInLine" : 3
      },
      "18" : {
        "Text" : "# remember found paths\n",
        "Line" : 415,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# try to detect change\n",
        "Line" : 432,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "# android NDK layout\n",
        "Line" : 456,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# try to automatically detect the layout\n",
        "Line" : 459,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# only 32-bit at the moment\n",
        "Line" : 471,
        "CharPositionInLine" : 71
      },
      "23" : {
        "Text" : "# only 32-bit at the moment\n",
        "Line" : 476,
        "CharPositionInLine" : 71
      },
      "24" : {
        "Text" : "# ANDROID_NDK_LAYOUT STREQUAL \"RELEASE\"\n",
        "Line" : 480,
        "CharPositionInLine" : 8
      },
      "25" : {
        "Text" : "# try to detect change of NDK\n",
        "Line" : 487,
        "CharPositionInLine" : 1
      },
      "26" : {
        "Text" : "# get all the details about standalone toolchain\n",
        "Line" : 501,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#message(\"machine: !${__machine}!\\narch: !${__arch}!\\nversion: !${__version}!\\ntoolchain: !${__toolchain}!\\n\")\n",
        "Line" : 568,
        "CharPositionInLine" : 3
      },
      "28" : {
        "Text" : "# get all the details about NDK\n",
        "Line" : 580,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# do not go through all toolchains if we know the name\n",
        "Line" : 589,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# we need clang to go after gcc\n",
        "Line" : 602,
        "CharPositionInLine" : 39
      },
      "31" : {
        "Text" : "# build list of available ABIs\n",
        "Line" : 620,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# choose target ABI\n",
        "Line" : 633,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# verify that target ABI is supported\n",
        "Line" : 635,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# set target ABI options\n",
        "Line" : 645,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# need always fallback to older platform\n",
        "Line" : 691,
        "CharPositionInLine" : 1
      },
      "36" : {
        "Text" : "# really dirty hack\n\n# it is not possible to change CMAKE_SYSTEM_PROCESSOR after the first run...\n",
        "Line" : 719,
        "CharPositionInLine" : 1
      },
      "37" : {
        "Text" : "# choose toolchain\n",
        "Line" : 732,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# choose native API level\n",
        "Line" : 781,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# adjust API level\n",
        "Line" : 785,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# validate\n",
        "Line" : 797,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# remember target ABI\n",
        "Line" : 819,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# runtime choice (STL, rtti, exceptions)\n",
        "Line" : 827,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# setup paths and STL for standalone toolchain\n",
        "Line" : 895,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# old location ( pre r8c )\n",
        "Line" : 904,
        "CharPositionInLine" : 3
      },
      "45" : {
        "Text" : "# always search static GNU STL to get the location of libsupc++.a\n",
        "Line" : 914,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "# clang\n",
        "Line" : 949,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# setup paths and STL for NDK\n",
        "Line" : 973,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# do nothing\n",
        "Line" : 979,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "# before r7\n",
        "Line" : 989,
        "CharPositionInLine" : 42
      },
      "50" : {
        "Text" : "# before r8d\n",
        "Line" : 997,
        "CharPositionInLine" : 46
      },
      "51" : {
        "Text" : "# before r7\n",
        "Line" : 1002,
        "CharPositionInLine" : 42
      },
      "52" : {
        "Text" : "# gnustl binary for 4.7 compiler is buggy :(\n\n# TODO: look for right fix\n",
        "Line" : 1014,
        "CharPositionInLine" : 4
      },
      "53" : {
        "Text" : "# find libsupc++.a - rtti & exceptions\n",
        "Line" : 1032,
        "CharPositionInLine" : 1
      },
      "54" : {
        "Text" : "# r8b or newer\n",
        "Line" : 1034,
        "CharPositionInLine" : 137
      },
      "55" : {
        "Text" : "# r7-r8\n",
        "Line" : 1036,
        "CharPositionInLine" : 110
      },
      "56" : {
        "Text" : "# before r7\n",
        "Line" : 1038,
        "CharPositionInLine" : 36
      },
      "57" : {
        "Text" : "# case of shared STL linkage\n",
        "Line" : 1058,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# TODO: check if .so file exists before the renaming\n",
        "Line" : 1061,
        "CharPositionInLine" : 1
      },
      "59" : {
        "Text" : "# ccache support\n",
        "Line" : 1065,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# setup the cross-compiler\n",
        "Line" : 1078,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# Use gcc-ar if we have it for better LTO support.\n",
        "Line" : 1102,
        "CharPositionInLine" : 2
      },
      "62" : {
        "Text" : "# Force set compilers because standard identification works badly for us\n",
        "Line" : 1126,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# force ASM compiler (required for CMake < 2.8.5)\n",
        "Line" : 1149,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# flags and definitions\n",
        "Line" : 1165,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# try to convert path to 8.3 form\n",
        "Line" : 1171,
        "CharPositionInLine" : 2
      },
      "66" : {
        "Text" : "# quotes can break try_compile and compiler identification\n",
        "Line" : 1186,
        "CharPositionInLine" : 2
      },
      "67" : {
        "Text" : "# NDK flags\n",
        "Line" : 1193,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# always compile ARMEABI_V6 in arm mode; otherwise there is no difference from ARMEABI\n",
        "Line" : 1210,
        "CharPositionInLine" : 2
      },
      "69" : {
        "Text" : "# good/necessary when porting desktop libraries\n",
        "Line" : 1237,
        "CharPositionInLine" : 62
      },
      "70" : {
        "Text" : "# see https://android-review.googlesource.com/#/c/47564/\n",
        "Line" : 1244,
        "CharPositionInLine" : 72
      },
      "71" : {
        "Text" : "# ABI-specific flags\n",
        "Line" : 1247,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# vfp == vfpv2\n",
        "Line" : 1258,
        "CharPositionInLine" : 91
      },
      "73" : {
        "Text" : "# STL\n",
        "Line" : 1273,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# C objects:\n",
        "Line" : 1284,
        "CharPositionInLine" : 2
      },
      "75" : {
        "Text" : "# variables controlling optional build flags\n",
        "Line" : 1302,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# before r7\n",
        "Line" : 1303,
        "CharPositionInLine" : 40
      },
      "77" : {
        "Text" : "# libGLESv2.so in NDK's prior to r7 refers to missing external symbols.\n\n# So this flag option is required for all projects using OpenGL from native.\n",
        "Line" : 1304,
        "CharPositionInLine" : 1
      },
      "78" : {
        "Text" : "# linker flags\n",
        "Line" : 1324,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# this is *required* to use the following linker flags that routes around\n\n# a CPU bug in some Cortex-A8 implementations:\n",
        "Line" : 1328,
        "CharPositionInLine" : 1
      },
      "80" : {
        "Text" : "# there is some sysroot-related problem in mips linker...\n",
        "Line" : 1335,
        "CharPositionInLine" : 2
      },
      "81" : {
        "Text" : "# after r8b\n",
        "Line" : 1356,
        "CharPositionInLine" : 48
      },
      "82" : {
        "Text" : "# version 4.6\n",
        "Line" : 1364,
        "CharPositionInLine" : 8
      },
      "83" : {
        "Text" : "# cache flags\n",
        "Line" : 1386,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# put flags to cache (for debug purpose only)\n",
        "Line" : 1397,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# finish flags\n",
        "Line" : 1403,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# pie/pic\n",
        "Line" : 1420,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# configure rtti\n",
        "Line" : 1430,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "# configure exceptios\n",
        "Line" : 1439,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# global includes and link directories\n",
        "Line" : 1450,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "# avoid CMP0015 policy warning\n",
        "Line" : 1452,
        "CharPositionInLine" : 111
      },
      "91" : {
        "Text" : "# detect if need link crtbegin_so.o explicitly\n",
        "Line" : 1455,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "# setup output directories\n",
        "Line" : 1492,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "# copy shaed stl library to build directory\n",
        "Line" : 1509,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "# set these global flags for cmake client scripts to change behavior\n",
        "Line" : 1521,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "# where is the target environment\n",
        "Line" : 1525,
        "CharPositionInLine" : 0
      },
      "96" : {
        "Text" : "# only search for libraries and includes in the ndk toolchain\n",
        "Line" : 1528,
        "CharPositionInLine" : 0
      },
      "97" : {
        "Text" : "# macro to find packages on the host OS\n",
        "Line" : 1534,
        "CharPositionInLine" : 0
      },
      "98" : {
        "Text" : "# macro to find programs on the host OS\n",
        "Line" : 1556,
        "CharPositionInLine" : 0
      },
      "99" : {
        "Text" : "# export toolchain settings for the try_compile() command\n",
        "Line" : 1578,
        "CharPositionInLine" : 0
      },
      "100" : {
        "Text" : "# force cmake to produce / instead of \\ in build commands for Ninja generator\n",
        "Line" : 1615,
        "CharPositionInLine" : 0
      },
      "101" : {
        "Text" : "# it is a bad hack after all\n\n# CMake generates Ninja makefiles with UNIX paths only if it thinks that we are going to build with MinGW\n",
        "Line" : 1617,
        "CharPositionInLine" : 1
      },
      "102" : {
        "Text" : "# tell CMake that we are MinGW\n\n# stop recursion\n",
        "Line" : 1619,
        "CharPositionInLine" : 37
      },
      "103" : {
        "Text" : "# unset( CMAKE_COMPILER_IS_MINGW ) # can't unset because CMake does not convert back-slashes in response files without it\n",
        "Line" : 1623,
        "CharPositionInLine" : 1
      },
      "104" : {
        "Text" : "# Variables controlling behavior or set by cmake toolchain:\n\n#   ANDROID_ABI : \"armeabi-v7a\" (default), \"armeabi\", \"armeabi-v7a with NEON\", \"armeabi-v7a with VFPV3\", \"armeabi-v6 with VFP\", \"x86\", \"mips\", \"arm64-v8a\", \"x86_64\", \"mips64\"\n\n#   ANDROID_NATIVE_API_LEVEL : 3,4,5,8,9,14,15,16,17,18,19,21 (depends on NDK version)\n\n#   ANDROID_STL : gnustl_static/gnustl_shared/stlport_static/stlport_shared/gabi++_static/gabi++_shared/system_re/system/none\n\n#   ANDROID_FORBID_SYGWIN : ON/OFF\n\n#   ANDROID_NO_UNDEFINED : ON/OFF\n\n#   ANDROID_SO_UNDEFINED : OFF/ON  (default depends on NDK version)\n\n#   ANDROID_FUNCTION_LEVEL_LINKING : ON/OFF\n\n#   ANDROID_GOLD_LINKER : ON/OFF\n\n#   ANDROID_NOEXECSTACK : ON/OFF\n\n#   ANDROID_RELRO : ON/OFF\n\n#   ANDROID_FORCE_ARM_BUILD : ON/OFF\n\n#   ANDROID_STL_FORCE_FEATURES : ON/OFF\n\n#   ANDROID_LIBM_PATH : path to libm.so (set to something like $(TOP)/out/target/product/<product_name>/obj/lib/libm.so) to workaround unresolved `sincos`\n\n# Can be set only at the first run:\n\n#   ANDROID_NDK : path to your NDK install\n\n#   NDK_CCACHE : path to your ccache executable\n\n#   ANDROID_TOOLCHAIN_NAME : the NDK name of compiler toolchain\n\n#   ANDROID_NDK_HOST_X64 : try to use x86_64 toolchain (default for x64 host systems)\n\n#   ANDROID_NDK_LAYOUT : the inner NDK structure (RELEASE, LINARO, ANDROID)\n\n#   LIBRARY_OUTPUT_PATH_ROOT : <any valid path>\n\n#   ANDROID_STANDALONE_TOOLCHAIN\n\n#\n\n# Primary read-only variables:\n\n#   ANDROID : always TRUE\n\n#   ARMEABI : TRUE for arm v6 and older devices\n\n#   ARMEABI_V6 : TRUE for arm v6\n\n#   ARMEABI_V7A : TRUE for arm v7a\n\n#   ARM64_V8A : TRUE for arm64-v8a\n\n#   NEON : TRUE if NEON unit is enabled\n\n#   VFPV3 : TRUE if VFP version 3 is enabled\n\n#   X86 : TRUE if configured for x86\n\n#   X86_64 : TRUE if configured for x86_64\n\n#   MIPS : TRUE if configured for mips\n\n#   MIPS64 : TRUE if configured for mips64\n\n#   BUILD_WITH_ANDROID_NDK : TRUE if NDK is used\n\n#   BUILD_WITH_STANDALONE_TOOLCHAIN : TRUE if standalone toolchain is used\n\n#   ANDROID_NDK_HOST_SYSTEM_NAME : \"windows\", \"linux-x86\" or \"darwin-x86\" depending on host platform\n\n#   ANDROID_NDK_ABI_NAME : \"armeabi\", \"armeabi-v7a\", \"x86\", \"mips\", \"arm64-v8a\", \"x86_64\", \"mips64\" depending on ANDROID_ABI\n\n#   ANDROID_NDK_RELEASE : from r5 to r10d; set only for NDK\n\n#   ANDROID_NDK_RELEASE_NUM : numeric ANDROID_NDK_RELEASE version (1000*major+minor)\n\n#   ANDROID_ARCH_NAME : \"arm\", \"x86\", \"mips\", \"arm64\", \"x86_64\", \"mips64\" depending on ANDROID_ABI\n\n#   ANDROID_SYSROOT : path to the compiler sysroot\n\n#   TOOL_OS_SUFFIX : \"\" or \".exe\" depending on host platform\n\n#   ANDROID_COMPILER_IS_CLANG : TRUE if clang compiler is used\n\n#\n\n# Secondary (less stable) read-only variables:\n\n#   ANDROID_COMPILER_VERSION : GCC version used (not Clang version)\n\n#   ANDROID_CLANG_VERSION : version of clang compiler if clang is used\n\n#   ANDROID_CXX_FLAGS : C/C++ compiler flags required by Android platform\n\n#   ANDROID_SUPPORTED_ABIS : list of currently allowed values for ANDROID_ABI\n\n#   ANDROID_TOOLCHAIN_MACHINE_NAME : \"arm-linux-androideabi\", \"arm-eabi\" or \"i686-android-linux\"\n\n#   ANDROID_TOOLCHAIN_ROOT : path to the top level of toolchain (standalone or placed inside NDK)\n\n#   ANDROID_CLANG_TOOLCHAIN_ROOT : path to clang tools\n\n#   ANDROID_SUPPORTED_NATIVE_API_LEVELS : list of native API levels found inside NDK\n\n#   ANDROID_STL_INCLUDE_DIRS : stl include paths\n\n#   ANDROID_RTTI : if rtti is enabled by the runtime\n\n#   ANDROID_EXCEPTIONS : if exceptions are enabled by the runtime\n\n#   ANDROID_GCC_TOOLCHAIN_NAME : read-only, differs from ANDROID_TOOLCHAIN_NAME only if clang is used\n\n#\n\n# Defaults:\n\n#   ANDROID_DEFAULT_NDK_API_LEVEL\n\n#   ANDROID_DEFAULT_NDK_API_LEVEL_${ARCH}\n\n#   ANDROID_NDK_SEARCH_PATHS\n\n#   ANDROID_SUPPORTED_ABIS_${ARCH}\n\n#   ANDROID_SUPPORTED_NDK_VERSIONS\n",
        "Line" : 1628,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 105
    },
    "Compile/CompileDependencies/ThirdParty/assimp/contrib/gtest/CMakeLists.txt" : {
      "ObjectId" : "621d0f0421543eba41e1d69f497814104bb9c6a7",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# CMake build script for Google Test.\n\n#\n\n# To run the tests for Google Test itself on Linux, use 'make test' or\n\n# ctest.  You can select which tests to run using 'ctest -R regex'.\n\n# For more options, run 'ctest --help'.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BUILD_SHARED_LIBS is a standard CMake variable, but we declare it here to\n\n# make it prominent in the GUI.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# When other libraries are using a shared version of runtime libraries,\n\n# Google Test also has to use one.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Defines pre_project_set_up_hermetic_build() and set_up_hermetic_build().\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "########################################################################\n\n#\n\n# Project-wide settings\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Name of the project.\n\n#\n\n# CMake files in this project can refer to the root source directory\n\n# as ${gtest_SOURCE_DIR} and to the root binary directory as\n\n# ${gtest_BINARY_DIR}.\n\n# Language \"C\" is required for find_package(Threads).\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define helper functions and macros used by Google Test.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Defined in internal_utils.cmake.\n",
        "Line" : 62,
        "CharPositionInLine" : 30
      },
      "8" : {
        "Text" : "# Where Google Test's .h files can be found.\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Where Google Test's libraries can be found.\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Summary of tuple support for Microsoft Visual Studio:\n\n# Compiler    version(MS)  version(cmake)  Support\n\n# ----------  -----------  --------------  -----------------------------\n\n# <= VS 2010  <= 10        <= 1600         Use Google Tests's own tuple.\n\n# VS 2012     11           1700            std::tr1::tuple + _VARIADIC_MAX=10\n\n# VS 2013     12           1800            std::tr1::tuple\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "########################################################################\n\n#\n\n# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Google Test libraries.  We build them using more strict warnings than what\n\n# are used for other targets, to ensure that gtest can be compiled by a user\n\n# aggressive about warnings.\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# If the CMake version supports it, attach header directory information\n\n# to the targets for when we are part of a parent build (ie being pulled\n\n# in via add_subdirectory() rather than being a standalone build).\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "########################################################################\n\n#\n\n# Install rules\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "########################################################################\n\n#\n\n# Samples on how to link user tests with gtest or gtest_main.\n\n#\n\n# They are not built by default.  To build them, set the\n\n# gtest_build_samples option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_samples=ON flag when running cmake.\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "########################################################################\n\n#\n\n# Google Test's own tests.\n\n#\n\n# You can skip this section if you aren't interested in testing\n\n# Google Test itself.\n\n#\n\n# The tests are not built by default.  To build them, set the\n\n# gtest_build_tests option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_tests=ON flag when running cmake.\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# This must be set in the root directory for the tests to be run by\n\n# 'make test' or ctest.\n",
        "Line" : 143,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "############################################################\n\n# C++ tests built with standard compiler flags.\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "############################################################\n\n# C++ tests built with non-standard compiler flags.\n",
        "Line" : 178,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 181,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# 1600 is Visual Studio 2010.\n",
        "Line" : 210,
        "CharPositionInLine" : 43
      },
      "22" : {
        "Text" : "# Visual Studio 2010, 2012, and 2013 define symbols in std::tr1 that\n\n# conflict with our own definitions. Therefore using our own tuple does not\n\n# work on those compilers.\n",
        "Line" : 211,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "############################################################\n\n# Python tests.\n",
        "Line" : 225,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Visual Studio .NET 2003 does not support STL with exceptions disabled.\n",
        "Line" : 231,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# 1310 is Visual Studio .NET 2003\n",
        "Line" : 232,
        "CharPositionInLine" : 46
      },
      "26" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 268,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 27
    },
    "Compile/CompileDependencies/ThirdParty/assimp/contrib/gtest/Makefile.am" : {
      "ObjectId" : "29797e4e9de4e1d5e5f93bba14288de87f623946",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Automake file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Nonstandard package files for distribution\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# gtest source files that we don't compile directly.  They are\n\n# #included by gtest-all.cc.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Sample files that we don't compile.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# C++ test files that we don't compile directly.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Python tests that we don't run.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# CMake script\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# MSVC project files\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# xcode project files\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# xcode sample files\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# C++Builder project files\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Distribute and install M4 macro\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# We define the global AM_CPPFLAGS as everything we compile includes from these\n\n# directories.\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Modifies compiler and linker flags for pthreads compatibility.\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Build rules for libraries.\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Bulid rules for samples and tests. Automake's naming for some of\n\n# these variables isn't terribly obvious, so this is a brief\n\n# reference:\n\n#\n\n# TESTS -- Programs run automatically by \"make check\"\n\n# check_PROGRAMS -- Programs built by \"make check\" but not necessarily run\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# A simple sample on using gtest.\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Another sample.  It also verifies that libgtest works.\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# This tests most constructs of gtest and verifies that libgtest_main\n\n# and libgtest work.\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Tests that fused gtest files compile and work.\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Build rules for putting fused Google Test files into the distribution\n\n# package. The user can also create those files by manually running\n\n# scripts/fuse_gtest_files.py.\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Death tests may produce core dumps in the build directory. In case\n\n# this happens, clean them to keep distcleancheck happy.\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Disables 'make install' as installing a compiled version of Google\n\n# Test can lead to undefined behavior due to violation of the\n\n# One-Definition Rule.\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "Compile/CompileDependencies/ThirdParty/assimp/contrib/gtest/cmake/internal_utils.cmake" : {
      "ObjectId" : "777b91ed4b8caa226ea55cfa61fe7ec433ffb452",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Defines functions and macros useful for building Google Test and\n\n# Google Mock.\n\n#\n\n# Note:\n\n#\n\n# - This file will be run twice when building Google Mock (once via\n\n#   Google Test's CMakeLists.txt, and once via Google Mock's).\n\n#   Therefore it shouldn't have any side effects other than defining\n\n#   the functions and macros.\n\n#\n\n# - The functions/macros defined in this file may depend on Google\n\n#   Test and Google Mock's option() definitions, and thus must be\n\n#   called *after* the options have been defined.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Tweaks CMake's default compiler/linker settings to suit Google Test's needs.\n\n#\n\n# This must be a macro(), as inside a function string() can only\n\n# update variables in the function scope.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For MSVC, CMake sets certain flags to defaults we want to override.\n\n# This replacement code is taken from sample in the CMake Wiki at\n\n# http://www.cmake.org/Wiki/CMake_FAQ#Dynamic_Replace.\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# When Google Test is built as a shared library, it should also use\n\n# shared runtime libraries.  Otherwise, it may end up with multiple\n\n# copies of runtime library data in different modules, resulting in\n\n# hard-to-find crashes. When it is built as a static library, it is\n\n# preferable to use CRT as static libraries, as we don't have to rely\n\n# on CRT DLLs being available. CMake always defaults to using shared\n\n# CRT libraries, so we override that default here.\n",
        "Line" : 28,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# We prefer more strict warning checking for building Google Test.\n\n# Replaces /W3 with /W4 in defaults.\n",
        "Line" : 38,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Defines the compiler/linker flags used to build Google Test and\n\n# Google Mock.  You can tweak these definitions to suit your need.  A\n\n# variable's value is empty before it's explicitly assigned to.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Defines CMAKE_USE_PTHREADS_INIT and CMAKE_THREAD_LIBS_INIT.\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Newlines inside flags variables break CMake's NMake generator.\n\n# TODO(vladl@google.com): Add -RTCs and -RTCu to debug builds.\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# 1400 is Visual Studio 2005\n",
        "Line" : 59,
        "CharPositionInLine" : 33
      },
      "9" : {
        "Text" : "# Suppress spurious warnings MSVC 7.1 sometimes issues.\n\n# Forcing value to bool.\n",
        "Line" : 60,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# Copy constructor and assignment operator could not be generated.\n",
        "Line" : 63,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# Compatibility warnings not applicable to Google Test.\n\n# Resolved overload was found by argument-dependent lookup.\n",
        "Line" : 65,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# 1500 is Visual Studio 2008\n",
        "Line" : 69,
        "CharPositionInLine" : 33
      },
      "13" : {
        "Text" : "# Conditional expression is constant.\n\n# When compiling with /W4, we get several instances of C4127\n\n# (Conditional expression is constant). In our code, we disable that\n\n# warning on a case-by-case basis. However, on Visual Studio 2005,\n\n# the warning fires on std::list. Therefore on that compiler and earlier,\n\n# we disable the warning project-wide.\n",
        "Line" : 70,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# 1700 is Visual Studio 2012.\n",
        "Line" : 78,
        "CharPositionInLine" : 39
      },
      "15" : {
        "Text" : "# Suppress \"unreachable code\" warning on VS 2012 and later.\n\n# http://stackoverflow.com/questions/3232669 explains the issue.\n",
        "Line" : 79,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# 1900 is Visual Studio 2015\n",
        "Line" : 83,
        "CharPositionInLine" : 42
      },
      "17" : {
        "Text" : "# BigObj required for tests.\n",
        "Line" : 84,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# Until version 4.3.2, GCC doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 97,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Sun Pro doesn't provide macros to indicate whether exceptions and\n\n# RTTI are enabled, so we define GTEST_HAS_* explicitly.\n",
        "Line" : 105,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# CMake 2.8 changes Visual Age's compiler ID to \"XL\".\n",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Until version 9.0, Visual Age doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 114,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# RTTI can not be disabled in HP aCC compiler.\n",
        "Line" : 122,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# The pthreads library is available and allowed.\n",
        "Line" : 126,
        "CharPositionInLine" : 32
      },
      "24" : {
        "Text" : "# For building gtest's own tests and samples.\n",
        "Line" : 132,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# For building the gtest libraries.\n",
        "Line" : 140,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# type can be either STATIC or SHARED to denote a static or shared library.\n\n# ARGN refers to additional arguments after 'cxx_flags'.\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "########################################################################\n\n#\n\n# Helper functions for creating build targets.\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# cxx_executable_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ executable that depends on the given libraries and\n\n# is built from the given source files with the given compiler flags.\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# To support mixing linking in static and dynamic libraries, link each\n\n# library in with an extra call to target_link_libraries.\n",
        "Line" : 191,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# cxx_executable(name dir lib srcs...)\n\n#\n\n# creates a named target that depends on the given libs and is built\n\n# from the given source files.  dir/name.cc is implicitly included in\n\n# the source file list.\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Sets PYTHONINTERP_FOUND and PYTHON_EXECUTABLE.\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# cxx_test_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ test that depends on the given libs and is built\n\n# from the given source files with the given compiler flags.\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# cxx_test(name libs srcs...)\n\n#\n\n# creates a named test target that depends on the given libs and is\n\n# built from the given source files.  Unlike cxx_test_with_flags,\n\n# test/name.cc is already implicitly included in the source file list.\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# py_test(name)\n\n#\n\n# creates a Python test with the given name whose main module is in\n\n# test/name.py.  It does nothing if Python is not installed.\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# We are not supporting Python tests on Linux yet as they consider\n\n# all Linux environments to be google3 and try to use google3 features.\n",
        "Line" : 235,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# ${CMAKE_BINARY_DIR} is known at configuration time, so we can\n\n# directly bind it from cmake. ${CTEST_CONFIGURATION_TYPE} is known\n\n# only at ctest runtime (by calling ctest -c <Configuration>), so\n\n# we have to escape $ to delay variable substitution here.\n",
        "Line" : 238,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 38
    },
    "Compile/CompileDependencies/ThirdParty/assimp/contrib/irrXML/CMakeLists.txt" : {
      "ObjectId" : "48941970a1284d0c4ae6a4e48c57f0bc837ffc51",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/assimp/contrib/openddlparser/CMakeLists.txt" : {
      "ObjectId" : "9e903ca3f10162607e15180ff9067b3113bba44c",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Force to always compile with W4\n",
        "Line" : 58,
        "CharPositionInLine" : 53
      },
      "1" : {
        "Text" : "# Update if necessary\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Include the doc component.\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Create the coveralls target.\n",
        "Line" : 159,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# The source files.\n\n# If we should upload.\n",
        "Line" : 161,
        "CharPositionInLine" : 27
      },
      "5" : {
        "Text" : "# (Optional) Alternate project cmake module path.\n",
        "Line" : 163,
        "CharPositionInLine" : 40
      },
      "CommentCount" : 6
    },
    "Compile/CompileDependencies/ThirdParty/assimp/contrib/zip/CMakeLists.txt" : {
      "ObjectId" : "450ef3a987c5c06a25baf77034e7ce2ad2b1905a",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use secure functions by defaualt and suppress warnings about \"deprecated\" functions\n",
        "Line" : 5,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# zip\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# test\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Compile/CompileDependencies/ThirdParty/assimp/contrib/zip/test/CMakeLists.txt" : {
      "ObjectId" : "7734dcbe757f019c8e41d8fb43a20da55e2cf3ea",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# test\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Compile/CompileDependencies/ThirdParty/assimp/contrib/zlib/CMakeLists.txt" : {
      "ObjectId" : "5f1368adb96501e00888f85c6ec04fe4853e4da0",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake 3.0 changed the project command, setting policy CMP0048 reverts to the old behaviour.\n\n# See http://www.cmake.org/cmake/help/v3.0/policy/CMP0048.html\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(INSTALL_BIN_DIR \"${CMAKE_INSTALL_PREFIX}/bin\" CACHE PATH \"Installation directory for executables\")\n\n#set(INSTALL_LIB_DIR \"${CMAKE_INSTALL_PREFIX}/lib\" CACHE PATH \"Installation directory for libraries\")\n\n#set(INSTALL_INC_DIR \"${CMAKE_INSTALL_PREFIX}/include\" CACHE PATH \"Installation directory for headers\")\n\n#set(INSTALL_MAN_DIR \"${CMAKE_INSTALL_PREFIX}/share/man\" CACHE PATH \"Installation directory for manual pages\")\n\n#set(INSTALL_PKGCONFIG_DIR \"${CMAKE_INSTALL_PREFIX}/share/pkgconfig\" CACHE PATH \"Installation directory for pkgconfig (.pc) files\")\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Check to see if we have large file support\n\n#\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We add these other definitions here because CheckTypeSize.cmake\n\n# in CMake 2.4.x does not automatically do so and we want\n\n# compatibility with CMake 2.4.x.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# clear variable\n",
        "Line" : 54,
        "CharPositionInLine" : 32
      },
      "5" : {
        "Text" : "#\n\n# Check for fseeko\n\n#\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# Check for unistd.h\n\n#\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# If we're doing an out of source build and the user has a zconf.h\n\n# in their source tree...\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#============================================================================\n\n# zlib\n\n#============================================================================\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# If present will override custom build rule below.\n",
        "Line" : 135,
        "CharPositionInLine" : 23
      },
      "10" : {
        "Text" : "# parse the full version number from zlib.h and include in ZLIB_FULL_VERSION\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# This gets us DLL resource information when compiling on MinGW.\n",
        "Line" : 178,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 12
    },
    "Compile/CompileDependencies/ThirdParty/assimp/port/AndroidJNI/CMakeLists.txt" : {
      "ObjectId" : "ddc71885000e8206253e353c4cd5f4f0cfa5a7d2",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/assimp/port/iOS/IPHONEOS_ARM64_TOOLCHAIN.cmake" : {
      "ObjectId" : "3aea8342ef9de0b7141ee55d6baf0687e5fdd119",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/assimp/port/iOS/IPHONEOS_ARMV6_TOOLCHAIN.cmake" : {
      "ObjectId" : "5ec416322da259a8ad021df3bdca091fbbf54c10",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/assimp/port/iOS/IPHONEOS_ARMV7S_TOOLCHAIN.cmake" : {
      "ObjectId" : "f11519aa41da9536483f7ee8b5a9ad3adb98ff1c",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/assimp/port/iOS/IPHONEOS_ARMV7_TOOLCHAIN.cmake" : {
      "ObjectId" : "b7f196c0f5bcbd04d3f138f075312be99627f96e",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/assimp/port/iOS/IPHONEOS_I386_TOOLCHAIN.cmake" : {
      "ObjectId" : "22178bb87f96a8c64b643f32b7ba6e62b8bca4a5",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/assimp/port/iOS/IPHONEOS_X86_64_TOOLCHAIN.cmake" : {
      "ObjectId" : "3c69ecdb3872a7b17cb227a2de6c1a4f6e28f489",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/assimp/port/jassimp/build.xml" : {
      "ObjectId" : "1352e3ffa70fc35ca42b1504b7d8a3f971b9cc28",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "ANT",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/freetype-2.4.0/Makefile" : {
      "ObjectId" : "c1fa16cee542044c2b91397de1bd931260d2d0ce",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# FreeType 2 build system -- top-level Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright 1996-2000, 2002, 2006 by\n\n# David Turner, Robert Wilhelm, and Werner Lemberg.\n\n#\n\n# This file is part of the FreeType project, and may only be used, modified,\n\n# and distributed under the terms of the FreeType project license,\n\n# LICENSE.TXT.  By continuing to use, modify, or distribute this file you\n\n# indicate that you have read the license and understand and accept it\n\n# fully.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Project names\n\n#\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The variable TOP_DIR holds the path to the topmost directory in the project\n\n# engine source hierarchy.  If it is not defined, default it to `.'.\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The variable OBJ_DIR gives the location where object files and the\n\n# FreeType library are built.\n\n#\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# EOF\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "Compile/CompileDependencies/ThirdParty/freetype-2.4.0/src/tools/ftrandom/Makefile" : {
      "ObjectId" : "2e619299cdfcdb13ec98282f200b013d60a002c3",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# TOP_DIR and OBJ_DIR should be set by the user to the right directories,\n\n# if necessary.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The setup below is for gcc on a Unix-like platform.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# EOF\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Compile/CompileDependencies/ThirdParty/glew-2.1.0/Makefile" : {
      "ObjectId" : "b991460a17efdd6a5f3157275c62c2d2ff8e3942",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#!gmake\n\n## The OpenGL Extension Wrangler Library\n\n## Copyright (C) 2002-2008, Milan Ikits <milan ikits[]ieee org>\n\n## Copyright (C) 2002-2008, Marcelo E. Magallon <mmagallo[]debian org>\n\n## Copyright (C) 2002, Lev Povalahev\n\n## All rights reserved.\n\n## \n\n## Redistribution and use in source and binary forms, with or without \n\n## modification, are permitted provided that the following conditions are met:\n\n## \n\n## * Redistributions of source code must retain the above copyright notice, \n\n##   this list of conditions and the following disclaimer.\n\n## * Redistributions in binary form must reproduce the above copyright notice, \n\n##   this list of conditions and the following disclaimer in the documentation \n\n##   and/or other materials provided with the distribution.\n\n## * The name of the author may be used to endorse or promote products \n\n##   derived from this software without specific prior written permission.\n\n##\n\n## THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" \n\n## AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE \n\n## IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n## ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE \n\n## LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR \n\n## CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF \n\n## SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n## INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n## CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n## ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF\n\n## THE POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# To disable stripping of linked binaries either:\n\n#   - use STRIP= on gmake command-line\n\n#   - edit this makefile to set STRIP to the empty string\n\n# (Note: STRIP does not affect the strip in the install step)\n\n#\n\n# To disable symlinks:\n\n#   - use LN= on gmake command-line\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# GLEW shared and static libraries\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Force re-write of glew.pc, GLEW_DEST can vary\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# GLEW utility programs\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Don't build glewinfo or visualinfo for NaCL, yet.\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Install targets\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# runtime\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# development files\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Distributions\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "Compile/CompileDependencies/ThirdParty/libjpeg-turbo/CMakeLists.txt" : {
      "ObjectId" : "cc548f5ad1322451dba2bd8350f2c292fa12e11e",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# NOTE: On Windows, this does nothing except when using MinGW or Cygwin.\n\n# CMAKE_BUILD_TYPE has no meaning in Visual Studio, and it always defaults to\n\n# Debug when using NMake.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Detect CPU type and whether we're building 64-bit or 32-bit code\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###############################################################################\n\n# INSTALL DIRECTORIES\n\n###############################################################################\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# When the prefix is /opt/${CMAKE_PROJECT_NAME}, we assume that an \"official\"\n\n# build is being created, and thus we install things into specific locations.\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###############################################################################\n\n# CONFIGURATION OPTIONS\n\n###############################################################################\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Explicitly setting CMAKE_POSITION_INDEPENDENT_CODE=FALSE disables PIC for all\n\n# targets, which will cause the shared library builds to fail.  Thus, if shared\n\n# libraries are enabled and CMAKE_POSITION_INDEPENDENT_CODE is explicitly set\n\n# to FALSE, we need to unset it, thus restoring the default behavior\n\n# (automatically using PIC for shared library targets.)\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# This causes SO_MAJOR_VERSION/SO_MINOR_VERSION to reset to defaults if\n\n# WITH_JPEG7 or WITH_JPEG8 has changed.\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Because the TurboJPEG API library uses versioned symbols and changes the\n\n# names of functions whenever they are modified in a backward-incompatible\n\n# manner, it is always backward-ABI-compatible with itself, so the major and\n\n# minor SO versions don't change.  However, we increase the middle number (the\n\n# SO \"age\") whenever functions are added to the API.\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "###############################################################################\n\n# COMPILER SETTINGS\n\n###############################################################################\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Use the static C library for all build types\n",
        "Line" : 301,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Use the maximum optimization level for release builds\n",
        "Line" : 313,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Use the maximum optimization level for release builds\n",
        "Line" : 323,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Check for headers\n",
        "Line" : 356,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Check for functions\n",
        "Line" : 362,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Check for types\n",
        "Line" : 370,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Check for compiler features\n",
        "Line" : 374,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# The Solaris linker doesn't like our version script for the libjpeg API\n\n# library, but the version script for the TurboJPEG API library should\n\n# still work.\n",
        "Line" : 460,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# Generate files\n",
        "Line" : 480,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Include directories and compiler definitions\n",
        "Line" : 491,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "###############################################################################\n\n# TARGETS\n\n###############################################################################\n",
        "Line" : 495,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "###############################################################################\n\n# TESTS\n\n###############################################################################\n",
        "Line" : 649,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# The output of the floating point DCT/IDCT algorithms differs depending on the\n\n# type of floating point math used, so the FLOATTEST CMake variable must be\n\n# set in order to tell the testing system which floating point results it\n\n# should expect:\n\n#\n\n# sse = validate against the expected results from the libjpeg-turbo SSE SIMD\n\n#       extensions\n\n# 32bit = validate against the expected results from the C code when running on\n\n#         a 32-bit FPU (or when SSE is being used for floating point math,\n\n#         which is generally the default with x86-64 compilers)\n\n# 64bit = validate against the expected results from the C code when running\n\n#         on a 64-bit FPU\n\n# 387 = validate against the expected results from the C code when the 387 FPU\n\n#       is being used for floating point math (which is generally the default\n\n#       with x86 compilers)\n\n# msvc = validate against the expected results from the C code when compiled\n\n#        with a 32-bit version of Visual C++\n",
        "Line" : 817,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# This causes FLOATTEST to reset to the default value if WITH_SIMD has\n\n# changed.\n",
        "Line" : 851,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Test compressing from/decompressing to an arbitrary subregion of a larger\n\n# image buffer\n",
        "Line" : 901,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# These tests are carefully crafted to provide full coverage of as many of\n\n# the underlying algorithms as possible (including all of the\n\n# SIMD-accelerated ones.)\n",
        "Line" : 958,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# CC: null  SAMP: fullsize  FDCT: islow  ENT: huff\n",
        "Line" : 976,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# CC: null  SAMP: fullsize  IDCT: islow  ENT: huff\n",
        "Line" : 981,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# CC: RGB->RGB565  SAMP: fullsize  IDCT: islow  ENT: huff\n",
        "Line" : 993,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# CC: RGB->RGB565 (dithered)  SAMP: fullsize  IDCT: islow  ENT: huff\n",
        "Line" : 998,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# CC: RGB->YCC  SAMP: fullsize/h2v1  FDCT: ifast  ENT: 2-pass huff\n",
        "Line" : 1004,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# CC: YCC->RGB  SAMP: fullsize/h2v1 fancy  IDCT: ifast  ENT: huff\n",
        "Line" : 1009,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# CC: YCC->RGB  SAMP: h2v1 merged  IDCT: ifast  ENT: huff\n",
        "Line" : 1014,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# CC: YCC->RGB565  SAMP: h2v1 merged  IDCT: ifast  ENT: huff\n",
        "Line" : 1020,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# CC: YCC->RGB565 (dithered)  SAMP: h2v1 merged  IDCT: ifast  ENT: huff\n",
        "Line" : 1026,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# CC: RGB->YCC  SAMP: fullsize/h2v2  FDCT: ifast  ENT: prog huff\n",
        "Line" : 1032,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# CC: YCC->RGB  SAMP: fullsize/h2v2 fancy  IDCT: ifast  ENT: prog huff\n",
        "Line" : 1038,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# CC: YCC->RGB  SAMP: h2v2 merged  IDCT: ifast  ENT: prog huff\n",
        "Line" : 1043,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# CC: RGB->Gray  SAMP: fullsize  FDCT: islow  ENT: huff\n",
        "Line" : 1048,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# CC: Gray->Gray  SAMP: fullsize  IDCT: islow  ENT: huff\n",
        "Line" : 1053,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "# CC: Gray->RGB  SAMP: fullsize  IDCT: islow  ENT: huff\n",
        "Line" : 1058,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# CC: Gray->RGB565  SAMP: fullsize  IDCT: islow  ENT: huff\n",
        "Line" : 1064,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "# CC: Gray->RGB565 (dithered)  SAMP: fullsize  IDCT: islow  ENT: huff\n",
        "Line" : 1069,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "# CC: RGB->YCC  SAMP: fullsize smooth/h2v2 smooth  FDCT: islow\n\n# ENT: 2-pass huff\n",
        "Line" : 1075,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# CC: RGB->YCC  SAMP: fullsize/int  FDCT: float  ENT: prog huff\n",
        "Line" : 1082,
        "CharPositionInLine" : 4
      },
      "44" : {
        "Text" : "# CC: YCC->RGB  SAMP: fullsize/int  IDCT: float  ENT: prog huff\n",
        "Line" : 1087,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "# CC: RGB->YCC  SAMP: fullsize/int  FDCT: ifast  ENT: prog huff\n",
        "Line" : 1093,
        "CharPositionInLine" : 4
      },
      "46" : {
        "Text" : "# CC: YCC->RGB  SAMP: fullsize/int  IDCT: ifast  ENT: prog huff\n",
        "Line" : 1098,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "# CC: YCC->RGB  SAMP: fullsize/h2v2  FDCT: islow  ENT: arith\n",
        "Line" : 1104,
        "CharPositionInLine" : 4
      },
      "48" : {
        "Text" : "# CC: YCC->RGB  SAMP: fullsize  FDCT: islow  ENT: prog arith\n",
        "Line" : 1113,
        "CharPositionInLine" : 4
      },
      "49" : {
        "Text" : "# CC: RGB->YCC  SAMP: h2v2 merged  IDCT: ifast  ENT: arith\n",
        "Line" : 1121,
        "CharPositionInLine" : 4
      },
      "50" : {
        "Text" : "# 2/1--   CC: YCC->RGB  SAMP: h2v2 merged  IDCT: 16x16 islow  ENT: huff\n\n# 15/8--  CC: YCC->RGB  SAMP: h2v2 merged  IDCT: 15x15 islow  ENT: huff\n\n# 13/8--  CC: YCC->RGB  SAMP: h2v2 merged  IDCT: 13x13 islow  ENT: huff\n\n# 11/8--  CC: YCC->RGB  SAMP: h2v2 merged  IDCT: 11x11 islow  ENT: huff\n\n# 9/8--   CC: YCC->RGB  SAMP: h2v2 merged  IDCT: 9x9 islow  ENT: huff\n\n# 7/8--   CC: YCC->RGB  SAMP: h2v2 merged  IDCT: 7x7 islow/14x14 islow\n\n#         ENT: huff\n\n# 3/4--   CC: YCC->RGB  SAMP: h2v2 merged  IDCT: 6x6 islow/12x12 islow\n\n#         ENT: huff\n\n# 5/8--   CC: YCC->RGB  SAMP: h2v2 merged  IDCT: 5x5 islow/10x10 islow\n\n#         ENT: huff\n\n# 1/2--   CC: YCC->RGB  SAMP: h2v2 merged  IDCT: 4x4 islow/8x8 islow\n\n#         ENT: huff\n\n# 3/8--   CC: YCC->RGB  SAMP: h2v2 merged  IDCT: 3x3 islow/6x6 islow\n\n#         ENT: huff\n\n# 1/4--   CC: YCC->RGB  SAMP: h2v2 merged  IDCT: 2x2 islow/4x4 islow\n\n#         ENT: huff\n\n# 1/8--   CC: YCC->RGB  SAMP: h2v2 merged  IDCT: 1x1 islow/2x2 islow\n\n#         ENT: huff\n",
        "Line" : 1131,
        "CharPositionInLine" : 2
      },
      "51" : {
        "Text" : "# CC: YCC->RGB (dithered)  SAMP: h2v2 fancy  IDCT: islow  ENT: huff\n",
        "Line" : 1159,
        "CharPositionInLine" : 4
      },
      "52" : {
        "Text" : "# CC: YCC->RGB565  SAMP: h2v2 fancy  IDCT: islow  ENT: huff\n",
        "Line" : 1164,
        "CharPositionInLine" : 4
      },
      "53" : {
        "Text" : "# CC: YCC->RGB565 (dithered)  SAMP: h2v2 fancy  IDCT: islow  ENT: huff\n",
        "Line" : 1169,
        "CharPositionInLine" : 4
      },
      "54" : {
        "Text" : "# CC: YCC->RGB565  SAMP: h2v2 merged  IDCT: islow  ENT: huff\n",
        "Line" : 1174,
        "CharPositionInLine" : 4
      },
      "55" : {
        "Text" : "# CC: YCC->RGB565 (dithered)  SAMP: h2v2 merged  IDCT: islow  ENT: huff\n",
        "Line" : 1180,
        "CharPositionInLine" : 4
      },
      "56" : {
        "Text" : "# Partial decode tests.  These tests are designed to cover all of the\n\n# possible code paths in jpeg_skip_scanlines().\n",
        "Line" : 1186,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "# Context rows: Yes  Intra-iMCU row: Yes  iMCU row prefetch: No   ENT: huff\n",
        "Line" : 1189,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# Context rows: Yes  Intra-iMCU row: No   iMCU row prefetch: Yes  ENT: arith\n",
        "Line" : 1194,
        "CharPositionInLine" : 2
      },
      "59" : {
        "Text" : "# Context rows: Yes  Intra-iMCU row: No   iMCU row prefetch: No   ENT: prog huff\n",
        "Line" : 1201,
        "CharPositionInLine" : 2
      },
      "60" : {
        "Text" : "# Context rows: Yes  Intra-iMCU row: No   iMCU row prefetch: No   ENT: arith\n",
        "Line" : 1210,
        "CharPositionInLine" : 2
      },
      "61" : {
        "Text" : "# Context rows: No   Intra-iMCU row: Yes  ENT: huff\n",
        "Line" : 1218,
        "CharPositionInLine" : 2
      },
      "62" : {
        "Text" : "# Context rows: No   Intra-iMCU row: No   ENT: prog huff\n",
        "Line" : 1226,
        "CharPositionInLine" : 2
      },
      "63" : {
        "Text" : "# Context rows: No   Intra-iMCU row: No   ENT: arith\n",
        "Line" : 1235,
        "CharPositionInLine" : 2
      },
      "64" : {
        "Text" : "###############################################################################\n\n# INSTALLATION\n\n###############################################################################\n",
        "Line" : 1307,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 65
    },
    "Compile/CompileDependencies/ThirdParty/libjpeg-turbo/cmakescripts/BuildPackages.cmake" : {
      "ObjectId" : "57f0672f47cc4cbf74e0777384b31c062ccd1c8a",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is included from the top-level CMakeLists.txt.  We just store it\n\n# here to avoid cluttering up that file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################################\n\n# Linux RPM and DEB\n\n###############################################################################\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Re-set CMAKE_POSITION_INDEPENDENT_CODE so that the RPM spec file works\n\n# properly\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Linux\n",
        "Line" : 63,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "###############################################################################\n\n# Windows installer (NullSoft Installer)\n\n###############################################################################\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# WIN32\n",
        "Line" : 113,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "###############################################################################\n\n# Cygwin Package\n\n###############################################################################\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# CYGWIN\n",
        "Line" : 126,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "###############################################################################\n\n# Mac DMG\n\n###############################################################################\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# APPLE\n",
        "Line" : 158,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "###############################################################################\n\n# Generic\n\n###############################################################################\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "Compile/CompileDependencies/ThirdParty/libjpeg-turbo/cmakescripts/GNUInstallDirs.cmake" : {
      "ObjectId" : "ef564bb655d7326c963f315baa201c1ec41bf814",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# GNUInstallDirs\n\n# --------------\n\n#\n\n# Define GNU standard installation directories\n\n#\n\n# Provides install directory variables as defined by the\n\n# `GNU Coding Standards`_.\n\n#\n\n# .. _`GNU Coding Standards`: https://www.gnu.org/prep/standards/html_node/Directory-Variables.html\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# Inclusion of this module defines the following variables:\n\n#\n\n# ``CMAKE_INSTALL_<dir>``\n\n#\n\n#   Destination for files of a given type.  This value may be passed to\n\n#   the ``DESTINATION`` options of :command:`install` commands for the\n\n#   corresponding file type.\n\n#\n\n# ``CMAKE_INSTALL_FULL_<dir>``\n\n#\n\n#   The absolute path generated from the corresponding ``CMAKE_INSTALL_<dir>``\n\n#   value.  If the value is not already an absolute path, an absolute path\n\n#   is constructed typically by prepending the value of the\n\n#   :variable:`CMAKE_INSTALL_PREFIX` variable.  However, there are some\n\n#   `special cases`_ as documented below.\n\n#\n\n# where ``<dir>`` is one of:\n\n#\n\n# ``BINDIR``\n\n#   user executables (``bin``)\n\n# ``SBINDIR``\n\n#   system admin executables (``sbin``)\n\n# ``LIBEXECDIR``\n\n#   program executables (``libexec``)\n\n# ``SYSCONFDIR``\n\n#   read-only single-machine data (``etc``)\n\n# ``SHAREDSTATEDIR``\n\n#   modifiable architecture-independent data (``com``)\n\n# ``LOCALSTATEDIR``\n\n#   modifiable single-machine data (``var``)\n\n# ``LIBDIR``\n\n#   object code libraries (``lib`` or ``lib64``\n\n#   or ``lib/<multiarch-tuple>`` on Debian)\n\n# ``INCLUDEDIR``\n\n#   C header files (``include``)\n\n# ``OLDINCLUDEDIR``\n\n#   C header files for non-gcc (``/usr/include``)\n\n# ``DATAROOTDIR``\n\n#   read-only architecture-independent data root (``share``)\n\n# ``DATADIR``\n\n#   read-only architecture-independent data (``DATAROOTDIR``)\n\n# ``INFODIR``\n\n#   info documentation (``DATAROOTDIR/info``)\n\n# ``LOCALEDIR``\n\n#   locale-dependent data (``DATAROOTDIR/locale``)\n\n# ``MANDIR``\n\n#   man documentation (``DATAROOTDIR/man``)\n\n# ``DOCDIR``\n\n#   documentation root (``DATAROOTDIR/doc/PROJECT_NAME``)\n\n#\n\n# If the includer does not define a value the above-shown default will be\n\n# used and the value will appear in the cache for editing by the user.\n\n#\n\n# Special Cases\n\n# ^^^^^^^^^^^^^\n\n#\n\n# The following values of :variable:`CMAKE_INSTALL_PREFIX` are special:\n\n#\n\n# ``/``\n\n#\n\n#   For ``<dir>`` other than the ``SYSCONFDIR`` and ``LOCALSTATEDIR``,\n\n#   the value of ``CMAKE_INSTALL_<dir>`` is prefixed with ``usr/`` if\n\n#   it is not user-specified as an absolute path.  For example, the\n\n#   ``INCLUDEDIR`` value ``include`` becomes ``usr/include``.\n\n#   This is required by the `GNU Coding Standards`_, which state:\n\n#\n\n#     When building the complete GNU system, the prefix will be empty\n\n#     and ``/usr`` will be a symbolic link to ``/``.\n\n#\n\n# ``/usr``\n\n#\n\n#   For ``<dir>`` equal to ``SYSCONFDIR`` or ``LOCALSTATEDIR``, the\n\n#   ``CMAKE_INSTALL_FULL_<dir>`` is computed by prepending just ``/``\n\n#   to the value of ``CMAKE_INSTALL_<dir>`` if it is not user-specified\n\n#   as an absolute path.  For example, the ``SYSCONFDIR`` value ``etc``\n\n#   becomes ``/etc``.  This is required by the `GNU Coding Standards`_.\n\n#\n\n# ``/opt/...``\n\n#\n\n#   For ``<dir>`` equal to ``SYSCONFDIR`` or ``LOCALSTATEDIR``, the\n\n#   ``CMAKE_INSTALL_FULL_<dir>`` is computed by *appending* the prefix\n\n#   to the value of ``CMAKE_INSTALL_<dir>`` if it is not user-specified\n\n#   as an absolute path.  For example, the ``SYSCONFDIR`` value ``etc``\n\n#   becomes ``/etc/opt/...``.  This is defined by the\n\n#   `Filesystem Hierarchy Standard`_.\n\n#\n\n# .. _`Filesystem Hierarchy Standard`: https://refspecs.linuxfoundation.org/FHS_3.0/fhs/index.html\n\n#\n\n# Macros\n\n# ^^^^^^\n\n#\n\n# .. command:: GNUInstallDirs_get_absolute_install_dir\n\n#\n\n#   ::\n\n#\n\n#     GNUInstallDirs_get_absolute_install_dir(absvar var)\n\n#\n\n#   Set the given variable ``absvar`` to the absolute path contained\n\n#   within the variable ``var``.  This is to allow the computation of an\n\n#   absolute path, accounting for all the special cases documented\n\n#   above.  While this macro is used to compute the various\n\n#   ``CMAKE_INSTALL_FULL_<dir>`` variables, it is exposed publicly to\n\n#   allow users who create additional path variables to also compute\n\n#   absolute paths where necessary, using the same logic.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2016 D. R. Commander\n\n# Copyright 2016 Dmitry Marakasov\n\n# Copyright 2016 Roger Leigh\n\n# Copyright 2015 Alex Turbov\n\n# Copyright 2014 Rolf Eike Beer\n\n# Copyright 2014 Daniele E. Domenichelli\n\n# Copyright 2013 Dimitri John Ledkov\n\n# Copyright 2011 Alex Neundorf\n\n# Copyright 2011 Eric NOULARD\n\n# Copyright 2011, 2013-2015 Kitware, Inc.\n\n# Copyright 2011 Nikita Krupen'ko\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n#\n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Installation directories\n\n#\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If CMAKE_INSTALL_PREFIX changes and CMAKE_INSTALL_*DIR is still set to the\n\n# default value, then modify it accordingly.  This presumes that the default\n\n# value may change based on the prefix.\n",
        "Line" : 166,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Save for next run\n",
        "Line" : 191,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Override this default 'lib' with 'lib64' iff:\n\n#  - we are on Linux system but NOT cross-compiling\n\n#  - we are NOT on debian\n\n#  - we are on a 64 bits system\n\n# reason is: amd64 ABI: http://www.x86-64.org/documentation/abi.pdf\n\n# For Debian with multiarch, use 'lib/${CMAKE_LIBRARY_ARCHITECTURE}' if\n\n# CMAKE_LIBRARY_ARCHITECTURE is set (which contains e.g. \"i386-linux-gnu\"\n\n# and CMAKE_INSTALL_PREFIX is \"/usr\"\n\n# See http://wiki.debian.org/Multiarch\n",
        "Line" : 237,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# is this a debian system ?\n",
        "Line" : 248,
        "CharPositionInLine" : 38
      },
      "7" : {
        "Text" : "# not debian, rely on CMAKE_SIZEOF_VOID_P:\n",
        "Line" : 254,
        "CharPositionInLine" : 11
      },
      "8" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Values whose defaults are relative to DATAROOTDIR.  Store empty values in\n\n# the cache and store the defaults in local variables if the cache values are\n\n# not set explicitly.  This auto-updates the defaults as DATAROOTDIR changes.\n",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 331,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Handle the specific case of an empty CMAKE_INSTALL_DATAROOTDIR\n",
        "Line" : 353,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Handle special cases:\n\n# - CMAKE_INSTALL_PREFIX == /\n\n# - CMAKE_INSTALL_PREFIX == /usr\n\n# - CMAKE_INSTALL_PREFIX == /opt/...\n",
        "Line" : 362,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Result directories\n\n#\n",
        "Line" : 396,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "Compile/CompileDependencies/ThirdParty/libjpeg-turbo/cmakescripts/testclean.cmake" : {
      "ObjectId" : "fc3fc25e965855fe18640bba2dc0f7f00cf90a7a",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/libjpeg-turbo/java/CMakeLists.txt" : {
      "ObjectId" : "d51ada743818afdae7f94bec248975989299e5f0",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Allow the Java compiler flags to be set using an environment variable\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# UGLY HACK ALERT: If we don't do this, then UseJava.cmake will separate\n\n# class path members with a semicolon, which is interpreted as a command\n\n# separator by the MSYS shell.\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "Compile/CompileDependencies/ThirdParty/libjpeg-turbo/md5/CMakeLists.txt" : {
      "ObjectId" : "526ef08ba77327b274c4c6c29489e0af7cd730a6",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/libjpeg-turbo/sharedlib/CMakeLists.txt" : {
      "ObjectId" : "2d601701dcca7c389246b4aaf3ba2636982f806b",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Anything that must be linked against the shared C library on Windows must\n\n# be built in this subdirectory, because CMake doesn't allow us to override\n\n# the compiler flags for each build type except at directory scope.  Note\n\n# to CMake developers:  Add a COMPILE_FLAGS_<CONFIG> target property, or\n\n# better yet, provide a friendly way of configuring a Windows target to use the\n\n# static C library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build all configurations against shared C library\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# This tells CMake that the \"source\" files haven't been generated yet\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# The jsimd_*.c file is built using /MT, so this prevents a linker warning.\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "Compile/CompileDependencies/ThirdParty/libjpeg-turbo/simd/CMakeLists.txt" : {
      "ObjectId" : "2b37525fb6033a6f04512186d0fd27e6d07d59bc",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# x86[-64] (NASM)\n\n###############################################################################\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Allow the location of the NASM executable to be specified using the ASM_NASM\n\n# environment variable.  This should happen automatically, but unfortunately\n\n# enable_language(ASM_NASM) doesn't parse the ASM_NASM environment variable\n\n# until after CMAKE_ASM_NASM_COMPILER has been populated with the results of\n\n# searching for NASM or YASM in the PATH.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The CMake Visual Studio generators do not work properly with the ASM_NASM\n\n# language, so we have to go rogue here and use a custom command like we\n\n# did in prior versions of libjpeg-turbo.  (This is why we can't have nice\n\n# things.)\n",
        "Line" : 169,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "###############################################################################\n\n# ARM (GAS)\n\n###############################################################################\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Test whether we need gas-preprocessor.pl\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "###############################################################################\n\n# MIPS (GAS)\n\n###############################################################################\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "###############################################################################\n\n# Loongson (Intrinsics)\n\n###############################################################################\n",
        "Line" : 282,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "###############################################################################\n\n# PowerPC (Intrinsics)\n\n###############################################################################\n",
        "Line" : 305,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "###############################################################################\n\n# None\n\n###############################################################################\n",
        "Line" : 346,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# CPU_TYPE\n",
        "Line" : 354,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 10
    },
    "Compile/CompileDependencies/ThirdParty/libpng-1.6.34/CMakeLists.txt" : {
      "ObjectId" : "58173f2eb89b27c009ebead7c535df07e7660859",
      "LastModified" : "2018-05-19T10:33:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (C) 2007,2009-2017 Glenn Randers-Pehrson\n\n# Written by Christian Ehrlicher, 2007\n\n# Revised by Roger Lowman, 2009-2010\n\n# Revised by Clifford Yapp, 2011-2012\n\n# Revised by Roger Leigh, 2016\n\n# Revised by Andreas Franek, 2016\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This code is released under the libpng license.\n\n# For conditions of distribution and use, see the disclaimer\n\n# and license in png.h\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set MacOSX @rpath usage globally.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Use new variable expansion policy.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# needed packages\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#Allow users to specify location of Zlib,\n\n# Useful if zlib is being built alongside this as a sub-project\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# not needed on windows\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# COMMAND LINE OPTIONS\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Many more configuration options could be added here\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# set definitions and sources for arm\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# set definitions and sources for powerpc\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# set definitions and sources for intel\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# set definitions and sources for MIPS\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# SET LIBNAME\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# to distinguish between debug and release lib\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Check if LD supports linker scripts.\n",
        "Line" : 198,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Find symbol prefix.  Likely obsolete and unnecessary with recent\n\n# toolchains (it's not done in many other projects).\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# No awk available to generate sources; use pre-built pnglibconf.h\n",
        "Line" : 266,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Dummy\n",
        "Line" : 269,
        "CharPositionInLine" : 30
      },
      "20" : {
        "Text" : "# Generate .chk from .out with awk\n\n# generate_chk(INPUT inputfile OUTPUT outputfile [DEPENDS dep1 [dep2...]])\n",
        "Line" : 272,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Generate .out from .c with awk\n\n# generate_out(INPUT inputfile OUTPUT outputfile [DEPENDS dep1 [dep2...]])\n",
        "Line" : 295,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Generate specific source file with awk\n\n# generate_source(OUTPUT outputfile [DEPENDS dep1 [dep2...]])\n",
        "Line" : 318,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Copy file\n",
        "Line" : 337,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Generate scripts/pnglibconf.h\n",
        "Line" : 346,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Generate pnglibconf.c\n",
        "Line" : 352,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Generate pnglibconf.h\n",
        "Line" : 369,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Generate pngprefix.h\n",
        "Line" : 384,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# A single target handles generation of all generated files.  If\n\n# they are dependend upon separately by multiple targets, this\n\n# confuses parallel make (it would require a separate top-level\n\n# target for each file to track the dependencies properly).\n",
        "Line" : 426,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# OUR SOURCES\n",
        "Line" : 446,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# NOW BUILD OUR TARGET\n",
        "Line" : 514,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# msvc does not append 'lib' - do it here to have consistent name\n",
        "Line" : 525,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# does not work without changing name\n",
        "Line" : 543,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# MSVC doesn't use a different file extension for shared vs. static\n\n# libs.  We are able to change OUTPUT_NAME to remove the _static\n\n# for all other platforms.\n",
        "Line" : 547,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# msvc does not append 'lib' - do it here to have consistent name\n",
        "Line" : 561,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# have generator expressions\n",
        "Line" : 613,
        "CharPositionInLine" : 36
      },
      "36" : {
        "Text" : "# old 2.x add_test; limited and won't work well on Windows\n",
        "Line" : 619,
        "CharPositionInLine" : 9
      },
      "37" : {
        "Text" : "# Note LIBPNG is a dummy value as there are no generator expressions\n",
        "Line" : 620,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# Find test PNG files by globbing, but sort lists to ensure\n\n# consistency between different filesystems.\n",
        "Line" : 629,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "# Should already be sorted, but sort anyway to be certain.\n",
        "Line" : 721,
        "CharPositionInLine" : 6
      },
      "40" : {
        "Text" : "# Set a variable with CMake code which:\n\n# Creates a symlink from src to dest (if possible) or alternatively\n\n# copies if different.\n",
        "Line" : 758,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# If we don't need to symlink something that's coming from a build target,\n\n# we can go ahead and symlink/copy at configure time.\n",
        "Line" : 776,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "# We need to use generator expressions, which can be a bit tricky, so for\n\n# simplicity make the symlink a POST_BUILD step and use the TARGET\n\n# signature of add_custom_command.\n",
        "Line" : 793,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "# Create source generation scripts.\n",
        "Line" : 811,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# libpng is a library so default to 'lib'\n",
        "Line" : 820,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# CREATE PKGCONFIG FILES\n\n# we use the same files like ./configure, so we have to set its vars\n\n# Only do this on Windows for Cygwin - the files don't make much sense outside\n\n# a UNIX look alike\n",
        "Line" : 825,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# SET UP LINKS\n",
        "Line" : 844,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#   VERSION 16.${PNGLIB_RELEASE}.1.6.34\n",
        "Line" : 847,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# If CMake > 2.4.x, we set a variable used below to export\n\n# targets to an export file.\n\n# TODO: Use VERSION_GREATER after our cmake_minimum_required >= 2.6.2\n",
        "Line" : 853,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# future proof\n",
        "Line" : 858,
        "CharPositionInLine" : 38
      },
      "50" : {
        "Text" : "# INSTALL\n",
        "Line" : 862,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Create a symlink for libpng.dll.a => libpng16.dll.a on Cygwin\n",
        "Line" : 872,
        "CharPositionInLine" : 4
      },
      "52" : {
        "Text" : "# Install man pages\n",
        "Line" : 910,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# Install pkg-config files\n",
        "Line" : 916,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# On versions of CMake that support it, create an export file CMake\n\n# users can include() to import our targets\n",
        "Line" : 929,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# what's with libpng-manual.txt and all the extra files?\n",
        "Line" : 935,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# UNINSTALL\n\n# do we need this?\n",
        "Line" : 937,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# DIST\n\n# do we need this?\n",
        "Line" : 940,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# to create msvc import lib for mingw compiled shared lib\n\n# pexports libpng.dll > libpng.def\n\n# lib /def:libpng.def /machine:x86\n",
        "Line" : 943,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 59
    },
    "Compile/CompileDependencies/ThirdParty/libpng-1.6.34/Makefile.am" : {
      "ObjectId" : "08db3e5990940045df9c1c7f784c276e2f309fc5",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Makefile.am, the source file for Makefile.in (and hence Makefile), is\n\n#\n\n# Copyright (c) 2004-2016 Glenn Randers-Pehrson\n\n# Last changed in libpng 1.6.25 [September 1, 2016]\n\n#\n\n# This code is released under the libpng license.\n\n# For conditions of distribution and use, see the disclaimer\n\n# and license in png.h\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# test programs - run on make check, make distcheck\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Utilities - installed\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This ensures that pnglibconf.h gets built at the start of 'make all' or\n\n# 'make check', but it does not add dependencies to the individual programs,\n\n# this is done below.\n\n#\n\n# IMPORTANT: always add the object modules of new programs to the list below\n\n# because otherwise the sequence 'configure; make new-program' will *sometimes*\n\n# result in the installed (system) pnglibconf.h being used and the result is\n\n# always wrong and always very confusing.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Generally these are single line shell scripts to run a test with a particular\n\n# set of parameters:\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# man pages\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# generate the -config scripts if required\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# rules to build libpng, only build the old library on request\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# EXTRA_LTLIBRARIES= libpng.la\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#   Versioned symbols and restricted exports\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#   Only restricted exports when possible\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#distribute headers in /usr/include/libpng/*\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# pkg-config stuff, note that libpng.pc is always required in order\n\n# to get the correct library\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Extra source distribution files, '${srcdir}' is used below to stop build files\n\n# from those directories being included.  This only works if the configure is\n\n# not done in the source directory!\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# PNG_COPTS give extra options for the C compiler to be used on all compilation\n\n# steps (unless targe_CFLAGS is specified; that will take precedence over\n\n# AM_CFLAGS)\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# DFNCPP is normally just CPP - the C preprocessor - but on Solaris and maybe\n\n# other operating systems (NeXT?) the C preprocessor selected by configure\n\n# checks input tokens for validity - effectively it performs part of the ANSI-C\n\n# parsing - and therefore fails with the .df files.  configure.ac has special\n\n# checks for this and sets DFNCPP appropriately.\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Rename functions in scripts/prefix.out with a PNG_PREFIX prefix.\n\n# Rename macros in scripts/macro.lst from PNG_PREFIXpng_ to PNG_ (the actual\n\n# implementation of the macro).\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# is empty\n",
        "Line" : 223,
        "CharPositionInLine" : 13
      },
      "18" : {
        "Text" : "# The following is necessary to ensure that the local pnglibconf.h is used, not\n\n# an installed one (this can happen immediately after on a clean system if\n\n# 'make test' is the first thing the user does.)  Only files which include\n\n# one of the png source files (typically png.h or pngpriv.h) need to be listed\n\n# here:\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# We must use -DPNG_NO_USE_READ_MACROS here even when the library may actually\n\n# be built with PNG_USE_READ_MACROS; this prevents the read macros from\n\n# interfering with the symbol file format.\n",
        "Line" : 254,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# The .c file for pnglibconf.h is machine generated\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Symbol checks (.def and .out files should match)\n",
        "Line" : 285,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# used on demand to regenerate the standard header, CPPFLAGS should\n\n# be empty - no non-standard defines\n",
        "Line" : 294,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Extra checks\n",
        "Line" : 313,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Don't distribute the generated script files\n",
        "Line" : 316,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Make links between installed files with release-specific names and the generic\n\n# file names.  If this install rule is run the generic names will be deleted and\n\n# recreated - this has obvious issues for systems with multiple installations.\n",
        "Line" : 320,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# EXT_LIST is a list of the possibly library directory extensions, this exists\n\n# because we can't find a good way of discovering the file extensions that are\n\n# actually installed on a given system, so instead we check for every extension\n\n# we have seen.\n",
        "Line" : 338,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# If --enable-unversioned-links is specified the header and lib file links\n\n# will be automatically made on a 'make install':\n",
        "Line" : 366,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Likewise, --install-pc causes libpng.pc to be constructed:\n",
        "Line" : 376,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# And --install-config:\n",
        "Line" : 383,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# The following addition ensures that 'make all' always builds the test programs\n\n# too.  It used to, but some change either in libpng or configure stopped this\n\n# working.\n",
        "Line" : 389,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 31
    },
    "Compile/CompileDependencies/ThirdParty/minizip/CMakeLists.txt" : {
      "ObjectId" : "cfd91b10f8a2081a84c598693c3b1f619245f906",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#***************************************************************************\n\n# Copyright:  Matthias Schmieder,\n\n# E-Mail:     schmieder.matthias@gmail.com\n\n# Year:       2016\n\n#***************************************************************************\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set a consistent MACOSX_RPATH default across all CMake versions. \n\n# When CMake 2.8.12 is required, change this default to 1.\n\n# When CMake 3.0.0 is required, remove this block (see CMP0042).\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# set cmake debug postfix to d\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Ensure correct version of zlib is referenced\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# create minizip library\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Compile/CompileDependencies/ThirdParty/openal-soft/CMakeLists.txt" : {
      "ObjectId" : "f7a36b9d540f33becd29d6d370163432122873cd",
      "LastModified" : "2018-05-20T16:12:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake build file list for OpenAL\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This option is mainly for static linking OpenAL Soft into another project\n\n# that already defines the IDs. It is up to that project to ensure all\n\n# required IDs are defined.\n",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# QNX's gcc do not uses /usr/include and /usr/lib pathes by default\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Check if _POSIX_C_SOURCE and _XOPEN_SOURCE needs to be set for POSIX functions\n",
        "Line" : 130,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Set defines for large file support\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# MSVC may need workarounds for C99 restrict and inline\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# TODO: Once we truly require C99, these restrict and inline checks should go\n\n# away.\n",
        "Line" : 156,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Make sure we have C99-style inline semantics with GCC (4.3 or newer).\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Force no inlining for the next test.\n",
        "Line" : 184,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Check if we have a proper timespec declaration\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Define it here so we don't have to include config.h for it\n",
        "Line" : 200,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Some systems may need libatomic for C11 atomic functions to work\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Include liblog for Android logging\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Check if we have C99 variable length arrays\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Check if we have C99 bool\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Check if we have C11 static_assert\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Check if we have C11 alignas\n",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Check if we have C11 _Atomic\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Add definitions, compiler switches, etc.\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# We want RelWithDebInfo to actually include debug stuff (define _DEBUG\n\n# instead of NDEBUG)\n",
        "Line" : 327,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Set visibility/export options if available\n",
        "Line" : 363,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Yes GCC, really don't accept visibility modes you don't support\n",
        "Line" : 373,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Some systems need libm for some of the following math functions to work\n",
        "Line" : 463,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Check for the dlopen API (for dynamicly loading backend libs)\n",
        "Line" : 470,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Check for a cpuid intrinsic\n",
        "Line" : 481,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Check if we have Windows headers\n",
        "Line" : 576,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# We need pthreads outside of Windows\n",
        "Line" : 589,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# Some systems need pthread_np.h to get recursive mutexes\n",
        "Line" : 594,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# Check for a 64-bit type\n",
        "Line" : 673,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Check for SSE support\n",
        "Line" : 761,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Check for ARM Neon support\n",
        "Line" : 842,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Default backends, always available\n",
        "Line" : 876,
        "CharPositionInLine" : 14
      },
      "32" : {
        "Text" : "# Check ALSA backend\n",
        "Line" : 881,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Check OSS backend\n",
        "Line" : 897,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Check Solaris backend\n",
        "Line" : 915,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Check SndIO backend\n",
        "Line" : 930,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Check QSA backend\n",
        "Line" : 946,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Check Windows-only backends\n",
        "Line" : 962,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Check MMSystem backend\n",
        "Line" : 967,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "# -D_WIN32_WINNT=0x0502)\n",
        "Line" : 968,
        "CharPositionInLine" : 64
      },
      "40" : {
        "Text" : "# Check DSound backend\n",
        "Line" : 982,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "# Check for MMDevApi backend\n",
        "Line" : 994,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "# Check PortAudio backend\n",
        "Line" : 1015,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Check PulseAudio backend\n",
        "Line" : 1031,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Check JACK backend\n",
        "Line" : 1047,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Check CoreAudio backend\n",
        "Line" : 1063,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Some versions of OSX may need the AudioToolbox framework. Add it if\n\n# it's found.\n",
        "Line" : 1079,
        "CharPositionInLine" : 8
      },
      "47" : {
        "Text" : "# Check for OpenSL (Android) backend\n",
        "Line" : 1096,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# Optionally enable the Wave Writer backend\n",
        "Line" : 1115,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# This is always available\n",
        "Line" : 1123,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Get the current working branch and its latest abbreviated commit hash\n",
        "Line" : 1184,
        "CharPositionInLine" : 4
      },
      "51" : {
        "Text" : "# Needed for openal.pc.in\n",
        "Line" : 1202,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# End configuration\n",
        "Line" : 1210,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# Build main library\n",
        "Line" : 1228,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# Install alsoft.conf configuration file\n",
        "Line" : 1381,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# Install HRTF definitions\n",
        "Line" : 1390,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# Install AmbDec presets\n",
        "Line" : 1400,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 57
    },
    "Compile/CompileDependencies/ThirdParty/openal-soft/cmake/CheckFileOffsetBits.cmake" : {
      "ObjectId" : "1dc154e489b716b872c11755d854da957cb8317a",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check if the _FILE_OFFSET_BITS macro is needed for large files\n\n# CHECK_FILE_OFFSET_BITS()\n\n#\n\n# The following variables may be set before calling this macro to\n\n# modify the way the check is run:\n\n#\n\n#  CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n#  CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n#  CMAKE_REQUIRED_INCLUDES = list of include directories\n\n# Copyright (c) 2009, Chris Robinson\n\n#\n\n# Redistribution and use is allowed according to the terms of the LGPL license.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Compile/CompileDependencies/ThirdParty/openal-soft/cmake/CheckSharedFunctionExists.cmake" : {
      "ObjectId" : "c691fa9c9ea4b2f568ddf6d9f775e9c18eaab5df",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check if a symbol exists as a function, variable, or macro\n\n# CHECK_SYMBOL_EXISTS(<symbol> <files> <variable>)\n\n#\n\n# Check that the <symbol> is available after including given header\n\n# <files> and store the result in a <variable>.  Specify the list\n\n# of files in one argument as a semicolon-separated list.\n\n#\n\n# If the header files define the symbol as a macro it is considered\n\n# available and assumed to work.  If the header files declare the\n\n# symbol as a function or variable then the symbol must also be\n\n# available for linking.  If the symbol is a type or enum value\n\n# it will not be recognized (consider using CheckTypeSize or\n\n# CheckCSourceCompiles).\n\n#\n\n# The following variables may be set before calling this macro to\n\n# modify the way the check is run:\n\n#\n\n#  CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n#  CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n#  CMAKE_REQUIRED_INCLUDES = list of include directories\n\n#  CMAKE_REQUIRED_LIBRARIES = list of libraries to link\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2003-2011 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Compile/CompileDependencies/ThirdParty/openal-soft/cmake/FindALSA.cmake" : {
      "ObjectId" : "519304d6322113f05a736f6ff3f2b98f5e422e2a",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find alsa\n\n# Find the alsa libraries (asound)\n\n#\n\n#  This module defines the following variables:\n\n#     ALSA_FOUND       - True if ALSA_INCLUDE_DIR & ALSA_LIBRARY are found\n\n#     ALSA_LIBRARIES   - Set when ALSA_LIBRARY is found\n\n#     ALSA_INCLUDE_DIRS - Set when ALSA_INCLUDE_DIR is found\n\n#\n\n#     ALSA_INCLUDE_DIR - where to find asoundlib.h, etc.\n\n#     ALSA_LIBRARY     - the asound library\n\n#     ALSA_VERSION_STRING - the version of alsa found (since CMake 2.8.8)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2009-2011 Kitware, Inc.\n\n# Copyright 2009-2011 Philip Lowman <philip@yhbt.com>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are\n\n# met:\n\n#\n\n#  * Redistributions of source code must retain the above copyright notice,\n\n#    this list of conditions and the following disclaimer.\n\n#\n\n#  * Redistributions in binary form must reproduce the above copyright notice,\n\n#    this list of conditions and the following disclaimer in the documentation\n\n#    and/or other materials provided with the distribution.\n\n#\n\n#  * The names of Kitware, Inc., the Insight Consortium, or the names of\n\n#    any consortium members, or of any contributors, may not be used to\n\n#    endorse or promote products derived from this software without\n\n#    specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND CONTRIBUTORS ``AS IS''\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n\n# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set ALSA_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Compile/CompileDependencies/ThirdParty/openal-soft/cmake/FindAudioIO.cmake" : {
      "ObjectId" : "f0f8b2a59aff1f6e9987ef5d80f70da0b4008016",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find AudioIO includes and libraries\n\n#\n\n#   AUDIOIO_FOUND        - True if AUDIOIO_INCLUDE_DIR is found\n\n#   AUDIOIO_INCLUDE_DIRS - Set when AUDIOIO_INCLUDE_DIR is found\n\n#\n\n#   AUDIOIO_INCLUDE_DIR - where to find sys/audioio.h, etc.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Compile/CompileDependencies/ThirdParty/openal-soft/cmake/FindDSound.cmake" : {
      "ObjectId" : "4078deb5ed7ed8cbecac8a3acd127d157c7a9c8d",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find DirectSound includes and libraries\n\n#\n\n#   DSOUND_FOUND        - True if DSOUND_INCLUDE_DIR & DSOUND_LIBRARY are found\n\n#   DSOUND_LIBRARIES    - Set when DSOUND_LIBRARY is found\n\n#   DSOUND_INCLUDE_DIRS - Set when DSOUND_INCLUDE_DIR is found\n\n#\n\n#   DSOUND_INCLUDE_DIR - where to find dsound.h, etc.\n\n#   DSOUND_LIBRARY     - the dsound library\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# DSOUND_INCLUDE_DIR\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# DSOUND_LIBRARY\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Compile/CompileDependencies/ThirdParty/openal-soft/cmake/FindFFmpeg.cmake" : {
      "ObjectId" : "c489c2c3cd73e68b8276f57f99cade382408226c",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# vim: ts=2 sw=2\n\n# - Try to find the required ffmpeg components(default: AVFORMAT, AVUTIL, AVCODEC)\n\n#\n\n# Once done this will define\n\n#  FFMPEG_FOUND         - System has the all required components.\n\n#  FFMPEG_INCLUDE_DIRS  - Include directory necessary for using the required components headers.\n\n#  FFMPEG_LIBRARIES     - Link these to use the required ffmpeg components.\n\n#  FFMPEG_DEFINITIONS   - Compiler switches required for using the required ffmpeg components.\n\n#\n\n# For each of the components it will additionaly set.\n\n#   - AVCODEC\n\n#   - AVDEVICE\n\n#   - AVFORMAT\n\n#   - AVUTIL\n\n#   - POSTPROC\n\n#   - SWSCALE\n\n#   - SWRESAMPLE\n\n# the following variables will be defined\n\n#  <component>_FOUND        - System has <component>\n\n#  <component>_INCLUDE_DIRS - Include directory necessary for using the <component> headers\n\n#  <component>_LIBRARIES    - Link these to use <component>\n\n#  <component>_DEFINITIONS  - Compiler switches required for using <component>\n\n#  <component>_VERSION      - The components version\n\n#\n\n# Copyright (c) 2006, Matthias Kretz, <kretz@kde.org>\n\n# Copyright (c) 2008, Alexander Neundorf, <neundorf@kde.org>\n\n# Copyright (c) 2011, Michael Jansen, <kde@michael-jansen.biz>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n### Macro: set_component_found\n\n#\n\n# Marks the given component as found if both *_LIBRARIES AND *_INCLUDE_DIRS is present.\n\n#\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# message(STATUS \"  - ${_component} found.\")\n",
        "Line" : 44,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# message(STATUS \"  - ${_component} not found.\")\n",
        "Line" : 47,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "#\n\n### Macro: find_component\n\n#\n\n# Checks for the given component by invoking pkgconfig and then looking up the libraries and\n\n# include directories.\n\n#\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 59,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Check for all possible components.\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Check if the required components were found and add their stuff to the FFMPEG_* vars.\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# message(STATUS \"Required component ${_component} present.\")\n",
        "Line" : 136,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# message(STATUS \"Required component ${_component} missing.\")\n",
        "Line" : 141,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Add libz if it exists (needed for static ffmpeg builds)\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Build the include path and library list with duplicates removed.\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# cache the vars.\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Now set the noncached _FOUND vars for the components.\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Compile the list of required vars\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Give a nice error message if some of the required vars are missing.\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "Compile/CompileDependencies/ThirdParty/openal-soft/cmake/FindJACK.cmake" : {
      "ObjectId" : "b72fe3f9a91ed55050e41719d8d9486abd210c1b",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find JACK\n\n# Find the JACK libraries\n\n#\n\n#  This module defines the following variables:\n\n#     JACK_FOUND        - True if JACK_INCLUDE_DIR & JACK_LIBRARY are found\n\n#     JACK_INCLUDE_DIRS - where to find jack.h, etc.\n\n#     JACK_LIBRARIES    - the jack library\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2009-2011 Kitware, Inc.\n\n# Copyright 2009-2011 Philip Lowman <philip@yhbt.com>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are\n\n# met:\n\n#\n\n#  * Redistributions of source code must retain the above copyright notice,\n\n#    this list of conditions and the following disclaimer.\n\n#\n\n#  * Redistributions in binary form must reproduce the above copyright notice,\n\n#    this list of conditions and the following disclaimer in the documentation\n\n#    and/or other materials provided with the distribution.\n\n#\n\n#  * The names of Kitware, Inc., the Insight Consortium, or the names of\n\n#    any consortium members, or of any contributors, may not be used to\n\n#    endorse or promote products derived from this software without\n\n#    specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND CONTRIBUTORS ``AS IS''\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n\n# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set JACK_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Compile/CompileDependencies/ThirdParty/openal-soft/cmake/FindOSS.cmake" : {
      "ObjectId" : "feffb451674d24ac95fd1653bd41246afb3727a4",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find OSS includes\n\n#\n\n#   OSS_FOUND        - True if OSS_INCLUDE_DIR is found\n\n#   OSS_INCLUDE_DIRS - Set when OSS_INCLUDE_DIR is found\n\n#   OSS_LIBRARIES    - Set when OSS_LIBRARY is found\n\n#\n\n#   OSS_INCLUDE_DIR - where to find sys/soundcard.h, etc.\n\n#   OSS_LIBRARY     - where to find libossaudio (optional).\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Compile/CompileDependencies/ThirdParty/openal-soft/cmake/FindPortAudio.cmake" : {
      "ObjectId" : "fad2313df834759e4d83d0feb18abb5178b434f1",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find PortAudio includes and libraries\n\n#\n\n#   PORTAUDIO_FOUND        - True if PORTAUDIO_INCLUDE_DIR & PORTAUDIO_LIBRARY\n\n#                            are found\n\n#   PORTAUDIO_LIBRARIES    - Set when PORTAUDIO_LIBRARY is found\n\n#   PORTAUDIO_INCLUDE_DIRS - Set when PORTAUDIO_INCLUDE_DIR is found\n\n#\n\n#   PORTAUDIO_INCLUDE_DIR - where to find portaudio.h, etc.\n\n#   PORTAUDIO_LIBRARY     - the portaudio library\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Compile/CompileDependencies/ThirdParty/openal-soft/cmake/FindPulseAudio.cmake" : {
      "ObjectId" : "1f6f843a1d8d5402504d06d07cd67f1cecfc5b2d",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find PulseAudio includes and libraries\n\n#\n\n#   PULSEAUDIO_FOUND        - True if PULSEAUDIO_INCLUDE_DIR &\n\n#                             PULSEAUDIO_LIBRARY are found\n\n#   PULSEAUDIO_LIBRARIES    - Set when PULSEAUDIO_LIBRARY is found\n\n#   PULSEAUDIO_INCLUDE_DIRS - Set when PULSEAUDIO_INCLUDE_DIR is found\n\n#\n\n#   PULSEAUDIO_INCLUDE_DIR - where to find pulse/pulseaudio.h, etc.\n\n#   PULSEAUDIO_LIBRARY     - the pulse library\n\n#   PULSEAUDIO_VERSION_STRING - the version of PulseAudio found\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Compile/CompileDependencies/ThirdParty/openal-soft/cmake/FindQSA.cmake" : {
      "ObjectId" : "0ad1fd43893f0dbd6b5935b9f8b17994a9570c4e",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find QSA includes and libraries\n\n#\n\n#   QSA_FOUND        - True if QSA_INCLUDE_DIR & QSA_LIBRARY are found\n\n#   QSA_LIBRARIES    - Set when QSA_LIBRARY is found\n\n#   QSA_INCLUDE_DIRS - Set when QSA_INCLUDE_DIR is found\n\n#\n\n#   QSA_INCLUDE_DIR - where to find sys/asoundlib.h, etc.\n\n#   QSA_LIBRARY     - the asound library\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Only check for QSA on QNX, because it conflicts with ALSA.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Compile/CompileDependencies/ThirdParty/openal-soft/cmake/FindSDL2.cmake" : {
      "ObjectId" : "70e607a89f66ff616e3a4e2035b9689dc5f81438",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate SDL2 library\n\n# This module defines\n\n# SDL2_LIBRARY, the name of the library to link against\n\n# SDL2_FOUND, if false, do not try to link to SDL2\n\n# SDL2_INCLUDE_DIR, where to find SDL.h\n\n#\n\n# This module responds to the the flag:\n\n# SDL2_BUILDING_LIBRARY\n\n# If this is defined, then no SDL2_main will be linked in because\n\n# only applications need main().\n\n# Otherwise, it is assumed you are building an application and this\n\n# module will attempt to locate and set the the proper link flags\n\n# as part of the returned SDL2_LIBRARY variable.\n\n#\n\n# Don't forget to include SDL2main.h and SDL2main.m your project for the\n\n# OS X framework based version. (Other versions link to -lSDL2main which\n\n# this module will try to find on your behalf.) Also for OS X, this\n\n# module will automatically add the -framework Cocoa on your behalf.\n\n#\n\n#\n\n# Additional Note: If you see an empty SDL2_LIBRARY_TEMP in your configuration\n\n# and no SDL2_LIBRARY, it means CMake did not find your SDL2 library\n\n# (SDL2.dll, libsdl2.so, SDL2.framework, etc).\n\n# Set SDL2_LIBRARY_TEMP to point to your SDL2 library, and configure again.\n\n# Similarly, if you see an empty SDL2MAIN_LIBRARY, you should set this value\n\n# as appropriate. These values are used to generate the final SDL2_LIBRARY\n\n# variable, but when these values are unset, SDL2_LIBRARY does not get created.\n\n#\n\n#\n\n# $SDL2DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$SDL2DIR\n\n# used in building SDL2.\n\n# l.e.galup  9-20-02\n\n#\n\n# Modified by Eric Wing.\n\n# Added code to assist with automated building by using environmental variables\n\n# and providing a more controlled/consistent search behavior.\n\n# Added new modifications to recognize OS X frameworks and\n\n# additional Unix paths (FreeBSD, etc).\n\n# Also corrected the header search path to follow \"proper\" SDL2 guidelines.\n\n# Added a search for SDL2main which is needed by some platforms.\n\n# Added a search for threads which is needed by some platforms.\n\n# Added needed compile switches for MinGW.\n\n#\n\n# On OSX, this will prefer the Framework version (if found) over others.\n\n# People will have to manually change the cache values of\n\n# SDL2_LIBRARY to override this selection or set the CMake environment\n\n# CMAKE_INCLUDE_PATH to modify the search paths.\n\n#\n\n# Note that the header path has changed from SDL2/SDL.h to just SDL.h\n\n# This needed to change because \"proper\" SDL2 convention\n\n# is #include \"SDL.h\", not <SDL2/SDL.h>. This is done for portability\n\n# reasons because not all systems place things in SDL2/ (see FreeBSD).\n\n#\n\n# Ported by Johnny Patterson. This is a literal port for SDL2 of the FindSDL.cmake\n\n# module with the minor edit of changing \"SDL\" to \"SDL2\" where necessary. This\n\n# was not created for redistribution, and exists temporarily pending official\n\n# SDL2 CMake modules.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2003-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fink\n",
        "Line" : 83,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 84,
        "CharPositionInLine" : 13
      },
      "4" : {
        "Text" : "# Blastwave\n",
        "Line" : 85,
        "CharPositionInLine" : 11
      },
      "5" : {
        "Text" : "#MESSAGE(\"SDL2_INCLUDE_DIR is ${SDL2_INCLUDE_DIR}\")\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#MESSAGE(\"SDL2_LIBRARY_TEMP is ${SDL2_LIBRARY_TEMP}\")\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Non-OS X framework versions expect you to also dynamically link to\n\n# SDL2main. This is mainly for Windows and OS X. Other (Unix) platforms\n\n# seem to provide SDL2main for compatibility even though they don't\n\n# necessarily need it.\n",
        "Line" : 106,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# SDL2 may require threads on your system.\n\n# The Apple build may not need an explicit flag because one of the\n\n# frameworks may already provide it.\n\n# But for non-OSX systems, I will use the CMake Threads package.\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# MinGW needs an additional library, mwindows\n\n# It's total link flags should look like -lmingw32 -lSDL2main -lSDL2 -lmwindows\n\n# (Actually on second look, I think it only needs one of the m* libraries.)\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# For SDL2main\n",
        "Line" : 141,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# For OS X, SDL2 uses Cocoa as a backend so it must link to Cocoa.\n\n# CMake doesn't display the -framework Cocoa string in the UI even\n\n# though it actually is there if I modify a pre-used variable.\n\n# I think it has something to do with the CACHE STRING.\n\n# So I use a temporary variable until the end so I can set the\n\n# \"real\" variable in one-shot.\n",
        "Line" : 148,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# For threads, as mentioned Apple doesn't need this.\n\n# In fact, there seems to be a problem if I used the Threads package\n\n# and try using this line, so I'm just skipping it entirely for OS X.\n",
        "Line" : 158,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# For MinGW library\n",
        "Line" : 165,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Set the final string here so the GUI reflects the final state.\n",
        "Line" : 174,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Set the temp variable to INTERNAL so it is not seen in the CMake GUI\n",
        "Line" : 176,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 16
    },
    "Compile/CompileDependencies/ThirdParty/openal-soft/cmake/FindSDL_sound.cmake" : {
      "ObjectId" : "5557b55b1587a293afc2c41f57f7f3625b20c2b9",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Locates the SDL_sound library\n\n#\n\n# This module depends on SDL being found and\n\n# must be called AFTER FindSDL.cmake or FindSDL2.cmake is called.\n\n#\n\n# This module defines\n\n#  SDL_SOUND_INCLUDE_DIR, where to find SDL_sound.h\n\n#  SDL_SOUND_FOUND, if false, do not try to link to SDL_sound\n\n#  SDL_SOUND_LIBRARIES, this contains the list of libraries that you need\n\n#    to link against. This is a read-only variable and is marked INTERNAL.\n\n#  SDL_SOUND_EXTRAS, this is an optional variable for you to add your own\n\n#    flags to SDL_SOUND_LIBRARIES. This is prepended to SDL_SOUND_LIBRARIES.\n\n#    This is available mostly for cases this module failed to anticipate for\n\n#    and you must add additional flags. This is marked as ADVANCED.\n\n#  SDL_SOUND_VERSION_STRING, human-readable string containing the version of SDL_sound\n\n#\n\n# This module also defines (but you shouldn't need to use directly)\n\n#   SDL_SOUND_LIBRARY, the name of just the SDL_sound library you would link\n\n#   against. Use SDL_SOUND_LIBRARIES for you link instructions and not this one.\n\n# And might define the following as needed\n\n#   MIKMOD_LIBRARY\n\n#   MODPLUG_LIBRARY\n\n#   OGG_LIBRARY\n\n#   VORBIS_LIBRARY\n\n#   SMPEG_LIBRARY\n\n#   FLAC_LIBRARY\n\n#   SPEEX_LIBRARY\n\n#\n\n# Typically, you should not use these variables directly, and you should use\n\n# SDL_SOUND_LIBRARIES which contains SDL_SOUND_LIBRARY and the other audio libraries\n\n# (if needed) to successfully compile on your system.\n\n#\n\n# Created by Eric Wing.\n\n# This module is a bit more complicated than the other FindSDL* family modules.\n\n# The reason is that SDL_sound can be compiled in a large variety of different ways\n\n# which are independent of platform. SDL_sound may dynamically link against other 3rd\n\n# party libraries to get additional codec support, such as Ogg Vorbis, SMPEG, ModPlug,\n\n# MikMod, FLAC, Speex, and potentially others.\n\n# Under some circumstances which I don't fully understand,\n\n# there seems to be a requirement\n\n# that dependent libraries of libraries you use must also be explicitly\n\n# linked against in order to successfully compile. SDL_sound does not currently\n\n# have any system in place to know how it was compiled.\n\n# So this CMake module does the hard work in trying to discover which 3rd party\n\n# libraries are required for building (if any).\n\n# This module uses a brute force approach to create a test program that uses SDL_sound,\n\n# and then tries to build it. If the build fails, it parses the error output for\n\n# known symbol names to figure out which libraries are needed.\n\n#\n\n# Responds to the $SDLDIR and $SDLSOUNDDIR environmental variable that would\n\n# correspond to the ./configure --prefix=$SDLDIR used in building SDL.\n\n#\n\n# On OSX, this will prefer the Framework version (if found) over others.\n\n# People will have to manually change the cache values of\n\n# SDL_LIBRARY or SDL2_LIBRARY to override this selection or set the CMake\n\n# environment CMAKE_INCLUDE_PATH to modify the search paths.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2005-2009 Kitware, Inc.\n\n# Copyright 2012 Benjamin Eikel\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find SDL_sound.h\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# CMake is giving me problems using TRY_COMPILE with the CMAKE_FLAGS\n\n# for the :STRING syntax if I have multiple values contained in a\n\n# single variable. This is a problem for the SDL2_LIBRARY variable\n\n# because it does just that. When I feed this variable to the command,\n\n# only the first value gets the appropriate modifier (e.g. -I) and\n\n# the rest get dropped.\n\n# To get multiple single variables to work, I must separate them with a \"\\;\"\n\n# I could go back and modify the FindSDL2.cmake module, but that's kind of painful.\n\n# The solution would be to try something like:\n\n# set(SDL2_TRY_COMPILE_LIBRARY_LIST \"${SDL2_TRY_COMPILE_LIBRARY_LIST}\\;${CMAKE_THREAD_LIBS_INIT}\")\n\n# Instead, it was suggested on the mailing list to write a temporary CMakeLists.txt\n\n# with a temporary test project and invoke that with TRY_COMPILE.\n\n# See message thread \"Figuring out dependencies for a library in order to build\"\n\n# 2005-07-16\n\n#     try_compile(\n\n#             MY_RESULT\n\n#             ${CMAKE_BINARY_DIR}\n\n#             ${PROJECT_SOURCE_DIR}/DetermineSoundLibs.c\n\n#             CMAKE_FLAGS\n\n#                     -DINCLUDE_DIRECTORIES:STRING=${SDL2_INCLUDE_DIR}\\;${SDL_SOUND_INCLUDE_DIR}\n\n#                     -DLINK_LIBRARIES:STRING=${SDL_SOUND_LIBRARY}\\;${SDL2_LIBRARY}\n\n#             OUTPUT_VARIABLE MY_OUTPUT\n\n#     )\n",
        "Line" : 92,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# To minimize external dependencies, create a sdlsound test program\n\n# which will be used to figure out if additional link dependencies are\n\n# required for the link phase.\n",
        "Line" : 116,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Calling\n\n# target_link_libraries(DetermineSoundLibs \"${SDL_SOUND_LIBRARY} ${SDL2_LIBRARY})\n\n# causes problems when SDL2_LIBRARY looks like\n\n# /Library/Frameworks/SDL2.framework;-framework Cocoa\n\n# The ;-framework Cocoa seems to be confusing CMake once the OS X\n\n# framework support was added. I was told that breaking up the list\n\n# would fix the problem.\n",
        "Line" : 142,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Keep trying to build a temp project until we find all missing libs.\n",
        "Line" : 164,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# message(\"TMP_TRY_LIBS ${TMP_TRY_LIBS}\")\n",
        "Line" : 168,
        "CharPositionInLine" : 12
      },
      "8" : {
        "Text" : "# Write the CMakeLists.txt and test project\n\n# Weird, this is still sketchy. If I don't quote the variables\n\n# in the TARGET_LINK_LIBRARIES, I seem to loose everything\n\n# in the SDL2_LIBRARY string after the \"-framework\".\n\n# But if I quote the stuff in INCLUDE_DIRECTORIES, it doesn't work.\n",
        "Line" : 170,
        "CharPositionInLine" : 12
      },
      "9" : {
        "Text" : "# message(\"${MY_RESULT}\")\n\n# message(${MY_OUTPUT})\n",
        "Line" : 190,
        "CharPositionInLine" : 12
      },
      "10" : {
        "Text" : "# I expect that MPGLIB, VOC, WAV, AIFF, and SHN are compiled in statically.\n\n# I think Timidity is also compiled in statically.\n\n# I've never had to explcitly link against Quicktime, so I'll skip that for now.\n",
        "Line" : 194,
        "CharPositionInLine" : 16
      },
      "11" : {
        "Text" : "# Find libmath\n",
        "Line" : 198,
        "CharPositionInLine" : 16
      },
      "12" : {
        "Text" : "# Find MikMod\n",
        "Line" : 208,
        "CharPositionInLine" : 16
      },
      "13" : {
        "Text" : "# Find ModPlug\n",
        "Line" : 229,
        "CharPositionInLine" : 16
      },
      "14" : {
        "Text" : "# Find Ogg and Vorbis\n",
        "Line" : 250,
        "CharPositionInLine" : 16
      },
      "15" : {
        "Text" : "# Find SMPEG\n",
        "Line" : 310,
        "CharPositionInLine" : 16
      },
      "16" : {
        "Text" : "# Find FLAC\n",
        "Line" : 332,
        "CharPositionInLine" : 16
      },
      "17" : {
        "Text" : "# Hmmm...Speex seems to depend on Ogg. This might be a problem if\n\n# the TRY_COMPILE attempt gets blocked at SPEEX before it can pull\n\n# in the Ogg symbols. I'm not sure if I should duplicate the ogg stuff\n\n# above for here or if two ogg entries will screw up things.\n",
        "Line" : 354,
        "CharPositionInLine" : 16
      },
      "18" : {
        "Text" : "# Find OGG (needed for Speex)\n\n# We might have already found Ogg for Vorbis, so skip it if so.\n",
        "Line" : 377,
        "CharPositionInLine" : 20
      },
      "CommentCount" : 19
    },
    "Compile/CompileDependencies/ThirdParty/openal-soft/cmake/FindSoundIO.cmake" : {
      "ObjectId" : "10450254d213fd602682f8b579e57752644da701",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find SoundIO (sndio) includes and libraries\n\n#\n\n#   SOUNDIO_FOUND        - True if SOUNDIO_INCLUDE_DIR & SOUNDIO_LIBRARY are\n\n#                          found\n\n#   SOUNDIO_LIBRARIES    - Set when SOUNDIO_LIBRARY is found\n\n#   SOUNDIO_INCLUDE_DIRS - Set when SOUNDIO_INCLUDE_DIR is found\n\n#\n\n#   SOUNDIO_INCLUDE_DIR - where to find sndio.h, etc.\n\n#   SOUNDIO_LIBRARY     - the sndio library\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Compile/CompileDependencies/ThirdParty/openal-soft/cmake/FindWindowsSDK.cmake" : {
      "ObjectId" : "e136b8976f8326e813e05ad38e8bd966a26caf53",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find the Windows SDK aka Platform SDK\n\n#\n\n# Relevant Wikipedia article: http://en.wikipedia.org/wiki/Microsoft_Windows_SDK\n\n#\n\n# Pass \"COMPONENTS tools\" to ignore Visual Studio version checks: in case\n\n# you just want the tool binaries to run, rather than the libraries and headers\n\n# for compiling.\n\n#\n\n# Variables:\n\n#  WINDOWSSDK_FOUND - if any version of the windows or platform SDK was found that is usable with the current version of visual studio\n\n#  WINDOWSSDK_LATEST_DIR\n\n#  WINDOWSSDK_LATEST_NAME\n\n#  WINDOWSSDK_FOUND_PREFERENCE - if we found an entry indicating a \"preferred\" SDK listed for this visual studio version\n\n#  WINDOWSSDK_PREFERRED_DIR\n\n#  WINDOWSSDK_PREFERRED_NAME\n\n#\n\n#  WINDOWSSDK_DIRS - contains no duplicates, ordered most recent first.\n\n#  WINDOWSSDK_PREFERRED_FIRST_DIRS - contains no duplicates, ordered with preferred first, followed by the rest in descending recency\n\n#\n\n# Functions:\n\n#  windowssdk_name_lookup(<directory> <output variable>) - Find the name corresponding with the SDK directory you pass in, or\n\n#     NOTFOUND if not recognized. Your directory must be one of WINDOWSSDK_DIRS for this to work.\n\n#\n\n#  windowssdk_build_lookup(<directory> <output variable>) - Find the build version number corresponding with the SDK directory you pass in, or\n\n#     NOTFOUND if not recognized. Your directory must be one of WINDOWSSDK_DIRS for this to work.\n\n#\n\n#  get_windowssdk_from_component(<file or dir> <output variable>) - Given a library or include dir,\n\n#     find the Windows SDK root dir corresponding to it, or NOTFOUND if unrecognized.\n\n#\n\n#  get_windowssdk_library_dirs(<directory> <output variable>) - Find the architecture-appropriate\n\n#     library directories corresponding to the SDK directory you pass in (or NOTFOUND if none)\n\n#\n\n#  get_windowssdk_library_dirs_multiple(<output variable> <directory> ...) - Find the architecture-appropriate\n\n#     library directories corresponding to the SDK directories you pass in, in order, skipping those not found. NOTFOUND if none at all.\n\n#     Good for passing WINDOWSSDK_DIRS or WINDOWSSDK_DIRS to if you really just want a file and don't care where from.\n\n#\n\n#  get_windowssdk_include_dirs(<directory> <output variable>) - Find the\n\n#     include directories corresponding to the SDK directory you pass in (or NOTFOUND if none)\n\n#\n\n#  get_windowssdk_include_dirs_multiple(<output variable> <directory> ...) - Find the\n\n#     include directories corresponding to the SDK directories you pass in, in order, skipping those not found. NOTFOUND if none at all.\n\n#     Good for passing WINDOWSSDK_DIRS or WINDOWSSDK_DIRS to if you really just want a file and don't care where from.\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2012 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2012.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# pre-output\n",
        "Line" : 57,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# pre-output\n",
        "Line" : 58,
        "CharPositionInLine" : 19
      },
      "3" : {
        "Text" : "# pre-output\n",
        "Line" : 59,
        "CharPositionInLine" : 26
      },
      "4" : {
        "Text" : "# pre-output\n",
        "Line" : 60,
        "CharPositionInLine" : 28
      },
      "5" : {
        "Text" : "# search parameters\n",
        "Line" : 61,
        "CharPositionInLine" : 23
      },
      "6" : {
        "Text" : "# search parameters\n",
        "Line" : 62,
        "CharPositionInLine" : 18
      },
      "7" : {
        "Text" : "# Redstone aka Win10 1607 \"Anniversary Update\"\n\n# TH2 aka Win10 1511\n\n# Win10 RTM\n\n# just ucrt\n",
        "Line" : 76,
        "CharPositionInLine" : 14
      },
      "8" : {
        "Text" : "# Appends to the three main pre-output lists used only if the path exists\n\n# and is not already in the list.\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Path invalid - do not add\n",
        "Line" : 95,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Path already in list - do not add\n",
        "Line" : 100,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Not yet in the list, so we'll add it\n",
        "Line" : 104,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# Appends to the \"preferred SDK\" lists only if the path exists\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Path invalid - do not add\n",
        "Line" : 122,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Path already in list - do not add\n",
        "Line" : 130,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Not yet in the list, so we'll add it\n",
        "Line" : 134,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "# Just in case we somehow missed it:\n",
        "Line" : 138,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "# Given a version like v7.0A, looks for an SDK in the registry under \"Microsoft SDKs\".\n\n# If the given version might be in both HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Microsoft SDKs\\\\Windows\n\n# and HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Windows Kits\\\\Installed Roots aka \"Windows Kits\",\n\n# use this macro first, since these registry keys usually have more information.\n\n#\n\n# Pass a \"default\" build number as an extra argument in case we can't find it.\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Default build number passed as extra argument\n",
        "Line" : 156,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "# See if the registry holds a Microsoft-mutilated, err, designated, product name\n\n# (just using get_filename_component to execute the registry lookup)\n",
        "Line" : 158,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "# Got a product name\n",
        "Line" : 164,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# try for a version to augment our name\n\n# (just using get_filename_component to execute the registry lookup)\n",
        "Line" : 168,
        "CharPositionInLine" : 1
      },
      "22" : {
        "Text" : "# Got a version\n",
        "Line" : 174,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# and it's not an invalid one with two dots in it:\n\n# use to override the default build\n",
        "Line" : 176,
        "CharPositionInLine" : 3
      },
      "24" : {
        "Text" : "# Got a version that's not already in the name, let's use it to improve our name.\n",
        "Line" : 180,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# Given a name for identification purposes, the build number, and a key (technically a \"value name\")\n\n# corresponding to a Windows SDK packaged as a \"Windows Kit\", look for it\n\n# in HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Windows Kits\\\\Installed Roots\n\n# Note that the key or \"value name\" tends to be something weird like KitsRoot81 -\n\n# no easy way to predict, just have to observe them in the wild.\n\n# Doesn't hurt to also try _winsdk_check_microsoft_sdks_registry for these:\n\n# sometimes you get keys in both parts of the registry (in the wow64 portion especially),\n\n# and the non-\"Windows Kits\" location is often more descriptive.\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Given a name for identification purposes and the build number\n\n# corresponding to a Windows 10 SDK packaged as a \"Windows Kit\", look for it\n\n# in HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Windows Kits\\\\Installed Roots\n\n# Doesn't hurt to also try _winsdk_check_microsoft_sdks_registry for these:\n\n# sometimes you get keys in both parts of the registry (in the wow64 portion especially),\n\n# and the non-\"Windows Kits\" location is often more descriptive.\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# not found\n",
        "Line" : 214,
        "CharPositionInLine" : 11
      },
      "28" : {
        "Text" : "# Given a name for indentification purposes, the build number, and the associated package GUID,\n\n# look in the registry under both HKLM and HKCU in \\\\SOFTWARE\\\\Microsoft\\\\MicrosoftSDK\\\\InstalledSDKs\\\\\n\n# for that guid and the SDK it points to.\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "###\n\n# Detect toolchain information: to know whether it's OK to use Vista+ only SDKs\n\n###\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# VC 10 and older has broad target support\n",
        "Line" : 238,
        "CharPositionInLine" : 1
      },
      "31" : {
        "Text" : "# VC 11 by default targets Vista and later only, so we can add a few more SDKs that (might?) only work on vista+\n",
        "Line" : 240,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# This is the XP-compatible v110+ toolset\n",
        "Line" : 242,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# This is the VS2010/VS2008 toolset\n",
        "Line" : 244,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# OK, we're VC11 or newer and not using a backlevel or XP-compatible toolset.\n\n# These versions have no XP (and possibly Vista pre-SP1) support\n",
        "Line" : 246,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "###\n\n# MSVC version checks - keeps messy conditionals in one place\n\n# (messy because of _WINDOWSSDK_IGNOREMSVC)\n\n###\n",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Newer than VS .NET/VS Toolkit 2003\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# VS2005/2008\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# VS2013+\n",
        "Line" : 279,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "###\n\n# START body of find module\n\n###\n",
        "Line" : 285,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Newer than VS .NET/VS Toolkit 2003\n",
        "Line" : 288,
        "CharPositionInLine" : 30
      },
      "41" : {
        "Text" : "###\n\n# Look for \"preferred\" SDKs\n\n###\n",
        "Line" : 289,
        "CharPositionInLine" : 1
      },
      "42" : {
        "Text" : "# Environment variable for SDK dir\n",
        "Line" : 293,
        "CharPositionInLine" : 1
      },
      "43" : {
        "Text" : "# Per-user current Windows SDK for VS2005/2008\n",
        "Line" : 299,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# System-wide current Windows SDK for VS2005/2008\n",
        "Line" : 305,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "###\n\n# Begin the massive list of SDK searching!\n\n###\n",
        "Line" : 312,
        "CharPositionInLine" : 1
      },
      "46" : {
        "Text" : "# These require at least Visual Studio 2013 (VC12)\n",
        "Line" : 316,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "# Windows Software Development Kit (SDK) for Windows 10\n\n# Several different versions living in the same directory - if nothing else we can assume RTM (10240)\n",
        "Line" : 320,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "# vista-only and 2013+\n",
        "Line" : 326,
        "CharPositionInLine" : 9
      },
      "49" : {
        "Text" : "# Included in Visual Studio 2013\n\n# Includes the v120_xp toolset\n",
        "Line" : 328,
        "CharPositionInLine" : 1
      },
      "50" : {
        "Text" : "# Windows Software Development Kit (SDK) for Windows 8.1\n\n# http://msdn.microsoft.com/en-gb/windows/desktop/bg162891\n",
        "Line" : 333,
        "CharPositionInLine" : 2
      },
      "51" : {
        "Text" : "# vista-only and 2013+\n",
        "Line" : 337,
        "CharPositionInLine" : 9
      },
      "52" : {
        "Text" : "# Included in Visual Studio 2012\n",
        "Line" : 340,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# Microsoft Windows SDK for Windows 8 and .NET Framework 4.5\n\n# This is the first version to also include the DirectX SDK\n\n# http://msdn.microsoft.com/en-US/windows/desktop/hh852363.aspx\n",
        "Line" : 343,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# vista-only\n",
        "Line" : 348,
        "CharPositionInLine" : 9
      },
      "55" : {
        "Text" : "# Included with VS 2012 Update 1 or later\n\n# Introduces v110_xp toolset\n",
        "Line" : 350,
        "CharPositionInLine" : 1
      },
      "56" : {
        "Text" : "# Microsoft Windows SDK for Windows 7 and .NET Framework 4\n\n# http://www.microsoft.com/downloads/en/details.aspx?FamilyID=6b6c21d2-2006-4afa-9702-529fa782d63b\n",
        "Line" : 354,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "# vista-only\n",
        "Line" : 357,
        "CharPositionInLine" : 9
      },
      "58" : {
        "Text" : "# Included with VS 2010\n",
        "Line" : 359,
        "CharPositionInLine" : 1
      },
      "59" : {
        "Text" : "# Windows SDK for Windows 7 and .NET Framework 3.5 SP1\n\n# Works with VC9\n\n# http://www.microsoft.com/en-us/download/details.aspx?id=18950\n",
        "Line" : 362,
        "CharPositionInLine" : 1
      },
      "60" : {
        "Text" : "# Two versions call themselves \"v6.1\":\n\n# Older:\n\n# Windows Vista Update & .NET 3.0 SDK\n\n# http://www.microsoft.com/en-us/download/details.aspx?id=14477\n",
        "Line" : 367,
        "CharPositionInLine" : 1
      },
      "61" : {
        "Text" : "# Newer:\n\n# Windows Server 2008 & .NET 3.5 SDK\n\n# may have broken VS9SP1? they recommend v7.0 instead, or a KB...\n\n# http://www.microsoft.com/en-us/download/details.aspx?id=24826\n",
        "Line" : 372,
        "CharPositionInLine" : 1
      },
      "62" : {
        "Text" : "# Included in VS 2008\n",
        "Line" : 378,
        "CharPositionInLine" : 1
      },
      "63" : {
        "Text" : "# Microsoft Windows Software Development Kit for Windows Vista and .NET Framework 3.0 Runtime Components\n\n# http://blogs.msdn.com/b/stanley/archive/2006/11/08/microsoft-windows-software-development-kit-for-windows-vista-and-net-framework-3-0-runtime-components.aspx\n",
        "Line" : 381,
        "CharPositionInLine" : 1
      },
      "64" : {
        "Text" : "# Let's not forget the Platform SDKs, which sometimes are useful!\n",
        "Line" : 386,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "###\n\n# Finally, look for \"preferred\" SDKs\n\n###\n",
        "Line" : 391,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# Newer than VS .NET/VS Toolkit 2003\n",
        "Line" : 394,
        "CharPositionInLine" : 30
      },
      "67" : {
        "Text" : "# Environment variable for SDK dir\n",
        "Line" : 397,
        "CharPositionInLine" : 1
      },
      "68" : {
        "Text" : "# Per-user current Windows SDK for VS2005/2008\n",
        "Line" : 403,
        "CharPositionInLine" : 2
      },
      "69" : {
        "Text" : "# System-wide current Windows SDK for VS2005/2008\n",
        "Line" : 409,
        "CharPositionInLine" : 2
      },
      "70" : {
        "Text" : "# If we found something...\n",
        "Line" : 440,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Fallback, in case no preference found.\n",
        "Line" : 447,
        "CharPositionInLine" : 1
      },
      "72" : {
        "Text" : "# If we found indications of a user preference...\n",
        "Line" : 454,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# Internal: Architecture-appropriate library directory names.\n",
        "Line" : 472,
        "CharPositionInLine" : 1
      },
      "74" : {
        "Text" : "# Only supported in Win10 SDK and up.\n",
        "Line" : 475,
        "CharPositionInLine" : 3
      },
      "75" : {
        "Text" : "# what the WDK for Win8+ calls this architecture\n",
        "Line" : 476,
        "CharPositionInLine" : 28
      },
      "76" : {
        "Text" : "# what the architecture used to be called in oldest SDKs\n",
        "Line" : 478,
        "CharPositionInLine" : 30
      },
      "77" : {
        "Text" : "# what the architecture used to be called\n",
        "Line" : 479,
        "CharPositionInLine" : 25
      },
      "78" : {
        "Text" : "# what the WDK for Win8+ calls this architecture\n",
        "Line" : 480,
        "CharPositionInLine" : 26
      },
      "79" : {
        "Text" : "# what the architecture used to be called in oldest SDKs\n",
        "Line" : 484,
        "CharPositionInLine" : 30
      },
      "80" : {
        "Text" : "# what the architecture used to be called\n",
        "Line" : 485,
        "CharPositionInLine" : 27
      },
      "81" : {
        "Text" : "# what the WDK for Win8+ calls this architecture\n",
        "Line" : 486,
        "CharPositionInLine" : 26
      },
      "82" : {
        "Text" : "# what the architecture used to be called in oldest SDKs\n\n# what the architecture used to be called\n\n# what the WDK for Win8+ calls this architecture\n",
        "Line" : 488,
        "CharPositionInLine" : 26
      },
      "83" : {
        "Text" : "# If we don't have any \"parent directory\" items...\n",
        "Line" : 501,
        "CharPositionInLine" : 3
      },
      "84" : {
        "Text" : "# Fail.\n",
        "Line" : 507,
        "CharPositionInLine" : 2
      },
      "85" : {
        "Text" : "# SDKs like 7.1A\n",
        "Line" : 513,
        "CharPositionInLine" : 28
      },
      "86" : {
        "Text" : "# just because some SDKs have x86 dir and root dir\n",
        "Line" : 514,
        "CharPositionInLine" : 25
      },
      "87" : {
        "Text" : "# Win2k min requirement\n\n# WinXP min requirement\n",
        "Line" : 515,
        "CharPositionInLine" : 29
      },
      "88" : {
        "Text" : "# Win Server 2003 min requirement\n",
        "Line" : 517,
        "CharPositionInLine" : 30
      },
      "89" : {
        "Text" : "# Win Vista (\"Long Horn\") min requirement\n",
        "Line" : 519,
        "CharPositionInLine" : 33
      },
      "90" : {
        "Text" : "# Win 7 min requirement\n",
        "Line" : 521,
        "CharPositionInLine" : 34
      },
      "91" : {
        "Text" : "# Win Vista (\"Long Horn\") min requirement\n",
        "Line" : 524,
        "CharPositionInLine" : 7
      },
      "92" : {
        "Text" : "# Win 7 min requirement\n\n# Win 8 min requirement\n",
        "Line" : 525,
        "CharPositionInLine" : 8
      },
      "93" : {
        "Text" : "# Win 8.1 min requirement\n",
        "Line" : 527,
        "CharPositionInLine" : 11
      },
      "94" : {
        "Text" : "# Look for WDF libraries in Win10+ SDK\n",
        "Line" : 537,
        "CharPositionInLine" : 2
      },
      "95" : {
        "Text" : "# Look in each Win10+ SDK version for the components\n",
        "Line" : 545,
        "CharPositionInLine" : 2
      },
      "96" : {
        "Text" : "# Check to see if a library actually exists here.\n",
        "Line" : 553,
        "CharPositionInLine" : 3
      },
      "97" : {
        "Text" : "# Check to see if a header file actually exists here.\n",
        "Line" : 583,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 98
    },
    "Compile/CompileDependencies/ThirdParty/openal-soft/native-tools/CMakeLists.txt" : {
      "ObjectId" : "4713dc56c9158c60c78fbc2c426d14231f2d4734",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enforce no dressing for executable names, so the main script can find it\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Avoid configuration-dependent subdirectories while building with Visual Studio\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Compile/CompileDependencies/ThirdParty/openal-soft/utils/alsoft-config/CMakeLists.txt" : {
      "ObjectId" : "4911b9d8308af974bac540e98faef614889e5f5d",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Need Qt 4.8.0 or newer for the iconset theme attribute to work\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "Compile/CompileDependencies/ThirdParty/openal-soft/version.cmake" : {
      "ObjectId" : "af7ff0a67e5524fdded7b70904dd16d5bf3a9e89",
      "LastModified" : "2018-05-18T04:17:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/sndio/CMakeLists.txt" : {
      "ObjectId" : "942460371297f83ba9534cb0b3f9ac59c7a966e8",
      "LastModified" : "2019-01-11T18:33:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/yaml-cpp/CMakeLists.txt" : {
      "ObjectId" : "99f7432c40a71aa89a2f8e0283a73b91b03fee41",
      "LastModified" : "2019-01-11T18:33:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###\n\n### CMake settings\n\n###\n\n## Due to Mac OSX we need to keep compatibility with CMake 2.6\n\n# see http://www.cmake.org/Wiki/CMake_Policies\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# see http://www.cmake.org/cmake/help/cmake-2-8-docs.html#policy:CMP0012\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# see http://www.cmake.org/cmake/help/cmake-2-8-docs.html#policy:CMP0015\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# see https://cmake.org/cmake/help/latest/policy/CMP0042.html\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable MACOSX_RPATH by default.\n",
        "Line" : 17,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "###\n\n### Project options\n\n###\n\n## Project stuff\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Build options\n\n# --> General\n\n# see http://www.cmake.org/cmake/help/cmake2.6docs.html#variable:BUILD_SHARED_LIBS\n\n#     http://www.cmake.org/cmake/help/cmake2.6docs.html#command:add_library\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# --> Apple\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# --> Microsoft Visual C++\n\n# see http://msdn.microsoft.com/en-us/library/aa278396(v=VS.60).aspx\n\n#     http://msdn.microsoft.com/en-us/library/2kzt1wy3(v=VS.71).aspx\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "###\n\n### Sources, headers, directories and libs\n\n###\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# From http://www.cmake.org/pipermail/cmake/2010-March/035992.html:\n\n# function to collect all the sources from sub-directories\n\n# into a single list\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# make absolute paths\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# append to global list\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "###\n\n### General compilation settings\n\n###\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# use or build Windows DLL\n",
        "Line" : 142,
        "CharPositionInLine" : 41
      },
      "15" : {
        "Text" : "# GCC or Clang or Intel Compiler specialities\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "### General stuff\n",
        "Line" : 154,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "# DLLs do not have a \"lib\" prefix\n\n# same for DLL import libs\n",
        "Line" : 156,
        "CharPositionInLine" : 38
      },
      "18" : {
        "Text" : "# CMake workaround (2.8.3)\n",
        "Line" : 158,
        "CharPositionInLine" : 35
      },
      "19" : {
        "Text" : "### Project stuff\n",
        "Line" : 161,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "#\n",
        "Line" : 165,
        "CharPositionInLine" : 1
      },
      "21" : {
        "Text" : "#\n",
        "Line" : 170,
        "CharPositionInLine" : 1
      },
      "22" : {
        "Text" : "#\n",
        "Line" : 172,
        "CharPositionInLine" : 1
      },
      "23" : {
        "Text" : "#\n",
        "Line" : 176,
        "CharPositionInLine" : 1
      },
      "24" : {
        "Text" : "#\n",
        "Line" : 182,
        "CharPositionInLine" : 1
      },
      "25" : {
        "Text" : "### Make specific\n",
        "Line" : 185,
        "CharPositionInLine" : 1
      },
      "26" : {
        "Text" : "# Microsoft VisualC++ specialities\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "### General stuff\n\n# a) Change MSVC runtime library settings (/MD[d], /MT[d], /ML[d] (single-threaded until VS 2003))\n\n#    plus set lib suffix for later use and project label accordingly\n\n# see http://msdn.microsoft.com/en-us/library/aa278396(v=VS.60).aspx\n\n#     http://msdn.microsoft.com/en-us/library/2kzt1wy3(v=VS.71).aspx\n",
        "Line" : 200,
        "CharPositionInLine" : 1
      },
      "28" : {
        "Text" : "# CMake defaults to /MD for MSVC\n",
        "Line" : 205,
        "CharPositionInLine" : 25
      },
      "29" : {
        "Text" : "#\n",
        "Line" : 207,
        "CharPositionInLine" : 1
      },
      "30" : {
        "Text" : "# User wants to have static runtime libraries (/MT, /ML)\n\n# User wants to have old single-threaded static runtime libraries\n",
        "Line" : 208,
        "CharPositionInLine" : 24
      },
      "31" : {
        "Text" : "# correct linker options\n",
        "Line" : 220,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "#\n",
        "Line" : 232,
        "CharPositionInLine" : 1
      },
      "33" : {
        "Text" : "# b) Change prefix for static libraries\n",
        "Line" : 235,
        "CharPositionInLine" : 1
      },
      "34" : {
        "Text" : "# to distinguish static libraries from DLL import libs\n",
        "Line" : 236,
        "CharPositionInLine" : 40
      },
      "35" : {
        "Text" : "# c) Correct suffixes for static libraries\n",
        "Line" : 238,
        "CharPositionInLine" : 1
      },
      "36" : {
        "Text" : "### General stuff\n",
        "Line" : 240,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "### Project stuff\n\n# /W3 = set warning level; see http://msdn.microsoft.com/en-us/library/thxezb7y.aspx\n\n# /wd4127 = disable warning C4127 \"conditional expression is constant\"; see http://msdn.microsoft.com/en-us/library/6t66728h.aspx\n\n# /wd4355 = disable warning C4355 \"'this' : used in base member initializer list\"; http://msdn.microsoft.com/en-us/library/3c594ae3.aspx\n",
        "Line" : 244,
        "CharPositionInLine" : 1
      },
      "38" : {
        "Text" : "###\n\n### General install settings\n\n###\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "###\n\n### Library\n\n###\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# correct library names\n",
        "Line" : 287,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "### Formatting\n",
        "Line" : 341,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 42
    },
    "Compile/CompileDependencies/ThirdParty/yaml-cpp/util/CMakeLists.txt" : {
      "ObjectId" : "22866273c74cfd6be32fb59ebf43e254af5b83e8",
      "LastModified" : "2019-01-11T18:33:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/yaml-cpp/yaml-cpp.pc.cmake" : {
      "ObjectId" : "3db7962eaf50734dd153ee6f84f0285eb7fb5d4c",
      "LastModified" : "2019-01-11T18:33:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Compile/CompileDependencies/ThirdParty/zlib-1.2.11/CMakeLists.txt" : {
      "ObjectId" : "0fe939df689306f1d0c7c657cb64dd0f0dedc134",
      "LastModified" : "2019-01-11T18:33:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Check to see if we have large file support\n\n#\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We add these other definitions here because CheckTypeSize.cmake\n\n# in CMake 2.4.x does not automatically do so and we want\n\n# compatibility with CMake 2.4.x.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# clear variable\n",
        "Line" : 47,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "#\n\n# Check for fseeko\n\n#\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Check for unistd.h\n\n#\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If we're doing an out of source build and the user has a zconf.h\n\n# in their source tree...\n",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#============================================================================\n\n# zlib\n\n#============================================================================\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# If present will override custom build rule below.\n",
        "Line" : 128,
        "CharPositionInLine" : 23
      },
      "8" : {
        "Text" : "# parse the full version number from zlib.h and include in ZLIB_FULL_VERSION\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# This gets us DLL resource information when compiling on MinGW.\n",
        "Line" : 171,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# This property causes shared libraries on Linux to have the full version\n\n# encoded into their final filename.  We disable this on Cygwin because\n\n# it causes cygz-${ZLIB_FULL_VERSION}.dll to be created when cygz.dll\n\n# seems to be the default.\n\n#\n\n# This has no effect with MSVC, on that platform the version info for\n\n# the DLL comes from the resource file win32/zlib1.rc\n",
        "Line" : 192,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# On unix-like platforms the library is almost always called libz\n",
        "Line" : 203,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Creates zlib1.dll when building shared library version\n",
        "Line" : 209,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "#============================================================================\n\n# Example binaries\n\n#============================================================================\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "Compile/CompileDependencies/ThirdParty/zlib-1.2.11/contrib/minizip/Makefile.am" : {
      "ObjectId" : "d343011ebc3b3fd78d2bc3a29801a083c038cf0c",
      "LastModified" : "2019-01-11T18:33:37Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Compile/CompilePackage/CMakeLists.txt" : {
      "ObjectId" : "0c048d23243f4a0c46ae123de35da2a0e2e4f5fc",
      "LastModified" : "2019-01-11T18:33:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=================================================================\n\n# CMake options ==================================================\n\n#=================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=================================================================\n\n#=================================================================\n\n#=================================================================\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#=================================================================\n\n# Include guard ==================================================\n\n#=================================================================\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#=================================================================\n\n#=================================================================\n\n#=================================================================\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#=================================================================\n\n# Check input params =============================================\n\n#=================================================================\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#=================================================================\n\n#=================================================================\n\n#=================================================================\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#=================================================================\n\n# Compile Bang library ===========================================\n\n#=================================================================\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#=================================================================\n\n#=================================================================\n\n#=================================================================\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#=================================================================\n\n# Set variables ==================================================\n\n#=================================================================\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#=================================================================\n\n#=================================================================\n\n#=================================================================\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#=================================================================\n\n# Create dirs if needed ==========================================\n\n#=================================================================\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#=================================================================\n\n#=================================================================\n\n#=================================================================\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#=================================================================\n\n# Copy engine directories ========================================\n\n#=================================================================\n\n# Assets\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Includes\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Copy Libraries\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#=================================================================\n\n#=================================================================\n\n#=================================================================\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    }
  },
  "FileTypes" : {
    "CMAKE" : 82,
    "CMAKESOURCE" : 1,
    "QMAKE" : 1,
    "MAKEFILE" : 3,
    "AUTOMAKE" : 51,
    "ANT" : 1
  },
  "ElapsedTime" : 4224
}