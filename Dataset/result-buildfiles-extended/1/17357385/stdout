{
  "Repository" : "17357385",
  "Revision" : "HEAD",
  "ObjectId" : "1f2554b7506becb2070d2994d440e21d207a15e9",
  "CommitTime" : "2018-10-30T08:22:39Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "8fd43ddb99e5727f2e9808ad2904e3922875d78b",
      "LastModified" : "2016-02-02T10:52:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Version has X.Y.Z format\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Commit is number_of_commit.commit_identifier\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# LIBS\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Log4cplus\n\n# It use logger library recommended in Pion Library.\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Pion\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# MongoDB driver\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# rapidjson\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Mosquitto\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Cppunit\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# GMock\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#Variant\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "###  GENERAL PURPOSE\n\n# util Test:  general test about  cache, csv, url\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# ngsi Test: tests about ngsi operation\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# CB Communicator: general functions to communicate with Context Broker\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Mongo: general functions to use mongo collections\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# OAuth: general functions to check oauth privileges\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# TCP: simple test to check tcp plugin\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "### Administration APIs\n\n# API reference for IotAgent adminitration\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# API reference for Iot Manager adminitration\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "###  PROTOCOLS\n\n# Tutorial basic sample protocol\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# UltraLight protocol\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Thinking things protocol\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# MQTT UltraLight protocol\n",
        "Line" : 243,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Modbus \n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "c2c431109a51dbb1ca4a6343eb24ae75f2b14d40",
      "LastModified" : "2015-12-09T08:07:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Variant\n",
        "Line" : 36,
        "CharPositionInLine" : 11
      },
      "CommentCount" : 1
    },
    "src/esp/CMakeLists.txt" : {
      "ObjectId" : "6e26be0ee29d9066f6f4635a3a0bcc607a970462",
      "LastModified" : "2015-05-06T15:19:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_definitions (-DUSE_IOT -DUSE_JSON -DUSE_TTOPEN)\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#add_library(esp SHARED ${SRC_ESP})\n\n#add_library(esp STATIC ${SRC_ESP})\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#DOUBT: not sure if we need to specify where sesp is going to be installed, using install for instance?\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/esp/source/CMakeLists.txt" : {
      "ObjectId" : "fb3cd4ddaa7e0183fd5418a23180314504206bf6",
      "LastModified" : "2015-03-24T09:23:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modbus/CMakeLists.txt" : {
      "ObjectId" : "f639fb92db9a9af696e9d176ac52e723b58eaf27",
      "LastModified" : "2015-08-14T05:28:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/mqtt/CMakeLists.txt" : {
      "ObjectId" : "c449bda8f536f7a56a468ccab452ba006b4d8090",
      "LastModified" : "2015-12-09T08:07:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#TEST adding sesp as static to all MQTTService objects\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/ngsi/CMakeLists.txt" : {
      "ObjectId" : "c5204824e946a5f6e69281ca92c577dc66b09027",
      "LastModified" : "2015-08-14T05:28:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/rest/CMakeLists.txt" : {
      "ObjectId" : "c4daa77656492cda50404713bf87f9288b9f3316",
      "LastModified" : "2015-08-14T05:28:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/sample_test/CMakeLists.txt" : {
      "ObjectId" : "e3783866a0748d316a08f7b3bb0497ffc4780e1d",
      "LastModified" : "2015-12-09T08:07:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/services/CMakeLists.txt" : {
      "ObjectId" : "ab16ae55b82777061c1f931499233e1e66150ddf",
      "LastModified" : "2015-08-14T05:28:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/thinkingthings/CMakeLists.txt" : {
      "ObjectId" : "d1b2744cd63901883afda55e9c8186e0e413f188",
      "LastModified" : "2015-12-09T08:07:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#TEST adding sesp as static to all MQTTService objects\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/ultra_light/CMakeLists.txt" : {
      "ObjectId" : "40eba66ed908aa5885cf34702d7a5074336f78d4",
      "LastModified" : "2015-12-09T08:07:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/util/CMakeLists.txt" : {
      "ObjectId" : "cc5e0f3e92dea808bf2fa707008f3a32f469dbcb",
      "LastModified" : "2015-08-14T05:28:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "446a76674a9ed537651cbac32525a49ef9254d2d",
      "LastModified" : "2015-12-09T08:07:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if(MOSQUITTO_FOUND)\n\n#add_subdirectory(esp)\n\n#endif()\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/esp/CMakeLists.txt" : {
      "ObjectId" : "38c704c553abfead9378ee5a6c15f80ba02e2834",
      "LastModified" : "2015-08-14T05:28:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/iotagent/CMakeLists.txt" : {
      "ObjectId" : "40143583acf276ca4a18fb83dbd2f0f48d521c7a",
      "LastModified" : "2015-12-09T08:07:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###  GENERAL PURPOSE\n\n# util Test:  general test about  cache, csv, url\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#json Test: JSON tests of parsing NGSI messages\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ngsi Test: tests about ngsi operation\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# CB Communicator: general functions to communicate with Context Broker\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Mongo: general functions to use mongo collections\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# OAuth: general functions to check oauth privileges\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# TCP: test a simple plugin by tcp\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "### Administration APIs\n\n# API reference for IotAgent adminitration\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# API reference for Iot Manager adminitration\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "###  PROTOCOLS\n\n# Tutorial basic sample protocol\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# UltraLight protocol\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Thinking things protocol\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# MQTT UltraLight protocol\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Modbus\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "tests/mocks/CMakeLists.txt" : {
      "ObjectId" : "3b9258dee27d9b9657a3916de7ce5bdec4902395",
      "LastModified" : "2015-12-09T08:07:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third_party/c-ares-1.10.0/Makefile.am" : {
      "ObjectId" : "23059a1195ff393a2caa13fe12f1e3b35fa48fef",
      "LastModified" : "2015-08-14T05:28:21Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Specify our include paths here, and do it relative to $(top_srcdir) and\n\n# $(top_builddir), to ensure that these paths which belong to the library\n\n# being currently built and tested are searched before the library which\n\n# might possibly already be installed in the system.\n\n#\n\n# When using the low-level hard-hacking memory leak tracking code from\n\n# libcurl the generated curl/curlbuild.h file must also be reachable.\n\n# Using the libcurl lowlevel code from within c-ares library is ugly and\n\n# only works when c-ares is built and linked with a similarly debug-build\n\n# libcurl, but we do this anyway for convenience.\n\n#\n\n# $(top_builddir)/../include/curl for generated curlbuild.h included from curl.h\n\n# $(top_builddir)/../include is for libcurl's generated curl/curlbuild.h file\n\n# $(top_srcdir)/../include is for libcurl's external include files\n\n# $(top_builddir)/../lib is for libcurl's generated lib/curl_config.h file\n\n# $(top_srcdir)/../lib is for libcurl's lib/setup.h and other \"private\" files\n\n# $(top_builddir) is for c-ares's generated ares_config.h file\n\n# $(top_srcdir) is for c-ares's ares_setup.h and other \"c-ares-private\" files\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# adig and ahost are just sample programs and thus not mentioned with the\n\n# regular sources and headers\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This flag accepts an argument of the form current[:revision[:age]]. So,\n\n# passing -version-info 3:12:1 sets current to 3, revision to 12, and age to\n\n# 1.\n\n#\n\n# If either revision or age are omitted, they default to 0. Also note that age\n\n# must be less than or equal to the current interface number.\n\n#\n\n# Here are a set of rules to help you update your library version information: \n\n#\n\n# 1.Start with version information of 0:0:0 for each libtool library.\n\n#\n\n# 2.Update the version information only immediately before a public release of\n\n# your software. More frequent updates are unnecessary, and only guarantee\n\n# that the current interface number gets larger faster.\n\n#\n\n# 3.If the library source code has changed at all since the last update, then\n\n# increment revision (c:r+1:a)\n\n#\n\n# 4.If any interfaces have been added, removed, or changed since the last\n\n# update, increment current, and set revision to 0. (c+1:r=0:a)\n\n#\n\n# 5.If any interfaces have been added since the last public release, then\n\n# increment age. (c:r:a+1)\n\n#\n\n# 6.If any interfaces have been removed since the last public release, then\n\n# set age to 0. (c:r:a=0)\n\n#\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add -Werror if defined\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Makefile.inc provides the CSOURCES and HHEADERS defines\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# where to install the c-ares headers\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# what headers to install on 'make install':\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Make files named *.dist replace the file without .dist extension\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "third_party/gmock-1.7.0/CMakeLists.txt" : {
      "ObjectId" : "572d0444bf14834b1fde7f3e7398638cf4e4b7ce",
      "LastModified" : "2015-08-14T05:28:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# CMake build script for Google Mock.\n\n#\n\n# To run the tests for Google Mock itself on Linux, use 'make test' or\n\n# ctest.  You can select which tests to run using 'ctest -R regex'.\n\n# For more options, run 'ctest --help'.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BUILD_SHARED_LIBS is a standard CMake variable, but we declare it here to\n\n# make it prominent in the GUI.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# A directory to find Google Test sources.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Defines pre_project_set_up_hermetic_build() and set_up_hermetic_build().\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Google Test also calls hermetic setup functions from add_subdirectory,\n\n# although its changes will not affect things at the current scope.\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "########################################################################\n\n#\n\n# Project-wide settings\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Name of the project.\n\n#\n\n# CMake files in this project can refer to the root source directory\n\n# as ${gmock_SOURCE_DIR} and to the root binary directory as\n\n# ${gmock_BINARY_DIR}.\n\n# Language \"C\" is required for find_package(Threads).\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Instructs CMake to process Google Test's CMakeLists.txt and add its\n\n# targets to the current scope.  We are placing Google Test's binary\n\n# directory in a subdirectory of our own as VC compilation may break\n\n# if they are the same (the default).\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Although Google Test's CMakeLists.txt calls this function, the\n\n# changes there don't affect the current scope.  Therefore we have to\n\n# call it again here.\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# from ${gtest_dir}/cmake/internal_utils.cmake\n",
        "Line" : 56,
        "CharPositionInLine" : 30
      },
      "10" : {
        "Text" : "# Adds Google Mock's and Google Test's header directories to the search path.\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# This directory is needed to build directly from Google\n\n# Test sources.\n",
        "Line" : 62,
        "CharPositionInLine" : 20
      },
      "12" : {
        "Text" : "########################################################################\n\n#\n\n# Defines the gmock & gmock_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Google Mock libraries.  We build them using more strict warnings than what\n\n# are used for other targets, to ensure that Google Mock can be compiled by\n\n# a user aggressive about warnings.\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "########################################################################\n\n#\n\n# Google Mock's own tests.\n\n#\n\n# You can skip this section if you aren't interested in testing\n\n# Google Mock itself.\n\n#\n\n# The tests are not built by default.  To build them, set the\n\n# gmock_build_tests option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgmock_build_tests=ON flag when running cmake.\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# This must be set in the root directory for the tests to be run by\n\n# 'make test' or ctest.\n",
        "Line" : 97,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "############################################################\n\n# C++ tests built with standard compiler flags.\n",
        "Line" : 101,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# gmock_all_test is commented to save time building and running tests.\n\n# Uncomment if necessary.\n\n# cxx_test(gmock_all_test gmock_main)\n",
        "Line" : 124,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "############################################################\n\n# C++ tests built with non-standard compiler flags.\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Tests that a binary can be built with Google Mock as a shared library.  On\n\n# some system configurations, it may not possible to run the binary without\n\n# knowing more details about the system configurations. We do not try to run\n\n# this binary. To get a more robust shared library coverage, configure with\n\n# -DBUILD_SHARED_LIBS=ON.\n",
        "Line" : 152,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "############################################################\n\n# Python tests.\n",
        "Line" : 163,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 21
    },
    "third_party/gmock-1.7.0/Makefile.am" : {
      "ObjectId" : "0eb7bd8f342e94ff8e8c74834d740cf7abd4add8",
      "LastModified" : "2015-08-14T05:28:21Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Automake file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Nonstandard package files for distribution.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We may need to build our internally packaged gtest. If so, it will be\n\n# included in the 'subdirs' variable.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This is generated by the configure script, so clean it for distribution.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# We define the global AM_CPPFLAGS as everything we compile includes from these\n\n# directories.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Modifies compiler and linker flags for pthreads compatibility.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build rules for libraries.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Build rules for tests. Automake's naming for some of these variables isn't\n\n# terribly obvious, so this is a brief reference:\n\n#\n\n# TESTS -- Programs run automatically by \"make check\"\n\n# check_PROGRAMS -- Programs built by \"make check\" but not necessarily run\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# This exercises all major components of Google Mock.  It also\n\n# verifies that libgmock works.\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# This tests using Google Mock in multiple translation units.  It also\n\n# verifies that libgmock_main and libgmock work.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Tests that fused gmock files compile and work.\n",
        "Line" : 78,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Google Mock source files that we don't compile directly.\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# C++ tests that we don't compile using autotools.\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Python tests, which we don't run using autotools.\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Nonstandard package files for distribution.\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Pump scripts for generating Google Mock headers.\n\n# TODO(chandlerc@google.com): automate the generation of *.h from *.h.pump.\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Script for fusing Google Mock and Google Test source files.\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# The Google Mock Generator tool from the cppclean project.\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# CMake scripts.\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Microsoft Visual Studio 2005 projects.\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Microsoft Visual Studio 2010 projects.\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# gmock_test.cc does not really depend on files generated by the\n\n# fused-gmock-internal rule.  However, gmock_test.o does, and it is\n\n# important to include test/gmock_test.cc as part of this rule in order to\n\n# prevent compiling gmock_test.o until all dependent files have been\n\n# generated.\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# TODO(vladl@google.com): Find a way to add Google Tests's sources here.\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Death tests may produce core dumps in the build directory. In case\n\n# this happens, clean them to keep distcleancheck happy.\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Disables 'make install' as installing a compiled version of Google\n\n# Mock can lead to undefined behavior due to violation of the\n\n# One-Definition Rule.\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "third_party/gmock-1.7.0/gtest/CMakeLists.txt" : {
      "ObjectId" : "57470c84f3af0772c411bbb8bbbb41b515747ecd",
      "LastModified" : "2015-08-14T05:28:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# CMake build script for Google Test.\n\n#\n\n# To run the tests for Google Test itself on Linux, use 'make test' or\n\n# ctest.  You can select which tests to run using 'ctest -R regex'.\n\n# For more options, run 'ctest --help'.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BUILD_SHARED_LIBS is a standard CMake variable, but we declare it here to\n\n# make it prominent in the GUI.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# When other libraries are using a shared version of runtime libraries,\n\n# Google Test also has to use one.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Defines pre_project_set_up_hermetic_build() and set_up_hermetic_build().\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "########################################################################\n\n#\n\n# Project-wide settings\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Name of the project.\n\n#\n\n# CMake files in this project can refer to the root source directory\n\n# as ${gtest_SOURCE_DIR} and to the root binary directory as\n\n# ${gtest_BINARY_DIR}.\n\n# Language \"C\" is required for find_package(Threads).\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define helper functions and macros used by Google Test.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Defined in internal_utils.cmake.\n",
        "Line" : 52,
        "CharPositionInLine" : 30
      },
      "8" : {
        "Text" : "# Where Google Test's .h files can be found.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Where Google Test's libraries can be found.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "########################################################################\n\n#\n\n# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Google Test libraries.  We build them using more strict warnings than what\n\n# are used for other targets, to ensure that gtest can be compiled by a user\n\n# aggressive about warnings.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "########################################################################\n\n#\n\n# Samples on how to link user tests with gtest or gtest_main.\n\n#\n\n# They are not built by default.  To build them, set the\n\n# gtest_build_samples option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_samples=ON flag when running cmake.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "########################################################################\n\n#\n\n# Google Test's own tests.\n\n#\n\n# You can skip this section if you aren't interested in testing\n\n# Google Test itself.\n\n#\n\n# The tests are not built by default.  To build them, set the\n\n# gtest_build_tests option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_tests=ON flag when running cmake.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# This must be set in the root directory for the tests to be run by\n\n# 'make test' or ctest.\n",
        "Line" : 107,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "############################################################\n\n# C++ tests built with standard compiler flags.\n",
        "Line" : 111,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "############################################################\n\n# C++ tests built with non-standard compiler flags.\n",
        "Line" : 142,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 145,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# The C++ Standard specifies tuple_element<int, class>.\n\n# Yet MSVC 10's <utility> declares tuple_element<size_t, class>.\n\n# That declaration conflicts with our own standard-conforming\n\n# tuple implementation.  Therefore using our own tuple with\n\n# MSVC 10 doesn't compile.\n",
        "Line" : 175,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "############################################################\n\n# Python tests.\n",
        "Line" : 191,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 197,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 234,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 22
    },
    "third_party/gmock-1.7.0/gtest/Makefile.am" : {
      "ObjectId" : "9c96b42572ca943d5fb4d4303842f12a545e8523",
      "LastModified" : "2015-08-14T05:28:21Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Automake file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Nonstandard package files for distribution\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# gtest source files that we don't compile directly.  They are\n\n# #included by gtest-all.cc.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Sample files that we don't compile.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# C++ test files that we don't compile directly.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Python tests that we don't run.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# CMake script\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# MSVC project files\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# xcode project files\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# xcode sample files\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# C++Builder project files\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Distribute and install M4 macro\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# We define the global AM_CPPFLAGS as everything we compile includes from these\n\n# directories.\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Modifies compiler and linker flags for pthreads compatibility.\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Build rules for libraries.\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Bulid rules for samples and tests. Automake's naming for some of\n\n# these variables isn't terribly obvious, so this is a brief\n\n# reference:\n\n#\n\n# TESTS -- Programs run automatically by \"make check\"\n\n# check_PROGRAMS -- Programs built by \"make check\" but not necessarily run\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# A simple sample on using gtest.\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Another sample.  It also verifies that libgtest works.\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# This tests most constructs of gtest and verifies that libgtest_main\n\n# and libgtest work.\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Tests that fused gtest files compile and work.\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Build rules for putting fused Google Test files into the distribution\n\n# package. The user can also create those files by manually running\n\n# scripts/fuse_gtest_files.py.\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Death tests may produce core dumps in the build directory. In case\n\n# this happens, clean them to keep distcleancheck happy.\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Disables 'make install' as installing a compiled version of Google\n\n# Test can lead to undefined behavior due to violation of the\n\n# One-Definition Rule.\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "third_party/gmock-1.7.0/gtest/cmake/internal_utils.cmake" : {
      "ObjectId" : "8cb21894cebacd5bdfb598c8663a5be50325d70f",
      "LastModified" : "2015-08-14T05:28:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Defines functions and macros useful for building Google Test and\n\n# Google Mock.\n\n#\n\n# Note:\n\n#\n\n# - This file will be run twice when building Google Mock (once via\n\n#   Google Test's CMakeLists.txt, and once via Google Mock's).\n\n#   Therefore it shouldn't have any side effects other than defining\n\n#   the functions and macros.\n\n#\n\n# - The functions/macros defined in this file may depend on Google\n\n#   Test and Google Mock's option() definitions, and thus must be\n\n#   called *after* the options have been defined.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Tweaks CMake's default compiler/linker settings to suit Google Test's needs.\n\n#\n\n# This must be a macro(), as inside a function string() can only\n\n# update variables in the function scope.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For MSVC, CMake sets certain flags to defaults we want to override.\n\n# This replacement code is taken from sample in the CMake Wiki at\n\n# http://www.cmake.org/Wiki/CMake_FAQ#Dynamic_Replace.\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# When Google Test is built as a shared library, it should also use\n\n# shared runtime libraries.  Otherwise, it may end up with multiple\n\n# copies of runtime library data in different modules, resulting in\n\n# hard-to-find crashes. When it is built as a static library, it is\n\n# preferable to use CRT as static libraries, as we don't have to rely\n\n# on CRT DLLs being available. CMake always defaults to using shared\n\n# CRT libraries, so we override that default here.\n",
        "Line" : 28,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# We prefer more strict warning checking for building Google Test.\n\n# Replaces /W3 with /W4 in defaults.\n",
        "Line" : 38,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Defines the compiler/linker flags used to build Google Test and\n\n# Google Mock.  You can tweak these definitions to suit your need.  A\n\n# variable's value is empty before it's explicitly assigned to.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Defines CMAKE_USE_PTHREADS_INIT and CMAKE_THREAD_LIBS_INIT.\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Newlines inside flags variables break CMake's NMake generator.\n\n# TODO(vladl@google.com): Add -RTCs and -RTCu to debug builds.\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Suppress spurious warnings MSVC 7.1 sometimes issues.\n\n# Forcing value to bool.\n",
        "Line" : 60,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# Copy constructor and assignment operator could not be generated.\n",
        "Line" : 63,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# Compatibility warnings not applicable to Google Test.\n\n# Resolved overload was found by argument-dependent lookup.\n",
        "Line" : 65,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# Until version 4.3.2, GCC doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 78,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Sun Pro doesn't provide macros to indicate whether exceptions and\n\n# RTTI are enabled, so we define GTEST_HAS_* explicitly.\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# CMake 2.8 changes Visual Age's compiler ID to \"XL\".\n",
        "Line" : 92,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Until version 9.0, Visual Age doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# RTTI can not be disabled in HP aCC compiler.\n",
        "Line" : 103,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# The pthreads library is available and allowed.\n",
        "Line" : 107,
        "CharPositionInLine" : 32
      },
      "17" : {
        "Text" : "# For building gtest's own tests and samples.\n",
        "Line" : 113,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# For building the gtest libraries.\n",
        "Line" : 121,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# type can be either STATIC or SHARED to denote a static or shared library.\n\n# ARGN refers to additional arguments after 'cxx_flags'.\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "########################################################################\n\n#\n\n# Helper functions for creating build targets.\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# cxx_executable_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ executable that depends on the given libraries and\n\n# is built from the given source files with the given compiler flags.\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# To support mixing linking in static and dynamic libraries, link each\n\n# library in with an extra call to target_link_libraries.\n",
        "Line" : 172,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# cxx_executable(name dir lib srcs...)\n\n#\n\n# creates a named target that depends on the given libs and is built\n\n# from the given source files.  dir/name.cc is implicitly included in\n\n# the source file list.\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Sets PYTHONINTERP_FOUND and PYTHON_EXECUTABLE.\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# cxx_test_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ test that depends on the given libs and is built\n\n# from the given source files with the given compiler flags.\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# cxx_test(name libs srcs...)\n\n#\n\n# creates a named test target that depends on the given libs and is\n\n# built from the given source files.  Unlike cxx_test_with_flags,\n\n# test/name.cc is already implicitly included in the source file list.\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# py_test(name)\n\n#\n\n# creates a Python test with the given name whose main module is in\n\n# test/name.py.  It does nothing if Python is not installed.\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# We are not supporting Python tests on Linux yet as they consider\n\n# all Linux environments to be google3 and try to use google3 features.\n",
        "Line" : 216,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# ${CMAKE_BINARY_DIR} is known at configuration time, so we can\n\n# directly bind it from cmake. ${CTEST_CONFIGURATION_TYPE} is known\n\n# only at ctest runtime (by calling ctest -c <Configuration>), so\n\n# we have to escape $ to delay variable substitution here.\n",
        "Line" : 219,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 31
    },
    "third_party/gmock-1.7.0/gtest/make/Makefile" : {
      "ObjectId" : "9ac74493ba55246597e90b898fae847ae358eab5",
      "LastModified" : "2015-08-14T05:28:21Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# A sample Makefile for building Google Test and using it in user\n\n# tests.  Please tweak it to suit your environment and project.  You\n\n# may want to move it to your project's root directory.\n\n#\n\n# SYNOPSIS:\n\n#\n\n#   make [all]  - makes everything.\n\n#   make TARGET - makes the given target.\n\n#   make clean  - removes all files generated by make.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Please tweak the following variable definitions as needed by your\n\n# project, except GTEST_HEADERS, which you can use in your own targets\n\n# but shouldn't modify.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Points to the root of Google Test, relative to where this file is.\n\n# Remember to tweak this if you move this file.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Where to find user code.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Flags passed to the preprocessor.\n\n# Set Google Test's header directory as a system directory, such that\n\n# the compiler doesn't generate warnings in Google Test headers.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Flags passed to the C++ compiler.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# All tests produced by this Makefile.  Remember to add new tests you\n\n# created to the list.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# All Google Test headers.  Usually you shouldn't change this\n\n# definition.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# House-keeping build targets.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Builds gtest.a and gtest_main.a.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Usually you shouldn't tweak such internal variables, indicated by a\n\n# trailing _.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# For simplicity and to avoid depending on Google Test's\n\n# implementation details, the dependencies specified below are\n\n# conservative and not optimized.  This is fine as Google Test\n\n# compiles fast and for ordinary users its source rarely changes.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Builds a sample test.  A test should link with either gtest.a or\n\n# gtest_main.a, depending on whether it defines its own main()\n\n# function.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "third_party/gmock-1.7.0/gtest/scripts/test/Makefile" : {
      "ObjectId" : "cdff584637b7a6e9df1fa43ce8f588c43815e561",
      "LastModified" : "2015-08-14T05:28:21Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# A Makefile for fusing Google Test and building a sample test against it.\n\n#\n\n# SYNOPSIS:\n\n#\n\n#   make [all]  - makes everything.\n\n#   make TARGET - makes the given target.\n\n#   make check  - makes everything and runs the built sample test.\n\n#   make clean  - removes all files generated by make.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Points to the root of fused Google Test, relative to where this file is.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Paths to the fused gtest files.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Where to find the sample test.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Where to find gtest_main.cc.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Flags passed to the preprocessor.\n\n# We have no idea here whether pthreads is available in the system, so\n\n# disable its use.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Flags passed to the C++ compiler.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "third_party/gmock-1.7.0/make/Makefile" : {
      "ObjectId" : "c1cc0e90f172b9f6a48fa9f74d72342d1d2e2585",
      "LastModified" : "2015-08-14T05:28:21Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# A sample Makefile for building both Google Mock and Google Test and\n\n# using them in user tests.  This file is self-contained, so you don't\n\n# need to use the Makefile in Google Test's source tree.  Please tweak\n\n# it to suit your environment and project.  You may want to move it to\n\n# your project's root directory.\n\n#\n\n# SYNOPSIS:\n\n#\n\n#   make [all]  - makes everything.\n\n#   make TARGET - makes the given target.\n\n#   make clean  - removes all files generated by make.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Please tweak the following variable definitions as needed by your\n\n# project, except GMOCK_HEADERS and GTEST_HEADERS, which you can use\n\n# in your own targets but shouldn't modify.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Points to the root of Google Test, relative to where this file is.\n\n# Remember to tweak this if you move this file, or if you want to use\n\n# a copy of Google Test at a different location.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Points to the root of Google Mock, relative to where this file is.\n\n# Remember to tweak this if you move this file.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Where to find user code.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Flags passed to the preprocessor.\n\n# Set Google Test and Google Mock's header directories as system\n\n# directories, such that the compiler doesn't generate warnings in\n\n# these headers.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Flags passed to the C++ compiler.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# All tests produced by this Makefile.  Remember to add new tests you\n\n# created to the list.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# All Google Test headers.  Usually you shouldn't change this\n\n# definition.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# All Google Mock headers. Note that all Google Test headers are\n\n# included here too, as they are #included by Google Mock headers.\n\n# Usually you shouldn't change this definition.\t\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# House-keeping build targets.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Builds gmock.a and gmock_main.a.  These libraries contain both\n\n# Google Mock and Google Test.  A test should link with either gmock.a\n\n# or gmock_main.a, depending on whether it defines its own main()\n\n# function.  It's fine if your test only uses features from Google\n\n# Test (and not Google Mock).\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Usually you shouldn't tweak such internal variables, indicated by a\n\n# trailing _.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# For simplicity and to avoid depending on implementation details of\n\n# Google Mock and Google Test, the dependencies specified below are\n\n# conservative and not optimized.  This is fine as Google Mock and\n\n# Google Test compile fast and for ordinary users their source rarely\n\n# changes.\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Builds a sample test.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "third_party/mosquitto-1.4.4/CMakeLists.txt" : {
      "ObjectId" : "d151a8141d2a6848a6cb6a2ab3cfe8e1dc1f1a66",
      "LastModified" : "2015-12-09T08:07:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is a cmake script. Process it with the CMake gui or command line utility\n\n# to produce makefiles / Visual Studio project files on Mac OS X and Windows.\n\n#\n\n# To configure the build options either use the CMake gui, or run the command\n\n# line utility including the \"-i\" option.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Only for version 3 and up. cmake_policy(SET CMP0042 NEW)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ========================================\n\n# Include projects\n\n# ========================================\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ========================================\n\n# Install config file\n\n# ========================================\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "third_party/mosquitto-1.4.4/Makefile" : {
      "ObjectId" : "967ba266af69235b8689dcca6fdd0be52ecbde6b",
      "LastModified" : "2015-12-09T08:07:22Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#man/\\(.*\\)\\.xml#\\1#' | sed -e 's/\\./-/g'); \\\n\t\t$(XSLTPROC) $(DB_HTML_XSL) $${m} > dist/$${hfile}.html; \\\n\tdone\n",
        "Line" : 61,
        "CharPositionInLine" : 33
      },
      "CommentCount" : 1
    },
    "third_party/mosquitto-1.4.4/client/CMakeLists.txt" : {
      "ObjectId" : "a743fccf73840cf9e1e515be692c67bb0a89eb60",
      "LastModified" : "2015-12-09T08:07:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third_party/mosquitto-1.4.4/client/Makefile" : {
      "ObjectId" : "bd65355fe78e5843419c1665e49540bb3841856f",
      "LastModified" : "2015-12-09T08:07:22Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "third_party/mosquitto-1.4.4/examples/mysql_log/Makefile" : {
      "ObjectId" : "e8c8b2cc374fa2978be00675f7fdbbe24a8031a9",
      "LastModified" : "2015-12-09T08:07:22Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "third_party/mosquitto-1.4.4/examples/temperature_conversion/Makefile" : {
      "ObjectId" : "0f20ac413f6015134584d0b71c453ce3b74046d6",
      "LastModified" : "2015-12-09T08:07:22Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "third_party/mosquitto-1.4.4/lib/CMakeLists.txt" : {
      "ObjectId" : "32a04b4d035d185b98e92f6e9e74b36f4b00893b",
      "LastModified" : "2015-12-09T08:07:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Simple detect c-ares\n",
        "Line" : 55,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "third_party/mosquitto-1.4.4/lib/Makefile" : {
      "ObjectId" : "825fceadf76671a9b4abb838648629c2a9dff388",
      "LastModified" : "2015-12-09T08:07:22Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "third_party/mosquitto-1.4.4/lib/cpp/CMakeLists.txt" : {
      "ObjectId" : "0a9fd914cc80efcc9a7e87f488989fd4b01487ab",
      "LastModified" : "2015-12-09T08:07:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third_party/mosquitto-1.4.4/lib/cpp/Makefile" : {
      "ObjectId" : "8b627d3216d8a419eafe3b011df2593c6da693af",
      "LastModified" : "2015-12-09T08:07:22Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "third_party/mosquitto-1.4.4/man/CMakeLists.txt" : {
      "ObjectId" : "f0a9cf79079320e641b3dbc59aafed51837dfa09",
      "LastModified" : "2015-12-09T08:07:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third_party/mosquitto-1.4.4/man/Makefile" : {
      "ObjectId" : "daacab99ed205a22b7616291b70e456af8f3d82e",
      "LastModified" : "2015-12-09T08:07:22Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\\(.*\\)\\.xml#\\1#' | sed -e 's/\\./-/g'); \\\n\t\t$(XSLTPROC) html.xsl $${m} > $${hfile}.php; \\\n\tdone\n",
        "Line" : 66,
        "CharPositionInLine" : 33
      },
      "1" : {
        "Text" : "# To merge new translations do:\n\n# /usr/bin/xml2po -p de.po chapter1.xml > chapter1.de.xml\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "third_party/mosquitto-1.4.4/src/CMakeLists.txt" : {
      "ObjectId" : "5bebeedde87d4b453b6c22012772a1ab5df55b1a",
      "LastModified" : "2015-12-09T08:07:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Simple detect libuuid\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "third_party/mosquitto-1.4.4/src/Makefile" : {
      "ObjectId" : "2bc70dec2c31334cdcde978b8fc421daef027ee3",
      "LastModified" : "2015-12-09T08:07:22Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "third_party/mosquitto-1.4.4/src/db_dump/Makefile" : {
      "ObjectId" : "13ae261b53b19006a763758e364b397b8ef00161",
      "LastModified" : "2015-12-09T08:07:22Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "third_party/mosquitto-1.4.4/test/Makefile" : {
      "ObjectId" : "8c9a44d034a64752c49890da8fcdafe64fd26f38",
      "LastModified" : "2015-12-09T08:07:22Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#packet-gen qos\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#${CC} $^ -o $@ -lmosquitto\n",
        "Line" : 20,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "third_party/mosquitto-1.4.4/test/broker/Makefile" : {
      "ObjectId" : "510d90f92a9cc04f2c522e94d21635018379d6fb",
      "LastModified" : "2015-12-09T08:07:22Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "third_party/mosquitto-1.4.4/test/broker/c/Makefile" : {
      "ObjectId" : "4e43637c9d5b66d097c8e0462088a66117511948",
      "LastModified" : "2015-12-09T08:07:22Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "third_party/mosquitto-1.4.4/test/lib/Makefile" : {
      "ObjectId" : "03f139084d9f10eda58476eb3267d1d6d3a5e6c4",
      "LastModified" : "2015-12-09T08:07:22Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#./08-ssl-fake-cacert.py $@/08-ssl-fake-cacert.test\n",
        "Line" : 46,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "third_party/mosquitto-1.4.4/test/lib/c/Makefile" : {
      "ObjectId" : "570b7ad3f527832e6bdcbe3e64ab301e3dd96f6c",
      "LastModified" : "2015-12-09T08:07:22Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "third_party/mosquitto-1.4.4/test/lib/cpp/Makefile" : {
      "ObjectId" : "91583f6c21e26d149bd09977de0efc8d47c81714",
      "LastModified" : "2015-12-09T08:07:22Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "third_party/variant/CMakeLists.txt" : {
      "ObjectId" : "426adeb9258a71d55f09a7b45c34f5cda1259236",
      "LastModified" : "2015-12-09T08:07:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Offer the user the choice of overriding the installation directories\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Make relative paths absolute (needed later on)\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# setup include directories\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# libraries to depends upon\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# We want to following checks to try compiling with the same flags that we\n\n# have already setup\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# add sub directories\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build documentation\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add targets to the build-tree export set\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#export(TARGETS ${LIBVARIANT_EXPORTED_LIBS}\n\n#\tFILE \"${PROJECT_BINARY_DIR}/LibVariantLibraryDepends.cmake\")\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Export the package for use from the build-tree\n\n# (this registers the build-tree with a global CMake-registry)\n\n#export(PACKAGE LibVariant) # NOT IMPLEMENTED IN cmake 2.6 on RHEL6\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Create a LibVariantBuildTreeSettings.cmake file for the use from the build tree\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Create the LibVariantConfig.cmake and LibVariantConfigVersion files\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Install the export set for use with the install-tree\n\n#install(EXPORT LibVariantLibraryDepends\n\n#DESTINATION \"${INSTALL_CMAKE_DIR}\"\n\n#COMPONENT dev)\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Create the package config file\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#install(FILES ${install_headers} DESTINATION ${INSTALL_INCLUDE_DIR}/Variant/)\n\n#install(FILES ${CMAKE_CURRENT_BINARY_DIR}/include/Variant/Config.h DESTINATION\n\n#${INSTALL_INCLUDE_DIR}/Variant/)\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Am I the root CMakeLists.txt?\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# set parent variables as if it used find_package(testlib2)\n",
        "Line" : 239,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 17
    },
    "third_party/variant/cmake/Modules/FindLibYAML.cmake" : {
      "ObjectId" : "26ce0ef21fbcd569467e888842f23ca592cab156",
      "LastModified" : "2015-12-09T08:07:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake module to search for the libyaml library\n\n# (library for parsing YAML files)\n\n# If it's found it sets LIBYAML_FOUND to TRUE\n\n# and following variables are set:\n\n#    LIBYAML_INCLUDE_DIR\n\n#    LIBYAML_LIBRARY\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "third_party/variant/cmake/Modules/FindMsgPack.cmake" : {
      "ObjectId" : "37871bddbd170338e95d68145ac31ac83c5c30b6",
      "LastModified" : "2015-12-09T08:07:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find msgpack\n\n# Find the native Message Pack headers and libraries.\n\n#\n\n#  MSGPACK_INCLUDE_DIRS - where to find msgpack.hpp, etc.\n\n#  MSGPACK_LIBRARIES    - List of libraries when using MsgPack.\n\n#  MSGPACK_FOUND        - True if MsgPack found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Look for the header file.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look for the library.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "third_party/variant/cmake/Modules/MakeTBZ2.cmake" : {
      "ObjectId" : "ec160f9e33f2fdfd63d1274c502614669a328582",
      "LastModified" : "2015-12-09T08:07:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third_party/variant/examples/CMakeLists.txt" : {
      "ObjectId" : "706bc685de7bbb46667d479065bb6bef47bc1964",
      "LastModified" : "2015-12-09T08:07:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third_party/variant/src/CMakeLists.txt" : {
      "ObjectId" : "a6ed4dc2b3e6b98e8a33300e68d17c3bbdd28047",
      "LastModified" : "2015-12-09T08:07:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#target_link_libraries(Variant ${EXTRA_LIBS})\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#add_executable(varsh varsh.cc)\n\n#target_link_libraries(varsh Variant)\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#install(TARGETS Variant varsh\n\n#\tEXPORT LibVariantLibraryDepends\n\n#\tRUNTIME DESTINATION ${INSTALL_BIN_DIR}\n\n#   \tLIBRARY DESTINATION ${INSTALL_LIB_DIR}\n\n#   \tARCHIVE DESTINATION ${INSTALL_LIB_DIR})\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "third_party/variant/test/CMakeLists.txt" : {
      "ObjectId" : "484f7875a18e0f7c20e4e9bd970c44255b318f8d",
      "LastModified" : "2015-12-09T08:07:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third_party/variant/test/test_schema_data/jsonschema-tests/Makefile" : {
      "ObjectId" : "01e903873a559ff5ba4145bc3384f3331d642337",
      "LastModified" : "2015-12-09T08:07:22Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "third_party/variant/test/test_schema_data/tv4-tests/01-any-type/Makefile" : {
      "ObjectId" : "91c369e58aa52e154fea4b03e191be0c2661e4fd",
      "LastModified" : "2015-12-09T08:07:22Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "third_party/variant/test/test_schema_data/tv4-tests/02-numeric/Makefile" : {
      "ObjectId" : "b261c621a278f4865a22974f40ee01f6570a21bc",
      "LastModified" : "2015-12-09T08:07:22Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "third_party/variant/test/test_schema_data/tv4-tests/03-strings/Makefile" : {
      "ObjectId" : "b261c621a278f4865a22974f40ee01f6570a21bc",
      "LastModified" : "2015-12-09T08:07:22Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "third_party/variant/test/test_schema_data/tv4-tests/04-arrays/Makefile" : {
      "ObjectId" : "b261c621a278f4865a22974f40ee01f6570a21bc",
      "LastModified" : "2015-12-09T08:07:22Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "third_party/variant/test/test_schema_data/tv4-tests/05-objects/Makefile" : {
      "ObjectId" : "b261c621a278f4865a22974f40ee01f6570a21bc",
      "LastModified" : "2015-12-09T08:07:22Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "third_party/variant/test/test_schema_data/tv4-tests/06-combinations/Makefile" : {
      "ObjectId" : "b261c621a278f4865a22974f40ee01f6570a21bc",
      "LastModified" : "2015-12-09T08:07:22Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "third_party/variant/test/test_schema_data/tv4-tests/07-ref/Makefile" : {
      "ObjectId" : "b261c621a278f4865a22974f40ee01f6570a21bc",
      "LastModified" : "2015-12-09T08:07:22Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "third_party/variant/test/test_schema_data/tv4-tests/Makefile" : {
      "ObjectId" : "de57236da8d33f9f216a36c5a28c6eead4ee849e",
      "LastModified" : "2015-12-09T08:07:22Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 33,
    "MAKEFILE" : 27,
    "AUTOMAKE" : 3
  },
  "ElapsedTime" : 1924
}