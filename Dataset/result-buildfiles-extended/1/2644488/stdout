{
  "Repository" : "2644488",
  "Revision" : "HEAD",
  "ObjectId" : "e8eda7777208a9a73f6294e98459f3b33837677e",
  "CommitTime" : "2019-04-17T08:34:20Z",
  "Files" : {
    "3rd_party/CMakeLists.txt" : {
      "ObjectId" : "8e57dac64f0fa6fd01769df37b94043aa51c8f1a",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#    add_subdirectory(Lute)\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ERICEDIT: If the OS is Windows:\n",
        "Line" : 10,
        "CharPositionInLine" : 10
      },
      "2" : {
        "Text" : "# ERICEDIT: Add a target that depends on authserver.\n",
        "Line" : 11,
        "CharPositionInLine" : 23
      },
      "3" : {
        "Text" : "# ERICEDIT: Copy over libACE.dll to the output directory.\n",
        "Line" : 15,
        "CharPositionInLine" : 24
      },
      "4" : {
        "Text" : "########################################################################################\n\n# Optional components\n\n########################################################################################\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "3rd_party/ExternalProject_ACE.cmake" : {
      "ObjectId" : "831a3c02f764c647320fe20787e46b8944d7fac8",
      "LastModified" : "2018-09-03T15:47:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd_party/ExternalProject_CEREAL.cmake" : {
      "ObjectId" : "6d00c8e00128c91961795aa20c9d33a31b92db0e",
      "LastModified" : "2017-02-17T20:53:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#TODO: cmake workaround\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rd_party/ExternalProject_JCON.cmake" : {
      "ObjectId" : "6f5a8aeb5b08cb9ce22ea6e9f5b31b0686b4a750",
      "LastModified" : "2018-10-24T08:24:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#TODO: cmake workaround\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rd_party/ExternalProject_LUA.cmake" : {
      "ObjectId" : "025dc715164bd7c0f8ff01721f70ffbc686c0c2b",
      "LastModified" : "2018-10-24T08:24:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set_shared_lib_properties(ace)\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rd_party/ExternalProject_Lutefisk3D.cmake" : {
      "ObjectId" : "66fa5dd9015254b56447421cbfc5dd79b1458f32",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# don't need it, and it doesn't compile anyway :)\n",
        "Line" : 5,
        "CharPositionInLine" : 32
      },
      "1" : {
        "Text" : "#NOTE: by default lutefisk builds in RelWithDebInfo\n\n# for our use case this seems the most optimal build type.\n",
        "Line" : 8,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# add the main options for lutefisk, \n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# don't need it, and it doesn't compile anyway :)\n",
        "Line" : 13,
        "CharPositionInLine" : 32
      },
      "4" : {
        "Text" : "# forward LUTEFISK3D_* options to the external project build.\n",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# don't build this when build-all is requested ?\n",
        "Line" : 41,
        "CharPositionInLine" : 27
      },
      "6" : {
        "Text" : "#set_shared_lib_properties(lutefisk3d)\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# add lutefisk defines\n",
        "Line" : 51,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#set_property(TARGET Lutefisk3D APPEND PROPERTY INTERFACE_COMPILE_DEFINITIONS ACE_HAS_DLL=1)\n",
        "Line" : 73,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 9
    },
    "3rd_party/ExternalProject_SOL2.cmake" : {
      "ObjectId" : "5fbfcb312c218e9feea06602ab4fcf7197bd02e2",
      "LastModified" : "2018-10-24T08:24:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#TODO: cmake workaround\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rd_party/cereal/CMakeLists.txt" : {
      "ObjectId" : "ff95f6dcc5a95956856dbff2bc5e61368521f5b6",
      "LastModified" : "2018-10-24T08:24:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# installing cereal requires INTERFACE lib\n",
        "Line" : 5,
        "CharPositionInLine" : 39
      },
      "1" : {
        "Text" : "# ignored\n",
        "Line" : 28,
        "CharPositionInLine" : 25
      },
      "CommentCount" : 2
    },
    "3rd_party/cereal/sandbox/CMakeLists.txt" : {
      "ObjectId" : "5008e420fc58b944ac7de9da562ca4b76e52f603",
      "LastModified" : "2018-10-24T08:24:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd_party/cereal/sandbox/sandbox_shared_lib/CMakeLists.txt" : {
      "ObjectId" : "5d8ea0886049f729831ad2441a1ecb4236e07fae",
      "LastModified" : "2018-10-24T08:24:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rd_party/cereal/unittests/CMakeLists.txt" : {
      "ObjectId" : "71aa70b28ba6ff90013cc28283ce5f8701f5edb3",
      "LastModified" : "2018-10-24T08:24:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# A semi-colon separated list of test sources that should not be automatically built with boost unit test\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build the portability test only if we are on a 64-bit machine (void* is 8 bytes)\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Build all of the non-special tests and link against the boost unit test framework\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Check to see if our target is listed in \"SPECIAL_TESTS\"\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# TODO: This won't work right now, because we would need a 32-bit boost\n\n## If we are on a 64-bit machine, create an extra 32-bit version of the test\n\n#if(${CMAKE_SIZEOF_VOID_P} EQUAL 8)\n\n#  add_executable(${TEST_TARGET}_32 ${TEST_SOURCE})\n\n#  set_target_properties(${TEST_TARGET}_32 PROPERTIES\n\n#    COMPILE_DEFINITIONS \"BOOST_TEST_DYN_LINK;BOOST_TEST_MODULE=${TEST_TARGET}\"\n\n#    COMPILE_FLAGS \"-m32\" LINK_FLAGS \"-m32\")\n\n#  target_link_libraries(${TEST_TARGET}_32 ${Boost_LIBRARIES})\n\n#  add_test(\"${TEST_TARGET}_32\" \"${TEST_TARGET}_32\")\n\n#endif()\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Add the valgrind target\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add the coverage target\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# add tests to coverage\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Check to see if our target is listed in \"SPECIAL_TESTS\"\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 9
    },
    "3rd_party/cereal/unittests/cmake-config-module.cmake" : {
      "ObjectId" : "1b2f46420d25e1b3353edeb19de41beae4468ded",
      "LastModified" : "2018-10-24T08:24:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# cmake configure step for cereal\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# cmake install cereal\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# create test project sources\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# cmake install cereal\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "3rd_party/jcon-cpp/CMakeLists.txt" : {
      "ObjectId" : "ec640770504a24a01bb2c3ecf808788e02df0379",
      "LastModified" : "2018-10-24T08:24:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add_definitions(-DBOOST_RESULT_OF_USE_DECLTYPE)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -enable-stdcall-fixup is to avoid FMOD linker warning\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "3rd_party/jcon-cpp/src/CMakeLists.txt" : {
      "ObjectId" : "488742e3980615307971ce985ae0fdb86da5f113",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if(APPLE)\n\n#    # icon\n\n#    if(EXISTS \"${PROJECT_NAME}.icns\")\n\n#        # set how it shows up in the Info.plist file\n\n#        set(MACOSX_BUNDLE_ICON_FILE ${PROJECT_NAME}.icns)\n\n#\n\n#        # set where in the bundle to put the icns file\n\n#        set_source_files_properties(${PROJECT_NAME}.icns PROPERTIES MACOSX_PACKAGE_LOCATION Resources)\n\n#\n\n#        # include the icns file in the target\n\n#        set(${PROJECT_NAME}_sources ${${PROJECT_NAME}_sources} ${PROJECT_NAME}.icns)\n\n#    endif()\n\n#\n\n#    add_executable(${PROJECT_NAME} MACOSX_BUNDLE ${${PROJECT_NAME}_headers} ${${PROJECT_NAME}_sources} ${UI_HEADERS})\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#if(APPLE)\n\n#    set(APPS \"\\${CMAKE_INSTALL_PREFIX}/bin/${PROJECT_NAME}\")\n\n#\n\n#    set(plugin_dest_dir ${PROJECT_NAME}.app/Contents/MacOS)\n\n#    set(APPS \"\\${CMAKE_INSTALL_PREFIX}/${PROJECT_NAME}.app\")\n\n#\n\n#    install(CODE \"\n\n#            include(BundleUtilities)\n\n#            fixup_bundle(\\\"${APPS}\\\" \\\"\\\" \\\"${DIRS}\\\")\n\n#            \" COMPONENT Runtime)\n\n#\n\n#else()\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#endif()\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "3rd_party/jcon-cpp/src/jcon/CMakeLists.txt" : {
      "ObjectId" : "414a287b272001aea52e3e105d2d82b84cafd4cc",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_definitions(-DJCON_DLL)\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rd_party/lua/CMakeLists.txt" : {
      "ObjectId" : "4479d05c2e06c1c34b3750e0c8a2bb9452abbab8",
      "LastModified" : "2018-10-24T08:24:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# liolib.c - do not expose fillesystem access to the interpreter \n\n# loslib.c - do not expose OS functions to the interpreter \n\n# loadlib.c - do not expose shared library loading functions to the interpreter \n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "3rd_party/lua_sol2/CMakeLists.txt" : {
      "ObjectId" : "47a06d969d212d5f0c13cab00fa0272fca7ada04",
      "LastModified" : "2018-10-24T08:24:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ignored\n",
        "Line" : 10,
        "CharPositionInLine" : 58
      },
      "CommentCount" : 1
    },
    "CMakeLists.txt" : {
      "ObjectId" : "80d905d1c3d22becec9eb4dbad5df40cc995cdce",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# for version and revision info. Derived from https://github.com/dolphin-emu/dolphin/blob/master/CMakeLists.txt#L132\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# defines SEGS_REVISION\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# defines SEGS_DESCRIPTION\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# remove hash (and trailing \"-0\" if needed) from description\n",
        "Line" : 19,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# defines SEGS_BRANCH\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# version number\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# If SEGS is not built from a Git repository, default the version info to\n\n# reasonable values.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "########################################################################################\n\n# Prerequisites\n\n########################################################################################\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# ERICEDIT: Changed to CMAKE_BINARY_DIR so that this variable always points to the top level of the build directory.\n",
        "Line" : 85,
        "CharPositionInLine" : 64
      },
      "9" : {
        "Text" : "# ERICEDIT: Changed to lowercase.\n",
        "Line" : 87,
        "CharPositionInLine" : 44
      },
      "10" : {
        "Text" : "# Event registration support functionality\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# followed by a list of directories to scan\n",
        "Line" : 96,
        "CharPositionInLine" : 34
      },
      "12" : {
        "Text" : "# this has to be visited before scan_event_types macro below has been used\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# this function is here to solve the env paths issue\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# First element doesn't require separator at all...\n",
        "Line" : 126,
        "CharPositionInLine" : 27
      },
      "15" : {
        "Text" : "# .. but other elements do.\n",
        "Line" : 128,
        "CharPositionInLine" : 45
      },
      "16" : {
        "Text" : "##############################################\n\n# Event registration support functionality\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# followed by a list of directories to scan\n",
        "Line" : 134,
        "CharPositionInLine" : 30
      },
      "18" : {
        "Text" : "# for event_gen we first add qt5 binary path to allow it to run during build.\n",
        "Line" : 142,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "#find handler's events\n",
        "Line" : 155,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# allow all headers to refer to events by their dir/name.h\n",
        "Line" : 159,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# all interfaces use stuff from Common, so should depend/link to it\n",
        "Line" : 162,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# TODO: consider add_subdirectory(../../Common/Messages/${name}) to force existence/building of interface lib\n\n# add the implementation library\n",
        "Line" : 172,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "##############################################\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24
    },
    "CMakeScripts/3rdparty_support.cmake" : {
      "ObjectId" : "412ed06a3d35fbfce92b4aa893e03820894361c0",
      "LastModified" : "2018-10-24T08:24:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMakeScripts/LocateQt5.cmake" : {
      "ObjectId" : "7ff1a5fa5bc1dc0846c1f294eb46a1f3690778bd",
      "LastModified" : "2018-10-24T08:24:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# msvc only; mingw will need different logic\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# look for user-registry pointing to qtcreator\n",
        "Line" : 4,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# get root path so we can search for 5.3, 5.4, 5.5, etc\n",
        "Line" : 10,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# assume the latest version will be last alphabetically\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# fix any double slashes which seem to be common\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# we only support 2017, and qt5 uses vs2015 files for 32 bit build\n",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# check for 64-bit os\n\n# may need to be removed for older compilers as it wasn't always offered\n",
        "Line" : 26,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# use Qt_DIR approach so you can find Qt after cmake has been invoked\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "CMakeScripts/Macdeployqt.cmake" : {
      "ObjectId" : "70d7079424f4d7f5467275593016f86540561197",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\n\n#\n\n# Copyright (c) 2017 Nathan Osman\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in\n\n# all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Retrieve the absolute path to qmake and then use that path to find\n\n# the macdeployqt binary\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add commands that copy the required Qt files to the application bundle\n\n# represented by the target\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "CMakeScripts/Windeployqt.cmake" : {
      "ObjectId" : "2c7d7bc481e5241e258da1e0327e19f77c4982c2",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\n\n#\n\n# Copyright (c) 2017 Nathan Osman\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in\n\n# all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Retrieve the absolute path to qmake and then use that path to find\n\n# the windeployqt binary\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Running this with MSVC 2015 requires CMake 3.6+\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set windeployqt dll type\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add commands that copy the Qt runtime to the target's output directory after\n\n# build and install the Qt runtime to the specified directory\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Run windeployqt immediately after build\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# install(CODE ...) doesn't support generator expressions, but\n\n# file(GENERATE ...) does - store the path in a file\n",
        "Line" : 61,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Before installation, run a series of commands that copy each of the Qt\n\n# runtime files to the appropriate directory for installation\n",
        "Line" : 67,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# windeployqt doesn't work correctly with the system runtime libraries,\n\n# so we fall back to one of CMake's own modules for copying them over\n",
        "Line" : 110,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 9
    },
    "Components/CMakeLists.txt" : {
      "ObjectId" : "3dfe686a066c6f68151ddc6b37344ae753e3299e",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Retain directory structure in visual studio\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Components/UnitTests/CMakeLists.txt" : {
      "ObjectId" : "677a2a013f48bdeafa46cb99e80bb01c348c3174",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# moc when necessary\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# moc files are generated in the binary dir, look for includes there\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Projects/CMakeLists.txt" : {
      "ObjectId" : "1e7b737a2e7c468ebd4b739313a37a69ef67f1dc",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Projects/ChampionsOnline/CMakeLists.txt" : {
      "ObjectId" : "7efb82c62976257f6ef7651fff3b8b3184b91cfc",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Projects/ChampionsOnline/Clients/CMakeLists.txt" : {
      "ObjectId" : "c38aa651ab44fa3bb15d42f36fd138ce9defc4aa",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Projects/ChampionsOnline/Clients/CliClient/CMakeLists.txt" : {
      "ObjectId" : "bd99beef62cbf16f9226c04c6fc7abcbdbe7d017",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add components here\n\n# end of additional components\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#ADD_LIBRARY(ChampionsOnline_CliClient STATIC ${target_SOURCES})\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Projects/ChampionsOnline/Clients/GuiClient/CMakeLists.txt" : {
      "ObjectId" : "375e9fcb40442090de5eafd613b26eb7a111ecb8",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add components here\n\n# end of additional components\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#ADD_LIBRARY(ChampionsOnline_GuiClient STATIC ${target_SOURCES})\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Projects/ChampionsOnline/Servers/CMakeLists.txt" : {
      "ObjectId" : "d1c0ef346e2d915e7be1671dc4f0072823ba5493",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Projects/ChampionsOnline/Servers/LoginServer/CMakeLists.txt" : {
      "ObjectId" : "595bf198670336ab52a00b00fef99ddf81aeb90d",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add components here\n\n# end of additional components\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#ADD_LIBRARY(ChampionsOnline_LoginServer STATIC ${target_SOURCES})\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Projects/ChampionsOnline/Servers/TestServer/CMakeLists.txt" : {
      "ObjectId" : "800f46f5fd4f01236843801acb288dc8aa0c70c9",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add components here\n\n# end of additional components\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#ADD_LIBRARY(ChampionsOnline_TestServer STATIC ${target_SOURCES})\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Projects/CoX/CMakeLists.txt" : {
      "ObjectId" : "95cc34d4c47e50ed29a20ead77357721d74ffd8f",
      "LastModified" : "2019-04-12T05:44:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add README, scripts, settings.cfg, and Starter Databases\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Outbreak\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Outbreak Spawndefs\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Atlas Park\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Atlas Park Spawndefs\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#King's Row\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#King's Row Spawndefs\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#Galaxy City\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#Steel Canyon\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#Steel Canyon Spawndefs\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#Skyway City\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#Skyway City Spawndefs\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#Talos Island\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#Talos Island Spawndefs\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#Independence Port\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#Independence Port Spawndefs\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#Founders' Falls\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#Brickstown\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#Peregrine Island\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#Perez Park\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#Perez Park Spawndefs\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#Boomtown\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#Boomtown Spawndefs\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#Dark Astoria\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#Dark Astoria Spawndefs\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#Crey's Folly\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#Abandoned Sewer Network\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#Sewer Network\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#Faultline\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#Terra Volta\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#Eden\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#The Hive\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#Rikti Crash Site\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 33
    },
    "Projects/CoX/Clients/CMakeLists.txt" : {
      "ObjectId" : "89a2704961932e936fb94fff23aebd337ae1035c",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Client_I0 should be compiled separately, since it has to be 32bit\n\n# add_subdirectory(Client_I0)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#add_subdirectory(Client_I0)\n",
        "Line" : 5,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "Projects/CoX/Clients/Client/CMakeLists.txt" : {
      "ObjectId" : "06a10a52d39a7b2e46d2024abd1d87f48013c0ec",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Retain directory structure in visual studio\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Projects/CoX/Clients/Client_I0/3rd_party/CMakeLists.txt" : {
      "ObjectId" : "eb29f5eec668b2a2e29484f9f85057b1c6b8e6bf",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Projects/CoX/Clients/Client_I0/3rd_party/ExternalProject_GLEW.cmake" : {
      "ObjectId" : "97b9710faccf41152cfc7bf8c35aac1bec3c9cd6",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# this is shared but cmake is wonky on windows and tries to link to glew.lib instead of the set glewdll.lib\n",
        "Line" : 18,
        "CharPositionInLine" : 45
      },
      "CommentCount" : 1
    },
    "Projects/CoX/Clients/Client_I0/3rd_party/glew-1.13.0/CMakeLists.txt" : {
      "ObjectId" : "2fc15ecfa322a9bb6663ef2541e817eb6a0a4549",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# get version from config/version\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Projects/CoX/Clients/Client_I0/3rd_party/glew-1.13.0/CopyImportedTargetProperties.cmake" : {
      "ObjectId" : "a7ade9842ea7bf1b2296eafb6653046243272a59",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# CopyImportedTargetProperties\n\n# --------------------------\n\n#\n\n# Copies the `INTERFACE*` and `IMPORTED*` properties from a target\n\n# to another one.\n\n# This function can be used to duplicate an `IMPORTED` or an `ALIAS` library\n\n# with a different name since ``add_library(... ALIAS ...)`` does not work\n\n# for those targets.\n\n#\n\n# ::\n\n#\n\n#   copy_imported_target_properties(<source-target> <destination-target>)\n\n#\n\n# The function copies all the `INTERFACE*` and `IMPORTED*` target\n\n# properties from `<source-target>` to `<destination-target>`.\n\n#\n\n# The function uses the `IMPORTED_CONFIGURATIONS` property to determine\n\n# which configuration-dependent properties should be copied\n\n# (`IMPORTED_LOCATION_<CONFIG>`, etc...)\n\n#\n\n# Example:\n\n#\n\n# Internally the CMake project of ZLIB builds the ``zlib`` and\n\n# ``zlibstatic`` targets which can be exported in the ``ZLIB::`` namespace\n\n# with the ``install(EXPORT ...)`` command.\n\n#\n\n# The config-module will then create the import libraries ``ZLIB::zlib`` and\n\n# ``ZLIB::zlibstatic``. To use ``ZLIB::zlibstatic`` under the standard\n\n# ``ZLIB::ZLIB`` name we need to create the ``ZLIB::ZLIB`` imported library\n\n# and copy the appropriate properties:\n\n#\n\n#   add_library(ZLIB::ZLIB STATIC IMPORTED)\n\n#   copy_imported_target_properties(ZLIB::zlibstatic ZLIB::ZLIB)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# copy configuration-independent properties\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# message(STATUS \"set_target_properties(${dest_target} PROPERTIES ${prop} ${v})\")\n",
        "Line" : 68,
        "CharPositionInLine" : 12
      },
      "3" : {
        "Text" : "# copy configuration-dependent properties\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# message(STATUS \"set_target_properties(${dest_target} PROPERTIES ${prop} ${v})\")\n",
        "Line" : 84,
        "CharPositionInLine" : 16
      },
      "CommentCount" : 5
    },
    "Projects/CoX/Clients/Client_I0/3rd_party/glew-1.13.0/glew-config.cmake" : {
      "ObjectId" : "8d2907ac1e29c1dda8aa9243439744620234c955",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This config-module creates the following import libraries:\n\n#\n\n# - GLEW::glew and GLEW::glewmx shared libs\n\n# - GLEW::glew_s and GLEW::glewmx_s static libs\n\n#\n\n# Additionally GLEW::GLEW and GLEW::GLEWMX will be created as an\n\n# copy of either the shared (default) or the static libs.\n\n#\n\n# Dependending on the setting of BUILD_SHARED_LIBS at GLEW build time\n\n# either the static or shared versions may not be available.\n\n#\n\n# Set GLEW_USE_STATIC_LIBS to OFF or ON to force using the shared\n\n# or static libs for GLEW::GLEW and GLEW::GLEWMX\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# decide which import library (glew/glew_s and glewmx/glewmx_s)\n\n# needs to be copied to GLEW::GLEW and GLEW::GLEWMX\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# if defined, use only static or shared\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# else use static only if no shared\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# CMake doesn't allow creating ALIAS lib for an IMPORTED lib\n\n# so create imported ones and copy the properties\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# message(STATUS \"add_library(${_glew_dest_target} ${_glew_target_type} IMPORTED)\")\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "Projects/CoX/Clients/Client_I0/CMakeLists.txt" : {
      "ObjectId" : "ded4cdf1711acf52bda5cbce8275f8c4f2b84392",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# we link to the imp lib for the exe\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# enforce the dll prefix.\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Retain directory structure in visual studio\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Projects/CoX/Clients/Client_I0_Null/CMakeLists.txt" : {
      "ObjectId" : "fca66ed9276019eef4f7569138f89fc7f10a8d17",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_subdirectory(3rd_party)\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# enforce the dll prefix.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Projects/CoX/Common/AuthProtocol/CMakeLists.txt" : {
      "ObjectId" : "ab86d9145f703ec7b6c5ca8af3dd1566b0adf654",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add components here\n\n# end of additional components\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Retain directory structure in visual studio\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Projects/CoX/Common/AuthProtocol/UnitTests/CMakeLists.txt" : {
      "ObjectId" : "18b8c357969a57b67fb1ec0577ede94d816c9622",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# moc when necessary\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# moc files are generated in the binary dir, look for includes there\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Projects/CoX/Common/CMakeLists.txt" : {
      "ObjectId" : "7b7b7488f97cfa88c9be473bb27efd865dc8cc36",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Projects/CoX/Common/CRUDP_Protocol/CMakeLists.txt" : {
      "ObjectId" : "1ea3ac8a2a5f9be8d11de27a90c87e2fda4b44de",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#${CMAKE_CURRENT_SOURCE_DIR}/GameProtocol.cpp\n\n#${CMAKE_CURRENT_SOURCE_DIR}/GameProtocolHandler.cpp\n\n#${CMAKE_CURRENT_SOURCE_DIR}/PacketBase.cpp\n",
        "Line" : 6,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "#${CMAKE_CURRENT_SOURCE_DIR}/GameProtocol.h\n\n#${CMAKE_CURRENT_SOURCE_DIR}/GameProtocolHandler.h\n\n#${CMAKE_CURRENT_SOURCE_DIR}/PacketBase.h\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Retain directory structure in visual studio\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Projects/CoX/Common/CRUDP_Protocol/UnitTests/CMakeLists.txt" : {
      "ObjectId" : "59705794f79606cc5001620f2d103ceed419de25",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# moc when necessary\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# moc files are generated in the binary dir, look for includes there\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Projects/CoX/Common/GameData/CMakeLists.txt" : {
      "ObjectId" : "a289961b460faf24f06823d6d6c25e7c57182eaf",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Resource file formats\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "#def_serializers.cpp\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#titles_serializers.cpp\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#TODO: move this to Components Library\n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Resource file formats\n",
        "Line" : 102,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#titles_serializers.h\n\n#particle_definitions.h\n",
        "Line" : 137,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# used for Singleton stuff.\n",
        "Line" : 146,
        "CharPositionInLine" : 46
      },
      "7" : {
        "Text" : "# Retain directory structure in visual studio\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "Projects/CoX/Common/Messages/Auth/CMakeLists.txt" : {
      "ObjectId" : "f752e8b08aa5d8c602c3e0abf5f3909f741e654c",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Projects/CoX/Common/Messages/AuthDatabase/CMakeLists.txt" : {
      "ObjectId" : "0480ab34ce11af11d26cbf972682292ae5a070c8",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Projects/CoX/Common/Messages/CMakeLists.txt" : {
      "ObjectId" : "830a7e541242e83cddb3c715b9c1fda220f3d9e0",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Projects/CoX/Common/Messages/EmailService/CMakeLists.txt" : {
      "ObjectId" : "42092f159f4b94acb00e510505ce3ed4e3254dde",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Projects/CoX/Common/Messages/FriendshipService/CMakeLists.txt" : {
      "ObjectId" : "0679d2ba0665e45b396e923f6f74fb8290ec33f4",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Projects/CoX/Common/Messages/Game/CMakeLists.txt" : {
      "ObjectId" : "d6b1ea4075300172c39a93232d78f8d37a224e33",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Projects/CoX/Common/Messages/GameDatabase/CMakeLists.txt" : {
      "ObjectId" : "9cd7eb3a6ccac5db5cf0235354dff8a966601f74",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Projects/CoX/Common/Messages/Map/CMakeLists.txt" : {
      "ObjectId" : "2a41e42509d66722cb88b97348fe7739676f9ed2",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Projects/CoX/Common/Runtime/CMakeLists.txt" : {
      "ObjectId" : "b88aa4ba542803280e0c38605c1c2df88e4dd61d",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_dependencies(common_runtimea ace_IMP cereal_IMP) # used for Singleton stuff.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#$<INSTALL_INTERFACE:common_runtime>  # <prefix>/include/mylib\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#set_property(TARGET segs_runtime APPEND PROPERTY INCLUDE_DIRECTORIES \"$<TARGET_PROPERTY:cereal_IMP,INTERFACE_INCLUDE_DIRECTORIES>\")\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Retain directory structure in visual studio\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Projects/CoX/Common/Servers/CMakeLists.txt" : {
      "ObjectId" : "54cb9c00e0cb068143406cef6069de6649b2dd75",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Retain directory structure in visual studio\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Projects/CoX/Servers/AuthDatabase/CMakeLists.txt" : {
      "ObjectId" : "125059cd21479d8dc389100ea1ac5ef77749bd13",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Retain directory structure in visual studio\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Projects/CoX/Servers/AuthDatabase/UnitTests/CMakeLists.txt" : {
      "ObjectId" : "ae5f845b797f853cad7a174de23cf3380e263361",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# moc when necessary\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# moc files are generated in the binary dir, look for includes there\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Projects/CoX/Servers/AuthServer/CMakeLists.txt" : {
      "ObjectId" : "4b2968826d557c7758c7ffcb4622700146c5c213",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#FIND_PACKAGE(Boost COMPONENTS system REQUIRED) # Boost_LIBRARIES is not a cache variable, so we  have to do this here again\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Retain directory structure in visual studio\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Projects/CoX/Servers/CMakeLists.txt" : {
      "ObjectId" : "df5c571a35d1526d08126cb09b96c2ee3f526ce5",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# just testing\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BOOST\n\n#FIND_PACKAGE(Boost REQUIRED)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Projects/CoX/Servers/GameDatabase/CMakeLists.txt" : {
      "ObjectId" : "2bc1e79769dff26ba069e659d3db71fcf2920355",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Retain directory structure in visual studio\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Projects/CoX/Servers/GameDatabase/UnitTests/CMakeLists.txt" : {
      "ObjectId" : "71066688dc56f34b54854e1d4ddce887e4df5593",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# moc when necessary\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# moc files are generated in the binary dir, look for includes there\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Projects/CoX/Servers/GameServer/CMakeLists.txt" : {
      "ObjectId" : "c4d2d1341b3c7318f5072876f50c42b10db3272f",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Projects/CoX/Servers/GameServer/EmailService/CMakeLists.txt" : {
      "ObjectId" : "a2c503f172dd7a5ca1a3228f1ee7589383407ff7",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#    add_subdirectory(UnitTests)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Projects/CoX/Servers/GameServer/FriendshipService/CMakeLists.txt" : {
      "ObjectId" : "5e52280444bb65a248c37df9e11e269e7394401f",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Retain directory structure in visual studio\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Projects/CoX/Servers/GameServer/FriendshipService/UnitTests/CMakeLists.txt" : {
      "ObjectId" : "aa00ff7b9feafea91220e49a70c33248989cc3d0",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# moc when necessary\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# moc files are generated in the binary dir, look for includes there\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Retain directory structure in visual studio\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Projects/CoX/Servers/GameServer/UnitTests/CMakeLists.txt" : {
      "ObjectId" : "5daec25bd688367b93f14e0c7c7c4817fd5cc4e7",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# moc when necessary\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# moc files are generated in the binary dir, look for includes there\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Retain directory structure in visual studio\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Projects/CoX/Servers/MapServer/CMakeLists.txt" : {
      "ObjectId" : "52989d58252611192bf861eb0935e91da2112b95",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Retain directory structure in visual studio\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Projects/CoX/Servers/MapServer/ScriptingEngine/CMakeLists.txt" : {
      "ObjectId" : "d38c91543551305f1ef6ad3685a25e441c700a14",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#    add_subdirectory(UnitTests)\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Projects/CoX/Servers/MapServer/UnitTests/CMakeLists.txt" : {
      "ObjectId" : "1086156faeda6e7d279384df07fc65e28c8cf160",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# moc when necessary\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# moc files are generated in the binary dir, look for includes there\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# FIXME: adding the above lib to linked libs fixes a very frustrating mingw ws2_32 linking problem\n\n# I have no idea why, and don't feel like digging into library/defines lists that are used in both cases\n",
        "Line" : 12,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "Projects/CoX/Utilities/AuthExerciser/CMakeLists.txt" : {
      "ObjectId" : "92d2688545abe7c423557d2e6da6059d441a3c2b",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# used for Singleton stuff.\n",
        "Line" : 7,
        "CharPositionInLine" : 51
      },
      "CommentCount" : 1
    },
    "Projects/CoX/Utilities/BinConverter/CMakeLists.txt" : {
      "ObjectId" : "542b8f17a8e8be841ff6e1b5dc3b4bd79d06ce4d",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Retain directory structure in visual studio\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Projects/CoX/Utilities/CMakeLists.txt" : {
      "ObjectId" : "40e331972d66a5a4eb919cf48f0919878b60d9f9",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Projects/CoX/Utilities/MapViewer/CMakeLists.txt" : {
      "ObjectId" : "6b752ce48c64a0b35183aa166c34d28498948016",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#FIND_PACKAGE(ACE REQUIRED)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# the following flag is need to compile on mingw\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#add_custom_command(TARGET mapviewer POST_BUILD\n\n#    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/utilities/mapviewer_data\n\n#    COMMAND ${CMAKE_COMMAND} -E copy_directory ${ThirdParty_Install_Dir}/share/Lutefisk3D/CoreData ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/utilities/mapviewer_data/CoreData\n\n#    COMMAND ${CMAKE_COMMAND} -E copy_directory ${CMAKE_CURRENT_SOURCE_DIR}/Data ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/utilities/mapviewer_data/Data\n\n#)\n\n# Retain directory structure in visual studio\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Projects/CoX/Utilities/RPCTestClient/CMakeLists.txt" : {
      "ObjectId" : "b2818f3a255381c7c4ec68ef291aec4ba862f381",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Retain directory structure in visual studio\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Projects/CoX/Utilities/SEGSAdmin/CMakeLists.txt" : {
      "ObjectId" : "0d11ffde4563869393a824124e9e4b6b74864806",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Retain directory structure in visual studio\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Projects/CoX/Utilities/TextureConverter/CMakeLists.txt" : {
      "ObjectId" : "c363173ed394330ba6d6347a132ba98af572affd",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Retain directory structure in visual studio\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Projects/CoX/Utilities/dbtool/CMakeLists.txt" : {
      "ObjectId" : "e8e3142e5f09fe770c95eade3dff45eb19ac69b6",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_subdirectory(Migrations)\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#DatabaseConfig.cpp\n\n#DatabaseConfig.h\n\n#DBConnection.cpp\n\n#DBConnection.h\n\n#DBConnection_AddUser.cpp\n\n#DBConnection_Create.cpp\n\n#DBConnection_Helpers.cpp\n\n#DBConnection_Upgrade.cpp\n\n#DBMigrationStep.cpp\n\n#DBMigrationStep.h\n\n# Migrations are added programatically\n\n#${MIGRATION_SOURCES}\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# dbtool relies on QT more now, so we need these for windows builds\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Retain directory structure in visual studio\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# hack to prevent errors with FOLDER properties when using generated files\n\n#target_sources(dbtool PRIVATE ${MIGRATION_GEN})\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Projects/CoX/Utilities/piggtool/CMakeLists.txt" : {
      "ObjectId" : "cea65555a752b385dbba1e351a4afd2ddad0d44e",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Retain directory structure in visual studio\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Utilities/CMakeLists.txt" : {
      "ObjectId" : "ba1a649a77563e01fc9ac6f2d3ef2c79fc547242",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Utilities/ServerMonitor/CMakeLists.txt" : {
      "ObjectId" : "724b4ec813afbecf7a60ab87449ad1ba5823183a",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Utilities/event_gen/CMakeLists.txt" : {
      "ObjectId" : "cf1c14f22c4c5f4ad73b782970915914c0e6da06",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Retain directory structure in visual studio\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Utilities/slav/CMakeLists.txt" : {
      "ObjectId" : "1362cc5446b145b4eb31faaba0fc2ccafe0e089a",
      "LastModified" : "2019-04-10T19:31:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Retain directory structure in visual studio\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 85
  },
  "ElapsedTime" : 2359
}