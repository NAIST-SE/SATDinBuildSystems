{
  "Repository" : "2785663",
  "Revision" : "HEAD",
  "ObjectId" : "1c3e8d8f968e926ab31518aa8222e253a8f25d2a",
  "CommitTime" : "2016-06-30T02:37:17Z",
  "Files" : {
    "base/CMakeLists.txt" : {
      "ObjectId" : "5e2cc81e45654e3e9dee0632d3f5d493e2d638b5",
      "LastModified" : "2015-05-11T23:31:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#make sure our local CMake Modules path comes first\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########################################################################\n\n# Setup the include and linker paths\n\n########################################################################\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "########################################################################\n\n# Create uninstall target\n\n########################################################################\n\n#configure_file(\n\n#    ${CMAKE_SOURCE_DIR}/cmake/cmake_uninstall.cmake.in\n\n#    ${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake\n\n#@ONLY)\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#add_custom_target(uninstall\n\n#    ${CMAKE_COMMAND} -P ${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake\n\n#)\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "########################################################################\n\n# Add subdirectories\n\n########################################################################\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "base/include/CMakeLists.txt" : {
      "ObjectId" : "28d61ca4f144570a498ca88e15989893b6176e5f",
      "LastModified" : "2015-05-11T23:31:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# Install public header files\n\n########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "base/lib/CMakeLists.txt" : {
      "ObjectId" : "809acda17d9963b2d0d07e2dd318da355a9c109b",
      "LastModified" : "2015-05-11T23:31:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# Setup library\n\n########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########################################################################\n\n# Install built library files\n\n########################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# .so/.dylib file\n\n# .lib file\n\n# .dll file\n",
        "Line" : 14,
        "CharPositionInLine" : 41
      },
      "CommentCount" : 3
    },
    "base/python/CMakeLists.txt" : {
      "ObjectId" : "105177b2c2f52a4e2bad7b3f6c81e289c8a73cc2",
      "LastModified" : "2015-05-11T23:31:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install base 'qraat' module.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# uninstall target\n\n#configure_file(\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\"${CMAKE_CURRENT_SOURCE_DIR}/cmake_uninstall.cmake.in\"\n\n#\"${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake\"\n\n#IMMEDIATE @ONLY)\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#add_custom_target(uninstall\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#COMMAND ${CMAKE_COMMAND} -P ${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake)\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "base/scripts/CMakeLists.txt" : {
      "ObjectId" : "e3d05ed788c97c57fe37ee94eb727c4f5e68e78d",
      "LastModified" : "2015-05-11T23:31:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "base/scripts/proc/CMakeLists.txt" : {
      "ObjectId" : "464f556d3f3264849f2a8ea1fe7a89b58c1a36f1",
      "LastModified" : "2015-05-11T23:31:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/Makefile" : {
      "ObjectId" : "151e1060acd3a8bc4108e3a754b3dd9e286e55a5",
      "LastModified" : "2015-05-11T23:31:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Internal variables.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "node/CMakeLists.txt" : {
      "ObjectId" : "1724c202764166418ca4241acb46c999f1c562fd",
      "LastModified" : "2015-05-25T21:11:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2011,2012,2014 Free Software Foundation, Inc.\n\n#\n\n# This file is part of GNU Radio\n\n#\n\n# GNU Radio is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3, or (at your option)\n\n# any later version.\n\n#\n\n# GNU Radio is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with GNU Radio; see the file COPYING.  If not, write to\n\n# the Free Software Foundation, Inc., 51 Franklin Street,\n\n# Boston, MA 02110-1301, USA.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########################################################################\n\n# Project setup\n\n########################################################################\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#select the release build type by default to get optimization flags\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#make sure our local CMake Modules path comes first\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "########################################################################\n\n# Compiler specific setup\n\n########################################################################\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#http://gcc.gnu.org/wiki/Visibility\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "########################################################################\n\n# Find boost\n\n########################################################################\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#fedora 64-bit fix\n",
        "Line" : 49,
        "CharPositionInLine" : 47
      },
      "8" : {
        "Text" : "########################################################################\n\n# Install directories\n\n########################################################################\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#define LIB_SUFFIX\n",
        "Line" : 69,
        "CharPositionInLine" : 20
      },
      "10" : {
        "Text" : "########################################################################\n\n# On Apple only, set install name and use rpath correctly, if not already set\n\n########################################################################\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "########################################################################\n\n# Find gnuradio build dependencies\n\n########################################################################\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Search for GNU Radio and its components and versions. Add any\n\n# components required to the list of GR_REQUIRED_COMPONENTS (in all\n\n# caps such as FILTER or FFT) and change the version to the minimum\n\n# API compatible version required.\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "########################################################################\n\n# Setup doxygen option\n\n########################################################################\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "########################################################################\n\n# Setup the include and linker paths\n\n########################################################################\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Set component parameters\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "########################################################################\n\n# Create uninstall target\n\n########################################################################\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "########################################################################\n\n# Add subdirectories\n\n########################################################################\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "########################################################################\n\n# Install cmake search helper for this library\n\n########################################################################\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "node/apps/CMakeLists.txt" : {
      "ObjectId" : "be93318657cd1d6ddc3b2b41ee778b9e50601aee",
      "LastModified" : "2015-06-05T21:16:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2011 Free Software Foundation, Inc.\n\n#\n\n# This file is part of GNU Radio\n\n#\n\n# GNU Radio is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3, or (at your option)\n\n# any later version.\n\n#\n\n# GNU Radio is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with GNU Radio; see the file COPYING.  If not, write to\n\n# the Free Software Foundation, Inc., 51 Franklin Street,\n\n# Boston, MA 02110-1301, USA.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "node/cmake/Modules/CMakeParseArgumentsCopy.cmake" : {
      "ObjectId" : "7ce4c49ae5b0c5a4003d4a45a2da6e3cd38bbbff",
      "LastModified" : "2015-05-11T23:31:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMAKE_PARSE_ARGUMENTS(<prefix> <options> <one_value_keywords> <multi_value_keywords> args...)\n\n#\n\n# CMAKE_PARSE_ARGUMENTS() is intended to be used in macros or functions for\n\n# parsing the arguments given to that macro or function.\n\n# It processes the arguments and defines a set of variables which hold the\n\n# values of the respective options.\n\n#\n\n# The <options> argument contains all options for the respective macro,\n\n# i.e. keywords which can be used when calling the macro without any value\n\n# following, like e.g. the OPTIONAL keyword of the install() command.\n\n#\n\n# The <one_value_keywords> argument contains all keywords for this macro\n\n# which are followed by one value, like e.g. DESTINATION keyword of the\n\n# install() command.\n\n#\n\n# The <multi_value_keywords> argument contains all keywords for this macro\n\n# which can be followed by more than one value, like e.g. the TARGETS or\n\n# FILES keywords of the install() command.\n\n#\n\n# When done, CMAKE_PARSE_ARGUMENTS() will have defined for each of the\n\n# keywords listed in <options>, <one_value_keywords> and\n\n# <multi_value_keywords> a variable composed of the given <prefix>\n\n# followed by \"_\" and the name of the respective keyword.\n\n# These variables will then hold the respective value from the argument list.\n\n# For the <options> keywords this will be TRUE or FALSE.\n\n#\n\n# All remaining arguments are collected in a variable\n\n# <prefix>_UNPARSED_ARGUMENTS, this can be checked afterwards to see whether\n\n# your macro was called with unrecognized parameters.\n\n#\n\n# As an example here a my_install() macro, which takes similar arguments as the\n\n# real install() command:\n\n#\n\n#   function(MY_INSTALL)\n\n#     set(options OPTIONAL FAST)\n\n#     set(oneValueArgs DESTINATION RENAME)\n\n#     set(multiValueArgs TARGETS CONFIGURATIONS)\n\n#     cmake_parse_arguments(MY_INSTALL \"${options}\" \"${oneValueArgs}\" \"${multiValueArgs}\" ${ARGN} )\n\n#     ...\n\n#\n\n# Assume my_install() has been called like this:\n\n#   my_install(TARGETS foo bar DESTINATION bin OPTIONAL blub)\n\n#\n\n# After the cmake_parse_arguments() call the macro will have set the following\n\n# variables:\n\n#   MY_INSTALL_OPTIONAL = TRUE\n\n#   MY_INSTALL_FAST = FALSE (this option was not used when calling my_install()\n\n#   MY_INSTALL_DESTINATION = \"bin\"\n\n#   MY_INSTALL_RENAME = \"\" (was not used)\n\n#   MY_INSTALL_TARGETS = \"foo;bar\"\n\n#   MY_INSTALL_CONFIGURATIONS = \"\" (was not used)\n\n#   MY_INSTALL_UNPARSED_ARGUMENTS = \"blub\" (no value expected after \"OPTIONAL\"\n\n#\n\n# You can the continue and process these variables.\n\n#\n\n# Keywords terminate lists of values, e.g. if directly after a one_value_keyword\n\n# another recognized keyword follows, this is interpreted as the beginning of\n\n# the new option.\n\n# E.g. my_install(TARGETS foo DESTINATION OPTIONAL) would result in\n\n# MY_INSTALL_DESTINATION set to \"OPTIONAL\", but MY_INSTALL_DESTINATION would\n\n# be empty and MY_INSTALL_OPTIONAL would be set to TRUE therefor.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2010 Alexander Neundorf <neundorf@kde.org>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# first set all result variables to empty/FALSE\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# now iterate over all arguments and fill the result variables\n",
        "Line" : 98,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# ... then this marks the end of the arguments belonging to this keyword\n",
        "Line" : 100,
        "CharPositionInLine" : 57
      },
      "5" : {
        "Text" : "# ... then this marks the end of the arguments belonging to this keyword\n",
        "Line" : 101,
        "CharPositionInLine" : 63
      },
      "6" : {
        "Text" : "# ... then this marks the end of the arguments belonging to this keyword\n",
        "Line" : 102,
        "CharPositionInLine" : 61
      },
      "7" : {
        "Text" : "# propagate the result variables to the caller:\n",
        "Line" : 132,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "node/cmake/Modules/FindCppUnit.cmake" : {
      "ObjectId" : "f93ade3412c633575536ce09eca42dbec996d59e",
      "LastModified" : "2015-05-11T23:31:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# http://www.cmake.org/pipermail/cmake/2006-October/011446.html\n\n# Modified to use pkg config and use standard var names\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Find the CppUnit includes and library\n\n#\n\n# This module defines\n\n# CPPUNIT_INCLUDE_DIR, where to find tiff.h, etc.\n\n# CPPUNIT_LIBRARIES, the libraries to link against to use CppUnit.\n\n# CPPUNIT_FOUND, If false, do not try to use CppUnit.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "node/cmake/Modules/FindGnuradioCore.cmake" : {
      "ObjectId" : "3773588a701997c8ce7ece7997698b2a4f807d9b",
      "LastModified" : "2015-05-11T23:31:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "node/cmake/Modules/FindGnuradioRuntime.cmake" : {
      "ObjectId" : "afed684a5e88bf1a3719847b0a7d10fa40db9e15",
      "LastModified" : "2015-05-11T23:31:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# look for include files\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# look for libs\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# do not check GNURADIO_RUNTIME_INCLUDE_DIRS, is not set when default include path us used.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "node/cmake/Modules/FindGruel.cmake" : {
      "ObjectId" : "58dff70444530d0202c1762e63899e16dba64498",
      "LastModified" : "2015-05-11T23:31:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "node/cmake/Modules/GrMiscUtils.cmake" : {
      "ObjectId" : "188c40480ba04d8c2f166939ff0a8a24584d8ba6",
      "LastModified" : "2015-05-11T23:31:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2010-2011,2014 Free Software Foundation, Inc.\n\n#\n\n# This file is part of GNU Radio\n\n#\n\n# GNU Radio is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3, or (at your option)\n\n# any later version.\n\n#\n\n# GNU Radio is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with GNU Radio; see the file COPYING.  If not, write to\n\n# the Free Software Foundation, Inc., 51 Franklin Street,\n\n# Boston, MA 02110-1301, USA.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########################################################################\n\n# Set global variable macro.\n\n# Used for subdirectories to export settings.\n\n# Example: include and library paths.\n\n########################################################################\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "########################################################################\n\n# Set the pre-processor definition if the condition is true.\n\n#  - def the pre-processor definition to set and condition name\n\n########################################################################\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "########################################################################\n\n# Check for a header and conditionally set a compile define.\n\n#  - hdr the relative path to the header file\n\n#  - def the pre-processor definition to set\n\n########################################################################\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "########################################################################\n\n# Include subdirectory macro.\n\n# Sets the CMake directory variables,\n\n# includes the subdirectory CMakeLists.txt,\n\n# resets the CMake directory variables.\n\n#\n\n# This macro includes subdirectories rather than adding them\n\n# so that the subdirectory can affect variables in the level above.\n\n# This provides a work-around for the lack of convenience libraries.\n\n# This way a subdirectory can append to the list of library sources.\n\n########################################################################\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#insert the current directories on the front of the list\n",
        "Line" : 67,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#set the current directories to the names of the subdirs\n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#include the subdirectory CMakeLists to run it\n",
        "Line" : 75,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#reset the value of the current directories\n",
        "Line" : 79,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#pop the subdir names of the front of the list\n",
        "Line" : 83,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "########################################################################\n\n# Check if a compiler flag works and conditionally set a compile define.\n\n#  - flag the compiler flag to check for\n\n#  - have the variable to set with result\n\n########################################################################\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "########################################################################\n\n# Generates the .la libtool file\n\n# This appears to generate libtool files that cannot be used by auto*.\n\n# Usage GR_LIBTOOL(TARGET [target] DESTINATION [dest])\n\n# Notice: there is not COMPONENT option, these will not get distributed.\n\n########################################################################\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#disabled by default\n",
        "Line" : 115,
        "CharPositionInLine" : 34
      },
      "13" : {
        "Text" : "########################################################################\n\n# Do standard things to the library target\n\n# - set target properties\n\n# - make install rules\n\n# Also handle gnuradio custom naming conventions w/ extras mode.\n\n########################################################################\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#parse the arguments for component names\n",
        "Line" : 138,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "#set additional target properties\n",
        "Line" : 142,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "#install the generated files like so...\n",
        "Line" : 145,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# .so/.dylib file\n\n# .lib file\n\n# .dll file\n",
        "Line" : 147,
        "CharPositionInLine" : 88
      },
      "18" : {
        "Text" : "#extras mode enabled automatically on linux\n",
        "Line" : 152,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "#special extras mode to enable alternative naming conventions\n",
        "Line" : 157,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "#create .la file before changing props\n",
        "Line" : 160,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "#give the library a special name with ultra-zero soversion\n",
        "Line" : 163,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "#custom command to generate symlinks\n",
        "Line" : 167,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "#so the symlinks point to something valid so cmake 2.6 will install\n",
        "Line" : 173,
        "CharPositionInLine" : 61
      },
      "24" : {
        "Text" : "#and install the extra symlinks\n",
        "Line" : 176,
        "CharPositionInLine" : 8
      },
      "25" : {
        "Text" : "########################################################################\n\n# Create a dummy custom command that depends on other targets.\n\n# Usage:\n\n#   GR_GEN_TARGET_DEPS(unique_name target_deps <target1> <target2> ...)\n\n#   ADD_CUSTOM_COMMAND(<the usual args> ${target_deps})\n\n#\n\n# Custom command cant depend on targets, but can depend on executables,\n\n# and executables can depend on targets. So this is the process:\n\n########################################################################\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#cant call command when cross\n",
        "Line" : 212,
        "CharPositionInLine" : 51
      },
      "27" : {
        "Text" : "########################################################################\n\n# Control use of gr_logger\n\n# Usage:\n\n#   GR_LOGGING()\n\n#\n\n# Will set ENABLE_GR_LOG to 1 by default.\n\n# Can manually set with -DENABLE_GR_LOG=0|1\n\n########################################################################\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# If gr_logger is enabled, make it usable\n",
        "Line" : 231,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# also test LOG4CPP; if we have it, use this version of the logger\n\n# otherwise, default to the stdout/stderr model.\n",
        "Line" : 234,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "########################################################################\n\n# Run GRCC to compile .grc files into .py files.\n\n#\n\n# Usage: GRCC(filename, directory)\n\n#    - filenames: List of file name of .grc file\n\n#    - directory: directory of built .py file - usually in\n\n#                 ${CMAKE_CURRENT_BINARY_DIR}\n\n#    - Sets PYFILES: output converted GRC file names to Python files.\n\n########################################################################\n",
        "Line" : 261,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Extract directory from list of args, remove it for the list of filenames.\n",
        "Line" : 271,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# GRCC uses some stuff in grc and gnuradio-runtime, so we force\n\n# the known paths here\n",
        "Line" : 279,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "#SWIG generates the python library files into a subdirectory.\n\n#Therefore, we must append this subdirectory into PYTHONPATH.\n\n#Only do this for the python directories matching the following:\n",
        "Line" : 289,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "#list(APPEND environs \"PYTHONPATH=${pypath}\")\n",
        "Line" : 311,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "########################################################################\n\n# Check if HAVE_PTHREAD_SETSCHEDPARAM and HAVE_SCHED_SETSCHEDULER\n\n#  should be defined\n\n########################################################################\n",
        "Line" : 327,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "########################################################################\n\n# Macros to generate source and header files from template\n\n########################################################################\n",
        "Line" : 354,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#make a list of all the generated headers\n",
        "Line" : 378,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "#create a command to generate the headers\n",
        "Line" : 386,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "#install rules for the generated headers\n",
        "Line" : 395,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "#make a list of all the generated files\n",
        "Line" : 421,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "#create a command to generate the source files\n",
        "Line" : 431,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "#create a command to generate the header files\n",
        "Line" : 440,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "#make source files depends on headers to force generation\n",
        "Line" : 449,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "#install rules for the generated files\n",
        "Line" : 454,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "#make a list of all the generated files\n",
        "Line" : 481,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "#create a command to generate the _impl.cc files\n",
        "Line" : 493,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "#create a command to generate the _impl.h files\n",
        "Line" : 502,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "#make _impl.cc source files depend on _impl.h to force generation\n",
        "Line" : 511,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "#make _impl.h source files depend on headers to force generation\n",
        "Line" : 516,
        "CharPositionInLine" : 2
      },
      "50" : {
        "Text" : "#install rules for the generated files\n",
        "Line" : 521,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 51
    },
    "node/cmake/Modules/GrPlatform.cmake" : {
      "ObjectId" : "5b7e886f859611b036296eb3dca4917209e55788",
      "LastModified" : "2015-05-11T23:31:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2011 Free Software Foundation, Inc.\n\n#\n\n# This file is part of GNU Radio\n\n#\n\n# GNU Radio is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3, or (at your option)\n\n# any later version.\n\n#\n\n# GNU Radio is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with GNU Radio; see the file COPYING.  If not, write to\n\n# the Free Software Foundation, Inc., 51 Franklin Street,\n\n# Boston, MA 02110-1301, USA.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########################################################################\n\n# Setup additional defines for OS types\n\n########################################################################\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "########################################################################\n\n# when the library suffix should be 64 (applies to redhat linux family)\n\n########################################################################\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "node/cmake/Modules/GrPython.cmake" : {
      "ObjectId" : "395faffa5a34c80cf19b021d545e7e459eab280b",
      "LastModified" : "2015-05-11T23:31:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2010-2011 Free Software Foundation, Inc.\n\n#\n\n# This file is part of GNU Radio\n\n#\n\n# GNU Radio is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3, or (at your option)\n\n# any later version.\n\n#\n\n# GNU Radio is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with GNU Radio; see the file COPYING.  If not, write to\n\n# the Free Software Foundation, Inc., 51 Franklin Street,\n\n# Boston, MA 02110-1301, USA.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########################################################################\n\n# Setup the python interpreter:\n\n# This allows the user to specify a specific interpreter,\n\n# or finds the interpreter via the built-in cmake module.\n\n########################################################################\n\n#this allows the user to override PYTHON_EXECUTABLE\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#otherwise if not set, try to automatically find it\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#use the built-in find script\n",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#and if that fails use the find program routine\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#make the path to the executable appear in the cmake gui\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#make sure we can use -B with python (introduced in 2.6)\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "########################################################################\n\n# Check for the existence of a python module:\n\n# - desc a string description of the check\n\n# - mod the name of the module to import\n\n# - cmd an additional command to run\n\n# - have the result variable to set\n\n########################################################################\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "########################################################################\n\n# Sets the python installation directory GR_PYTHON_DIR\n\n########################################################################\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "########################################################################\n\n# Create an always-built target with a unique name\n\n# Usage: GR_UNIQUE_TARGET(<description> <dependencies list>)\n\n########################################################################\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "########################################################################\n\n# Install python sources (also builds and installs byte-compiled python)\n\n########################################################################\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "####################################################################\n",
        "Line" : 135,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "####################################################################\n",
        "Line" : 137,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "#installs regular python files\n",
        "Line" : 138,
        "CharPositionInLine" : 25
      },
      "14" : {
        "Text" : "#create a list of all generated files\n",
        "Line" : 140,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "#determine if this file is in the source or binary directory\n",
        "Line" : 148,
        "CharPositionInLine" : 12
      },
      "16" : {
        "Text" : "#and set the generated path appropriately\n",
        "Line" : 154,
        "CharPositionInLine" : 12
      },
      "17" : {
        "Text" : "#ensure generation path exists\n",
        "Line" : 163,
        "CharPositionInLine" : 12
      },
      "18" : {
        "Text" : "#the command to generate the pyc files\n",
        "Line" : 169,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "#the command to generate the pyo files\n",
        "Line" : 175,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "#create install rule and add generated files to target list\n",
        "Line" : 181,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "####################################################################\n",
        "Line" : 189,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "####################################################################\n",
        "Line" : 191,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "#on windows, python files need an extension to execute\n",
        "Line" : 215,
        "CharPositionInLine" : 12
      },
      "24" : {
        "Text" : "########################################################################\n\n# Write the python helper script that generates byte code files\n\n########################################################################\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "node/cmake/Modules/GrSwig.cmake" : {
      "ObjectId" : "abf4dc46120da9cca7dbc5616ad13c75ffa635dc",
      "LastModified" : "2015-05-11T23:31:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2010-2011 Free Software Foundation, Inc.\n\n#\n\n# This file is part of GNU Radio\n\n#\n\n# GNU Radio is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3, or (at your option)\n\n# any later version.\n\n#\n\n# GNU Radio is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with GNU Radio; see the file COPYING.  If not, write to\n\n# the Free Software Foundation, Inc., 51 Franklin Street,\n\n# Boston, MA 02110-1301, USA.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########################################################################\n\n# Builds a swig documentation file to be generated into python docstrings\n\n# Usage: GR_SWIG_MAKE_DOCS(output_file input_path input_path....)\n\n#\n\n# Set the following variable to specify extra dependent targets:\n\n#   - GR_SWIG_DOCS_SOURCE_DEPS\n\n#   - GR_SWIG_DOCS_TARGET_DEPS\n\n########################################################################\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#setup the input files variable list, quote formated\n",
        "Line" : 38,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "#when input path is a directory\n",
        "Line" : 42,
        "CharPositionInLine" : 43
      },
      "4" : {
        "Text" : "#otherwise its just a file, no glob\n",
        "Line" : 44,
        "CharPositionInLine" : 19
      },
      "5" : {
        "Text" : "#determine the output directory\n",
        "Line" : 51,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "#generate the Doxyfile used by doxygen\n",
        "Line" : 57,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "#Create a dummy custom command that depends on other targets\n",
        "Line" : 63,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "#call doxygen on the Doxyfile + input headers\n",
        "Line" : 67,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "#call the swig_doc script on the xml files\n",
        "Line" : 75,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "#no doxygen -> empty file\n",
        "Line" : 88,
        "CharPositionInLine" : 40
      },
      "11" : {
        "Text" : "########################################################################\n\n# Build a swig target for the common gnuradio use case. Usage:\n\n# GR_SWIG_MAKE(target ifile ifile ifile...)\n\n#\n\n# Set the following variables before calling:\n\n#   - GR_SWIG_FLAGS\n\n#   - GR_SWIG_INCLUDE_DIRS\n\n#   - GR_SWIG_LIBRARIES\n\n#   - GR_SWIG_SOURCE_DEPS\n\n#   - GR_SWIG_TARGET_DEPS\n\n#   - GR_SWIG_DOC_FILE\n\n#   - GR_SWIG_DOC_DIRS\n\n########################################################################\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Shimming this in here to take care of a SWIG bug with handling\n\n# vector<size_t> and vector<unsigned int> (on 32-bit machines) and\n\n# vector<long unsigned int> (on 64-bit machines). Use this to test\n\n# the size of size_t, then set SIZE_T_32 if it's a 32-bit machine\n\n# or not if it's 64-bit. The logic in gr_type.i handles the rest.\n",
        "Line" : 108,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "#do swig doc generation if specified\n",
        "Line" : 120,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "#append additional include directories\n",
        "Line" : 129,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "#deprecated name (now dirs)\n",
        "Line" : 131,
        "CharPositionInLine" : 61
      },
      "16" : {
        "Text" : "#prepend local swig directories\n",
        "Line" : 134,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "#determine include dependencies for swig file\n",
        "Line" : 138,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "#Create a dummy custom command that depends on other targets\n",
        "Line" : 148,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "#append the specified include directories\n",
        "Line" : 158,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "#setup the swig flags with flags and include directories\n",
        "Line" : 162,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "#set the C++ property on the swig .i file so it builds\n",
        "Line" : 168,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "#setup the actual swig library target to be built\n",
        "Line" : 171,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "########################################################################\n\n# Install swig targets generated by GR_SWIG_MAKE. Usage:\n\n# GR_SWIG_INSTALL(\n\n#   TARGETS target target target...\n\n#   [DESTINATION destination]\n\n#   [COMPONENT component]\n\n# )\n\n########################################################################\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "########################################################################\n\n# Generate a python file that can determine swig dependencies.\n\n# Used by the make macro above to determine extra dependencies.\n\n# When you build C++, CMake figures out the header dependencies.\n\n# This code essentially performs that logic for swig includes.\n\n########################################################################\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "node/cmake/Modules/GrTest.cmake" : {
      "ObjectId" : "62caab4b512676f4ee1f41ee94fb9be4eda5bc39",
      "LastModified" : "2015-05-11T23:31:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2010-2011 Free Software Foundation, Inc.\n\n#\n\n# This file is part of GNU Radio\n\n#\n\n# GNU Radio is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3, or (at your option)\n\n# any later version.\n\n#\n\n# GNU Radio is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with GNU Radio; see the file COPYING.  If not, write to\n\n# the Free Software Foundation, Inc., 51 Franklin Street,\n\n# Boston, MA 02110-1301, USA.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########################################################################\n\n# Add a unit test and setup the environment for a unit test.\n\n# Takes the same arguments as the ADD_TEST function.\n\n#\n\n# Before calling set the following variables:\n\n# GR_TEST_TARGET_DEPS  - built targets for the library path\n\n# GR_TEST_LIBRARY_DIRS - directories for the library path\n\n# GR_TEST_PYTHON_DIRS  - directories for the python path\n\n# GR_TEST_ENVIRONS  - other environment key/value pairs\n\n########################################################################\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Ensure that the build exe also appears in the PATH.\n",
        "Line" : 37,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "#In the land of windows, all libraries must be in the PATH.\n\n#Since the dependent libraries are not yet installed,\n\n#we must manually set them in the PATH to run tests.\n\n#The following appends the path of a target dependency.\n",
        "Line" : 40,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "#SWIG generates the python library files into a subdirectory.\n\n#Therefore, we must append this subdirectory into PYTHONPATH.\n\n#Only do this for the python directories matching the following:\n",
        "Line" : 54,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "#ok to use on dir list?\n",
        "Line" : 66,
        "CharPositionInLine" : 59
      },
      "6" : {
        "Text" : "#ok to use on dir list?\n",
        "Line" : 67,
        "CharPositionInLine" : 57
      },
      "7" : {
        "Text" : "#http://www.cmake.org/pipermail/cmake/2009-May/029464.html\n\n#Replaced this add test + set environs code with the shell script generation.\n\n#Its nicer to be able to manually run the shell script to diagnose problems.\n\n#ADD_TEST(${ARGV})\n\n#SET_TESTS_PROPERTIES(${test_name} PROPERTIES ENVIRONMENT \"${environs}\")\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#replace list separator with the path separator\n",
        "Line" : 88,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "#generate a bat file that sets the environment and runs the test\n",
        "Line" : 93,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "#each line sets an environment variable\n",
        "Line" : 101,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "#load the command to run with its arguments\n",
        "Line" : 105,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "#make the shell file executable\n",
        "Line" : 111,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "#replace list separator with the path separator (escaped)\n",
        "Line" : 122,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "#generate a bat file that sets the environment and runs the test\n",
        "Line" : 127,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "#each line sets an environment variable\n",
        "Line" : 130,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "#load the command to run with its arguments\n",
        "Line" : 134,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 17
    },
    "node/cmake/Modules/UseSWIG.cmake" : {
      "ObjectId" : "c0f172870ba95285a3bc10edce27eb7aead99ea3",
      "LastModified" : "2015-05-11T23:31:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - SWIG module for CMake\n\n# Defines the following macros:\n\n#   SWIG_ADD_MODULE(name language [ files ])\n\n#     - Define swig module with given name and specified language\n\n#   SWIG_LINK_LIBRARIES(name [ libraries ])\n\n#     - Link libraries to swig module\n\n# All other macros are for internal use only.\n\n# To get the actual name of the swig module,\n\n# use: ${SWIG_MODULE_${name}_REAL_NAME}.\n\n# Set Source files properties such as CPLUSPLUS and SWIG_FLAGS to specify\n\n# special behavior of SWIG. Also global CMAKE_SWIG_FLAGS can be used to add\n\n# special flags to all swig calls.\n\n# Another special variable is CMAKE_SWIG_OUTDIR, it allows one to specify\n\n# where to write all the swig generated module (swig -outdir option)\n\n# The name-specific variable SWIG_MODULE_<name>_EXTRA_DEPS may be used\n\n# to specify extra dependencies for the generated modules.\n\n# If the source file generated by swig need some special flag you can use\n\n# set_source_files_properties( ${swig_generated_file_fullname}\n\n#        PROPERTIES COMPILE_FLAGS \"-bla\")\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2004-2009 Kitware, Inc.\n\n# Copyright 2009 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# For given swig module initialize variables associated with it\n\n#\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# when swig is used without the -interface it will produce in the module.py\n\n# a 'import _modulename' statement, which implies having a corresponding\n\n# _modulename.so (*NIX), _modulename.pyd (Win32).\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#\n\n# For a given language, input file, and output file, determine extra files that\n\n# will be generated. This is internal swig macro.\n\n#\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# Take swig (*.i) file and add proper custom commands for it\n\n#\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# If CMAKE_SWIG_OUTDIR was specified then pass it to -outdir\n",
        "Line" : 123,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# add the language into the name of the file (i.e. TCL_wrap)\n\n# this allows for the same .i file to be wrapped into different languages\n",
        "Line" : 135,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Shut up some warnings from poor SWIG code generation that we\n\n# can do nothing about, when this flag is available\n",
        "Line" : 148,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# default is c, so add c++ flag if it is c++\n",
        "Line" : 164,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# hack to work around CMake bug in add_custom_command with multiple OUTPUT files\n",
        "Line" : 173,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# create dummy dependencies\n",
        "Line" : 188,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# create the dummy target\n",
        "Line" : 198,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# add a custom command to the dummy target\n",
        "Line" : 201,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Let's create the ${swig_outdir} at execution time, in case dir contains $(OutDir)\n",
        "Line" : 204,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "#add dummy independent dependencies from the _target to each file\n\n#that will be generated by the SWIG command above\n",
        "Line" : 219,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "#\n\n# Create Swig module\n\n#\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# In java you want:\n\n#      System.loadLibrary(\"LIBRARY\");\n\n# then JNI will look for a library whose name is platform dependent, namely\n\n#   MacOS  : libLIBRARY.jnilib\n\n#   Windows: LIBRARY.dll\n\n#   Linux  : libLIBRARY.so\n",
        "Line" : 269,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# this is only needed for the python case where a _modulename.so is generated\n",
        "Line" : 279,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Python extension modules on Windows must have the extension \".pyd\"\n\n# instead of \".dll\" as of Python 2.5.  Older python versions do support\n\n# this suffix.\n\n# http://docs.python.org/whatsnew/ports.html#SECTION0001510000000000000000\n\n# <quote>\n\n# Windows: .dll is no longer supported as a filename extension for extension modules.\n\n# .pyd is now the only filename extension that will be searched for.\n\n# </quote>\n",
        "Line" : 281,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "#\n\n# Like TARGET_LINK_LIBRARIES but for swig modules\n\n#\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "node/cmake/Modules/rmgConfig.cmake" : {
      "ObjectId" : "5e000da5473100803477ed6694e25e5b744bc1a9",
      "LastModified" : "2015-05-11T23:31:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "node/include/rmg/CMakeLists.txt" : {
      "ObjectId" : "7b23ed418b18e4ae35df92382d9ce4b1270555c1",
      "LastModified" : "2015-05-11T23:31:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2011,2012 Free Software Foundation, Inc.\n\n#\n\n# This file is part of GNU Radio\n\n#\n\n# GNU Radio is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3, or (at your option)\n\n# any later version.\n\n#\n\n# GNU Radio is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with GNU Radio; see the file COPYING.  If not, write to\n\n# the Free Software Foundation, Inc., 51 Franklin Street,\n\n# Boston, MA 02110-1301, USA.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########################################################################\n\n# Install public header files\n\n########################################################################\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "node/lib/CMakeLists.txt" : {
      "ObjectId" : "28eb942febc26df93814ec7c5066d8fa14215644",
      "LastModified" : "2015-06-05T21:16:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2011,2012 Free Software Foundation, Inc.\n\n#\n\n# This file is part of GNU Radio\n\n#\n\n# GNU Radio is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3, or (at your option)\n\n# any later version.\n\n#\n\n# GNU Radio is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with GNU Radio; see the file COPYING.  If not, write to\n\n# the Free Software Foundation, Inc., 51 Franklin Street,\n\n# Boston, MA 02110-1301, USA.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########################################################################\n\n# Setup library\n\n########################################################################\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#define LIB_SUFFIX\n",
        "Line" : 23,
        "CharPositionInLine" : 20
      },
      "3" : {
        "Text" : "########################################################################\n\n# Install built library files\n\n########################################################################\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# .so/.dylib file\n\n# .lib file\n\n# .dll file\n",
        "Line" : 53,
        "CharPositionInLine" : 41
      },
      "5" : {
        "Text" : "########################################################################\n\n# Build and register unit test\n\n########################################################################\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "node/python/CMakeLists.txt" : {
      "ObjectId" : "abd8e2987b1194b70935a30068a35326db69d394",
      "LastModified" : "2015-06-05T21:16:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2011 Free Software Foundation, Inc.\n\n#\n\n# This file is part of GNU Radio\n\n#\n\n# GNU Radio is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3, or (at your option)\n\n# any later version.\n\n#\n\n# GNU Radio is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with GNU Radio; see the file COPYING.  If not, write to\n\n# the Free Software Foundation, Inc., 51 Franklin Street,\n\n# Boston, MA 02110-1301, USA.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########################################################################\n\n# Include python install macros\n\n########################################################################\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "########################################################################\n\n# Install python sources\n\n########################################################################\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "########################################################################\n\n# Handle the unit tests\n\n########################################################################\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "########################################################################\n\n# Add subdirectories\n\n########################################################################\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "node/scripts/CMakeLists.txt" : {
      "ObjectId" : "0cafc34559bf0bd98e37871c2f60c1fa84e24980",
      "LastModified" : "2015-05-11T23:31:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "node/scripts/proc/CMakeLists.txt" : {
      "ObjectId" : "e3cd4ae9ef2323f1bc33a5218d5655b424cd0142",
      "LastModified" : "2015-12-16T23:30:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "node/swig/CMakeLists.txt" : {
      "ObjectId" : "54e5408cc66dd34c31e92a4bdfd77f71d9713b13",
      "LastModified" : "2015-12-16T23:30:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2011 Free Software Foundation, Inc.\n\n#\n\n# This file is part of GNU Radio\n\n#\n\n# GNU Radio is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3, or (at your option)\n\n# any later version.\n\n#\n\n# GNU Radio is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with GNU Radio; see the file COPYING.  If not, write to\n\n# the Free Software Foundation, Inc., 51 Franklin Street,\n\n# Boston, MA 02110-1301, USA.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########################################################################\n\n# Check if there is C++ code at all\n\n########################################################################\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "########################################################################\n\n# Include swig generation macros\n\n########################################################################\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "########################################################################\n\n# Setup swig generation\n\n########################################################################\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#set(GR_SWIG_DOC_FILE ${CMAKE_CURRENT_BINARY_DIR}/rmg_swig_doc.i)\n\n#set(GR_SWIG_DOC_DIRS ${CMAKE_CURRENT_SOURCE_DIR}/../include)\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "########################################################################\n\n# Install the build swig module\n\n########################################################################\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "########################################################################\n\n# Install swig .i files for development\n\n########################################################################\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#${CMAKE_CURRENT_BINARY_DIR}/rmg_swig_doc.i\n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "server/CMakeLists.txt" : {
      "ObjectId" : "3896ce1d17cd07b5f589ceb8ef739cb92ab150ea",
      "LastModified" : "2015-05-11T23:31:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install 'qraat.srv' module.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# uninstall target\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Descend into serv/ \n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "server/scripts/CMakeLists.txt" : {
      "ObjectId" : "0364dff1f97bf867aebb8850443905e966c4ad26",
      "LastModified" : "2015-05-11T23:31:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "server/scripts/cal/CMakeLists.txt" : {
      "ObjectId" : "35e9c0a2b488e8ec57ebdf10932f8144f0627e51",
      "LastModified" : "2016-06-30T00:51:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "server/scripts/filter/CMakeLists.txt" : {
      "ObjectId" : "ad9c0cff1cf6bd505ddd82a024e92c53926449c5",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "server/scripts/pos/CMakeLists.txt" : {
      "ObjectId" : "87b54c2b352938f6089412716086c6440eb4e6dc",
      "LastModified" : "2015-05-11T23:31:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "server/scripts/proc/CMakeLists.txt" : {
      "ObjectId" : "982765c06e017775d3344772de9345be79e4d117",
      "LastModified" : "2016-05-24T20:49:48Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "server/scripts/telemetry/CMakeLists.txt" : {
      "ObjectId" : "941be505249448d254f035dc3468c3ae97ce896b",
      "LastModified" : "2015-05-11T23:31:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "server/scripts/track/CMakeLists.txt" : {
      "ObjectId" : "577ded9bc669302799dc360833710ec3e2d8673c",
      "LastModified" : "2015-05-11T23:31:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "server/scripts/visualize/CMakeLists.txt" : {
      "ObjectId" : "a8f4f9541cc5db182fdfb37de6fa580b8a5ca923",
      "LastModified" : "2015-05-11T23:31:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 35,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 1803
}