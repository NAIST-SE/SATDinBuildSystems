{
  "Repository" : "57690",
  "Revision" : "HEAD",
  "ObjectId" : "353beb30fe7c9a9a69fb92f85b5cca006c146c8d",
  "CommitTime" : "2018-07-11T03:53:32Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "647d2f57a2e17825cb04b2c8fc15e72fd15d4c28",
      "LastModified" : "2017-05-30T11:06:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "################################################################################\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Path variable configuration\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# CMake helpers\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Build options\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Compiler configuration\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Third-party dependencies and libraries\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Protocol buffer code generation\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Linting targets\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Docker target (image build)\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Doxy documentaion target\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Unit tests\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Helper scripts that depend on protobufs\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# The \"src\" subdir has all source code\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "Makefile" : {
      "ObjectId" : "0b2d9367cf1216dc7030566692894707166a178c",
      "LastModified" : "2016-10-24T09:42:56Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "cmake/Config.cmake" : {
      "ObjectId" : "475778aedbaaa11237c8081a6ff48163a566924b",
      "LastModified" : "2017-06-03T14:54:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# debug/release flags\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Shared compiler flags used by all builds\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Compiler-specific flags\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# using clang\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# other compilers, usually g++\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "cmake/DockerTargets.cmake" : {
      "ObjectId" : "4538f555420b6795f742d791a79f44c6f36f87ff",
      "LastModified" : "2016-03-03T15:58:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/DoxyTargets.cmake" : {
      "ObjectId" : "1affc8d72a1ecc6a131f454c65dd62020b20f0dc",
      "LastModified" : "2016-10-24T09:42:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/ExternalDependencies.cmake" : {
      "ObjectId" : "60e1d0b8ab7c78b83d4ad55baa65097e321c46ad",
      "LastModified" : "2017-05-30T11:06:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# pkg-config (which we rely on for detecting some other libraries)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################################\n\n# Boost\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###############################################################################\n\n# cs2 solver\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# XXX/malte): workaround for CMake issue forcing a spurious git stash\n",
        "Line" : 18,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# no configure or install step required\n",
        "Line" : 20,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "###############################################################################\n\n# Flowlessly solver\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# no install required, we link the library from the build tree\n",
        "Line" : 35,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# Wrap download, configure and build steps in a script to log output\n",
        "Line" : 37,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# no install required, we link the library from the build tree\n",
        "Line" : 46,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# Wrap download, configure and build steps in a script to log output\n",
        "Line" : 48,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "###############################################################################\n\n# cpplint\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# no configure, build or install steps\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Wrap download, configure and build steps in a script to log output\n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "###############################################################################\n\n# Google Flags\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "###############################################################################\n\n# Google Log\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "###############################################################################\n\n# Google Test\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# no install required, we link the library from the build tree\n",
        "Line" : 87,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Wrap download, configure and build steps in a script to log output\n",
        "Line" : 89,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "###############################################################################\n\n# hwloc\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "###############################################################################\n\n# libctemplate\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "###############################################################################\n\n# libhdfs3\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# libHDFS requires libxml2\n",
        "Line" : 118,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# no install required, we link the library from the build tree\n",
        "Line" : 126,
        "CharPositionInLine" : 6
      },
      "23" : {
        "Text" : "# Wrap download, configure and build steps in a script to log output\n",
        "Line" : 128,
        "CharPositionInLine" : 6
      },
      "24" : {
        "Text" : "###############################################################################\n\n# OpenSSL\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "###############################################################################\n\n# protobuf3\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# no install required, we link the library from the build tree\n",
        "Line" : 156,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "###############################################################################\n\n# Pion integrated web server\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Wrap download, configure and build steps in a script to log output\n",
        "Line" : 178,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "###############################################################################\n\n# Spooky hash\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# no configure step\n",
        "Line" : 198,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# no install step\n",
        "Line" : 201,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# Wrap download, configure and build steps in a script to log output\n",
        "Line" : 203,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "###############################################################################\n\n# Hacky thread-safe STL containers\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Headers only, so no need to do anything\n",
        "Line" : 220,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "###############################################################################\n\n# Zlib\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "###############################################################################\n\n# grpc\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Wrap download, configure and build steps in a script to log output\n",
        "Line" : 251,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 38
    },
    "cmake/FindCtemplate.cmake" : {
      "ObjectId" : "66d6db0e72c1b510709c98792bd360953fa582fb",
      "LastModified" : "2017-05-30T11:06:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FindCtemplate by Olaf van der Spek\n\n#\n\n# BSD-licensed, see https://github.com/olafvdspek/ctemplate/issues/91\n\n#\n\n# - Try to find the ctemplate\n\n# Once done this will define\n\n#\n\n#  CTEMPLATE_FOUND - system has ctemplate\n\n#  CTEMPLATE_INCLUDE_DIR - the ctemplate include directory\n\n#  CTEMPLATE_LIBRARIES - Link this to use ctemplate\n\n#  CTEMPLATE_COMPILER - CTemplate compiler executable\n\n#\n\n#  CTEMPLATE_VARNAMES - Macro that wraps templates int varnames.h\n\n#     Usage: CTEMPLATE_VARNAMES(header1.h header2.h ${CT_FILES})\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2009, Thomas Richard, <thomas.richard@proan.be>\n\n# Copyright (c) 2012, Siemens <pascal.bach@siemems.com>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# macro used to create the names of output files preserving relative dirs\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# absolute path \n",
        "Line" : 66,
        "CharPositionInLine" : 41
      },
      "CommentCount" : 5
    },
    "cmake/FindGFlags.cmake" : {
      "ObjectId" : "1e64f70d3a1902b6797b980fb75a4ac4d127cf7c",
      "LastModified" : "2017-05-30T11:06:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake module for gflags, from https://github.com/hanjianwei/cmake-modules\r\n\n#\r\n\n# The MIT License (MIT)\r\n\n#\r\n\n# Copyright (c) 2014 Jianwei Han\r\n\n#\r\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\r\n\n# of this software and associated documentation files (the \"Software\"), to deal\r\n\n# in the Software without restriction, including without limitation the rights\r\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n\n# copies of the Software, and to permit persons to whom the Software is\r\n\n# furnished to do so, subject to the following conditions:\r\n\n#\r\n\n# The above copyright notice and this permission notice shall be included in all\r\n\n# copies or substantial portions of the Software.\r\n\n#\r\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n\n# SOFTWARE.\r\n\n#\r\n\n# - Try to find GFLAGS\r\n\n#\r\n\n# The following variables are optionally searched for defaults\r\n\n#  GFLAGS_ROOT_DIR:            Base directory where all GFLAGS components are found\r\n\n#\r\n\n# The following are set after configuration is done: \r\n\n#  GFLAGS_FOUND\r\n\n#  GFLAGS_INCLUDE_DIRS\r\n\n#  GFLAGS_LIBRARIES\r\n\n#  GFLAGS_LIBRARYRARY_DIRS\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We are testing only a couple of files in the include directories\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindGLog.cmake" : {
      "ObjectId" : "ec9f0ac5b60f989d0f1c050eda850fbaf5e32aea",
      "LastModified" : "2017-05-30T11:06:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake module for glog, from https://github.com/hanjianwei/cmake-modules\n\n#\n\n# The MIT License (MIT)\n\n#\n\n# Copyright (c) 2014 Jianwei Han\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n\n#\n\n# - Try to find Glog\n\n#\n\n# The following variables are optionally searched for defaults\n\n#  GLOG_ROOT_DIR:            Base directory where all GLOG components are found\n\n#\n\n# The following are set after configuration is done: \n\n#  GLOG_FOUND\n\n#  GLOG_INCLUDE_DIRS\n\n#  GLOG_LIBRARIES\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindHwloc.cmake" : {
      "ObjectId" : "fe5655ed2f50af0ca0aa1bb63408313a823fdeb6",
      "LastModified" : "2017-05-30T11:06:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FindHwloc module from https://github.com/Eyescale/CMake\n\n# BSD-licensed\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# - Redistributions of source code must retain the above copyright notice, this\n\n#   list of conditions and the following disclaimer.\n\n# - Redistributions in binary form must reproduce the above copyright notice,\n\n#   this list of conditions and the following disclaimer in the documentation\n\n#   and/or other materials provided with the distribution.\n\n# - Neither the name of Eyescale Software GmbH nor the names of its\n\n#   contributors may be used to endorse or promote products derived from this\n\n#   software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2012 Marwan Abdellah <marwan.abdellah@epfl.ch>\n\n#                    Daniel Nachbaur <daniel.nachbaur@epfl.ch>\n\n#               2013 Stefan.Eilemann@epfl.ch\n\n#               2016 Malte Schwarzkopf <malte@csail.mit.edu>\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use pkg-config to fetch the contents of the .pc file\n\n# After that, use the directories refer to the libraries and\n\n# also the headers\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/FindLibjansson.cmake" : {
      "ObjectId" : "4b164ba94338e8a5b269e535069a610d76d3015a",
      "LastModified" : "2017-05-30T11:06:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FindLibjansson by Jon Szymaniak\n\n#\n\n# MIT-licensed, see\n\n# https://github.com/jynik/OOKiedokie/blob/master/cmake/Modules/FindLibjansson.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/LintTargets.cmake" : {
      "ObjectId" : "d960d61a0d99ad451cef7fea764e6d33fcb58601",
      "LastModified" : "2017-05-30T11:06:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Options.cmake" : {
      "ObjectId" : "92160328f23ddefd62e63e6ea30f9b449d03cf49",
      "LastModified" : "2017-05-30T11:06:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build options\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Modular components\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Solver options\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Coordinator options\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The VERBOSE flag controls build system verbosity\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/Paths.cmake" : {
      "ObjectId" : "2ab3b31d8eb3adceb66f2246c226966f1db82da6",
      "LastModified" : "2017-05-30T11:06:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The initial SOURCE_DIR is the root of the source tree, where the main\n\n# CMakeLists.txt file lives\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMake modules\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Reset the source root\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Convenience variable for the build root\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/ProtobufCompile.cmake" : {
      "ObjectId" : "13e568a6fe6af78f1b9b8b4fa046699a9f4607dc",
      "LastModified" : "2017-05-30T11:06:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Arguments for protoc: include and output directories\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Names of variables to export\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Fully qualified paths for the input .proto files and the output C files.\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Export variables holding the target filenames.\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Compile the .proto file.\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#DEPENDS ${PROJECT_BINARY_DIR}/${PROTO_PATH}\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "scripts/job/CMakeLists.txt" : {
      "ObjectId" : "a6e7bcc8d267871768143eba6e5e24faf95e3938",
      "LastModified" : "2018-07-11T03:53:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "scripts/upload/Makefile" : {
      "ObjectId" : "342d9ea921afa63e5e274694ec4696bb0fd5c789",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "43a4cec0cd6876944996d2269064543448cc65a1",
      "LastModified" : "2017-05-30T11:06:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# shared libraries linked by all targets\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# XXX(malte): drop this\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###############################################################################\n\n# Object collections representing different modules (~= source dirs)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TODO(malte): N.B. this subsumes sim_dfs; should disentangle!\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# XXX(malte): get rid of this\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "###############################################################################\n\n# Coordinator\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# XXX(malte): remove this\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# N.B.: ${libhdfs3_LIBRARY} is empty if !${ENABLE_HDFS}\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "###############################################################################\n\n# Scheduling service (for integrations)\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "###############################################################################\n\n# Google trace data extractor\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "###############################################################################\n\n# Scheduling library (for integrations)\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "###############################################################################\n\n# Trace-driven simulator\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# XXX(maltE): this is required for the --scheduler flag, but we should\n\n# disentangle it\n",
        "Line" : 156,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "###############################################################################\n\n# TaskLib\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# N.B.: can't use TARGET_OBJECTS here because the existing object files are not\n\n# position-independent.\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "###############################################################################\n\n# Worker\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "src/base/CMakeLists.txt" : {
      "ObjectId" : "2849802e765048adbb39cbf52899c053f4f5f16f",
      "LastModified" : "2017-06-16T14:03:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# Protocol buffers\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################################\n\n# Unit tests\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/engine/CMakeLists.txt" : {
      "ObjectId" : "0b4df01eed04344026706f2fccb5865a093d863c",
      "LastModified" : "2017-05-30T11:06:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# XXX(malte): we shouldn't always need to link the simulated executor\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#if (BUILD_HTTP_UI)\n\n#  set(COORDINATOR_SRC ${COORDINATOR_SRC} engine/coordinator_http_ui.cc)\n\n#endif (BUILD_HTTP_UI)\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###############################################################################\n\n# Unit tests\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/examples/CMakeLists.txt" : {
      "ObjectId" : "decd3adf7633563b961e318a515d3b9ab7a1309f",
      "LastModified" : "2017-05-30T11:06:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/examples/r2d2_trace_process/Makefile" : {
      "ObjectId" : "0c6377f5defe34f2c2ceca4cb317e0010e687f03",
      "LastModified" : "2017-05-30T11:06:54Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/messages/CMakeLists.txt" : {
      "ObjectId" : "8064d3bab0b30f967d3ad48986a0cb09a145af19",
      "LastModified" : "2017-05-30T11:06:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_library(firmament_base ${MESSAGES_SRC} ${MESSAGES_PROTOBUFS_SRCS} ${MESSAGES_PROTOBUF_HDRS})\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################################\n\n# Protocol buffers\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/misc/CMakeLists.txt" : {
      "ObjectId" : "972197b2be826835f8e67387efe7cb67dae13446",
      "LastModified" : "2017-05-30T11:06:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# Unit tests\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/platforms/CMakeLists.txt" : {
      "ObjectId" : "ac807da48020cb8ca7c77c1212fec27eb6a38a8f",
      "LastModified" : "2017-05-30T11:06:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# Unit tests\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/scheduling/CMakeLists.txt" : {
      "ObjectId" : "38f5676fdb9669ce7535bd451a60cf9d2cd07a90",
      "LastModified" : "2017-06-19T15:49:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# XXX(malte): shouldn't always be included\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#add_library(firmament_scheduling ${SCHEDULING_SRC} ${SCHEDULING_PROTOBUFS_SRCS} ${SCHEDULING_PROTOBUF_HDRS})\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###############################################################################\n\n# Protocol buffers\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###############################################################################\n\n# Unit tests\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/sim/CMakeLists.txt" : {
      "ObjectId" : "522c2fc54b88dfeb134e715e0bd7de3cff4ce043",
      "LastModified" : "2017-05-30T11:06:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# Protocol buffers\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################################\n\n# Unit tests\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/storage/CMakeLists.txt" : {
      "ObjectId" : "f1ddd1b7a4e9c6b7bf12f6c8665211bf190935cb",
      "LastModified" : "2017-05-30T11:06:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# Unit tests\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/Makefile" : {
      "ObjectId" : "11b360d871638d617251fa518d9186eade2f8ffa",
      "LastModified" : "2017-05-30T11:06:54Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\tenv HEAPCHECK=normal python all_tests.py $(BUILD_DIR)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 25,
    "MAKEFILE" : 4
  },
  "ElapsedTime" : 1769
}