{
  "Repository" : "76312077",
  "Revision" : "HEAD",
  "ObjectId" : "b927dae3112ac8369066cd13887bcc8befc29513",
  "CommitTime" : "2018-11-30T21:02:01Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "73a7bffe2e56200a5f1ba625877fbfa0ccc03379",
      "LastModified" : "2018-11-29T23:17:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Provides things like lib64 dir (and Debian equiv)\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# use, i.e. don't skip the full RPATH for the build tree\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# when building, don't use the install RPATH already\n\n# (but later on when installing)\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add the automatically determined parts of the RPATH\n\n# which point to directories outside the build tree to the install RPATH\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# the RPATH to be used when installing, but only if it's not a system directory\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Disable no-deprecated-declarations\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# FORTIFY_SOURCE requires > -O0\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Disable format-truncation since this triggers in mcsapi_types for something that isn't a problem\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Find the packages and libraries\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Include external lib and include directory if environment variable MCSAPI_BUILD_DEPENDENCY_DIR is set\n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# On Windows find the Microsoft Visual Studio 2017 C++ Redistributable merge module (x64) that is packaged with mcsapi\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Macro to get the subdirectories of a given directory\n",
        "Line" : 144,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Build up potential merge module paths\n",
        "Line" : 156,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Try to find the merge module\n",
        "Line" : 174,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "#option(PDFLATEX_COMPILER \"Build the pdf documentation (requires latex)\" OFF)\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#Windows requires underscore\n",
        "Line" : 250,
        "CharPositionInLine" : 73
      },
      "16" : {
        "Text" : "#Debian requires dash\n",
        "Line" : 253,
        "CharPositionInLine" : 73
      },
      "17" : {
        "Text" : "#need to change due to changed behaviour in CMake > 3.10\n",
        "Line" : 294,
        "CharPositionInLine" : 29
      },
      "18" : {
        "Text" : "# First variable substitution of @VARIABLE@ during configure time\n",
        "Line" : 323,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# Second variable substitution of generate_expressions during generate time\n",
        "Line" : 328,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# Set the variable to include defined feature to be substitued later\n",
        "Line" : 335,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "# First variable substitution of @VARIABLE@ during configure time\n",
        "Line" : 339,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# Second variable substitution of generate_expressions during generate time\n",
        "Line" : 344,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "# Set the variable to include defined feature to be substitued later\n",
        "Line" : 351,
        "CharPositionInLine" : 8
      },
      "24" : {
        "Text" : "# uninstall target\n",
        "Line" : 409,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#MESSAGE(STATUS \"PDFLATEX_COMPILER = ${PDFLATEX_COMPILER}\")\n",
        "Line" : 429,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 26
    },
    "cmake/CppcheckTargets.cmake" : {
      "ObjectId" : "2c5cfa5f272bbc3f814a2d8a0e300f5913e00980",
      "LastModified" : "2017-06-27T19:16:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Run cppcheck on c++ source files as a custom target and a test\n\n#\n\n#  include(CppcheckTargets)\n\n#  add_cppcheck(<target-name> [UNUSED_FUNCTIONS] [STYLE] [POSSIBLE_ERROR] [FORCE] [FAIL_ON_WARNINGS]) -\n\n#    Create a target to check a target's sources with cppcheck and the indicated options\n\n#  add_cppcheck_sources(<target-name> [UNUSED_FUNCTIONS] [STYLE] [POSSIBLE_ERROR] [FORCE] [FAIL_ON_WARNINGS]) -\n\n#    Create a target to check standalone sources with cppcheck and the indicated options\n\n#\n\n# Requires these CMake modules:\n\n#  Findcppcheck\n\n#\n\n# Requires CMake 2.8 or newer (uses VERSION_LESS)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <ryan.pavlik@gmail.com> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Copyright Anthony Pesch 2014\n\n# Copyright Stefan Eilemann 2014\n\n# Copyright Nicholas Brown 2015\n\n# Copyright Ryan Pavlik 2017\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This file has a source file property, carry on.\n",
        "Line" : 92,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# This file doesn't have source file properties - figure it out.\n",
        "Line" : 98,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Older than CMake 2.8.0\n",
        "Line" : 112,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# CMake 2.8.0 and newer\n",
        "Line" : 119,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "# Older than CMake 2.8.0\n",
        "Line" : 203,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "# CMake 2.8.0 and newer\n",
        "Line" : 210,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 7
    },
    "cmake/FindLibUV.cmake" : {
      "ObjectId" : "322c0809d570124b6da1a6e3103b30aa6792c47f",
      "LastModified" : "2017-06-27T19:16:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Standard FIND_PACKAGE module for libuv, sets the following variables:\n\n#   - LIBUV_FOUND\n\n#   - LIBUV_INCLUDE_DIRS (only if LIBUV_FOUND)\n\n#   - LIBUV_LIBRARIES (only if LIBUV_FOUND)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Try to find the header\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Try to find the library\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Handle the QUIETLY/REQUIRED arguments, set LIBUV_FOUND if all variables are\n\n# found\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Hide internal variables\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set standard variables\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/FindMySQL.cmake" : {
      "ObjectId" : "f703e269f496198194f6aaa7c7e3eef8908b4ce2",
      "LastModified" : "2018-09-28T20:03:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find mysqlclient\n\n# Find the native MySQL includes and library\n\n#\n\n#  MYSQL_INCLUDE_DIR - where to find mysql.h, etc.\n\n#  MYSQL_LIBRARIES   - List of libraries when using MySQL.\n\n#  MYSQL_FOUND       - True if MySQL found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "cmake/FindSnappy.cmake" : {
      "ObjectId" : "21e5f72453dbfaef1b5080366fa1a7d31b21c422",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Standard FIND_PACKAGE module for snappy, sets the following variables:\n\n#   - SNAPPY_FOUND\n\n#   - SNAPPY_INCLUDE_DIRS (only if SNAPPY_FOUND)\n\n#   - SNAPPY_LIBRARIES (only if SNAPPY_FOUND)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Try to find the header\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Try to find the library\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Handle the QUIETLY/REQUIRED arguments, set LIBUV_FOUND if all variables are\n\n# found\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Hide internal variables\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set standard variables\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/FindSphinx.cmake" : {
      "ObjectId" : "da12ee93de6affab30c13cd4ab769f304a6f5bc4",
      "LastModified" : "2017-06-27T19:16:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - This module looks for Sphinx\n\n# Find the Sphinx documentation generator\n\n#\n\n# This modules defines\n\n#  SPHINX_EXECUTABLE\n\n#  SPHINX_FOUND\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2002-2009 Kitware, Inc.\n\n# Copyright 2009-2011 Peter Colberg\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file COPYING-CMAKE-SCRIPTS for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Findcppcheck.cmake" : {
      "ObjectId" : "3f13a6b3b6fb7ea7e618795e51fac3acdaa33512",
      "LastModified" : "2017-06-27T19:16:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find cppcheck tool\n\n#\n\n# Cache Variables:\n\n#  CPPCHECK_EXECUTABLE\n\n#\n\n# Non-cache variables you might use in your CMakeLists.txt:\n\n#  CPPCHECK_FOUND\n\n#  CPPCHECK_VERSION\n\n#  CPPCHECK_POSSIBLEERROR_ARG\n\n#  CPPCHECK_UNUSEDFUNC_ARG\n\n#  CPPCHECK_STYLE_ARG\n\n#  CPPCHECK_QUIET_ARG\n\n#  CPPCHECK_INCLUDEPATH_ARG\n\n#  CPPCHECK_FAIL_REGULAR_EXPRESSION\n\n#  CPPCHECK_WARN_REGULAR_EXPRESSION\n\n#  CPPCHECK_MARK_AS_ADVANCED - whether to mark our vars as advanced even\n\n#    if we don't find this program.\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# cppcheck app bundles on Mac OS X are GUI, we want command line only\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If we have a custom path, look there first.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Restore original setting for appbundle finding\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Find out where our test file is\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Check for the two types of command line arguments by just trying them\n",
        "Line" : 105,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# Old arguments\n",
        "Line" : 134,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# No idea - some other issue must be getting in the way\n",
        "Line" : 140,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "cmake/version.cmake" : {
      "ObjectId" : "56a583b1938c103a5bd74308faf2e77973fada02",
      "LastModified" : "2018-11-15T15:21:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Library versioning\n\n# Increment if interfaces have been removed or changed\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Incement if source code has changed, zero if major is incremented\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Increment if interfaces have beed added, set to zero if minor is changed\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Version number to echo\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "docs/CMakeLists.txt" : {
      "ObjectId" : "21e08b9e7bb133456369b312cc7ed683f57eaa19",
      "LastModified" : "2018-11-27T22:04:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Generate documentation in HTML and PDF format using Sphinx.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We use the Sphinx documentation generator to render HTML and manual\n\n# pages from the user and reference documentation in ReST format.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# documentation tools\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# configured documentation tools and intermediate build results\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# static ReST documentation sources\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# generated ReST documentation sources\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# master document with modules index\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# substitute variables in configuration and scripts\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Sphinx requires all sources in the same directory tree. As we wish\n\n# to include generated reference documention from the build tree, we\n\n# copy static ReST documents to the build tree before calling Sphinx.\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# note the trailing slash to exclude directory name\n\n#install(DIRECTORY \"${SOURCES_DIR}/\"\n\n#    DESTINATION \"${CMAKE_INSTALL_DOCDIR}/html\"\n\n#)\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Sphinx cache with pickled ReST documents\n",
        "Line" : 63,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# HTML output directory\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# This target builds HTML documentation using Sphinx.\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# This target builds PDF documentation using Sphinx and LaTeX.\n\n#if(PDFLATEX_COMPILER)\n",
        "Line" : 97,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# PDF output directory\n",
        "Line" : 99,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# serialize Sphinx targets to avoid cache conflicts in parallel builds\n\n#    add_dependencies(doc_pdf\n\n#  doc_html\n\n#)\n",
        "Line" : 121,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "#endif(PDFLATEX_COMPILER)\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Add output directories to clean target.\n",
        "Line" : 138,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 18
    },
    "example/CMakeLists.txt" : {
      "ObjectId" : "b69e3371807b3d7f31cc20e4e115fa4d71a22473",
      "LastModified" : "2018-11-27T22:04:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# On Windows install in addition the dependent shared libraries (libuv, libxml and libiconv) used during building to get the examples executable\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "java/CMakeLists.txt" : {
      "ObjectId" : "3b57d34b52d91d7c1d1d5c6b3f19c3fbf1ad2b2c",
      "LastModified" : "2018-11-20T18:09:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#TODO find a way to define the __FILENAME__ in Windows so that the debug output doesn't contain the absolute path.\n\n#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -D__FILENAME__=\\\"$(notdir $<)\\\"\")\n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# In java you want:\n\n#      System.loadLibrary(\"LIBRARY\");\n\n# then JNI will look for a library whose name is platform dependent, namely\n\n#   MacOS  : libLIBRARY.jnilib\n\n#   Windows: LIBRARY.dll\n\n#   Linux  : libLIBRARY.so\n",
        "Line" : 62,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "#TODO transform compatibility_test.sh into a batch or PowerShell script\n",
        "Line" : 124,
        "CharPositionInLine" : 12
      },
      "3" : {
        "Text" : "# On Windows copy the required shared libraries to execute the Java tests as well.\n",
        "Line" : 127,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 4
    },
    "java/docs/CMakeLists.txt" : {
      "ObjectId" : "8ef6bf9b6e9606e77137a5883ba323adcc410cfe",
      "LastModified" : "2018-11-20T18:09:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Generate documentation in HTML and PDF format using Sphinx.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We use the Sphinx documentation generator to render HTML and manual\n\n# pages from the user and reference documentation in ReST format.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# documentation tools\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# configured documentation tools and intermediate build results\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# static ReST documentation sources\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# generated ReST documentation sources\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# substitute variables in configuration and scripts\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Sphinx requires all sources in the same directory tree. As we wish\n\n# to include generated reference documention from the build tree, we\n\n# copy static ReST documents to the build tree before calling Sphinx.\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Sphinx cache with pickled ReST documents\n",
        "Line" : 52,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# HTML output directory\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# This target builds HTML documentation using Sphinx.\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# This target builds PDF documentation using Sphinx and LaTeX.\n\n#if(PDFLATEX_COMPILER)\n",
        "Line" : 79,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# PDF output directory\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# serialize Sphinx targets to avoid cache conflicts in parallel builds\n\n#    add_dependencies(doc_pdf\n\n#  doc_html\n\n#)\n",
        "Line" : 103,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "#endif(PDFLATEX_COMPILER)\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Add output directories to clean target.\n",
        "Line" : 113,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 16
    },
    "libmcsapi/CMakeLists.txt" : {
      "ObjectId" : "4f182b864831864481d815ee055395862bbbd932",
      "LastModified" : "2018-11-27T22:04:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "python/CMakeLists.txt" : {
      "ObjectId" : "22aa1cb4c9f8744f73543ed9fef69c4d7586d05f",
      "LastModified" : "2018-11-20T18:09:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#TODO find a way to define the __FILENAME__ in Windows so that the debug output doesn't contain the absolute path.\n\n#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -D__FILENAME__=\\\"$(notdir $<)\\\"\")\n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "#Checking for Python versions and setting executables\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Checking for Python2 if the Python.h exists\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Getting the include dir\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#Checking for Python.h\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#Check for Python library in Windows\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#Checking for Python3 if Python.h exists\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#Getting the include dir\n",
        "Line" : 66,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#Checking for Python.h\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#Check for Python library in Windows\n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "#Abort if no Python development environment can be found\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#Abort during packaging if Python2 and Python3 are not available\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#Checking for SWIG\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Build pymcsapi\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#BUILD THE PYMCSAPI DOCUMENTATION\n",
        "Line" : 121,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "#MAKE DETECTED PYTHON VARIABLES USABLE FROM PARENT_SCOPE\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "python/docs/CMakeLists.txt" : {
      "ObjectId" : "ff9d3270f06763d61250ef52d1fe78746d5c8dca",
      "LastModified" : "2018-11-20T18:09:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Generate documentation in HTML and PDF format using Sphinx.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We use the Sphinx documentation generator to render HTML and manual\n\n# pages from the user and reference documentation in ReST format.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# documentation tools\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# configured documentation tools and intermediate build results\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# static ReST documentation sources\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# generated ReST documentation sources\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# substitute variables in configuration and scripts\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Sphinx requires all sources in the same directory tree. As we wish\n\n# to include generated reference documention from the build tree, we\n\n# copy static ReST documents to the build tree before calling Sphinx.\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Sphinx cache with pickled ReST documents\n",
        "Line" : 52,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# HTML output directory\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# This target builds HTML documentation using Sphinx.\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# This target builds PDF documentation using Sphinx and LaTeX.\n\n#if(PDFLATEX_COMPILER)\n",
        "Line" : 79,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# PDF output directory\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# serialize Sphinx targets to avoid cache conflicts in parallel builds\n\n#    add_dependencies(doc_pdf\n\n#  doc_html\n\n#)\n",
        "Line" : 103,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "#endif(PDFLATEX_COMPILER)\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Add output directories to clean target.\n",
        "Line" : 113,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 16
    },
    "python/python2/CMakeLists.txt" : {
      "ObjectId" : "6005103208dfe207203bb17ac97b548219964861",
      "LastModified" : "2018-11-25T19:11:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Compiling the shared library\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Tests\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Install\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# set global variables to be substituted by WIX package manager\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "python/python3/CMakeLists.txt" : {
      "ObjectId" : "1fe0430f493d8f60c081dd489d07729fb76a1924",
      "LastModified" : "2018-11-25T19:11:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Tests\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Install\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# set global variables to be substituted by WIX package manager\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "spark-connector/python/CMakeLists.txt" : {
      "ObjectId" : "1c656d09e1a1b46cf44a85b61164e53810aa6e82",
      "LastModified" : "2018-11-20T18:09:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set global variables to be substituted by WIX package manager\n",
        "Line" : 21,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "# set global variables to be substituted by WIX package manager\n",
        "Line" : 43,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "spark-connector/scala/CMakeLists.txt" : {
      "ObjectId" : "c960a895cb7436e659d86df491db34e7db13acbd",
      "LastModified" : "2018-11-20T18:09:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "5c8ddf001f13ea86636acd42dcc300870c271cce",
      "LastModified" : "2018-11-27T22:04:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#TODO find a way to define the __FILENAME__ in Windows so that the debug output doesn't contain the absolute path.\n\n#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -D__FILENAME__=\\\"$(notdir $<)\\\"\")\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# On Windows install in addition the dependent shared libraries (libuv, libxml and libiconv) used during building\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# also place mcsapi.dll into the examples directory to get basic_bulk_insert.exe and advanced_bulk_insert.exe executable\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "51d381f85b8fcd3c040bfd4011a602e05026273a",
      "LastModified" : "2018-11-27T22:04:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# On Windows copy the required shared libraries to execute the tests into the test folder as well.\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 21
  },
  "ElapsedTime" : 686
}