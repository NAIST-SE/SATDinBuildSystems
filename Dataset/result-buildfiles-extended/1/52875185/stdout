{
  "Repository" : "52875185",
  "Revision" : "HEAD",
  "ObjectId" : "db9181a215563a5f30ec9690c76a0de5a8fc795f",
  "CommitTime" : "2019-04-12T16:00:57Z",
  "Files" : {
    "Makefile.am" : {
      "ObjectId" : "4949c0f5de6674ef57cee6948cf03b392ab863b9",
      "LastModified" : "2018-12-14T14:57:51Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Description: The Makefile (automake template) for the 42ity project.\n\n# Note: relies on GNU make syntax and features, may fail to work in\n\n# other make programs.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# success of the build depends on the value of the variable GREP_OPTIONS; so ignore it\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# http://www.gnu.org/software/automake/manual/html_node/Basics-of-Distribution.html\n\n# NOTE: \"dist\" is not \"install\": The dist rule in the Makefile can be used to\n\n# generate a gzipped tar file and other flavors of archive for distribution.\n\n# Sometimes there are files that must be distributed, but which are not covered\n\n# in the automatic rules. These files should be listed in the EXTRA_DIST\n\n# variable. You can mention files from subdirectories in EXTRA_DIST.\n\n# You can also mention a directory in EXTRA_DIST; in this case the entire\n\n# directory will be recursively copied into the distribution... you can\n\n# use the dist-hook feature to filter the contents (remove \".svn/\" etc).\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# http://www.gnu.org/software/automake/manual/html_node/Built-Sources-Example.html\n\n# http://www.gnu.org/software/automake/manual/html_node/Sources.html\n\n# A source file listed in BUILT_SOURCES is made on `make all` or `make check`\n\n# (or even `make install`) before other targets are processed. However, such\n\n# a source file is not compiled unless explicitly requested by mentioning it\n\n# in some other _SOURCES variable.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# http://www.gnu.org/software/automake/manual/html_node/Clean.html\n\n# * If make built it, and it is commonly something that one would want to\n\n#   rebuild (for instance, a .o file), then mostlyclean should delete it.\n\n# * Otherwise, if make built it, then clean should delete it.\n\n# * If configure built it, then distclean should delete it.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# autoconf does not allow pkglib_PROGRAMS for some reason\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# test programs executed by CI scripts\n\n# lower-case var with actual list (so targets can be built by explicit request)\n\n# upper-case var picked up by autotools, populated based on configure settings;\n\n#   its relevant \"cibindir\" is conditionally defined below\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Initialize some more variables\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Named by analogy from configure'd myDOXDIR for doxygen\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Locations of child Makefiles (generated by configure from .am via .in files)\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Test data are also part of sources to redistribute\n\n# The COPYING file is symlinked to from the license fixtures\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# ----------------------------------------------------------------------\n\n# List of header files. The purpose of this list is not dependency\n\n# tracking (which is automatic), but to ensure these files are\n\n# distributed by \"make dist\" although not \"installed\".\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Clean up products of configure script\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# These are deleted by \"distclean-local-dirs\" if they exist and are empty\n\n# The \"distclean-generic\" with \"rm DISTCLEANFILES\" is a dependency for this\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# recommended by daemon(7)\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#----------------------------------------------------------------------\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Tester for the doxygen output sanity\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Needed at least for the distcheck (post distribution tests)\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#Test case examples:\n\n#\n\n#thisTestOnly            Matches the test case called, 'thisTestOnly'\n\n#\"this test only\"        Matches the test case called, 'this test only'\n\n#these*                  Matches all cases starting with 'these'\n\n#exclude:notThis         Matches all tests except, 'notThis'\n\n#~notThis                Matches all tests except, 'notThis'\n\n#~*private*              Matches all tests except those that contain 'private'\n\n#a* ~ab* abc             Matches all tests that start with 'a', except those that\n\n#                        start with 'ab', except 'abc', which is included\n\n#\n\n#Names within square brackets are interpreted as tags. A series of tags form an AND expression wheras a comma-separated sequence forms an OR expression. e.g.:\n\n#\n\n#[one][two],[three]\n\n# setup using AM_LOG_FLAGS see an example\n\n# AM_LOG_FLAGS = \t\t\t\t~[db]\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Do we build and install CI programs by default? (see configure)\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Try to cheat automake into NOT building these programs on simple \"make check\"\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# These may be built explicitly, so should be removable in any case\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Recipe needed to fulfill ci-rc-bios.sh logic\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Another script is \"@libexecdir@/@PACKAGE@/db-init\" as required by the\n\n# bios-db-init.service definition (installed into OS root /lib in CI builds).\n\n# This is an optional target - without this script working (including the\n\n# sudoers setup), the REST API tests involving password changes will fail.\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# This wrapper now comes with two faces\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#----------------------------------------------------------------------\n\n#                        Extra files and sources\n\n#----------------------------------------------------------------------\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# add CI tests to dist\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# This will be removed from the OS image by the preinstallimage-bios.sh script\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Note: use srcdir for verbatim scripts, builddir for templated .sh.in products\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# SystemD integrations files; if not enabled - variables remain empty\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Preconfiguration for systemd-tmpfiles service to create needed paths\n",
        "Line" : 281,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# The subdirectory in source (and build) tree where systemd unit files\n\n# and their .in templates reside, starting from workspace (or build) root\n\n# Note: No leading nor trailing slash is expected here!\n",
        "Line" : 284,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# systemd integration enabled?\n",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# These units allow to toggle the entirety of 42ity agents and other related\n\n# services on and off (except a few chosen low-level services that remain\n\n# WantedBy=multi-user.target)\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# These units are not part of the common bios.target etc. but are to be\n\n# considered rather a part of the operating environment independent of\n\n# the 42ity high-level target groupings.\n",
        "Line" : 299,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# These are verbatim (not templated) additional units that wrap third-party\n\n# service instances for us. TODO: should tntnet@.service move here?\n",
        "Line" : 309,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# These service-units are PartOf and WantedBy the \"bios.target\"\n\n# And also \"tntnet@.service\" customized by obs/preinstall.sh\n\n# to enable a \"tntnet@bios.service\" instance specifically.\n\n# And also some of the timer units and implementations below\n",
        "Line" : 315,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Here we list the actual service-definition files that should be compiled\n\n# Enabled as part of 42ity presets\n",
        "Line" : 324,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# These units have unit files installed but are not enabled nor disabled\n\n# by default via presets nor timers (may be enabled in OS image generation\n\n# script or during deployment's lifetime).\n\n# Note: Due to conflict with \"tntnet@.service\" file from tntnet package,\n\n# we name ours differently here (and override during OS image generation).\n\n#SYSTEMD_UNITS_NOTPRESET_LOWLEVEL +=\n",
        "Line" : 328,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# These unit files are compiled, but are not enabled via 42ity presets\n",
        "Line" : 341,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# These files need no processing, delivered verbatim\n\n# Enabled as part of 42ity presets\n",
        "Line" : 349,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# This file is generated to toggle the defined units and targets\n\n# (except those in SYSTEMD_UNITS_NOTPRESET list)\n",
        "Line" : 358,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "### TODO? Add the build info (git commit, timestamp) to the header comment?\n\n### NOTE: These lines are effectively applied in order, so it is safe although\n\n### sub-efficient to simply enable everything and disable exceptions.\n",
        "Line" : 367,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# The rules to actually \"compile\" the service definition files\n\n# is part of catch-all %.in recipe above\n",
        "Line" : 375,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# $(systemdsystemunitdir) and $(systemdsystempresetdir) may be defined\n\n# externally by automake/autoconf; otherwise they are empty and should\n\n# effectively resolve to the top_builddir\n",
        "Line" : 378,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Nothing generated so far for TMPFILES\n",
        "Line" : 385,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# auto-cleanup and dist targets\n",
        "Line" : 388,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Quick links to build the systemd files (if enabled)\n",
        "Line" : 393,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "#----------------------------------------------------------------------\n\n#           list of text-based documentation files (rules below)\n\n# Note that the basic filenames in these variables are relative to the\n\n# project sources' root directory, but later in usage and actual targets\n\n# they are prefixed by the build directory (which may or may not be the\n\n# same as the checked-out source directory, both ways SHOULD work).\n\n#----------------------------------------------------------------------\n",
        "Line" : 414,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# For legacy/simplicity several types of file list variables are defined\n\n# below to reference the manually maintained and repository-tracked files\n\n# with documentation in text format, including the sources for automated\n\n# conversion from asciidoc to html (i.e. not doxygen, not manpages).\n\n# See comments below for path/extension expectations for different file types.\n\n# Variables below include:\n\n#\n\n# Auto-generated:\n\n#  TEXTS - list of *.txt files that are delivered by the project. Generated\n\n#\tfrom MAPPED_TXT_DOCS_* lists. Required by \"docs-txt\" target.\n\n#  HTMLS_ASCIIDOC - list of files generated automatically from asciidoc\n\n#\tinto HTML (1:1 relation, same dirname/basename, changes extension);\n\n#\tthe list is generated from MAPPED_TXT_DOCS_ASCIIDOC.\n\n#  HTMLS - list of *.html files (except doxygen) that are delivered by the\n\n#\tproject (built via target rules if needed); currently this only\n\n#\tincludes HTMLS_ASCIIDOC. Required by \"docs-html\" target.\n\n#  CLEAN_TEXTS and CLEAN_HTMLS - list of files generated/copied by dynamic\n\n#\trules lower in this Makefile, so they can be cleaned up too.\n\n#\n\n# Half-manual, half automation:\n\n#  MAPPED_TXT_DOCS_PLAINTEXT and MAPPED_TXT_DOCS_ASCIIDOC - lists of all\n\n#\tcolon-separated couples of source and destination text filenames\n\n#\twhich may involve a copy to another directory, another naming,\n\n#\tchanges of extension, etc. Populated manually and then from the\n\n#\tother lists (BASE_DOCS_*, TXT_DOCS_*) with simple deterministic\n\n#\tconversion rules from list to mapping entry. These mappings are\n\n#\tused to dynamically determine make-recipes and targets for files.\n\n#\n\n# Component lists (populated manually, reprocessed into MAPPED_* lists);\n\n# Note that these lists reference files tracked as part of the project\n\n# sources (not auto-copied, named or generated as in some lists above):\n\n#  BASE_DOCS_ASCIIDOC and BASE_DOCS_PLAINTEXT - the text files without\n\n#\textension, saved in the root of project sources. These variables\n\n#\tare used to populate the relevant MAPPED_TXT_DOCS_* lists.\n\n#  TXT_DOCS_ASCIIDOC and TXT_DOCS_PLAINTEXT - lists of *.txt files that\n\n#\twould actually be installed; as seen below, the list starts with\n\n#\tsome files already tracked in the needed location (under docs/).\n\n#\tThese variables are used to populate MAPPED_TXT_DOCS_* lists.\n\n#\n\n# The definition/processing order should be as follows:\n\n# * Populate the manually tracked lists (BASE_DOCS_*, TXT_DOCS_*) and the\n\n#   initial entries in MAPPED_TXT_DOCS_* (set those mappings which rename\n\n#   text files from tracked source to delivery under \"docs/develop/\").\n\n# * Define as empty (or very exceptionally pre-populated) the lists in\n\n#   HTMLS_ASCIIDOC, HTMLS, TEXTS as well as automated installation targets\n\n#   like develdoc_DATA.\n\n# * Run macros to populate the rest of MAPPED_TXT_DOCS_* with trivial\n\n#   conversions from BASE_DOCS_* and TXT_DOCS_*.\n\n# * Run macros to define the build targets and recipes for all text files\n\n#   (copying) and add to our targets (TEXTS) and other common lists like\n\n#   EXTRA_DIST and DISTCLEAN automatically.\n\n# * Run macros to define the build targets and recipes for the HTML files\n\n#   created from texts by asciidoc (append to HTMLS_ASCIIDOC).\n\n# * Add the resulting HTMLS_ASCIIDOC to HTMLS.\n\n# * Define the practical targets - to build or clean the whole set of our\n\n#   documentation files.\n",
        "Line" : 422,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Documentation files saved in the project source-code root directory\n\n# as text files without extensions in the name (following GNU standards)\n\n# and written in asciidoc markup\n\n# Note these should have paths relative to project root dir.\n",
        "Line" : 479,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Documentation files saved in the project source-code root directory\n\n# as text files without extensions in the name and written in plain\n\n# text with no expected transformation\n\n# Note these should have paths relative to project root dir.\n",
        "Line" : 486,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# These two seem to have some markup or similar structuring,\n\n# but it is not asciidoc so consider them plaintext for now.\n\n# Note these should have paths relative to project root dir.\n",
        "Line" : 492,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# The following files are saved into proper subdirectories, have an\n\n# extension in the filename, and contain asciidoc markup.\n\n# Note these should have paths relative to project root dir.\n",
        "Line" : 497,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# List of text files that are installed as is (none so far, but see\n\n# below for MAPPED_TXT_DOCS_ASCIIDOC and MAPPED_TXT_DOCS_PLAINTEXT)\n",
        "Line" : 503,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "#----------------------------------------------------------------------\n\n#  List of source texts dispersed in the code with automated targeting\n\n#----------------------------------------------------------------------\n\n# The list below is a colon-separated map of filenames copied from\n\n# sources relative to project root (first token) into different names\n\n# under the builddir and final installation (the second token, here\n\n# copied into \"docs/develop\"), and also maybe compiled into HTML\n\n# (as in case of the _ASCIIDOC list).\n\n# Filenames here should not have spaces and should have the '.txt' suffix.\n",
        "Line" : 508,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "#################################################################\n\n# Items below are intended for automatic generation and appendage\n\n#################################################################\n\n# Historically some original docs have *.txt names and some don't\n\n# but we solve it by having a target to ensure presence of *.txt\n\n# copies now for all needed files in the same docs directory\n\n# See the MAPPED_TXT_DOCS_ASCIIDOC parsing around this Makefile.\n\n# Here we predefine the HTMLS_ASCIIDOC list as anything that is\n\n# not converted from the MAPPED_TXT_DOCS_ASCIIDOC list, so empty.\n",
        "Line" : 522,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# Ultimate list of HTMLs from generally many sources (except doxygen,\n\n# since that list of targets is not known in advance). Predefined (and\n\n# empty) here, appended later on. Similarly for ultimate text files.\n",
        "Line" : 534,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# These variables track the compiled/generated/etc. text/html files\n\n# so they can be removed in *clean requests\n",
        "Line" : 540,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "##################################################\n\n# Define delivery of developer documentation:\n\n##################################################\n\n# Target directory for developer documentation after installation\n",
        "Line" : 545,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# Install the non-doxygen docs here (doxygen has its subdir defined below).\n\n# Text files are \"originals\" or copies under a different name and are always\n\n# expected to be available (to fail the make otherwise is correct action).\n\n# Note that other HTML component targets must be listed explicitly as they\n\n# might appear in the project later on; as for example HTMLS_ASCIIDOC needs\n\n# a conditional enablement (try install only if generatable at all).\n\n# Like above, this list is initially empty (or maybe explicit later on)\n\n# and is appended by some macros below.\n",
        "Line" : 551,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "###----------------------------------------------------------------------\n\n###   Magic macros to expand the patterns for text to text file copying\n\n###----------------------------------------------------------------------\n\n# Magic below inspired by this blog post (see description/comments):\n\n#   http://blog.jgc.org/2012/01/using-gnu-makes-define-and-eval-to.html\n",
        "Line" : 561,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Copies from \"$1\" to \"$2\", making the subdirectories as needed\n",
        "Line" : 567,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# Another way to skin the cat...\n\n# Note that install program by itself reports the 'SRC' -> 'DST\" message\n",
        "Line" : 578,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# Generalize the two solutions\n",
        "Line" : 584,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# This macro defines the dependencies and rules to copy the text file\n\n# into the build area. Also adds the filename into lists for install,\n\n# cleanup, ultimately used dependencies, etc.\n",
        "Line" : 589,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# Define the dependency and the rule\n",
        "Line" : 598,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# Fake dependency for subdir/dist builds\n",
        "Line" : 602,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "#echo \"DEBUG-MAKEFILE-FAKEDEP: Mapped target '$$@' to source '$$<'\"\n",
        "Line" : 604,
        "CharPositionInLine" : 2
      },
      "69" : {
        "Text" : "### Target as a text file\n",
        "Line" : 606,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "### Copy for installation:\n",
        "Line" : 609,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "### Copy in make dist\n",
        "Line" : 612,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "### Cleanup in build\n",
        "Line" : 620,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# Convert the simple lists defined above into the common mapping tables\n\n# for unprocessable and for asciidoc-able text files:\n",
        "Line" : 625,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# Add to automatic removal ONLY the files which are relocated while mapping\n\n# That is, TXT_DOCS_* which remain in-place should not be removed (i.e. the\n\n# originals during an in-tree build)\n",
        "Line" : 634,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# Convert the 1:1 simple lists defined above into the common mapping tables\n\n# for unprocessable and for asciidoc-able text files:\n",
        "Line" : 641,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# Finally, run the logic for patterns that define file-copying\n\n# Note that for 1:1 mapped files there may be harmless messages like\n\n# \"make: Circular...dependency dropped.\" during an in-directory build.\n",
        "Line" : 650,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "##################################################\n\n# The stuff HTML docs are made of...\n\n# Similar activity for ASCIIDOC-HTML mapping\n\n# The dependencies for the text file via patterns in the standard dir\n\n# were defined above. Now just add the dependency for HTML building\n\n# into the same basename...\n\n# Per dependencies, all the text files should be available in the\n\n# builddir/docs/develop/*.txt and the *.html will appear nearby\n",
        "Line" : 658,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# Define the dependency and the rule\n",
        "Line" : 684,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "#echo \"DEBUG-MAKEFILE-FAKEDEP-ABS: Mapped target '$$@' to source '$$<' ; _TH_HTML_DST_REL='$(_TH_HTML_DST_REL)' _TH_HTML_DST_ABS='$(_TH_HTML_DST_ABS)'\"\n",
        "Line" : 686,
        "CharPositionInLine" : 2
      },
      "80" : {
        "Text" : "# Fake dependency for subdir/dist builds\n",
        "Line" : 689,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "#echo \"DEBUG-MAKEFILE-FAKEDEP-REL: Mapped target '$$@' to source '$$<'\"\n",
        "Line" : 691,
        "CharPositionInLine" : 2
      },
      "82" : {
        "Text" : "# Some HTMLS_ASCIIDOCs may have been defined above, maybe with other recipes\n\n# Convert the remainder of HTMLS_ASCIIDOC from MAPPED_TXT_DOCS_ASCIIDOC\n",
        "Line" : 700,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# NOTE: The HTMLS list holds relative pathnames used in other recipes\n\n# But _DATA installs and CLEANups prefer less ambiguity with absolute names\n",
        "Line" : 704,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "#develdoc_DATA +=\t$(abs_HTMLS_ASCIIDOC)\n\n#CLEANFILES +=\t\t$(abs_HTMLS_ASCIIDOC)\n\n#develdoc_DATA +=\t$(HTMLS_ASCIIDOC)\n\n#CLEANFILES +=\t\t$(HTMLS_ASCIIDOC)\n",
        "Line" : 710,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "#----------------------------------------------------------------------\n\n#                One rule to generate and wipe documentation\n\n#----------------------------------------------------------------------\n",
        "Line" : 718,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# man-docs doxygen-docs\n",
        "Line" : 723,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# alias for manual typing errors\n",
        "Line" : 725,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "# clean-man clean-doxygen\n",
        "Line" : 729,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "#----------------------------------------------------------------------\n\n#                        text to text copying\n\n# Some documents are by GNU standard stored in project root, and we\n\n# want to deliver them to common docs/devel subdirectory in install.\n\n#----------------------------------------------------------------------\n",
        "Line" : 732,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "# A copy of TXT_DOCS_ASCIIDOC in the build area is needed for unified\n\n# rules of asciidoc to html parsing, defined below; see MAPPED_* above.\n",
        "Line" : 738,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "# alias for manual typing errors\n",
        "Line" : 742,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "# Only clean up the copies in the builddir, if applicable\n\n# Do not kill the originals in the source tree\n",
        "Line" : 750,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "#----------------------------------------------------------------------\n\n#                       asciidoc html generation\n\n#----------------------------------------------------------------------\n",
        "Line" : 759,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "# Technically we only implement building of HTMLS_ASCIIDOC now.\n\n# If others appear and are not handled, they will fail to make.\n\n# That is a good thing by design - we'll know to add more logic ;)\n",
        "Line" : 763,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "# alias for manual typing errors\n",
        "Line" : 770,
        "CharPositionInLine" : 0
      },
      "96" : {
        "Text" : "#----------------------------------------------------------------------\n\n#                        doxygen html generation\n\n# Note that unlike many other targets, doxygen seemingly has to use\n\n# relative paths and be generated in a directory near the source code\n\n#----------------------------------------------------------------------\n",
        "Line" : 777,
        "CharPositionInLine" : 0
      },
      "97" : {
        "Text" : "#if HAVE_DOXYGEN\n\n#EXTRA_DIST +=\t\t$(top_srcdir)/${myDOXDIR}/html\n\n#BUILT_SOURCES +=\t$(top_srcdir)/${myDOXDIR}/html\n\n#endif\n\n#EXTRA_DIST +=\t\t$(top_srcdir)/${myDOXDIR}/Doxyfile.in\n",
        "Line" : 783,
        "CharPositionInLine" : 0
      },
      "98" : {
        "Text" : "#$(top_srcdir)/${myDOXDIR}/html: $(abs_top_srcdir)/${myDOXDIR}/html\n\n#doxygen-docs: $(abs_top_srcdir)/${myDOXDIR}/html\n",
        "Line" : 795,
        "CharPositionInLine" : 0
      },
      "99" : {
        "Text" : "# alias for manual typing errors\n\n#docs-doxygen: doxygen-docs\n",
        "Line" : 798,
        "CharPositionInLine" : 0
      },
      "100" : {
        "Text" : "# Copy generated contents of \"docs/doxygen/\" into \"/usr/share/core.../doxygen\"\n\n#develdocdoxygendir =\t$(develdocdir)/doxygen\n\n#develdocdoxygen: doxygen-docs\n",
        "Line" : 805,
        "CharPositionInLine" : 0
      },
      "101" : {
        "Text" : "#if HAVE_DOXYGEN\n\n#develdocdoxygen_DATA =\t${myDOXDIR}/html/*\n\n#\n\n# Such-named target is required by the _DATA above, so have a rule to build it\n\n#${myDOXDIR}/html/*: doxygen-docs\n\n#$(abs_top_builddir)/${myDOXDIR}/Doxyfile: ${myDOXDIR}/Doxyfile $(abs_top_builddir)/Makefile\n\n#\n\n#$(abs_top_srcdir)/${myDOXDIR}/html: $(abs_top_builddir)/${myDOXDIR}/Doxyfile\n\n#\t@test -d $(abs_top_srcdir)/${myDOXDIR}/html || \\\n#\t{ cd $(abs_top_srcdir)/ && \\\n#\t  echo \"INFO: Generating Doxygen docs in '`pwd`' according to '$<'\" >&2 && \\\n#\t  $(DOXYGEN) \"$<\"; }\n",
        "Line" : 809,
        "CharPositionInLine" : 0
      },
      "102" : {
        "Text" : "#\t@touch -r \"$<\" \"$@\" || true\n\n#else\n\n#develdocdoxygen_DATA =\n\n#\n\n#${myDOXDIR}/html/*: $(abs_top_srcdir)/${myDOXDIR}/html\n\n#\n\n#$(abs_top_srcdir)/${myDOXDIR}/html:\n\n#\t@echo \"SKIP: Missing 'doxygen' program, sourcecode-documentation generation skipped!\" >&2\n\n#endif\n",
        "Line" : 821,
        "CharPositionInLine" : 0
      },
      "103" : {
        "Text" : "#----------------------------------------------------------------------\n\n#                 manpage generation (delegated to sub-make)\n\n#----------------------------------------------------------------------\n",
        "Line" : 831,
        "CharPositionInLine" : 0
      },
      "104" : {
        "Text" : "#EXTRA_DIST +=\t\t$(top_srcdir)/${myMANDIR}/*.txt\n\n#CLEANFILES +=\t\t$(abs_top_builddir)/${myMANDIR}/*.?\n",
        "Line" : 835,
        "CharPositionInLine" : 0
      },
      "105" : {
        "Text" : "#man-docs:\n\n#\t( cd $(abs_top_builddir)/$(myMANDIR) && $(MAKE) all )\n",
        "Line" : 838,
        "CharPositionInLine" : 0
      },
      "106" : {
        "Text" : "# alias for manual typing errors\n\n#docs-man: man-docs\n",
        "Line" : 841,
        "CharPositionInLine" : 0
      },
      "107" : {
        "Text" : "#clean-man:\n\n#\t( cd $(abs_top_builddir)/$(myMANDIR) && \\\n#\t  { $(MAKE) clean || /bin/true; } && \\\n#\t  /bin/rm -f *.[123456789] *.xml *.html )\n",
        "Line" : 844,
        "CharPositionInLine" : 0
      },
      "108" : {
        "Text" : "#\t/bin/rm -f $(abs_top_builddir)/$(myMANDIR)/*.?\n",
        "Line" : 848,
        "CharPositionInLine" : 0
      },
      "109" : {
        "Text" : "#----------------------------------------------------------------------\n\n#                        hook for make all => generate files too\n\n#----------------------------------------------------------------------\n",
        "Line" : 850,
        "CharPositionInLine" : 0
      },
      "110" : {
        "Text" : "# Try to build everything buildable, e.g. for further warning counters\n",
        "Line" : 856,
        "CharPositionInLine" : 0
      },
      "111" : {
        "Text" : "# Note: variable cibin_PROGRAMS may be empty if not enabled via configure\n\n#   The variable cibin_programs holds the actual list of CI programs instead\n",
        "Line" : 859,
        "CharPositionInLine" : 0
      },
      "112" : {
        "Text" : "#----------------------------------------------------------------------\n\n#                        hook for make check custom verifications\n\n#----------------------------------------------------------------------\n",
        "Line" : 868,
        "CharPositionInLine" : 0
      },
      "113" : {
        "Text" : "# Run compile/link tests defined in this Makefile\n\n# Note that check-gitignore should be the last target\n\n# FIXME: \"check-pool\" temporarily not included into \"check-local\", see below\n",
        "Line" : 872,
        "CharPositionInLine" : 0
      },
      "114" : {
        "Text" : "# If git repo details are not available, or git program does not exist,\n\n# or if everything is properly GitIgnored - then succeed\n\n# If some not-gitignored files are found, then fail\n",
        "Line" : 877,
        "CharPositionInLine" : 0
      },
      "115" : {
        "Text" : "# This may and should complain on non-empty dirs; \"distclean-generic\"\n\n# with proper list of DISTCLEANFILES should have taken care of that\n",
        "Line" : 897,
        "CharPositionInLine" : 0
      },
      "116" : {
        "Text" : "# BUILDER_RETAIN_CONFIGURE=yes may be exported by builder.sh\n",
        "Line" : 910,
        "CharPositionInLine" : 0
      },
      "117" : {
        "Text" : "#----------------------------------------------------------------------\n\n#                        astyle formating\n\n#----------------------------------------------------------------------\n",
        "Line" : 925,
        "CharPositionInLine" : 0
      },
      "118" : {
        "Text" : "#----------------------------------------------------------------------\n\n#                        some popular testing targets\n\n#----------------------------------------------------------------------\n",
        "Line" : 939,
        "CharPositionInLine" : 0
      },
      "119" : {
        "Text" : "#----------------------------------------------------------------------\n\n#                        SCM details\n\n#----------------------------------------------------------------------\n",
        "Line" : 948,
        "CharPositionInLine" : 0
      },
      "120" : {
        "Text" : "# Note: this could be a .git_details-@PACKAGE@ but our package string\n\n# value so far is the legacy \"bios\", so we have to be explicit here\n",
        "Line" : 963,
        "CharPositionInLine" : 0
      },
      "121" : {
        "Text" : "# The .git_details can be generated by OBS script which does the checkout of\n\n# sources to be packaged, or by the top-level make in a \"make dist\" running\n\n# in a Git workspace. Namely, this might not be regeneratable in each case,\n\n# i.e. when just a tarball with no SCM data is used for the build - then the\n\n# tarball should contain a current (latest generated) copy of this file.\n",
        "Line" : 968,
        "CharPositionInLine" : 0
      },
      "122" : {
        "Text" : "# This target ensures the .git_details file is always re-evaluated somehow\n",
        "Line" : 974,
        "CharPositionInLine" : 0
      },
      "123" : {
        "Text" : "# NOTE that in the target routine below we filter out PACKAGE_BUILD_TSTAMP\n\n# changes because if nothing else changed, these don't matter much but do\n\n# cause a rebuild of the C/H files and those which depend on them, on every\n\n# \"make\" run. Just remove the file (distclean) to regenerate everything truly.\n\n# For tests, can 'export GIT_DETAILS_BLANK=yes' to succeed even on git errors.\n\n# Also note that a \".git\" can be a file (for submodules), not a directory.\n",
        "Line" : 980,
        "CharPositionInLine" : 0
      },
      "124" : {
        "Text" : "#ifdef \\1\\n#undef \\1\\n#endif\\nextern const char * \\1;,'; \\\n\t  }; echo '#endif // BIOS_GIT_DETAILS_OVERRIDE'; ) > \"$@.tmp\" || \\\n\t /bin/rm -f \"$@.tmp\"\n",
        "Line" : 1075,
        "CharPositionInLine" : 61
      },
      "CommentCount" : 125,
      "Errorlog" : "line 1029:62 token recognition error at: '\\1'\n"
    },
    "database/mysql/Makefile.am" : {
      "ObjectId" : "58c6607004ea4ebf1178aa5ecb2ed5cb651a17c0",
      "LastModified" : "2018-06-15T07:08:34Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Makefile for database/mysql/ to install some of the files for end-user image\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "docs/examples/Makefile.am" : {
      "ObjectId" : "c42ba88506b4e478309778f4b80b5f59484f0966",
      "LastModified" : "2018-11-19T15:39:55Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Install these documents with example configurations to (typically)\n\n# someplace under /usr/share\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/Makefile.am" : {
      "ObjectId" : "97bfa0fa3dabc80f739bb8cc9f13899b4e684060",
      "LastModified" : "2018-06-15T07:08:34Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Makefile for tools/ to install some of the scripts for end-user image\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "AUTOMAKE" : 4
  },
  "ElapsedTime" : 866
}