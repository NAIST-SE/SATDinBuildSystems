{
  "Repository" : "35662967",
  "Revision" : "HEAD",
  "ObjectId" : "2351c6f68c729de247c1685e5e3120ea21712757",
  "CommitTime" : "2019-01-29T19:45:30Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "154305186b8774e83685821177ffdca47a6e4448",
      "LastModified" : "2019-01-24T20:43:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Include CMAKE_INSTALL_*DIR variables\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO: add win32 options\n",
        "Line" : 65,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Get the number of processors to pass to make -j\n",
        "Line" : 78,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Update these when upgrading libelf\n",
        "Line" : 85,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Can't use find_library() here since it's not compatible with\n\n# ExternalProject, so add libelf.a as an imported library\n",
        "Line" : 102,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 5
    },
    "cmake/Android.cmake" : {
      "ObjectId" : "cf40247f603622f5d181b21f7636792a7c8574d3",
      "LastModified" : "2017-04-01T00:02:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake Android toolchain file for selfrando\n\n#\n\n# Invoke it using:\n\n# $ cmake -DCMAKE_TOOLCHAIN_FILE=cmake/Android.cmake -DCMAKE_ANDROID_NDK=<path to NDK> -DSR_ARCH=<...>\n\n# or\n\n# $ SR_ARCH=<...> ./scripts/build_cmake.sh -DCMAKE_TOOLCHAIN_FILE=cmake/Android.cmake -DCMAKE_ANDROID_NDK=<path to NDK>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# When building for Android, only build RandoLib\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "832a13832d00047e099e07a4eb4d8189cbc6cf3b",
      "LastModified" : "2018-07-31T03:07:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/RandoLib/CMakeLists.txt" : {
      "ObjectId" : "ea58d09f0906715985f41191967c55795664bc32",
      "LastModified" : "2018-12-12T00:35:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIXME: this would be cleaner with a configure'd header\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# FIXME: this would be cleaner with a configure'd header\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# FIXME: this would be cleaner with a configure'd header\n",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "src/RandoLib/bareflank/CMakeLists.txt" : {
      "ObjectId" : "a296072736c66188fa2ab135c116094715d259bf",
      "LastModified" : "2018-12-12T00:35:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# `and` is a C++ keyword that is also used in kernel macros,\n\n# which breaks compilation; we need to ask the compiler to handle it\n\n# like in C\n",
        "Line" : 20,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "# Get the rest of the compiler flags from the kernel build system\n",
        "Line" : 25,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# Make stack non-executable in assembly files\n",
        "Line" : 51,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# We don't want to depend on memset/memcpy/the rest\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Add dependency on libelf since we import ELF headers\n",
        "Line" : 85,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "src/RandoLib/bareflank/linux/fakemod/Makefile" : {
      "ObjectId" : "784377ab20d36f1e39b0f7b060cd2ad4c765cc0c",
      "LastModified" : "2018-12-12T00:35:07Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/RandoLib/posix/CMakeLists.txt" : {
      "ObjectId" : "bef0c53d0cb286633a9116a1db49fd9cddde31cb",
      "LastModified" : "2019-01-24T20:43:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Make stack non-executable in assembly files\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# We don't want to depend on memset/memcpy/the rest\n",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Since we're trying to avoid depending on glibc,\n\n# we have to disable the stack protector\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Create the entry libraries\n",
        "Line" : 51,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# We need _TRaP_memset on ARM\n",
        "Line" : 61,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# On ARM, memset.S requires bionic/private/bionic_asm.h\n",
        "Line" : 69,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# On 32-bit x86, we need __x86.get_pc_thunk.bx to be defined as the\n\n# compiler emits it: a single-element group section\n\n# FIXME: it would be nice to get rid of this\n",
        "Line" : 85,
        "CharPositionInLine" : 12
      },
      "7" : {
        "Text" : "# Add dependency on libelf since we import ELF headers\n",
        "Line" : 109,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# TODO: include all the Android options\n",
        "Line" : 130,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# FIXME: scons can build both a shared and static library\n\n# from the same source files but with different C defs\n\n# but that's not as simple with cmake\n",
        "Line" : 132,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Build libselfrando.a with .selfrando prefix prepended to all sections\n",
        "Line" : 144,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# TODO: add _TRaP_environ to non_trap_syms???\n",
        "Line" : 150,
        "CharPositionInLine" : 12
      },
      "12" : {
        "Text" : "# Build selfrando_txtrp.o with all the code in .txtrp\n\n# FIXME: is this list correct?\n",
        "Line" : 159,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# FIXME: also install into arch-specific subdirectory\n",
        "Line" : 172,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 14
    },
    "src/RandoLib/posix/bionic/CMakeLists.txt" : {
      "ObjectId" : "17719e41574e24ad992555c7f4d33ede102b7949",
      "LastModified" : "2018-12-12T00:35:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/RandoLib/posix/bionic/arch-arm/CMakeLists.txt" : {
      "ObjectId" : "8fe2d184339943470e24b782f7d4aeb5793817af",
      "LastModified" : "2018-12-12T00:35:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/RandoLib/posix/bionic/arch-arm/syscalls/CMakeLists.txt" : {
      "ObjectId" : "ba20266d5a1a7270c372e740e5d776ee90594095",
      "LastModified" : "2018-12-12T00:35:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Generated by gensyscalls.py. Do not edit.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/RandoLib/posix/bionic/arch-arm64/CMakeLists.txt" : {
      "ObjectId" : "485d986621875cb51bb82a9c3bdf053844d6b648",
      "LastModified" : "2018-12-12T00:35:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/RandoLib/posix/bionic/arch-arm64/syscalls/CMakeLists.txt" : {
      "ObjectId" : "3bae4798e56e01b0777446fdc777f84ee0ba6ee7",
      "LastModified" : "2018-12-12T00:35:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Generated by gensyscalls.py. Do not edit.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/RandoLib/posix/bionic/arch-x86/CMakeLists.txt" : {
      "ObjectId" : "5873bf1ede785e86d99cd38d52b57d03445bff02",
      "LastModified" : "2018-12-12T00:35:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/RandoLib/posix/bionic/arch-x86/syscalls/CMakeLists.txt" : {
      "ObjectId" : "ed2db652da0fbcaa558c32df15f6c397f8fb1c39",
      "LastModified" : "2018-12-12T00:35:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Generated by gensyscalls.py. Do not edit.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/RandoLib/posix/bionic/arch-x86_64/CMakeLists.txt" : {
      "ObjectId" : "272df4386b85fd05fe68fddde8d73c61f898e293",
      "LastModified" : "2018-12-12T00:35:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/RandoLib/posix/bionic/arch-x86_64/syscalls/CMakeLists.txt" : {
      "ObjectId" : "89b65369fa646174ea14910f9f30a5fa7d16ea6b",
      "LastModified" : "2018-12-12T00:35:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Generated by gensyscalls.py. Do not edit.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/Support/CMakeLists.txt" : {
      "ObjectId" : "19c5bb43581c61e8bdcc2cc6716c8c05ceeb24e2",
      "LastModified" : "2018-12-12T00:35:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Support/posix/CMakeLists.txt" : {
      "ObjectId" : "497e2a161db8d17ff474a1911e74d3f100ac9161",
      "LastModified" : "2018-12-12T00:35:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/TrapInfo/CMakeLists.txt" : {
      "ObjectId" : "074118fe8b21449b2866d0ad9142d7475ae0bbf8",
      "LastModified" : "2018-12-12T00:35:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/TrapLibs/CMakeLists.txt" : {
      "ObjectId" : "19c5bb43581c61e8bdcc2cc6716c8c05ceeb24e2",
      "LastModified" : "2018-12-12T00:35:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/TrapLibs/posix/CMakeLists.txt" : {
      "ObjectId" : "8345cdb804941536e36136e25202b3afae8e26f3",
      "LastModified" : "2018-12-12T00:35:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Make stack non-executable in assembly files\n",
        "Line" : 5,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Create the entry libraries\n\n# Build the trapheader/footer objects\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "src/TrapLibs/win32/CMakeLists.txt" : {
      "ObjectId" : "464090415c47109523e91779d4f40e19495c9cf1",
      "LastModified" : "2018-12-12T00:35:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/TrapLinker/CMakeLists.txt" : {
      "ObjectId" : "19c5bb43581c61e8bdcc2cc6716c8c05ceeb24e2",
      "LastModified" : "2018-12-12T00:35:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/TrapLinker/posix/CMakeLists.txt" : {
      "ObjectId" : "10749b015da3ed9e204c09d1d21a3c9c79031c24",
      "LastModified" : "2019-01-24T20:43:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 23,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 751
}