{
  "Repository" : "7049978",
  "Revision" : "HEAD",
  "ObjectId" : "ce90d43c344f19fdce915deef636ded933bc0d08",
  "CommitTime" : "2019-04-12T23:43:35Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "9a757f3d0a821975ea3b6a2972c5d41199540c3d",
      "LastModified" : "2019-04-12T23:42:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## reicast build modules #\n\n#\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# configure build settings, must be first\n",
        "Line" : 34,
        "CharPositionInLine" : 18
      },
      "2" : {
        "Text" : "### libdreamcast.cmake #########################################################################\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#### option(rend)\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add Clang if NOT WIN32 *FIXME* \n",
        "Line" : 74,
        "CharPositionInLine" : 44
      },
      "5" : {
        "Text" : "#\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# change for linux , rec_lin86_asm.S\n",
        "Line" : 84,
        "CharPositionInLine" : 40
      },
      "7" : {
        "Text" : "### FIXME: asm with cmake ninja+VC\n",
        "Line" : 94,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "#\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "### deps.cmake #################################################################################\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# include headers into cmake target/project view \n",
        "Line" : 123,
        "CharPositionInLine" : 40
      },
      "11" : {
        "Text" : "# sigh,  this dir is named chdpsr for some reason ...\n",
        "Line" : 149,
        "CharPositionInLine" : 31
      },
      "12" : {
        "Text" : "# ${d_deps}/ifaddrs/ifaddrs.c\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Add Clang if NOT WIN32 *FIXME* \n",
        "Line" : 155,
        "CharPositionInLine" : 44
      },
      "14" : {
        "Text" : "### libosd.cmake ################################################################################\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "## I really should just glob all of the dirs and ;shrug; if guards don't do it all ##\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# add option\n",
        "Line" : 192,
        "CharPositionInLine" : 37
      },
      "17" : {
        "Text" : "# todo: configure linux audio lib options\n",
        "Line" : 193,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "## don't use GLES ?\n",
        "Line" : 201,
        "CharPositionInLine" : 38
      },
      "19" : {
        "Text" : "#   .//android-studio/reicast/src/main/jni/src/XperiaPlay.c\n",
        "Line" : 207,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# ANDROID\n",
        "Line" : 209,
        "CharPositionInLine" : 12
      },
      "21" : {
        "Text" : "#\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# if NOT USE_SWIFT / ObjC\n\n#${d_osd}/apple/osx_osd.cpp\n",
        "Line" : 229,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "#\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "## \n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# \"-framework Cocoa\"\n\n# \"-framework AppKit\"\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#### OSX Notes,  when not using xcode you have to make app bundle,  edit plist and copy,  convert MainMenu.xib to nib and copy, \n\n#null@devpc:~$ /Users/null/Documents/projects/reicast-emulator/bin/RelWithDebInfo/Reicast.app/Contents/MacOS/reicast ; exit;\n\n#2019-03-18 14:28:44.842 reicast[11468:131797] Unknown class _TtC12emulator_osx9EmuGLView in Interface Builder file at path /Users/null/Documents/projects/reicast-emulator/bin/RelWithDebInfo/Reicast.app/Contents/Resources/MainMenu.nib.\n\n#2019-03-18 14:28:44.842 reicast[11468:131797] Unknown class _TtC12emulator_osx11AppDelegate in Interface Builder file at path /Users/null/Documents/projects/reicast-emulator/bin/RelWithDebInfo/Reicast.app/Contents/Resources/MainMenu.nib.\n\n#2019-03-18 14:28:44.860 reicast[11468:131797] Failed to connect (window) outlet from (NSObject) to (NSWindow): missing setter or instance variable\n\n#\n",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#APPLE\n",
        "Line" : 279,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 29
    },
    "core/deps/picotcp/Makefile" : {
      "ObjectId" : "7bee8bb9947cd257d332c231ff7645f529bc51b1",
      "LastModified" : "2018-09-15T19:28:13Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Default compiled-in protocols\n\n#\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#IPv6 related\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# options for adding warnings\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# options for supressing warnings\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "core/deps/zlib/Makefile" : {
      "ObjectId" : "c4bf0f6bb173a4481ff70b0769bfb3501cfae556",
      "LastModified" : "2018-09-15T19:28:13Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for zlib\n\n# Copyright (C) 1995-2013 Jean-loup Gailly, Mark Adler\n\n# For conditions of distribution and use, see copyright notice in zlib.h\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# To compile and test, type:\n\n#    ./configure; make test\n\n# Normally configure builds both a static and a shared library.\n\n# If you want to build just a static library, use: ./configure --static\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# To use the asm code, type:\n\n#    cp contrib/asm?86/match.S ./match.S\n\n#    make LOC=-DASMV OBJA=match.o\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# To install /usr/local/lib/libz.* and /usr/local/include/zlib.h, type:\n\n#    make install\n\n# To install in $HOME instead of /usr/local, use:\n\n#    make install prefix=$HOME\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#CFLAGS=-O3  -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN\n\n#CFLAGS=-O -DMAX_WBITS=14 -DMAX_MEM_LEVEL=7\n\n#CFLAGS=-g -DDEBUG\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# to use the asm code: make OBJA=match.o, PIC_OBJA=match.lo\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The ranlib in install is needed on NeXTSTEP which checks file times\n\n# ldconfig is for Linux\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "esinfo/build.xml" : {
      "ObjectId" : "a10a914914d5beb68d8c9563ae135e486b30fd14",
      "LastModified" : "2018-09-15T19:28:13Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " The local.properties file is created and updated by the 'android' tool.\n         It contains the path to the SDK. It should *NOT* be checked into\n         Version Control Systems. ",
        "Line" : 6,
        "CharPositionInLine" : 38
      },
      "1" : {
        "Text" : " The ant.properties file can be created by you. It is only edited by the\n         'android' tool to add properties to it.\n         This is the place to change some Ant specific build properties.\n         Here are some properties you may want to change/update:\n\n         source.dir\n             The name of the source directory. Default is 'src'.\n         out.dir\n             The name of the output directory. Default is 'bin'.\n\n         For other overridable properties, look at the beginning of the rules\n         files in the SDK, at tools/ant/build.xml\n\n         Properties related to the SDK location or the project target should\n         be updated using the 'android' tool with the 'update' action.\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems.\n\n         ",
        "Line" : 28,
        "CharPositionInLine" : 13
      },
      "2" : {
        "Text" : " if sdk.dir was not set from one of the property file, then\n         get it from the ANDROID_HOME env var.\n         This must be done before we load project.properties since\n         the proguard config can use sdk.dir ",
        "Line" : 34,
        "CharPositionInLine" : 49
      },
      "3" : {
        "Text" : " The project.properties file is created and updated by the 'android'\n         tool, as well as ADT.\n\n         This contains project specific properties such as project target, and library\n         dependencies. Lower level build properties are stored in ant.properties\n         (or in .classpath for Eclipse projects).\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems. ",
        "Line" : 48,
        "CharPositionInLine" : 77
      },
      "4" : {
        "Text" : " quick check on sdk.dir ",
        "Line" : 51,
        "CharPositionInLine" : 36
      },
      "5" : {
        "Text" : "\n        Import per project custom build rules if present at the root of the project.\n        This is the place to put custom intermediary targets such as:\n            -pre-build\n            -pre-compile\n            -post-compile (This is typically used for code obfuscation.\n                           Compiled code location: ${out.classes.absolute.dir}\n                           If this is not done in place, override ${out.dex.input.absolute.dir})\n            -post-package\n            -post-build\n            -pre-clean\n    ",
        "Line" : 68,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : " Import the actual build file.\n\n         To customize existing targets, there are two options:\n         - Customize only one target:\n             - copy/paste the target into this file, *before* the\n               <import> task.\n             - customize it to your needs.\n         - Customize the whole content of build.xml\n             - copy/paste the content of the rules files (minus the top node)\n               into this file, replacing the <import> task.\n             - customize to your needs.\n\n         ***********************\n         ****** IMPORTANT ******\n         ***********************\n         In all cases you must update the value of version-tag below to read 'custom' instead of an integer,\n         in order to avoid having your file be overridden by tools such as \"android update project\"\n    ",
        "Line" : 88,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : " version-tag: 1 ",
        "Line" : 89,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 8
    },
    "shell/cmake/CMakeLists.txt" : {
      "ObjectId" : "c5d855c37a379373f51408f3d52db85b12b6ffb7",
      "LastModified" : "2018-09-20T15:28:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# A cmake file (currently only working on Linux).\n\n# Currently not doing library detection because it's a pain.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Options\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Flags\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TODO, -Map,$(notdir $@).map\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# TODO, TARGET_GCW0\n\n# TODO, TARGET_NACL32\n\n# TODO, TARGET_IPHONE\n\n# TODO, TARGET_PANDORA\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# TODO, Android\n\n# TODO, Pandora\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Temp stuff:\n\n# TODO: -frename-registers -fno-strict-aliasing -fsingle-precision-constant -ffast-math -ftree-vectorize\n\n# TODO: -fno-exceptions -fno-rtti\n\n# TODO: -fno-exceptions -fno-rtti -std=gnu++11\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# add_directory(core/khronos/GL3)\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Core stuff:\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# TODO, do some proper detection for this\n",
        "Line" : 125,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Processor-specific recompiler:\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Audio backends:\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Graphic stuffs:\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Optional features\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# TODO, deps/ifaddrs/ for Android\n",
        "Line" : 197,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Executable\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "shell/cmake/GetGitRevisionDescription.cmake" : {
      "ObjectId" : "8ab03bc5f0b766462e05edb6afbe9c20e8115b46",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Returns a version string from Git\n\n#\n\n# These functions force a re-configure on each git commit so that you can\n\n# trust the values of the variables in your build system.\n\n#\n\n#  get_git_head_revision(<refspecvar> <hashvar> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the refspec and sha hash of the current head revision\n\n#\n\n#  git_describe(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe on the source tree, and adjusting\n\n# the output so that it tests false if an error occurs.\n\n#\n\n#  git_get_exact_tag(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe --exact-match on the source tree,\n\n# and adjusting the output so that it tests false if there was no exact\n\n# matching tag.\n\n#\n\n#  git_local_changes(<var>)\n\n#\n\n# Returns either \"CLEAN\" or \"DIRTY\" with respect to uncommitted changes.\n\n# Uses the return code of \"git diff-index --quiet HEAD --\".\n\n# Does not regard untracked files.\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We must run the following at \"include\" time, not at function call time,\n\n# to find the path to this module rather than the path to a calling list file\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# .git dir not found, search parent directories\n",
        "Line" : 51,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "# We have reached the root directory, we are not in git\n",
        "Line" : 55,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# check if this is a submodule\n",
        "Line" : 62,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# TODO sanitize\n\n#if((${ARGN}\" MATCHES \"&&\") OR\n\n#\t(ARGN MATCHES \"||\") OR\n\n#\t(ARGN MATCHES \"\\\\;\"))\n\n#\tmessage(\"Please report the following error to the project!\")\n\n#\tmessage(FATAL_ERROR \"Looks like someone's doing something nefarious with git_describe! Passed arguments ${ARGN}\")\n\n#endif()\n",
        "Line" : 103,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "#message(STATUS \"Arguments to execute_process: ${ARGN}\")\n",
        "Line" : 111,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 7
    },
    "shell/cmake/android.cmake" : {
      "ObjectId" : "366fcb0432d1a062f0a96d4484ad3ef6b3b91305",
      "LastModified" : "2019-04-12T20:59:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## android.cmake\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "### option for ARM || ARM64 ?  HOST isn't useful it's a cross ...\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#set(CMAKE_SYSTEM_PROCESSOR aarch64)\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# API level\n",
        "Line" : 41,
        "CharPositionInLine" : 29
      },
      "6" : {
        "Text" : "#arm64-v8a , armeabi-v7a , armeabi\n\n#gnustl_static    libc++ will allow C++17, if you use _shared you must include in apk !\n",
        "Line" : 44,
        "CharPositionInLine" : 40
      },
      "7" : {
        "Text" : "#arm\t$TOOLCHAIN/ arm-linux-androideabi\t/lib/\n\n#arm64\t$TOOLCHAIN/ aarch64-linux-android\t/lib/\n\n#x86\t$TOOLCHAIN/ i686-linux-android\t\t/lib/\n\n#x86_64\t$TOOLCHAIN/ x86_64-linux-android\t/lib/\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#include(${NDK}/build/cmake/android.toolchain.cmake)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## FML\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#[[\nCMAKE_ANDROID_ANT_ADDITIONAL_OPTIONS\nCMAKE_ANDROID_API\nCMAKE_ANDROID_API_MIN\nCMAKE_ANDROID_ARCH\nCMAKE_ANDROID_ARCH_ABI\nCMAKE_ANDROID_ARM_MODE\nCMAKE_ANDROID_ARM_NEON\nCMAKE_ANDROID_ASSETS_DIRECTORIES\nCMAKE_ANDROID_GUI\nCMAKE_ANDROID_JAR_DEPENDENCIES\nCMAKE_ANDROID_JAR_DIRECTORIES\nCMAKE_ANDROID_JAVA_SOURCE_DIR\nCMAKE_ANDROID_NATIVE_LIB_DEPENDENCIES\nCMAKE_ANDROID_NATIVE_LIB_DIRECTORIES\nCMAKE_ANDROID_NDK\nCMAKE_ANDROID_NDK_DEPRECATED_HEADERS\nCMAKE_ANDROID_NDK_TOOLCHAIN_HOST_TAG\nCMAKE_ANDROID_NDK_TOOLCHAIN_VERSION\nCMAKE_ANDROID_PROCESS_MAX\nCMAKE_ANDROID_PROGUARD\nCMAKE_ANDROID_PROGUARD_CONFIG_PATH\nCMAKE_ANDROID_SECURE_PROPS_PATH\nCMAKE_ANDROID_SKIP_ANT_STEP\nCMAKE_ANDROID_STANDALONE_TOOLCHAIN\nCMAKE_ANDROID_STL_TYPE\n#]]",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "shell/cmake/config.cmake" : {
      "ObjectId" : "d1dfd59e4a1c7d65eb58b27e92d27a200c04115f",
      "LastModified" : "2019-04-12T23:42:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## config module \n\n#\n\n#\tget luserx0 to doc this shit or something, vars in all caps are to be exported as defs if they aren't in build.h already\n\n#\t\thandle options for FEAT per platform, so rec isn't built for targets w.o one...\n\n#\t\t*TODO* fix Android for build system in emu too,  OS_LINUX is hardly fitting:  prob works better as PLATFORM_ANDROID_{S,N}DK or something\n\n#\t\t*TODO* setup git version like it's done in VS/make and configure header so --version works still\n\n#\t\t*TODO* lots of other shit to improve build, add enabling/disabling libs/features, setting 3rd party libs as either built in  static, dynamic  or shared/system\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Scope:Local If set will build libs { dreamcast, osd, ... }\n\n## Scope:Local If BUILD_LIBS is set, will use this as type of lib to use { STATIC, SHARED, MODULE (plugin) } *TODO*\n\n## Scope:CMAKE If type is not specified in add_library, use SHARED\n",
        "Line" : 16,
        "CharPositionInLine" : 28
      },
      "2" : {
        "Text" : "## Build flags ##\n\n#\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Z: Uh, not a bitset\n\n# /* Works, for the most part */\n\n# /* This is missing hardware */\n\n# /* Works, for the most part */ \n\n# /* Needs to be done, 2xsh4 + 2xpvr + custom TNL */\n\n# /* Needs to be done, DC-like hardware with possibly more ram */\n\n# /* Needs to be done, 2xsh4, 2x aica , custom vpu */\n\n# /* Needs to be done, Uses newer 300 mhz sh4 + 150 mhz pvr mbx SoC */\n",
        "Line" : 26,
        "CharPositionInLine" : 32
      },
      "4" : {
        "Text" : "# HOST_OS\n",
        "Line" : 37,
        "CharPositionInLine" : 32
      },
      "5" : {
        "Text" : "# todo: iOS != OS_DARWIN\n\n# todo: should be SYSTEM_ANDROID but ! OS_LINUX\n",
        "Line" : 40,
        "CharPositionInLine" : 32
      },
      "6" : {
        "Text" : "# HOST_CPU\n",
        "Line" : 49,
        "CharPositionInLine" : 32
      },
      "7" : {
        "Text" : "# used for pnacl, emscripten, etc\n",
        "Line" : 57,
        "CharPositionInLine" : 32
      },
      "8" : {
        "Text" : "# FEAT_SHREC, FEAT_AREC, FEAT_DSPREC\n",
        "Line" : 59,
        "CharPositionInLine" : 32
      },
      "9" : {
        "Text" : "# BUILD_COMPILER\n",
        "Line" : 63,
        "CharPositionInLine" : 32
      },
      "10" : {
        "Text" : "## These default to host, but are used for cross so make sure not to contaminate\n\n#\n\n#\tCMAKE_SYSTEM\t\t${CMAKE_SYSTEM_NAME}-${CMAKE_SYSTEM_VERSION}.\n\n#\tCMAKE_SYSTEM_NAME\t\tCMAKE_HOST_SYSTEM_NAME\t\t\tuname -s\tLinux, Windows, and Darwin\n\n#\tCMAKE_SYSTEM_VERSION\tCMAKE_HOST_SYSTEM_VERSION\t\tuname -r\n\n#\tCMAKE_SYSTEM_PROCESSOR\tCMAKE_HOST_SYSTEM_PROCESSOR\t\tuname -p\n\n#\n\n#\n\n#\n\n#\tBOOL: CMAKE_HOST_UNIX\tCMAKE_HOST_WIN32  CMAKE_HOST_APPLE\n\n#\n\n#\n\n#\tCMAKE_LIBRARY_ARCHITECTURE\tCMAKE_<LANG>_LIBRARY_ARCHITECTURE\t<prefix>/lib/<arch>\n\n#\n\n#\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## strings are used to append to path/file names, and to filter multiple possibilities down to one \n\n#\t\tAMD64/x86_64:x64, i*86:x86, ppc/powerpc[64][b|l]e:ppc[64] etc \n\n#\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# todo: check MATCHES \"i.86\" ?\n",
        "Line" : 96,
        "CharPositionInLine" : 51
      },
      "13" : {
        "Text" : "#\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# has to be done after ppc64 obv\n",
        "Line" : 117,
        "CharPositionInLine" : 51
      },
      "19" : {
        "Text" : "#\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# todo: check , r* names?\n",
        "Line" : 121,
        "CharPositionInLine" : 53
      },
      "21" : {
        "Text" : "#\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# todo: check , r* names?\n",
        "Line" : 125,
        "CharPositionInLine" : 53
      },
      "23" : {
        "Text" : "#\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#message(\" - testing cmake host_os: \\\"${host_os}\\\"\")\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "## HOST_* is not TARGET_*  ;;  change ndc-e internal naming it's wrong , then change this  ;;\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# *FIXME* we might have to keep as OS_LINUX or add to full cleanup list :|\n",
        "Line" : 145,
        "CharPositionInLine" : 28
      },
      "27" : {
        "Text" : "# todo ios check, check compiler/arch?\n",
        "Line" : 161,
        "CharPositionInLine" : 31
      },
      "28" : {
        "Text" : "# GP UNIX MUST BE AFTER OTHER UNIX'ish options such as APPLE , it matches both \n",
        "Line" : 166,
        "CharPositionInLine" : 24
      },
      "29" : {
        "Text" : "# todo android check, just check android vars?\n",
        "Line" : 168,
        "CharPositionInLine" : 31
      },
      "30" : {
        "Text" : "#option(TARGET_NO_REC  BOOL \"\")\n\n#option(TARGET_NO_AREC BOOL \"\")\n\n#option(TARGET_NO_JIT  BOOL \"\")\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "## Dynarec avail on x86,x64,arm and aarch64 in arm.32 compat \n\n#\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "## Handle TARGET_* to FEAT_  *FIXME* stupid use one or the other and propogate : part of build cleanup , TARGET_ will only be for platform specifics and FEAT_ as OPTIONS\n\n#\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "######## Looks like something to delete, but if we're going to handle options here and NOT in libosd/lib* #########\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# FindNativeCompilers()\n\n## options BUILD_COMPILER { GCC, Clang, Intel, RealView? }\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#set(CMAKE_C_COMPILER clang)\n\n#set(CMAKE_C_COMPILER_TARGET ${triple})\n\n#set(CMAKE_CXX_COMPILER clang++)\n\n#set(CMAKE_CXX_COMPILER_TARGET ${triple})\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# option SUPPORT_X11\n\n# option FEAT_HAS_NIXPROF\n\n# option EMSCripten\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "#\n",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# AppleClang ffs\n",
        "Line" : 256,
        "CharPositionInLine" : 52
      },
      "43" : {
        "Text" : "#\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "#\n",
        "Line" : 261,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "## Setup some common flags \n\n#\n",
        "Line" : 268,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# AND NOT \"${NINJA}\" STREQUAL \"\")\n",
        "Line" : 273,
        "CharPositionInLine" : 78
      },
      "47" : {
        "Text" : "#*FIXME* check openmp on clang-cl\n",
        "Line" : 281,
        "CharPositionInLine" : 61
      },
      "48" : {
        "Text" : "# /U_HAS_STD_BYTE not working, have to use c++14 not 17 :|\n",
        "Line" : 283,
        "CharPositionInLine" : 33
      },
      "49" : {
        "Text" : "# AND NOT ${HOST_OS} EQUAL ${OS_WINDOWS}))\n",
        "Line" : 289,
        "CharPositionInLine" : 47
      },
      "50" : {
        "Text" : "# X86 family\n",
        "Line" : 301,
        "CharPositionInLine" : 10
      },
      "51" : {
        "Text" : "# -fcxx-exceptions\") ## xbyak needs exceptions\n",
        "Line" : 304,
        "CharPositionInLine" : 78
      },
      "52" : {
        "Text" : "# ${CMAKE_C_FLAGS}   -- these hold default VC flags for non VC Build ?\n",
        "Line" : 314,
        "CharPositionInLine" : 34
      },
      "53" : {
        "Text" : "# ${CMAKE_CXX_FLAGS}\n",
        "Line" : 315,
        "CharPositionInLine" : 38
      },
      "54" : {
        "Text" : "#if defined(TARGET_NAOMI)\n",
        "Line" : 319,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "#define DC_PLATFORM DC_PLATFORM_NAOMI\n\n#undef TARGET_NAOMI\n",
        "Line" : 320,
        "CharPositionInLine" : 1
      },
      "56" : {
        "Text" : "#endif\n",
        "Line" : 322,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "#if defined(TARGET_NO_NIXPROF)\n\n#define FEAT_HAS_NIXPROF 0\n\n#endif\n",
        "Line" : 326,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "#if defined(TARGET_NO_COREIO_HTTP)\n\n#define FEAT_HAS_COREIO_HTTP 0\n\n#endif\n",
        "Line" : 330,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "#if defined(TARGET_SOFTREND)    # need -fopenmp\n",
        "Line" : 334,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "#define FEAT_HAS_SOFTREND 1\n",
        "Line" : 335,
        "CharPositionInLine" : 1
      },
      "61" : {
        "Text" : "#endif\n",
        "Line" : 336,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# -DCMAKE_TOOLCHAIN_FILE=./cmake/devkitA64.cmake -DTARGET_NSW=ON\n",
        "Line" : 339,
        "CharPositionInLine" : 16
      },
      "63" : {
        "Text" : "# -DCMAKE_TOOLCHAIN_FILE=./cmake/{ps4sdk,clang_scei}.cmake -DTARGET_PS4=ON\n",
        "Line" : 352,
        "CharPositionInLine" : 16
      },
      "64" : {
        "Text" : "## last needed for __unix__ on eglplatform.h\n",
        "Line" : 357,
        "CharPositionInLine" : 97
      },
      "65" : {
        "Text" : "# Get rid of some warnings and internal dev testing\n",
        "Line" : 369,
        "CharPositionInLine" : 26
      },
      "66" : {
        "Text" : "# configure options for osd/ui \n\n# osd_default, osd_qt\n\n# ui_default, ui_sdl, ui_qt\n\n# USE_NATIVE , USE_SDL , USE_QT  -- these (can) define multiple\n",
        "Line" : 379,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "#option TARGET_NO_WEBUI\n",
        "Line" : 389,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "#option(BUILD_TESTS \"Build tests\" OFF)\t# todo: luserx0 this is your arena, you want tests add em\n",
        "Line" : 395,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "#add_definitions(-D=${})\n",
        "Line" : 417,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 70
    },
    "shell/cmake/devkitA64.cmake" : {
      "ObjectId" : "3eb80ff245bba5c88d8b3f44399d312c4942a44f",
      "LastModified" : "2019-04-12T20:59:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## devkitA64.cmake - devkitpro A64 cross-compile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# this one is important  // Add Platform/switch to use this name ...\n",
        "Line" : 3,
        "CharPositionInLine" : 29
      },
      "2" : {
        "Text" : "# this one not so much\n",
        "Line" : 6,
        "CharPositionInLine" : 30
      },
      "3" : {
        "Text" : "## specify the cross compiler\n\n#\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# where is the target environment\n",
        "Line" : 28,
        "CharPositionInLine" : 40
      },
      "5" : {
        "Text" : "# search for programs in the build host directories\n\n# for libraries and headers in the target directories\n",
        "Line" : 30,
        "CharPositionInLine" : 45
      },
      "CommentCount" : 6
    },
    "shell/cmake/ps4sdk.cmake" : {
      "ObjectId" : "d8cac168fdb33a97c0ed72e50a69b9285923dba6",
      "LastModified" : "2019-04-12T20:59:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## ps4sdk.cmake - devkitpro A64 cross-compile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# this one is important\n",
        "Line" : 3,
        "CharPositionInLine" : 31
      },
      "2" : {
        "Text" : "# this one not so much\n",
        "Line" : 5,
        "CharPositionInLine" : 30
      },
      "3" : {
        "Text" : "### This shit is very WIP ###\n\n#\n\n## TODO: Check for \n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# where is the target environment\n",
        "Line" : 59,
        "CharPositionInLine" : 41
      },
      "6" : {
        "Text" : "#\tset (PS4_link_dirs\n\n#\t\t\"${PS4TARGET}/lib\"\n\n#\t\t\"${PS4TARGET}/tauon/lib\"\n\n#\t)\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#LDFLAGS += -L $(TAUON_SDK_DIR)/lib -L $(SCE_ORBIS_SDK_DIR)/target/lib\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\tset (PS4_link_dirs\n\n#\t\t\"${PS4SDK}/lib\"\n\n#\t\t\"${PS4SDK}/tauon/lib\"\n\n#\t)\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# search for programs in the build host directories\n\n# for libraries and headers in the target directories\n",
        "Line" : 112,
        "CharPositionInLine" : 45
      },
      "13" : {
        "Text" : "### Add a helper to add libSce PREFIX and [_tau]*_stub[_weak]*.a SUFFIX\n\n#\n",
        "Line" : 122,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 14
    },
    "shell/cmake/toolchains/Linux-x86.cmake" : {
      "ObjectId" : "1cf67421827e4b2ed9be509f0cfe12cf73e75999",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "shell/emscripten/Makefile" : {
      "ObjectId" : "6f105419803625e9d29c9d4171d766949368506a",
      "LastModified" : "2018-09-15T19:28:13Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#NO_REC := 1\n\n#NO_REND := 1\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#AS=${CC_PREFIX}as\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#emscripten has all the basic libs, and egl, and sdl, built in\n",
        "Line" : 38,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 3
    },
    "shell/linux/Makefile" : {
      "ObjectId" : "6af3aed056331f25dd8dff34e5ea168de87af7b7",
      "LastModified" : "2019-04-12T20:59:39Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#NO_REC := 1\n\n#NO_REND := 1\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#USE_PULSEAUDIO := 1\n\n#USE_LIBAO := 1\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#    USE_JOYSTICK := 1\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Platform auto-detection\n\n# Can be overridden by using:\n\n#   make platform=x64\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Generic 32 bit x86 (a.k.a. i386/i486/i686)\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Generic 64 bit x86 (a.k.a. x64/AMD64/x86_64/Intel64/EM64T)\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Generic 32 bit ARMhf (a.k.a. ARMv7h)\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# LinCPP\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Raspberry Pi 2\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# BeagleBone Black\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Pandora\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# ODROIDs\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# ODROID-XU3, -XU3 Lite & -XU4\n",
        "Line" : 194,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Other ODROIDs\n",
        "Line" : 199,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# ODROID-C1 & -C1+\n",
        "Line" : 204,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# ODROID-U2, -U3, -X & -X2\n",
        "Line" : 208,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# GCW Zero\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Vero4K\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Windows\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# 7-Zip/LZMA settings (CHDv5)\n",
        "Line" : 268,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#-D NO_REND\n",
        "Line" : 282,
        "CharPositionInLine" : 72
      },
      "21" : {
        "Text" : "# these are also handled on core.mk, but ignored here\n",
        "Line" : 372,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# GLES on x11?\n",
        "Line" : 374,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#for desktop gl\n",
        "Line" : 379,
        "CharPositionInLine" : 22
      },
      "24" : {
        "Text" : "#softrend?\n",
        "Line" : 382,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#-D TARGET_NAOMI\n",
        "Line" : 399,
        "CharPositionInLine" : 34
      },
      "CommentCount" : 26
    },
    "shell/mac86/Makefile" : {
      "ObjectId" : "0818ec426143cbe429a51ed3ae6e3290f6d78bed",
      "LastModified" : "2018-09-15T19:28:13Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#WEBUI :=1 \n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-marm -march=armv7-a -mtune=cortex-a9 -mfpu=neon -mfloat-abi=softfp -funroll-loops\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-march=armv7-a -mfpu=neon -mfloat-abi=softfp\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-fprefetch-loop-arrays \n\n#-std=c++0x\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# CXXFLAGS += -D SUPPORT_X11\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#LIBS\t+= -lglapi\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# -lrt -lEGL -lGLESv2 #-lglslcompiler -lIMGegl -lpvr2d -lsrv_um\n",
        "Line" : 64,
        "CharPositionInLine" : 15
      },
      "7" : {
        "Text" : "# -lX11 -lXdmcp -lXau\n",
        "Line" : 65,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 8
    },
    "shell/nacl/Makefile" : {
      "ObjectId" : "733a7d538ce3837944e6f6dfc88954c6251168c3",
      "LastModified" : "2018-09-15T19:28:13Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#NO_REND := 1\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Project Build flags\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Build rules generated by macros from common.mk:\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The PNaCl workflow uses both an unstripped and finalized/stripped binary.\n\n# On NaCl, only produce a stripped binary for Release configs (not Debug).\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "shell/nacl_lin/Makefile" : {
      "ObjectId" : "bab2d63af7e5df0b10ce08396f24861d95072495",
      "LastModified" : "2018-09-15T19:28:13Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# nacl-simulating linux build\n\n# for debugging\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#NOT_ARM := 1\n\n#X64_REC := 1\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#NO_REC := 1\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#USE_PULSEAUDIO := 1\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#-m32\n",
        "Line" : 29,
        "CharPositionInLine" : 10
      },
      "5" : {
        "Text" : "#-marm -march=armv7-a -mtune=cortex-a9 -mfpu=neon -mfloat-abi=softfp -funroll-loops\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#-march=armv7-a -mfpu=neon -mfloat-abi=softfp\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#-fsingle-precision-constant \n",
        "Line" : 37,
        "CharPositionInLine" : 50
      },
      "8" : {
        "Text" : "#-fprefetch-loop-arrays \n\n#-std=c++0x\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# use system libs\n",
        "Line" : 65,
        "CharPositionInLine" : 11
      },
      "10" : {
        "Text" : "#-lX11\n",
        "Line" : 67,
        "CharPositionInLine" : 21
      },
      "11" : {
        "Text" : "#for desktop gl\n",
        "Line" : 87,
        "CharPositionInLine" : 19
      },
      "CommentCount" : 12
    }
  },
  "FileTypes" : {
    "CMAKE" : 8,
    "MAKEFILE" : 7,
    "ANT" : 1
  },
  "ElapsedTime" : 5946
}