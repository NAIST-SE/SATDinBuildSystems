{
  "Repository" : "18701571",
  "Revision" : "HEAD",
  "ObjectId" : "7cafd9126868535f44a82ef7735b35af8fb2c5b3",
  "CommitTime" : "2018-12-21T00:37:25Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "3deb8561ebf4e6b6738bcbbc0dfc1a66b5606d9c",
      "LastModified" : "2018-12-10T19:41:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FiberTaskingLib - A tasking library that uses fibers for efficient task switching\n\n#\n\n# This library was created as a proof of concept of the ideas presented by\n\n# Christian Gyrling in his 2015 GDC Talk 'Parallelizing the Naughty Dog Engine Using Fibers'\n\n#\n\n# http://gdcvault.com/play/1022186/Parallelizing-the-Naughty-Dog-Engine\n\n#\n\n# FiberTaskingLib is the legal property of Adrian Astley\n\n# Copyright Adrian Astley 2015 - 2018\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n# \n\n# http://www.apache.org/licenses/LICENSE-2.0\n\n# \n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n##\n",
        "Line" : 2,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Options\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Include Valgrind\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Define the guard page size\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# CTest needs to be included as soon as possible\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# C++11...\n",
        "Line" : 49,
        "CharPositionInLine" : 27
      },
      "7" : {
        "Text" : "#...is required...\n",
        "Line" : 50,
        "CharPositionInLine" : 36
      },
      "8" : {
        "Text" : "#...without compiler extensions like gnu++11\n",
        "Line" : 51,
        "CharPositionInLine" : 30
      },
      "9" : {
        "Text" : "# Add third party libs\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Warning flags\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Useless flag that hits a bunch of valid code\n",
        "Line" : 93,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Build FiberTaskingLib\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Build Tests\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Build benchmarks\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Linter scripts\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "benchmarks/CMakeLists.txt" : {
      "ObjectId" : "08aff080d3c11fca90297a030177d6ab40bbd928",
      "LastModified" : "2018-01-05T02:40:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FiberTaskingLib - A tasking library that uses fibers for efficient task switching\n\n#\n\n# This library was created as a proof of concept of the ideas presented by\n\n# Christian Gyrling in his 2015 GDC Talk 'Parallelizing the Naughty Dog Engine Using Fibers'\n\n#\n\n# http://gdcvault.com/play/1022186/Parallelizing-the-Naughty-Dog-Engine\n\n#\n\n# FiberTaskingLib is the legal property of Adrian Astley\n\n# Copyright Adrian Astley 2015 - 2018\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n# \n\n# http://www.apache.org/licenses/LICENSE-2.0\n\n# \n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n##\n",
        "Line" : 2,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "cmake/CheckAndAddFlag.cmake" : {
      "ObjectId" : "887e14b7dd11c7271eb6d8d6c9b50471d87253f8",
      "LastModified" : "2018-12-10T19:41:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Function to add flag if compiler supports it\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sanitize flag to become cmake variable name\n",
        "Line" : 5,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "cmake/GTestAddTests.cmake" : {
      "ObjectId" : "43e3625259d88c0e01da2a7e5b314e8c2eed8484",
      "LastModified" : "2018-12-10T19:41:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindGTest\n\n# ---------\n\n#\n\n# If you would like each Google test to show up in CTest as a test you\n\n# may use the following macro.  NOTE: It will slow down your tests by\n\n# running an executable for each test and test fixture.  You will also\n\n# have to rerun CMake after adding or removing tests or test fixtures.\n\n#\n\n# GTEST_ADD_TESTS(executable extra_args ARGN)\n\n#\n\n# ::\n\n#\n\n#     executable = The path to the test executable\n\n#     extra_args = Pass a list of extra arguments to be passed to\n\n#                  executable enclosed in quotes (or \"\" for none)\n\n#     ARGN =       A list of source files to search for tests & test\n\n#                  fixtures. Or AUTO to find them from executable target.\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#   Example:\n\n#      set(FooTestArgs --foo 1 --bar 2)\n\n#      add_executable(FooTest FooUnitTest.cc)\n\n#      GTEST_ADD_TESTS(FooTest \"${FooTestArgs}\" AUTO)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2009 Kitware, Inc.\n\n# Copyright 2009 Philip Lowman <philip@yhbt.com>\n\n# Copyright 2009 Daniel Blezek <blezek@gmail.com>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n\n#\n\n# Thanks to Daniel Blezek <blezek@gmail.com> for the GTEST_ADD_TESTS code\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CMake 4.1 and greater allow you to use if(test)\n\n# If we don't explicitly set the policy, newer cmakes throw a warning\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# obtain sources used for building that executable\n",
        "Line" : 58,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Parameterized tests have a different signature for the filter\n",
        "Line" : 69,
        "CharPositionInLine" : 10
      },
      "CommentCount" : 5
    },
    "cmake/SetSourceGroup.cmake" : {
      "ObjectId" : "b02f8fdadce91035f837a22686fc128a50ab6fbb",
      "LastModified" : "2018-12-10T19:41:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright Adrian Astley 2016\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/CMakeLists.txt" : {
      "ObjectId" : "f7f2efd64258fd67d5ce296b30ce84396f70fcc8",
      "LastModified" : "2018-12-10T19:41:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FiberTaskingLib - A tasking library that uses fibers for efficient task switching\n\n#\n\n# This library was created as a proof of concept of the ideas presented by\n\n# Christian Gyrling in his 2015 GDC Talk 'Parallelizing the Naughty Dog Engine Using Fibers'\n\n#\n\n# http://gdcvault.com/play/1022186/Parallelizing-the-Naughty-Dog-Engine\n\n#\n\n# FiberTaskingLib is the legal property of Adrian Astley\n\n# Copyright Adrian Astley 2015 - 2018\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n# \n\n# http://www.apache.org/licenses/LICENSE-2.0\n\n# \n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n##\n",
        "Line" : 2,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Unix systems need to be explicitly linked to the threading lib\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Figure out the processor architecture\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Link all the sources into one\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Remove the prefix\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "77593cc2a78c89f3856119cdfb71ecd438dc37aa",
      "LastModified" : "2018-12-10T19:41:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FiberTaskingLib - A tasking library that uses fibers for efficient task switching\n\n#\n\n# This library was created as a proof of concept of the ideas presented by\n\n# Christian Gyrling in his 2015 GDC Talk 'Parallelizing the Naughty Dog Engine Using Fibers'\n\n#\n\n# http://gdcvault.com/play/1022186/Parallelizing-the-Naughty-Dog-Engine\n\n#\n\n# FiberTaskingLib is the legal property of Adrian Astley\n\n# Copyright Adrian Astley 2015 - 2018\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n# \n\n# http://www.apache.org/licenses/LICENSE-2.0\n\n# \n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n##\n",
        "Line" : 2,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Link all the sources into one\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "third_party/CMakeLists.txt" : {
      "ObjectId" : "34bc8f3137da3b7d4d5eba0c94e0623a520205a5",
      "LastModified" : "2018-12-10T19:41:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FiberTaskingLib - A tasking library that uses fibers for efficient task switching\n\n#\n\n# This library was created as a proof of concept of the ideas presented by\n\n# Christian Gyrling in his 2015 GDC Talk 'Parallelizing the Naughty Dog Engine Using Fibers'\n\n#\n\n# http://gdcvault.com/play/1022186/Parallelizing-the-Naughty-Dog-Engine\n\n#\n\n# FiberTaskingLib is the legal property of Adrian Astley\n\n# Copyright Adrian Astley 2015 - 2018\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n# \n\n# http://www.apache.org/licenses/LICENSE-2.0\n\n# \n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n##\n",
        "Line" : 2,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# GTest\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Boost Context\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Nonius\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "third_party/boost_context/CMakeLists.txt" : {
      "ObjectId" : "4eab8f724640e9c03cbbca231bb2113e5d322f52",
      "LastModified" : "2018-12-10T19:41:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##          Copyright Adrian Astley 2016 - 2018\n\n## Distributed under the Boost Software License, Version 1.0.\n\n##    (See accompanying file LICENSE_1_0.txt or copy at\n\n##          http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Determine the target architecture\n\n#\n\n# Taken from Richard Maxwell's 'sewing' library: https://github.com/JodiTheTigger/sewing\n\n# (MIT license)\n\n#\n\n# Enable the assemblers\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# arm requires aapcs. So we have to check if arm already set the calling convention\n",
        "Line" : 62,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# arm requires aapcs. So we have to check if arm already set the calling convention\n",
        "Line" : 78,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 4
    },
    "third_party/gtest/CMakeLists.txt" : {
      "ObjectId" : "5c392e2cbc239e8aa980e729253021b50482c2c1",
      "LastModified" : "2018-12-10T19:41:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# CMake build script for Google Test.\n\n#\n\n# To run the tests for Google Test itself on Linux, use 'make test' or\n\n# ctest.  You can select which tests to run using 'ctest -R regex'.\n\n# For more options, run 'ctest --help'.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BUILD_SHARED_LIBS is a standard CMake variable, but we declare it here to\n\n# make it prominent in the GUI.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# When other libraries are using a shared version of runtime libraries,\n\n# Google Test also has to use one.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Defines pre_project_set_up_hermetic_build() and set_up_hermetic_build().\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "########################################################################\n\n#\n\n# Project-wide settings\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Name of the project.\n\n#\n\n# CMake files in this project can refer to the root source directory\n\n# as ${gtest_SOURCE_DIR} and to the root binary directory as\n\n# ${gtest_BINARY_DIR}.\n\n# Language \"C\" is required for find_package(Threads).\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Visibility\n",
        "Line" : 55,
        "CharPositionInLine" : 20
      },
      "7" : {
        "Text" : "# Define helper functions and macros used by Google Test.\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Defined in internal_utils.cmake.\n",
        "Line" : 71,
        "CharPositionInLine" : 30
      },
      "9" : {
        "Text" : "# Where Google Test's .h files can be found.\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Summary of tuple support for Microsoft Visual Studio:\n\n# Compiler    version(MS)  version(cmake)  Support\n\n# ----------  -----------  --------------  -----------------------------\n\n# <= VS 2010  <= 10        <= 1600         Use Google Tests's own tuple.\n\n# VS 2012     11           1700            std::tr1::tuple + _VARIADIC_MAX=10\n\n# VS 2013     12           1800            std::tr1::tuple\n\n# VS 2015     14           1900            std::tuple\n\n# VS 2017     15           >= 1910         std::tuple\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "########################################################################\n\n#\n\n# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Google Test libraries.  We build them using more strict warnings than what\n\n# are used for other targets, to ensure that gtest can be compiled by a user\n\n# aggressive about warnings.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# If the CMake version supports it, attach header directory information\n\n# to the targets for when we are part of a parent build (ie being pulled\n\n# in via add_subdirectory() rather than being a standalone build).\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "########################################################################\n\n#\n\n# Install rules\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# configure and install pkgconfig files\n",
        "Line" : 121,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "########################################################################\n\n#\n\n# Samples on how to link user tests with gtest or gtest_main.\n\n#\n\n# They are not built by default.  To build them, set the\n\n# gtest_build_samples option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_samples=ON flag when running cmake.\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "########################################################################\n\n#\n\n# Google Test's own tests.\n\n#\n\n# You can skip this section if you aren't interested in testing\n\n# Google Test itself.\n\n#\n\n# The tests are not built by default.  To build them, set the\n\n# gtest_build_tests option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_tests=ON flag when running cmake.\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# This must be set in the root directory for the tests to be run by\n\n# 'make test' or ctest.\n",
        "Line" : 167,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "############################################################\n\n# C++ tests built with standard compiler flags.\n",
        "Line" : 171,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "############################################################\n\n# C++ tests built with non-standard compiler flags.\n",
        "Line" : 202,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 205,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# 1600 is Visual Studio 2010.\n",
        "Line" : 234,
        "CharPositionInLine" : 43
      },
      "23" : {
        "Text" : "# Visual Studio 2010, 2012, and 2013 define symbols in std::tr1 that\n\n# conflict with our own definitions. Therefore using our own tuple does not\n\n# work on those compilers.\n",
        "Line" : 235,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "############################################################\n\n# Python tests.\n",
        "Line" : 249,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Visual Studio .NET 2003 does not support STL with exceptions disabled.\n",
        "Line" : 255,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# 1310 is Visual Studio .NET 2003\n",
        "Line" : 256,
        "CharPositionInLine" : 46
      },
      "27" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 292,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 28
    },
    "third_party/gtest/cmake/internal_utils.cmake" : {
      "ObjectId" : "c54bc94fe298fe16d4513315f19ed82beacaa6ff",
      "LastModified" : "2018-12-10T19:41:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Defines functions and macros useful for building Google Test and\n\n# Google Mock.\n\n#\n\n# Note:\n\n#\n\n# - This file will be run twice when building Google Mock (once via\n\n#   Google Test's CMakeLists.txt, and once via Google Mock's).\n\n#   Therefore it shouldn't have any side effects other than defining\n\n#   the functions and macros.\n\n#\n\n# - The functions/macros defined in this file may depend on Google\n\n#   Test and Google Mock's option() definitions, and thus must be\n\n#   called *after* the options have been defined.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Tweaks CMake's default compiler/linker settings to suit Google Test's needs.\n\n#\n\n# This must be a macro(), as inside a function string() can only\n\n# update variables in the function scope.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For MSVC, CMake sets certain flags to defaults we want to override.\n\n# This replacement code is taken from sample in the CMake Wiki at\n\n# http://www.cmake.org/Wiki/CMake_FAQ#Dynamic_Replace.\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# When Google Test is built as a shared library, it should also use\n\n# shared runtime libraries.  Otherwise, it may end up with multiple\n\n# copies of runtime library data in different modules, resulting in\n\n# hard-to-find crashes. When it is built as a static library, it is\n\n# preferable to use CRT as static libraries, as we don't have to rely\n\n# on CRT DLLs being available. CMake always defaults to using shared\n\n# CRT libraries, so we override that default here.\n",
        "Line" : 28,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# We prefer more strict warning checking for building Google Test.\n\n# Replaces /W3 with /W4 in defaults.\n",
        "Line" : 38,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Defines the compiler/linker flags used to build Google Test and\n\n# Google Mock.  You can tweak these definitions to suit your need.  A\n\n# variable's value is empty before it's explicitly assigned to.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Note: pthreads on MinGW is not supported, even if available\n\n# instead, we use windows threading primitives\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Defines CMAKE_USE_PTHREADS_INIT and CMAKE_THREAD_LIBS_INIT.\n",
        "Line" : 53,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Newlines inside flags variables break CMake's NMake generator.\n\n# TODO(vladl@google.com): Add -RTCs and -RTCu to debug builds.\n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# 1400 is Visual Studio 2005\n",
        "Line" : 66,
        "CharPositionInLine" : 33
      },
      "10" : {
        "Text" : "# Suppress spurious warnings MSVC 7.1 sometimes issues.\n\n# Forcing value to bool.\n",
        "Line" : 67,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# Copy constructor and assignment operator could not be generated.\n",
        "Line" : 70,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# Compatibility warnings not applicable to Google Test.\n\n# Resolved overload was found by argument-dependent lookup.\n",
        "Line" : 72,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# 1500 is Visual Studio 2008\n",
        "Line" : 76,
        "CharPositionInLine" : 33
      },
      "14" : {
        "Text" : "# Conditional expression is constant.\n\n# When compiling with /W4, we get several instances of C4127\n\n# (Conditional expression is constant). In our code, we disable that\n\n# warning on a case-by-case basis. However, on Visual Studio 2005,\n\n# the warning fires on std::list. Therefore on that compiler and earlier,\n\n# we disable the warning project-wide.\n",
        "Line" : 77,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# 1700 is Visual Studio 2012.\n",
        "Line" : 85,
        "CharPositionInLine" : 39
      },
      "16" : {
        "Text" : "# Suppress \"unreachable code\" warning on VS 2012 and later.\n\n# http://stackoverflow.com/questions/3232669 explains the issue.\n",
        "Line" : 86,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# Until version 4.3.2, GCC doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 100,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Sun Pro doesn't provide macros to indicate whether exceptions and\n\n# RTTI are enabled, so we define GTEST_HAS_* explicitly.\n",
        "Line" : 108,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# CMake 2.8 changes Visual Age's compiler ID to \"XL\".\n",
        "Line" : 114,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Until version 9.0, Visual Age doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 117,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# RTTI can not be disabled in HP aCC compiler.\n",
        "Line" : 125,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# The pthreads library is available and allowed?\n",
        "Line" : 129,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# For building gtest's own tests and samples.\n",
        "Line" : 137,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# For building the gtest libraries.\n",
        "Line" : 145,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# type can be either STATIC or SHARED to denote a static or shared library.\n\n# ARGN refers to additional arguments after 'cxx_flags'.\n",
        "Line" : 152,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "########################################################################\n\n#\n\n# Helper functions for creating build targets.\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# cxx_executable_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ executable that depends on the given libraries and\n\n# is built from the given source files with the given compiler flags.\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# 1700 is Visual Studio 2012.\n",
        "Line" : 186,
        "CharPositionInLine" : 48
      },
      "30" : {
        "Text" : "# BigObj required for tests.\n",
        "Line" : 187,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# To support mixing linking in static and dynamic libraries, link each\n\n# library in with an extra call to target_link_libraries.\n",
        "Line" : 200,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# cxx_executable(name dir lib srcs...)\n\n#\n\n# creates a named target that depends on the given libs and is built\n\n# from the given source files.  dir/name.cc is implicitly included in\n\n# the source file list.\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Sets PYTHONINTERP_FOUND and PYTHON_EXECUTABLE.\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# cxx_test_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ test that depends on the given libs and is built\n\n# from the given source files with the given compiler flags.\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# cxx_test(name libs srcs...)\n\n#\n\n# creates a named test target that depends on the given libs and is\n\n# built from the given source files.  Unlike cxx_test_with_flags,\n\n# test/name.cc is already implicitly included in the source file list.\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# py_test(name)\n\n#\n\n# creates a Python test with the given name whose main module is in\n\n# test/name.py.  It does nothing if Python is not installed.\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Multi-configuration build generators as for Visual Studio save\n\n# output in a subdirectory of CMAKE_CURRENT_BINARY_DIR (Debug,\n\n# Release etc.), so we have to provide it here.\n",
        "Line" : 247,
        "CharPositionInLine" : 1
      },
      "38" : {
        "Text" : "# Single-configuration build generators like Makefile generators\n\n# don't have subdirs below CMAKE_CURRENT_BINARY_DIR.\n",
        "Line" : 255,
        "CharPositionInLine" : 1
      },
      "39" : {
        "Text" : "# ${CMAKE_CURRENT_BINARY_DIR} is known at configuration time, so we can\n\n# directly bind it from cmake. ${CTEST_CONFIGURATION_TYPE} is known\n\n# only at ctest runtime (by calling ctest -c <Configuration>), so\n\n# we have to escape $ to delay variable substitution here.\n",
        "Line" : 263,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 40
    },
    "third_party/nonius/CMakeLists.txt" : {
      "ObjectId" : "dd43c9177ef79007e8f1993aabc2e931a00c70a4",
      "LastModified" : "2018-12-10T19:41:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FiberTaskingLib - A tasking library that uses fibers for efficient task switching\n\n#\n\n# This library was created as a proof of concept of the ideas presented by\n\n# Christian Gyrling in his 2015 GDC Talk 'Parallelizing the Naughty Dog Engine Using Fibers'\n\n#\n\n# http://gdcvault.com/play/1022186/Parallelizing-the-Naughty-Dog-Engine\n\n#\n\n# FiberTaskingLib is the legal property of Adrian Astley\n\n# Copyright Adrian Astley 2015 - 2018\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n# \n\n# http://www.apache.org/licenses/LICENSE-2.0\n\n# \n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n##\n",
        "Line" : 2,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "CMAKE" : 12
  },
  "ElapsedTime" : 840
}