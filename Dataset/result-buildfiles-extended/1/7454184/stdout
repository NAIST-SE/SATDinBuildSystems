{
  "Repository" : "7454184",
  "Revision" : "HEAD",
  "ObjectId" : "2e0d978f96c2377ef3d26b80c17f38d2804f496c",
  "CommitTime" : "2017-11-04T02:59:58Z",
  "Files" : {
    "build.xml" : {
      "ObjectId" : "d2531443c8fa7da2222554ea3ccb55fbe5ba5623",
      "LastModified" : "2015-09-08T20:13:38Z",
      "FileType" : "ANT",
      "CommentCount" : 0
    },
    "examples/20newsgroups/20news.sparse/Makefile" : {
      "ObjectId" : "f506bfb39c3a7de01fa8f2e2e4beeb706e01d79d",
      "LastModified" : "2014-12-19T19:56:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Configuration: list your .cfacts files here.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configuration: if you want to package up the sparsegraph in a directory, name it here.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Configuration: we can do inverse relations without having to store\n\n# double the cfacts data.  just touch the .cfacts file for the\n\n# inverted functor, and list the pair here, forward functor first:\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Then be sure to 'make inverse' before you 'make' the whole sparsegraph.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# TYPES definition:\n\n# drop .cfacts from SOURCES\n\n# foreach elt:\n\n## change _ to space\n\n## get the first word\n\n## drop the first word+_\n\n# change _ to space\n\n# sort and drop duplicates\n\n# add .i to each elt\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "##*.}; \\\n\tawk 'BEGIN{FS=OFS=\"\\t\"}{print $$2,$$1,$$3}' $${FWD}.index | sort -n > $${REV}.index; \\\n\tdone\n",
        "Line" : 34,
        "CharPositionInLine" : 9
      },
      "6" : {
        "Text" : "# double-colon rule: execute none, any, any set, or all rules, independently, by dependency\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#rows\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#columns\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#entries\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "examples/20newsgroups/Makefile" : {
      "ObjectId" : "3e3e3a9ff294f45da5d7b97edcc80b6f2060d6a7",
      "LastModified" : "2014-12-19T19:56:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "### DATASET\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### TARGETS\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/Makefile" : {
      "ObjectId" : "9f76017460f24443a1d0a659014c6ab8ab724ea1",
      "LastModified" : "2014-10-14T17:24:06Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "### DATASETS\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### TARGETS\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/adagrad/Makefile" : {
      "ObjectId" : "6364930c82b9b0344c3d053872bfb9608bef0eb8",
      "LastModified" : "2015-08-19T18:05:16Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "### DATASET\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/cora/Makefile" : {
      "ObjectId" : "44866067badf2d54e59f15d1ccbb66c58e73da26",
      "LastModified" : "2015-12-09T18:07:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "### PARAMETERS ###\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### DATASET\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "### TARGETS\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "### DATASET BUILDING\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "examples/textcat-ssl/Makefile" : {
      "ObjectId" : "6e8f795c03174d93fd1ce54e22d49ffd4e6e5cce",
      "LastModified" : "2017-11-04T02:59:58Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#keep things fast\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#ADAGRAD_TRAIN=--trainer adagrad --srw adagrad:fix=f~n,g~n,~y\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#############################################################################\n\n# spearmint parameters\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##############################################################################\n\n# foo-inputs: \n\n#    all the --programFiles inputs other than the wam\n\n#    a programFiles.txt \n\n#\n\n# foo-$PARAMS-dataset:\n\n#    train.examples\n\n#    test.examples\n\n#    whatever proppr droppings are there, based on foo-inputs\n\n#    eval.log and final line acc.txt\n\n#\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##############################################################################\n\n# collect the input files needed to run proppr for an experiment:\n\n#   alltrain-examples.txt, test-examples.txt, labels.txt, corpus.graph, near.graph \n\n#   *-examples.txt files: lines are docid <TAB> label\n\n#   labels.txt files: one label per line\n\n#   corpus.graph, near.graph files: define hasWord(docid,word) and near(docid,docid), resp\n\n#   also creates labels.cfacts, mutex.cfacts and seeds.graph\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "##############################################################################\n\n# experiments - pseudo targets\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# produce the a training and test set of examples\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7,
      "Errorlog" : "line 89:1 token recognition error at: '\\c'\nline 90:1 token recognition error at: '\\c'\nline 99:1 token recognition error at: '\\c'\nline 117:1 token recognition error at: '\\c'\n"
    },
    "examples/textcat-ssl/raw-getoor/Makefile" : {
      "ObjectId" : "5f1e4f2d18bca08545d16ad05558005198c3291c",
      "LastModified" : "2017-11-04T02:59:58Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "examples/textcattoy/Makefile" : {
      "ObjectId" : "f566eef41d2d46f8ea63d45fc71e47fbfc66ac97",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "### DATASET\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### TARGETS\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/top-1000-near-google/Makefile" : {
      "ObjectId" : "8c9736dd94fa56a287b23614e952f8862dc0e920",
      "LastModified" : "2015-08-19T18:05:16Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "### DATASET\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### TARGETS\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/top-1M-near-X/Makefile" : {
      "ObjectId" : "d170a386e8405b41b33db479d1d6830b5623a115",
      "LastModified" : "2015-12-09T18:07:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "### DATASET\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#${NAME}-recursive.crules:${NAME}.cfacts:${NAME}-fact.graph\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "### TARGETS\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#results.txt: $(foreach name,$(NAMES),$(addsuffix .results.txt,pre.$(name).train post.$(name).train pre.$(name).test post.$(name).test))\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "examples/webkb/Makefile" : {
      "ObjectId" : "1834aada497eb761de404b9eccf1bb1c178f1100",
      "LastModified" : "2016-04-01T16:52:24Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "### DATASET\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### TARGETS\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#.PRECIOUS: train_no_%.data.cooked %.params\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "examples/weibo/Makefile" : {
      "ObjectId" : "7c9a3d177ffd7d7bcecda1d0cac19c879673eda1",
      "LastModified" : "2015-12-09T18:07:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#APR=0.0001:0.1\n\n#L2PLOCAL=l2plocal:0.001:2\n\n#L2P=l2p:0.001:2\n\n#SRW1=$(L2P)\n\n#ifeq ($(SRW),l2plocal)\n\n#SRW1=$(L2PLOCAL)\n\n#else\n\n#SRW1=$(L2P)\n\n#endif\n\n#WT=tanh\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#EPOCHS=10\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#PR=dpr:0.0001:0.1:adjust\n\n#PR=ppr:10\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##############################################################################\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##### generating data files\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "##### compiling the logic program\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\tL=`pwd`; cd ${PROPPR}; python /src/scripts/compile.py $$L\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "##### experiments\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\t$(JM).Experiment \\\n#\t--programFiles $(P):all.cfacts --apr $(APR) --prover $(PR) --epochs $(EPOCHS) \\\n#\t--strict --train train.data --test $*.data --srw $(SRW) --grounded train.grounded \\\n#\t--params train.params --traceLosses --threads $(TH) --weightingScheme $(WT) --queryAnswerer qa:unnorm \\\n#\t\t\t --solutions $*.answers --queries $*.data --notest --trainer ${TRAINER} --tester ${TESTER}\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\t${SCRIPTS}/scoring.pl $*.answers $*.data > $*.results; \\\n#\tcat $*.results; \\\n\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#%.train %.params: %.data $(P)\n\n#\t$(JM).Trainer \\\n#\t\t\t --programFiles $(P):all.cfacts --prover $(PR) --epochs $(EPOCHS) \\\n#\t\t\t --strict --train $*.data --test $*.data --srw $(SRW) --output train.grounded \\\n#\t\t\t --params train.params --traceLosses --threads $(TH) --weightingScheme $(WT) --queryAnswerer qa:unnorm \\\n#\t\t\t --solutions $*.answers --queries $*.data --notest --trainer ${TRAINER} --tester ${TESTER}\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#%.query: %.data train.params\n\n#\t$(JM).QueryAnswerer \\\n#\t\t\t --programFiles $(P):all.cfacts --prover $(PR) \\\n#\t\t\t --strict --srw $(SRW) --output $*.answers \\\n#\t\t\t --params train.params --threads $(TH) --weightingScheme $(WT) --queries $*.data --unnormalized; \\\n#\t${SCRIPTS}/scoring.pl $*.answers $*.data > $*.results\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#\tcat $*.results; \\\n\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "sparseGraphTools/Makefile" : {
      "ObjectId" : "d75a5a4f8fd430795f7928c3211160714f44a0c0",
      "LastModified" : "2015-08-19T18:05:16Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Configuration: list your .cfacts files here. Use the naming convention functor_arg1type_arg2type.cfacts.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configuration: if you want to package up the sparsegraph in a directory, name it here.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Configuration: we can do inverse relations without having to store\n\n# double the cfacts data.  Just touch the .cfacts file for the\n\n# inverted functor, and list the pair here as\n\n# forwardfunctor_arg1type_arg2type.inversefunctor_arg1type_arg2type\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Then be sure to 'make inverse' before you 'make' the whole sparsegraph.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# TYPES definition:\n\n# drop .cfacts from SOURCES\n\n# foreach elt:\n\n## change _ to space\n\n## get the first word\n\n## drop the first word+_\n\n# change _ to space\n\n# sort and drop duplicates\n\n# add .i to each elt\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "##*.}; \\\n\tawk 'BEGIN{FS=OFS=\"\\t\"}{print $$2,$$1,$$3}' $${FWD}.index | sort -n > $${REV}.index; \\\n\tdone\n",
        "Line" : 35,
        "CharPositionInLine" : 9
      },
      "6" : {
        "Text" : "# double-colon rule: execute none, any, any set, or all rules, independently, by dependency\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#rows\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#columns\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#entries\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "theano/textcat/Makefile" : {
      "ObjectId" : "47ea25675b5b45f90cf8c75b71b508a481a1a2ec",
      "LastModified" : "2016-04-01T16:52:24Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "theano/wordsimilarity/Makefile" : {
      "ObjectId" : "241bf42c01fc6f00d1f5b8cabfcc853a560c1c66",
      "LastModified" : "2016-04-01T16:52:24Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tutorial/cora/Makefile" : {
      "ObjectId" : "ecadbec8e6729a84ea84b6ec863b527875ef14bf",
      "LastModified" : "2016-04-01T16:52:24Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "### DATASET BUILDING\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tutorial/labelprop/Makefile" : {
      "ObjectId" : "30ec2227023ac2497f7b0c1cf97ea9b8842fb0c8",
      "LastModified" : "2016-04-01T16:52:24Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tutorial/structureLearning/Makefile" : {
      "ObjectId" : "3fbfa5a5f41a783c733cbaee2e4202f6ba257652",
      "LastModified" : "2016-04-01T16:52:24Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# single-iteration structure learning\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# iterated structure learning\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tutorial/textcat/Makefile" : {
      "ObjectId" : "1eada9133362e2e4e04280d5649b7904769bfe00",
      "LastModified" : "2016-04-01T16:52:24Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 19,
    "ANT" : 1
  },
  "ElapsedTime" : 2416
}