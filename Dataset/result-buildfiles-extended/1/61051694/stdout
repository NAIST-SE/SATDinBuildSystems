{
  "Repository" : "61051694",
  "Revision" : "HEAD",
  "ObjectId" : "1287329ddf48d8a8982a7d0774323a492895beda",
  "CommitTime" : "2019-04-03T14:05:32Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "991d75e8c6e1782a4b7ff74dfeb98f8b4283a192",
      "LastModified" : "2018-07-23T14:28:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Minimum version required\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Project name\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Export compile commands\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set the output folder where your program will be created\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Some non-standard CMake modules\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# include(FindMKL)  # Find MKL module\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Detect operating system\n\n# ----------------------------------------------\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Set options\n\n# ----------------------------------------------\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Are unittests generated?\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Is the code generated for embedded platforms?\n\n#   1 :   Yes. Matrix update not allowed.\n\n#   2 :   Yes. Matrix update allowed.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Is printing enabled?\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Is profiling enabled?\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Is user interrupt enabled?\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Use floats instead of integers\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Use long integers for indexing\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Add code coverage\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Linear solvers dependencies\n\n# ---------------------------------------------\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Generate header file with the global options\n\n# ---------------------------------------------\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Set Compiler flags\n\n# ----------------------------------------------\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# -fPIC\n",
        "Line" : 109,
        "CharPositionInLine" : 41
      },
      "20" : {
        "Text" : "# Add specific flag for debug\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Include math\n",
        "Line" : 125,
        "CharPositionInLine" : 77
      },
      "22" : {
        "Text" : "# Include real time library in linux\n",
        "Line" : 126,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# Set sources\n\n# ----------------------------------------------\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# If embedded is enabled, do not use cs, polish\n",
        "Line" : 169,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# if we are building the Python interface, let's look for Python\n\n# and set some options\n\n# -----------------------------------------------------------------\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Python include directories need to be passed by the python compilation process\n",
        "Line" : 206,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# Include directories for Python headers\n",
        "Line" : 211,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# Pass PYTHON flag to C compiler\n",
        "Line" : 214,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# Disable unittests\n",
        "Line" : 218,
        "CharPositionInLine" : 8
      },
      "30" : {
        "Text" : "# if we are building the Matlab interface, let's look for Matlab\n\n# and set some options\n\n# -----------------------------------------------------------------\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Include directories for Matlab headers\n",
        "Line" : 237,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# Pass MATLAB flag to C compiler\n",
        "Line" : 242,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# Insist on the pre 2018 complex data API\n\n# so that mxGetPr will work correctly\n",
        "Line" : 245,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# Disable unittests\n",
        "Line" : 252,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : "# if we are building the R interface, let's look for R\n\n# and set some options\n\n# -----------------------------------------------------------------\n",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Look for R libraries\n",
        "Line" : 266,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "# Include directories for R headers\n",
        "Line" : 277,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# Pass R_LANG flag to C compiler\n",
        "Line" : 280,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "# Disable unittests\n",
        "Line" : 284,
        "CharPositionInLine" : 8
      },
      "40" : {
        "Text" : "# Create Static Library\n\n# ----------------------------------------------\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Add linear system solvers cumulative library\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Static library\n",
        "Line" : 298,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Give same name to static library output\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Include directories for linear system solvers\n",
        "Line" : 303,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Declare include directories for the cmake exported target\n",
        "Line" : 306,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Install Static Library\n\n# ----------------------------------------------\n",
        "Line" : 311,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Install Headers\n\n# ----------------------------------------------\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# If we are building Python/Matlab/R interface:\n\n#   - do not build shared library\n\n#   - do not build demo\n",
        "Line" : 334,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Create osqp shared library\n\n# NB: Add all the linear system solvers here\n",
        "Line" : 338,
        "CharPositionInLine" : 4
      },
      "50" : {
        "Text" : "# Include directories for linear system solvers\n",
        "Line" : 342,
        "CharPositionInLine" : 4
      },
      "51" : {
        "Text" : "# Declare include directories for the cmake exported target\n",
        "Line" : 345,
        "CharPositionInLine" : 4
      },
      "52" : {
        "Text" : "# Install osqp shared library\n",
        "Line" : 350,
        "CharPositionInLine" : 4
      },
      "53" : {
        "Text" : "# Create demo executable (linked to static library)\n",
        "Line" : 357,
        "CharPositionInLine" : 4
      },
      "54" : {
        "Text" : "# Create CMake packages for the build directory\n\n# ----------------------------------------------\n",
        "Line" : 363,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# Create CMake packages for the install directory\n\n# ----------------------------------------------\n",
        "Line" : 376,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# Add uninstall command\n\n# ----------------------------------------------\n",
        "Line" : 391,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# Add testing\n\n# ----------------------------------------------\n\n# Add custom command to generate tests\n",
        "Line" : 405,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# Check scipy version for sparse.random functionalities\n",
        "Line" : 421,
        "CharPositionInLine" : 4
      },
      "59" : {
        "Text" : "# Add test_headers and codegen_test_headers\n",
        "Line" : 431,
        "CharPositionInLine" : 4
      },
      "60" : {
        "Text" : "# Generating tests.stamp so that the test data are not always generated\n\n# set(data_timestamp ${PROJECT_SOURCE_DIR}/tests/tests_data.stamp)\n",
        "Line" : 434,
        "CharPositionInLine" : 4
      },
      "61" : {
        "Text" : "# Direct linear solver testing\n",
        "Line" : 444,
        "CharPositionInLine" : 4
      },
      "62" : {
        "Text" : "# Add testing\n",
        "Line" : 454,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 63
    },
    "configure/cmake/FindPythonModule.cmake" : {
      "ObjectId" : "f890d4f8f85cba84d775429b5af5f101914b96e4",
      "LastModified" : "2017-09-15T16:20:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find python module and version\n\n#\n\n# It sets the variables (given module called MODULE)\n\n# unless MODULE is __FUTURE__. In that case\n\n# it only checks if it has been found.\n\n#\n\n# MODULE_FOUND               - has the module been found?\n\n# MODULE_VERSION             - module version as a string\n\n# MODULE_VERSION_MAJOR       - major version number\n\n# MODULE_VERSION_MINOR       - minor version number\n\n# MODULE_VERSION_PATCH       - patch version number\n\n# MODULE_VERSION_DECIMAL     - e.g. version 1.6.1 is 10601\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Write module in upper and lower case\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#\n\n# if(ARGC GREATER 1 AND ARGV1 STREQUAL \"REQUIRED\")\n\n#     set(${module_upper}_FIND_REQUIRED TRUE)\n\n# endif()\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Set variables in parent scope\n",
        "Line" : 79,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Clear variables\n",
        "Line" : 91,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "configure/cmake/FindR.cmake" : {
      "ObjectId" : "86f8ffe4776ac6ff6e7e08b454ad1d21320a58c2",
      "LastModified" : "2018-05-10T18:46:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake module to find R\n\n# - Try to find R.  If found, defines:\n\n#\n\n#  R_FOUND        - system has R\n\n#  R_EXEC         - the system R command\n\n#  R_ROOT_DIR     - the R root directory\n\n#  R_INCLUDE_DIRS - the R include directories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---Find includes and libraries if R exists\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "configure/cmake/Utils.cmake" : {
      "ObjectId" : "ac4cc71bd2a371d86318ba3ee630101e8a8454a4",
      "LastModified" : "2018-05-10T18:46:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Clears variables from list\n\n# Usage:\n\n#   osqp_clear_vars(<variables_list>)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "docs/Makefile" : {
      "ObjectId" : "931b7355dd599c54e215e72742130c2beaa0b9c4",
      "LastModified" : "2018-05-10T18:46:34Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Minimal makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Put it first so that \"make\" without argument is like \"make help\".\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Catch-all target: route all unknown targets to Sphinx using the new\n\n# \"make mode\" option.  $(O) is meant as a shortcut for $(SPHINXOPTS).\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "lin_sys/CMakeLists.txt" : {
      "ObjectId" : "8f8998ecd8ce5c068f3abf338f6cf5127ea8f2ea",
      "LastModified" : "2018-07-19T22:16:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add subdirectory for each linear systems solver\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Include this directory for library handler\n\n# NB Needed for subfolders\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Direct solver\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Indirect solver\n\n# TODO: Add!\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add linsys handler if not embedded\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Combine solvers\n\n# TODO: Add indirect ones\n\n# Add library handler if desktop version\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Combine solvers external libraries\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "lin_sys/direct/CMakeLists.txt" : {
      "ObjectId" : "c36c375ad6cf346396fffeb25d42cd193c2fcaa5",
      "LastModified" : "2018-09-26T21:11:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add direct linear systems solvers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# QDLDL (Default)\n\n# -------------------------\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Need to add qdldlobject only here because it cannot be\n\n# included in another object library such as linsys_qdldl\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# NB. The second directory is added because we need to include the \"qdldl_types.h\" file in \"qdldl_interface.h\"\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add other solvers if embedded option is false\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# MKL Pardiso MKL\n\n# -----------\n\n# If MKL Pardiso is enabled, include pardiso directory\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add Pardiso interface\n",
        "Line" : 24,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# Add parent directory for library handler\n",
        "Line" : 29,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# Make direct_linsys_solvers list visible from parent directory\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Make external linsys solvers includes visible from parent directory\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "lin_sys/direct/pardiso/CMakeLists.txt" : {
      "ObjectId" : "83a3f86db4ca55b71d9ca7ec8f1fd044c48bd8c1",
      "LastModified" : "2018-07-17T00:01:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set source files\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lin_sys/direct/qdldl/CMakeLists.txt" : {
      "ObjectId" : "d78c4a38da2d5c6f97eee2e9c7c8a121cd33a99a",
      "LastModified" : "2018-07-19T22:16:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add qdldl\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create object library for linear system solver interface\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "1a8aea871f269113701a7b86732ef14db7b5ec12",
      "LastModified" : "2018-09-26T21:11:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add subdirectories of all the tests\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/basic_qp/CMakeLists.txt" : {
      "ObjectId" : "7adac5e7228dee6551f15e6fca31679d11e76ebb",
      "LastModified" : "2018-05-10T18:46:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/basic_qp2/CMakeLists.txt" : {
      "ObjectId" : "5f7c7d43b7e4d05713ba7142209ce02a9da22c35",
      "LastModified" : "2018-05-10T18:46:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/lin_alg/CMakeLists.txt" : {
      "ObjectId" : "8a3ad3843f236adfc27721d7c1a03e6dce722cd3",
      "LastModified" : "2018-05-10T18:46:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/non_cvx/CMakeLists.txt" : {
      "ObjectId" : "a601501385bbed22b916f11b3418091e06c0617b",
      "LastModified" : "2018-09-26T21:11:09Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/primal_dual_infeasibility/CMakeLists.txt" : {
      "ObjectId" : "7e6e34d0d0ccb40f991996c10e10010ea33a3705",
      "LastModified" : "2018-09-26T21:11:09Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/primal_infeasibility/CMakeLists.txt" : {
      "ObjectId" : "70c8c90465167473ca6fde79697715e12a076fe9",
      "LastModified" : "2018-09-26T21:11:09Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/solve_linsys/CMakeLists.txt" : {
      "ObjectId" : "1d589d05552cbf16ab457fe6eb060a8b2bdb2e95",
      "LastModified" : "2018-09-26T21:11:09Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/unconstrained/CMakeLists.txt" : {
      "ObjectId" : "741b2c7f456e09c7bf9fec8c3ddaa4e3cda55259",
      "LastModified" : "2018-09-26T21:11:09Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/update_matrices/CMakeLists.txt" : {
      "ObjectId" : "2d10bd8506d45853765f98453850aaffe3466a13",
      "LastModified" : "2018-09-26T21:11:09Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 18,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 1430
}