{
  "Repository" : "34492096",
  "Revision" : "HEAD",
  "ObjectId" : "98503046839ca60bd27d57c26e1bdd242e7cb773",
  "CommitTime" : "2018-09-27T12:28:08Z",
  "Files" : {
    "CMake/FindFFTW.cmake" : {
      "ObjectId" : "2625acf84a00a1b3a515a1e1dc0170f3b3e30a8a",
      "LastModified" : "2017-06-21T10:26:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find FFTW\n\n# Find the native FFTW includes and library\n\n#\n\n#  FFTW_INCLUDES    - where to find fftw3.h\n\n#  FFTW_LIBRARIES   - List of libraries when using FFTW.\n\n#  FFTW_FOUND       - True if FFTW found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set FFTW_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "CMake/FindGSL.cmake" : {
      "ObjectId" : "949bb83196c9e1b0b71657464e078394790732fe",
      "LastModified" : "2017-07-28T07:56:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindGSL\n\n# --------\n\n#\n\n# Find the native GSL includes and libraries.\n\n#\n\n# The GNU Scientific Library (GSL) is a numerical library for C and C++\n\n# programmers. It is free software under the GNU General Public\n\n# License.\n\n#\n\n# Imported Targets\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# If GSL is found, this module defines the following :prop_tgt:`IMPORTED`\n\n# targets::\n\n#\n\n#  GSL::gsl      - The main GSL library.\n\n#  GSL::gslcblas - The CBLAS support library used by GSL.\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module will set the following variables in your project::\n\n#\n\n#  GSL_FOUND          - True if GSL found on the local system\n\n#  GSL_INCLUDE_DIRS   - Location of GSL header files.\n\n#  GSL_LIBRARIES      - The GSL libraries.\n\n#  GSL_VERSION        - The version of the discovered GSL install.\n\n#\n\n# Hints\n\n# ^^^^^\n\n#\n\n# Set ``GSL_ROOT_DIR`` to a directory that contains a GSL installation.\n\n#\n\n# This script expects to find libraries at ``$GSL_ROOT_DIR/lib`` and the GSL\n\n# headers at ``$GSL_ROOT_DIR/include/gsl``.  The library directory may\n\n# optionally provide Release and Debug folders.  For Unix-like systems, this\n\n# script will use ``$GSL_ROOT_DIR/bin/gsl-config`` (if found) to aid in the\n\n# discovery GSL.\n\n#\n\n# Cache Variables\n\n# ^^^^^^^^^^^^^^^\n\n#\n\n# This module may set the following variables depending on platform and type\n\n# of GSL installation discovered.  These variables may optionally be set to\n\n# help this module find the correct files::\n\n#\n\n#  GSL_CLBAS_LIBRARY       - Location of the GSL CBLAS library.\n\n#  GSL_CBLAS_LIBRARY_DEBUG - Location of the debug GSL CBLAS library (if any).\n\n#  GSL_CONFIG_EXECUTABLE   - Location of the ``gsl-config`` script (if any).\n\n#  GSL_LIBRARY             - Location of the GSL library.\n\n#  GSL_LIBRARY_DEBUG       - Location of the debug GSL library (if any).\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2014 Kelly Thompson <kgt@lanl.gov>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Include these modules to handle the QUIETLY and REQUIRED arguments.\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#=============================================================================\n\n# If the user has provided ``GSL_ROOT_DIR``, use it!  Choose items found\n\n# at this location over system locations.\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#=============================================================================\n\n# As a first try, use the PkgConfig module.  This will work on many\n\n# *NIX systems.  See :module:`findpkgconfig`\n\n# This will return ``GSL_INCLUDEDIR`` and ``GSL_LIBDIR`` used below.\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#=============================================================================\n\n# Set GSL_INCLUDE_DIRS and GSL_LIBRARIES. If we skipped the PkgConfig step, try\n\n# to find the libraries at $GSL_ROOT_DIR (if provided) or in standard system\n\n# locations.  These find_library and find_path calls will prefer custom\n\n# locations over standard locations (HINTS).  If the requested file is not found\n\n# at the HINTS location, standard system locations will be still be searched\n\n# (/usr/lib64 (Redhat), lib/i386-linux-gnu (Debian)).\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Do we also have debug versions?\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# If we didn't use PkgConfig, try to find the version via gsl-config or by\n\n# reading gsl_version.h.\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# 1. If gsl-config exists, query for the version.\n",
        "Line" : 134,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# 2. If gsl-config is not available, try looking in gsl/gsl_version.h\n",
        "Line" : 146,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# might also try scraping the directory name for a regex match \"gsl-X.X\"\n",
        "Line" : 152,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "#=============================================================================\n\n# handle the QUIETLY and REQUIRED arguments and set GSL_FOUND to TRUE if all\n\n# listed variables are TRUE\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#=============================================================================\n\n# Register imported libraries:\n\n# 1. If we can find a Windows .dll file (or if we can find both Debug and\n\n#    Release libraries), we will set appropriate target properties for these.\n\n# 2. However, for most systems, we will only register the import location and\n\n#    include directory.\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Look for dlls, or Release and Debug libraries.\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Windows systems with dll libraries.\n",
        "Line" : 191,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Windows with dlls, but only Release libraries.\n",
        "Line" : 195,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# If we have both Debug and Release libraries\n",
        "Line" : 210,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# For all other environments (ones without dll libraries), create\n\n# the imported library targets.\n",
        "Line" : 224,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 18
    },
    "CMake/FindMKL.cmake" : {
      "ObjectId" : "1119fead9fbd4f01dfa36d8b876bba36b7766bec",
      "LastModified" : "2016-03-07T15:14:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find MKL\n\n# very simple check if environment variable MKLROOT is set\n\n#\n\n#  \n\n#  MKL_ROOT        - Set to $ENV(MKLROOT)\n\n#  MKL_FOUND       - True if FFTW found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set MKL_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "CMake/FindPythonLibs.cmake" : {
      "ObjectId" : "b556d987765acba39a507a3358ada589ba00e054",
      "LastModified" : "2017-06-21T10:26:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindPythonLibs\n\n# --------------\n\n#\n\n# Find python libraries\n\n#\n\n# This module finds if Python is installed and determines where the\n\n# include files and libraries are.  It also determines what the name of\n\n# the library is.  This code sets the following variables:\n\n#\n\n# ::\n\n#\n\n#   PYTHONLIBS_FOUND           - have the Python libs been found\n\n#   PYTHON_LIBRARIES           - path to the python library\n\n#   PYTHON_INCLUDE_PATH        - path to where Python.h is found (deprecated)\n\n#   PYTHON_INCLUDE_DIRS        - path to where Python.h is found\n\n#   PYTHON_DEBUG_LIBRARIES     - path to the debug library (deprecated)\n\n#   PYTHONLIBS_VERSION_STRING  - version of the Python libs found (since CMake 2.8.8)\n\n#\n\n#\n\n#\n\n# The Python_ADDITIONAL_VERSIONS variable can be used to specify a list\n\n# of version numbers that should be taken into account when searching\n\n# for Python.  You need to set this variable before calling\n\n# find_package(PythonLibs).\n\n#\n\n# If you'd like to specify the installation of Python to use, you should\n\n# modify the following cache variables:\n\n#\n\n# ::\n\n#\n\n#   PYTHON_LIBRARY             - path to the python library\n\n#   PYTHON_INCLUDE_DIR         - path to where Python.h is found\n\n#\n\n# or set environmet variables\n\n#\n\n#   PYTHON_LIBRARY_DIR         - path to where python library is found\n\n#   PYTHON_INCLUDE_DIR         - path to where Python.h is found\n\n#\n\n#\n\n# If calling both ``find_package(PythonInterp)`` and\n\n# ``find_package(PythonLibs)``, call ``find_package(PythonInterp)`` first to\n\n# get the currently active Python version by default with a consistent version\n\n# of PYTHON_LIBRARIES.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2001-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use the executable's path as a hint\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for the python framework on Apple.\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Save CMAKE_FIND_FRAMEWORK\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# To avoid picking up the system Python.h pre-maturely.\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set up the versions we know about, in the order we will search. Always add\n\n# the user supplied additional versions to the front.\n\n# If FindPythonInterp has already found the major and minor version,\n\n# insert that version between the user supplied versions and the stock\n\n# version list.\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Avoid finding the .dll in the PATH.  We want the .lib.\n",
        "Line" : 170,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Look for the static library in the Python config directory\n",
        "Line" : 173,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Avoid finding the .dll in the PATH.  We want the .lib.\n",
        "Line" : 176,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# This is where the static library is usually located\n",
        "Line" : 178,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Don't search for include dir until library location is known\n",
        "Line" : 182,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Use the library's install prefix as a hint\n",
        "Line" : 185,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Add framework directories to the search paths\n",
        "Line" : 194,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# For backward compatibility, set PYTHON_INCLUDE_PATH.\n",
        "Line" : 219,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# We use PYTHON_INCLUDE_DIR, PYTHON_LIBRARY and PYTHON_DEBUG_LIBRARY for the\n\n# cache entries because they are meant to specify the location of a single\n\n# library. We now set the variables listed by the documentation for this\n\n# module.\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# These variables have been historically named in this module different from\n\n# what SELECT_LIBRARY_CONFIGURATIONS() expects.\n",
        "Line" : 251,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# SELECT_LIBRARY_CONFIGURATIONS() sets ${PREFIX}_FOUND if it has a library.\n\n# Unset this, this prefix doesn't match the module prefix, they are different\n\n# for historical reasons.\n",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Restore CMAKE_FIND_FRAMEWORK\n",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# PYTHON_ADD_MODULE(<name> src1 src2 ... srcN) is used to build modules for python.\n\n# PYTHON_WRITE_MODULES_HEADER(<filename>) writes a header file you can include\n\n# in your sources to initialize the static python modules\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Mark these options as advanced\n",
        "Line" : 285,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "#    target_link_libraries(${_NAME} ${PYTHON_LIBRARIES})\n",
        "Line" : 299,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# with configure_file() cmake complains that you may not use a file created using file(WRITE) as input file for configure_file()\n",
        "Line" : 357,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "CMake/FindPythonModules.cmake" : {
      "ObjectId" : "3c590303d88b47c169b1740a926816506196f1a5",
      "LastModified" : "2017-09-07T12:09:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/FindSphinx.cmake" : {
      "ObjectId" : "cae851ef01f41f8605338f598ff83d03c2ad5943",
      "LastModified" : "2017-06-21T10:26:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/find_modules.cmake" : {
      "ObjectId" : "d3f6b746154a24310ad1f6b1e0c740608cc5d016",
      "LastModified" : "2017-06-21T10:26:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMakeLists.txt" : {
      "ObjectId" : "3efce6a0d979025d316c819c68ce9d82ed6ce1f3",
      "LastModified" : "2018-07-10T05:43:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Disallow in-source build\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set path for modules\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# options required for building the py_detector_interface module:\n\n# XCSITPotonDetector\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "### PYTHON\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#By default all modules are included/excluded depending on this flag.\n\n#If a flag: USE_${module_name} is passed, this will overwrite teh default.\n\n#For example:\n\n# [De-]activate all modules:\n\n#      cmake -DUSE_MODULES_DEFAULT=[OFF]ON [...]\n\n# Activate a single module:\n\n#      cmake -DUSE_MODULES_DEFAULT=OFF -DUSE_wpg=ON [...]\n\n# Deactivate a single module:\n\n#      cmake -DUSE_MODULES_DEFAULT=ON -DUSE_wpg=OFF [...]\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# find and add modules\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#If a variable USE_${module_name} is defined, use its value\n\n#overwrite the default.\n\n#Since we add the USE_* variable to the cache, we re-use it with\n\n#multiple cmake calls\n",
        "Line" : 80,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#Add a cache variable with some help text. Note the\n\n#use of FORCE option to be sure the value is updated in the\n\n#cache\n",
        "Line" : 85,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "#If a request specific to this module was done, use it\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# create simex_vars.sh file\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Copy diagnostic scripts to bin dir.\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Add documentation target.\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Add extra stuff, e.g. python libs not pip'able.\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "Modules/Analyzers/S2EReconstruction_DM/CMakeLists.txt" : {
      "ObjectId" : "d99495fd3ffdf7bcc9db89d096c891cbc47aca30",
      "LastModified" : "2017-06-21T10:26:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Analyzers/S2EReconstruction_EMC/CMakeLists.txt" : {
      "ObjectId" : "0a66c30003ff61e714555d7b505f6952997521e9",
      "LastModified" : "2017-06-21T10:26:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Detectors/XCSITPhotonDetector/CMakeLists.txt" : {
      "ObjectId" : "465ef1be8f91d9e9be10abd062021243fb14b7f6",
      "LastModified" : "2018-06-11T20:21:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Check for dependencies\n\n#I think Geant4 is required w/ gdml support\n\n#To specify directory of Geant4 use standard cmake argument:\n\n# -DGeant4_DIR=<g4install>/lib[64]/Geant4-<version>\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Given we required gdml above, there is no more need of this here\n\n#find_package(XercesC REQUIRED)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Are we really sure about the minimal version needed?\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Create a new target to with the external project\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# get the project binary files\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Copy the file which initalizes the local variables to the build folder\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Copy the header files\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Copy the created shared object to the correct location\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "Modules/Diffractors/CrystFELPhotonDiffractor/CMakeLists.txt" : {
      "ObjectId" : "e1251a4c4fb82c4d68ba02c2ef3612ad5081759f",
      "LastModified" : "2018-06-11T20:21:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Make sure hdf5 and gsl are available. Want dynamic linking to hdf5.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This macro invokes the HDF5 compiler wrapper, it parses the output and\n\n# extracts the path where library are stored.\n\n# Usage:\n\n# _get_h5_lib_dir(CXX VARIABLE_STORE_PATH)\n\n# in case of errors the output variable is set to \"NOT-FOUND\"\n\n# Following, cmake recomendation, local variables/functions not to be \n\n# used outside of the package have a name that starts with an underscore\n\n# character.\n\n# Usage:\n\n#    _get_h5_lib_dir( LANG OUTLIST)\n\n#    where LANG is the string of the language to be used e.g. CXX and\n\n#    OUTLIST is the output string variable that will contain the *list*\n\n#    of paths to be used\n\n# The intent of this macro is to find the path to be passed to old\n\n# configure style script to parameters like: --with-hdf5.\n\n# Please note that dependening on how HDF5 is instlled on your system the \n\n# number of elements of OUTLIST could be >1, in such a case client code\n\n# should deal with this.\n\n# In case of erros, OUTLIST will be set to \"NOT-FOUND\"\n\n# Pre-requisite: find_package(HDF5 REQUIRED)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#First check that compiler executable for gien language exists\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#Call compiler with -show argument and capture output in\n\n#_cmt_output\n",
        "Line" : 45,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "#If return code is zero, we can continue\n",
        "Line" : 52,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "#Use reg-expr to search for the -L flags on the output\n",
        "Line" : 54,
        "CharPositionInLine" : 12
      },
      "6" : {
        "Text" : "#The output is a list of options, now for each one\n\n#remove -L string and normalize paths\n",
        "Line" : 58,
        "CharPositionInLine" : 12
      },
      "7" : {
        "Text" : "# ok\n",
        "Line" : 65,
        "CharPositionInLine" : 16
      },
      "8" : {
        "Text" : "#Retrieve installation path for both C++ and C, do we need both?\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#Remove duplicates from list\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#Check how many paths have been identified, if more than one\n\n#make a workaround\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#If more than one path is found, extract from the list the first and\n\n#use that.\n",
        "Line" : 94,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Add the project.\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#CONFIGURE_COMMAND ./configure --with-hdf5=${MYHDF5_LIBRARY_DIRS} --disable-gtk --disable-gtk-doc --disable-png\n",
        "Line" : 102,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Install needed crystfel binaries, scripts and doc material.\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#\n\n#install(PROGRAMS ${SOURCE_DIR}/src/pattern_sim DESTINATION ${BINDIR})\n\n#install(PROGRAMS ${SOURCE_DIR}/src/partial_sim DESTINATION ${BINDIR})\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "Modules/Diffractors/GAPDPhotonDiffractor/CMakeLists.txt" : {
      "ObjectId" : "aef467057e51de08f117591a55044f5005f19680",
      "LastModified" : "2018-07-10T05:43:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the project.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Install needed crystfel binaries, scripts and doc material.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Modules/Diffractors/SingFELPhotonDiffractor/CMakeLists.txt" : {
      "ObjectId" : "2fe9e4dfdd047f7e799cd96136cec21ef59504f3",
      "LastModified" : "2018-07-10T05:43:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Others/s2e/CMakeLists.txt" : {
      "ObjectId" : "49c739e50496c76ebc0d6d910d1211b06d7e5a44",
      "LastModified" : "2017-06-21T10:26:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/PhotonInteractors/FEFFPhotonInteractor/CMakeLists.txt" : {
      "ObjectId" : "a8964f8aa0855feda7fe775f28ddff322d9edae7",
      "LastModified" : "2017-09-08T10:55:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#FIND_PACKAGE (MKL REQUIRED)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Modules/Propagators/XFELPhotonPropagator/wpg/CMakeLists.txt" : {
      "ObjectId" : "dacdbc9fc78d0a698207cda017108bc108be20fb",
      "LastModified" : "2018-03-19T10:46:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Sources/GenesisPhotonSource/CMakeLists.txt" : {
      "ObjectId" : "46b160dc314a8d162b27588bb669b697d0d22744",
      "LastModified" : "2018-07-10T05:43:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#URL https://github.com/eucall-software/ocelot/archive/dev_gen.zip\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#ExternalProject_Add(\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#pic_test_file\n\n#DOWNLOAD_COMMAND wget https://docs.xfel.eu/alfresco/d/a/workspace/SpacesStore/4d00d480-34a5-462e-8459-5483a75445c5/simData_8000.h5\n\n#PATCH_COMMAND \"\"\n\n#CONFIGURE_COMMAND \"\"\n\n#BUILD_COMMAND \"\"\n\n#INSTALL_COMMAND \"\"\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#)\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#ExternalProject_Get_Property(pic_test_file DOWNLOAD_DIR)\n\n#install(FILES ${DOWNLOAD_DIR}/simData_8000.h5 DESTINATION ${SIMEX_SOURCE_DIR}/Tests/python/unittest/TestFiles/)\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Packages/CMakeLists.txt" : {
      "ObjectId" : "ef0d0ef6cd7f6e0afa572e99d10a53e90618b22c",
      "LastModified" : "2017-09-08T10:55:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# create debian package\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#(>= 2.3.1-6), libgcc1 (>= 1:3.4.2-12)\")\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Sources/CMakeLists.txt" : {
      "ObjectId" : "ead7c4b830b0c08cec24753f2012e4fc05b35993",
      "LastModified" : "2018-07-10T05:43:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find needed packages\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#find_python_module(PyQt4 REQUIRED)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#FIND_PACKAGE (LAPACK REQUIRED)\n\n#message (STATUS \"***** LAPACK_LIBRARIES ${LAPACK_LIBRARIES} ****\")\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Sources/doc/CMakeLists.txt" : {
      "ObjectId" : "580270f15d92ccf09872337664adcfd3705ae4d6",
      "LastModified" : "2017-09-22T20:29:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#soft find package to set needed variable\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#hard find package during build\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Sources/doc/Makefile" : {
      "ObjectId" : "9d5c70c41d13c1cf8ececdbad044abb6b5c05471",
      "LastModified" : "2017-09-08T10:55:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# User-friendly check for sphinx-build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Internal variables.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Sources/python/extra/CMakeLists.txt" : {
      "ObjectId" : "ff65ab8382052fe5682a7b30c3d1fd2551a98233",
      "LastModified" : "2017-09-08T10:55:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Tests/CMakeLists.txt" : {
      "ObjectId" : "01a2c0dba1d925dc9fae543f5f44f5079c10bc7e",
      "LastModified" : "2017-09-08T10:55:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 23,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 2062
}