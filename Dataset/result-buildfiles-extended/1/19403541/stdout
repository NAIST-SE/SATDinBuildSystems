{
  "Repository" : "19403541",
  "Revision" : "HEAD",
  "ObjectId" : "a59248f6c00b0cd21117ecdeb7deb7ee4dbeac0c",
  "CommitTime" : "2019-01-12T11:19:40Z",
  "Files" : {
    "sdcc-build/Makefile" : {
      "ObjectId" : "9511a34197a73ddccc68c7daa84b1fa8e7921bac",
      "LastModified" : "2017-10-28T12:43:17Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Top level Makefile for sdcc-build.\n\n# See README, and try 'make help'\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "sdcc-cf/packages/build.autoconf/Makefile" : {
      "ObjectId" : "632986609e189fa5576a41f541feb7fc650986bc",
      "LastModified" : "2017-10-28T12:43:17Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "sdcc-cf/packages/build.automake/Makefile" : {
      "ObjectId" : "af01e905dc48f91b7ce2ba3f8f8d77c90a733153",
      "LastModified" : "2017-10-28T12:43:17Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "sdcc-cf/packages/build.bison/Makefile" : {
      "ObjectId" : "67c54add543874199f4fe526c5233a0fa30ecac5",
      "LastModified" : "2017-10-28T12:43:17Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "sdcc-cf/packages/build.boost/Makefile" : {
      "ObjectId" : "71fea2b35751e1b5c6ef9c23c726e485b151f149",
      "LastModified" : "2017-10-29T11:04:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#  WITH_TOOLSET=--with-toolset=sun\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#  # universal build on Mac OS X doesn't work\n\n#  ifeq ($(OS), Darwin)\n\n#    # Build universal binaries\n\n#    BJAM_FLAGS=macosx-version=10.5 macosx-version-min=10.4 architecture=combined threading=multi link=static address-model=32\n\n#  endif\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "sdcc-cf/packages/build.cpan/Makefile" : {
      "ObjectId" : "10dad392395780cf3bc43ce086c42e71bd3cc101",
      "LastModified" : "2017-10-28T12:43:17Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "sdcc-cf/packages/build.dos2unix/Makefile" : {
      "ObjectId" : "7646d12e34a90fdb1ec500dd713f1f05100699e1",
      "LastModified" : "2017-10-28T12:43:17Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "sdcc-cf/packages/build.flex/Makefile" : {
      "ObjectId" : "7c2b95e8537a6462ceea105f8dd11da5f5badb50",
      "LastModified" : "2017-10-28T12:43:17Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Wait untill gputils 1.30 with fixed patch \"#270 Gputils doesn't compile with newer versions of bison and flex\" is released\n\n#VERSION=2.5.37\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "sdcc-cf/packages/build.gcc/Makefile" : {
      "ObjectId" : "92e0ddff24567dd4f3772130153d56d8083be4e1",
      "LastModified" : "2017-10-28T12:43:17Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#GCC_VERSION=4.6.1\n\n#GCC_SEPARATE_PACKAGES=1\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#  CFGENV=CC='cc -m64'\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#bunzip2 -c download/gcc*.tar.bz2 | tar -xf -\n",
        "Line" : 30,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 3
    },
    "sdcc-cf/packages/build.gettext/Makefile" : {
      "ObjectId" : "a0a12512246812117e556d0d4c41ceb13cc675e6",
      "LastModified" : "2017-10-28T12:43:17Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "sdcc-cf/packages/build.gmp_mpfr/Makefile" : {
      "ObjectId" : "40745ee41b7d6644cb1f249bf656cb7e4dab103f",
      "LastModified" : "2017-10-28T12:43:17Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "sdcc-cf/packages/build.gpsim/Makefile" : {
      "ObjectId" : "83efa78d04718150eb492be7d0d2b76204fb687b",
      "LastModified" : "2017-10-28T12:43:17Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "sdcc-cf/packages/build.gputils/Makefile" : {
      "ObjectId" : "ddc70d940c3b397341cadc5626ec5e62d7e52df4",
      "LastModified" : "2018-06-08T07:57:23Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\n\n# To build gputils from the svn HEAD:\n\n# make FROM_SVN=1\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "sdcc-cf/packages/build.latex2html/Makefile" : {
      "ObjectId" : "e193b2b8c6f81d17d03ecdff7edd63fa560080a0",
      "LastModified" : "2017-10-28T12:43:17Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "sdcc-cf/packages/build.libtool/Makefile" : {
      "ObjectId" : "6fbf2bb034801a198920c6c1c7f844432462d5f1",
      "LastModified" : "2017-10-28T12:43:17Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "sdcc-cf/packages/build.m4/Makefile" : {
      "ObjectId" : "4a92330663bff51848bed785cad9ded4812151a5",
      "LastModified" : "2017-10-28T12:43:17Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "sdcc-cf/packages/build.mingw-w64/Makefile" : {
      "ObjectId" : "ca480b7fdf2534facea9f7ac786ac2faa57ca98b",
      "LastModified" : "2018-08-20T13:49:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "####download/mingw-w64-bin_x86_64-linux_$(MINGW_W64_BUILD_DATE).tar.bz2:\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#####mingw-w64-install.tag: download/mingw-w64-bin_x86_64-linux_$(MINGW_W64_BUILD_DATE).tar.bz2\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#strip $(PREFIX)/bin/*\n",
        "Line" : 66,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 3
    },
    "sdcc-cf/packages/build.mingw32/Makefile" : {
      "ObjectId" : "e7e0c25a3c0ce258d91b87db850fc227251f79ea",
      "LastModified" : "2018-06-08T07:57:23Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#strip $(PREFIX)/bin/*\n",
        "Line" : 51,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "sdcc-cf/packages/build.ncurses/Makefile" : {
      "ObjectId" : "9e6d85d0f03fb8d16ffe10cb35b88270d10405b2",
      "LastModified" : "2017-10-28T12:43:17Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Build universl binaries\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "sdcc-cf/packages/build.nsis/Makefile" : {
      "ObjectId" : "c664aee8b1550d6a0e4c15a59ba1997234b27b36",
      "LastModified" : "2017-10-28T12:43:17Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "sdcc-cf/packages/build.popt/Makefile" : {
      "ObjectId" : "501114987d328807330505ffc018d4441ce1cf59",
      "LastModified" : "2017-10-28T12:43:17Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "sdcc-cf/packages/build.readline/Makefile" : {
      "ObjectId" : "f37cd72fba8dab33e5ac23edd545267d652bf5be",
      "LastModified" : "2017-10-28T12:43:17Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Build universal binaries\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "sdcc-cf/packages/build.rsync/Makefile" : {
      "ObjectId" : "9783c643b57cb8671ac0a3e7a61ae7aced6f0c8b",
      "LastModified" : "2017-10-28T12:43:17Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "sdcc-cf/packages/build.scons/Makefile" : {
      "ObjectId" : "2927d121042e903daca9b9b8736a2646c4ae005c",
      "LastModified" : "2017-10-28T12:43:17Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "sdcc-cf/packages/build.wget/Makefile" : {
      "ObjectId" : "e1faa5b6eb1550728e8602c5d524779388229cde",
      "LastModified" : "2017-10-28T12:43:17Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# OOPS, we need some other mathod to bootstrap wget!\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "sdcc-cf/packages/build.wine/Makefile" : {
      "ObjectId" : "cbadccc29986e81dfce026c4f126d4cbd105a4d3",
      "LastModified" : "2017-10-28T12:43:17Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\n\n# To build 64bit wine:\n\n# make WINE64=1\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#VERSION=1.3.8\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "sdcc-extra/emu/rose/Makefile" : {
      "ObjectId" : "d6d0d815e817fabb6343c547028526c5e039db13",
      "LastModified" : "2017-10-28T12:43:17Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for ConsoleZ80, a simple Console based Z80 EMU\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "sdcc-extra/historygraphs/Makefile" : {
      "ObjectId" : "69e8dbae23e4b3973043c8a41580c0558129e5b5",
      "LastModified" : "2018-11-15T22:06:49Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Release revisions:\n\n# 3.4.0: 8985 (affected by -Werror bug #2280)\n\n# 3.5.0: 9256\n\n# 3.6.0: 9618\n\n# 3.7.0: 10233\n\n# 3.8.0: 10582\n\n# Broken: 8984-9000, 9104 (bug #2280), 9106-9114 (whetstone build segfaults), 9379-9418 (SDCC build fails), 9477 (SDCC build fails), 9891-9946 (stdcbench build fails), 9958-9959 (whetstone build fails), 10270 (stdcbench build segfaults), 10279-10305 (stdcbench build segfaults) 10426-10462 (coremark build fails).\n\n# Build of large-stack-auto lib for mcs51 was enabled in 9521.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Default setting for --max-allocs-per-node (currently 3000)\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# No Coremark for the MCS-51 - Coremark is just too big.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Do not include Coremark (non-free) or score graphs (require STM8AF / C8051 V2.1 C8051F120 boards) in all target.\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# coremark_v1.0.tgz is non-free, needs to be downloaded from https://www.eembc.org/coremark/\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# stdcbench-0.6.tar.gz is free, can be downloaded from http://stdcbench.sourceforge.net\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# stdcbench-0.6.tar.gz is free, can be downloaded from http://stdcbench.sourceforge.net\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Download (with some retries to improve stability on bad connections) and compile an sdcc revision\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8,
      "Errorlog" : "line 293:36 token recognition error at: '\"s/ *0[ \\t]*\\([0-9]*\\).*/\\1'\nline 317:80 token recognition error at: '\" > $@\\n\\n\u0000'\n"
    },
    "sdcc-extra/historygraphs/dhrystone-mcs51/Makefile" : {
      "ObjectId" : "4727f5a7c5e7f294458e493bac5bf39cd48e01b7",
      "LastModified" : "2018-06-08T07:57:23Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "sdcc-extra/historygraphs/dhrystone-stm8/Makefile" : {
      "ObjectId" : "4727f5a7c5e7f294458e493bac5bf39cd48e01b7",
      "LastModified" : "2018-06-08T07:57:23Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "sdcc-extra/historygraphs/whetstone-mcs51/Makefile" : {
      "ObjectId" : "c00eb2aff7a75fdfa539387edd79fa8b667f87cf",
      "LastModified" : "2018-06-08T07:57:23Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "sdcc-extra/historygraphs/whetstone-stm8/Makefile" : {
      "ObjectId" : "c00eb2aff7a75fdfa539387edd79fa8b667f87cf",
      "LastModified" : "2018-06-08T07:57:23Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "sdcc-web/Makefile" : {
      "ObjectId" : "fd6dbf83c6c48dfc65b2d784b34fc4a830a08ad3",
      "LastModified" : "2018-06-08T07:57:23Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "sdcc/device/lib/pic14/Makefile.am" : {
      "ObjectId" : "b8db569a228ee94f6b88e38c26fb8898c47fee4b",
      "LastModified" : "2018-06-08T07:57:23Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with Automake to create Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "sdcc/device/lib/pic14/libm/Makefile.am" : {
      "ObjectId" : "00184fe269a5952b5df8b8830606d04f649fe296",
      "LastModified" : "2018-06-08T07:57:23Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with Automake to create Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use the generic code where possible.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "sdcc/device/lib/pic14/libsdcc/enhanced-no-xinst/Makefile.am" : {
      "ObjectId" : "4223f16dc35b8f02d93684d6a51ed843a443ca20",
      "LastModified" : "2018-06-08T07:57:23Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with Automake to create Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build for enhanced devices.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "sdcc/device/lib/pic14/libsdcc/enhanced/Makefile.am" : {
      "ObjectId" : "4223f16dc35b8f02d93684d6a51ed843a443ca20",
      "LastModified" : "2018-06-08T07:57:23Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with Automake to create Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build for enhanced devices.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "sdcc/device/lib/pic14/libsdcc/regular/Makefile.am" : {
      "ObjectId" : "f4b48bc751a352a61320cff393ec4fcb2e9e676f",
      "LastModified" : "2018-06-08T07:57:23Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with Automake to create Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "sdcc/device/lib/pic16/Makefile.am" : {
      "ObjectId" : "30d822246e5af91371c8ae9b4eb39cd0dab86be8",
      "LastModified" : "2018-06-08T07:57:23Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Makefile.am -- Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "sdcc/device/lib/pic16/debug/Makefile.am" : {
      "ObjectId" : "760aa7747caf495422baddd44311df6229d85363",
      "LastModified" : "2018-06-08T07:57:23Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Makefile.am -- Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "sdcc/device/lib/pic16/libc/Makefile.am" : {
      "ObjectId" : "eea014262858972cc36cc0d980fe2e0639ecd147",
      "LastModified" : "2018-06-08T07:57:23Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Makefile.am -- Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "sdcc/device/lib/pic16/libio/Makefile.am" : {
      "ObjectId" : "54f289bc77dd0c758040e48caa039140775a7011",
      "LastModified" : "2018-06-08T07:57:23Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Makefile.am -- Process this file with automake to produce Makefile.in\n\n## This file was automatically generated using ./mkmk.sh.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "sdcc/device/lib/pic16/libm/Makefile.am" : {
      "ObjectId" : "b3056ef2210d66b810c96ec4529f8442a1dae50a",
      "LastModified" : "2018-06-08T07:57:23Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Makefile.am -- Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use the generic code where possible.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "sdcc/device/lib/pic16/libsdcc/Makefile.am" : {
      "ObjectId" : "ef0402b812910340e9cb8d837f3cf81b746d7e25",
      "LastModified" : "2018-06-08T07:57:23Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Makefile.am -- Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "sdcc/device/lib/pic16/startup/Makefile.am" : {
      "ObjectId" : "8778c0e304fdc2706761737e15e10f8c9bb32978",
      "LastModified" : "2018-06-08T07:57:23Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Makefile.am -- Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Dummy libs to generate crt0*.o\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Force installation of .o files into $libdir\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "sdcc/device/non-free/lib/pic16/Makefile.am" : {
      "ObjectId" : "31fd3746a3194881ab4940db997f48552688ed1a",
      "LastModified" : "2018-06-08T07:57:23Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Makefile.am -- Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "sdcc/device/non-free/lib/pic16/libdev/Makefile.am" : {
      "ObjectId" : "d0f0e5c39b15e585c159a5cab4103575ec907f94",
      "LastModified" : "2018-06-08T07:57:23Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Makefile.am -- Process this file with automake to produce Makefile.in\n\n## This file has been automatically generated using ./mkmk.sh.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "sdcc/sim/ucsim/example/Makefile" : {
      "ObjectId" : "65019d7144f78a14dbfd6338e71ff8f60869e616",
      "LastModified" : "2018-06-08T07:57:23Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#all: simif.ihx\n\n#\n\n#simif.ihx: simif.c\n\n#\tsdcc --model-large --debug simif.c\n\n#\n\n#clean:\n\n#\trm -f *.asm *.ihx *.lk *.lst *.map *.mem *.rel *.rst *.sym\n\n#\trm -f *.adb *.cdb *.omf\n\n#\trm -f simif.out simif_fout.txt\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "sdcc/sim/ucsim/s51.src/test/Makefile" : {
      "ObjectId" : "3956206ea343f04a6b1e4a4f7abce3ecda40ce70",
      "LastModified" : "2018-12-18T08:22:48Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "sdcc/sim/ucsim/stm8.src/test/Makefile" : {
      "ObjectId" : "1d0296b66dd888e629787b788dc155de0d3eb54b",
      "LastModified" : "2018-12-18T08:22:48Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "sdcc/sim/ucsim/tlcs.src/test/Makefile" : {
      "ObjectId" : "0db0fb2f92f66942401dbc735612862c54da6f88",
      "LastModified" : "2018-06-08T07:57:23Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "sdcc/sim/ucsim/z80.src/test/Makefile" : {
      "ObjectId" : "1d5f10e545ce2965351e4715ff37628dc5b82967",
      "LastModified" : "2018-06-08T07:57:23Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "sdcc/src/regression/Makefile" : {
      "ObjectId" : "26a7ff3557cd28021c47fda4a791e3360776acfb",
      "LastModified" : "2018-06-08T07:57:23Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Regression testing Makefile for Pic Port of SDCC\n\n#\n\n# note that this regression suite was started before\n\n# the one in sdcc/regression. The regression suite in\n\n# sdcc/regression is better suited for testing mature\n\n# ports.\n\n#\n\n# GPL'd\n\n#\n\n# T. Scott Dattalo scott@dattalo.com\n\n#\n\n# This makefile provides a means by which the output\n\n# of the SDCC Compiler can be tested. This version\n\n# is unique to the PIC (as in Microchip PIC) port.\n\n# As such it requires the following software:\n\n#\n\n#  gpasm version 0.11.1 (or greater)\n\n#  gpsim version 0.20.7 (or greater)\n\n#\n\n# Usage:\n\n#\n\n# make\n\n#  - without any options the whole regression test is\n\n#    performed. The results are placed into a log file\n\n#    (defined by $LOGFILE).\n\n#\n\n# make asm\n\n#  - Creates .asm files by compiling the .c files\n\n#\n\n# make cod\n\n#  - Creates .cod files by assembling the .asm files\n\n#    (.cod files are symbolic files compatible with\n\n#    MPASM, Microchip's assembler)\n\n#\n\n# make stc\n\n#  - Creates .stc files which are script files for\n\n#    gpsim.\n\n#\n\n# make clean\n\n#  - removes all of the intermediate files created\n\n#\n\n# make cleancod\n\n# make cleanasm\n\n# make cleanstc\n\n# make cleano\n\n#  - removes either the .stc, .asm, .cod or .o files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# verboseness\n\n#Q ?= # be verbose\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# be quiet\n",
        "Line" : 50,
        "CharPositionInLine" : 7
      },
      "3" : {
        "Text" : "#TARGETPIC = 16f84\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#CFLAGS += --no-pcode-opt\n\n#CFLAGS += -V\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Results of the test are placed here:\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Script file for creating gpsim scripts\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Script file for invoking gpsim\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# List the C files to be test here:\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# The cod files are generated by sdcc\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# The .stc files are script files for gpsim\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# this will also make .stc files\n\n#%.stc : %.cod\n\n#\t./create_stc $^ $@\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# now for the dependencies\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "sdcc/support/sdbinutils/bfd/Makefile.am" : {
      "ObjectId" : "f727ebeb280bb9f1ac312099174745eb7b7a1b34",
      "LastModified" : "2018-06-08T07:57:23Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to generate Makefile.in\n\n#\n\n#   Copyright (C) 2012-2018 Free Software Foundation, Inc.\n\n#\n\n# This file is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; see the file COPYING3.  If not see\n\n# <http://www.gnu.org/licenses/>.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Empty these so that the respective installation directories will not be created.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is where we get zlib from.  zlibdir is -L../zlib and zlibinc is\n\n# -I../zlib, unless we were configured with --with-system-zlib, in which\n\n# case both are empty.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## This is a list of all .h files which are in the source tree.\n",
        "Line" : 816,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## ... and all .h files which are in the build tree.\n",
        "Line" : 828,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Ensure they are built early:\n",
        "Line" : 832,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Various kinds of .o files to put in libbfd.a:\n\n# BFD_BACKENDS\tRoutines the configured targets need.\n\n# BFD_MACHINES\tArchitecture-specific routines the configured targets need.\n\n# COREFILE\tCore file routines for a native configuration\n\n# bfd64_libs\tRoutines for 64bit support\n",
        "Line" : 852,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Since BFD64_LIBS is optional and we can't have substitution in\n\n# libbfd_la_SOURCES, we put BFD64_LIBS in OFILES instead.\n\n# However, list all sources in EXTRA_libbfd_la_SOURCES so the\n\n# dependency tracking fragments are picked up in the Makefile.\n",
        "Line" : 874,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# libtool will build .libs/libbfd.a.  We create libbfd.a in the build\n\n# directory so that we don't have to convert all the programs that use\n\n# libbfd.a simultaneously.  This is a hack which should be removed if\n\n# everything else starts using libtool.  FIXME.\n",
        "Line" : 884,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# This file holds an array associating configuration triplets and\n\n# vector names.  It is built from config.bfd.  It is not compiled by\n\n# itself, but is included by targets.c.\n",
        "Line" : 903,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# When compiling archures.c and targets.c, supply the default target\n\n# info from configure.\n",
        "Line" : 911,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# The following program can be used to generate a simple config file\n\n# which can be folded into an h-XXX file for a new host, with some editing.\n",
        "Line" : 1020,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Could really use a \"copy-if-change\"...\n",
        "Line" : 1045,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# We only rebuild the header files automatically if we have been\n\n# configured with --enable-maintainer-mode.\n",
        "Line" : 1055,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Disable -Werror, if it has been enabled, since coffswap.h won't\n\n# compile with gcc 4.5 and above.\n",
        "Line" : 1106,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15,
      "Errorlog" : "line 1088:113 token recognition error at: '\\1'\nline 1088:118 token recognition error at: '\\2'\nline 1088:123 token recognition error at: '\\3'\nline 1088:128 token recognition error at: '\\4'\nline 1088:133 token recognition error at: '\\5'\nline 1088:197 token recognition error at: '\\1'\nline 1088:199 token recognition error at: '\\2'\nline 1088:201 token recognition error at: '\\3'\nline 1088:203 token recognition error at: '\\4'\nline 1088:205 token recognition error at: '\\5'\n"
    },
    "sdcc/support/sdbinutils/bfd/doc/Makefile.am" : {
      "ObjectId" : "1ec1a743e2e9c4488e8589db87db409b66a2d542",
      "LastModified" : "2018-06-08T07:57:23Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to generate Makefile.in\n\n#\n\n#   Copyright (C) 2012-2018 Free Software Foundation, Inc.\n\n#\n\n# This file is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3 of the License, or\n\n# (at your option) any later version.\n\n# \n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n# \n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; see the file COPYING3.  If not see\n\n# <http://www.gnu.org/licenses/>.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# SRCDOC, SRCPROT, SRCIPROT only used to sidestep Sun Make bug in interaction \n\n# between VPATH and suffix rules.  If you use GNU Make, perhaps other Makes,\n\n# you don't need these three:\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We can't replace these rules with an implicit rule, because\n\n# makes without VPATH support couldn't find the .h files in `..'.\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We do not depend on chew directly so that we can distribute the info\n\n# files, and permit people to rebuild them, without requiring the makeinfo\n\n# program.  If somebody tries to rebuild info, but none of the .texi files\n\n# have changed, then nothing will be rebuilt.\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# We use bfdt.texi, rather than bfd.texi, to avoid conflicting with\n\n# bfd.texinfo on an 8.3 filesystem.\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# We want install to imply install-info as per GNU standards, despite the\n\n# cygnus option.\n\n# Do not install info documentation when installing SDCC\n\n# install: install-info\n",
        "Line" : 364,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Automake 1.9 will only build info files in the objdir if they are\n\n# mentioned in DISTCLEANFILES.  It doesn't have to be unconditional,\n\n# though, so we use a bogus condition.\n",
        "Line" : 371,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "sdcc/support/sdbinutils/binutils/Makefile.am" : {
      "ObjectId" : "070a84728489911aa8173001c24ce6f0c14238d9",
      "LastModified" : "2018-06-08T07:57:23Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to generate Makefile.in\n\n#\n\n#   Copyright (C) 2012-2018 Free Software Foundation, Inc.\n\n#\n\n# This file is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; see the file COPYING3.  If not see\n\n# <http://www.gnu.org/licenses/>.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## These aren't set by automake, because they appear in\n\n## bfd/acinclude.m4, which is included by binutils/acinclude.m4, and\n\n## thus is not seen by automake.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Automake 1.10+ disables lex and yacc output file regeneration if\n\n# maintainer mode is disabled.  Avoid this.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This is where we get zlib from.  zlibdir is -L../zlib and zlibinc is\n\n# -I../zlib, unless we were configured with --with-system-zlib, in which\n\n# case both are empty.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# these two are almost the same program\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# objcopy and strip should be the same program\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# These should all be the same program too.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#OBJDUMP_PROG=objdump\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# This is the demangler, as a standalone program.\n\n# Note: This one is used as the installed name too, unlike the above.\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## Test programs.\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## We need a special rule to install the programs which are built with\n\n## -new, and to rename cxxfilt to c++filt.\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Stuff that goes in tooldir/ if appropriate.\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Extra object files for objdump\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Code shared by all the binutils.\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Code shared by the ELF related programs.\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# There's no global DEPENDENCIES.  So, we must explicitly list everything\n\n# which depends on libintl, since we don't know whether LIBINTL_DEP will be\n\n# non-empty until configure time.  Ugh!\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# The following is commented out for the conversion to automake.\n\n# This rule creates a single binary that switches between ar and ranlib\n\n# by looking at argv[0].  Use this kludge to save some disk space.\n\n# However, you have to install things by hand.\n\n# (That is after 'make install', replace the installed ranlib by a link to ar.)\n\n# Alternatively, you can install ranlib.sh as ranlib.\n\n# ar_with_ranlib: $(ADDL_DEPS) ar.o maybe-ranlib.o\n\n#\t$(HLDENV) $(CC) $(HLDFLAGS) $(CFLAGS) $(LDFLAGS) -o $(AR_PROG) ar.o maybe-ranlib.o $(ADDL_LIBS) $(EXTRALIBS)\n\n#\t-rm -f $(RANLIB_PROG)\n\n#\t-ln $(AR_PROG) $(RANLIB_PROG)\n\n#\n\n# objcopy and strip in one binary that uses argv[0] to decide its action.\n\n#\n\n#objcopy_with_strip: $(ADDL_DEPS) objcopy.o maybe-strip.o\n\n#\t$(HLDENV) $(CC) $(HLDFLAGS) $(CFLAGS) $(LDFLAGS) -o $(OBJCOPY_PROG) objcopy.o maybe-strip.o $(ADDL_LIBS) $(EXTRALIBS)\n\n#\t-rm -f $(STRIP_PROG)\n\n#\t-ln $(OBJCOPY_PROG) $(STRIP_PROG)\n",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# We need these for parallel make.\n",
        "Line" : 326,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Disable -Werror, if it has been enabled, since old versions of bison/\n\n# yacc will produce working code which contain compile time warnings.\n",
        "Line" : 329,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# coff/sym.h and coff/ecoff.h won't be found by the automatic dependency\n\n# scripts, since they are only included conditionally.\n",
        "Line" : 486,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# development.sh is used to determine -Werror default.\n",
        "Line" : 524,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21,
      "Errorlog" : "line 548:48 token recognition error at: '\" ]; then \\\\n\\t      rm -f $(DESTDIR)$(tooldir)/bin/$$j$(EXEEXT); \\\\n\\t      ln $(DESTDIR)$(bindir)/$$k$(EXEEXT) $(DESTDIR)$(tooldir)/bin/$$j$(EXEEXT) >/dev/null 2>/dev/null \\\\n\\t\\t|| $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(INSTALL_PROGRAM) $$i$(EXEEXT) $(DESTDIR)$(tooldir)/bin/$$j$(EXEEXT); \\\\n\\t    fi; \\\\n\\t  else true; \\\\n\\t  fi; \\\\n\\tdone\\n\u0000'\n"
    },
    "sdcc/support/sdbinutils/binutils/doc/Makefile.am" : {
      "ObjectId" : "0848ee5c153398aa9ef3b27996980854faececa1",
      "LastModified" : "2018-06-08T07:57:23Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to generate Makefile.in\n\n#\n\n#   Copyright (C) 2012-2018 Free Software Foundation, Inc.\n\n#\n\n# This file is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3 of the License, or\n\n# (at your option) any later version.\n\n# \n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n# \n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; see the file COPYING3.  If not see\n\n# <http://www.gnu.org/licenses/>.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# What version of the manual you want; \"all\" includes everything\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Options to extract the man page from as.texinfo\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# List of man pages generated from binutils.texi\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Man page generation from texinfo\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# We want install to imply install-info as per GNU standards, despite the\n\n# cygnus option.\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Automake 1.9 will only build info files in the objdir if they are\n\n# mentioned in DISTCLEANFILES.  It doesn't have to be unconditional,\n\n# though, so we use a bogus condition.\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Maintenance\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# We need it for the taz target in ../../Makefile.in.\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "sdcc/support/tests/dhrystone/Makefile" : {
      "ObjectId" : "62d194fa2e982ccf6e55d15d24705bac0bb9d051",
      "LastModified" : "2018-06-08T07:57:23Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Simple Makefile for dhrystone and sdcc\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -DNOENUM is here to make the results more predictable\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "sdcc/support/tests/internal/Makefile" : {
      "ObjectId" : "94c103a6dc7f8c63e8b071ee895b211f7fd5e121",
      "LastModified" : "2018-06-08T07:57:23Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 41,
    "AUTOMAKE" : 18
  },
  "ElapsedTime" : 6838
}