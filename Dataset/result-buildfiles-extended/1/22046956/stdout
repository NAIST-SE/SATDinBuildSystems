{
  "Repository" : "22046956",
  "Revision" : "HEAD",
  "ObjectId" : "7008ebc6679fe725502c7edd38886d4c7ffbd199",
  "CommitTime" : "2019-04-16T23:28:36Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "170df93a84f09e9f8465a887df240a9cc9c89ff6",
      "LastModified" : "2019-04-09T14:44:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#We install to the source directory by default\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Allow the user to configure how much assertion checking should occur\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n#\n\n# Determine compiler configuration\n\n#\n\n#\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Set the default build type if not specified\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n#Set the assertion level\n\n#\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Compiler flag configuration checks\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# We require c++14 support\n\n#\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#No compiler specific extensions\n",
        "Line" : 65,
        "CharPositionInLine" : 30
      },
      "8" : {
        "Text" : "#\n\n# Warning flags\n\n#\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#The actual warning flags to be applied\n",
        "Line" : 70,
        "CharPositionInLine" : 19
      },
      "10" : {
        "Text" : "#Visual studio warnings\n\n# Note that we don't use /Wall since it generates warnings about standard library headers\n",
        "Line" : 73,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "#The flags to check if the compiler supports\n",
        "Line" : 75,
        "CharPositionInLine" : 29
      },
      "12" : {
        "Text" : "#Most warnings\n",
        "Line" : 76,
        "CharPositionInLine" : 14
      },
      "13" : {
        "Text" : "#The flags to check if the compiler supports\n",
        "Line" : 79,
        "CharPositionInLine" : 29
      },
      "14" : {
        "Text" : "#GCC-like\n",
        "Line" : 80,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "#Most warnings, typically good\n\n#Extra warning, usually good\n\n#Ensure ISO compliance (i.e. no non-standard extensions)\n\n#Warn if cast removes qualifier (e.g. const char* -> char*)\n\n#Warn if a cast causes memory alignment changes\n\n#Warn if local variable shadows another variable\n\n#Sanity checks for printf-like formatting\n\n# But don't worry about non-literal formtting (i.e. run-time printf format strings)\n\n#Checks for logical op when bit-wise expected\n\n#Warn if a global function is defined with no declaration\n\n#Warn if a user include directory is missing\n\n#Warn if there are overlapping declarations\n\n#Warn if a switch has no default\n\n#Warn if #if() preprocessor refers to an undefined directive\n\n#Warn about unused variables/parameters\n\n#Warn about variables that are not used\n\n#Warn about function parameters which are unused\n\n#Warn when optimizations are skipped (usually due to large/complex code)\n\n#Warn when functions should be noexcept (i.e. compiler know it doesn't throw)\n\n#Warn when a function declaration overrides a virtual method\n\n#Warn about inaccessible constructors/destructors\n\n#Warn about missing virtual destructors\n\n#Warn about identical conditions in if-else chains\n\n#Warn when different branches of an if-else chain are equivalent\n\n#Warn about null pointer dereference execution paths\n\n#Warn about unitialized values\n\n#Warn about self-initialization\n\n#Warn when catch statements don't catch by reference\n\n#Warn about redudnant semicolons\n",
        "Line" : 81,
        "CharPositionInLine" : 40
      },
      "16" : {
        "Text" : "#GCC-like optional\n\n#\"-Wsuggest-final-types\"         #Suggest where 'final' would help if specified on a type methods\n\n#\"-Wsuggest-final-methods\"       #Suggest where 'final' would help if specified on methods\n\n#\"-Wsuggest-override\"            #Suggest where 'override' should be specified\n\n#\"-Wold-style-cast\"              #Warn about using c-style casts\n\n#\"-Wconversion\"                  #Warn when type conversions may change value\n\n#\"-Wsign-conversion\"             #Warn if a conversion may change the sign\n\n#\"-Wpadded\"                      #Will warn if additional padding is introduced to a struct/class. Turn on if optimizing class memory layouts\n\n#\"-Wstrict-overflow=2\"           #Warn if the compiler optimizes assuming signed overflow does not occur\n\n#\"-Wfloat-equal\"                 #Warn about using direct floating point equality\n\n#\"-Wunsafe-loop-optimizations\"   #Warn when loops can't be optimized\n\n#\"-Wswitch-enum\"                 #Warn about uncovered enumeration values in a switch (even if there is a default)\n\n#\"-Wsign-promo\"                  #Warn when overload resolution converts an unsigned type to signed when an unsigned overload exists\n\n#\"-Wdouble-promotion\"            #Warn when float is implicitly propted to double\n\n#\"-Wuseless-cast\"                #Warn about casts to the same type\n\n#\"-Wzero-as-null-pointer-constant\" #Warn about using '0' instead of nullptr\n",
        "Line" : 110,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "#Check and see if the compiler supports the various warning flags,\n\n#and add valid flags\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#Flag supported, so enable it\n",
        "Line" : 134,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "#The flex/bison code is not warning clean so we need to suppress some warnings\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#Flex/bison generate code with redundant declarations\n\n#Flex/bison generate switch statments w/o default cases\n\n#Flex produces functions with unused params in re-entrant mode\n",
        "Line" : 142,
        "CharPositionInLine" : 28
      },
      "21" : {
        "Text" : "#Flex misses some declarations in re-entrant mode\n",
        "Line" : 145,
        "CharPositionInLine" : 32
      },
      "22" : {
        "Text" : "#Bison produces some cases with explicit\n",
        "Line" : 146,
        "CharPositionInLine" : 31
      },
      "23" : {
        "Text" : "#Flex generates code which performs some signed/unsigned comparison\n",
        "Line" : 147,
        "CharPositionInLine" : 24
      },
      "24" : {
        "Text" : "#Bison produces some cases wiwth potenetial null derefs\n",
        "Line" : 148,
        "CharPositionInLine" : 28
      },
      "25" : {
        "Text" : "#Flag supported, so enable it\n",
        "Line" : 153,
        "CharPositionInLine" : 8
      },
      "26" : {
        "Text" : "#\n\n# Sanitizer flags\n\n#\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#Enable sanitizers\n\n# -fuse-ld=gold force the gold linker to be used (required for sanitizers, but not enabled by default on some systems)\n",
        "Line" : 164,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "#Fixes 'ASan runtime does not come first in initial library list'\n",
        "Line" : 168,
        "CharPositionInLine" : 38
      },
      "29" : {
        "Text" : "#\n\n# Profiling flags\n\n#\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#Support for gprof\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#Enable gprof\n",
        "Line" : 178,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "#\n\n# Code coverage flags\n\n#\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#Support for gcov\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#Enable gcov\n",
        "Line" : 190,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "#\n\n# Debug logging\n\n#\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#Enable gcov\n",
        "Line" : 200,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "#Only for coloured output for ninja, it may be desired\n\n#to not force colours with other make programs (e.g. if\n\n#being parsed by an IDE).\n",
        "Line" : 206,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "#\n\n# Set final flags\n\n#\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#\n\n# Titan Benchmarks\n\n#\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#\n\n# Unit Testing\n\n#\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "#\n\n# Sub-projects\n\n#\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#Explicitly specify that libreadline has not been found\n\n# This must be explicitly set for ABC to not depend on\n\n# libreadline. Note that because the ABC CMakeLists uses MATCHES\n\n# in its check the value must be explicitly 'FALSE' (in upper case).\n\n#\n\n# TODO: Ideally ABC's CMakeLists.txt should handle this itself,\n\n#       or we should really search for readline correctly.\n\n#       For now just disable readline.\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "#Add the various sub-projects\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "#Add extra compilation flags to suppress warnings from some libraries/tools\n\n# Note that target_compile_options() *appends* to the current compilation options of\n\n# the specified target\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#Since ABC is an externally developed tool, we suppress all compiler warnings\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#Some ABC headers generate warnings, treat them as system headers to suppress warnings\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#PugiXml has some deliberate switch fallthrough cases (as indicated by comments), but they\n\n#are tagged as warnings with g++-7 (the comments don't match g++-7's suppression regexes). \n\n#Since we don't want to change PugiXml (it is developed externally), we relax the warning \n\n#level so no fallthrough warnings are generated\n",
        "Line" : 291,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "#Set output locations to be in the main source tree under the relevant folder\n",
        "Line" : 301,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 49
    },
    "Makefile" : {
      "ObjectId" : "284f7c32fd764995cac56d50b0738d12fdcf5553",
      "LastModified" : "2019-03-14T15:46:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#This is a simple wrapper which hides cmake (for convenience, and from non-expert end users).\n\n#\n\n# It supports the targets:\n\n#   'make'           - builds everything (all libaries/executables)\n\n#   'make clean'     - removes generated build objects/libraries/executables etc.\n\n#   'make distclean' - will clean everything including the cmake generated build files\n\n#\n\n# All other targets (e.g. 'make vpr') are passed to the cmake generated makefile\n\n# and processed according to the CMakeLists.txt.\n\n#\n\n# To perform a debug build use:\n\n#   'make BUILD_TYPE=debug'\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Default build type\n\n# Possible values:\n\n#    release_pgo\t#Perform a 2-stage build with profile-guided compiler optimization\n\n#    release\t\t#Build with compiler optimization\n\n#    debug\t\t\t#Build with debug info and no compiler optimization\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Convert to lower case for consistency\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Trim any _pgo in the build type name (since it would not match any of\n\n#CMake's standard build types)\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Allows users to pass parameters to cmake\n\n#  e.g. make CMAKE_PARAMS=\"-DVTR_ENABLE_SANITIZE=true\"\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# -s : Suppresss makefile output (e.g. entering/leaving directories)\n\n# --output-sync target : For parallel compilation ensure output for each target is synchronized (make version >= 4.0)\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#Check for the cmake exectuable\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#Show test log on failures with 'make test'\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#All targets in this make file are always out of date.\n\n# This ensures that any make target requests are forwarded to\n\n# the generated makefile\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#For an 'all' build with BUILD_TYPE containing 'pgo' this will perform a 2-stage compilation\n\n#with profile guided optimization. \n\n#For a BUILD_TYPE without 'pgo', a single stage (non-pgo) compilation is performed.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#Forward any targets that are not named 'distclean' or 'clean' to the generated Makefile\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\n\n#Profile Guided Optimization Build\n\n#\n",
        "Line" : 63,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "#\n\n#1st-stage build for profile generation\n\n#\n",
        "Line" : 67,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "#\n\n#Run benchmarks to generate profiling data\n\n#\n",
        "Line" : 73,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "#Need titan benchmarks for pgo_profile task\n",
        "Line" : 77,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "#Note profiling must be done serially to avoid corrupting the generated profiles\n",
        "Line" : 79,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "#\n\n#Configure 2nd-stage build to use profiling data to guide compiler optimization\n\n#\n",
        "Line" : 81,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "#BUILD_TYPE not containing 'pgo'\n",
        "Line" : 86,
        "CharPositionInLine" : 5
      },
      "18" : {
        "Text" : "#\n\n#Configure for standard build\n\n#\n",
        "Line" : 87,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "#BUILD_TYPE\n",
        "Line" : 93,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "#\n\n#Final build\n\n#\n",
        "Line" : 94,
        "CharPositionInLine" : 1
      },
      "21" : {
        "Text" : "#clean\n\n#distclean\n",
        "Line" : 99,
        "CharPositionInLine" : 6
      },
      "22" : {
        "Text" : "#Call the generated Makefile's clean, and then remove all cmake generated files\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#In case 'cmake .' was run in the source directory\n",
        "Line" : 106,
        "CharPositionInLine" : 36
      },
      "24" : {
        "Text" : "#We run cmake so we can use the generated Makefile to clean any executables\n\n#generated outside the build directory\n",
        "Line" : 113,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 25
    },
    "ODIN_II/CMakeLists.txt" : {
      "ObjectId" : "d1dfb24bc3b37965540cb74cdfc515dc2ffb5b68",
      "LastModified" : "2019-02-25T22:37:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#base extra flags for odin\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# nothing for now\n",
        "Line" : 7,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# Warn about memory access errors found by Pointer Bounds Checker\n\n# Warn about returning a pointer/reference to a local or temporary variable.\n\n# Warn about NULL being passed to argument slots marked as requiring non-NULL\n",
        "Line" : 15,
        "CharPositionInLine" : 36
      },
      "3" : {
        "Text" : "# Warn about signed-unsigned comparisons\n\n# Warn about signedness conversion\n\n# Warn when overload promotes from unsigned to signed\n\n# Warn for implicit type conversions that may change a value\n",
        "Line" : 21,
        "CharPositionInLine" : 36
      },
      "4" : {
        "Text" : "# Warn if shift count >= width of type\n\n# Warn if shift count is negative\n\n# Warn about optimizations that assume that signed overflow is undefined\n\n# Warn if a comparison is always true or always false due to the limited range of the data type\n",
        "Line" : 28,
        "CharPositionInLine" : 36
      },
      "5" : {
        "Text" : "##############\n\n# comment out the flag set you do not wish to see added below\n\n#\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#Flex and Bison are used to generate the parser\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#Find the flex and bison input files\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#Make the flex and bison targets\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#Get the include directories for the generated headers\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#Collect the source files\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#Treat .c as CXX\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#Suppress warnings in Flex/Bison generated files\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#Create the library\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#Avoid extra 'lib' prefix\n",
        "Line" : 94,
        "CharPositionInLine" : 55
      },
      "15" : {
        "Text" : "#################################\n\n# INCLUDE EXTRA ODIN FLAGS IS EXECUTED HERE\n\n#\n\n#  include the flags one at a time in case some are not supported and report the error\n\n#\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#Create the executable\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "ODIN_II/Makefile" : {
      "ObjectId" : "9d8a8ff8eddb490d02d9266ba549ec46549fc0f2",
      "LastModified" : "2019-04-16T21:16:17Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "################\n\n# build with ninja when doable\n\n################\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Default build type\n\n# Possible values:\n\n#    release\n\n#    debug\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "abc/CMakeLists.txt" : {
      "ObjectId" : "7cf6f19af1e2173a23615488a83a5a68ebee69cc",
      "LastModified" : "2018-04-02T14:53:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# filter out flags that are not appropriate for the compiler being used\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# run make to extract compiler options, linker options and list of source files\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# extract options from make output\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "abc/Makefile" : {
      "ObjectId" : "c59cf11722cc72502db5b83dd75ecc6d333b6e9f",
      "LastModified" : "2018-04-02T14:53:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Use C99 stdint.h header for platform-dependent types\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# compile ABC using the C++ comipler and put everything in the namespace $(ABC_NAMESPACE)\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# compile CUDD with ABC\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# whether to use libreadline\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# whether to compile with thread support\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# whether to compile into position independent code\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# whether to echo commands while building\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Set -Wno-unused-bug-set-variable for GCC 4.6.0 and greater only\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# LIBS := -ldl -lrt\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# implicit rules\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Actual targets\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "abc/src/bdd/cudd/Makefile" : {
      "ObjectId" : "d769547460d9663ba37bfc6472e060c7e7466556",
      "LastModified" : "2018-03-26T21:17:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# $Id$\n\n#\n\n#    Cudd - DD package\n\n#---------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define EXE as .exe for MS-DOS and derivatives.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#EXE\t= .exe\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#DDDEBUG\t= -DDD_DEBUG -DDD_CACHE_PROFILE -DDD_VERBOSE -DDD_UNIQUE_PROFILE\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# this is to create the lint library\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# files for the package\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# files for the test program\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#------------------------------------------------------\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# if the header files change, recompile\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# optimize (DECstations and Alphas only: uses u-code)\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "abc/src/phys/place/Makefile" : {
      "ObjectId" : "1f700105d890ab7f6e7e9b95b9e3e69618ab29d6",
      "LastModified" : "2018-03-26T21:17:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# For hMetis free code, uncomment the following lines\n\n#\n\n# CFLAGS = -g -pedantic -Wall -DNO_HMETIS\n\n# STATIC_LIBS =\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "abc_with_bb_support/CMakeLists.txt" : {
      "ObjectId" : "82a6ba948e8f6125f98b449b4490422354933344",
      "LastModified" : "2019-01-07T21:57:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Collect the source files\n\n# ABC contains code (e.g. .c files) which are not part of the regular build process,\n\n# and fail to compile. As a result we can't just collect all the .c files to compile,\n\n# but must list them directly\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Add the directories with required headers, but no compiled sources\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Create the library\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Avoid extra 'lib' prefix\n",
        "Line" : 123,
        "CharPositionInLine" : 54
      },
      "4" : {
        "Text" : "#Specify link-time dependancies\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#MSVC includes all math functionality in the regular standard library,\n\n#all other *nix-like systems require explicit linkage to libm\n",
        "Line" : 131,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#Create the executable\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#Disable some problematic errors/warnings in ABC\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "abc_with_bb_support/src/phys/place/Makefile" : {
      "ObjectId" : "1f700105d890ab7f6e7e9b95b9e3e69618ab29d6",
      "LastModified" : "2018-03-26T21:17:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# For hMetis free code, uncomment the following lines\n\n#\n\n# CFLAGS = -g -pedantic -Wall -DNO_HMETIS\n\n# STATIC_LIBS =\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ace2/CMakeLists.txt" : {
      "ObjectId" : "b1ad13fdcef6c0dd7f97842826304f4135a547f1",
      "LastModified" : "2019-01-07T21:57:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Compile as C++\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Create the executable\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#ACE uses some ABC functions (st__insert) which cause warnings - we suppress them here\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "blifexplorer/CMakeLists.txt" : {
      "ObjectId" : "96bfa99b91dd86abf22f7896474ca45141dc67e7",
      "LastModified" : "2019-01-07T21:57:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Check dependencies\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Collect the source files\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#The generated header files appear in the CMAKE_CURRENT_BINARY_DIR, so ensure\n\n#it is in the include directories\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Create the executable\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/modules/FilesToDirs.cmake" : {
      "ObjectId" : "f647d1cc975079747fcdd9b2f03ba4be498af047",
      "LastModified" : "2019-01-07T21:57:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Extract the directories for each header file\n",
        "Line" : 2,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "#Remove any duplicates\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#Avoid error with zero-length lists\n",
        "Line" : 10,
        "CharPositionInLine" : 28
      },
      "3" : {
        "Text" : "#Set the second argument in the caller's scope\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "cmake/modules/FindTBB.cmake" : {
      "ObjectId" : "0a1a5bb77ff2a603b808da11d23bbea883d6d1c3",
      "LastModified" : "2019-04-16T21:16:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\n\n#\n\n# Copyright (c) 2015 Justus Calvin\n\n# \n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n# \n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n# \n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# FindTBB\n\n# -------\n\n#\n\n# Find TBB include directories and libraries.\n\n#\n\n# Usage:\n\n#\n\n#  find_package(TBB [major[.minor]] [EXACT]\n\n#               [QUIET] [REQUIRED]\n\n#               [[COMPONENTS] [components...]]\n\n#               [OPTIONAL_COMPONENTS components...]) \n\n#\n\n# where the allowed components are tbbmalloc and tbb_preview. Users may modify \n\n# the behavior of this module with the following variables:\n\n#\n\n# * TBB_ROOT_DIR          - The base directory the of TBB installation.\n\n# * TBB_INCLUDE_DIR       - The directory that contains the TBB headers files.\n\n# * TBB_LIBRARY           - The directory that contains the TBB library files.\n\n# * TBB_<library>_LIBRARY - The path of the TBB the corresponding TBB library. \n\n#                           These libraries, if specified, override the \n\n#                           corresponding library search results, where <library>\n\n#                           may be tbb, tbb_debug, tbbmalloc, tbbmalloc_debug,\n\n#                           tbb_preview, or tbb_preview_debug.\n\n# * TBB_USE_DEBUG_BUILD   - The debug version of tbb libraries, if present, will\n\n#                           be used instead of the release version.\n\n#\n\n# Users may modify the behavior of this module with the following environment\n\n# variables:\n\n#\n\n# * TBB_INSTALL_DIR \n\n# * TBBROOT\n\n# * LIBRARY_PATH\n\n#\n\n# This module will set the following variables:\n\n#\n\n# * TBB_FOUND             - Set to false, or undefined, if we haven’t found, or\n\n#                           don’t want to use TBB.\n\n# * TBB_<component>_FOUND - If False, optional <component> part of TBB sytem is\n\n#                           not available.\n\n# * TBB_VERSION           - The full version string\n\n# * TBB_VERSION_MAJOR     - The major version\n\n# * TBB_VERSION_MINOR     - The minor version\n\n# * TBB_INTERFACE_VERSION - The interface version number defined in \n\n#                           tbb/tbb_stddef.h.\n\n# * TBB_<library>_LIBRARY_RELEASE - The path of the TBB release version of \n\n#                           <library>, where <library> may be tbb, tbb_debug,\n\n#                           tbbmalloc, tbbmalloc_debug, tbb_preview, or \n\n#                           tbb_preview_debug.\n\n# * TBB_<library>_LIBRARY_DEGUG - The path of the TBB release version of \n\n#                           <library>, where <library> may be tbb, tbb_debug,\n\n#                           tbbmalloc, tbbmalloc_debug, tbb_preview, or \n\n#                           tbb_preview_debug.\n\n#\n\n# The following varibles should be used to build and link with TBB:\n\n#\n\n# * TBB_INCLUDE_DIRS        - The include directory for TBB.\n\n# * TBB_LIBRARIES           - The libraries to link against to use TBB.\n\n# * TBB_LIBRARIES_RELEASE   - The release libraries to link against to use TBB.\n\n# * TBB_LIBRARIES_DEBUG     - The debug libraries to link against to use TBB.\n\n# * TBB_DEFINITIONS         - Definitions to use when compiling code that uses\n\n#                             TBB.\n\n# * TBB_DEFINITIONS_RELEASE - Definitions to use when compiling release code that\n\n#                             uses TBB.\n\n# * TBB_DEFINITIONS_DEBUG   - Definitions to use when compiling debug code that\n\n#                             uses TBB.\n\n#\n\n# This module will also create the \"tbb\" target that may be used when building\n\n# executables and libraries.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##################################\n\n# Check the build type\n\n##################################\n",
        "Line" : 97,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "##################################\n\n# Set the TBB search directories\n\n##################################\n",
        "Line" : 113,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Define search paths based on user input and environment variables\n",
        "Line" : 117,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Define the search directories based on the current platform\n",
        "Line" : 120,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Set the target architecture\n",
        "Line" : 125,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Set the TBB search library path search suffix based on the version of VC\n",
        "Line" : 132,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Add the library path search suffix for the VC independent version of TBB\n",
        "Line" : 145,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# OS X\n",
        "Line" : 149,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# TODO: Check to see which C++ library is being used by the compiler.\n",
        "Line" : 152,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# The default C++ library on OS X 10.9 and later is libc++\n",
        "Line" : 154,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# Linux\n",
        "Line" : 160,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# TODO: Check compiler version to see the suffix should be <arch>/gcc4.1 or\n\n#       <arch>/gcc4.1. For now, assume that the compiler is more recent than\n\n#       gcc 4.4.x or later.\n",
        "Line" : 163,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "##################################\n\n# Find the TBB include dir\n\n##################################\n",
        "Line" : 173,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "##################################\n\n# Set version strings\n\n##################################\n",
        "Line" : 182,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "##################################\n\n# Find TBB components\n\n##################################\n",
        "Line" : 197,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Find each component\n",
        "Line" : 207,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Search for the libraries\n",
        "Line" : 211,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "# Mark internal variables as advanced\n",
        "Line" : 238,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "##################################\n\n# Set compile flags and libraries\n\n##################################\n",
        "Line" : 246,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "##################################\n\n# Create targets\n\n##################################\n",
        "Line" : 269,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 22
    },
    "cmake/toolchains/mingw-linux-cross-compile-to-windows.cmake" : {
      "ObjectId" : "41ab6c87b8e18f4621016f409b9af4c90661b22c",
      "LastModified" : "2019-04-16T21:16:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# the name of the target operating system\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Note that if libgcc and libstdcpp are NOT statically linked the appropriate\n\n#DLL's should be installed on the target Windows machine, or distributed with\n\n#the generated executables (e.g. in the same directory as the exectuable). \n\n#\n\n#They are usually installed under:\n\n#   /usr/lib/gcc/${COMPILER_PEFIX}/*-win32/libgcc*.dll\n\n#   /usr/lib/gcc/${COMPILER_PEFIX}/*-win32/libstdc++*.dll\n\n#\n\n#For example targetting x86_64 with MingW based on gcc 5.3\n\n#   /usr/lib/gcc/x86_64-w64-mingw32/5.3-win32/libstdc++*.dll\n\n#   /usr/lib/gcc/x86_64-w64-mingw32/5.3-win32/libgcc*.dll\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Choose an appropriate compiler prefix\n\n#\n\n# for classical mingw32 (http://www.mingw.org/) set:\n\n#       \"i586-mingw32msvc\"\n\n#\n\n# for 32 or 64 bit mingw-w64 (http://mingw-w64.sourceforge.net/) set:\n\n#       \"i686-w64-mingw32\" or \"x86_64-w64-mingw32\"\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# which compilers to use for C and C++\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Set the target environment location\n\n#\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# adjust the default behaviour of the FIND_XXX() commands:\n\n# search headers and libraries in the target environment, search \n\n# programs in the host environment\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#The mingw-w64 headers and ABC's pthread.h have conflicting definitions of struct timespec.\n\n#Adding this define suppresses the duplicate definition in ABC's pthread.h\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#This forces ABC to use the stdint types (e.g. ptrdiff_t) instead of its platform\n\n#dependant type look-up. This avoids 'unkown platform' compilation errors.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#Statically link to libgcc and libstdc++ to avoid DLL dependencies\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 9
    },
    "dev/gen_arch/Makefile" : {
      "ObjectId" : "8b146aac725e3e057e104097f7365bff0ce3ee8b",
      "LastModified" : "2019-04-16T21:16:17Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "dev/odin2_helper/Makefile" : {
      "ObjectId" : "44951619c7c9f139168f369714f35be24fcfd01f",
      "LastModified" : "2019-04-16T21:16:17Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# default: run\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# default: arith_test.v\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "doc/Makefile" : {
      "ObjectId" : "09de9221510a30e7862ef761d09a12cb9e96ef15",
      "LastModified" : "2019-04-16T21:16:17Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Build a list of PDF files derived from .svg files\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# User-friendly check for sphinx-build\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Internal variables.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#Explicit Rule to build PDFs\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#How to convert SVG to PDF (needed for latex)\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "libs/CMakeLists.txt" : {
      "ObjectId" : "edd27a0000b46fd2cca5303874b57115f14fa26a",
      "LastModified" : "2019-04-16T21:16:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#VTR developed libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Externally developed libraries\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "libs/EXTERNAL/CMakeLists.txt" : {
      "ObjectId" : "55c48d9ebc80507068de6efc2e558f0961f37cbd",
      "LastModified" : "2019-04-16T21:16:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Manually synchronized external libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#External libraries synchronized with 'git subtree'\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "libs/EXTERNAL/libargparse/CMakeLists.txt" : {
      "ObjectId" : "69d7709346fa2ecc786e7814ed26afefb3a6f290",
      "LastModified" : "2019-04-16T21:16:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Only set compiler settings if we are not a sub-project\n",
        "Line" : 6,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fsanitize=address -fsanitize=leak -fsanitize=undefined\") \n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#Create the library\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Avoid extra 'lib' prefix\n",
        "Line" : 21,
        "CharPositionInLine" : 56
      },
      "4" : {
        "Text" : "#Create the test executable\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#Create the example executable\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "libs/EXTERNAL/libblifparse/CMakeLists.txt" : {
      "ObjectId" : "41d28cb7895a6911c73814c1b870b1fc2d2c8279",
      "LastModified" : "2019-04-16T21:16:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Only set compiler settings if we are not a sub-project\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fsanitize=address -fsanitize=leak -fsanitize=undefined\") \n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#Flex and Bison are used to generate the parser\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Find the flex and bison input files\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Make the flex and bison targets\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Suppress warnings in Flex/Bison generated files\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#Create the library\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#Avoid extra 'lib' prefix\n",
        "Line" : 46,
        "CharPositionInLine" : 57
      },
      "8" : {
        "Text" : "#Create the test executable\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#Add the tests if we are the root project\n",
        "Line" : 53,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 10
    },
    "libs/EXTERNAL/libblifparse/cmake/modules/HeadersToIncludeDirs.cmake" : {
      "ObjectId" : "6967cad1850dee36285a9f9146938408fb3fdde8",
      "LastModified" : "2019-04-16T21:16:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Extract the directories for each header file\n",
        "Line" : 2,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "#Remove any duplicates\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#Avoid error with zero-length lists\n",
        "Line" : 10,
        "CharPositionInLine" : 28
      },
      "3" : {
        "Text" : "#Set the second argument in the caller's scope\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "libs/EXTERNAL/libcatch/CMakeLists.txt" : {
      "ObjectId" : "bdb58fa5a1e2bdfafd78c992aa3883818b0b88a9",
      "LastModified" : "2019-04-16T21:16:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Prepare \"Catch\" library for other executables\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#This should be removed when we switch to >= CMake 3.0\n",
        "Line" : 3,
        "CharPositionInLine" : 53
      },
      "2" : {
        "Text" : "#CMake 2.8.12 doesn't support the INTERFACE option to target_include_directories(),\n\n#so we must set the property directly (should use commented version when we switch to CMake >= 3.0)\n\n#target_include_directories(libcatch INTERFACE ${CATCH_INCLUDE_DIR})\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "libs/EXTERNAL/libpugixml/CMakeLists.txt" : {
      "ObjectId" : "5a0995732ad49f9cb36a6b137d6c6711ddaab483",
      "LastModified" : "2019-04-16T21:16:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Create the library\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Avoid extra 'lib' prefix\n",
        "Line" : 15,
        "CharPositionInLine" : 55
      },
      "2" : {
        "Text" : "#We don't worry about errors in pugixml, since it is developed externally\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "libs/EXTERNAL/libpugixml/scripts/CMakeLists.txt" : {
      "ObjectId" : "9f49833095f4ee684a670ffbdfea60931918836b",
      "LastModified" : "2019-04-16T21:16:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Pre-defines standard install locations on *nix systems.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Enable C++11 long long for compilers that are capable of it\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "libs/EXTERNAL/libsdcparse/CMakeLists.txt" : {
      "ObjectId" : "6993d0137f6136c5622ab974ad77ef36cfccb2b5",
      "LastModified" : "2019-04-16T21:16:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Only set compiler settings if we are not a sub-project\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fsanitize=address -fsanitize=leak -fsanitize=undefined\") \n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#Flex and Bison are used to generate the parser\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Find the flex and bison input files\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Make the flex and bison targets\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Treat .c as CXX\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#Suppress warnings in Flex/Bison generated files\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#Create the library\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#Avoid extra 'lib' prefix\n",
        "Line" : 50,
        "CharPositionInLine" : 56
      },
      "9" : {
        "Text" : "#Create the test executable\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "libs/EXTERNAL/libsdcparse/cmake/modules/HeadersToIncludeDirs.cmake" : {
      "ObjectId" : "6967cad1850dee36285a9f9146938408fb3fdde8",
      "LastModified" : "2019-04-16T21:16:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Extract the directories for each header file\n",
        "Line" : 2,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "#Remove any duplicates\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#Avoid error with zero-length lists\n",
        "Line" : 10,
        "CharPositionInLine" : 28
      },
      "3" : {
        "Text" : "#Set the second argument in the caller's scope\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "libs/EXTERNAL/libtatum/CMakeLists.txt" : {
      "ObjectId" : "cbdea2c92ea76b33b760765a8059969d57eb4c13",
      "LastModified" : "2019-04-16T21:16:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Set the default build type if not specified\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "#Only set compiler flags if not a sub-project\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#Only build the parser, test executable and docs if not a sub-project\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "libs/EXTERNAL/libtatum/Makefile" : {
      "ObjectId" : "8adb4229f556379e905b46765217d55fce6f7a78",
      "LastModified" : "2019-04-16T21:16:17Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#This is a simple wrapper hiding cmake from non-expert end users.\n\n#\n\n# It supports the targets:\n\n#   'make'           - builds everything (all libaries/executables)\n\n#   'make clean'     - removes generated build objects/libraries/executables etc.\n\n#   'make distclean' - will clean everything including the cmake generated build files\n\n#\n\n# All other targets (e.g. 'make tatum_test') are passed to the cmake generated makefile\n\n# and processed according to the CMakeLists.txt.\n\n#\n\n# To perform a debug build use:\n\n#   'make BUILD_TYPE=debug'\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Default build type\n\n# Possible values:\n\n#    release\n\n#    debug\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Allows users to pass parameters to cmake\n\n#  e.g. make CMAKE_PARAMS=\"-DVTR_ENABLE_SANITIZE=true\"\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# -s : Suppresss makefile output (e.g. entering/leaving directories)\n\n# --output-sync target : For parallel compilation ensure output for each target is synchronized (make version >= 4.0)\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Check for the cmake exectuable\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Show test log on failures with 'make test'\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#All targets in this make file are always out of date.\n\n# This ensures that any make target requests are forwarded to\n\n# the generated makefile\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#Build everything\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#Call the generated Makefile's clean, and then remove all cmake generated files\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#In case 'cmake .' was run in the source directory\n",
        "Line" : 53,
        "CharPositionInLine" : 36
      },
      "10" : {
        "Text" : "#Call cmake to generate the main Makefile\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#Forward any targets that are not named 'distclean' to the generated Makefile\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "libs/EXTERNAL/libtatum/cmake/modules/FindTBB.cmake" : {
      "ObjectId" : "0a1a5bb77ff2a603b808da11d23bbea883d6d1c3",
      "LastModified" : "2019-04-16T21:16:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\n\n#\n\n# Copyright (c) 2015 Justus Calvin\n\n# \n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n# \n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n# \n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# FindTBB\n\n# -------\n\n#\n\n# Find TBB include directories and libraries.\n\n#\n\n# Usage:\n\n#\n\n#  find_package(TBB [major[.minor]] [EXACT]\n\n#               [QUIET] [REQUIRED]\n\n#               [[COMPONENTS] [components...]]\n\n#               [OPTIONAL_COMPONENTS components...]) \n\n#\n\n# where the allowed components are tbbmalloc and tbb_preview. Users may modify \n\n# the behavior of this module with the following variables:\n\n#\n\n# * TBB_ROOT_DIR          - The base directory the of TBB installation.\n\n# * TBB_INCLUDE_DIR       - The directory that contains the TBB headers files.\n\n# * TBB_LIBRARY           - The directory that contains the TBB library files.\n\n# * TBB_<library>_LIBRARY - The path of the TBB the corresponding TBB library. \n\n#                           These libraries, if specified, override the \n\n#                           corresponding library search results, where <library>\n\n#                           may be tbb, tbb_debug, tbbmalloc, tbbmalloc_debug,\n\n#                           tbb_preview, or tbb_preview_debug.\n\n# * TBB_USE_DEBUG_BUILD   - The debug version of tbb libraries, if present, will\n\n#                           be used instead of the release version.\n\n#\n\n# Users may modify the behavior of this module with the following environment\n\n# variables:\n\n#\n\n# * TBB_INSTALL_DIR \n\n# * TBBROOT\n\n# * LIBRARY_PATH\n\n#\n\n# This module will set the following variables:\n\n#\n\n# * TBB_FOUND             - Set to false, or undefined, if we haven’t found, or\n\n#                           don’t want to use TBB.\n\n# * TBB_<component>_FOUND - If False, optional <component> part of TBB sytem is\n\n#                           not available.\n\n# * TBB_VERSION           - The full version string\n\n# * TBB_VERSION_MAJOR     - The major version\n\n# * TBB_VERSION_MINOR     - The minor version\n\n# * TBB_INTERFACE_VERSION - The interface version number defined in \n\n#                           tbb/tbb_stddef.h.\n\n# * TBB_<library>_LIBRARY_RELEASE - The path of the TBB release version of \n\n#                           <library>, where <library> may be tbb, tbb_debug,\n\n#                           tbbmalloc, tbbmalloc_debug, tbb_preview, or \n\n#                           tbb_preview_debug.\n\n# * TBB_<library>_LIBRARY_DEGUG - The path of the TBB release version of \n\n#                           <library>, where <library> may be tbb, tbb_debug,\n\n#                           tbbmalloc, tbbmalloc_debug, tbb_preview, or \n\n#                           tbb_preview_debug.\n\n#\n\n# The following varibles should be used to build and link with TBB:\n\n#\n\n# * TBB_INCLUDE_DIRS        - The include directory for TBB.\n\n# * TBB_LIBRARIES           - The libraries to link against to use TBB.\n\n# * TBB_LIBRARIES_RELEASE   - The release libraries to link against to use TBB.\n\n# * TBB_LIBRARIES_DEBUG     - The debug libraries to link against to use TBB.\n\n# * TBB_DEFINITIONS         - Definitions to use when compiling code that uses\n\n#                             TBB.\n\n# * TBB_DEFINITIONS_RELEASE - Definitions to use when compiling release code that\n\n#                             uses TBB.\n\n# * TBB_DEFINITIONS_DEBUG   - Definitions to use when compiling debug code that\n\n#                             uses TBB.\n\n#\n\n# This module will also create the \"tbb\" target that may be used when building\n\n# executables and libraries.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##################################\n\n# Check the build type\n\n##################################\n",
        "Line" : 97,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "##################################\n\n# Set the TBB search directories\n\n##################################\n",
        "Line" : 113,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Define search paths based on user input and environment variables\n",
        "Line" : 117,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Define the search directories based on the current platform\n",
        "Line" : 120,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Set the target architecture\n",
        "Line" : 125,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Set the TBB search library path search suffix based on the version of VC\n",
        "Line" : 132,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Add the library path search suffix for the VC independent version of TBB\n",
        "Line" : 145,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# OS X\n",
        "Line" : 149,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# TODO: Check to see which C++ library is being used by the compiler.\n",
        "Line" : 152,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# The default C++ library on OS X 10.9 and later is libc++\n",
        "Line" : 154,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# Linux\n",
        "Line" : 160,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# TODO: Check compiler version to see the suffix should be <arch>/gcc4.1 or\n\n#       <arch>/gcc4.1. For now, assume that the compiler is more recent than\n\n#       gcc 4.4.x or later.\n",
        "Line" : 163,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "##################################\n\n# Find the TBB include dir\n\n##################################\n",
        "Line" : 173,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "##################################\n\n# Set version strings\n\n##################################\n",
        "Line" : 182,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "##################################\n\n# Find TBB components\n\n##################################\n",
        "Line" : 197,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Find each component\n",
        "Line" : 207,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Search for the libraries\n",
        "Line" : 211,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "# Mark internal variables as advanced\n",
        "Line" : 238,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "##################################\n\n# Set compile flags and libraries\n\n##################################\n",
        "Line" : 246,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "##################################\n\n# Create targets\n\n##################################\n",
        "Line" : 269,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 22
    },
    "libs/EXTERNAL/libtatum/doc/CMakeLists.txt" : {
      "ObjectId" : "6bd35155a785d208b0c29e4c5d1574c308f14135",
      "LastModified" : "2019-04-16T21:16:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#find_package(Doxygen)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#if(DOXYGEN_FOUND)\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#set(doxyfile_in ${CMAKE_CURRENT_SOURCE_DIR}/doxyfile.in)\n\n#set(doxyfile ${CMAKE_CURRENT_BINARY_DIR}/doxyfile)\n",
        "Line" : 5,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#configure_file(${doxyfile_in} ${doxyfile} @ONLY)\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#add_custom_target(doc\n",
        "Line" : 10,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#COMMAND ${DOXYGEN_EXECUTABLE} ${doxyfile}\n\n#WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}\n\n#COMMENT \"Generating API Documentation with Doxygen\"\n\n#VERBATIM)\n",
        "Line" : 11,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "#else()\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#message(INFO \"Doxygen not found. Documentation will not be built\")\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#endif()\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "libs/EXTERNAL/libtatum/libtatum/CMakeLists.txt" : {
      "ObjectId" : "64fd60241cdb33aa719b759672c59ccc17755fe7",
      "LastModified" : "2019-04-16T21:16:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n#\n\n#Check for parallel execution framework support\n\n#\n\n#\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Check for Thread Building Blocks support\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n#\n\n# Determine parallel execution framework\n\n#\n\n#\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#The actual execution engine to use (based on what is available)\n",
        "Line" : 23,
        "CharPositionInLine" : 35
      },
      "4" : {
        "Text" : "#Pick the best supported execution engine\n",
        "Line" : 26,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#The user requested a specific execution engine\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#Pass\n",
        "Line" : 39,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "#Set the engine to use (it must be valid or we would have errored out)\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#\n\n#\n\n# Build files configuration\n\n#\n\n#\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#Source files for the library\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#Include directories\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\n\n#\n\n# Define the actual build targets\n\n#\n\n#\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#Define the library\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#Avoid extra 'lib' prefix\n",
        "Line" : 68,
        "CharPositionInLine" : 53
      },
      "14" : {
        "Text" : "#Export library headers\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#Setup parallel execution\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#Use the scalable memory allocator\n",
        "Line" : 79,
        "CharPositionInLine" : 52
      },
      "17" : {
        "Text" : "#Nothing to do\n",
        "Line" : 82,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 18
    },
    "libs/EXTERNAL/libtatum/libtatumparse/CMakeLists.txt" : {
      "ObjectId" : "9b19a07dadc01d545756d1ed827d00fd2f3d8c95",
      "LastModified" : "2019-04-16T21:16:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Flex and Bison are used to generate the parser\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Include directories\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Find the flex and bison input files\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Make the flex and bison targets\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Apply suppression flags to the relevant files, must come after flex/bision\n\n#targets for output vars to be defined\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Treat .c as CXX\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#Suppress attribute warnings from bison header\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#Suppress warnings in Flex/Bison generated files\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#Create the library\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#Need binary dir for flex/bison generated headers\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#Avoid extra 'lib' prefix\n",
        "Line" : 56,
        "CharPositionInLine" : 58
      },
      "CommentCount" : 11
    },
    "libs/EXTERNAL/libtatum/tatum_test/CMakeLists.txt" : {
      "ObjectId" : "df76056d4eb0d345053b7a6e085f4260d0692c26",
      "LastModified" : "2019-04-16T21:16:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Compiler flags come from parent\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#\n\n# Build files configuration\n\n#\n\n#\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Source files for the demo executable (not generated)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Include directories\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Remove duplicate include directories\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# Configure intermediate files\n\n#\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n#\n\n# Define the actual build targets\n\n#\n\n#\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#Define Executable\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#Exectuable Includes\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#Executable links to the library\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#To selectively profile using callgrind:\n\n#  valgrind --tool=callgrind --collect-atstart=no --instr-atstart=no --cache-sim=yes --cacheuse=yes ./command\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 11
    },
    "libs/EXTERNAL/libtatum/tatumparse_test/CMakeLists.txt" : {
      "ObjectId" : "395e866033801302ad8acecf99ca7add49cdd603",
      "LastModified" : "2019-04-16T21:16:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/libarchfpga/CMakeLists.txt" : {
      "ObjectId" : "1a549cb0555f07e2dcc6ebd5e4122cf3bcb19f77",
      "LastModified" : "2019-04-16T21:16:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Remove test executable from library\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Create the library\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Avoid extra 'lib' prefix\n",
        "Line" : 18,
        "CharPositionInLine" : 56
      },
      "3" : {
        "Text" : "#Specify link-time dependancies\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Create the test executable\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "libs/libeasygl/CMakeLists.txt" : {
      "ObjectId" : "0108e0c414f34eaba519b83d4aa61a96ff2b8d9f",
      "LastModified" : "2019-04-16T21:16:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#For FindFontconfig\n",
        "Line" : 4,
        "CharPositionInLine" : 88
      },
      "1" : {
        "Text" : "#Treat .c as CXX\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Handle graphics setup\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Check for dependancies\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#CMake in CYGWIN does not define WIN32\n",
        "Line" : 24,
        "CharPositionInLine" : 24
      },
      "5" : {
        "Text" : "#Windows\n",
        "Line" : 25,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "#CYGWIN requires explicitly linking to the windows platform libraries\n",
        "Line" : 29,
        "CharPositionInLine" : 12
      },
      "7" : {
        "Text" : "#Assume unix-like\n",
        "Line" : 33,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "#Look for X11, font and cairo libraries\n",
        "Line" : 35,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "#Got all libraries, enable\n",
        "Line" : 63,
        "CharPositionInLine" : 12
      },
      "10" : {
        "Text" : "#Disable\n",
        "Line" : 67,
        "CharPositionInLine" : 12
      },
      "11" : {
        "Text" : "#Create the library\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#Avoid extra 'lib' prefix\n",
        "Line" : 86,
        "CharPositionInLine" : 54
      },
      "CommentCount" : 13
    },
    "libs/libeasygl/cmake/modules/FindCairo.cmake" : {
      "ObjectId" : "e78f1bf5866802fcfcf72513575dce07b5f3a1e1",
      "LastModified" : "2019-04-16T21:16:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Cairo\n\n# Once done, this will define\n\n#\n\n#  CAIRO_FOUND - system has Cairo\n\n#  CAIRO_INCLUDE_DIRS - the Cairo include directories\n\n#  CAIRO_LIBRARIES - link these to use Cairo\n\n#\n\n# Copyright (C) 2012 Raphael Kubo da Costa <rakuco@webkit.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# 1.  Redistributions of source code must retain the above copyright\n\n#     notice, this list of conditions and the following disclaimer.\n\n# 2.  Redistributions in binary form must reproduce the above copyright\n\n#     notice, this list of conditions and the following disclaimer in the\n\n#     documentation and/or other materials provided with the distribution.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND ITS CONTRIBUTORS ``AS\n\n# IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n\n# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\n# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR ITS\n\n# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\n# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\n# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;\n\n# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n\n# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n\n# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n\n# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FIXME: After we require CMake 2.8.2 we can pass QUIET to this call.\n",
        "Line" : 32,
        "CharPositionInLine" : 34
      },
      "2" : {
        "Text" : "# FIXME: Should not be needed anymore once we start depending on CMake 2.8.3\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# FIXME: Use IF (NOT ...) with CMake 2.8.2+ to get rid of the ELSE block\n",
        "Line" : 69,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 4
    },
    "libs/libeasygl/cmake/modules/FindFontconfig.cmake" : {
      "ObjectId" : "e6fa81d8ef73601bc8171c2537efd022e02fd841",
      "LastModified" : "2019-04-16T21:16:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the  Fontconfig\n\n# Once done this will define\n\n#\n\n#  FONTCONFIG_FOUND - system has Fontconfig\n\n#  FONTCONFIG_INCLUDE_DIR - The include directory to use for the fontconfig headers\n\n#  FONTCONFIG_LIBRARIES - Link these to use FONTCONFIG\n\n#  FONTCONFIG_DEFINITIONS - Compiler switches required for using FONTCONFIG\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006,2007 Laurent Montel, <montel@kde.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# 1. Redistributions of source code must retain the copyright\n\n#    notice, this list of conditions and the following disclaimer.\n\n# 2. Redistributions in binary form must reproduce the copyright\n\n#    notice, this list of conditions and the following disclaimer in the\n\n#    documentation and/or other materials provided with the distribution.\n\n# 3. The name of the author may not be used to endorse or promote products \n\n#    derived from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n\n# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n\n# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n\n# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\n\n# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n\n# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n\n# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "libs/liblog/CMakeLists.txt" : {
      "ObjectId" : "b0d9ace3595c936a94f99ba70512304bc86050bb",
      "LastModified" : "2019-04-16T21:16:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Remove test executable from library\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Create the library\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Avoid extra 'lib' prefix\n",
        "Line" : 18,
        "CharPositionInLine" : 51
      },
      "3" : {
        "Text" : "#Create the test executable\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "libs/libpugiutil/CMakeLists.txt" : {
      "ObjectId" : "b3dd77d3a48ff9e9f89e0687d32a5200712bed35",
      "LastModified" : "2019-04-16T21:16:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Source files and library\n\n#\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Create the library\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Avoid extra 'lib' prefix\n",
        "Line" : 17,
        "CharPositionInLine" : 56
      },
      "CommentCount" : 3
    },
    "libs/librtlnumber/CMakeLists.txt" : {
      "ObjectId" : "76d6aac49118890366379e4527ebb31aea241558",
      "LastModified" : "2019-04-16T21:16:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Create the library\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Avoid extra 'lib' prefix\n",
        "Line" : 15,
        "CharPositionInLine" : 57
      },
      "2" : {
        "Text" : "#Create the test executable\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Create the executable\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "libs/librtlnumber/Makefile" : {
      "ObjectId" : "660e14349ee07ff19dda27851d499fd9298fe2f9",
      "LastModified" : "2019-04-16T21:16:17Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# If the first argument is \"run\"...\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# use the rest as arguments for \"make\"\n",
        "Line" : 3,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# ...and turn them into do-nothing targets\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# use the rest as arguments for \"make\"\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# ...and turn them into do-nothing targets\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# use the rest as arguments for \"make\"\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# ...and turn them into do-nothing targets\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# use the rest as arguments for \"make\"\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# ...and turn them into do-nothing targets\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# use the rest as arguments for \"make\"\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# ...and turn them into do-nothing targets\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "#  \\\n# -fsanitize=address -fno-omit-frame-pointer -fno-optimize-sibling-calls\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "libs/librtlnumber/unit_test/Makefile" : {
      "ObjectId" : "f58e5477d6b0afa56cfa09b1657f3c45a24558fa",
      "LastModified" : "2019-04-16T21:16:17Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# If the first argument is \"run\"...\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# use the rest as arguments for \"make\"\n",
        "Line" : 3,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# ...and turn them into do-nothing targets\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# use the rest as arguments for \"make\"\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# ...and turn them into do-nothing targets\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# use the rest as arguments for \"make\"\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# ...and turn them into do-nothing targets\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# use the rest as arguments for \"make\"\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# ...and turn them into do-nothing targets\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# use the rest as arguments for \"make\"\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# ...and turn them into do-nothing targets\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 11
    },
    "libs/libvtrutil/CMakeLists.txt" : {
      "ObjectId" : "3c6fce5ec098bf0d553f8b071b5855c0e5d982a6",
      "LastModified" : "2019-04-16T21:16:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Version info\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Compiler info\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set default version numbers in case not specified\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We always update the vtr_version.cpp file every time the project is built, \n\n# to ensure the git revision and dirty status are up to date.\n\n#\n\n# We need to do this in two stages:\n\n#\n\n# 1) We a custom target 'version' (which is always out of date) so it will always be run.\n\n#    It touches the unprocessed version input file so it too will always be out of date.\n\n#\n\n# 2) The custom command depends on the touched version input file and generates the processed \n\n#    version file, with updated values. The custom command uses the configure_version.cmake \n\n#    script to generate the up-to-date vtr_version.cpp\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Source files and library\n\n#\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Add the version file to the sources\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#Create the library\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#Avoid extra 'lib' prefix\n",
        "Line" : 70,
        "CharPositionInLine" : 55
      },
      "8" : {
        "Text" : "#Ensure version is always up to date by requiring version to be run first\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#Specify link-time dependancies\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\n\n# Unit Tests\n\n#\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "libs/libvtrutil/cmake/modules/configure_version.cmake" : {
      "ObjectId" : "72519f2c32301c0ee78ac5c965fe748b82d309a5",
      "LastModified" : "2019-04-16T21:16:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Versioning information\n\n#\n\n#Figure out the git revision\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Git describe failed, usually this means we\n\n#aren't in a git repo -- so don't set a VCS \n\n#revision\n",
        "Line" : 13,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "#Couldn't find git, so can't look-up VCS revision\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#Set the version according to semver.org\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Other build meta-data\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "utils/CMakeLists.txt" : {
      "ObjectId" : "fbde764254c0252039bc1d7636bd1c0fe07f377f",
      "LastModified" : "2019-04-16T21:16:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "utils/fasm/CMakeLists.txt" : {
      "ObjectId" : "1280304bd981c5e70fefafe06248b4b5afa2049e",
      "LastModified" : "2019-04-16T21:16:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Create library\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Specify link-time dependancies\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Unit Tests\n\n#\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "verilog_preprocessor/Makefile" : {
      "ObjectId" : "4a90996d864c65498ad2289fd7c30099f1581dd3",
      "LastModified" : "2019-04-16T21:16:17Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# default: run\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# default: arith_test.v\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "vpr/CMakeLists.txt" : {
      "ObjectId" : "6a3d152462636494494f5d489f297c4fac25ff05",
      "LastModified" : "2019-04-16T21:16:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#For cmake >= 3.9 INTERPROCEDURAL_OPTIMIZATION behaviour we need to explicitly\n\n#set the cmake policy version number\n",
        "Line" : 4,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# If we are using verison < 3.9 then setting INTERPROCEDURAL_OPTIMIZATION\n\n# has no effect unless an Intel compiler is used\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#\n\n# VPR Build Options\n\n#\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Build Configuration\n\n#\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Collect the source files\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Create the library\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#Avoid extra 'lib' prefix\n",
        "Line" : 44,
        "CharPositionInLine" : 51
      },
      "7" : {
        "Text" : "#Specify link-time dependancies\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#Create the executable\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\n\n# Profile Guilded Optimization Configuration\n\n#\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#GCC-like\n",
        "Line" : 73,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "#Build will generate profiling information\n",
        "Line" : 74,
        "CharPositionInLine" : 25
      },
      "12" : {
        "Text" : "#GCC-like\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "#Build will use previously generated profiling information to guide code optimization\n\n#Warn if the used profiling information doesn't match the source code or is missing\n",
        "Line" : 78,
        "CharPositionInLine" : 24
      },
      "14" : {
        "Text" : "#Pass\n",
        "Line" : 103,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "#\n\n# Execution Engine Configuration\n\n#\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#Figure out which engine to use\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#Configure the build to use the selected engine\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#Use the scalable memory allocator\n",
        "Line" : 139,
        "CharPositionInLine" : 50
      },
      "19" : {
        "Text" : "#\n\n# Signal handler configuration\n\n#\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#Check wheter VPR can use sigaction to handle signals (only supported by POSIX)\n",
        "Line" : 151,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "#\n\n# Unit Tests\n\n#\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 22
    },
    "vtr_flow/benchmarks/arithmetic/FIR_filters/verilog/Makefile" : {
      "ObjectId" : "9a0906d67439f5e80f0794d0a9ef47c1d956aff5",
      "LastModified" : "2019-04-16T21:16:17Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "vtr_flow/benchmarks/arithmetic/multless_consts/verilog/muxmcmtool/Makefile" : {
      "ObjectId" : "a93455e5fcf48343ee0f4b963529ca98259754ce",
      "LastModified" : "2019-04-16T21:16:17Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "vtr_flow/benchmarks/arithmetic/multless_consts/verilog/synth/Makefile" : {
      "ObjectId" : "829db0cd92d193e5e049c45f51b7ff835efaece2",
      "LastModified" : "2019-04-16T21:16:17Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#acsel adj graphs\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 38,
    "MAKEFILE" : 16
  },
  "ElapsedTime" : 5571
}