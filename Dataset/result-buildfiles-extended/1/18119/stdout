{
  "Repository" : "18119",
  "Revision" : "HEAD",
  "ObjectId" : "7ea7ad9da06fa4b4ef0bd830d0dc14cabf70870c",
  "CommitTime" : "2019-04-16T11:25:56Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "49ec196f119a5308c1c7ce06115eaa8d193a8142",
      "LastModified" : "2019-03-25T14:21:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake version check. Require CMake 3.5, required by ParaView 5.1.0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define the project name.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Policy settings\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# System package target is important for the windows builds as it allows us to\n\n# package only the dlls and exes and exclude libs. Defaults to empty for other\n\n# platforms.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add the path to our custom 'find' modules\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Send libraries to common place, reference in several places so must be at top\n\n# level\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Quick exit if we only want data targets\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# System test config files\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Packaging configuration\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# empty string and release are treated as the same thing\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Set package name here\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Bootstrap any dependencies\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Configure Eigen early\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Set ParaView information since later items depend on it\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# VATES flag. Requires ParaView\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Poco::File throws an exception when a backslash is used.\n",
        "Line" : 69,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Set expected variables for OS X\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Cross-platform setup\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Find OpenGL\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# FindOpenGL does not (as of CMake 2.6.4) take notice of the REQUIRED\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# We probably don't want this to run on every build.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Qt/Qwt/PyQt/sip\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# gsl is currently needed by Geometry, Algorithms, Curvefitting, & MantidPlot\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Now add in all the components\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Flag that this is a full build, i.e not framework only\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Set the path to the built docs directory here so that it can be used in the\n\n# Kernel project for populating the properties file\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Framework Build options\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Experimental feature. Unix only at this point.\n",
        "Line" : 203,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# Collect all tests together\n",
        "Line" : 221,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# Docs requirements\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# run python to see if the theme is installed\n",
        "Line" : 235,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# System test data target\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# remove initial \\n\n",
        "Line" : 267,
        "CharPositionInLine" : 1
      },
      "33" : {
        "Text" : "# Installation settings\n",
        "Line" : 279,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# N.B. INBUNDLE variable is empty except on Mac (set in DarwinSetup.cmake)\n",
        "Line" : 281,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Install the files (.desktop and icon) to create a menu item, but only if\n\n# installing to /opt/Mantid\n",
        "Line" : 284,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# THIS MUST BE THE LAST SUB_DIRECTORY ADDED. See\n\n# Framework/PostInstall/CMakeLists for an explanation\n",
        "Line" : 298,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Conda\n",
        "Line" : 302,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# CPack settings\n",
        "Line" : 308,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Keep this in a defaulted-to-off option\n",
        "Line" : 310,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Mac package settings\n",
        "Line" : 315,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# rhel requirements - only used if package requested is rpm\n",
        "Line" : 324,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "# RHEL6\n",
        "Line" : 344,
        "CharPositionInLine" : 46
      },
      "43" : {
        "Text" : "# On RHEL6 we have to use an updated qscintilla to fix an auto complete\n\n# bug\n",
        "Line" : 348,
        "CharPositionInLine" : 6
      },
      "44" : {
        "Text" : "# On RHEL6 we are using SCL packages for Qt\n",
        "Line" : 353,
        "CharPositionInLine" : 8
      },
      "45" : {
        "Text" : "# assumes RHEL7 Require matplotlib >= 1.5 to fix bug in latex\n\n# rendering - oddly matplotlib-qt4 contains qt5 backend as well\n",
        "Line" : 356,
        "CharPositionInLine" : 11
      },
      "46" : {
        "Text" : "# fix up the fact that it was\n\n# made as an array\n",
        "Line" : 374,
        "CharPositionInLine" : 50
      },
      "47" : {
        "Text" : "# ubuntu requirements - only used if package requested is deb\n",
        "Line" : 381,
        "CharPositionInLine" : 4
      },
      "48" : {
        "Text" : "# bionic and newer\n",
        "Line" : 421,
        "CharPositionInLine" : 11
      },
      "49" : {
        "Text" : "# transitional package for bionic\n",
        "Line" : 447,
        "CharPositionInLine" : 32
      },
      "50" : {
        "Text" : "# python 2\n",
        "Line" : 457,
        "CharPositionInLine" : 11
      },
      "51" : {
        "Text" : "# parse list to string required for deb package\n",
        "Line" : 481,
        "CharPositionInLine" : 4
      },
      "52" : {
        "Text" : "# fix up the fact that it\n\n# was made as an array\n",
        "Line" : 485,
        "CharPositionInLine" : 52
      },
      "53" : {
        "Text" : "# soft requirement of tcmalloc if selected\n",
        "Line" : 493,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# run cpack configuration\n",
        "Line" : 502,
        "CharPositionInLine" : 2
      },
      "55" : {
        "Text" : "# let people know what is coming out the other end - must be after cpack\n\n# generates value for rpm\n",
        "Line" : 504,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 56
    },
    "Framework/API/CMakeLists.txt" : {
      "ObjectId" : "e5a051254e9dbb68415bb5f1856de8649e88fef5",
      "LastModified" : "2019-03-28T12:37:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Have to link to winsock and bcrypt library on Windows\n",
        "Line" : 511,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add a precompiled header where they are supported\n",
        "Line" : 517,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add the target for this directory\n",
        "Line" : 519,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set the name of the generated library\n",
        "Line" : 521,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add to the 'Framework' group in VS\n",
        "Line" : 534,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add the unit tests directory\n",
        "Line" : 549,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Installation settings\n",
        "Line" : 552,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Framework/API/test/CMakeLists.txt" : {
      "ObjectId" : "4150411c5c65ca7fd5e865481e70479a23cfe85e",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This variable is used within the cxxtest_add_test macro to build these\n\n# helper classes into the test executable. It will go out of scope at the end\n\n# of this file so doesn't need un-setting\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Test data\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Add to the 'FrameworkTests' group in VS\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "Framework/Algorithms/CMakeLists.txt" : {
      "ObjectId" : "c2c4c6d7f2d4013b3e5ad6a98d7160cc9a7317d3",
      "LastModified" : "2019-04-15T11:53:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add a precompiled header where they are supported\n",
        "Line" : 1025,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add the target for this directory\n",
        "Line" : 1027,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the name of the generated library\n",
        "Line" : 1029,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add to the 'Framework' group in VS\n",
        "Line" : 1045,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add the unit tests directory\n",
        "Line" : 1057,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Installation settings\n",
        "Line" : 1060,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "Framework/Algorithms/test/CMakeLists.txt" : {
      "ObjectId" : "1b70d6ea130c909025217bde6e9bfbaea9f65275",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Generate the MultiplyTest.h and DivideTest.h\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Generate the PlusTest.h and MinusTest.h\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Make the rest of the tests\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# This variable is used within the cxxtest_add_test macro to build these\n\n# helper classes into the test executable. It will go out of scope at the end\n\n# of this file so doesn't need un-setting\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Test data\n",
        "Line" : 66,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Add to the 'FrameworkTests' group in VS\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# python unit tests\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Framework/Beamline/CMakeLists.txt" : {
      "ObjectId" : "54204a7d7b14792fc6e6ca2e6bfca90b3b6b5fd1",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the target for this directory\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the name of the generated library\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add to the 'Framework' group in VS\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add the unit tests directory\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Installation settings\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Framework/Beamline/test/CMakeLists.txt" : {
      "ObjectId" : "46943b28dbc4d505aff25f5798fb31d19dd0f4de",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add to the 'FrameworkTests' group in VS\n",
        "Line" : 19,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Framework/CMakeLists.txt" : {
      "ObjectId" : "5b61ab0bc2887c7ed9440782375b6db19e7382c6",
      "LastModified" : "2019-03-28T09:31:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is mainly here so you don't get a complaint when running cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add the path to our custom 'find' modules\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Define the project name. Allows building framework as a separate project.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If building as a stand-alone project, call our common setup script\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Look for dependencies - bail out if any necessary ones not found\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Globally-linked libraries variable\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Might just as well link everything to Boost & Poco (found in CommonSetup)\n\n# Boost_LIBRARIES variable is redefined by MPISetup so capture the value here\n\n# and just add MPI stuff if required\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# MPI-enable build setup\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Only available on Linux (specifically RedHat), and for a framework-only build\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Now add the packages one-by-one, building up the dependencies as we go\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# target for all framework tests\n",
        "Line" : 58,
        "CharPositionInLine" : 34
      },
      "11" : {
        "Text" : "# HistogramData has header-only dependency on Kernel, so Kernel comes after.\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Indexing has header-only dependency on Kernel, so Kernel comes after.\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# muParser needed by Geometry and subsequent packages\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# If an MPI-enabled build, add in the MPI-specific algorithms package\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Add a custom target to build all of the Framework\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Installation settings These need to be here so that a Framework only install\n\n# will pick them up\n\n#\n\n# N.B. INBUNDLE variable is empty except on Mac (set in DarwinSetup.cmake)\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Create instrument directory\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Ships .py files but only ship compiled pyd files for supported platforms.\n",
        "Line" : 176,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# General windows environment\n",
        "Line" : 177,
        "CharPositionInLine" : 12
      },
      "20" : {
        "Text" : "# Recommended way of detecting 64- vs 32-bit\n\n# build Excludes .so files & _win32 binaries\n",
        "Line" : 178,
        "CharPositionInLine" : 36
      },
      "21" : {
        "Text" : "# Excludes so files & _win64 binaries\n",
        "Line" : 197,
        "CharPositionInLine" : 6
      },
      "22" : {
        "Text" : "# Also ship mingw libraries for Inelastic fortran code. We need to do a\n\n# better job here and build things\n",
        "Line" : 216,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# THIS MUST BE THE LAST SUB_DIRECTORY ADDED. See Properties/CMakeLists.txt. This\n\n# is included by the top-level CMakeLists if it is a full build but do it here\n\n# for a Framework only\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24
    },
    "Framework/Catalog/CMakeLists.txt" : {
      "ObjectId" : "1bdfbd95c2c8fa100796a75144f94f509ce9eee2",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add ssl dependency\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add the target for this directory\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the name of the generated library\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add to the 'Framework' group in VS\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add the unit tests directory\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Installation settings\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "Framework/Catalog/test/CMakeLists.txt" : {
      "ObjectId" : "2a3d92d350b1b0a6ceef436d8b41adea68ea4916",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The actual test suite\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Add to the 'FrameworkTests' group in VS\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "Framework/Crystal/CMakeLists.txt" : {
      "ObjectId" : "6f668da3903e4263b93b8f1a4c566d69b1c16a89",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the target for this directory\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the name of the generated library\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add to the 'Framework' group in VS\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add the unit tests directory\n",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Installation settings\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Framework/Crystal/test/CMakeLists.txt" : {
      "ObjectId" : "b0f4b4a61d473900a8115af36030a0d854a0aa3d",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This variable is used within the cxxtest_add_test macro to build these\n\n# helper classes into the test executable. It will go out of scope at the end\n\n# of this file so doesn't need un-setting\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Test data\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Add to the 'FrameworkTests' group in VS\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "Framework/CurveFitting/CMakeLists.txt" : {
      "ObjectId" : "07311468c15fa95e62f12953c19af2a079e713f6",
      "LastModified" : "2019-03-28T12:37:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add a precompiled header where they are supported\n",
        "Line" : 480,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add the target for this directory\n",
        "Line" : 482,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the name of the generated library\n",
        "Line" : 484,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add to the 'Framework' group in VS\n",
        "Line" : 500,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add the unit tests directory\n",
        "Line" : 511,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Installation settings\n",
        "Line" : 514,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "Framework/CurveFitting/test/CMakeLists.txt" : {
      "ObjectId" : "d4e74d286b179d7002e71b387186697650d1426f",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This variable is used within the cxxtest_add_test macro to build these\n\n# helper classes into the test executable. It will go out of scope at the end\n\n# of this file so doesn't need un-setting\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Test data\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Add to the 'FrameworkTests' group in VS\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "Framework/DataHandling/CMakeLists.txt" : {
      "ObjectId" : "da7ebcaa0c68ba58ff8692a50462a7322b2aea28",
      "LastModified" : "2019-03-28T12:37:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use a precompiled header where they are supported\n",
        "Line" : 583,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add the target for this directory\n",
        "Line" : 585,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the name of the generated library\n",
        "Line" : 587,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add to the 'Framework' group in VS\n",
        "Line" : 605,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add the unit tests directory\n",
        "Line" : 622,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Installation settings\n",
        "Line" : 625,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "Framework/DataHandling/test/CMakeLists.txt" : {
      "ObjectId" : "036e8017ef87c69410f1355989c691b55dc189ec",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This variable is used within the cxxtest_add_test macro to build this helper\n\n# class into the test executable. It will go out of scope at the end of this\n\n# file so doesn't need un-setting\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Test data\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Add to the 'FrameworkTests' group in VS\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "Framework/DataObjects/CMakeLists.txt" : {
      "ObjectId" : "8dd7435ceff5274e8b7e12d1e58895c6d63e7345",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use a precompiled header where they are supported\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add the target for this directory\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the name of the generated library\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Intensive use of templated libaries can cause large objects to be generated.\n\n# These require an additional flag in MSVC.\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add to the 'Framework' group in VS\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add the unit tests directory\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Installation settings\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Framework/DataObjects/test/CMakeLists.txt" : {
      "ObjectId" : "53b945c2313481daeba9ea42413525b9237f8755",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This variable is used within the cxxtest_add_test macro to build this helper\n\n# class into the test executable. It will go out of scope at the end of this\n\n# file so doesn't need un-setting\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Specify implicit dependency, but don't link to it\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Add to the 'FrameworkTests' group in VS\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "Framework/Doxygen/CMakeLists.txt" : {
      "ObjectId" : "04eb90d0805e30fa49b555113d8fe5a679a8eb17",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# check for dot\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# stuff for generating equations\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# to use qtcreator help go to Tools->Options->Help->Documentation->Add and\n\n# browse to doxygen/mantid.qch, then restart qtcreator and press F1\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# check for qtcreator help stuff\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Put the warning format in something sensible for the generator we are using\n",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Allows Visual Studio to mark them as if they were compiler warnings and\n\n# jump straight to them\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# configure doxygen\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# not being added to 'all'\n",
        "Line" : 82,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 8
    },
    "Framework/Geometry/CMakeLists.txt" : {
      "ObjectId" : "1f9e76c4a2047b5484406d48079fa7d4acd218f0",
      "LastModified" : "2019-04-15T12:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# A few defines needed for OpenCascade on the Mac\n",
        "Line" : 455,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add a precompiled header where they are supported\n",
        "Line" : 461,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add the target for this directory\n",
        "Line" : 463,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set the name of the generated library\n",
        "Line" : 468,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add to the 'Framework' group in VS\n",
        "Line" : 487,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add the unit tests directory\n",
        "Line" : 509,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Installation settings\n",
        "Line" : 512,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Framework/Geometry/test/CMakeLists.txt" : {
      "ObjectId" : "ec68a77093eab05529b47876ee807473f99de36f",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is required to pick up ComponentCreationHelper, which is the only\n\n# TestHelpers class that may be used by Geometry tests (as it does not depend\n\n# on any higher package than geometry)\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# This variable is used within the cxxtest_add_test macro to build this helper\n\n# class into the test executable. It will go out of scope at the end of this\n\n# file so doesn't need un-setting\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Add to the 'FrameworkTests' group in VS\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "Framework/HistogramData/CMakeLists.txt" : {
      "ObjectId" : "226ec6c7c0d84ecdd6e34f75603756edaac58f07",
      "LastModified" : "2019-03-28T12:37:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the target for this directory\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the name of the generated library\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add to the 'Framework' group in VS\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add the unit tests directory\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Installation settings\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Framework/HistogramData/test/CMakeLists.txt" : {
      "ObjectId" : "9958761e00d2b1493d588c6f4aa10f6f99b29bdc",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add to the 'FrameworkTests' group in VS\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Framework/ICat/CMakeLists.txt" : {
      "ObjectId" : "d2a54e94d29e94174bab13d544f553a510b1b65d",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add ssl dependency\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add a precompiled header where they are supported\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add the target for this directory\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set the name of the generated library\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add to the 'Framework' group in VS\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add the unit tests directory\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Installation settings\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Framework/ICat/test/CMakeLists.txt" : {
      "ObjectId" : "e4c7baee05ff9ada74bce583623fc94109bbe2f2",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This variable is used within the cxxtest_add_test macro to build this helper\n\n# class into the test executable. It will go out of scope at the end of this\n\n# file so doesn't need un-setting\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# The actual test suite\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Add to the 'FrameworkTests' group in VS\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "Framework/Indexing/CMakeLists.txt" : {
      "ObjectId" : "0f7cf58b59f365f85f11e8a2b5c8320a00c795a4",
      "LastModified" : "2019-03-28T12:37:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the target for this directory\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the name of the generated library\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add to the 'Framework' group in VS\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Special linking options are required for some older Ubuntu gcc builds to use\n\n# std::thread, specific options found here:\n\n# http://stackoverflow.com/questions/8649828/what-is-the-correct-link-options-\n\n# to-use-stdthread-in-gcc-under-linux#comment35723468_8649908\n",
        "Line" : 89,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Add the unit tests directory\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Installation settings\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "Framework/Indexing/test/CMakeLists.txt" : {
      "ObjectId" : "0a532c7583c9f80649763b534078b54b89385218",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This variable is used within the cxxtest_add_test macro to build these\n\n# helper classes into the test executable. It will go out of scope at the end\n\n# of this file so doesn't need un-setting\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Add to the 'FrameworkTests' group in VS\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "Framework/Kernel/CMakeLists.txt" : {
      "ObjectId" : "c0a2a851547f9b2d2ea478d7903df7c35ae46798",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enable precompiled headers where supported (must be done before target is\n\n# added)\n",
        "Line" : 477,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add the target for this directory\n",
        "Line" : 480,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the name of the generated library\n",
        "Line" : 482,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add to the 'Framework' group in VS\n",
        "Line" : 502,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# For older gcc versions (<4.5) if we do not put stdc++ first then things crash\n\n# when an exceptions are thrown in Python.\n",
        "Line" : 505,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# For memory usage\n\n# queries\n",
        "Line" : 523,
        "CharPositionInLine" : 55
      },
      "6" : {
        "Text" : "# Add the unit tests directory\n",
        "Line" : 527,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This section deals with creating the MantidVersion implementation\n",
        "Line" : 530,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# DON'T try to update the MantidVersion source file if we were not able to\n\n# determine it from git and the file already exists. This makes sure the version\n\n# number is correct when building off the source tarball\n",
        "Line" : 532,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# This section deals with creating the PocoVersion implementation\n",
        "Line" : 542,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# This section deals with creating the ParaViewVersion implementation\n",
        "Line" : 546,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# This section deals with creating the GithubApiHelper implementation\n",
        "Line" : 549,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Manipulate the Mantid.properties file to work wherever you build to\n",
        "Line" : 561,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# This needs to be done as a 2-step process for it to work for VS builds First\n\n# the part that turns relative into absolute paths in the properties file\n",
        "Line" : 563,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# This keeps things working for people building just the framework project\n",
        "Line" : 566,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# %V will be replaced with the major version of Qt at runtime\n",
        "Line" : 573,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# For an mpi-enabled build, do not log to file, format console output (which\n\n# winds up in a file) differently These settings carry down to the installation\n\n# configuration below\n",
        "Line" : 602,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Then, copy into appropriate place\n",
        "Line" : 617,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Installation settings\n",
        "Line" : 632,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Create the properties file for the installer\n",
        "Line" : 636,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Log to file for installed packages but not mpi\n",
        "Line" : 644,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Linux\n",
        "Line" : 659,
        "CharPositionInLine" : 9
      },
      "22" : {
        "Text" : "# For a framework-only (e.g. MPI) build some of these are not relevant and\n\n# should be left empty to avoid warnings on starting Mantid\n",
        "Line" : 673,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "Framework/Kernel/test/CMakeLists.txt" : {
      "ObjectId" : "353998950e1fb4584da6ff2ec24f78b817cedb0f",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is required to pick up NexusTestHelper\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# This variable is used within the cxxtest_add_test macro to build this helper\n\n# class into the test executable. It will go out of scope at the end of this\n\n# file so doesn't need un-setting\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Test data\n",
        "Line" : 32,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Add to the 'FrameworkTests' group in VS\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "Framework/LiveData/CMakeLists.txt" : {
      "ObjectId" : "7b322b2f5d96dfa9e1a38c8b66fe14aa73a87d30",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Needs fixing to not rely on network. SNSLiveEventDataListenerTest.h\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Use a precompiled header where they are supported\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add the target for this directory\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set the name of the generated library\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add to the 'Framework' group in VS\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Have to link to winsock library on Windows\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add the unit tests directory\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Installation settings\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "Framework/LiveData/test/CMakeLists.txt" : {
      "ObjectId" : "e39adb5f86dc29f1e1e96b61fcb76a9b303780b8",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This variable is used within the cxxtest_add_test macro to build this helper\n\n# class into the test executable. It will go out of scope at the end of this\n\n# file so doesn't need un-setting\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Test data\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Add to the 'FrameworkTests' group in VS\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "Framework/MDAlgorithms/CMakeLists.txt" : {
      "ObjectId" : "a58ca3c7230a8ab00fb619678282f780591252c9",
      "LastModified" : "2019-04-15T12:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# GLOBs should be replaced with explicit listings\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set ( SRC_UNITY_IGNORE_FILES src/IDynamicRebinning.cpp )\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Test files. Other source files required.\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# these tests are as they test verify different parts of the CPR algorithms\n",
        "Line" : 269,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Use a precompiled header where they are supported\n",
        "Line" : 402,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add the target for this directory\n",
        "Line" : 404,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set the name of the generated library\n",
        "Line" : 406,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# set /bigobj for vc due to intensive templating\n",
        "Line" : 412,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add to the 'Framework' group in VS\n",
        "Line" : 426,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Add the unit tests directory\n",
        "Line" : 437,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Installation settings\n",
        "Line" : 440,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "Framework/MDAlgorithms/test/CMakeLists.txt" : {
      "ObjectId" : "f5a433c4e90e71d26218cbcda3939f74156fc9b8",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This variable is used within the cxxtest_add_test macro to build these\n\n# helper classes into the test executable. It will go out of scope at the end\n\n# of this file so doesn't need un-setting\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Test data\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Add to the 'FrameworkTests' group in VS\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "Framework/MPIAlgorithms/CMakeLists.txt" : {
      "ObjectId" : "baef4cefa43ac35b0bed4cab59a33a050bc40882",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the target for this directory\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the name of the generated library\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add to the 'Framework' group in VS\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add the unit tests directory\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Installation settings\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Framework/MPIAlgorithms/test/CMakeLists.txt" : {
      "ObjectId" : "bf306b72d97a20994499dfa46e38faec4e4ae610",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add to the 'FrameworkTests' group in VS\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Framework/Muon/CMakeLists.txt" : {
      "ObjectId" : "bf6f461dcbcf3a64bd2d057c4b00e2d5cd0acd2d",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add a precompiled header where they are supported \n\n# enable_precompiled_headers (inc/MantidAlgorithms/PrecompiledHeader.h SRC_FILES )\n\n# Add the target for this directory\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the name of the generated library\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add to the 'Framework' group in VS\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add the unit tests directory\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Installation settings\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Framework/Muon/test/CMakeLists.txt" : {
      "ObjectId" : "f82e37d57b1c3179ac8225e6dbd5e876857afacf",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Make the tests\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# This variable is used within the cxxtest_add_test macro to build these\n\n# helper classes into the test executable. It will go out of scope at the end\n\n# of this file so doesn't need un-setting\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Test data\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Add to the 'MuonTest' group in VS\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "Framework/Nexus/CMakeLists.txt" : {
      "ObjectId" : "fc30b43900fbb666aa3025307e2980ed71ab3113",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the target for this directory\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the name of the generated library\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add to the 'Framework' group in VS\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add the unit tests directory\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Installation settings\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Framework/Nexus/test/CMakeLists.txt" : {
      "ObjectId" : "a40472b2d1c9f0659eb6bcd172b9b296a143a34e",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add to the 'FrameworkTests' group in VS\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Framework/NexusGeometry/CMakeLists.txt" : {
      "ObjectId" : "ad1497fbf639e9522038e55cef6df654c1dd8361",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the target for this directory\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the name of the generated library\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Include HDF5 libraries\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add to the 'Framework' group in VS\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add the unit tests directory\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Framework/NexusGeometry/test/CMakeLists.txt" : {
      "ObjectId" : "8a737d7287015a7e5d814bdc200b00bd87b10d5f",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add to the 'FrameworkTests' group in VS\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Framework/Parallel/CMakeLists.txt" : {
      "ObjectId" : "111ba6f76bea84c35d252f4943f506232b5cff63",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the target for this directory\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the name of the generated library\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add to the 'Framework' group in VS\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add executable for Nexus parallel loader child process\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# set the name of generated executable\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add to the 'Framework' group in VS\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add the unit tests directory\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Installation settings\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "Framework/Parallel/test/CMakeLists.txt" : {
      "ObjectId" : "d4801afec52fa63f1bfcb61b7fcfa0794fd4f9eb",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This variable is used within the cxxtest_add_test macro to build these\n\n# helper classes into the test executable. It will go out of scope at the end\n\n# of this file so doesn't need un-setting\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Add to the 'FrameworkTests' group in VS\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "Framework/PostInstall/CMakeLists.txt" : {
      "ObjectId" : "5e996f052745df4fd8011fc0a2cef5adb6e50d97",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Defines a rule to compile all of the Python files that have been installed as\n\n# part of the package.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMake seems to put all of the current-level install commands \"before\" any sub-\n\n# directories that you have added, even if you add them before the install rule.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# To ensure that this script runs after everything is installed it is in this\n\n# subdirectory so that it can be the last thing added. It is at the Framework\n\n# level so that a \"Framework Only\" build is still valid.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# When building the package CPack installs into\n\n# ${DESTDIR}${CMAKE_INSTALL_PREFIX} but this should be evaluated at CPack time\n\n# so escape the $ to its written literally.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Framework/PythonInterface/CMakeLists.txt" : {
      "ObjectId" : "b36e374bf022cf6d07c92daa26fbf1b3726e7fae",
      "LastModified" : "2019-03-27T20:28:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Python API\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set local dependencies\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# boost python\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Empty out the variable after previous use\n",
        "Line" : 7,
        "CharPositionInLine" : 21
      },
      "4" : {
        "Text" : "# NumPy\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Base of the subproject include dir\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Common definitions\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Several bugs in boost 1.64-1.65 prevent python modues from loading on gcc\n\n# without this definition:   https://github.com/boostorg/python/issues/131\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# First, common Python code\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# A function for generating the exports\n\n#  - MODULE_TEMPLATE: The file containing the @EXPORT_FUNCTIONS@ and \n\n#    @EXPORT_DECLARE@ flags to replace\n\n#  - OUTPUT_FILE:The path to the generated output file \n\n#  - ... The list of export files\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# pull out all functions named 'void export...'\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# create a forward declaration and function call\n",
        "Line" : 47,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# add to list of declarations\n",
        "Line" : 54,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# strip void and add to call list\n",
        "Line" : 56,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# Configure the final file\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# A function for setting the correct properties on the individual targets\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# No library prefixes\n",
        "Line" : 77,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Library name needs to end in .pyd for Windows\n",
        "Line" : 79,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# bigobj\n\n# required for\n\n# intensive\n\n# templating\n",
        "Line" : 85,
        "CharPositionInLine" : 64
      },
      "19" : {
        "Text" : "# and in .so on the Mac\n",
        "Line" : 90,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Set the name\n",
        "Line" : 93,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Debug python library expects imported module names to end in _d\n",
        "Line" : 95,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Group within VS\n",
        "Line" : 100,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# mantid package\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# All targets can see these includes\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# TODO: Move all common code to the core library to remove the need for linking\n\n# submodules together\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Python algorithms\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# tests\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Installation settings\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Python algorithms\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 30
    },
    "Framework/PythonInterface/core/CMakeLists.txt" : {
      "ObjectId" : "81a328ea01093f72e28f4a61a1e81a32c53cc743",
      "LastModified" : "2019-03-27T20:28:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Core Python/C++ code used by all layers accessing the Python C API. It\n\n# contains functionality such as classes for GIL management, conversion of\n\n# Python errors to exceptions etc.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# It should not link to any other Mantid libraries.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add the target for this directory\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set the name of the generated library\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Dependencies\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add to the 'Framework/Python' group in MSVS\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# rpath settings\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Framework/PythonInterface/mantid/BundlePython.cmake" : {
      "ObjectId" : "85d6d18047eba354a63c090f55c03cd7628ab709",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# BundlePython.cmake\n\n#\n\n# This file contains the code to bundle the Python distribution from third party\n\n#\n\n###############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#####################################################################\n\n# Bundled Python for dev build. Assumes PYTHON_DIR has been set in\n\n# MSVCSetup.cmake\n\n#####################################################################\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#####################################################################\n\n# Bundle for package\n\n#####################################################################\n",
        "Line" : 19,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "Framework/PythonInterface/mantid/CMakeLists.txt" : {
      "ObjectId" : "ed5bcd93626f0b58b8d558076bdb8080fd76174c",
      "LastModified" : "2019-04-09T10:06:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# PythonInterface sub modules\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the root directory for the package\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Root module\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The destination directory, used by sub modules\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Select the pure Python files to be included in the distribution\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Generate the version module\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build version\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Copy py to build directory, taking care of multi-config (MSVC) builds\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Package version\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# There is no library target for the top level package just the python files\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Sub modules\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Ensure the module files are\n\n# in place\n",
        "Line" : 42,
        "CharPositionInLine" : 50
      },
      "12" : {
        "Text" : "# Create an overall target\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Bundle Python DLL (where appropriate)\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Defines the target the will cause the Python bundle to be copied\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Installation settings\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Pure Python files\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# version.py that will overwrite the ones from the built target\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "Framework/PythonInterface/mantid/_plugins/CMakeLists.txt" : {
      "ObjectId" : "55b8f1227f77efc3f390c5f09a0d752f760cfeeb",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# __curvefitting Python module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Files containing export definitions, these are automatically processed \n\n# -- Do NOT sort this list. The order defines the order in which the export\n\n# definitions occur and some depend on their base classes being exported first\n\n# --\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Helper code\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Copy over the pure Python files for the module\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set the destination directory\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set the output directory for the libraries.\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Create the target for this directory\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add the required dependencies\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Installation settings\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Pure Python files\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "Framework/PythonInterface/mantid/api/CMakeLists.txt" : {
      "ObjectId" : "d96f3bb274ee714e5fd9173c80444d588afb1252",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# _api Python module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Files containing export definitions, these are automatically processed \n\n# -- Do NOT sort this list. The order defines the order in which the export\n\n# definitions occur and some depend on their base classes being exported first\n\n# --\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Helper code\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Copy over the pure Python files for the module\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set the destination directory\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set the output directory for the libraries.\n",
        "Line" : 133,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Create the target for this directory\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add the required dependencies\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Installation settings\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Pure Python files\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "Framework/PythonInterface/mantid/dataobjects/CMakeLists.txt" : {
      "ObjectId" : "146ee0399dbd7fcd695895d389b8e16dedb2efbb",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# _dataobjects Python module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Files containing export definitions, these are automatically processed \n\n# -- Do NOT sort this list. The order defines the order in which the export\n\n# definitions occur and some depend on their base classes being exported first\n\n# --\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Helper code\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Copy over the pure Python files for the module\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set the destination directory\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set the output directory for the libraries.\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Create the target for this directory\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add the required dependencies\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Installation settings\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Pure Python files\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "Framework/PythonInterface/mantid/geometry/CMakeLists.txt" : {
      "ObjectId" : "23f036f5302fa47337a439007b9f25108107385b",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# _geometry Python module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Generate a source file from the export definitions and provided template\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Helper code\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Copy over the pure Python files for the module\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set the destination directory\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set the output directory for the libraries.\n",
        "Line" : 66,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Create the target for this directory\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add the required dependencies\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Installation settings\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Pure Python files\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "Framework/PythonInterface/mantid/kernel/CMakeLists.txt" : {
      "ObjectId" : "37756ff9884e6323af44518e746febf4dffec8fa",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# _kernel Python module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Files containing export definitions, these are automatically processed \n\n# -- Do NOT sort this list. The order defines the order in which the export\n\n# definitions occur and some depend on their base classes being exported first\n\n# --\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Helper code\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add rule to copy over the pure Python files for the module\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set the output directory for the libraries.\n",
        "Line" : 122,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Generate the packagesetup module for the build & install package\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# .lib -> .dll\n",
        "Line" : 134,
        "CharPositionInLine" : 10
      },
      "7" : {
        "Text" : "# Build version\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Copy py to build directory, taking care of multi-config (MSVC) builds\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Package version\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# NeXus library is in the same place relative to the Python library\n",
        "Line" : 168,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Create the target for this directory\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Add the required dependencies\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Installation settings\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Pure Python files\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# packagesetup.py that will overwrite the ones from the built target\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "Framework/PythonInterface/mantid/plots/CMakeLists.txt" : {
      "ObjectId" : "62ceb93caf6985f43330bf5a395d8fd76e2ce394",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copy over the pure Python files for the module\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the destination directory\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the output directory for the libraries.\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Add a named target with the outputs as dependencies\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Installation settings\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Pure Python files\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "Framework/PythonInterface/mantid/plots/modest_image/CMakeLists.txt" : {
      "ObjectId" : "8e54726c7beb87ceb7a418642e63ce29c06f5c87",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copy over the pure Python files for the module\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the destination directory\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the output directory for the libraries.\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Add a named target with the outputs as dependencies\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Installation settings\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Pure Python files\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "Framework/PythonInterface/mantid/py3compat/CMakeLists.txt" : {
      "ObjectId" : "45cbe70dfd34545c5ee6ce2f99d91552a99c3d0a",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copy over the pure Python files for the module\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the destination directory\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the output directory for the libraries.\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Add a named target with the outputs as dependencies\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Installation settings\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Pure Python files\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "Framework/PythonInterface/test/CMakeLists.txt" : {
      "ObjectId" : "beecd02ad3315bc67471b7bf40d42f5d1661a234",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Top-level directory for PythonInterface tests\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Framework/PythonInterface/test/cpp/CMakeLists.txt" : {
      "ObjectId" : "1634360379840f73b78a13790d8a967f42443ccd",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# C++ unit tests\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add to the 'UnitTests' group in VS\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "Framework/PythonInterface/test/python/CMakeLists.txt" : {
      "ObjectId" : "3e0d5689de21edd48800ea9029a57736e23a2b42",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This directory (and subdirectories) contains Python tests for each subpackage\n\n# and the PythonAlgorithms\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Defines a macro to check that each file contains a call to unittest.main()\n\n# The arguments should be the source directory followed by the test files as\n\n# list, e.g. check_tests_valid ( ${CMAKE_CURRENT_SOURCE_DIR} ${TEST_FILES} )\n\n#\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "Framework/PythonInterface/test/python/mantid/CMakeLists.txt" : {
      "ObjectId" : "98adea1df09bb6b82a968233c497eaf156157358",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tests for the Python exports of the mantid module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Prefix for test=PythonInterface\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Framework/PythonInterface/test/python/mantid/_plugins/CMakeLists.txt" : {
      "ObjectId" : "c66f51a2b68f67c586fda7e8ff7ceeb08284653d",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# mantid._plugin tests\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Prefix for test=PythonInterfacePlugins\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Framework/PythonInterface/test/python/mantid/api/CMakeLists.txt" : {
      "ObjectId" : "ebae5a3b10a851fc9b11ee47c9d653f30825bdbb",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# mantid.api tests\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Prefix for test=PythonInterfaceAPI\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Framework/PythonInterface/test/python/mantid/dataobjects/CMakeLists.txt" : {
      "ObjectId" : "a08a9498a62ab66237d6182456fff7789da15708",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# mantid.dataobjects tests\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Prefix for test=PythonInterfaceDataObjects\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Framework/PythonInterface/test/python/mantid/geometry/CMakeLists.txt" : {
      "ObjectId" : "534709533a790ed114e9d0a37d1f2f6577f7d625",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# mantid.geometry tests\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Prefix for test=PythonInterfaceGeometry\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Framework/PythonInterface/test/python/mantid/kernel/CMakeLists.txt" : {
      "ObjectId" : "4731834f924a380fb1255ec2225e7b67cad20a5f",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# mantid.kernel tests\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Prefix for test=PythonInterfaceKernel\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Framework/PythonInterface/test/python/mantid/plots/CMakeLists.txt" : {
      "ObjectId" : "568495accf08af0dc4927ff17042e76de234351c",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# mantid.dataobjects tests\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Prefix for test=PythonInterfacePlots\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Framework/PythonInterface/test/python/mantid/plots/modest_image/CMakeLists.txt" : {
      "ObjectId" : "f59c5e48c5266313ed76f73ec3767d0f1435b824",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# mantid.dataobjects tests\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# test_speed.py\n",
        "Line" : 4,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Prefix for test=PythonInterfacePlots\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Framework/PythonInterface/test/python/plugins/CMakeLists.txt" : {
      "ObjectId" : "94bd10086c48a875a058d1196b55c8788f2e3cff",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This directory contains sub-directories for each of the plugin types\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Framework/PythonInterface/test/python/plugins/algorithms/CMakeLists.txt" : {
      "ObjectId" : "4554b6def0b4eb5ee71e4ea9142ae5425b9a8f39",
      "LastModified" : "2019-04-09T10:06:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tests for PythonAlgorithms\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Prefix for test name=PythonAlgorithms\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Framework/PythonInterface/test/python/plugins/algorithms/WorkflowAlgorithms/CMakeLists.txt" : {
      "ObjectId" : "8967bbda61187ecaea66f9596c53c4fab840d3a2",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tests for PythonWorkflowAlgorithms\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Prefix for test name=PythonWorkflowAlgorithms\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Framework/PythonInterface/test/python/plugins/algorithms/WorkflowAlgorithms/sans/CMakeLists.txt" : {
      "ObjectId" : "9855fdfbbfc19e44265ffcd3fe0931b235d25c09",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tests for ISIS SANS\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Prefix for test name=PythonAlgorithms_SANS\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Framework/PythonInterface/test/python/plugins/functions/CMakeLists.txt" : {
      "ObjectId" : "08fae10eb0191d2003e73b179cf06c0964205258",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tests for Fit functions\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Prefix for test name=PythonFunctions\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Framework/PythonInterface/test/testhelpers/CMakeLists.txt" : {
      "ObjectId" : "9c4de498f87641ab9a736b4f26bf100669823280",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# testhelpers Python module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copy python files to output directory\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Create the targets for this directory\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# WorkspaceCreationHelper\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Override folder\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Overall testhelpers target\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "Framework/RemoteAlgorithms/CMakeLists.txt" : {
      "ObjectId" : "85efad7806634f4077dbcd4f0d12e6d9eec564ef",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set ( TEST_PY_FILES\n\n#\n\n# ) No tests yet...\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Not for now, remember later if convenient: Add a precompiled header where they\n\n# are supported enable_precompiled_headers (\n\n# inc/MantidRemoteAlgorithms/PrecompiledHeader.h SRC_FILES )\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add the target for this directory\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set the name of the generated library\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add to the 'Framework' group in VS\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add the unit tests directory\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Note: No tests yet for many remote algorithms...\n",
        "Line" : 117,
        "CharPositionInLine" : 23
      },
      "7" : {
        "Text" : "# Installation settings\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "Framework/RemoteAlgorithms/test/CMakeLists.txt" : {
      "ObjectId" : "bf48528c0e4f432bb18823439e804e8f39045286",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test data. Not using any for now. Remember to uncomment if data is added for\n\n# these remote alg. tests add_dependencies ( RemoteAlgorithmsTest\n\n# StandardTestData )\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Add to the 'FrameworkTests' group in VS\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "Framework/RemoteJobManagers/CMakeLists.txt" : {
      "ObjectId" : "7bd7fbec997877be86ca2f59ee50b72ab169f421",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set ( TEST_PY_FILES\n\n#\n\n# ) No Python tests yet...\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Not for now, remember later if convenient: Add a precompiled header where they\n\n# are supported enable_precompiled_headers (\n\n# inc/MantidRemoteJobManagers/PrecompiledHeader.h SRC_FILES )\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add the target for this directory\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set the name of the generated library\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add to the 'Framework' group in VS\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add the unit tests directory\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Installation settings\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Framework/RemoteJobManagers/test/CMakeLists.txt" : {
      "ObjectId" : "390c3ad4f95c7536187e8bf3c2a6578c17936da4",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test data. Not using any for now. Remember to uncomment if data is added for\n\n# these remote job managers add_dependencies ( RemoteJobManagersTest\n\n# StandardTestData )\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Add to the 'FrameworkTests' group in VS\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "Framework/SINQ/CMakeLists.txt" : {
      "ObjectId" : "9b2b5b2538c89d6bb7f7420f33e35d7b524d2cb5",
      "LastModified" : "2019-04-15T12:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add a precompiled header where they are supported\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add the target for this directory\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the name of the generated library\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add to the 'Framework' group in VS\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Have to link to winsock library on Windows\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add the unit tests directory\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Installation settings\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Framework/SINQ/test/CMakeLists.txt" : {
      "ObjectId" : "0f5edac4af8c6f683cb6977bc5c1fe39444c83a5",
      "LastModified" : "2019-04-09T10:06:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test data\n",
        "Line" : 32,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Add to the 'FrameworkTests' group in VS\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "Framework/ScriptRepository/CMakeLists.txt" : {
      "ObjectId" : "f81ae77c98372c96d1a07e1eab11744081ca31e1",
      "LastModified" : "2019-04-09T10:06:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Mantid source\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add the target for this directory\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add the unit tests directory\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set the name of the generated library\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Framework/ScriptRepository/test/CMakeLists.txt" : {
      "ObjectId" : "8e0c2854a8a366e0075495f7ffdeaffb14d238b1",
      "LastModified" : "2019-04-09T10:06:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add to the 'FrameworkTests' group in VS\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Framework/Types/CMakeLists.txt" : {
      "ObjectId" : "a504f04e0079593b8ef9118225165b4c18703807",
      "LastModified" : "2019-04-09T10:06:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Auto-generate exports header\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Installation settings\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add the unit tests directory\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Framework/Types/test/CMakeLists.txt" : {
      "ObjectId" : "a9a094dae34f5d0b22f046af74d9b23fd86ef8c3",
      "LastModified" : "2019-04-09T10:06:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add to the 'FrameworkTests' group in VS\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Framework/WorkflowAlgorithms/CMakeLists.txt" : {
      "ObjectId" : "77e8ea99821b6dd0a2da84fff6a73f8c861b2a4a",
      "LastModified" : "2019-04-09T10:06:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use a precompiled header where they are supported\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add the target for this directory\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the name of the generated library\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add to the 'Framework' group in VS\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add the unit tests directory\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Installation settings\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "Framework/WorkflowAlgorithms/test/CMakeLists.txt" : {
      "ObjectId" : "7284a313d57e425df792c2c0b3b841e08257fc97",
      "LastModified" : "2019-04-09T10:06:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Make the rest of the tests\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# This variable is used within the cxxtest_add_test macro to build these\n\n# helper classes into the test executable. It will go out of scope at the end\n\n# of this file so doesn't need un-setting\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Test data\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Add to the 'FrameworkTests' group in VS\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# python unit tests\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "MantidPlot/CMakeLists.txt" : {
      "ObjectId" : "7d198a78cc35f1409e627f52f0d62591e976823e",
      "LastModified" : "2019-04-09T10:06:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# NOTE that there are a lot of places in this CMakeLists where files need to be\n\n# explicitly listed - we not only have to add the sources and headers, but also\n\n# the files that need to be made known to Qt and sip.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Add the source files\n\n#\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Suppress compiler warning on file that isn't ours\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Add the headers (so they show up in Visual Studio solutions)\n\n#\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Add Qt to the include path\n\n#\n",
        "Line" : 411,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# Do the sip generation.\n\n#\n",
        "Line" : 417,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# We need to manually add all the headers that are in qti.sip so that the\n\n# dependencies are known to CMake\n",
        "Line" : 423,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# Sip generated files\n\n#\n",
        "Line" : 449,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Needed for sip.h header that can end up in a different place to to the main\n\n# Python include directory\n",
        "Line" : 470,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Needed for sip generated files to find includes in src\n",
        "Line" : 473,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\n\n# Specify the files that we need to pass to Qt macros\n\n#\n",
        "Line" : 476,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Call separate function on third-party code that expects moc output to have\n\n# certain name\n",
        "Line" : 648,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Use a precompiled header where they are supported\n",
        "Line" : 666,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# The generated ui headers will go here:\n",
        "Line" : 671,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#\n\n# Internal icon links\n\n#\n",
        "Line" : 674,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#\n\n# Add the dependencies\n\n#\n",
        "Line" : 684,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#\n\n# Now create the target and add its dependencies and flags\n\n#\n",
        "Line" : 702,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Will only have an effect on Windows (as is\n\n# desired)\n",
        "Line" : 708,
        "CharPositionInLine" : 34
      },
      "18" : {
        "Text" : "#\n\n# Application icon files\n\n#\n",
        "Line" : 714,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#\n\n# Config reset scripts\n\n#\n",
        "Line" : 734,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#\n\n# Required Python config files\n\n#\n",
        "Line" : 749,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Top-level python scripts\n",
        "Line" : 753,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# mantidplot package\n",
        "Line" : 759,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# IPython scripts\n",
        "Line" : 773,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\n\n# MantidPlot executable\n\n#\n",
        "Line" : 781,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Library dependencies\n",
        "Line" : 812,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Plugin dependencies\n",
        "Line" : 856,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#\n\n# Custom Info.plist file for OS X\n\n#\n",
        "Line" : 879,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Setting the CFBundleIdentifer attribute on OS X 10.6 (SL) and before causes\n\n# problems with trying to install the package on the same machine as it was\n\n# built. It tries to relocate the package to the build directory because the\n\n# bundle identifiers match. Mountain Lion requires the attribute to avoid\n\n# crashes when accessing certain system dialogs from Qt. The ideal would be to\n\n# pass the --no-relocate option to packagemaker but we can't control that so\n\n# only set the identifier for 10.7 and above\n\n#\n\n# This can disappear when if/when we move to a drag-n-drop package.\n",
        "Line" : 884,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "#\n\n# Entry point flag for Windows to ensure we always link to standard main\n\n#\n",
        "Line" : 909,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#\n\n# MantidPlot Python Unit Tests\n\n#\n",
        "Line" : 920,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# List of .py files than must be run WITHIN MantidPlot.\n",
        "Line" : 924,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Screenshots destination\n",
        "Line" : 946,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Add an environment property MANTID_SOURCE so that the script can find the\n\n# source of xmlrunner\n",
        "Line" : 953,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# cmake list separator and Windows environment separator are the same so\n\n# escape the cmake one\n",
        "Line" : 957,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# Make a ctest target for each file\n",
        "Line" : 969,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Add the test. Name of test = name of the file\n",
        "Line" : 971,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# Set the previously-built environment\n",
        "Line" : 975,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "#\n\n# Installation settings\n\n#\n",
        "Line" : 987,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Ship required files. Explicit so some can be disabled easily if necessary\n",
        "Line" : 993,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# file make_package.rb contains hard-coded path to the libraries this causes\n\n# fail of the installation with macports therefore MACPORTS option is introduced\n",
        "Line" : 1007,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 41
    },
    "MantidPlot/src/lib/libqti.pri" : {
      "ObjectId" : "1bc12a1ca6bb857bf7537d50da29016e58cd5a79",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "###############################################################\n\n##################### libqti ##################################\n\n###############################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################\n\n##################### 3rdparty Qt Solutions ###################\n\n###############################################################\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "MantidPlot/src/lib/qti.pro" : {
      "ObjectId" : "b7b93d8aee45df32167d7043ce67f14e5e4c1f3d",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "##################### Linux (Mac OS X) ######################################\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# statically link against Qwt library in 3rdparty\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# dynamically link against dependencies if they are installed system-wide\n\n#unix:LIBS        += -lqwt\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##################### Windows ###############################################\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Testing/SystemTests/scripts/CMakeLists.txt" : {
      "ObjectId" : "37406a564fafb4e7b4e359d741f1778b55af502a",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Write out a files containing \n\n# - the data search directories\n\n# - the default save directory\n\n# These will be read by the MantidConfig class to configure the properties file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Data search directories\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Input data\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Reference results\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Unit tests\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Doc tests\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Output to file \n\n# If this is changed, make sure to update the .gitignore in this directory\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# The quotes are important as CMake translates the list to a semicolon-separated\n\n# string\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Default save directory\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Configure files for developers running tests\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "Testing/Tools/cxxtest/docs/Makefile" : {
      "ObjectId" : "15944423eaa42ff81565926f256b8b033270af3a",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "Testing/Tools/cxxtest/sample/mock/Makefile" : {
      "ObjectId" : "4f42803a6309eb6ad5e36656ffed147dcfc8afad",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "Testing/Tools/cxxtest/sample/msvc/Makefile" : {
      "ObjectId" : "ef67a94c609a5a743b0c6dd3f85c2985d1af552f",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Where to look for the tests\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Where the CxxTest distribution is unpacked\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check CXXTESTDIR\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# cxxtestgen needs Perl or Python\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The arguments to pass to cxxtestgen\n\n#  - ParenPrinter is the way MSVC likes its compilation errors\n\n#  - --have-eh/--abort-on-fail are nice when you have them\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# How to generate the test runner, `runner.cpp'\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# How to run the tests, which should be in DIR\\runner.exe\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7,
      "Errorlog" : "line 2:21 token recognition error at: '\\g'\nline 8:24 token recognition error at: '\\p'\nline 8:31 token recognition error at: '\\s'\nline 8:39 token recognition error at: '\\c'\n"
    },
    "Testing/Tools/cxxtest/sample/winddk/Makefile" : {
      "ObjectId" : "8bf25333e8465d6605095fd8edad51085be665ed",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Standard DDK Makefile\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1,
      "Errorlog" : "line 2:21 token recognition error at: '\\m'\n"
    },
    "Testing/Tools/cxxtest/test/Makefile" : {
      "ObjectId" : "62662c91e21fc9d30e3be3c376cd80083547b0e9",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Some convenient ways of running the self tests\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Local Variables:\n\n# compile-command: \"gmake gcc\"\n\n# End:\n\n#",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "buildconfig/CMake/BoostMPI.cmake" : {
      "ObjectId" : "ba5e14e38bb7f9bf1006b03032e2f201d073425a",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The FindMPI module doesn't seem to respect the REQUIRED specifier (as of CMake 2.8.7)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Need to repeat date_time, regex, and serialization because otherwise the Boost variables are overwritten and miss those libraries required elsewhere.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "buildconfig/CMake/Bootstrap.cmake" : {
      "ObjectId" : "3d4de4cfd96719ec0e5c6713a862e7cce9d4853d",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n# Configure required dependencies if necessary\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Git LFS does not work properly with <= 1.9\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Use ExternalProject functionality as it already knows how to do clone/update\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Generates a script to do the clone/update in tmp\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Do fetch/update now as we need the dependencies to configure\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# As of git lfs 1.02 the default 'git checkout' behaviour is very slow for a large amount of data. Running the\n\n# 'git lfs fetch' command however produces better suitable performance as it downloads everything in parallel.\n\n# We there for first clone the bare repository containing the data pointers and update them manually\n\n# see https://github.com/github/git-lfs/issues/376 for more information\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Fetch the binary data\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Checkout the data from the index to the working directory\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Assume the updates are small & don't run git lfs fetch\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Print out where we are looking for 3rd party stuff\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Add to the path so that cmake can configure correctly without the user having to do it\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Set variables to help CMake find components\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Configure MSVC\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 13
    },
    "buildconfig/CMake/CPackCommon.cmake" : {
      "ObjectId" : "9059f0c3b537aebf76354007e338fa890532a1ec",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# Putting all the common CPack stuff in one place\n\n###############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Common description stuff\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# To avoid breaking Windows vates packaging\n",
        "Line" : 15,
        "CharPositionInLine" : 48
      },
      "3" : {
        "Text" : "# RPM information - only used if generating a rpm\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# DEB information - the package does not have an original\n\n# in debian archives so the debian release is 0\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "buildconfig/CMake/CPackLinuxSetup.cmake" : {
      "ObjectId" : "6c4b2e35bea9ce058c7ffc93a77d143499cfe586",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# Putting the Linux specific CPack stuff here\n\n###############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create a package file name for the Linux distributions\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# define the source generators\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# In-source build add the binary directory to files to ignore for the tarball\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# define which binary generators to use\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# following Ubuntu convention <foo>_<VersionNumber>-<DebianRevisionNumber>ubuntu1~<UbuntuCodeName>1_<DebianArchitecture>.deb\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#RedHatEnterpriseClient RedHatEnterpriseWorkstation\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# cmake can set the distribution flag correctly\n",
        "Line" : 48,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 8
    },
    "buildconfig/CMake/CommonSetup.cmake" : {
      "ObjectId" : "4461cee49eb679dc426cbc16abb5e72140f594bd",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Include useful utils\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Make the default build type Release\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the possible values of build type for cmake-gui\n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# We want shared libraries everywhere\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This allows us to group targets logically in Visual Studio\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Look for stdint and add define if found\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Configure a variable to hold the required test timeout value for all tests\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "###########################################################################\n\n# Look for dependencies\n\n# Do NOT add include_directories commands here. They will affect every\n\n# target.\n\n###########################################################################\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Need this defined globally for our log time values\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# optional\n",
        "Line" : 63,
        "CharPositionInLine" : 25
      },
      "10" : {
        "Text" : "###########################################################################\n\n# Look for Git. Used for version headers - faked if not found.\n\n# Also makes sure our commit hooks are linked in the right place.\n\n###########################################################################\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Get the last revision\n",
        "Line" : 99,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# i.e This is a git repository!\n",
        "Line" : 106,
        "CharPositionInLine" : 26
      },
      "13" : {
        "Text" : "# \"git describe\" was originally used to produce this variable and this prefixes the short\n\n# SHA1 with a 'g'. We keep the same format here now that we use rev-parse\n",
        "Line" : 107,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Get the date of the last commit\n",
        "Line" : 110,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# getting the datetime (as iso8601 string) to turn into the patch string\n",
        "Line" : 120,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# split into \"date time timezone\"\n",
        "Line" : 126,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# turn the date into a number\n",
        "Line" : 132,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# prepare the time\n",
        "Line" : 135,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "# convert the timezone into something that can be evaluated for math\n",
        "Line" : 139,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "# GMT do nothing\n",
        "Line" : 141,
        "CharPositionInLine" : 29
      },
      "21" : {
        "Text" : "# remove the timezone from the time to convert to GMT\n",
        "Line" : 151,
        "CharPositionInLine" : 6
      },
      "22" : {
        "Text" : "# deal with times crossing midnight\n\n# this does not get the number of days in a month right or jan 1st/dec 31st\n",
        "Line" : 154,
        "CharPositionInLine" : 6
      },
      "23" : {
        "Text" : "###########################################################################\n\n# This part puts our hooks (in .githooks) into .git/hooks\n\n###########################################################################\n\n# First need to find the top-level directory of the git repository\n",
        "Line" : 167,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# N.B. The variable comes back from 'git describe' with a line feed on the end, so we need to lose that\n",
        "Line" : 175,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# Prefer symlinks on platforms that support it so we don't rely on cmake running to be up-to-date\n\n# On Windows, we have to copy the file\n",
        "Line" : 177,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# Just use a dummy version number and print a warning\n",
        "Line" : 194,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# i.e This is a git repository!\n",
        "Line" : 201,
        "CharPositionInLine" : 24
      },
      "28" : {
        "Text" : "###########################################################################\n\n# Create the file containing the patch version number for use by cpack\n\n# The patch number make have been overridden by VersionNumber so create\n\n# the file used by cpack here\n\n###########################################################################\n",
        "Line" : 202,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "###########################################################################\n\n# Include the file that contains the version number\n\n# This must come after the git business above because it can be\n\n# used to override the patch version number\n\n###########################################################################\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "###########################################################################\n\n# Look for OpenMP and set compiler flags if found\n\n###########################################################################\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "###########################################################################\n\n# Add linux-specific things\n\n###########################################################################\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "###########################################################################\n\n# Set the c++ standard to 14 - cmake should do the right thing with msvc\n\n###########################################################################\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "###########################################################################\n\n# Add compiler options if using gcc\n\n###########################################################################\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "###########################################################################\n\n# Configure clang-tidy if the tool is found\n\n###########################################################################\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# use default checks if empty to avoid errors\n",
        "Line" : 270,
        "CharPositionInLine" : 8
      },
      "36" : {
        "Text" : "# delete it\n",
        "Line" : 282,
        "CharPositionInLine" : 57
      },
      "37" : {
        "Text" : "# delete it\n",
        "Line" : 285,
        "CharPositionInLine" : 55
      },
      "38" : {
        "Text" : "###########################################################################\n\n# Setup cppcheck\n\n###########################################################################\n",
        "Line" : 291,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "###########################################################################\n\n# Setup pylint\n\n###########################################################################\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "###########################################################################\n\n# Set up the unit tests target\n\n###########################################################################\n",
        "Line" : 301,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Some unit tests need GMock/GTest\n",
        "Line" : 315,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# GUI testing via Squish\n",
        "Line" : 327,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# CMAKE_MODULE_PATH gets polluted when ParaView is present\n",
        "Line" : 330,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "###########################################################################\n\n# External Data for testing\n\n###########################################################################\n",
        "Line" : 339,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "###########################################################################\n\n# Visibility Setting\n\n###########################################################################\n",
        "Line" : 346,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "###########################################################################\n\n# Bundles setting used for install commands if not set by something else\n\n# e.g. Darwin\n\n###########################################################################\n",
        "Line" : 353,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "###########################################################################\n\n# Set a flag to indicate that this script has been called\n\n###########################################################################\n",
        "Line" : 361,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "buildconfig/CMake/CommonVatesSetup.cmake" : {
      "ObjectId" : "5d6aa255cee932937424a127274bfcc9cae29a77",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Setup common things for the Vates subprojects\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "buildconfig/CMake/Coveralls.cmake" : {
      "ObjectId" : "73b163d0b48fed354c27e9c721349db2e0a2e5a0",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n\n#\n\n# Copyright (C) 2014 Joakim Söderberg <joakim.soderberg@gmail.com>\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Param _COVERAGE_SRCS\tA list of source files that coverage should be collected for.\n\n# Param _COVERALLS_UPLOAD Upload the result to coveralls?\n\n#\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#pass name to a file instead of a list of every source.\n",
        "Line" : 45,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Zero the coverage counters.\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Run regression tests. Continue even if tests fail.\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Generate Gcov and translate it into coveralls JSON.\n\n# We do this by executing an external CMake script.\n\n# (We don't want this to run at CMake generation time, but after compilation and everything has run).\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Upload the JSON to coveralls.\n",
        "Line" : 92,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 7
    },
    "buildconfig/CMake/CoverallsClear.cmake" : {
      "ObjectId" : "eb68695a2b1fce4ea197f5be588379d13e3c2fb7",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n\n#\n\n# Copyright (C) 2014 Joakim Söderberg <joakim.soderberg@gmail.com>\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "buildconfig/CMake/CppCheckSetup.cmake" : {
      "ObjectId" : "b793c238278ee700108103f10a59fadf88fc8a74",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Header files to be ignored require different handling\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# setup the standard arguments\n",
        "Line" : 73,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# process list of include/exclude directories\n",
        "Line" : 80,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Handle header files in the required manner\n",
        "Line" : 109,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# put the finishing bits on the final command call\n",
        "Line" : 119,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# generate the target\n",
        "Line" : 127,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "buildconfig/CMake/DarwinSetup.cmake" : {
      "ObjectId" : "dc94bd5d11d9cf5bccd58c5256c8f9ae11e599a5",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################################\n\n# Determine the version of OS X that we are running\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the system name (and remove the space)\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Strip off any /CR or /LF\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Export variables globally\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable the use of the -isystem flag to mark headers in Third_Party as system headers\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set Qt5 dir according to homebrew location\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "###########################################################################\n\n# Use python libraries associated with PYTHON_EXECUTABLE\n\n# If unspecified, use first python executable in the PATH.\n\n###########################################################################\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Find the python interpreter to get the version we're using (needed for install commands below)\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Older versions of CMake don't set these variables so just assume 2.7\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# --abiflags option not available in python 2\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# If found, need to add debug library into libraries variable\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Generate a target to put a mantidpython wrapper in the appropriate directory\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#Configure install script at the same time. Doing it later causes a warning from ninja.\n",
        "Line" : 89,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# directives similar to linux for conda framework-only build\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "###########################################################################\n\n# Mac-specific installation setup\n\n###########################################################################\n\n# use homebrew OpenSSL package\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Copy the launcher script to the correct location\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# We know exactly where this has to be on Darwin, but separate whether we have\n\n# kit build or a regular build.\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# This is the root of the plugins directory\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Separate directory of plugins to be discovered by the ParaView framework\n\n# These cannot be mixed with our other plugins. Further sub-directories\n\n# based on the Qt version will also be created by the installation targets\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Assume we are using homebrew for now\n\n# Follow symlinks so cmake copies the file\n\n# PYQT4_PATH, SITEPACKAGES_PATH, OPENSSL_ROOT_DIR may be defined externally (cmake -D)\n\n# it would be good do not overwrite them (important for the compilation with macports)\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Python packages\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Explicitly specify which PyQt libraries we want because just taking the whole\n\n#directory will swell the install kit unnecessarily.\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Newer PyQt versions have a new internal library that we need to take\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Explicitly specify which PyQt libraries we want because just taking the whole\n\n#directory will swell the install kit unnecessarily.\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Newer PyQt versions have a new internal library that we need to take\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Add launcher script for mantid python\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Add launcher application for a Mantid IPython console\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Add launcher application for a Mantid Workbench\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Add launcher application for Mantid IPython notebooks\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 29
    },
    "buildconfig/CMake/DetermineLinuxDistro.cmake" : {
      "ObjectId" : "52936753319450a50bf2bcc123eaa81f99f1fa6a",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# get the distribution\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Make Scientific Linux and CentOS look like RHEL6\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# get the codename\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Make Scientific Linux and CentOS look like RHEL6\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# get the release\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "buildconfig/CMake/Eigen.cmake" : {
      "ObjectId" : "d5babb128d0382c813b4d9993b52e0d8160741ab",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Installed by 3rd party dependencies bundle\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Download and unpack Eigen at configure time\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# The OLD behavior for this policy is to ignore the visibility properties\n\n# for static libraries, object libraries, and executables without exports.\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "buildconfig/CMake/FindBoostPython.cmake" : {
      "ObjectId" : "efb9e81cd20b81a8394cf605c9ddf7c1a34d5475",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We need to find the right boost python version for the given python version. Unfortunately\n\n# there is not standard naming convention across the platforms, for example:\n\n#  - fedora, arch: libboost_python.so (python2), libboost_python3.so (python3)\n\n#  - debian, ubuntu: libboost_python.so (python2), libboost_python-py34.so (python 3.4)\n\n#  - windows: boost_python (python2), ????? (python3)\n\n#  - others?\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Try a known set of suffixes plus a user-defined set\n\n# Define a cache variable to supply additional suffxies. These are tried first\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Assumes that the default version is 27\n",
        "Line" : 26,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "buildconfig/CMake/FindCppcheck.cmake" : {
      "ObjectId" : "fad22793cb0533a477cdb92d454e4c8e37c9ece9",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# cppcheck app bundles on Mac OS X are GUI, we want command line only\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If we have a custom path, look there first.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#  if(NOT TARGET cppcheck)\n\n#    add_custom_target(cppcheck)\n\n#    set_target_properties(cppcheck PROPERTIES EXCLUDE_FROM_ALL TRUE)\n\n#  endif()\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# additional arguments are files to ignore\n",
        "Line" : 76,
        "CharPositionInLine" : 29
      },
      "4" : {
        "Text" : "# nothing to check\n",
        "Line" : 102,
        "CharPositionInLine" : 15
      },
      "5" : {
        "Text" : "# set the standard arguments\n",
        "Line" : 105,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# add the target\n",
        "Line" : 110,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "buildconfig/CMake/FindCxxTest.cmake" : {
      "ObjectId" : "98b03bd69c03ae18d5b6539ed536654a7119ac6b",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find CxxTest\n\n# Find the CxxTest suite and declare a helper macro for creating unit tests\n\n# and integrating them with CTest.\n\n# For more details on CxxTest see http://cxxtest.tigris.org\n\n#\n\n# INPUT Variables\n\n#\n\n#   CXXTEST_USE_PYTHON\n\n#       If true, the CXXTEST_ADD_TEST macro will use\n\n#       the Python test generator instead of Perl.\n\n#\n\n# OUTPUT Variables\n\n#\n\n#   CXXTEST_FOUND\n\n#       True if the CxxTest framework was found\n\n#   CXXTEST_INCLUDE_DIR\n\n#       Where to find the CxxTest include directory\n\n#   CXXTEST_PERL_TESTGEN_EXECUTABLE\n\n#       The perl-based test generator.\n\n#   CXXTEST_PYTHON_TESTGEN_EXECUTABLE\n\n#       The python-based test generator.\n\n#\n\n# MACROS for optional use by CMake users:\n\n#\n\n#    CXXTEST_ADD_TEST(<test_name> <gen_source_file> <input_files_to_testgen...>)\n\n#       Creates a CxxTest runner and adds it to the CTest testing suite\n\n#       Parameters:\n\n#           test_name               The name of the test\n\n#           input_files_to_testgen  The list of header files containing the\n\n#                                   CxxTest::TestSuite's to be included in this runner\n\n#\n\n#    The variable TESTHELPER_SRCS can be used to pass in extra (non-test) source files\n\n#    that should be included in the test executable.\n\n#\n\n#    The variable CXXTEST_EXTRA_HEADER_INCLUDE can be used to pass an additional header\n\n#    to the --include optional of the cxxtestgen command.\n\n#\n\n#    The variable CXXTEST_OUTPUT_DIR can be used to specify the directory for the\n\n#    generated files. The default is CMAKE_CURRENT_BINARY_DIR.\n\n#           \n\n#       #==============\n\n#       Example Usage:\n\n#\n\n#           find_package(CxxTest)\n\n#           if(CXXTEST_FOUND)\n\n#               include_directories(${CXXTEST_INCLUDE_DIR})\n\n#               enable_testing()\n\n#\n\n#               set(TESTHELPER_SRCS HelperClass1.cc HelperClass2.cc)\n\n#               CXXTEST_ADD_TEST(unittest_foo foo_test.cc\n\n#                                 ${CMAKE_CURRENT_SOURCE_DIR}/foo_test.h)\n\n#               target_link_libraries(unittest_foo foo) # as needed\n\n#           endif()\n\n#\n\n#              This will (if CxxTest is found):\n\n#              1. Invoke the testgen executable to autogenerate foo_test.cc in the\n\n#                 binary tree from \"foo_test.h\" in the current source directory.\n\n#              2. Create an executable and test called unittest_foo.\n\n#              3. Files specified in TESTHELPER_SRCS will also be compiled and linked in.\n\n#               \n\n#      #=============\n\n#      Example foo_test.h:\n\n#\n\n#          #include <cxxtest/TestSuite.h>\n\n#          \n\n#          class MyTestSuite : public CxxTest::TestSuite \n\n#          {\n\n#          public:\n\n#             void testAddition( void )\n\n#             {\n\n#                TS_ASSERT( 1 + 1 > 1 );\n\n#                TS_ASSERT_EQUALS( 1 + 1, 2 );\n\n#             }\n\n#          };\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2008-2009 Kitware, Inc.\n\n# Copyright 2008-2009 Philip Lowman <philip@yhbt.com>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distributed this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Version 1.2 (3/2/08)\n\n#     Included patch from Tyler Roscoe to have the perl & python binaries\n\n#     detected based on CXXTEST_INCLUDE_DIR\n\n# Version 1.1 (2/9/08)\n\n#     Clarified example to illustrate need to call target_link_libraries()\n\n#     Changed commands to lowercase\n\n#     Added licensing info\n\n# Version 1.0 (1/8/08)\n\n#     Fixed CXXTEST_INCLUDE_DIRS so it will work properly\n\n#     Eliminated superfluous CXXTEST_FOUND assignment\n\n#     Cleaned up and added more documentation\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#=============================================================\n\n# CXXTEST_ADD_TEST (public macro to add unit tests)\n\n#=============================================================\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# output directory\n",
        "Line" : 109,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# determine the cpp filename\n",
        "Line" : 117,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# add additional include if requested\n",
        "Line" : 119,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# convert the header files to have full path\n",
        "Line" : 132,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# define the test executable and exclude it from the all target\n\n# The TESTHELPER_SRCS variable can be set outside the macro and used to pass in test helper classes\n",
        "Line" : 159,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# only the package wide test is added to check\n",
        "Line" : 163,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# add the whole suite as a single test so the output xml doesn't overwrite itself\n",
        "Line" : 167,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# THE FOLLOWING DESTROYS THE OUTPUT XML FILE\n\n# add each separate test to ctest\n",
        "Line" : 173,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# The filename without extension = The suite name.\n",
        "Line" : 176,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# ------ Performance test version -------\n\n# Name of the possibly-existing Performance test suite\n",
        "Line" : 186,
        "CharPositionInLine" : 3
      },
      "14" : {
        "Text" : "# Read the contents of the header file\n",
        "Line" : 189,
        "CharPositionInLine" : 3
      },
      "15" : {
        "Text" : "# Is that suite defined in there at all?\n",
        "Line" : 191,
        "CharPositionInLine" : 3
      },
      "16" : {
        "Text" : "#MESSAGE( \"${_performance_suite_name} Found:                 ${_search_res}\" ) \n",
        "Line" : 194,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "#=============================================================\n\n# main()\n\n#=============================================================\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "buildconfig/CMake/FindGitLFS.cmake" : {
      "ObjectId" : "12322655e3d3c2a10b896490ca647efd6bb53eb3",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindGitLFS\n\n# ----------\n\n#\n\n#\n\n#\n\n# The module defines the following variables:\n\n#\n\n# ::\n\n#\n\n#    GITLFS_EXECUTABLE - path to git-lfs command line client\n\n#    GITLFS_FOUND - true if the command line client was found\n\n#\n\n# Example usage:\n\n#\n\n# ::\n\n#\n\n#    find_package(GitLFS)\n\n#    if(GITLFS_FOUND)\n\n#      message(\"git found: ${GITLFS_EXECUTABLE}\")\n\n#    endif()\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set GIT_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "buildconfig/CMake/FindJsonCPP.cmake" : {
      "ObjectId" : "7d2d4f5da2adc78b31887589da2d66ad3490dc82",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find jsoncpp include dirs and libraries\n\n# Use this module by invoking find_package with the form:\n\n#  find_package(JsonCPP [required] [quiet] )\n\n#\n\n# The module sets the following variables \n\n#  JSONCPP_FOUND          - True if headers and libraries were found\n\n#  JSONCPP_INCLUDE_DIR    - jsoncpp include directories\n\n#  JSONCPP_LIBRARY        - library files for linking (optimised version)\n\n#  JSONCPP_LIBRARY_DEBUG  - library files for linking (debug version)\n\n#  JSONCPP_LIBRARIES      - All required libraries, including the configuration type\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Headers\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Libraries\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# optimized\n",
        "Line" : 17,
        "CharPositionInLine" : 47
      },
      "4" : {
        "Text" : "# debug\n",
        "Line" : 18,
        "CharPositionInLine" : 55
      },
      "5" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set JSONCPP_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Advanced variables\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "buildconfig/CMake/FindLibRDKafka.cmake" : {
      "ObjectId" : "615e9d2d6e888679f504e79d6ca940d136962ae4",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find LibRDKafka headers and libraries.\n\n#\n\n# Usage of this module as follows:\n\n#\n\n#     find_package(LibRDKafka)\n\n#\n\n# A minimum required version can also be specified, for example:\n\n#\n\n#     find_package(LibRDKafka 0.11.1)\n\n#\n\n# Variables used by this module, they can change the default behaviour and need\n\n# to be set before calling find_package:\n\n#\n\n#  LibRDKafka_ROOT_DIR  Set this variable to the root installation of\n\n#                    LibRDKafka if the module has problems finding\n\n#                    the proper installation path.\n\n#\n\n# Variables defined by this module:\n\n#\n\n#  LIBRDKAFKA_FOUND              System has LibRDKafka libs/headers\n\n#  LibRDKafka_LIBRARIES          The LibRDKafka libraries\n\n#  LibRDKafka_INCLUDE_DIR        The location of LibRDKafka headers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "buildconfig/CMake/FindMuParser.cmake" : {
      "ObjectId" : "980edd2cea7d0595939972bee306a70891694265",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find muParser\n\n# Find the muParser library\n\n#\n\n#  This module defines the following variables:\n\n#     MUPARSER_FOUND        - True if MUPARSER_INCLUDE_DIR & MUPARSER_LIBRARY are found\n\n#     MUPARSER_LIBRARIES    - Set when MUPARSER_LIBRARY is found\n\n#     MUPARSER_INCLUDE_DIRS - Set when MUPARSER_INCLUDE_DIR is found\n\n#\n\n#     MUPARSER_INCLUDE_DIR  - where to find muParser.h etc.\n\n#     MUPARSER_LIBRARY      - the muParser library\n\n#\n\n#\n\n# This file based on FindALSA.cmake\n\n#\n\n#=============================================================================\n\n# Copyright 2009 Kitware, Inc.\n\n# Copyright 2009 Philip Lowman <philip@yhbt.com>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distributed this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set MUPARSER_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "buildconfig/CMake/FindNexus.cmake" : {
      "ObjectId" : "e36e49784c8b6ddc4884ca1e155c47cff43bd472",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# - Attempt to find NeXus C/C++ libraries and include files\n\n# NEXUS_INCLUDE_DIR where to find napi.h, etc.\n\n# NEXUS_C_LIBRARIES C libraries to link against\n\n# NEXUS_CPP_LIBRARIES C++ libraries to link against\n\n# NEXUS_LIBRARIES All libraries that have been found\n\n# NEXUS_VERSION The NeXus version\n\n# NEXUS_FOUND If false, do not try to use NeXus\n\n###############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Search for the include files. Newer versions of Nexus have a nexus sub directory\n\n# containing the headers but older versions just have napi.h in the root include path\n\n# Try for nexus/napi.h first\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find the C libraries\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find the C++ libraries\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Debug variants\n\n# C\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# C++\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set a version string by examining the napi.h header\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Extract the line containing the version string which will look like this \"#define NEXUS_VERSION   \"X.X.X\"                /* major.minor.patch */\"\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Hack off the portion up to and including the first double quote\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Hack off the portion from the second double quote to the end of the line\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set NEXUS_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# this and related code should go away when libraries are upgraded\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 12
    },
    "buildconfig/CMake/FindNumpy.cmake" : {
      "ObjectId" : "663389f2bd81484274858f3cf8e4e56815ae030b",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find numpy\n\n# Find the native numpy includes\n\n# This module defines\n\n#  PYTHON_NUMPY_INCLUDE_DIR, where to find numpy/arrayobject.h, etc.\n\n#  PYTHON_NUMPY_FOUND, If false, do not try to use numpy headers.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "buildconfig/CMake/FindOpenCascade.cmake" : {
      "ObjectId" : "8cd5913b47afc582d53db283ae6910c0a67b6a85",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find OpenCascade Library and include files\n\n# OPENCASCADE_INCLUDE_DIR where to find Standard.hxx, etc.\n\n# OPENCASCADE_LIBRARIES libraries to link against\n\n# OPENCASCADE_FOUND If false, do not try to use OPENCASCADE\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set OPENCASCADE_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "buildconfig/CMake/FindPoco.cmake" : {
      "ObjectId" : "8b94035e77ebe06f90e980003effe27b769b5b0c",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find Poco libraries and include files\n\n# POCO_INCLUDE_DIR where to find Standard.hxx, etc.\n\n# POCO_LIBRARIES libraries to link against\n\n# POCO_FOUND If false, do not try to use POCO\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add poco library to list and also the corresponding debug library if it is available\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Set a version string by examining either the Poco/Version.h header or\n\n# the Poco/Foundation.h header if Version.h does not exist\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# regex quantifiers like {8} don't seem to work so we'll stick with + even though\n\n# it's not strictly true\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# pull out just the part after the 0x\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Pretty format\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Also set a shared library version number. This is different to the main version number\n\n# and can form part of the package name on some Linux systems\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# The library path is usually a symlink to the actually library\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set POCO_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "buildconfig/CMake/FindPyQt4.cmake" : {
      "ObjectId" : "3702ad6b5ad0a46344c1e9471901b020a1a70203",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find PyQt4\n\n# ~~~~~~~~~~\n\n#\n\n# PyQt4 website: http://www.riverbankcomputing.co.uk/pyqt/index.php\n\n#\n\n# Find the installed version of PyQt4. FindPyQt4 should only be called after\n\n# Python has been found.\n\n#\n\n# This file defines the following variables, which can also be overridden by\n\n# users:\n\n#\n\n# PYQT4_VERSION - The version of PyQt4 found expressed as a 6 digit hex number\n\n#     suitable for comparison as a string\n\n#\n\n# PYQT4_VERSION_STR - The version of PyQt4 as a human readable string.\n\n#\n\n# PYQT4_VERSION_TAG - The Qt4 version tag used by PyQt's sip files.\n\n#\n\n# PYQT4_SIP_DIR - The directory holding the PyQt4 .sip files.\n\n#\n\n# PYQT4_SIP_FLAGS - The SIP flags used to build PyQt.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "buildconfig/CMake/FindPyQt5.cmake" : {
      "ObjectId" : "0ac1930aed3cc5dd3b65f9a964be228c6a8a6e0a",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find PyQt5\n\n# ~~~~~~~~~~\n\n#\n\n# PyQt5 website: http://www.riverbankcomputing.co.uk/pyqt/index.php\n\n#\n\n# Find the installed version of PyQt5. FindPyQt5 should only be called after\n\n# Python has been found.\n\n#\n\n# This file defines the following variables, which can also be overridden by\n\n# users:\n\n#\n\n# PYQT5_VERSION - The version of PyQt5 found expressed as a 6 digit hex number\n\n#     suitable for comparison as a string\n\n#\n\n# PYQT5_VERSION_STR - The version of PyQt5 as a human readable string.\n\n#\n\n# PYQT5_VERSION_TAG - The Qt5 version tag used by PyQt's sip files.\n\n#\n\n# PYQT5_SIP_DIR - The directory holding the PyQt5 .sip files.\n\n#\n\n# PYQT5_SIP_FLAGS - The SIP flags used to build PyQt.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "buildconfig/CMake/FindPyUnitTest.cmake" : {
      "ObjectId" : "20725240b3ff1abab4c30d6d6a92e710db61e006",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# PYUNITTEST_ADD_TEST (public macro to add unit tests)\n\n#   Adds a set of python tests based upon the unittest module\n\n#\n\n#   The variable PYUNITTEST_PYTHONPATH_EXTRA can be defined with\n\n#   extra paths to add to PYTHONPATH during the tests\n\n#   Parameters:\n\n#       _test_src_dir_base :: A base directory when added to the relative test paths gives\n\n#                             an absolute path to that test. This directory is added to the\n\n#                             PYTHONPATH when tests are executed\n\n#       _testname_prefix :: A prefix for each test that is added to ctest, the name will be\n\n#                           ${_testname_prefix}_TestName\n\n#       ${ARGN} :: List of test files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Property for the module directory\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Environment\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# cmake list separator and Windows environment separator are the same so escape the cmake one\n",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Define the environment\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Add all of the individual tests so that they can be run in parallel\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# We duplicate the suitename so that it matches the junit output name\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Set the PYTHONPATH so that the built modules can be found\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#=============================================================\n\n# main()\n\n#=============================================================\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# find the driver script\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# let people know whether or not it was found\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "buildconfig/CMake/FindPylint.cmake" : {
      "ObjectId" : "e673732303caf059c3124ff4d677de6831009ca4",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find Pylint\n\n# Find the Pylint executable and extract the version number\n\n#\n\n# OUTPUT Variables\n\n#\n\n#   PYLINT_FOUND\n\n#       True if the pylint package was found\n\n#   PYLINT_EXECUTABLE\n\n#       The pylint executable location\n\n#   PYLINT_VERSION\n\n#       A string denoting the version of pylint that has been found\n\n#   PYLINT_RUNNER_SCRIPT\n\n#       Location of python script that will actually run pylint\n\n#   PYLINT_CFG_FILE\n\n#       Location of configuration file\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================\n\n# main()\n\n#=============================================================\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Script to find all .py files and execute pylint\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Configuration file\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "buildconfig/CMake/FindQScintillaQt4.cmake" : {
      "ObjectId" : "31ced16a0d07328845f423d80483f1e38d4f1505",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find QScintilla that is linked against Qt4\n\n#\n\n# Adds an imported target Qt4::Qscintilla\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "buildconfig/CMake/FindQScintillaQt5.cmake" : {
      "ObjectId" : "a4b9a1f03c28400ff70c63c92ae3de0e483577d0",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find QScintilla that is linked against Qt4\n\n#\n\n# Adds an imported target Qt5::Qscintilla\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "buildconfig/CMake/FindQwt5.cmake" : {
      "ObjectId" : "0a1757ee6c4b7e4581bd21ac86df6b8fa6d69ad9",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# Attempt to find Qwt libraries and include files.\n\n# Set\n\n#   QWT5_INCLUDE_DIR: where to find qwt_plot.h, etc.\n\n#   QWT5_LIBRARIES:   libraries to link against\n\n#   QWT5_VERSION:     a string containing the version number\n\n###############################################################################\n\n# Hacky way to get CMake to find the updated mantidlibs version of qwt \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in REQUIRED mode: terminate if one of the above find commands failed\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Parse version string from qwt_global.h\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#   hack off the portion up to and including the first double quote\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#   hack off the portion from the second double quote to the end of the line\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Create an import target\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "buildconfig/CMake/FindQwtPlot3d.cmake" : {
      "ObjectId" : "1965dbec162b5abaa766a0666ce9c4e8978c3928",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find QwtPlot3d libraries and include files\n\n# QWTPLOT3D_INCLUDE_DIR where to find qwt3d_plot.h, etc.\n\n# QWTPLOT3D_LIBRARIES libraries to link against\n\n# QWTPLOT3D_FOUND If false, do not try to use Qwt\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set QWTPLOT3D_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "buildconfig/CMake/FindSIP.cmake" : {
      "ObjectId" : "2676f1559394d567d25e1663c83a7957151e6feb",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find SIP\n\n# ~~~~~~~~\n\n#\n\n# SIP website: http://www.riverbankcomputing.co.uk/sip/index.php\n\n#\n\n# Find the installed version of SIP. FindSIP should be called after Python\n\n# has been found.\n\n#\n\n# This file defines the following variables:\n\n#\n\n# SIP_VERSION - The version of SIP found expressed as a 6 digit hex number\n\n#     suitable for comparison as a string.\n\n#\n\n# SIP_VERSION_STR - The version of SIP found as a human readable string.\n\n#\n\n# SIP_EXECUTABLE - Path and filename of the SIP command line executable.\n\n#\n\n# SIP_INCLUDE_DIR - Directory holding the SIP C++ header file.\n\n#\n\n# SIP_DEFAULT_SIP_DIR - Default directory where .sip files should be installed\n\n#     into.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2007, Simon Edwards <simon@simonzone.com>\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Check that it really exists\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#  IF(SIP_FOUND)\n\n#    IF(NOT SIP_FIND_QUIETLY)\n\n#      MESSAGE(STATUS \"Found SIP version: ${SIP_VERSION_STR}\")\n\n#    ENDIF(NOT SIP_FIND_QUIETLY)\n\n#  ELSE(SIP_FOUND)\n\n#    IF(SIP_FIND_REQUIRED)\n\n#      MESSAGE(FATAL_ERROR \"Could not find SIP\")\n\n#    ENDIF(SIP_FIND_REQUIRED)\n\n#  ENDIF(SIP_FOUND)\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "buildconfig/CMake/FindSphinx.cmake" : {
      "ObjectId" : "4db68670cd43af51d89107fd272a8e7df962659a",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# This module attempts to find the Python Sphinx\n\n# documentation generator\n\n#\n\n# If the module is found the following variables are\n\n# set:\n\n#  SPHINX_FOUND\n\n#  SPHINX_PACKAGE_DIR\n\n#\n\n#=============================================================\n\n# main()\n\n#=============================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# import sphinx-build to attempt to get the version\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "buildconfig/CMake/FindTBB.cmake" : {
      "ObjectId" : "99a7208ac65fe2eff615fa78b052c07f9fca0af5",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find ThreadingBuildingBlocks include dirs and libraries\n\n# Use this module by invoking find_package with the form:\n\n#  find_package(TBB\n\n#    [REQUIRED]             # Fail with error if TBB is not found\n\n#    )                      #\n\n# Once done, this will define\n\n#\n\n#  TBB_FOUND - system has TBB\n\n#  TBB_INCLUDE_DIRS - the TBB include directories\n\n#  TBB_LIBRARIES - TBB libraries to be lined, doesn't include malloc or\n\n#                  malloc proxy\n\n#\n\n#  TBB_VERSION_MAJOR - Major Product Version Number\n\n#  TBB_VERSION_MINOR - Minor Product Version Number\n\n#  TBB_INTERFACE_VERSION - Engineering Focused Version Number\n\n#  TBB_COMPATIBLE_INTERFACE_VERSION - The oldest major interface version\n\n#                                     still supported. This uses the engineering\n\n#                                     focused interface version numbers.\n\n#\n\n#  TBB_MALLOC_FOUND - system has TBB malloc library\n\n#  TBB_MALLOC_INCLUDE_DIRS - the TBB malloc include directories\n\n#  TBB_MALLOC_LIBRARIES - The TBB malloc libraries to be lined\n\n#\n\n#  TBB_MALLOC_PROXY_FOUND - system has TBB malloc proxy library\n\n#  TBB_MALLOC_PROXY_INCLUDE_DIRS = the TBB malloc proxy include directories\n\n#  TBB_MALLOC_PROXY_LIBRARIES - The TBB malloc proxy libraries to be lined\n\n#\n\n#\n\n# This module reads hints about search locations from variables:\n\n#  ENV TBB_ARCH_PLATFORM - for eg. set it to \"mic\" for Xeon Phi builds\n\n#  ENV TBB_ROOT or just TBB_ROOT - root directory of tbb installation\n\n#  ENV TBB_BUILD_PREFIX - specifies the build prefix for user built tbb\n\n#                         libraries. Should be specified with ENV TBB_ROOT\n\n#                         and optionally...\n\n#  ENV TBB_BUILD_DIR - if build directory is different than ${TBB_ROOT}/build\n\n#\n\n#\n\n# Modified by Robert Maynard from the original OGRE source\n\n#\n\n#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n\n#\n\n#=============================================================================\n\n# Copyright 2010-2012 Kitware, Inc.\n\n# Copyright 2012      Rolf Eike Beer <eike@sf-mail.de>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n#  FindTBB helper functions and macros\n\n#\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#===============================================\n\n# Do the final processing for the package find.\n\n#===============================================\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# skip if already processed during this run\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#mark the following variables as internal variables\n",
        "Line" : 84,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "#===============================================\n\n# Generate debug names from given RELEASEease names\n\n#===============================================\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#===============================================\n\n# See if we have env vars to help us find tbb\n\n#===============================================\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# replace won't work if var is blank\n",
        "Line" : 106,
        "CharPositionInLine" : 3
      },
      "8" : {
        "Text" : "#===============================================\n\n# Couple a set of RELEASEease AND debug libraries\n\n#===============================================\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#=============================================================================\n\n#  Now to actually find TBB\n\n#\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Get path, convert backslashes as ${ENV_${var}}\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# initialize search paths\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# If user built from sources\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# include directory under ${ENV_TBB_ROOT}/include\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# For Windows, let's assume that the user might be using the precompiled\n\n# TBB packages from the main website. These use a rather awkward directory\n\n# structure (at least for automatically finding the right files) depending\n\n# on platform and compiler, but we'll do our best to accommodate it.\n\n# Not adding the same effort for the precompiled linux builds, though. Those\n\n# have different versions for CC compiler versions and linux kernels which\n\n# will never adequately match the user's setup, so there is no feasible way\n\n# to detect the \"best\" version to use. The user will have to manually\n\n# select the right files. (Chances are the distributions are shipping their\n\n# custom version of tbb, anyway, so the problem is probably nonexistent.)\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# for each prefix path, add ia32/64\\${COMPILER_PREFIX}\\lib to the lib search path\n",
        "Line" : 180,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# For OS X binary distribution, choose libc++ based libraries for Mavericks (10.9)\n\n# and above and AppleClang\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# check compiler ABI\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Assume compatibility with 4.4 for other compilers\n",
        "Line" : 222,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# if platform architecture is explicitly specified\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# add general search paths\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#if we haven't found TBB no point on going any further\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#=============================================================================\n\n# Look for TBB's malloc package\n",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#=============================================================================\n\n# Look for TBB's malloc proxy package\n",
        "Line" : 299,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#=============================================================================\n\n#parse all the version numbers from tbb\n",
        "Line" : 319,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#only read the start of the file\n",
        "Line" : 323,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 26
    },
    "buildconfig/CMake/FindTcmalloc.cmake" : {
      "ObjectId" : "2787fd7896171fd9466d3a167b3dbe7900dda54b",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find the tcmalloc librarie and include files\n\n# tcmalloc is part of the Google performance tools suite\n\n# http://code.google.com/p/google-perftools/\n\n#\n\n# TCMALLOC_INCLUDE_DIR where to find tcmalloc.h, etc.\n\n# TCMALLOC_LIBRARIES libraries to link against\n\n# TCMALLOC_FOUND If false, do not try to use TCMALLOC\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set TCMALLOC_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "buildconfig/CMake/GNUSetup.cmake" : {
      "ObjectId" : "4b03cfcde97b3bbfdfee13d8e2a80bc55ccc6289",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# Specialized setup for GNU gcc compilers.\n\n###############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The settings and definitions here will apply to all projects. Specific\n\n# project settings should be included in the relevant CMakeLists.txt file\n\n# for that project.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set our own compiler version flag from the cmake one and export it globally\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add an option to use the old C++ ABI if gcc is 5 series\n",
        "Line" : 26,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Global warning flags.\n\n# Disable some warnings about deprecated headers and type conversions that\n\n# we can't do anything about\n\n# -Wno-deprecated: Do not warn about use of deprecated headers.\n\n# -Wno-write-strings: Do not warn about deprecated conversions of char*->const char*\n\n# -Wno-unused-result: Do not warn about unused return values in some C functions\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# C++-specific flags\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#Linking errors on Ubuntu 18.04 with --enable-new-dtags\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Check if we have a new enough version for these flags\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Consider enabling once [[fallthrough]] is available on all platforms.\n\n# https://developers.redhat.com/blog/2017/03/10/wimplicit-fallthrough-in-gcc-7/\n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Add some options for debug build to help the Zoom profiler\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# vptr check is generating a lot of false positives, hiding other more serious warnings.\n",
        "Line" : 91,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# XCode isn't picking up the c++ standard by CMAKE_CXX_STANDARD\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define an option to statically link libstdc++\n",
        "Line" : 107,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 13
    },
    "buildconfig/CMake/GenerateExportHeader.cmake" : {
      "ObjectId" : "4573c2e77894cbcd7e5dc7f14a494cf89922ff3a",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# GenerateExportHeader\n\n# --------------------\n\n#\n\n# Function for generation of export macros for libraries\n\n#\n\n# This module provides the function GENERATE_EXPORT_HEADER().\n\n#\n\n# The ``GENERATE_EXPORT_HEADER`` function can be used to generate a file\n\n# suitable for preprocessor inclusion which contains EXPORT macros to be\n\n# used in library classes::\n\n#\n\n#    GENERATE_EXPORT_HEADER( LIBRARY_TARGET\n\n#              [BASE_NAME <base_name>]\n\n#              [EXPORT_MACRO_NAME <export_macro_name>]\n\n#              [EXPORT_FILE_NAME <export_file_name>]\n\n#              [DEPRECATED_MACRO_NAME <deprecated_macro_name>]\n\n#              [NO_EXPORT_MACRO_NAME <no_export_macro_name>]\n\n#              [STATIC_DEFINE <static_define>]\n\n#              [NO_DEPRECATED_MACRO_NAME <no_deprecated_macro_name>]\n\n#              [DEFINE_NO_DEPRECATED]\n\n#              [PREFIX_NAME <prefix_name>]\n\n#              [CUSTOM_CONTENT_FROM_VARIABLE <variable>]\n\n#    )\n\n#\n\n#\n\n# The target properties :prop_tgt:`CXX_VISIBILITY_PRESET <<LANG>_VISIBILITY_PRESET>`\n\n# and :prop_tgt:`VISIBILITY_INLINES_HIDDEN` can be used to add the appropriate\n\n# compile flags for targets.  See the documentation of those target properties,\n\n# and the convenience variables\n\n# :variable:`CMAKE_CXX_VISIBILITY_PRESET <CMAKE_<LANG>_VISIBILITY_PRESET>` and\n\n# :variable:`CMAKE_VISIBILITY_INLINES_HIDDEN`.\n\n#\n\n# By default ``GENERATE_EXPORT_HEADER()`` generates macro names in a file\n\n# name determined by the name of the library.  This means that in the\n\n# simplest case, users of ``GenerateExportHeader`` will be equivalent to:\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#    set(CMAKE_CXX_VISIBILITY_PRESET hidden)\n\n#    set(CMAKE_VISIBILITY_INLINES_HIDDEN 1)\n\n#    add_library(somelib someclass.cpp)\n\n#    generate_export_header(somelib)\n\n#    install(TARGETS somelib DESTINATION ${LIBRARY_INSTALL_DIR})\n\n#    install(FILES\n\n#     someclass.h\n\n#     ${PROJECT_BINARY_DIR}/somelib_export.h DESTINATION ${INCLUDE_INSTALL_DIR}\n\n#    )\n\n#\n\n#\n\n# And in the ABI header files:\n\n#\n\n# .. code-block:: c++\n\n#\n\n#    #include \"somelib_export.h\"\n\n#    class SOMELIB_EXPORT SomeClass {\n\n#      ...\n\n#    };\n\n#\n\n#\n\n# The CMake fragment will generate a file in the\n\n# ``${CMAKE_CURRENT_BINARY_DIR}`` called ``somelib_export.h`` containing the\n\n# macros ``SOMELIB_EXPORT``, ``SOMELIB_NO_EXPORT``, ``SOMELIB_DEPRECATED``,\n\n# ``SOMELIB_DEPRECATED_EXPORT`` and ``SOMELIB_DEPRECATED_NO_EXPORT``.\n\n# They will be followed by content taken from the variable specified by\n\n# the ``CUSTOM_CONTENT_FROM_VARIABLE`` option, if any.\n\n# The resulting file should be installed with other headers in the library.\n\n#\n\n# The ``BASE_NAME`` argument can be used to override the file name and the\n\n# names used for the macros:\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#    add_library(somelib someclass.cpp)\n\n#    generate_export_header(somelib\n\n#      BASE_NAME other_name\n\n#    )\n\n#\n\n#\n\n# Generates a file called ``other_name_export.h`` containing the macros\n\n# ``OTHER_NAME_EXPORT``, ``OTHER_NAME_NO_EXPORT`` and ``OTHER_NAME_DEPRECATED``\n\n# etc.\n\n#\n\n# The ``BASE_NAME`` may be overridden by specifying other options in the\n\n# function.  For example:\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#    add_library(somelib someclass.cpp)\n\n#    generate_export_header(somelib\n\n#      EXPORT_MACRO_NAME OTHER_NAME_EXPORT\n\n#    )\n\n#\n\n#\n\n# creates the macro ``OTHER_NAME_EXPORT`` instead of ``SOMELIB_EXPORT``, but\n\n# other macros and the generated file name is as default:\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#    add_library(somelib someclass.cpp)\n\n#    generate_export_header(somelib\n\n#      DEPRECATED_MACRO_NAME KDE_DEPRECATED\n\n#    )\n\n#\n\n#\n\n# creates the macro ``KDE_DEPRECATED`` instead of ``SOMELIB_DEPRECATED``.\n\n#\n\n# If ``LIBRARY_TARGET`` is a static library, macros are defined without\n\n# values.\n\n#\n\n# If the same sources are used to create both a shared and a static\n\n# library, the uppercased symbol ``${BASE_NAME}_STATIC_DEFINE`` should be\n\n# used when building the static library:\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#    add_library(shared_variant SHARED ${lib_SRCS})\n\n#    add_library(static_variant ${lib_SRCS})\n\n#    generate_export_header(shared_variant BASE_NAME libshared_and_static)\n\n#    set_target_properties(static_variant PROPERTIES\n\n#      COMPILE_FLAGS -DLIBSHARED_AND_STATIC_STATIC_DEFINE)\n\n#\n\n# This will cause the export macros to expand to nothing when building\n\n# the static library.\n\n#\n\n# If ``DEFINE_NO_DEPRECATED`` is specified, then a macro\n\n# ``${BASE_NAME}_NO_DEPRECATED`` will be defined This macro can be used to\n\n# remove deprecated code from preprocessor output:\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#    option(EXCLUDE_DEPRECATED \"Exclude deprecated parts of the library\" FALSE)\n\n#    if (EXCLUDE_DEPRECATED)\n\n#      set(NO_BUILD_DEPRECATED DEFINE_NO_DEPRECATED)\n\n#    endif()\n\n#    generate_export_header(somelib ${NO_BUILD_DEPRECATED})\n\n#\n\n#\n\n# And then in somelib:\n\n#\n\n# .. code-block:: c++\n\n#\n\n#    class SOMELIB_EXPORT SomeClass\n\n#    {\n\n#    public:\n\n#    #ifndef SOMELIB_NO_DEPRECATED\n\n#      SOMELIB_DEPRECATED void oldMethod();\n\n#    #endif\n\n#    };\n\n#\n\n# .. code-block:: c++\n\n#\n\n#    #ifndef SOMELIB_NO_DEPRECATED\n\n#    void SomeClass::oldMethod() {  }\n\n#    #endif\n\n#\n\n#\n\n# If ``PREFIX_NAME`` is specified, the argument will be used as a prefix to\n\n# all generated macros.\n\n#\n\n# For example:\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#    generate_export_header(somelib PREFIX_NAME VTK_)\n\n#\n\n# Generates the macros ``VTK_SOMELIB_EXPORT`` etc.\n\n#\n\n# ::\n\n#\n\n#    ADD_COMPILER_EXPORT_FLAGS( [<output_variable>] )\n\n#\n\n# The ``ADD_COMPILER_EXPORT_FLAGS`` function adds ``-fvisibility=hidden`` to\n\n# :variable:`CMAKE_CXX_FLAGS <CMAKE_<LANG>_FLAGS>` if supported, and is a no-op\n\n# on Windows which does not need extra compiler flags for exporting support.\n\n# You may optionally pass a single argument to ``ADD_COMPILER_EXPORT_FLAGS``\n\n# that will be populated with the ``CXX_FLAGS`` required to enable visibility\n\n# support for the compiler/architecture in use.\n\n#\n\n# This function is deprecated.  Set the target properties\n\n# :prop_tgt:`CXX_VISIBILITY_PRESET <<LANG>_VISIBILITY_PRESET>` and\n\n# :prop_tgt:`VISIBILITY_INLINES_HIDDEN` instead.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO: Install this macro separately?\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Exclude XL here because it misinterprets -fvisibility=hidden even though\n\n# the check_cxx_compiler_flag passes\n",
        "Line" : 206,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# NOTE:  Some Embarcadero compilers silently compile __declspec(deprecated)\n\n# without error, but this is not a documented feature and the attribute does\n\n# not actually generate any warnings.\n",
        "Line" : 222,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Option overrides\n",
        "Line" : 276,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Default options\n",
        "Line" : 295,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Just return if there are no flags to add.\n",
        "Line" : 392,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Either return the extra flags needed in the supplied argument, or to the\n\n# CMAKE_CXX_FLAGS if no argument is supplied.\n",
        "Line" : 402,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 9
    },
    "buildconfig/CMake/GenerateMantidExportHeader.cmake" : {
      "ObjectId" : "5187beca0fc2f14ec801f0483c4080ee7db9d00d",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "buildconfig/CMake/GoogleTest.cmake" : {
      "ObjectId" : "1a23f840e2a7e4d8644a90ea1434830bdd91caed",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the Google Mock headers and libraries\n\n# GMOCK_INCLUDE_DIR where to find gmock.h\n\n# GMOCK_FOUND If false, do not try to use Google Mock\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Make gtest_version available everywhere\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Prevent overriding the parent project's compiler/linker\n\n# settings on Windows\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Download and unpack googletest at configure time\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Add googletest directly to our build. This defines\n\n# the gtest and gtest_main targets.\n",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Hide targets from \"all\" and put them in the UnitTests folder in MSVS\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set GMOCK_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    },
    "buildconfig/CMake/LinuxPackageScripts.cmake" : {
      "ObjectId" : "5ea3e8c70b0a38fd87e02ed1e08e3365bc40f577",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################################\n\n# Define scripts for the Linux packages\n\n#\n\n# It provides:\n\n#  - launch_mantidplot.sh\n\n#  - launch_mantidworkbench.sh\n\n#  - mantid.sh <- for stable releases\n\n#  - mantid.csh <- for stable releases\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###########################################################################\n\n# Set installation variables\n\n###########################################################################\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Separate directory of plugins to be discovered by the ParaView framework\n\n# These cannot be mixed with our other plugins. Further sub-directories\n\n# based on the Qt version will also be created by the installation targets\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Tell rpm that this package does not own /opt /usr/share/{applications,pixmaps}\n\n# Required for Fedora >= 18 and RHEL >= 7\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###########################################################################\n\n# Environment scripts (profile.d)\n\n###########################################################################\n\n# default shell (bash-like)\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# c-shell\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "###########################################################################\n\n# Find python site-packages dir and create mantid.pth\n\n###########################################################################\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "############################################################################\n\n# Setup file variables for pre/post installation\n\n# These are very different depending on the distribution so are contained\n\n# in the Packaging/*/scripts directory as CMake templates\n\n############################################################################\n\n# We only manipulate the environment for  nprefixed non-MPI package builds\n\n# for shell maintainer scripts as ENVVARS_ON_INSTALL could have ON, OFF, True, False etc\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Common filenames to hold maintainer scripts\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# RHEL/Fedora\n",
        "Line" : 98,
        "CharPositionInLine" : 85
      },
      "10" : {
        "Text" : "# CPack variables\n",
        "Line" : 116,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# No postrm script as dpkg removes empty directories if everything else is tidied away.\n",
        "Line" : 133,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# CPack variables\n",
        "Line" : 135,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "############################################################################\n\n# Launcher scripts\n\n############################################################################\n\n# common definition of work for virtualgl - lots of escaping things from cmake\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# The scripts need tcmalloc to be resolved to the runtime library as the plain\n\n# .so symlink is only present when a -dev/-devel package is present\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# We only want to use the major version number\n",
        "Line" : 159,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# definitions to preload tcmalloc but not if we are using address sanitizer as this confuses things\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Do not indent the string below as it messes up the formatting in the final script\n",
        "Line" : 172,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# chunk of code for launching gdb\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "##### Local dev version\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# used by mantidplot and mantidworkbench\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Needs to be executable\n",
        "Line" : 226,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# what the actual thing is called\n",
        "Line" : 231,
        "CharPositionInLine" : 41
      },
      "23" : {
        "Text" : "# Needs to be executable\n",
        "Line" : 234,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Needs to be executable\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Needs to be executable\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "##### Package version\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# used by mantidplot and mantidworkbench\n",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# what the actual thing is called\n",
        "Line" : 271,
        "CharPositionInLine" : 48
      },
      "CommentCount" : 29
    },
    "buildconfig/CMake/LinuxSetup.cmake" : {
      "ObjectId" : "73aba71e1ddf679737af0ae2a54aea8dd6714e59",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################################\n\n# Who are we\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###########################################################################\n\n# Use the system-installed version of Python.\n\n###########################################################################\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If found, need to add debug library into libraries variable\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###########################################################################\n\n# If required, find tcmalloc\n\n###########################################################################\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# If not wanted, just carry on without it\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# if it can't be found still carry on as the build will work. The package\n\n# depenendencies will install it for the end users\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "###########################################################################\n\n# Set up package scripts for this distro\n\n###########################################################################\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "buildconfig/CMake/MPISetup.cmake" : {
      "ObjectId" : "29e7e7dca3fc3c472c22d5cfe2ba4394c4830f80",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This finds OpenMPI on rhel6 (assuming it's installed, of course)\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The FindMPI module doesn't seem to respect the REQUIRED specifier (as of CMake 2.8.7)\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set things up to use the OpenMPI 'wrapper' compilers.\n\n# With CMake, we don't use the OpenMPI 'wrapper' compilers (because setting CMAKE_CXX_COMPILER after the\n\n# 'project' call is a no-no), but rather extract the extra arguments and apply them to the normal compiler.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Setting the linker flags doesn't seem to work right (or matter)\n\n#set ( CMAKE_SHARED_LINKER_FLAGS \"${CMAKE_SHARED_LINKER_FLAGS}\" ${MPI_CXX_LINK_FLAGS} )\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This is where (boost-)openmpi winds up on rhel6\n",
        "Line" : 18,
        "CharPositionInLine" : 38
      },
      "5" : {
        "Text" : "#unset ( BOOST_ROOT )\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add a definition that's used to guard MPI-specific parts of the main code\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add the ability to build a 'mantid-mpi' rpm\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Framework dependencies\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Configure a module file\n\n# This is where the software tree will be that we want the modulefile to point into. The 'normal' install location is the default,\n\n# but this should normally be set manually in the cmake configuration for a build\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Remove old module file\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Create new module file\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "buildconfig/CMake/MSVCSetup.cmake" : {
      "ObjectId" : "975e82f9d8f81732f91365b570221f88bde53aa8",
      "LastModified" : "2019-04-11T15:59:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##########################################################################\n\n# Set the SYSTEM_PACKAGE_TARGET to RUNTIME as we only want to package\n\n# dlls\n\n###########################################################################\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Also include MSVC runtime libraries when running install commands\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###########################################################################\n\n# Compiler options.\n\n###########################################################################\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Prevent deprecation errors from std::tr1 in googletest until it is fixed upstream. In MSVC 2017 and later\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "##########################################################################\n\n# Additional compiler flags\n\n##########################################################################\n\n# /MP     - Compile .cpp files in parallel\n\n# /W3     - Warning Level 3 (This is also the default)\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set PCH heap limit, the default does not work when running msbuild from the commandline for some reason\n\n# Any other value lower or higher seems to work but not the default. It it is fine without this when compiling\n\n# in the GUI though...\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# It make or may not already be set so override if it is (assumes if in CXX also in C)\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "###########################################################################\n\n# Qt5 is always in the same place\n\n###########################################################################\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "###########################################################################\n\n# On Windows we want to bundle Python.\n\n###########################################################################\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## Set the variables that FindPythonLibs would set\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## The executable\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# The \"pythonw\" executable that avoids raising another terminal when it runs. Used for IPython\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "###########################################################################\n\n# If required, find tcmalloc\n\n###########################################################################\n\n# Not ready for production use with MSVC 2015\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# If not wanted, just carry on without it\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Only link in release configurations. There seems to be problem linking in debug mode\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Use an alternate variable name so that it is only set on Windows\n",
        "Line" : 71,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "###########################################################################\n\n# Windows import library needs to go to bin as well\n\n###########################################################################\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "###########################################################################\n\n# Configure IDE/commandline startup scripts\n\n###########################################################################\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# The IDE may not be installed as we could be just using the build tools\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "###########################################################################\n\n# Configure Mantid startup scripts\n\n###########################################################################\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# build version\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# place it in the appropriate directory\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# install version\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "###########################################################################\n\n# (Fake) installation variables to keep windows sweet\n\n###########################################################################\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# This is the root of the plugins directory\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Separate directory of plugins to be discovered by the ParaView framework\n\n# These cannot be mixed with our other plugins. Further sub-directories\n\n# based on the Qt version will also be created by the installation targets\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Need to tidy these things up!\n",
        "Line" : 166,
        "CharPositionInLine" : 34
      },
      "CommentCount" : 27
    },
    "buildconfig/CMake/MantidExternalData.cmake" : {
      "ObjectId" : "9a63529a9391ec4e6c542de800f080b69d161095",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n# Setup the ExternalData variables for the project\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Select a default in the home directory\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Provide users with an option to select a local object store,\n\n# starting with the above-selected default.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Tell ExternalData module about selected object stores.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Store selected by Mantid-specific configuration above.\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Default binary root to build directory\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# This should always be last as it's the main read/write cache\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Increase network timeout defaults to avoid our slow server connection but don't override what a user provides\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "buildconfig/CMake/MantidUtils.cmake" : {
      "ObjectId" : "cbf92fdedba486ed25a50d27e390c27000c1b795",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#######################################################################\n\n# Define some useful macros/functions that are use throughout\n\n# the cmake scripts\n\n#######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# NAME: SET_TARGET_OUTPUT_DIRECTORY\n\n# Change the output directory of a library target. Handles the incorrect \n\n# behaviour of MSVC\n\n#   Parameters:\n\n#      TARGET - The name of the target\n\n#      OUTPUT_DIR - The directory to output the target\n\n#   Optional:\n\n#      An extension to use other than the standard (only used for MSVC)\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For some reason when the generator is MSVC  10 it ignores the LIBRARY_OUTPUT_DIRECTORY\n\n# property so we have to do something slightly different\n",
        "Line" : 17,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# Clean up\n",
        "Line" : 34,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# Because at the moment Xcode does something similar to MSVC and creates \n\n# Debug/Release directory for the output libraries, we need to copy the \n\n# library up a level (usually) in order for it to be in the correct place \n\n# for python to find it.\n",
        "Line" : 38,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Lets get the location of the output for the given target\n\n# and copy it to where we want it to go\n",
        "Line" : 43,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "#######################################################################\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#######################################################################\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n# NAME: COPY_FILES_TO_DIR\n\n# Adds a set of custom commands for each file to copy\n\n# the given file to the destination directory\n\n#   - FILES :: A list of files to copy. Note you will have\n\n#                 to quote an expanded list\n\n#   - SRC_DIR :: The src directory of the files to be copied\n\n#   - DEST_DIR :: The final directory for the copied files\n\n#   - INSTALLED_FILES :: An output variable containing the list of copied\n\n#                        files including their full paths\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#######################################################################\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# NAME: CLEAN_ORPHANED_PYC_FILES\n\n# Given a directory, glob for .pyc files and if there is not a .py file\n\n# next to it. Assumes that the .pyc was not under source control. Note\n\n# that the removal happens when cmake is run\n\n#   Parameters:\n\n#      ROOT_DIR - The root directory to start the search (recursive)\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "buildconfig/CMake/ParaViewSetup.cmake" : {
      "ObjectId" : "eff3cba639065601c23550c59221cf58e237144d",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file will setup some common items that later setups depend on\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the version of ParaView that is compatible with the Mantid code base\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "buildconfig/CMake/PrecompiledHeaderCommands.cmake" : {
      "ObjectId" : "66265583096c77af2546e6ec18e173958bc8cec0",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# - Defines macros for dealing with precompiled header files on platforms that\n\n#   support them\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# A switch to turn them on and off\n\n# \n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Instructs the MSVC toolset to use the precompiled header PRECOMPILED_HEADER\n\n# for each source file given in the collection named by SOURCE_VARIABLE_NAME.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Generate precompiled header translation unit if it is not already present\n",
        "Line" : 16,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Set this file as source for precompiled header\n",
        "Line" : 25,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Update properties of source files to use the precompiled header.\n\n# Additionally, force the inclusion of the precompiled header at beginning of each source file.\n",
        "Line" : 28,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Finally, update the source file collection to contain the precompiled header translation unit\n",
        "Line" : 35,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 7
    },
    "buildconfig/CMake/PyQtFindImpl.cmake" : {
      "ObjectId" : "7b55edc0e583276093d49aec0cb3c7f59d0ecd25",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Implementation of searching for PyQt\n\n#\n\n# It contains a function parameterized by the major\n\n# version of PyQt being searched.\n\n#\n\n# Search for the given version of PyQt. The function sets the\n\n# following variables in the parent scope:\n\n#\n\n# PYQT${major_version}_VERSION - The version of PyQt found expressed as a 6 digit hex number\n\n#     suitable for comparison as a string\n\n#\n\n# PYQT${major_version}_VERSION_STR - The version of PyQt as a human readable string.\n\n#\n\n# PYQT${major_version}_VERSION_TAG - The Qt version tag used by PyQt's sip files.\n\n#\n\n# PYQT${major_version}_SIP_DIR - The directory holding the PyQt .sip files.\n\n#\n\n# PYQT${major_version}_SIP_FLAGS - The SIP flags used to build PyQt.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "buildconfig/CMake/PyStoG.cmake" : {
      "ObjectId" : "83175ddae6286abdcf7da4987bc4ea700d23c247",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# clone the git repository\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# copy over the source files we want\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# copy over the relavant tests\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# copy over the test data\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# register the tests\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# create the \"simple\" __init__.py\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# install the results\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "buildconfig/CMake/PylintSetup.cmake" : {
      "ObjectId" : "0e79044befdbaa3720fe6edadbcc36cb406f40e9",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################\n\n# Setup target to run pylint checking if it is available\n\n########################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Output format options\n\n# Use msvs for MSVC generator, colorized for everything else. The buildservers can\n\n# set it to parseable for Jenkins\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# add a pylint-check target to run pylint on the required files and directories\n\n# relative to the root source directory\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Choose the number of threads used\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "buildconfig/CMake/Python-xmlrunner.cmake" : {
      "ObjectId" : "eb6219bf724fed532a0239ce365f81bc72a31b56",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Installed by 3rd party dependencies bundle\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Currently assumes item is importable\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Download and unpack at configure time\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "buildconfig/CMake/PythonPackageTargetFunctions.cmake" : {
      "ObjectId" : "319e14c4aa296ecc5c427e31b28ea98c7ee46bc2",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Defines functions to help deal with python packages\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Function to create links to python packages in the source tree\n\n# If the EXECUTABLE option is provided then it additional build rules are\n\n# defined to ensure startup scripts are regenerated appropriately\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Create a setup.py file if necessary\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# add .exe in the executable name for Windows, otherwise it can't find it during the install step\n",
        "Line" : 40,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# create the developer setup which just creates a pth file rather than copying things over\n",
        "Line" : 52,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# setuptools by default wants to build into a directory called 'build' relative the to the working directory. We have overridden\n\n# commands in setup.py.in to force the build directory to take place out of source. The install directory is specified here and then\n\n# --install-scripts=bin --install-lib=lib removes any of the platform/distribution specific install directories so we can have a flat\n\n# structure\n",
        "Line" : 67,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Specify the installation directory based on OS\n",
        "Line" : 73,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# The / after lib tells cmake to copy over the _CONTENTS_ of the lib directory\n\n# placing the installed files inside the DESTINATION folder. This copies the\n\n# installed Python package inside the bin directory of Mantid's installation\n",
        "Line" : 75,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# NOTE the lack of slash at the end - this means the _whole_ lib directory will be moved\n",
        "Line" : 81,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# Registers the \"installed\" components with CMake so it will carry them over\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Horrible hack to get mantidqt into the MantidPlot.app bundle too.\n\n# Remove this when MantidPlot is removed!!\n",
        "Line" : 92,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# Registers the \"installed\" components with CMake so it will carry them over\n",
        "Line" : 95,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# install the generated executable - only tested with \"workbench\"\n",
        "Line" : 101,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# On UNIX systems install the workbench executable directly.\n\n# The Windows case is handled with a custom startup script installed in WindowsNSIS\n",
        "Line" : 103,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 14
    },
    "buildconfig/CMake/QScintillaFindImpl.cmake" : {
      "ObjectId" : "0fe76c1afcf02d75a96b2e8eacf35571043f9a89",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Implementation of searching for QScintilla. It contains a function\n\n# parameterized by the major version of Qt to be linked against.\n\n#\n\n# The function creates an imported target prefixed in a similar manner\n\n# to the Qt4/Qt5 targets.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "buildconfig/CMake/QtTargetFunctions.cmake" : {
      "ObjectId" : "e34bce07227836453b981a430c8af0062d047ff3",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Utility functions to add libraries/executables parametrized by\n\n# the required version of Qt\n\n#\n\n# name: mtd_add_qt_library\n\n# brief: create a library target for linked against Qt\n\n# The global ENABLE_MANTIDPLOT option controls if a Qt4 target\n\n# is created.\n\n# The global ENABLE_WORKBENCH option controls if a Qt5 target\n\n# is created.\n\n# To limit the Qt version for a specific library use\n\n# QT_VERSION, e.g.\n\n#\n\n# mtd_add_qt_library ( QT_VERSION 5\n\n#   ...\n\n#   ...\n\n# )\n\n#\n\n# For all options see mtd_add_qt_target\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create targets\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# name: mtd_add_qt_executable\n\n# brief: create a library target for linked against Qt\n\n# The global ENABLE_MANTIDPLOT option controls if a Qt4 target\n\n# is created.\n\n# The global ENABLE_WORKBENCH option controls if a Qt5 target\n\n# is created.\n\n# To limit the Qt version for a specific library use\n\n# QT_VERSION, e.g.\n\n#\n\n# mtd_add_qt_executable ( QT_VERSION 5\n\n#   ...\n\n#   ...\n\n# )\n\n# For all options see mtd_add_qt_target\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Create targets\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Target agnostic function to add either an executable or library linked to Qt\n\n# option: LIBRARY If included define a library target\n\n# option: EXECUTABLE If included define an executable target\n\n# option: NO_SUFFIX If included, no suffix is added to the target name\n\n# option: EXCLUDE_FROM_ALL If included, the target is excluded from target ALL\n\n# keyword: TARGET_NAME The name of the target. The target will have -Qt{QT_VERSION} appended to it.\n\n# keyword: OUTPUT_NAME An optional filename for the library\n\n# keyword: QT_VERSION The major version of Qt to build against\n\n# keyword: SRC .cpp files to include in the target build\n\n# keyword: QT4_SRC .cpp files to include in a Qt4 build\n\n# keyword: QT5_SRC .cpp files to include in a Qt5 build\n\n# keyword: MOC Header files that are to be parsed by moc\n\n# keyword: UI Qt designer ui files that are to be parsed by the UI compiler\n\n# keyword: NOMOC Additional headers that are not to be passed to moc\n\n# keyword: RES Any resource .qrc files\n\n# keyword: DEFS Compiler definitions to set for all targets. Also QTX_DEFS can be used to set per-version targets\n\n# keyword: OUTPUT_DIR_BASE Base directory the build output. The final product goes into a subdirectory based on the Qt version\n\n# keyword: OUTPUT_SUBDIR Additional directory to added to the final output path\n\n# keyword: INCLUDE_DIRS A list of include directories to add to the target\n\n# keyword: SYSTEM_INCLUDE_DIRS A list of include directories to add to the target and marked as system headers\n\n# keyword: PRECOMPILED A name of the precompiled header\n\n# keyword: LINK_LIBS A list of additional libraries to link to the\n\n#          target that are not dependent on Qt\n\n# keyword: QT4_LINK_LIBS A list of additional Qt libraries to link to.\n\n#          QtGui islinked to by default\n\n# keyword: QT5_LINK_LIBS A list of additional Qt libraries to link to.\n\n#          QtWidgets islinked to by default\n\n# keyword: MTD_QT_LINK_LIBS A list of additional libraries to link to the\n\n#          target. It is assumed each was produced with this function and\n\n#          will have the -Qt{QT_VERSION} suffix appended.\n\n# keyword: INSTALL_DIR A destination directory for the install command.\n\n# keyword: INSTALL_DIR_BASE Base directory the build output. The final product goes into a subdirectory based on the Qt version.\n\n# keyword: OSX_INSTALL_RPATH Install path for osx version > 10.8\n\n# keyword: LINUX_INSTALL_RPATH Install path for CMAKE_SYSTEM_NAME == Linux\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# uic needs to run against the correct version of Qt. Keep the generated files in\n\n# a subdirectory of the binary directory labelled by the version\n",
        "Line" : 110,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Workaround Qt compiler detection\n\n# https://forum.qt.io/topic/43778/error-when-initializing-qstringlist-using-initializer-list/3\n\n# https://bugreports.qt.io/browse/QTBUG-39142\n",
        "Line" : 118,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Use a precompiled header where they are supported\n",
        "Line" : 156,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Target properties\n",
        "Line" : 169,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Use public headers to populate the INTERFACE_INCLUDE_DIRECTORIES target property\n",
        "Line" : 183,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Group into folder for VS\n",
        "Line" : 240,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Target encompassing all Qt-based dependencies\n",
        "Line" : 242,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Create an install rule for a Qt target\n\n#  - qt_version The version of Qt targeted\n\n#  - target The name of the target\n\n#  - install_target_type The type of target that should be installed. See https://cmake.org/cmake/help/latest/command/install.html?highlight=install\n\n#  - install_dir A relative directory to install_prefix\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Create test executables\n",
        "Line" : 265,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Create an executable target for running a set of unit tests\n\n# linked to Qt\n\n# keyword: TEST_NAME The name of the test suite. The version of Qt will be appended to it\n\n# keyword: SRC The list of test headers containing the unit test code\n\n# keyword: QT_VERSION The major version of Qt to build against\n\n# keyword: INCLUDE_DIRS A list of include directories to add to the target\n\n# keyword: TEST_HELPER_SRCS A list of test helper files to compile in with the target\n\n# keyword: LINK_LIBS A list of additional libraries to link to the\n\n#          target that are not dependent on Qt\n\n# keyword: QT4_LINK_LIBS A list of additional Qt libraries to link to.\n\n#          QtGui islinked to by default\n\n# keyword: QT5_LINK_LIBS A list of additional Qt libraries to link to.\n\n#          QtWidgets islinked to by default\n\n# keyword: MTD_QT_LINK_LIBS A list of additional libraries to link to the\n\n#          target. It is assumed each was produced with this function and\n\n#          will have the Qt{QT_VERSION} suffix appended.\n\n# keyword: PARENT_DEPENDENCIES Any targets listed here will have this new target\n\n#          as a dependency\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# test generation\n",
        "Line" : 306,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Warning suppression\n",
        "Line" : 313,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# libraries\n",
        "Line" : 316,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Workaround Qt compiler detection\n\n# https://forum.qt.io/topic/43778/error-when-initializing-qstringlist-using-initializer-list/3\n\n# https://bugreports.qt.io/browse/QTBUG-39142\n",
        "Line" : 320,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# client and system headers\n",
        "Line" : 334,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Add dependency to any parents\n",
        "Line" : 342,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# set folder\n",
        "Line" : 347,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Given a list of arguments decide which Qt versions\n\n# should be built. If ENABLE_MANTIPLOT is true the Qt4 is built.\n\n# QT_VERSION can be specified to override this.\n",
        "Line" : 353,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# process argument list\n",
        "Line" : 357,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# default versions\n",
        "Line" : 360,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# Appends a string to the given variable to define the Qt version\n\n# the library is built against.\n\n# version: Version number of the library\n\n# output_variable: The name of an output variable. This will be set\n\n#                 on the parent scope\n\n# option: as_dir If true then treat the inputs as directories at append a subdirectory\n\n# ARGN: A list of strings to process\n",
        "Line" : 376,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Wrap generation of moc files\n\n# We call the qt{4|5}_wrap_cpp individually for each file and force the include\n\n# path to be absolute to avoid relative paths whose length exceed the maximum\n\n# allowed limit on Windows (260 chars). It is assumed that the input paths\n\n# can be made absolute by prefixing them with ${CMAKE_CURRENT_LIST_DIR}\n\n# It assumes that the unnamed arguments are the input files to run through moc\n",
        "Line" : 403,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Pass the output variable out\n",
        "Line" : 429,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# Disables suggest override for versions of Qt < 5.6.2 as\n\n# Q_OBJECT produces them and the cannot be avoided.\n",
        "Line" : 433,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# For Qt < 5.6.2 gcc-5 produces warnings when it encounters the Q_OBJECT\n\n# macro. We disable the warning in this case\n",
        "Line" : 436,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# Homebrew on macOS symlinks Qt4 into /usr/local so that the\n\n# include directories are on the standard paths. When we add\n\n# /usr/local/include using target_include_directories clang sees\n\n# the duplicate but removes them from the end and keeps the paths\n\n# at the front causing cross-talk between Qt4/Qt5 headers.\n\n# This prunes /usr/local/include from an interface includes property\n\n# so they don't get transitively passed to future targets.\n",
        "Line" : 447,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 31
    },
    "buildconfig/CMake/SetMantidSubprojects.cmake" : {
      "ObjectId" : "3070d564a8223bd0d542da3843f6beafb46172f6",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#\n\n# Set information for given Mantid subprojects (can be more than one)\n\n# The form for each subproject should be:\n\n#\n\n#  subdirectory/subproject\n\n#\n\n# EX: Framework/Kernel\n\n#\n\n# This macro calls include_directories for each path and creates the\n\n# MANTID_SUBPROJECT_LIBS variable with the given subproject library names.\n\n#\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "buildconfig/CMake/SetupDataTargets.cmake" : {
      "ObjectId" : "8f8a87e1e291da5828f5d251644c79e9ff5ac23d",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################################\n\n# Define targets to download the data\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# None of our tests reference files directly as arguments so we have to manually\n\n# call ExternalData_Expand_Arguments to register the files with the ExternalData\n\n# mechanism\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Create target to download data from the StandardTestData group.  This must come after\n\n# all tests have been added that reference the group, so we put it last.\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# We'll create two targets:\n\n#  - StandardTestData: data required by the unit tests and documentation tests\n\n#  - SystemTestData: data required for the system tests\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "buildconfig/CMake/SipQtTargetFunctions.cmake" : {
      "ObjectId" : "54cdd3bb6478b39f47d12bcb02d9cd6c8bae376b",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Defines utility functions to help with generating\n\n# targets that produce a Python module from a set\n\n# of .sip definitions\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# brief: Add a module target to generate Python bindings\n\n# for a set of sip sources. The sources list should be a list of filenames\n\n# without a path. The .sip module is generated in the CMAKE_CURRENT_BINARY_DIR\n\n# keyword: MODULE_NAME The name of the final python module (without extension)\n\n# keyword: MODULE_OUTPUT_DIR The final destination of the built module optional\n\n# keyword: SIP_SRCS A list of input .sip file paths\n\n# keyword: HEADER_DEPS A list of header files that are included\n\n#                      in the .sip files. These are set as dependencies on\n\n#                      the target.\n\n# keyword: INCLUDE_DIRS A list of additional target_include_directories\n\n# keyword: LINK_LIBS A list of additional target_link_libraries\n\n# keyword: PYQT_VERSION A single value indicating the version of PyQt\n\n#                       to compile against\n\n# keyword: INSTALL_DIR The target location for installing this library\n\n# keyword: OSX_INSTALL_RPATH Install path for osx version > 10.8\n\n# keyword: LINUX_INSTALL_RPATH Install path for CMAKE_SYSTEM_NAME == Linux\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Create the module spec file from the list of .sip files\n\n# The template file expects the variables to have certain names\n",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Sip cannot %Include absolute paths so make them relative and add\n\n# -I flag\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Add absolute paths for header dependencies\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Run sip code generator\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Set all required properties on the target\n",
        "Line" : 92,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    },
    "buildconfig/CMake/SquishAddTestSuite.cmake" : {
      "ObjectId" : "a6816042e59c2a9deb2b4feaed67233b47da0727",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n#\n\n# This macro will add a list of test suites into the ctest mechanism. The\n\n# ctest name is generated from the name of the\n\n#\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#message( STATUS \"Creating Squish test ${testName}\" )\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "buildconfig/CMake/SquishTestScript.cmake" : {
      "ObjectId" : "b6258ec2c88e4e97c034b64fb8367d15f423eb72",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# This script launches a GUI test suite using Squish.  You should not call\n\n# the script directly; instead, you should access it via the\n\n# SQUISH_ADD_TEST_SUITE macro.\n\n#\n\n# This script starts the Squish server, launches the test suite on the\n\n# client, and finally stops the squish server.  If any of these steps\n\n# fail (including if the tests do not pass) then a fatal error is\n\n# raised.\n\n#\n\n# Based on the SQUISH_ADD_TEST macro\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# parse environment variables\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# run the test\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# check for an error with running the test\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "buildconfig/CMake/TargetFunctions.cmake" : {
      "ObjectId" : "98881263cbe985482136c01ecd37f387a6fcfc22",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "buildconfig/CMake/UiToPy.cmake" : {
      "ObjectId" : "5793bcad87d73117007e96469fb0d6f187914f6d",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################################\n\n# Function to convert ui files into PyQt4 python files\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# From FindPyQt4\n",
        "Line" : 9,
        "CharPositionInLine" : 33
      },
      "2" : {
        "Text" : "# Get the filename\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Generated file to create\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Source file to generate from\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Command to run the translation\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Record all generated files\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Create a custom target\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "buildconfig/CMake/UnityBuild.cmake" : {
      "ObjectId" : "a4a234bf46d6a806997a7c6f2b340b54ecca2894",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - enable_unity_build\n\n# based upon http://cheind.wordpress.com/2009/12/10/reducing-compilation-time-unity-builds/ example. Expanded to allow the user to specify the maximum number of cpp files in each unity build file. Script then handles generation of n unity build files.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#limit is zero based conversion of unit_size\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#counts the number of cpp files up to the threshold\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#Have one or more unity build files\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Open the ub file\n",
        "Line" : 18,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Keep running record of all unity build files\n",
        "Line" : 20,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# Increment the unity build file count\n",
        "Line" : 22,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# Reset the cpp file counter\n",
        "Line" : 24,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "#keep counting up to the threshold. increment counter.\n",
        "Line" : 27,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#Effectivly ignore the cpp files from the build.\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 10
    },
    "buildconfig/CMake/VersionNumber.cmake" : {
      "ObjectId" : "090969e899e225374e8b6672d18ee50920e6e566",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set the version number here for MantidVersion and the package filenames\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# UNCOMMENT the next 'set' line to 'force' the patch version number to\n\n# a value (instead of using the count coming out of 'git describe')\n\n# DO NOT COMMIT THIS TO MASTER UNCOMMENTED, ONLY TO A RELEASE BRANCH\n\n#set ( VERSION_PATCH 0 )\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "buildconfig/CMake/WindowsNSIS.cmake" : {
      "ObjectId" : "d541ee38ff06ffaa4c51938b76f3da5eeb1b97f7",
      "LastModified" : "2019-04-11T15:59:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################################\n\n# CPack configuration for Windows using NSIS\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###########################################################################\n\n# General settings\n\n###########################################################################\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Choose the proper suffix for the build.\n\n# if the string is not empty, capitalise the first letter\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# change the icon if this is not a release build - the icons have _<suffix> appended, e.g. _nightly and _unstable\n\n# this is done before the capitalisation of the first letter\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# get only first letter\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# capitalize the first letter in place\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# store the rest of the string (without the first letter that is being capitalized)\n",
        "Line" : 32,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# concatenate the capitalized letter and the rest of the suffix\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# if the string is empty, it is the release suffix, which should be empty\n",
        "Line" : 37,
        "CharPositionInLine" : 3
      },
      "9" : {
        "Text" : "# note: the PACKAGE icon uses PNG, the other two use ICO\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# have the properly capitalsed name for the start menu and install folder\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "###########################################################################\n\n# Deployment type - currently only works for Release!\n\n###########################################################################\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "###########################################################################\n\n# External dependency DLLs\n\n###########################################################################\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "###########################################################################\n\n# Startup files\n\n###########################################################################\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# On Windows we don't use the setuptools install executable at the moment, because it is\n\n# generated with a hard coded path to the build Python, that fails to run on\n\n# other machines, or if the build Python is moved. Instead we have a Python script to\n\n# run the workbench ourselves and a PowerShell wrapper to run it with the\n\n# correct Python from Mantid's installation directory\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Name of the workbench executable without any extensions\n",
        "Line" : 140,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Add the extensions for the executable after it is generated in the build directory\n",
        "Line" : 147,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Generate an executable from the PowerShell script\n",
        "Line" : 149,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# If the EXE generation failed then display an error and stop the CMAKE generation\n",
        "Line" : 152,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# If the EXE generation succeeded then install the executable and rename it to remove the .install suffix\n\n# the shortcuts for the workbench are ONLY installed if this variable has been declared\n",
        "Line" : 158,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "###########################################################################\n\n# Icons for shortcuts\n\n###########################################################################\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "###########################################################################\n\n# Extra NSIS commands for shortcuts, start menu items etc\n\n# Three backward slashes are required to escape a character to get the\n\n# character through to NSIS.\n\n###########################################################################\n\n# On install. The blank lines seem to be required or it doesn't create the shortcut\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# The blank lines seem to be required or it doesn't create the shortcut\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# On uninstall reverse stages listed above.\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# if the workbench is being packaged we want to add the shortcut commands for the installation\n\n# this is done via appending the relevant commands to the already declared variables\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "buildconfig/CMake/WindowsNSISQt4.cmake" : {
      "ObjectId" : "63c9841143e0409f8f7aa64709f15e9fbc336590",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################################\n\n# Qt Plugins + qt.conf file\n\n###########################################################################\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "buildconfig/CMake/WindowsNSISQt5.cmake" : {
      "ObjectId" : "cf7f39395795de8163c96ab56cab0525006aafc9",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################################\n\n# Qt 5 DLLs\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###########################################################################\n\n# Qt Plugins\n\n###########################################################################\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "buildconfig/CMake/conda.cmake" : {
      "ObjectId" : "25d5df0375c06885400a6e5da58693b00db06051",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "buildconfig/CMake/hdf5-config.cmake" : {
      "ObjectId" : "cbe789b8d6e6dfde5b0bd9acefe2560c9c62f914",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# HDF5 Config file for compiling against hdf5 build directory\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# User Options\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Directories\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#SET (HDF5_INCLUDE_DIR_TOOLS ${HDF5_INCLUDE_DIRS} )\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Version Strings\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Don't include targets if this file is being picked up by another\n\n# project which has already build hdf5 as a subproject\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "buildconfig/CMake/hdf5-targets-mac.cmake" : {
      "ObjectId" : "cf311e07261012e8d48bdcc497794235904a3e0c",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Generated by CMake 2.8.8\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#----------------------------------------------------------------\n\n# Generated CMake target import file.\n\n#----------------------------------------------------------------\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# MESSAGE (STATUS \"CMAKE_LIBRARY_PATH: ${CMAKE_LIBRARY_PATH}\")\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Commands may need to know the format version.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Create imported target hdf5\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Create imported target hdf5_cpp\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Create imported target hdf5_tools\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Create imported target hdf5_hl\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Create imported target hdf5_hl_cpp\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Import target \"hdf5\" for configuration \"\"\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Import target \"hdf5_cpp\" for configuration \"\"\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Import target \"hdf5_tools\" for configuration \"\"\n\n#SET_PROPERTY(TARGET hdf5_tools APPEND PROPERTY IMPORTED_CONFIGURATIONS NOCONFIG)\n\n#SET_TARGET_PROPERTIES(hdf5_tools PROPERTIES\n\n#  IMPORTED_LINK_INTERFACE_LIBRARIES_NOCONFIG \"hdf5\"\n\n#  IMPORTED_LOCATION_NOCONFIG \"${CMAKE_LIBRARY_PATH}/libhdf5_tools.1.8.9.dylib\"\n\n#  IMPORTED_SONAME_NOCONFIG \"libhdf5_tools.7.3.0.dylib\"\n\n#  )\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Import target \"hdf5_hl\" for configuration \"\"\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Import target \"hdf5_hl_cpp\" for configuration \"\"\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Commands beyond this point should not need to know the version.\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "buildconfig/CMake/hdf5-targets-windows.cmake" : {
      "ObjectId" : "ae40a1d17e0d05502f2a264beecc01edf17878af",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Generated by CMake 2.8.8\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#----------------------------------------------------------------\n\n# Generated CMake target import file.\n\n#----------------------------------------------------------------\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Commands may need to know the format version.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Create imported target hdf5\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Create imported target hdf5_cpp\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Create imported target hdf5_hl\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Create imported target hdf5_hl_cpp\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Import target \"hdf5\" for configuration \"Debug\"\n\n# SET_PROPERTY(TARGET hdf5 APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)\n\n# SET_TARGET_PROPERTIES(hdf5 PROPERTIES\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# IMPORTED_IMPLIB_DEBUG \"${CMAKE_LIBRARY_PATH}/hdf5ddll.lib\"\n\n# IMPORTED_LINK_INTERFACE_LIBRARIES_DEBUG \"kernel32;ws2_32;wsock32\"\n\n# IMPORTED_LOCATION_DEBUG \"${CMAKE_LIBRARY_PATH}/hdf5ddll.dll\"\n\n# )\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Import target \"hdf5_cpp\" for configuration \"Debug\"\n\n# SET_PROPERTY(TARGET hdf5_cpp APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)\n\n# SET_TARGET_PROPERTIES(hdf5_cpp PROPERTIES\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# IMPORTED_IMPLIB_DEBUG \"${CMAKE_LIBRARY_PATH}/hdf5_cppddll.lib\"\n\n# IMPORTED_LINK_INTERFACE_LIBRARIES_DEBUG \"hdf5\"\n\n# IMPORTED_LOCATION_DEBUG \"${CMAKE_LIBRARY_PATH}/hdf5_cppddll.dll\"\n\n# )\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Import target \"hdf5_tools\" for configuration \"Debug\"\n\n# SET_PROPERTY(TARGET hdf5_tools APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)\n\n# SET_TARGET_PROPERTIES(hdf5_tools PROPERTIES\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# IMPORTED_IMPLIB_DEBUG \"${CMAKE_LIBRARY_PATH}/hdf5_toolsddll.lib\"\n\n# IMPORTED_LINK_INTERFACE_LIBRARIES_DEBUG \"hdf5\"\n\n# IMPORTED_LOCATION_DEBUG \"${CMAKE_LIBRARY_PATH}/hdf5_toolsddll.dll\"\n\n# )\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Import target \"hdf5_hl\" for configuration \"Debug\"\n\n# SET_PROPERTY(TARGET hdf5_hl APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)\n\n# SET_TARGET_PROPERTIES(hdf5_hl PROPERTIES\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# IMPORTED_IMPLIB_DEBUG \"${CMAKE_LIBRARY_PATH}/hdf5_hlddll.lib\"\n\n# IMPORTED_LINK_INTERFACE_LIBRARIES_DEBUG \"hdf5\"\n\n# IMPORTED_LOCATION_DEBUG \"${CMAKE_LIBRARY_PATH}/hdf5_hlddll.dll\"\n\n# )\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Import target \"hdf5_hl_cpp\" for configuration \"Debug\"\n\n# SET_PROPERTY(TARGET hdf5_hl_cpp APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)\n\n# SET_TARGET_PROPERTIES(hdf5_hl_cpp PROPERTIES\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# IMPORTED_IMPLIB_DEBUG \"${CMAKE_LIBRARY_PATH}/hdf5_hl_cppddll.lib\"\n\n# IMPORTED_LINK_INTERFACE_LIBRARIES_DEBUG \"hdf5_hl;hdf5\"\n\n# IMPORTED_LOCATION_DEBUG \"${CMAKE_LIBRARY_PATH}/hdf5_hl_cppddll.dll\"\n\n# )\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Import target \"hdf5\" for configuration \"Release\"\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Import target \"hdf5_cpp\" for configuration \"Release\"\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Import target \"hdf5_hl\" for configuration \"Release\"\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Import target \"hdf5_hl_cpp\" for configuration \"Release\"\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Import target \"hdf5\" for configuration \"MinSizeRel\"\n\n# SET_PROPERTY(TARGET hdf5 APPEND PROPERTY IMPORTED_CONFIGURATIONS MINSIZEREL)\n\n# SET_TARGET_PROPERTIES(hdf5 PROPERTIES\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# IMPORTED_IMPLIB_MINSIZEREL \"${CMAKE_LIBRARY_PATH}/hdf5dll.lib\"\n\n# IMPORTED_LINK_INTERFACE_LIBRARIES_MINSIZEREL \"kernel32;ws2_32;wsock32\"\n\n# IMPORTED_LOCATION_MINSIZEREL \"${CMAKE_LIBRARY_PATH}/hdf5dll.dll\"\n\n# )\n",
        "Line" : 102,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Import target \"hdf5_cpp\" for configuration \"MinSizeRel\"\n\n# SET_PROPERTY(TARGET hdf5_cpp APPEND PROPERTY IMPORTED_CONFIGURATIONS MINSIZEREL)\n\n# SET_TARGET_PROPERTIES(hdf5_cpp PROPERTIES\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# IMPORTED_IMPLIB_MINSIZEREL \"${CMAKE_LIBRARY_PATH}/hdf5_cppdll.lib\"\n\n# IMPORTED_LINK_INTERFACE_LIBRARIES_MINSIZEREL \"hdf5\"\n\n# IMPORTED_LOCATION_MINSIZEREL \"${CMAKE_LIBRARY_PATH}/hdf5_cppdll.dll\"\n\n# )\n",
        "Line" : 110,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Import target \"hdf5_tools\" for configuration \"MinSizeRel\"\n\n# SET_PROPERTY(TARGET hdf5_tools APPEND PROPERTY IMPORTED_CONFIGURATIONS MINSIZEREL)\n\n# SET_TARGET_PROPERTIES(hdf5_tools PROPERTIES\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# IMPORTED_IMPLIB_MINSIZEREL \"${CMAKE_LIBRARY_PATH}/hdf5_toolsdll.lib\"\n\n# IMPORTED_LINK_INTERFACE_LIBRARIES_MINSIZEREL \"hdf5\"\n\n# IMPORTED_LOCATION_MINSIZEREL \"${CMAKE_LIBRARY_PATH}/hdf5_toolsdll.dll\"\n\n# )\n",
        "Line" : 118,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Import target \"hdf5_hl\" for configuration \"MinSizeRel\"\n\n# SET_PROPERTY(TARGET hdf5_hl APPEND PROPERTY IMPORTED_CONFIGURATIONS MINSIZEREL)\n\n# SET_TARGET_PROPERTIES(hdf5_hl PROPERTIES\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# IMPORTED_IMPLIB_MINSIZEREL \"${CMAKE_LIBRARY_PATH}/hdf5_hldll.lib\"\n\n# IMPORTED_LINK_INTERFACE_LIBRARIES_MINSIZEREL \"hdf5\"\n\n# IMPORTED_LOCATION_MINSIZEREL \"${CMAKE_LIBRARY_PATH}/hdf5_hldll.dll\"\n\n# )\n",
        "Line" : 126,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# Import target \"hdf5_hl_cpp\" for configuration \"MinSizeRel\"\n\n# SET_PROPERTY(TARGET hdf5_hl_cpp APPEND PROPERTY IMPORTED_CONFIGURATIONS MINSIZEREL)\n\n# SET_TARGET_PROPERTIES(hdf5_hl_cpp PROPERTIES\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# IMPORTED_IMPLIB_MINSIZEREL \"${CMAKE_LIBRARY_PATH}/hdf5_hl_cppdll.lib\"\n\n# IMPORTED_LINK_INTERFACE_LIBRARIES_MINSIZEREL \"hdf5_hl;hdf5\"\n\n# IMPORTED_LOCATION_MINSIZEREL \"${CMAKE_LIBRARY_PATH}/hdf5_hl_cppdll.dll\"\n\n# )\n",
        "Line" : 134,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# Import target \"hdf5\" for configuration \"RelWithDebInfo\"\n\n# SET_PROPERTY(TARGET hdf5 APPEND PROPERTY IMPORTED_CONFIGURATIONS RELWITHDEBINFO)\n\n# SET_TARGET_PROPERTIES(hdf5 PROPERTIES\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# IMPORTED_IMPLIB_RELWITHDEBINFO \"${CMAKE_LIBRARY_PATH}/hdf5dll.lib\"\n\n# IMPORTED_LINK_INTERFACE_LIBRARIES_RELWITHDEBINFO \"kernel32;ws2_32;wsock32\"\n\n# IMPORTED_LOCATION_RELWITHDEBINFO \"${CMAKE_LIBRARY_PATH}/hdf5dll.dll\"\n\n# )\n",
        "Line" : 142,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# Import target \"hdf5_cpp\" for configuration \"RelWithDebInfo\"\n\n# SET_PROPERTY(TARGET hdf5_cpp APPEND PROPERTY IMPORTED_CONFIGURATIONS RELWITHDEBINFO)\n\n# SET_TARGET_PROPERTIES(hdf5_cpp PROPERTIES\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# IMPORTED_IMPLIB_RELWITHDEBINFO \"${CMAKE_LIBRARY_PATH}/hdf5_cppdll.lib\"\n\n# IMPORTED_LINK_INTERFACE_LIBRARIES_RELWITHDEBINFO \"hdf5\"\n\n# IMPORTED_LOCATION_RELWITHDEBINFO \"${CMAKE_LIBRARY_PATH}/hdf5_cppdll.dll\"\n\n# )\n",
        "Line" : 150,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# Import target \"hdf5_tools\" for configuration \"RelWithDebInfo\"\n\n# SET_PROPERTY(TARGET hdf5_tools APPEND PROPERTY IMPORTED_CONFIGURATIONS RELWITHDEBINFO)\n\n# SET_TARGET_PROPERTIES(hdf5_tools PROPERTIES\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# IMPORTED_IMPLIB_RELWITHDEBINFO \"${CMAKE_LIBRARY_PATH}/hdf5_toolsdll.lib\"\n\n# IMPORTED_LINK_INTERFACE_LIBRARIES_RELWITHDEBINFO \"hdf5\"\n\n# IMPORTED_LOCATION_RELWITHDEBINFO \"${CMAKE_LIBRARY_PATH}/hdf5_toolsdll.dll\"\n\n# )\n",
        "Line" : 158,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "#Import target \"hdf5_hl\" for configuration \"RelWithDebInfo\"\n\n# SET_PROPERTY(TARGET hdf5_hl APPEND PROPERTY IMPORTED_CONFIGURATIONS RELWITHDEBINFO)\n\n# SET_TARGET_PROPERTIES(hdf5_hl PROPERTIES\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# IMPORTED_IMPLIB_RELWITHDEBINFO \"${CMAKE_LIBRARY_PATH}/hdf5_hldll.lib\"\n\n# IMPORTED_LINK_INTERFACE_LIBRARIES_RELWITHDEBINFO \"hdf5\"\n\n# IMPORTED_LOCATION_RELWITHDEBINFO \"${CMAKE_LIBRARY_PATH}/hdf5_hldll.dll\"\n\n# )\n",
        "Line" : 166,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "# Import target \"hdf5_hl_cpp\" for configuration \"RelWithDebInfo\"\n\n# SET_PROPERTY(TARGET hdf5_hl_cpp APPEND PROPERTY IMPORTED_CONFIGURATIONS RELWITHDEBINFO)\n\n# SET_TARGET_PROPERTIES(hdf5_hl_cpp PROPERTIES\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# IMPORTED_IMPLIB_RELWITHDEBINFO \"${CMAKE_LIBRARY_PATH}/hdf5_hl_cppdll.lib\"\n\n# IMPORTED_LINK_INTERFACE_LIBRARIES_RELWITHDEBINFO \"hdf5_hl;hdf5\"\n\n# IMPORTED_LOCATION_RELWITHDEBINFO \"${CMAKE_LIBRARY_PATH}/hdf5_hl_cppdll.dll\"\n\n# )\n",
        "Line" : 174,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# Commands beyond this point should not need to know the version.\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 42
    },
    "dev-docs/CMakeLists.txt" : {
      "ObjectId" : "9c21f14ea21e7fe240e01eb0a17b67e3da0ab5f0",
      "LastModified" : "2019-04-11T15:59:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Developer documentation\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# targets\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We try to execute Sphinx directly through python -m to avoid problems with the\n\n# startup scripts on Windows. They are not always reliable as they can have\n\n# hardcoded paths in them. However, older versions of Sphinx dont't allow python\n\n# -m execution. Assume we are running on Linux and `sphinx-build` is available\n\n# in these cases\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Group within VS and exclude from whole build\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "docs/CMakeLists.txt" : {
      "ObjectId" : "da97a67145461be74f04d134e038b4d21b7e30ab",
      "LastModified" : "2019-04-11T15:59:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Sphinx documentation\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We generate a target per build type, i.e docs-html\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# targets\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# runner\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# qthelp target\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Group within VS and exclude from whole build\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# HTML target\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Group within VS and exclude from whole build\n",
        "Line" : 74,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# EPUB target\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Group within VS and exclude from whole build\n",
        "Line" : 96,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# LINKCHECK target\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Group within VS and exclude from whole build\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Tests (It would be nice to have this is a test sub directory but the\n\n#        configure of the runsphinx file doesn't like being in two directories.\n\n#        Ninja complains about multiple targets creating runsphinx.py.in)\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Overall doctest target that executes in MantidPlot\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Group within VS and exclude from whole build\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Installation settings\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Allow control over whether the documentation is packaged\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# must \"make docs-qthelp\" before \"make package\" otherwise there will be a\n\n# build failure\n",
        "Line" : 161,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 18
    },
    "qt/CMakeLists.txt" : {
      "ObjectId" : "13409b639438beb69e934e1478f139e33b1443a8",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Utilities for defining targets\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Resource compiler for PyQt5\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Newer versions of PyQt5 have a pyrcc_main python module, whereas older\n\n# versions have a pyrcc5 executable. We prefer calling the python module.\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "###########################################################################\n\n# Qt-based targets\n\n###########################################################################\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "qt/applications/CMakeLists.txt" : {
      "ObjectId" : "7f8e777e577c7cfd2a605fab4c8da4e77f93ad5a",
      "LastModified" : "2019-04-11T15:59:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "qt/applications/workbench/CMakeLists.txt" : {
      "ObjectId" : "24da9f17a9d6fedd8959dc96f27e536fcba2e44f",
      "LastModified" : "2019-04-11T15:59:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create egg link to binary output directory\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configure resources data in place for ease of development. The output file is\n\n# added to the toplevel gitignore\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Dependency chain\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ctest targets\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Install MantidWorkbench for OSX\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "qt/paraview_ext/CMakeLists.txt" : {
      "ObjectId" : "f32a58e9ac627faa95cc05bdea6c46419bf1d304",
      "LastModified" : "2019-04-11T15:59:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the project name\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Select either building Paraview plugins\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Paraview dependencies built if Paraview is found\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Workaround Qt compiler detection \n\n# https://forum.qt.io/topic/43778/error-when-initializing-qstringlist-using-initializer-list/3\n\n# https://bugreports.qt.io/browse/QTBUG-39142 \n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# This is only required for Qt4\n",
        "Line" : 18,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 5
    },
    "qt/paraview_ext/PVPlugins/CMakeLists.txt" : {
      "ObjectId" : "3faf0438c88dbe220ac101e3fc2b006a6abf51d5",
      "LastModified" : "2019-04-11T15:59:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# bring in Mantid/VATES API dependencies\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# vtktypemacro doesn't play nicely with -Wpedantic\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# NonOrthogonalSourcePlugin is necessary for viewing materials with\n\n# nonorthogonal basis vectors. Added as a dependency to\n\n# MantidParaViewMDEWSourceSMPlugin (chosen arbitrarily)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add_custom_command doesn't support generator expressions for the OUTPUT\n\n# argument\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# add_custom_command doesn't support generator expressions for the OUTPUT\n\n# argument\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# assume ParaView was built with Makefile or Ninja generator.\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# make_package.rb handles this for OSX\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    },
    "qt/paraview_ext/PVPlugins/Filters/CMakeLists.txt" : {
      "ObjectId" : "540dbac8aea6ea4283dd9ab9fd2125b4f6a0fd54",
      "LastModified" : "2019-04-11T15:59:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "qt/paraview_ext/PVPlugins/Filters/PeaksFilter/CMakeLists.txt" : {
      "ObjectId" : "feb6a060c2493b7d6da7fd347d19fced8a72e7f7",
      "LastModified" : "2019-04-11T15:59:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "qt/paraview_ext/PVPlugins/Filters/ScaleWorkspace/CMakeLists.txt" : {
      "ObjectId" : "6ceed63b7655714f390c4751250d62f84c48c268",
      "LastModified" : "2019-04-11T15:59:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "qt/paraview_ext/PVPlugins/Filters/SplatterPlot/CMakeLists.txt" : {
      "ObjectId" : "05dc47f603a7c0bd15e152cb27fb1ccb4e365ae6",
      "LastModified" : "2019-04-11T15:59:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "qt/paraview_ext/PVPlugins/Readers/CMakeLists.txt" : {
      "ObjectId" : "56dcca28a016a0f97a5fbbcfdee72a4684f419f6",
      "LastModified" : "2019-04-11T15:59:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "qt/paraview_ext/PVPlugins/Readers/MDEWNexusReader/CMakeLists.txt" : {
      "ObjectId" : "35573cb84f871038453ce81e8300c86daf72cd75",
      "LastModified" : "2019-04-11T15:59:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "qt/paraview_ext/PVPlugins/Readers/MDHWNexusReader/CMakeLists.txt" : {
      "ObjectId" : "f5873a122469a5018188f4fd69d3e8f63c513a28",
      "LastModified" : "2019-04-11T15:59:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "qt/paraview_ext/PVPlugins/Readers/NexusPeaksReader/CMakeLists.txt" : {
      "ObjectId" : "e3e61b918cd168e988a69a3201c22983f3e7e0de",
      "LastModified" : "2019-04-11T15:59:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "qt/paraview_ext/PVPlugins/Readers/PeaksReader/CMakeLists.txt" : {
      "ObjectId" : "63d91a8a880d08aadd94939fc6e68bf3c4fc8742",
      "LastModified" : "2019-04-11T15:59:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add to the 'VatesParaViewPlugins' group in VS\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "qt/paraview_ext/PVPlugins/Representations/CMakeLists.txt" : {
      "ObjectId" : "5e03c08c36ffee5e0c379e6ea687f93462b5dda4",
      "LastModified" : "2019-04-11T15:59:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "qt/paraview_ext/PVPlugins/Sources/CMakeLists.txt" : {
      "ObjectId" : "7899c94cd60665d0d24173e382e43acb198c0a72",
      "LastModified" : "2019-04-11T15:59:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "qt/paraview_ext/PVPlugins/Sources/MDEWSource/CMakeLists.txt" : {
      "ObjectId" : "d0d921a21d09f35bee1bdec14008086b6fdb1c42",
      "LastModified" : "2019-04-11T15:59:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "qt/paraview_ext/PVPlugins/Sources/MDHWSource/CMakeLists.txt" : {
      "ObjectId" : "da05b09f217e9a00fae43d28e4607387b8a9e2ff",
      "LastModified" : "2019-04-11T15:59:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "qt/paraview_ext/PVPlugins/Sources/PeaksSource/CMakeLists.txt" : {
      "ObjectId" : "49f4423e2fdff7a61179ca2a77354e60e016930e",
      "LastModified" : "2019-04-11T15:59:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "qt/paraview_ext/PVPlugins/Sources/SinglePeakMarkerSource/CMakeLists.txt" : {
      "ObjectId" : "b8f8448df5ddec4ab931e5c93de424358f31caf7",
      "LastModified" : "2019-04-11T15:59:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "qt/paraview_ext/VatesAPI/CMakeLists.txt" : {
      "ObjectId" : "f180fba3dd52c6843e76c6a5469871ed150e29e0",
      "LastModified" : "2019-04-11T15:59:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is mainly here so you don't get a complaint when running cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For Windows:\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use a precompiled header where they are supported\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add the target for this directory\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set the name of the generated library\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add to the 'Framework' group in VS\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# To simplify developer builds from the IDE we copy the ParaView DLLs to the\n\n# appropriate buildbinary folder. This avoids have to set the PATH to point to\n\n# a different ParaView build directory for each configuration\n",
        "Line" : 203,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Create test file projects\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add to the 'UnitTests' group in VS\n",
        "Line" : 269,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "qt/paraview_ext/VatesAlgorithms/CMakeLists.txt" : {
      "ObjectId" : "6878f0077e29279bdec632d1eb5ab1940c5891ee",
      "LastModified" : "2019-04-11T15:59:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is mainly here so you don't get a complaint when running cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For Windows:\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add the target for this directory\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# target properties\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Create test file projects\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add to the 'UnitTests' group in VS\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "qt/paraview_ext/VatesSimpleGui/CMakeLists.txt" : {
      "ObjectId" : "1f2a8290f2130e18987e9f9d92e9830bb14d317b",
      "LastModified" : "2019-04-11T15:59:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "qt/paraview_ext/VatesSimpleGui/QtWidgets/CMakeLists.txt" : {
      "ObjectId" : "074de0ca310e4009dcdfc323bfabf82b2c07167e",
      "LastModified" : "2019-04-11T15:59:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# These are the C++ files to be compiled.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the name of the generated library\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add to the 'VatesSimpleGui' group in VS\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "qt/paraview_ext/VatesSimpleGui/ViewWidgets/CMakeLists.txt" : {
      "ObjectId" : "7bfcd02b630762a70f10385ba2b4d98bbcebb72d",
      "LastModified" : "2019-04-11T15:59:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# These are the C++ files to be compiled.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# These are the headers to be preprocessed using Qt's moc preprocessor.\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# These are the ui files to be processed using Qt's ui file processor.\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add the QtWidgets icons\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set the name of the generated library\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add to the 'VatesSimpleGui' group in VS\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Need to set the AUT first\n",
        "Line" : 145,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Need to set environmental variables next\n",
        "Line" : 149,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "qt/python/CMakeLists.txt" : {
      "ObjectId" : "0e6f1ca63faf195427e899e38a30cacfbefdead0",
      "LastModified" : "2019-04-11T15:59:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file manages building/installation of the mantidqt and mantidqtpython\n\n# Python wrappers.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Legacy wrappers for MantidPlot\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# mantidqt\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The default value is just an empty string - this prevents a Python syntax\n\n# error when not on Windows Configure utils.qt.plugins file for build. It is\n\n# placed in the source directory and added to the .gitignore for simplicity.\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Note: single quotes are added here to make this a Python string\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Configure the file necessary for DEVELOPMENT builds to run and detect Qt's\n\n# plugins\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Configure resources data in place for ease of development. The output file\n\n# is added to the toplevel gitignore\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Now add any compiled sip targets\n",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Setup dependency chain\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Debug builds need libraries that are linked with MSVC debug runtime\n",
        "Line" : 51,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Testing\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# ctest targets\n",
        "Line" : 63,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# ctest target for widgets that only get tested in qt5, because they are only\n\n# used in the workbench\n",
        "Line" : 109,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Tests\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 14
    },
    "qt/python/mantidqt/CMakeLists.txt" : {
      "ObjectId" : "aabb159ad2f3b72e2017293648bce38d7ab5d41a",
      "LastModified" : "2019-04-11T15:59:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Wrapper module linked against Qt4\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Wrapper module linked against Qt5\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "qt/python/mantidqt/widgets/instrumentview/CMakeLists.txt" : {
      "ObjectId" : "e1bbd66e2c2aacafddfa7d9c85c721c4239283a6",
      "LastModified" : "2019-04-11T15:59:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Defines a Python wrapper module for instrument view access This wraps the low-\n\n# level classes.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The wrapper is only defined for Qt5 and does not support legacy Qt4 mode\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "qt/python/mantidqtpython/CMakeLists.txt" : {
      "ObjectId" : "ca1c9d89ed8485d4bab383cef3345cb40e56e4c7",
      "LastModified" : "2019-04-15T12:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Python bindings for legacy mantidqtpython library This is a Qt4-only module\n\n# and serves to support MantidPlot alone.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Windows: Python library name needs to end in .pyd for Windows Debug python\n\n# library expects imported module names to end in _d For a debug build copy\n\n# the special PyQt4 debug build to the bin directory\n",
        "Line" : 119,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Installation settings\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "qt/scientific_interfaces/CMakeLists.txt" : {
      "ObjectId" : "bf24f52fec668c8bbc187f113b405fe7db0d0865",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Ugly hack to get around issue in Boost version 1.48.0\n\n# in conjunction with Qt 4.7.4 or greater\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###########################################################################\n\n# Now add the packages one-by-one, building up the dependencies as we go\n\n###########################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###########################################################################\n\n# Testing\n\n#  - These should be split out by library\n\n###########################################################################\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "qt/scientific_interfaces/DynamicPDF/CMakeLists.txt" : {
      "ObjectId" : "b66aa17016bdad998be46e7b24ee21b1e76405a2",
      "LastModified" : "2019-04-15T12:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Include files aren't required, but this makes them appear in Visual Studio\n\n# IMPORTANT: Include files are required in the MOC_FILES set. Scroll down to find it.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "qt/scientific_interfaces/EnggDiffraction/CMakeLists.txt" : {
      "ObjectId" : "39ba2c283bcc7b70ab5a61fbddd053990bd46603",
      "LastModified" : "2019-04-15T12:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Include files aren't required, but this makes them appear in Visual Studio\n\n# IMPORTANT: Include files are required in the MOC_FILES set. Scroll down to find it.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "qt/scientific_interfaces/General/CMakeLists.txt" : {
      "ObjectId" : "d32b2612a6e0bdfcf550fe6e0311589b1ffa2e35",
      "LastModified" : "2019-04-15T12:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Include files aren't required, but this makes them appear in Visual Studio\n\n# IMPORTANT: Include files are required in the MOC_FILES set. Scroll down to find it.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "qt/scientific_interfaces/ISISReflectometry/CMakeLists.txt" : {
      "ObjectId" : "038bee5cc80a22305654aca58f9f19ceab67d0db",
      "LastModified" : "2019-04-15T12:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Include files aren't required, but this makes them appear in Visual Studio\n\n# IMPORTANT: Include files are required in the MOC_FILES set. Scroll down to find it.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "qt/scientific_interfaces/ISISSANS/CMakeLists.txt" : {
      "ObjectId" : "a8642d5c3d85f1a6ad98e16a42374b724f92aa38",
      "LastModified" : "2019-04-15T12:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Include files aren't required, but this makes them appear in Visual Studio\n\n# IMPORTANT: Include files are required in the MOC_FILES set. Scroll down to find it.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "qt/scientific_interfaces/Indirect/CMakeLists.txt" : {
      "ObjectId" : "bd3b7b35ce1f4e18e490b2febc892a387a95d9c6",
      "LastModified" : "2019-04-15T12:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Include files aren't required, but this makes them appear in Visual Studio\n\n# IMPORTANT: Include files are required in the MOC_FILES set. Scroll down to find it.\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Testing target\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "qt/scientific_interfaces/Indirect/test/CMakeLists.txt" : {
      "ObjectId" : "5a9215e41d99ae3a64fcb5be8696c3a7ce8a70d4",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################################\n\n# Testing\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "qt/scientific_interfaces/MultiDatasetFit/CMakeLists.txt" : {
      "ObjectId" : "a2e0489308c5258b7814d1e50cbee179036f632c",
      "LastModified" : "2019-04-15T12:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Include files aren't required, but this makes them appear in Visual Studio\n\n# IMPORTANT: Include files are required in the MOC_FILES set. Scroll down to find it.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "qt/scientific_interfaces/Muon/CMakeLists.txt" : {
      "ObjectId" : "669f63374ab97a4a0d9b74a33373fc0d278e0bb2",
      "LastModified" : "2019-04-15T12:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Include files aren't required, but this makes them appear in Visual Studio\n\n# IMPORTANT: Include files are required in the MOC_FILES set. Scroll down to find it.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "qt/widgets/CMakeLists.txt" : {
      "ObjectId" : "24c152049e7130a52febac3623747fe2dd3aae3b",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################################\n\n# Now add the packages one-by-one, building up the dependencies as we go\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "qt/widgets/common/CMakeLists.txt" : {
      "ObjectId" : "b4f81669faf86e84993c8e1848ab8c7844c86970",
      "LastModified" : "2019-04-15T12:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# todo: move this to the instrument view library when the slice\n\n# viewer library is removed\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Include files aren't required, but this makes them appear in Visual Studio\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Include files aren't required, but this makes them appear in Visual Studio\n",
        "Line" : 528,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Temporary workaround to remove stale ui_* header files after they\n\n# were moved to a separate library. They cause build problems if they're not\n\n# deleted\n",
        "Line" : 699,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Python unit tests\n",
        "Line" : 712,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "###########################################################################\n\n# Target\n\n###########################################################################\n",
        "Line" : 728,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Additional components for this module\n",
        "Line" : 732,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Prefer WebEngineWidgets over WebkitWidgets\n",
        "Line" : 735,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "###########################################################################\n\n# Testing\n\n###########################################################################\n",
        "Line" : 817,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "###########################################################################\n\n# Windows: Generate a qt.conf file so that the dev build finds the qt\n\n# plugins in third party. Done in two steps to get it into the build\n\n# directory that is selected at build time.\n\n# This file is NOT packaged. See installers/WinInstaller for the package\n\n# version.\n\n###########################################################################\n",
        "Line" : 918,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "qt/widgets/common/inc/MantidQtWidgets/Common/QtPropertyBrowser/CMakeLists.txt" : {
      "ObjectId" : "dc988a282d6666dd20ec4b5f10554232c70837ad",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Pinched the bulk of this file from:\n\n# http://bugreports.qt.nokia.com/browse/QTSOLBUG-80\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We check for Qt in the directory above this, but having this here\n\n# allows building as a stand-alone project\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add the sources\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# moc'd files will end up in build directory, so add to include path\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Need to use a string of calls to the qt4_generate_moc macro\n\n# instead of qt4_wrap_cpp because the latter produces files with\n\n# a cxx suffix when QtPropertyBrowser requires cpp\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# This is, for the most part, not our code so disable an Intel compiler\n\n# warning that crops up a lot in this package\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Also make sure the equivalent gcc warning is turned off\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# And one other one as well that GCC 4.6 complains about\n",
        "Line" : 163,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "###########################################################################\n\n# Installation settings\n\n###########################################################################\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "qt/widgets/common/inc/MantidQtWidgets/Common/QtPropertyBrowser/qtpropertybrowser.pri" : {
      "ObjectId" : "6a6050c75a122997d2b3e6ef770fb6f4ea5c01d7",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "qt/widgets/factory/CMakeLists.txt" : {
      "ObjectId" : "f5df842bd8a67a6c97beed2ff05d3d7f64bfa941",
      "LastModified" : "2019-04-15T12:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Target\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "qt/widgets/instrumentview/CMakeLists.txt" : {
      "ObjectId" : "f0339ba4770f1261ecca7c39e2a52c7be7c03de5",
      "LastModified" : "2019-04-15T12:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Target\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###########################################################################\n\n# Testing\n\n###########################################################################\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "qt/widgets/legacyqwt/CMakeLists.txt" : {
      "ObjectId" : "8dee1e3953b3857f39ff95a6c4480388b92144d3",
      "LastModified" : "2019-04-15T12:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Include files aren't required, but this makes them appear in Visual Studio\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###########################################################################\n\n# Target\n\n###########################################################################\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###########################################################################\n\n# Testing\n\n###########################################################################\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "qt/widgets/mplcpp/CMakeLists.txt" : {
      "ObjectId" : "e41695db207a828d652ac474fa2246e5979bfabc",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Rules for matplotlib cpp library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Target\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Testing\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "qt/widgets/mplcpp/test/CMakeLists.txt" : {
      "ObjectId" : "615c313942d269c86ebc704729348e217955d993",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Unit tests for MplCpp library\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "qt/widgets/plugins/CMakeLists.txt" : {
      "ObjectId" : "2abb8c4725484697fb2dc0862b8883145d60f070",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################################\n\n# Now add the packages one-by-one, building up the dependencies as we go\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "qt/widgets/plugins/algorithm_dialogs/CMakeLists.txt" : {
      "ObjectId" : "e1e16030d47f64b9f7e72f87d87dcf595cc764db",
      "LastModified" : "2019-04-15T12:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Include files aren't required, but this makes them appear in Visual Studio\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "qt/widgets/plugins/designer/CMakeLists.txt" : {
      "ObjectId" : "3c16c38ca1dedbdac9a401c23e5e7a7cecc8f77e",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Require additional Qt packages\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Include files aren't required, but this makes them appear in Visual Studio\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "qt/widgets/refdetectorview/CMakeLists.txt" : {
      "ObjectId" : "eefd25b78bdfc4d950d6ef551c2df87839e85b56",
      "LastModified" : "2019-04-15T12:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Include files aren't required, but this makes them appear in Visual Studio\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###########################################################################\n\n# Main Library Target\n\n###########################################################################\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###########################################################################\n\n# DEMO/GUI TESTING APPLICATIONS\n\n###########################################################################\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "qt/widgets/sliceviewer/CMakeLists.txt" : {
      "ObjectId" : "43f995ef44c926adb16815f9149bc67b6e1fe7c6",
      "LastModified" : "2019-04-15T12:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Include files aren't required, but this makes them appear in Visual Studio\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###########################################################################\n\n# Main Library Target\n\n###########################################################################\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###########################################################################\n\n# Testing\n\n###########################################################################\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Python unit tests\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "qt/widgets/spectrumviewer/CMakeLists.txt" : {
      "ObjectId" : "6778e66c5fd76167b231737a4252efcbc9feb121",
      "LastModified" : "2019-04-15T12:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#src/MatrixWSSpectrumView.cpp\n",
        "Line" : 17,
        "CharPositionInLine" : 7
      },
      "1" : {
        "Text" : "# Include files aren't required, but this makes them appear in Visual Studio\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#inc/MantidQtWidgets/SpectrumViewer/MatrixWSSpectrumView.h\n",
        "Line" : 40,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "###########################################################################\n\n# Main Library Target\n\n###########################################################################\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "scripts/CMakeLists.txt" : {
      "ObjectId" : "9d211dd552750973b95bb93a84dafafbb084f160",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Subdirectories from which ui files need processing to py files FilterEvents\n\n# doesn't need any special work\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Chain all required interface custom targets into CompilePyUI\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Put them into the 'CompileUI' folder or group in VS and the like, for\n\n# convenience\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# External GUIs\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# External projects\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# .pth files\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# development copy\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# install copy\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Testing\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# these are gui tests that currently only work in pyqt4\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Additional tests\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# python unit tests\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# force to use qt4\n",
        "Line" : 152,
        "CharPositionInLine" : 30
      },
      "13" : {
        "Text" : "# Ensure we don't get stale pyc files around\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "scripts/ErrorReporter/CMakeLists.txt" : {
      "ObjectId" : "aed4dac5ce474e8dfb2da6bf6758a304e6db027d",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# List of UIs to Auto convert\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scripts/ExternalInterfaces/CMakeLists.txt" : {
      "ObjectId" : "5ba318fc9da510d1e4b7218cf58a8f09739d4acf",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Fetch any externally-managed interfaces\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# mslice\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Let the parent lists file know where dev copy of mslice is\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Installation MSLICE_DEV is only set in PARENT_SCOPE! so don't use it here\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "scripts/Interface/ui/CMakeLists.txt" : {
      "ObjectId" : "2848db2576f9214feb8e369d6f1bb3144c327bef",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Put all ui targets inside the 'CompilePyUI' folder or group in VS and the\n\n# like, for convenience\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scripts/Interface/ui/batchwidget/CMakeLists.txt" : {
      "ObjectId" : "28e48747e23f7b568daf96244d3235af067ed540",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# List of UIs to Auto convert\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scripts/Interface/ui/dataprocessorinterface/CMakeLists.txt" : {
      "ObjectId" : "819bfeb68ad2749dc2f04fe8e60eca58438f1d63",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# List of UIs to Auto convert\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scripts/Interface/ui/poldi/CMakeLists.txt" : {
      "ObjectId" : "a8b437d31c66f8908a057d1b3d94edfec4f84e1c",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# List of UIs to Auto convert\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scripts/Interface/ui/reflectometer/CMakeLists.txt" : {
      "ObjectId" : "c9e00afe6536ecaf0df266d1e6f04f479c996aa8",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# List of UIs to Auto convert\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scripts/test/MultiPlotting/CMakeLists.txt" : {
      "ObjectId" : "0a0401d6b8b5498739503a389969bb323025f722",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tests for Muon GUIs\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Prefix for test name=PythonAlgorithms\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# force to use qt4\n",
        "Line" : 18,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 3
    },
    "scripts/test/Muon/CMakeLists.txt" : {
      "ObjectId" : "2509a66cf7d1f92b019ac1103b5a40131827ff6e",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tests for Muon GUIs\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Prefix for test name=PythonAlgorithms\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# force to use qt4\n",
        "Line" : 53,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 3
    },
    "scripts/test/SANS/CMakeLists.txt" : {
      "ObjectId" : "e813f4f57c2e927e12efd222172de7a483b87a7e",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "scripts/test/SANS/algorithm_detail/CMakeLists.txt" : {
      "ObjectId" : "857fd1907a393e6df81a193c9e0188e6c15767a0",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tests for SANS\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scripts/test/SANS/command_interface/CMakeLists.txt" : {
      "ObjectId" : "f0062fe34931ac8972a2674bb7b59246d2b048a6",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tests for SANS\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Prefix for test name=PythonAlgorithms\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "scripts/test/SANS/common/CMakeLists.txt" : {
      "ObjectId" : "89eb28deed9a0c0352dec43a4d600b73bfe10eb9",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tests for SANS\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scripts/test/SANS/gui_logic/CMakeLists.txt" : {
      "ObjectId" : "039ffe258d682adfd84c915d171072bc7ac8e4f3",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tests for SANS\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# force to use qt4\n",
        "Line" : 29,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 2
    },
    "scripts/test/SANS/state/CMakeLists.txt" : {
      "ObjectId" : "4dc96390f8d42338ca4b6874e63799959b5c339e",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tests for SANSState\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Prefix for test name=PythonAlgorithms\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "scripts/test/SANS/user_file/CMakeLists.txt" : {
      "ObjectId" : "529c91188ea2ca0dcc94b6cc55b6be3135c695c8",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tests for SANSState\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Prefix for test name=PythonAlgorithms\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "scripts/test/TOFTOF/CMakeLists.txt" : {
      "ObjectId" : "2d9f0189082437b97692e0b241ebf87ad3a53bef",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tests for SANS\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scripts/test/directtools/CMakeLists.txt" : {
      "ObjectId" : "bcad6f348e71b896751b2ab6d4d6e4217f2c5b9b",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "scripts/test/isis_powder/CMakeLists.txt" : {
      "ObjectId" : "0947470963bd07e4c897b63a2310cc29ea6ed8b1",
      "LastModified" : "2019-03-28T06:48:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tests for ISIS Powder\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Prefix for test name=PythonAlgorithms\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "CMAKE" : 232,
    "QMAKE" : 3,
    "MAKEFILE" : 5
  },
  "ElapsedTime" : 27231
}