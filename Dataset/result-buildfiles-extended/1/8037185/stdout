{
  "Repository" : "8037185",
  "Revision" : "HEAD",
  "ObjectId" : "4c501a7d895fe6b9dd6266e01eecab96ac0079bb",
  "CommitTime" : "2018-11-24T08:56:02Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "e78837f23e69659ecf4cbd943c06b8e8c6987c13",
      "LastModified" : "2018-11-24T08:56:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ########## Project setup ##########\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# WildMIDI Version\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Lib Versions\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find Macros\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set a default build type if none was specified\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set the possible values of build type for cmake-gui\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Set our options\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Platform specific defines\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# allow 'large' files in 32 bit builds\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Usage of RPATH for macOS is enabled by default; this just suppresses the CMP0042 warning\n\n# when building libwildmidi_dynamic.\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Set RPATH for OpenBSD so WildMIDI can find libWildMidi.so\n",
        "Line" : 74,
        "CharPositionInLine" : 14
      },
      "11" : {
        "Text" : "# use, i.e. don't skip the full RPATH for the build tree\n",
        "Line" : 75,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# when building, don't use the install RPATH already\n\n# (but later on when installing)\n",
        "Line" : 78,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# add the automatically determined parts of the RPATH\n\n# which point to directories outside the build tree to the install RPATH\n",
        "Line" : 84,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# the RPATH to be used when installing, but only if it's not a system directory\n",
        "Line" : 88,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Compiler specific settings\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# __SUNPRO_C >= 0x590\n\n#   CHECK_C_SOURCE_COMPILES(\"int foo(void) __attribute__((visibility(\\\"default\\\")));\n\n#                            int main(void) {return 0;}\" HAVE_VISIBILITY_DEFAULT)\n\n# __SUNPRO_C >= 0x550\n",
        "Line" : 131,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# OR HAVE_VISIBILITY_DEFAULT\n",
        "Line" : 137,
        "CharPositionInLine" : 28
      },
      "18" : {
        "Text" : "# we must not have any unresolved symbols:\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# UNIX-like environments\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Go looking for available sound packages for WildMIDI player\n",
        "Line" : 179,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Set preferred output\n",
        "Line" : 185,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# no special header paths\n",
        "Line" : 197,
        "CharPositionInLine" : 12
      },
      "23" : {
        "Text" : "# Try to auto-detect\n",
        "Line" : 208,
        "CharPositionInLine" : 16
      },
      "24" : {
        "Text" : "# no special header paths\n",
        "Line" : 215,
        "CharPositionInLine" : 16
      },
      "25" : {
        "Text" : "# find our math lib\n",
        "Line" : 231,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "## Debian and non debian Linux building\n",
        "Line" : 238,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "## Debian specific\n",
        "Line" : 240,
        "CharPositionInLine" : 8
      },
      "28" : {
        "Text" : "## Non debian specific\n",
        "Line" : 242,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : "# ######### General setup ##########\n",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# AND NOT HAVE_INTTYPES_H\n",
        "Line" : 278,
        "CharPositionInLine" : 23
      },
      "31" : {
        "Text" : "# Setup up our config file\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 32
    },
    "amiga/Makefile" : {
      "ObjectId" : "1d1fe2c168fba0e015b2b714c104ebc47c4b9992",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# GNU Makefile to build for AmigaOS variants using gcc\n\n#\n\n# make aros     : build for i386-aros\n\n# make morphos  : build for ppc-morphos\n\n# make amigaos  : build for m68k-amigaos\n\n# make amigaos4 : build for ppc-amigaos4\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set to 1 for debug build\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The tools\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Build rules\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Objects\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Build targets\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/FindOSS.cmake" : {
      "ObjectId" : "76c3c2f11bf1514b669d0c0d3b8f18114385c69f",
      "LastModified" : "2014-03-10T23:03:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find OSS\n\n# Find OSS headers and libraries.\n\n#\n\n#  OSS_INCLUDE_DIR  - where to find soundcard.h, etc.\n\n#  OSS_LIBRARY      - link library, if any, needed for OSS.\n\n#  OSS_FOUND        - True if OSS found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# system header must suffice\n",
        "Line" : 12,
        "CharPositionInLine" : 21
      },
      "2" : {
        "Text" : "#CHECK_INCLUDE_FILES(linux/soundcard.h HAVE_LINUX_SOUNDCARD_H) # Linux does provide <sys/soundcard.h>\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# less common, but exists.\n",
        "Line" : 20,
        "CharPositionInLine" : 50
      },
      "4" : {
        "Text" : "# NetBSD and OpenBSD uses ossaudio emulation layer,\n\n# otherwise no link library is needed.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# AND HAVE_SOUNDCARD_H ???\n",
        "Line" : 24,
        "CharPositionInLine" : 73
      },
      "CommentCount" : 6
    },
    "cmake/Toolchain-MinGW32.cmake" : {
      "ObjectId" : "ff877aa41f55e642ea201a84fed6d4f60aa12bf1",
      "LastModified" : "2014-03-15T14:01:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# toolchain file I use to cross compile on Linux\n\n# targetting Windows (x86/mingw). running:\n\n# cmake -DCMAKE_TOOLCHAIN_FILE=/path/to/Toolchain-MinGW32.cmake ....\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# where is the target environment\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# adjust the default behaviour of the FIND_XXX() commands:\n\n# search headers and libraries in the target environment, search\n\n# programs in the host environment\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/Toolchain-MinGW64.cmake" : {
      "ObjectId" : "9de51c6f755a1d186bac59fdb5d1b43f061991be",
      "LastModified" : "2014-03-15T14:01:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# toolchain file I use to cross compile on Linux\n\n# targetting Windows (x64/mingw-w64). running:\n\n# cmake -DCMAKE_TOOLCHAIN_FILE=/path/to/Toolchain-MinGW64.cmake ....\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# where is the target environment\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# adjust the default behaviour of the FIND_XXX() commands:\n\n# search headers and libraries in the target environment, search\n\n# programs in the host environment\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/Toolchain-OSX-ppc.cmake" : {
      "ObjectId" : "c10a3442336be6b5a103fd2c1cc32c4f95366336",
      "LastModified" : "2014-03-15T14:01:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# toolchain file I use to cross compile on Linux\n\n# targetting OSX/Darwin (powerpc). running:\n\n# cmake -DCMAKE_TOOLCHAIN_FILE=/path/to/Toolchain-OSX-ppc.cmake ....\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# where is the target environment\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# adjust the default behaviour of the FIND_XXX() commands:\n\n# search headers and libraries in the target environment, search\n\n# programs in the host environment\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/Toolchain-OSX-x86.cmake" : {
      "ObjectId" : "b0c0290d90683366421cd3e5e651e401146f74b5",
      "LastModified" : "2014-03-15T14:01:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# toolchain file I use to cross compile on Linux\n\n# targetting OSX/Darwin (x86). running:\n\n# cmake -DCMAKE_TOOLCHAIN_FILE=/path/to/Toolchain-OSX-x86.cmake ....\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# where is the target environment\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# adjust the default behaviour of the FIND_XXX() commands:\n\n# search headers and libraries in the target environment, search\n\n# programs in the host environment\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/Toolchain-OSX-x86_64.cmake" : {
      "ObjectId" : "a620247f02f38796fe3ed9dc129d4dd448f5bc28",
      "LastModified" : "2014-03-15T14:01:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# toolchain file I use to cross compile on Linux\n\n# targetting OSX/Darwin (x86_64). running:\n\n# cmake -DCMAKE_TOOLCHAIN_FILE=/path/to/Toolchain-OSX-x86_64.cmake ....\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# where is the target environment\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# adjust the default behaviour of the FIND_XXX() commands:\n\n# search headers and libraries in the target environment, search\n\n# programs in the host environment\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "djgpp/Makefile" : {
      "ObjectId" : "25579f225d082fc1d784372a03c2caea3f4d79b7",
      "LastModified" : "2016-06-16T14:01:00Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#------------------------------------------------------------------------------#\n\n# Makefile for building WildMidi library and player for DOS.\n\n# You will need a DJGPP build environment and GNU make to do it painlessly.\n\n# To build natively on DOS, you need long file names support (e.g. doslfn.)\n\n#------------------------------------------------------------------------------#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set to 1 for debug build\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# DXE3 version of the library requires DJGPP-2.05 or newer.\n\n# Set to 0 if dont want to build / use a DXE3 version of the library.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The tools\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# SB output support (comment out if not wanted)\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# build for pentium and newer (comment out if not wanted)\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build rules\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Objects\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Build targets\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "include/config.h.cmake" : {
      "ObjectId" : "c415e18148b1c85d90fcf432be4137f9fa8749d2",
      "LastModified" : "2016-07-15T14:21:31Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/* config.h -- generated from config.h.cmake  */",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/* Name of package */",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/* Define to the home page for this package. */",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* Define to the address where bug reports for this package should be sent. */",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* Define to the full name of this package. */",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* Define to the full name and version of this package. */",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/* Define to the one symbol short name of this package. */",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/* Define to the version of this package. */",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "/* Version number of package */",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "/* Define this to the location of the wildmidi config file */",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "/* Define if the C compiler supports the `inline' keyword. */",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "/* Define if the C compiler supports the `__inline__' keyword. */",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "/* Define if the C compiler supports the `__inline' keyword. */",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "/* Define if the compiler has the `__builtin_expect' built-in function */",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "/* define this if you are running a bigendian system (motorola, sparc, etc) */",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "/* define this if building for AmigaOS variants */",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "/* Define if you have the <stdint.h> header file. */",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "/* Define if you have the <inttypes.h> header file. */",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "/* Define our audio drivers */",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "macosx/Makefile" : {
      "ObjectId" : "4aa7b0d7f6a9b21d5cb2c070dd8359920e3d4a0a",
      "LastModified" : "2018-11-07T11:33:16Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile to build WildMidi library and player for Mac OS X.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set to 1 for debug build\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The tools\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# specifically for 10.5 and newer:\n\n#CFLAGS+=-mmacosx-version-min=10.5\n\n#LDFLAGS+=-mmacosx-version-min=10.5\n\n# specifically for 10.6 and newer:\n\n#CFLAGS+=-mmacosx-version-min=10.6\n\n#LDFLAGS+=-mmacosx-version-min=10.6 -Wl,-lbundle1.o\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# OpenAL output support (comment out if not wanted)\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Objects\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build rules\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# for player objects:\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "3710bfc04f5f94a3a5816510a0a2a48e469d636b",
      "LastModified" : "2018-11-07T11:35:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Setup our wildmidi library that we link to\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set our target paths\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# set our library names\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# windows uses *.lib for both static and dynamic, workaround\n",
        "Line" : 71,
        "CharPositionInLine" : 43
      },
      "4" : {
        "Text" : "# everyone else uses .a and .so\n",
        "Line" : 74,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# do we want a static library?\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# dynamic library\n",
        "Line" : 93,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# GCC, Clang\n",
        "Line" : 115,
        "CharPositionInLine" : 64
      },
      "8" : {
        "Text" : "#ELSEIF (HAVE_LDSCOPE_HIDDEN AND HAVE_VISIBILITY_DEFAULT) # SunPro (__SUNPRO_C >= 0x590)\n\n#   SET_TARGET_PROPERTIES(libwildmidi_dynamic PROPERTIES\n\n#           COMPILE_DEFINITIONS \"WILDMIDI_BUILD;SYM_VISIBILITY\"\n\n#           COMPILE_FLAGS \"-xldscope=hidden\"\n\n#           )\n",
        "Line" : 120,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# SunPro (__SUNPRO_C >= 0x550)\n",
        "Line" : 125,
        "CharPositionInLine" : 57
      },
      "10" : {
        "Text" : "# Set our default and then look at the possible locations\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# MS Visual Studio\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# MinGW or MinGW-w64\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Apple's Xcode\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Apple's CLI default\n",
        "Line" : 158,
        "CharPositionInLine" : 15
      },
      "15" : {
        "Text" : "# do we want the wildmidi player?\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# no special header paths\n",
        "Line" : 181,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# no special header paths\n",
        "Line" : 213,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# convenience variables\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# add multiarch folder, if needed\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# prepare pkg-config file\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# install target (*nix OSes)\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# install our libraries\n",
        "Line" : 251,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# install our devtest if asked for\n",
        "Line" : 266,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# install pkg-config file\n",
        "Line" : 271,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# install supporting man pages and headers\n",
        "Line" : 274,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# install target (Windows: MinGW or MinGW-w64)\n",
        "Line" : 279,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# install our libraries\n",
        "Line" : 286,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# install our devtest if asked for\n",
        "Line" : 301,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# install pkg-config file\n",
        "Line" : 306,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# install supporting man pages and headers\n",
        "Line" : 309,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# Release builds use the debug console\n",
        "Line" : 326,
        "CharPositionInLine" : 8
      },
      "32" : {
        "Text" : "# Release builds use the debug console\n",
        "Line" : 334,
        "CharPositionInLine" : 8
      },
      "33" : {
        "Text" : "# Play a bit with the warning levels\n",
        "Line" : 341,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# Since windows can only disable specific warnings, not enable them\n",
        "Line" : 343,
        "CharPositionInLine" : 26
      },
      "35" : {
        "Text" : "# Warnings that aren't enabled normally and don't need to be enabled\n\n# They're unneeded and sometimes completely retarded warnings that /Wall enables\n\n# Not going to bother commenting them as they tend to warn on every standard library file\n",
        "Line" : 346,
        "CharPositionInLine" : 12
      },
      "36" : {
        "Text" : "# Warnings that are thrown on standard libraries\n",
        "Line" : 351,
        "CharPositionInLine" : 12
      },
      "37" : {
        "Text" : "# Non-template function with same name and parameter count as template function\n\n# Variable signed/unsigned mismatch\n",
        "Line" : 352,
        "CharPositionInLine" : 17
      },
      "38" : {
        "Text" : "# Unable to generate copy constructor/assignment operator as it's not public in the base\n",
        "Line" : 354,
        "CharPositionInLine" : 22
      },
      "39" : {
        "Text" : "# Assignment in conditional expression\n\n# Storing 32-bit float result in memory, possible loss of performance\n\n# Undocumented warning that occurs in the crtdbg.h file\n\n# nonstandard extension used (triggered by setjmp.h)\n\n# Function was declared deprecated\n",
        "Line" : 355,
        "CharPositionInLine" : 17
      },
      "40" : {
        "Text" : "# caused by boost\n",
        "Line" : 361,
        "CharPositionInLine" : 12
      },
      "41" : {
        "Text" : "# 'type cast' : unsafe conversion (1.56, thread_primitives.hpp, normally off)\n",
        "Line" : 362,
        "CharPositionInLine" : 17
      },
      "42" : {
        "Text" : "# project specific warnings\n",
        "Line" : 364,
        "CharPositionInLine" : 12
      },
      "43" : {
        "Text" : "# Type mismatch, declared class or struct is defined with other type\n\n# Unreferenced formal parameter (-Wunused-parameter)\n\n# Unreferenced local variable (-Wunused-variable)\n\n# Conditional expression is constant\n\n# Storing value in a variable of a smaller type, possible loss of data\n\n# Storing value of one type in variable of another (size_t in int, for example)\n\n# Signed/unsigned mismatch\n\n# Conversion from 'size_t' to 'int', possible loss of data\n\n# Truncating value (double to float, for example)\n\n# Variable overflow, trying to store 128 in a signed char for example\n\n# New behavior: elements of array 'array' will be default initialized (desired behavior)\n\n# Using 'this' in member initialization list\n\n# Unreferenced local function has been removed\n\n# Potentially uninitialized local variable used\n\n# Unreachable code\n\n# Boolean optimization warning, e.g. myBool = (myInt != 0) instead of myBool = myInt\n",
        "Line" : 365,
        "CharPositionInLine" : 17
      },
      "CommentCount" : 44
    }
  },
  "FileTypes" : {
    "CMAKE" : 8,
    "CMAKESOURCE" : 1,
    "MAKEFILE" : 3
  },
  "ElapsedTime" : 919
}