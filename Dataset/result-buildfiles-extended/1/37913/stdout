{
  "Repository" : "37913",
  "Revision" : "HEAD",
  "ObjectId" : "2c74fc2c66cb7bd184e8a755d95195ecf6be8595",
  "CommitTime" : "2019-04-18T20:56:14Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "d8bf2acd790d618dd779a25cd36a23e8f21f58cb",
      "LastModified" : "2019-04-18T04:15:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check Python version early so we can use Python >= 2.6 features in other\n\n# build scripts\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Quiet warning from cmake 3.1 or later about quoted variables in if()\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Honor link flags in try_compile() tests\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Don't set MACOSX_RPATH by default\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Stop cmake warning about files in the build directory it didn't create\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# clear list\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# remove -Wl,-Bdynamic\n",
        "Line" : 109,
        "CharPositionInLine" : 44
      },
      "7" : {
        "Text" : "# remove -fPIC\n",
        "Line" : 111,
        "CharPositionInLine" : 44
      },
      "8" : {
        "Text" : "# remove -rdynamic\n",
        "Line" : 113,
        "CharPositionInLine" : 44
      },
      "9" : {
        "Text" : "# On Windows the batch file is run once to set up the test environment, not\n\n# per test\n",
        "Line" : 196,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Add extra installation locations for SWIG .i files, build tools,\n\n# cmake files, and Python code\n\n# As per GNUInstallDirs.cmake, set empty values in the cache and store defaults\n\n# in local variables for locations defined relative to existing CMAKE_INSTALL_*.\n\n# This auto-updates the defaults when the existing CMAKE_INSTALL_* changes.\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Keep track of all variables relating to dependencies\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Don't link in libpython (that prevents the extension from being used in\n\n# later compatible versions of Python), except on Windows where all DLL\n\n# symbols must be defined\n",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Visual Studio always adds Release or Debug to binary directories\n",
        "Line" : 268,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Automatically enable OpenMP if available and at least version 3\n",
        "Line" : 329,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Add Eigen3 to 'system' include path. Amongst other things, this will suppress\n\n# many compiler warnings about Eigen code which a) clutter the output and\n\n# b) we're not going to fix, since Eigen isn't our code.\n",
        "Line" : 334,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# configure modules\n",
        "Line" : 345,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# build modules\n",
        "Line" : 352,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# the make_containers.py call is needed to let swig find all headers it needs\n",
        "Line" : 356,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Static builds don't include Python extensions\n",
        "Line" : 362,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Can't set up pyext until we have SWIG dependencies\n",
        "Line" : 364,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Generate manual's tag file so we can link from the refguide to it\n",
        "Line" : 411,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Rebuild manual so that it can link to the refguide tags\n",
        "Line" : 419,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# Write configuration to a cmake file so that we can use IMP in other projects\n",
        "Line" : 440,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Installed locations\n",
        "Line" : 455,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Install headers\n",
        "Line" : 499,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Install Python modules\n",
        "Line" : 503,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Install data\n",
        "Line" : 506,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Install build_info\n",
        "Line" : 509,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Install SWIG .i files\n",
        "Line" : 513,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Install build tools\n\n# dev_tools is a symlink, so we need to deref it first\n",
        "Line" : 516,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Install cmake scripts and configuration\n",
        "Line" : 526,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Install examples\n",
        "Line" : 532,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Try to ensure that ctest doesn't truncate benchmark output\n",
        "Line" : 536,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 34
    },
    "modules/cgal/Setup.cmake" : {
      "ObjectId" : "1b6b7e80a7c3bdab557373563630f6da4646a871",
      "LastModified" : "2019-01-23T19:32:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Ignore CGAL_CXX_FLAGS from previous cmake run, if any\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set \"standard\" include/link variables from CGAL's\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# reset build type\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "modules/core/Build.cmake" : {
      "ObjectId" : "7bc444f5821d30e400aed6796329a97361c8a560",
      "LastModified" : "2019-01-23T19:32:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build ihm C extension as part of building IMP.core\n\n# Static builds don't include Python extensions\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "modules/core/dependency/python-ihm.cmake" : {
      "ObjectId" : "7febc7eb1fe188a780d8a28a8a8a7b2b4fe75e11",
      "LastModified" : "2019-01-23T19:32:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install Python modules\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build C extension\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We used add_definitions to add C++11 compiler flags, but that will be applied\n\n# to C code too, and some compilers treat that as an error, so remove\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Our use of strdup, strerror should be safe - no need for the Windows\n\n# compiler to warn about it; we want to use the POSIX name for strdup too\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Apple linkers complain by default if there are undefined symbols\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Install C extension\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "modules/core/dependency/python-ihm/docs/Makefile" : {
      "ObjectId" : "c15c2a9b81fb002b24a2383c8c3c74cea8ef05a6",
      "LastModified" : "2019-01-23T19:32:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Minimal makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Put it first so that \"make\" without argument is like \"make help\".\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Catch-all target: route all unknown targets to Sphinx using the new\n\n# \"make mode\" option.  $(O) is meant as a shortcut for $(SPHINXOPTS).\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "modules/em2d/Setup.cmake" : {
      "ObjectId" : "6c74423d6c9694f786c14a3da85d148e61f84ae0",
      "LastModified" : "2019-01-23T19:32:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# disable em2d\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "modules/kernel/Setup.cmake" : {
      "ObjectId" : "3ddfe62d016eb4f0204e9474cc1434ee2e1b658a",
      "LastModified" : "2019-01-23T19:32:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "modules/mpi/Setup.cmake" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2019-01-23T19:32:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "modules/mpi/dependency/MPI.cmake" : {
      "ObjectId" : "bb0930a2a4f1ba0bb6654da7be5be9f3ee7a4550",
      "LastModified" : "2019-01-23T19:32:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(CMAKE_CXX_LINK_FLAGS ${CMAKE_CXX_LINK_FLAGS} ${MPI_CXX_LINK_FLAGS})\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Run tests of IMP.mpi module on 2 processors, if we found a working mpiexec\n\n# (note that we really should add $MPIEXEC_POSTFLAGS too, but can't right\n\n# now because that comes *after* python). Currently our Windows builds build\n\n# OK with MS-MPI, but its mpiexec doesn't work in our Wine environment\n\n# for some reason, so in this case we'll just test on one processor.\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "modules/pmi/CMakeLists.txt" : {
      "ObjectId" : "ef70bf40f52715828eed10b3d323d5cf2dc18361",
      "LastModified" : "2019-02-12T18:36:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Are we running cmake from this directory (out of tree build) ?\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Don't set MACOSX_RPATH by default\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "modules/pmi/Setup.cmake" : {
      "ObjectId" : "33d28d5436b7a927152aa1b7e73c377dd0744d8d",
      "LastModified" : "2019-01-23T19:32:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "modules/pmi/tools/FindIMP.cmake" : {
      "ObjectId" : "1b11f974fefb925944a7a3dfa5d78c2d4ace94f6",
      "LastModified" : "2019-01-31T21:34:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# The following module is based on FindVTK.cmake\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Find an IMP installation or binary tree.\n\n# The following variables are set if IMP is found.  If IMP is not\n\n# found, IMP_FOUND is set to false.\n\n#\n\n#  IMP_FOUND         - Set to true when IMP is found.\n\n#  IMP_USE_FILE      - CMake file to use IMP.\n\n#\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Construct consistent error messages for use below.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Get the system search path as a list.\n",
        "Line" : 19,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Construct a set of paths relative to the system search path.\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#\n\n# Look for an installation or build tree.\n\n#\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Look for an environment variable IMP_DIR.\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Look in places relative to the system executable search path.\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Look in standard UNIX install locations.\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Help the user find it if we cannot.\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 10
    },
    "modules/rmf/Setup.cmake" : {
      "ObjectId" : "7caf5fadfc0932fa9fabb7085dda9f9584c0b8d6",
      "LastModified" : "2019-01-31T21:34:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "modules/rmf/dependency/RMF.cmake" : {
      "ObjectId" : "60a34ed8e2d9c0da6d346dd39bbd2fe9665c2a3f",
      "LastModified" : "2019-01-31T21:34:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "modules/rmf/dependency/RMF/CMakeLists.txt" : {
      "ObjectId" : "07e0f89d4994628f7319e906825bd988adda01c1",
      "LastModified" : "2019-03-19T19:05:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# needs to be in main CMakeLists.txt\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Don't deref quoted variables in if()\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use new method of handling Ninja custom command byproducts\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Use consistent SWIG target names across all supported cmake versions\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Quiet warning about UseSWIG honoring SWIG_MODULE_NAME (which we don't use)\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# C++11 can use the boost version\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# make sure it initialized\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Don't set MACOSX_RPATH by default\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# configure a header file to pass some of the CMake settings\n\n# to the source code\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# swig support is a little broken\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#message(STATUS \"CMAKE_INSTALL_PYTHONDIR defined as ${CMAKE_INSTALL_PYTHONDIR}\")\n",
        "Line" : 141,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "#message(STATUS \"CMAKE_INSTALL_SWIGDIR defined as ${CMAKE_INSTALL_SWIGDIR}\")\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 12
    },
    "modules/rmf/dependency/RMF/benchmark/CMakeLists.txt" : {
      "ObjectId" : "5322d2696903eccc4cc5ebe67cc98a4c1326c779",
      "LastModified" : "2019-01-31T21:34:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "modules/rmf/dependency/RMF/bin/CMakeLists.txt" : {
      "ObjectId" : "abdf56cba9ebcf399d1dbce297926f297f1fdc25",
      "LastModified" : "2019-01-31T21:34:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "modules/rmf/dependency/RMF/bin/CppFiles.cmake" : {
      "ObjectId" : "9d1361c0d7754830b6f8d936fd94c4cddffb61eb",
      "LastModified" : "2019-01-31T21:34:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "modules/rmf/dependency/RMF/cmake_modules/CheckCompiles.cmake" : {
      "ObjectId" : "457868f548f94aa031e2fab79a2049976e4d50a5",
      "LastModified" : "2019-01-31T21:34:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#message(STATUS \"Trying to compile ${pkgname} searching in ${include_dir} ${link_libs}\")\n",
        "Line" : 3,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#message(STATUS \"Compiled ok\")\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "modules/rmf/dependency/RMF/cmake_modules/FindCGAL.cmake" : {
      "ObjectId" : "b40c009112f2dcb57a654ddc951b70f22d0acb94",
      "LastModified" : "2019-01-31T21:34:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# The following module is based on FindVTK.cmake\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Find a CGAL installation or binary tree.\n\n# The following variables are set if CGAL is found.  If CGAL is not\n\n# found, CGAL_FOUND is set to false.\n\n#\n\n#  CGAL_FOUND         - Set to true when CGAL is found.\n\n#  CGAL_USE_FILE      - CMake file to use CGAL.\n\n#\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Construct consistent error messages for use below.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Get the system search path as a list.\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Construct a set of paths relative to the system search path.\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#\n\n# Look for an installation or build tree.\n\n#\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Look for an environment variable CGAL_DIR.\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Look in places relative to the system executable search path.\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Look in standard UNIX install locations.\n",
        "Line" : 51,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Read from the CMakeSetup registry entries.  It is likely that\n\n# CGAL will have been recently built.\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Help the user find it if we cannot.\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 11
    },
    "modules/rmf/dependency/RMF/cmake_modules/FindCurrentDoxygen.cmake" : {
      "ObjectId" : "9d7607a06f3bcb8157bf47b2a2d07b7d650a6ffe",
      "LastModified" : "2019-01-31T21:34:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "modules/rmf/dependency/RMF/cmake_modules/FindEigen3.cmake" : {
      "ObjectId" : "9c546a05d859b18c49554d7ee7221cc486b7760e",
      "LastModified" : "2019-01-31T21:34:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Eigen3 lib\n\n#\n\n# This module supports requiring a minimum version, e.g. you can do\n\n#   find_package(Eigen3 3.1.2)\n\n# to require version 3.1.2 or newer of Eigen3.\n\n#\n\n# Once done this will define\n\n#\n\n#  EIGEN3_FOUND - system has eigen lib with correct version\n\n#  EIGEN3_INCLUDE_DIR - the eigen include directory\n\n#  EIGEN3_VERSION - eigen version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Copyright (c) 2009 Benoit Jacob <jacob.benoit.1@gmail.com>\n\n# Redistribution and use is allowed according to the terms of the 2-clause BSD license.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "modules/rmf/dependency/RMF/cmake_modules/FindLog4CXX.cmake" : {
      "ObjectId" : "652d55966ac004e6b22a49e40cc248b4b93794ee",
      "LastModified" : "2019-01-31T21:34:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#libfind_package(Log4CXX)\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use pkg-config to get hints about paths\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Include dir\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Finally the library itself\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set the include dir variables and the libraries and let libfind_process do the rest.\n\n# NOTE: Singular variables for this library, plural for libraries this this lib depends on.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "modules/rmf/dependency/RMF/cmake_modules/FindOpenMP3.cmake" : {
      "ObjectId" : "0fd92e77f1951c476c556591bd5e1e048e1d5058",
      "LastModified" : "2019-01-31T21:34:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "modules/rmf/dependency/RMF/cmake_modules/FindPythonLibs.cmake" : {
      "ObjectId" : "0ebe8b1c33ca0b932c3f21e2d4cda26612aef6f1",
      "LastModified" : "2019-01-31T21:34:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is copied from cmake 2.8.10, since older versions contain a bug that\n\n# stops the EXACT specifier from being honored\n\n# (http://www.cmake.org/Bug/view.php?id=13216)\n\n# This depends on two other .cmake files; they are also copied here with\n\n# a py- prefix.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Find python libraries\n\n# This module finds if Python is installed and determines where the\n\n# include files and libraries are. It also determines what the name of\n\n# the library is. This code sets the following variables:\n\n#\n\n#  PYTHONLIBS_FOUND           - have the Python libs been found\n\n#  PYTHON_LIBRARIES           - path to the python library\n\n#  PYTHON_INCLUDE_PATH        - path to where Python.h is found (deprecated)\n\n#  PYTHON_INCLUDE_DIRS        - path to where Python.h is found\n\n#  PYTHON_DEBUG_LIBRARIES     - path to the debug library (deprecated)\n\n#  PYTHONLIBS_VERSION_STRING  - version of the Python libs found (since CMake 2.8.8)\n\n#\n\n# The Python_ADDITIONAL_VERSIONS variable can be used to specify a list of\n\n# version numbers that should be taken into account when searching for Python.\n\n# You need to set this variable before calling find_package(PythonLibs).\n\n#\n\n# If you'd like to specify the installation of Python to use, you should modify\n\n# the following cache variables:\n\n#  PYTHON_LIBRARY             - path to the python library\n\n#  PYTHON_INCLUDE_DIR         - path to where Python.h is found\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#=============================================================================\n\n# Copyright 2001-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for the python framework on Apple.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set up the versions we know about, in the order we will search. Always add\n\n# the user supplied additional versions to the front.\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Avoid finding the .dll in the PATH.  We want the .lib.\n",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Look for the static library in the Python config directory\n",
        "Line" : 114,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Avoid finding the .dll in the PATH.  We want the .lib.\n",
        "Line" : 117,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# This is where the static library is usually located\n",
        "Line" : 119,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# For backward compatibility, honour value of PYTHON_INCLUDE_PATH, if\n\n# PYTHON_INCLUDE_DIR is not set.\n",
        "Line" : 123,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# For backward compatibility, set PYTHON_INCLUDE_PATH.\n",
        "Line" : 151,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# We use PYTHON_INCLUDE_DIR, PYTHON_LIBRARY and PYTHON_DEBUG_LIBRARY for the\n\n# cache entries because they are meant to specify the location of a single\n\n# library. We now set the variables listed by the documentation for this\n\n# module.\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# These variables have been historically named in this module different from\n\n# what SELECT_LIBRARY_CONFIGURATIONS() expects.\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# SELECT_LIBRARY_CONFIGURATIONS() sets ${PREFIX}_FOUND if it has a library.\n\n# Unset this, this prefix doesn't match the module prefix, they are different\n\n# for historical reasons.\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# PYTHON_ADD_MODULE(<name> src1 src2 ... srcN) is used to build modules for python.\n\n# PYTHON_WRITE_MODULES_HEADER(<filename>) writes a header file you can include\n\n# in your sources to initialize the static python modules\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Mark these options as advanced\n",
        "Line" : 206,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "#    target_link_libraries(${_NAME} ${PYTHON_LIBRARIES})\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# with configure_file() cmake complains that you may not use a file created using file(WRITE) as input file for configure_file()\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "modules/rmf/dependency/RMF/cmake_modules/GNUInstallDirs.cmake" : {
      "ObjectId" : "0302e4bef6c3910b1992fa0125c873fff066a427",
      "LastModified" : "2019-01-31T21:34:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Define GNU standard installation directories\n\n# Provides install directory variables as defined for GNU software:\n\n#  http://www.gnu.org/prep/standards/html_node/Directory-Variables.html\n\n# Inclusion of this module defines the following variables:\n\n#  CMAKE_INSTALL_<dir>      - destination for files of a given type\n\n#  CMAKE_INSTALL_FULL_<dir> - corresponding absolute path\n\n# where <dir> is one of:\n\n#  BINDIR           - user executables (bin)\n\n#  SBINDIR          - system admin executables (sbin)\n\n#  LIBEXECDIR       - program executables (libexec)\n\n#  SYSCONFDIR       - read-only single-machine data (etc)\n\n#  SHAREDSTATEDIR   - modifiable architecture-independent data (com)\n\n#  LOCALSTATEDIR    - modifiable single-machine data (var)\n\n#  LIBDIR           - object code libraries (lib or lib64 or lib/<multiarch-tuple> on Debian)\n\n#  INCLUDEDIR       - C header files (include)\n\n#  OLDINCLUDEDIR    - C header files for non-gcc (/usr/include)\n\n#  DATAROOTDIR      - read-only architecture-independent data root (share)\n\n#  DATADIR          - read-only architecture-independent data (DATAROOTDIR)\n\n#  INFODIR          - info documentation (DATAROOTDIR/info)\n\n#  LOCALEDIR        - locale-dependent data (DATAROOTDIR/locale)\n\n#  MANDIR           - man documentation (DATAROOTDIR/man)\n\n#  DOCDIR           - documentation root (DATAROOTDIR/doc/PROJECT_NAME)\n\n# Each CMAKE_INSTALL_<dir> value may be passed to the DESTINATION options of\n\n# install() commands for the corresponding file type.  If the includer does\n\n# not define a value the above-shown default will be used and the value will\n\n# appear in the cache for editing by the user.\n\n# Each CMAKE_INSTALL_FULL_<dir> value contains an absolute path constructed\n\n# from the corresponding destination by prepending (if necessary) the value\n\n# of CMAKE_INSTALL_PREFIX.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2011 Nikita Krupen'ko <krnekit@gmail.com>\n\n# Copyright 2011 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Installation directories\n\n#\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Override this default 'lib' with 'lib64' iff:\n\n#  - we are on Linux system but NOT cross-compiling\n\n#  - we are NOT on debian\n\n#  - we are on a 64 bits system\n\n# reason is: amd64 ABI: http://www.x86-64.org/documentation/abi.pdf\n\n# For Debian with multiarch, use 'lib/${CMAKE_LIBRARY_ARCHITECTURE}' if\n\n# CMAKE_LIBRARY_ARCHITECTURE is set (which contains e.g. \"i386-linux-gnu\"\n\n# See http://wiki.debian.org/Multiarch\n",
        "Line" : 73,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# is this a debian system ?\n",
        "Line" : 83,
        "CharPositionInLine" : 38
      },
      "5" : {
        "Text" : "# not debian, rely on CMAKE_SIZEOF_VOID_P:\n",
        "Line" : 87,
        "CharPositionInLine" : 11
      },
      "6" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Values whose defaults are relative to DATAROOTDIR.  Store empty values in\n\n# the cache and store the defaults in local variables if the cache values are\n\n# not set explicitly.  This auto-updates the defaults as DATAROOTDIR changes.\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Result directories\n\n#\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "modules/rmf/dependency/RMF/cmake_modules/IMPAddTests.cmake" : {
      "ObjectId" : "cb316bb3790da5e6b40a01c0d48cf8e41902ccaa",
      "LastModified" : "2019-03-19T19:05:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "modules/rmf/dependency/RMF/cmake_modules/IMPExecuteProcess.cmake" : {
      "ObjectId" : "c40d021aaab4bdf3e581ef389a3130124bbd88c7",
      "LastModified" : "2019-01-31T21:34:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# execute a process and return the exit code\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Since Windows doesn't parse the #! line in Python scripts, and not all\n\n# Windows users opt to associate .py files with Python (and even if they\n\n# do, the association might point to a different Python version), run\n\n# Python scripts explicitly with 'python' on Windows.\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# execute a process and return the value int the passed variable\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# execute a process and check that it worked\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "modules/rmf/dependency/RMF/cmake_modules/IMPFindC++11.cmake" : {
      "ObjectId" : "5a432d64154d43ef7f607bbaf9517d0a7c874b4e",
      "LastModified" : "2019-01-31T21:34:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Put flags in a cmake variable so we can set them before running compiler\n\n# checks (elsewhere in the build)\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# c++11's std::move (which boost/CGAL use) doesn't work until\n\n# OS X 10.9 (Darwin version 13)\n",
        "Line" : 27,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "modules/rmf/dependency/RMF/cmake_modules/IMPFindCompilerFlags.cmake" : {
      "ObjectId" : "0a6203e5f080720e825ed8fd4eaaae272a7b90df",
      "LastModified" : "2019-01-31T21:34:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# to support profiling on mac os\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "modules/rmf/dependency/RMF/cmake_modules/InstallDeref.cmake" : {
      "ObjectId" : "d5303c47ea44eda97bffa4d5b191528c1e8dd400",
      "LastModified" : "2019-01-31T21:34:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Similar to INSTALL(DIRECTORY, ...) except that any symlinks in the\n\n# hierarchy are dereferenced\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If we hit a directory, this must be a symlink; recurse into the\n\n# linked-to directory\n",
        "Line" : 10,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Don't install .pyc (compiled Python) files, scons control files,\n\n# or source control files\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "modules/rmf/dependency/RMF/cmake_modules/LibFindMacros.cmake" : {
      "ObjectId" : "9ea9857e46691ff8b713c2a9ef6802dfe31d535a",
      "LastModified" : "2019-01-31T21:34:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Works the same as find_package, but forwards the \"REQUIRED\" and \"QUIET\" arguments\n\n# used for the current package. For this to work, the first parameter must be the\n\n# prefix of the current package, then the prefix of the new package etc, which are\n\n# passed to find_package.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMake developers made the UsePkgConfig system deprecated in the same release (2.6)\n\n# where they added pkg_check_modules. Consequently I need to support both in my scripts\n\n# to avoid those deprecated warnings. Here's a helper that does just that.\n\n# Works identically to pkg_check_modules, except that no checks are needed prior to use.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Do the final processing once the paths have been detected.\n\n# If include dirs are needed, ${PREFIX}_PROCESS_INCLUDES should be set to contain\n\n# all the variables, each of which contain one include directory.\n\n# Ditto for ${PREFIX}_PROCESS_LIBS and library files.\n\n# Will set ${PREFIX}_FOUND, ${PREFIX}_INCLUDE_DIRS and ${PREFIX}_LIBRARIES.\n\n# Also handles errors in case library detection was required, etc.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Skip processing if already processed during this run\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Start with the assumption that the library was found\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Process all includes and set _FOUND to false if any are missing\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Process all libraries and set _FOUND to false if any are missing\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Print message and/or exit on fatal error\n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "modules/rmf/dependency/RMF/cmake_modules/py-FindPackageHandleStandardArgs.cmake" : {
      "ObjectId" : "a66b5cb01ff93ae59923cee668865be8549bfde1",
      "LastModified" : "2019-01-31T21:34:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIND_PACKAGE_HANDLE_STANDARD_ARGS(<name> ... )\n\n#\n\n# This function is intended to be used in FindXXX.cmake modules files.\n\n# It handles the REQUIRED, QUIET and version-related arguments to find_package().\n\n# It also sets the <UPPERCASED_NAME>_FOUND variable.\n\n# The package is considered found if all variables <var1>... listed contain\n\n# valid results, e.g. valid filepaths.\n\n#\n\n# There are two modes of this function. The first argument in both modes is\n\n# the name of the Find-module where it is called (in original casing).\n\n#\n\n# The first simple mode looks like this:\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(<name> (DEFAULT_MSG|\"Custom failure message\") <var1>...<varN> )\n\n# If the variables <var1> to <varN> are all valid, then <UPPERCASED_NAME>_FOUND\n\n# will be set to TRUE.\n\n# If DEFAULT_MSG is given as second argument, then the function will generate\n\n# itself useful success and error messages. You can also supply a custom error message\n\n# for the failure case. This is not recommended.\n\n#\n\n# The second mode is more powerful and also supports version checking:\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(NAME [REQUIRED_VARS <var1>...<varN>]\n\n#                                           [VERSION_VAR   <versionvar>]\n\n#                                           [HANDLE_COMPONENTS]\n\n#                                           [CONFIG_MODE]\n\n#                                           [FAIL_MESSAGE \"Custom failure message\"] )\n\n#\n\n# As above, if <var1> through <varN> are all valid, <UPPERCASED_NAME>_FOUND\n\n# will be set to TRUE.\n\n# After REQUIRED_VARS the variables which are required for this package are listed.\n\n# Following VERSION_VAR the name of the variable can be specified which holds\n\n# the version of the package which has been found. If this is done, this version\n\n# will be checked against the (potentially) specified required version used\n\n# in the find_package() call. The EXACT keyword is also handled. The default\n\n# messages include information about the required version and the version\n\n# which has been actually found, both if the version is ok or not.\n\n# If the package supports components, use the HANDLE_COMPONENTS option to enable\n\n# handling them. In this case, find_package_handle_standard_args() will report\n\n# which components have been found and which are missing, and the <NAME>_FOUND\n\n# variable will be set to FALSE if any of the required components (i.e. not the\n\n# ones listed after OPTIONAL_COMPONENTS) are missing.\n\n# Use the option CONFIG_MODE if your FindXXX.cmake module is a wrapper for\n\n# a find_package(... NO_MODULE) call.  In this case VERSION_VAR will be set\n\n# to <NAME>_VERSION and the macro will automatically check whether the\n\n# Config module was found.\n\n# Via FAIL_MESSAGE a custom failure message can be specified, if this is not\n\n# used, the default message will be displayed.\n\n#\n\n# Example for mode 1:\n\n#\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(LibXml2  DEFAULT_MSG  LIBXML2_LIBRARY LIBXML2_INCLUDE_DIR)\n\n#\n\n# LibXml2 is considered to be found, if both LIBXML2_LIBRARY and\n\n# LIBXML2_INCLUDE_DIR are valid. Then also LIBXML2_FOUND is set to TRUE.\n\n# If it is not found and REQUIRED was used, it fails with FATAL_ERROR,\n\n# independent whether QUIET was used or not.\n\n# If it is found, success will be reported, including the content of <var1>.\n\n# On repeated Cmake runs, the same message won't be printed again.\n\n#\n\n# Example for mode 2:\n\n#\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(BISON  REQUIRED_VARS BISON_EXECUTABLE\n\n#                                             VERSION_VAR BISON_VERSION)\n\n# In this case, BISON is considered to be found if the variable(s) listed\n\n# after REQUIRED_VAR are all valid, i.e. BISON_EXECUTABLE in this case.\n\n# Also the version of BISON will be checked by using the version contained\n\n# in BISON_VERSION.\n\n# Since no FAIL_MESSAGE is given, the default messages will be printed.\n\n#\n\n# Another example for mode 2:\n\n#\n\n#    find_package(Automoc4 QUIET NO_MODULE HINTS /opt/automoc4)\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(Automoc4  CONFIG_MODE)\n\n# In this case, FindAutmoc4.cmake wraps a call to find_package(Automoc4 NO_MODULE)\n\n# and adds an additional search directory for automoc4.\n\n# The following FIND_PACKAGE_HANDLE_STANDARD_ARGS() call produces a proper\n\n# success/error message.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2007-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# internal helper macro\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# internal helper macro to generate the failure message when used in CONFIG_MODE:\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# <name>_CONFIG is set, but FOUND is false, this means that some other of the REQUIRED_VARS was not found:\n",
        "Line" : 108,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# If _CONSIDERED_CONFIGS is set, the config-file has been found, but no suitable version.\n\n# List them all in the error message:\n",
        "Line" : 112,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Simple case: No Config-file was found at all:\n",
        "Line" : 129,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# set up the arguments for CMAKE_PARSE_ARGUMENTS and check whether we are in\n\n# new extended or in the \"old\" mode:\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# now that we collected all arguments, process them\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# In config-mode, we rely on the variable <package>_CONFIG, which is set by find_package()\n\n# when it successfully found the config-file, including version checking:\n",
        "Line" : 169,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# collect all variables which were not found, so they can be printed, so the\n\n# user knows better what went wrong (#6375)\n",
        "Line" : 186,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# check if all passed variables are valid\n",
        "Line" : 191,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# component handling\n",
        "Line" : 201,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# version handling:\n",
        "Line" : 232,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# exact version required\n",
        "Line" : 240,
        "CharPositionInLine" : 44
      },
      "15" : {
        "Text" : "# minimum version specified:\n",
        "Line" : 248,
        "CharPositionInLine" : 17
      },
      "16" : {
        "Text" : "# if the package was not found, but a version was given, add that to the output:\n",
        "Line" : 259,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# print the result:\n",
        "Line" : 280,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 18
    },
    "modules/rmf/dependency/RMF/cmake_modules/py-SelectLibraryConfigurations.cmake" : {
      "ObjectId" : "62137bb28873ae6f7eadf74ee0a3766d5d83fe07",
      "LastModified" : "2019-01-31T21:34:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# select_library_configurations( basename )\n\n#\n\n# This macro takes a library base name as an argument, and will choose good\n\n# values for basename_LIBRARY, basename_LIBRARIES, basename_LIBRARY_DEBUG, and\n\n# basename_LIBRARY_RELEASE depending on what has been found and set.  If only\n\n# basename_LIBRARY_RELEASE is defined, basename_LIBRARY, basename_LIBRARY_DEBUG,\n\n# and basename_LIBRARY_RELEASE will be set to the release value.  If only\n\n# basename_LIBRARY_DEBUG is defined, then basename_LIBRARY,\n\n# basename_LIBRARY_DEBUG and basename_LIBRARY_RELEASE will take the debug value.\n\n#\n\n# If the generator supports configuration types, then basename_LIBRARY and\n\n# basename_LIBRARIES will be set with debug and optimized flags specifying the\n\n# library to be used for the given configuration.  If no build type has been set\n\n# or the generator in use does not support configuration types, then\n\n# basename_LIBRARY and basename_LIBRARIES will take only the release values.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2009 Will Dicharry <wdicharry@stellarscience.com>\n\n# Copyright 2005-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This macro was adapted from the FindQt4 CMake module and is maintained by Will\n\n# Dicharry <wdicharry@stellarscience.com>.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Utility macro to check if one variable exists while another doesn't, and set\n\n# one that doesn't exist to the one that exists.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# if only the release version was found, set the debug to be the release\n\n# version.\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# if only the debug version was found, set the release value to be the\n\n# debug value.\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Set a default case, which will come into effect if\n\n# -no build type is set and the generator only supports one build type\n\n#  at a time (i.e. CMAKE_CONFIGURATION_TYPES is false)\n\n# -${basename}_LIBRARY_DEBUG and ${basename}_LIBRARY_RELEASE are the same\n\n# -${basename}_LIBRARY_DEBUG and ${basename}_LIBRARY_RELEASE are both empty\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# if the generator supports configuration types or CMAKE_BUILD_TYPE\n\n# is set, then set optimized and debug options.\n",
        "Line" : 62,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 8
    },
    "modules/rmf/dependency/RMF/data/CMakeLists.txt" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2019-01-31T21:34:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "modules/rmf/dependency/RMF/doc/CMakeLists.txt" : {
      "ObjectId" : "c1f8f48c59a20733564587ec43120d9f314b64be",
      "LastModified" : "2019-01-31T21:34:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add a target to generate API documentation with Doxygen\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "modules/rmf/dependency/RMF/examples/CMakeLists.txt" : {
      "ObjectId" : "8a88707881c0ecf2de727e09b9cbfcc7b1ee596b",
      "LastModified" : "2019-01-31T21:34:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "modules/rmf/dependency/RMF/include/CMakeLists.txt" : {
      "ObjectId" : "709a9621f66aee430d4030e172e11460df796ca9",
      "LastModified" : "2019-01-31T21:34:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "modules/rmf/dependency/RMF/plugins/pymol/CMakeLists.txt" : {
      "ObjectId" : "3fc110245aeca490fbd361d02db580e1360c915e",
      "LastModified" : "2019-01-31T21:34:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "modules/rmf/dependency/RMF/plugins/vmd/CMakeLists.txt" : {
      "ObjectId" : "b3510b993f3a5222dd9c5ffeb2db0787a516721c",
      "LastModified" : "2019-01-31T21:34:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "modules/rmf/dependency/RMF/src/CMakeLists.txt" : {
      "ObjectId" : "42f7f83412b3e8e8c0b2f1210e9b2d647b6e9b04",
      "LastModified" : "2019-01-31T21:34:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "modules/rmf/dependency/RMF/src/avrocpp/CMakeLists.txt" : {
      "ObjectId" : "0af8a4d9f0a6f50b573ddbe6e7bd052bd4385661",
      "LastModified" : "2019-01-31T21:34:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Licensed to the Apache Software Foundation (ASF) under one\n\n# or more contributor license agreements.  See the NOTICE file\n\n# distributed with this work for additional information\n\n# regarding copyright ownership.  The ASF licenses this file\n\n# to you under the Apache License, Version 2.0 (the\n\n# \"License\"); you may not use this file except in compliance\n\n# with the License.  You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing,\n\n# software distributed under the License is distributed on an\n\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n\n# KIND, either express or implied.  See the License for the\n\n# specific language governing permissions and limitations\n\n# under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "modules/rmf/dependency/RMF/src/backend/deprecated_avro/CMakeLists.txt" : {
      "ObjectId" : "e360ab894e23986215a506be59badb95e8fbea24",
      "LastModified" : "2019-01-31T21:34:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# AllJSON.h\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#add_custom_command(OUTPUT \"${PROJECT_BINARY_DIR}/src/backend/avro/FrameJSON.h\"\n\n#     COMMAND \"mkdir\" \"-p\" \"${PROJECT_BINARY_DIR}/src/backend/avro\"\n\n#     COMMAND \"${avrogencpp_PROGRAM}\" \"--input\" #\"${PROJECT_SOURCE_DIR}/src/backend/avro/Frame.json\"\n\n#     \"--output\" \"${PROJECT_BINARY_DIR}/src/backend/avro/FrameJSON.h\" \"--namespace\" #\"RMF_avro_backend\"\n\n#     DEPENDS \"${PROJECT_SOURCE_DIR}/src/backend/avro/Frame.json\" ${avrogen_DEPENDENCY} #COMMENT \"Creating json header\")\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#add_custom_target(\"FrameJSON.h\" ALL DEPENDS #\"${PROJECT_SOURCE_DIR}/src/backend/avro/Frame.json\" )\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#add_custom_command(OUTPUT \"${PROJECT_BINARY_DIR}/src/backend/avro/AllJSON.h\"\n\n#     COMMAND \"mkdir\" \"-p\" \"${PROJECT_BINARY_DIR}/src/backend/avro\"\n\n#     COMMAND \"${avrogencpp_PROGRAM}\" \"--input\" #\"${PROJECT_BINARY_DIR}/src/backend/avro/All.json\"\n\n#     \"--output\" \"${PROJECT_BINARY_DIR}/src/backend/avro/AllJSON.h\" \"--namespace\" #\"RMF_avro_backend\"\n\n#     DEPENDS \"${PROJECT_BINARY_DIR}/src/backend/avro/All.json\" ${avrogen_DEPENDENCY} #COMMENT \"Creating json header\")\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#add_custom_target(\"AllJSON.h\" ALL DEPENDS #\"${PROJECT_BINARY_DIR}/src/backend/avro/All.json\" )\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Data includes\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "modules/rmf/dependency/RMF/swig/CMakeLists.txt" : {
      "ObjectId" : "98ada142e93a25adb34243d62881a8886ce75856",
      "LastModified" : "2019-01-31T21:34:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# cmake 3.8 replaced SWIG_ADD_MODULE with SWIG_ADD_LIBRARY\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Don't link in libpython (that prevents the extension from being used in\n\n# later compatible versions of Python), except on Windows where all DLL\n\n# symbols must be defined\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Don't link in libpython (that prevents the extension from being used in\n\n# later compatible versions of Python), except on Windows where all DLL\n\n# symbols must be defined\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Apple linkers complain by default if there are undefined symbols\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "modules/rmf/dependency/RMF/test/CMakeLists.txt" : {
      "ObjectId" : "521ddf65a30e4052d21409e4c24fd6b6f4d3bdf7",
      "LastModified" : "2019-01-31T21:34:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "modules/rmf/dependency/RMF/test/CppTests.cmake" : {
      "ObjectId" : "9e3ff9318f3c7d14290fe26d9b4b2d54992aafc9",
      "LastModified" : "2019-01-31T21:34:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "modules/rmf/dependency/RMF/test/PyTests.cmake" : {
      "ObjectId" : "ce451068177ddaf1ca930738b92941d15360c389",
      "LastModified" : "2019-01-31T21:34:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "modules/scratch/CMakeLists.txt" : {
      "ObjectId" : "012ffdc613438a86ee80c173f4e769eeb609dc81",
      "LastModified" : "2019-01-31T21:34:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Are we running cmake from this directory (out of tree build) ?\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Don't set MACOSX_RPATH by default\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "modules/scratch/cmake_modules/FindIMP.cmake" : {
      "ObjectId" : "1b11f974fefb925944a7a3dfa5d78c2d4ace94f6",
      "LastModified" : "2019-01-31T21:34:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# The following module is based on FindVTK.cmake\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Find an IMP installation or binary tree.\n\n# The following variables are set if IMP is found.  If IMP is not\n\n# found, IMP_FOUND is set to false.\n\n#\n\n#  IMP_FOUND         - Set to true when IMP is found.\n\n#  IMP_USE_FILE      - CMake file to use IMP.\n\n#\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Construct consistent error messages for use below.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Get the system search path as a list.\n",
        "Line" : 19,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Construct a set of paths relative to the system search path.\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#\n\n# Look for an installation or build tree.\n\n#\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Look for an environment variable IMP_DIR.\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Look in places relative to the system executable search path.\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Look in standard UNIX install locations.\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Help the user find it if we cannot.\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 10
    },
    "tools/build/cmake_templates/Check.cmake" : {
      "ObjectId" : "c2aee6fd27fae4b3f8bb197504a0db8e01d1a670",
      "LastModified" : "2019-01-31T21:34:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/build/cmake_templates/Dependency.cmake" : {
      "ObjectId" : "3df09ad639a9ff78f67c3ee4079da701d9c75f42",
      "LastModified" : "2019-01-31T21:34:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use pkg-config to get hints about paths\n\n# If there are multiple .pc files to try, try each one in turn until\n\n# we get a result\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Include dir\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Finally the library itself\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set the include dir variables and the libraries and let libfind_process do the rest.\n\n# NOTE: Singular variables for this library, plural for libraries that this lib depends on.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# clear target variable\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "tools/build/cmake_templates/Module.cmake" : {
      "ObjectId" : "951f8edbca60c29d153eb8d515a27bc17602aeb0",
      "LastModified" : "2019-01-31T21:34:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# for warning control\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# for swig\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# documentation\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# make sure it is empty\n",
        "Line" : 94,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "tools/build/cmake_templates/ModuleBenchmark.cmake" : {
      "ObjectId" : "02697afe791173f67512316d5131dca6bff73487",
      "LastModified" : "2019-01-31T21:34:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/build/cmake_templates/ModuleBin.cmake" : {
      "ObjectId" : "101f72a7a37f78a0121be9e9d2a829fa271a6ffd",
      "LastModified" : "2019-01-31T21:34:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/build/cmake_templates/ModuleExamples.cmake" : {
      "ObjectId" : "faae1b050481dc04109e0ce5db9d2b4e0c455090",
      "LastModified" : "2019-01-31T21:34:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/build/cmake_templates/ModuleLib.cmake" : {
      "ObjectId" : "822cc00cd6480278b5aa6944a492259741e66722",
      "LastModified" : "2019-01-31T21:34:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  FILE(GLOB IMP_%(name)s_CUDA_SOURCES \"${CMAKE_SOURCE_DIR}/modules/%(name)s/src/*.cu\")\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Support for the Fermi architecture was removed in CUDA toolkit 9\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Note that soversion is only set if a version is set in the *source* directory.\n\n# This is because we have to set soversion at cmake, not build, time. All stable\n\n# releases have a VERSION file in the source directory, so this should be OK.\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tools/build/cmake_templates/ModuleSwig.cmake" : {
      "ObjectId" : "8ed8e7bb0b94c9d7fadbf06056eb7363f39ba903",
      "LastModified" : "2019-01-31T21:34:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Suppress modern gcc warnings about a lot of autogenerated SWIG code\n\n# Note that some warnings can be turned off with pragmas\n\n# (see modules/kernel/pyext/include/IMP_kernel.compiler_warnings.i)\n\n# but pragmas seem to be ignored for these particular warnings:\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# SWIG doesn't need Python.h in its own include path\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# this is needed for some reason that I don't understand\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Apple linkers complain by default if there are undefined symbols\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "tools/build/cmake_templates/ModuleTest.cmake" : {
      "ObjectId" : "b6ef0fc52250a5b0b6fd31fc1f2ef6f5042f8886",
      "LastModified" : "2019-01-31T21:34:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Don't pass --deprecation_exceptions to Python tests; this confuses unittest's\n\n# own command line parsing (and is unnecessary since IMP.test.main() already\n\n# turns on deprecation exceptions).\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/build/cmake_templates/ModuleUtil.cmake" : {
      "ObjectId" : "e4e23a79966c9800d056e3d5b9c22c4c64ea0ed1",
      "LastModified" : "2019-01-31T21:34:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/cmake/UseIMP.cmake" : {
      "ObjectId" : "4712cc961a8bd0d98c958af6bcd066cd57e80cd9",
      "LastModified" : "2019-03-29T00:47:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# UseIMP.cmake can be included in a project to build additional IMP modules.\n\n#\n\n# Usually this file is used with the following in CMakeLists.txt:\n\n#\n\n#     find_package(IMP REQUIRED)\n\n#     include(${IMP_USE_FILE})\n\n#\n\n# The variables used here are defined in IMPConfig.cmake, which find_package\n\n# should pull in.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build IMP module(s) from sources in sourcedir. This can be either a\n\n# top-level directory containing a 'modules' subdirectory under which one\n\n# or more modules exist in subdirectories, or sourcedir can be the module\n\n# directory itself. In the latter case, the module name is taken to be the\n\n# last component of the sourcedir name, but this can be overridden by\n\n# providing the module name as an optional second argument.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use same compiler flags as IMP itself\n",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Add include directories of mandatory IMP dependencies\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Add extra installation locations for SWIG .i files and Python code\n\n# As per GNUInstallDirs.cmake, set empty values in the cache and store\n\n# defaults in local variables for locations defined relative to existing\n\n# CMAKE_INSTALL_*. This auto-updates the defaults when the existing\n\n# CMAKE_INSTALL_* changes.\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Visual Studio always adds Release or Debug to binary directories\n",
        "Line" : 78,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# On Windows the batch file is run once to set up the test environment, not\n\n# per test\n",
        "Line" : 103,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# todo: fail if foo wasn't configured\n",
        "Line" : 140,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Make a suitable top-level IMP package file so that both\n\n# 'import IMP.<our module>' and regular 'import IMP.algebra' will\n\n# work, searching both our build directory and the IMP Python path\n",
        "Line" : 195,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 9
    },
    "tools/git/gitflow/Makefile" : {
      "ObjectId" : "fbbfd2c00016b174c351addde78985f7064ddb3d",
      "LastModified" : "2019-01-31T21:34:21Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Copyright 2010 Vincent Driessen. All rights reserved.\n\n# \n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n# \n\n#    1. Redistributions of source code must retain the above copyright notice,\n\n#       this list of conditions and the following disclaimer.\n\n# \n\n#    2. Redistributions in binary form must reproduce the above copyright\n\n#       notice, this list of conditions and the following disclaimer in the\n\n#       documentation and/or other materials provided with the distribution.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY VINCENT DRIESSEN ``AS IS'' AND ANY EXPRESS OR\n\n# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n\n# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO\n\n# EVENT SHALL VINCENT DRIESSEN OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n\n# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n\n# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\n# OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\n# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n\n# EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n# \n\n# The views and conclusions contained in the software and documentation are\n\n# those of the authors and should not be interpreted as representing official\n\n# policies, either expressed or implied, of Vincent Driessen.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# files that need mode 755\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# files that need mode 644\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    }
  },
  "FileTypes" : {
    "CMAKE" : 59,
    "MAKEFILE" : 2
  },
  "ElapsedTime" : 8942
}