{
  "Repository" : "7255517",
  "Revision" : "HEAD",
  "ObjectId" : "46fec110b7f7570f9e50e6b042f2f6956db8e992",
  "CommitTime" : "2019-04-09T20:51:25Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "babcb3f8594e02df2f00c4a51fac66fcacdd4de6",
      "LastModified" : "2019-02-06T16:18:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################\n\n# cmake file for building Marlin example Package\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########################################################\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# project name\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# project version; before changing this, read README.release_procedure\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# These switches activate/deactivate compiler switches such as the\n\n# inclusion of debugging symbols and code optimizations. For actual\n\n# data analysis we recommend setting CMAKE_BUILD_TYPE to \"Release\"\n\n# while for development \"RelWithDebInfo\" is best used. For actual\n\n# debugging e.g. using gdb, please consider \"Debug\" which will turn\n\n# off all (!) optimizations but will be \"gdb-friendlier\"\n\n# !RELEASE: comment out the following line and comment in either one of the release ones\n\n# SET( CMAKE_BUILD_TYPE Debug ) # use for debugging with e.g. gdb: add. warnings, no optimizations, debug symbols\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# useful for normal development, runs faster but compilation takes longer: gcc optimizations (-O2) with debug symbols and add. warnings\n",
        "Line" : 22,
        "CharPositionInLine" : 39
      },
      "6" : {
        "Text" : "#SET( CMAKE_BUILD_TYPE Release ) # for production: full gcc optimization (-O3), no debug symbols, no debug messages\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "### DEPENDENCIES ############################################################\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# load default settings from ILCSOFT_CMAKE_MODULES\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# additional packages to be searched for by cmake\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# search for Eigen (linear algebra) library\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# include them as SYSTEM include directories, this will supress all warnings from them\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Geant4 and dependencies + Allpix\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# General Broken Line track fitter as shared lib:\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# include as \"system\" libraries: gcc will be less verbose w.r.t. warnings\n",
        "Line" : 57,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "### LIBRARY #################################################################\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#GBL\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#Allpix\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# two ROOT libraries which are not always included in \"root-config --glibs\"\n",
        "Line" : 84,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "#AIDA\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#GSL\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# these are needed anyway...\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "## remove CED installation in next release\n\n#ADD_DEFINITIONS( \"-DUSE_CED\" )\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# !RELEASE: switches on output parsed for automatic nightly tests\n\n# (only useful if using CDash web frontend to CTest otherwise produces superfluous output)\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# ---------------------------------------------------------------------------\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# include directories\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# definitions to pass to the compiler\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# debuging warnings and switches - only active if  CMAKE_BUILD_TYPE  is set to debug\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# also useful: -Wshadow (however, GCC 4.1 uses this even for system libraries, causing many warnings from Marlin & co)\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "############ Add libraries ########################################\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Main EUTelescope Library\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Processor Library\n",
        "Line" : 169,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# FIXME: making here a copy of shared library because MARLIN_DLL expects libEutelReaders.so; this hack is here only for backward compatibility\n",
        "Line" : 178,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# Pixel Geometry Shared Libraries\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Extract FileName from FileName.cc\n",
        "Line" : 187,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# used for alignment if Eutelescope was build with ROOT support\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#add tools\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# electric fence\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# display some variables and write them to cache\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# create some useful symbolic links in bin directory at install time\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Enable testing\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Include example configurations:\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#  _            _       \n\n# | |_ ___  ___| |_ ___ \n\n# | __/ _ \\/ __| __/ __|\n\n# | ||  __/\\__ \\ |_\\__ \\\n\n#  \\__\\___||___/\\__|___/\n\n#=============================================================================                      \n\n# EUTelescope uses the CMake/CTest framework for daily automated,\n\n#data-driven tests to constantly verify the validity of the output. The\n\n#basis for the tests are the examples provided with the software\n\n#together with a real data sample and the expected output in form of\n\n#root files.\n\n#\n\n#If you are a user of EUTelescope and you have already taken data and\n\n#performed you analysis, we would be very interested in obtaining a\n\n#data sample with the corresponding analysis results including the\n\n#EUTelescope configuration used so that we can include your analysis in\n\n#the regular testing. This guarantees that your analysis will be well\n\n#supported in future releases of EUTelescope and it might serve as a\n\n#good starting point for others.\n\n#\n\n#The test can also be used by any developer who wishes to verify\n\n#changes made to the EUTelescope code. For a short how-to see\n\n#README.tests; for more detailed information see the CMake manual or\n\n#web page (http://www.cmake.org/Wiki/CMake/Testing_With_CTest).\n",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# TEST IF ENVIRONMENT IS OK FOR RUNNING TESTS\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 284,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# try to load build_env.sh environment - if running 'make' from 'build' directory, it should be located in '../'\n",
        "Line" : 295,
        "CharPositionInLine" : 9
      },
      "45" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# ACTUAL TESTS BEGIN HERE\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 306,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# check environment\n",
        "Line" : 310,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# use valgrind for dynamic analysis\n",
        "Line" : 313,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# User Options to be included in DartConfiguration.tcl\n",
        "Line" : 317,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# cppcheck should be a useful check for developers to test their code against\n\n# if cppcheck is installed, offer static code analysis test\n",
        "Line" : 322,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# hint at path /scratch/... used on EUTelTesting server; will also parse $PATH\n",
        "Line" : 324,
        "CharPositionInLine" : 51
      },
      "51" : {
        "Text" : "# Developers: please consider using these tests to verify your code!\n\n# to obtain the necessary data files, please check the corresponding\n\n# README files in the example folders and/or contact the EUTelescope\n\n# software coordinators.\n\n# !RELEASE: the data-driven tests require DESY-AFS access and are not\n\n# useful for typical users (comment out the following lines)\n",
        "Line" : 333,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# for GBL release: legacy status for tests, commented out\n\n#  INCLUDE(jobsub/examples/datura-noDUT/testing.cmake)\n\n#  INCLUDE(jobsub/examples/datura-alone/testing.cmake)\n\n#  INCLUDE(jobsub/examples/anemone-2FEI4/testing.cmake)\n\n#  INCLUDE(jobsub/examples/aconite-4chip/testing.cmake)\n\n#  INCLUDE(jobsub/examples/aconite-4chipLocal/testing.cmake)\n",
        "Line" : 340,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# set custom settings (e.g. tests to be skipped for valgrind)\n",
        "Line" : 347,
        "CharPositionInLine" : 43
      },
      "54" : {
        "Text" : "# /!RELEASE\n",
        "Line" : 350,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 55
    },
    "CTestConfig.cmake" : {
      "ObjectId" : "179c87e1272442dd580d7059191e90190e9ff7e7",
      "LastModified" : "2012-09-21T09:51:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## This file should be placed in the root directory of your project.\n\n## Then modify the CMakeLists.txt file in the root directory of your\n\n## project to incorporate the testing dashboard.\n\n## # The following are required to uses Dart and the Cdash dashboard\n\n##   ENABLE_TESTING()\n\n##   INCLUDE(CTest)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindALLPIX.cmake" : {
      "ObjectId" : "e90865c692cdf430d1116c6ab98edbe4cfed8631",
      "LastModified" : "2013-03-09T23:33:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#########################################################\n\n# cmake module for finding ALLPIX\n\n#\n\n#\n\n# returns:\n\n#   ALLPIX_FOUND        : set to TRUE or FALSE\n\n#   ALLPIX_INCLUDE_DIRS : paths to  includes\n\n#   ALLPIX_LIBRARY_DIRS : paths to  libraries\n\n#   ALLPIX_LIBRARIES    : list of  libraries\n\n#\n\n# @author Igor Rubinskiy, DESY\n\n#########################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#MESSAGE ( STATUS \"${ALLPIX} ALLPIX \")\n\n#MESSAGE ( STATUS \"${ALLPIX_DIR} ALLPIX_DIR \")\n\n#MESSAGE ( STATUS \"${ALLPIX_HOME} ALLPIX_HOME \")\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#SET( ALLPIXLIB \"$ENV{G4WORKDIR}/tmp/Linux-g++/allpix/\")\n\n#MESSAGE ( STATUS \"${ALLPIXLIB}\" )\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# -- fix for backwards compatibility\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#MESSAGE ( STATUS \"ALLPIX: ${ALLPIXLIB} \")\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ---------- includes ---------------------------------------------------------\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ---------- libraries --------------------------------------------------------\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# only standard libraries should be passed as arguments to CHECK_PACKAGE_LIBS\n\n# additional components are set by cmake in variable PKG_FIND_COMPONENTS\n\n# first argument should be the package name\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# ---------- final checking ---------------------------------------------------\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# set ALLPIX_FOUND to TRUE if all listed variables are TRUE and not empty\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#MESSAGE (STATUS \"${ALLPIX}\")\n\n#MESSAGE (STATUS \"${ALLPIX_FOUND}\")\n\n#MESSAGE (STATUS \"${ALLPIX_DIR}\")\n\n#MESSAGE (STATUS \"${ALLPIX_INCLUDE_DIRS}\")\n\n#MESSAGE (STATUS \"${ALLPIX_LIBRARIES}\")\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "cmake/FindEigen2.cmake" : {
      "ObjectId" : "a834b887286045fcdc381633ec95bf204834aadf",
      "LastModified" : "2017-07-12T08:57:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Eigen2 lib\n\n#\n\n# This module supports requiring a minimum version, e.g. you can do\n\n#   find_package(Eigen2 2.0.3)\n\n# to require version 2.0.3 to newer of Eigen2.\n\n#\n\n# Once done this will define\n\n#\n\n#  EIGEN2_FOUND - system has eigen lib with correct version\n\n#  EIGEN2_INCLUDE_DIR - the eigen include directory\n\n#  EIGEN2_VERSION - eigen version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/FindEigen3.cmake" : {
      "ObjectId" : "67717bd2442db5864a6292cb3457cdfd7230c641",
      "LastModified" : "2017-08-02T14:19:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Eigen3 lib\n\n#\n\n# This module supports requiring a minimum version, e.g. you can do\n\n#   find_package(Eigen3 3.1.2)\n\n# to require version 3.1.2 or newer of Eigen3.\n\n#\n\n# Once done this will define\n\n#\n\n#  EIGEN3_FOUND - system has eigen lib with correct version\n\n#  EIGEN3_INCLUDE_DIR - the eigen include directory\n\n#  EIGEN3_VERSION - eigen version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Copyright (c) 2009 Benoit Jacob <jacob.benoit.1@gmail.com>\n\n# Redistribution and use is allowed according to the terms of the 2-clause BSD license.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/FindG4.cmake" : {
      "ObjectId" : "5276be14000a23ef8ed1cc7d6a7897139dd8af96",
      "LastModified" : "2017-07-12T08:57:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# cmake module for finding G4\n\n#\n\n# returns:\n\n#   G4_FOUND         : set to TRUE or FALSE\n\n#   G4_INCLUDE_DIRS  : paths to G4 includes\n\n#   G4_LIBRARY_DIRS  : paths to G4 libraries\n\n#   G4_LIBRARIES     : list of G4 libraries (either set to\n\n#       libCGAPack - if found  - OR - G4 libraries in $G4/tmp )\n\n#   G4_CGA_FOUND     : set to TRUE or FALSE (checks for libCGAPack)\n\n#\n\n# @author Jan Engels, DESY\n\n########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# message ( \"${G4_INCLUDE_DIRS}\" )  \n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ---------- final checking ---------------------------------------------------\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# set G4_FOUND to TRUE if all listed variables are TRUE and not empty\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/FindGBL.cmake" : {
      "ObjectId" : "373938b6ac10b7dd36549de88e556626aebd90f2",
      "LastModified" : "2013-03-11T12:20:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#########################################################\n\n# cmake module for finding GBL\n\n#\n\n#\n\n# returns:\n\n#   GBL_FOUND        : set to TRUE or FALSE\n\n#   GBL_INCLUDE_DIRS : paths to gsl includes\n\n#   GBL_LIBRARY_DIRS : paths to gsl libraries\n\n#   GBL_LIBRARIES    : list of gsl libraries\n\n#\n\n# @author Jan Engels, DESY\n\n#########################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -- fix for backwards compatibility\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#MESSAGE (STATUS \"gbl_home: ${GBL_HOME}\")\n\n#MESSAGE (STATUS \"env gbl_home: $ENV{GBL_HOME}\")\n\n#MESSAGE (STATUS \"env gbl: $ENV{GBL}\")\n\n#MESSAGE (STATUS \"gbl_dir: ${GBL_DIR}\")\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ---------- includes ---------------------------------------------------------\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#INCLUDE_DIRECTORIES( ${GBL_INCLUDE_DIRS} )\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ---------- libraries --------------------------------------------------------\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# GBL library lives in bin directory rather than in lib\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# only standard libraries should be passed as arguments to CHECK_PACKAGE_LIBS\n\n# additional components are set by cmake in variable PKG_FIND_COMPONENTS\n\n# first argument should be the package name\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# ---------- final checking ---------------------------------------------------\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# set GBL_FOUND to TRUE if all listed variables are TRUE and not empty\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "cmake/FindXERCESC.cmake" : {
      "ObjectId" : "18a5496a049c6ee76d1fd794ec994fb403041c08",
      "LastModified" : "2017-07-12T08:57:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find XERCESC\n\n# This module tries to find the XERCESC library and headers.\n\n# Once done this will define\n\n#\n\n#   XERCESC_FOUND - system has XERCESC headers and libraries\n\n#   XERCESC_INCLUDE_DIRS - the include directories needed for XERCESC\n\n#   XERCESC_LIBRARIES - the libraries needed to use XERCESC\n\n#\n\n# Variables used by this module, which can change the default behaviour and\n\n# need to be set before calling find_package:\n\n#\n\n#   XercesC_HOME            Root directory to XERCESC installation. Will\n\n#                               be used ahead of CMake default path.\n\n#\n\n# The following advanced variables may be used if the module has difficulty\n\n# locating XERCESC or you need fine control over what is used.\n\n#\n\n#   XERCESC_INCLUDE_DIR\n\n#\n\n#   XERCESC_LIBRARY\n\n#\n\n# Copyright (c) 2009, Ben Morgan, <Ben.Morgan@warwick.ac.uk>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Look for the header - preferentially searching below XercesC_HOME\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If we didn't find it there, fall back to some standard search paths\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# -printf \"%p;\" # not recognized on mac osx\n",
        "Line" : 47,
        "CharPositionInLine" : 58
      },
      "4" : {
        "Text" : "# Look for the library, preferentially searching below XercesC_HOME\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "ctest/CMakeLists.txt" : {
      "ObjectId" : "9e03a6c0623f4a2b2380279bc55d7138f003eebe",
      "LastModified" : "2019-01-09T14:06:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check for number of arguments - should only be one:\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Escape possible regex patterns in the expected output:\n",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Escape possible regex patterns in the expected output:\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#    STRING(REPLACE \"\\\\\" \"\\\\\\\\\" _TMP_STR \"${_TMP_STR}\")\n\n#    STRING(REPLACE \"?\" \"\\\\?\" _TMP_STR \"${_TMP_STR}\")\n\n#    STRING(REPLACE \"+\" \"\\\\+\" _TMP_STR \"${_TMP_STR}\")\n\n#    STRING(REPLACE \"*\" \"\\\\*\" _TMP_STR \"${_TMP_STR}\")\n\n#    STRING(REPLACE \"(\" \"\\\\\\(\" _TMP_STR \"${_TMP_STR}\")\n\n#    STRING(REPLACE \")\" \"\\\\\\)\" _TMP_STR \"${_TMP_STR}\")\n\n#    STRING(REPLACE \"[\" \"\\\\\\[\" _TMP_STR \"${_TMP_STR}\")\n\n#    STRING(REPLACE \"]\" \"\\\\\\]\" _TMP_STR \"${_TMP_STR}\")\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Allow the test to specify additional CLI parameters:\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Parse configuration file for pass/fail conditions:\n",
        "Line" : 76,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Some tests might depend on others:\n",
        "Line" : 85,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Add individual timeout criteria:\n",
        "Line" : 92,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "##############################\n\n#  aconite-4chipLocal tests  #\n\n##############################\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "##############################\n\n#  gbl_local tests           #\n\n##############################\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "doc/CMakeLists.txt" : {
      "ObjectId" : "fc439815debe778e3bf8fe10f47e7eb524fea091",
      "LastModified" : "2011-01-18T10:40:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################\n\n# cmake file for building Eutelescope documentation\n\n# @author Jan Engels, DESY\n\n########################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# build documentation out-of-source\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# directories to search for documentation\n\n#SET( DOX_INPUT introduction.html ../include ../src )\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# custom command to build documentation\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#DOX_INPUT=\"${DOX_INPUT}\"\n",
        "Line" : 25,
        "CharPositionInLine" : 16
      },
      "5" : {
        "Text" : "# add doc target\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# make sure doxygen is executed (make doc) before make install\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# in-source vs out-of-source installations\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# --- in-source installations ---\n",
        "Line" : 52,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# keep source tree clean\n",
        "Line" : 55,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# --- out-of-source installations ---\n",
        "Line" : 63,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 11
    },
    "jobsub/examples/legacy/aconite-4chip/testing.cmake" : {
      "ObjectId" : "d85cb30b7e7ec99efe7524dd46bea6d256a8c77b",
      "LastModified" : "2019-01-09T14:06:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# This file defines a number of data-driven test based on the example configuration\n\n# in this directory. If you have access the the files and paths defined below you\n\n# can run the tests by running 'make test' in the build directory in the EUTelescope root\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ======================================================================\n\n# ======================================================================\n\n# TestJobsubExampleAconite-4chip: based on config in jobsub/examples/aconite-4chip\n\n# ======================================================================\n\n# ======================================================================\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# the run number\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# run number padded with leading zeros\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# only needed in the last step to test the results of EUTel against a set of reference files:\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# SET( referencedatadir \"/home/ilcsoft/EutelTestData/TestExampleAnemone2FEI4\" )\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# options: use config, use csv, change native path to central AFS location, reduce number of events to 200k\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# all this regular expressions must be matched for the tests to pass.\n\n# the order of the expressions must be matched in the test execution!\n\n# additional statements can be defined for each test individually\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#\n\n#  STEP 0: PREPARE TEST DIRECTORY\n\n#\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#  STEP 1: CONVERTER\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# test will pass if ALL of the following expressions are matched\n",
        "Line" : 57,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# test will fail if ANY of the following expressions is matched \n",
        "Line" : 59,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# test depends on earlier steps\n",
        "Line" : 61,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# converter step sometimes takes a bit longer (in s)\n",
        "Line" : 63,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# now check if the expected output files exist and look ok\n",
        "Line" : 68,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "#\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#  STEP 2: CLUSTERING\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# test will pass if ALL of the following expressions are matched\n",
        "Line" : 97,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# test will fail if ANY of the following expressions is matched \n",
        "Line" : 99,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# test depends on earlier steps\n",
        "Line" : 101,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "# now check if the expected output files exist and look ok\n",
        "Line" : 104,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "#TODO: FIXME!!!\n\n# we expect an average of 24.4 clusters per event\n\n#ADD_TEST( TestJobsubExampleAconite-4chipClusteringOutput sh -c \"[ -f ${testdir}/output/results/run${PaddedRunNr}-clu.slcio ] && lcio_check_col_elements --average --expelements 38 --relelementerror 0.1 cluster_m26 ${testdir}/output/results/run${PaddedRunNr}-clu.slcio\" )\n\n#SET_TESTS_PROPERTIES (TestJobsubExampleAconite-4chipClusteringOutput PROPERTIES DEPENDS TestJobsubExampleAconite-4chipClusteringRun)\n",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "#\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#  STEP 3: HITMAKER\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# test will pass if ALL of the following expressions are matched\n",
        "Line" : 127,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "# test will fail if ANY of the following expressions is matched \n",
        "Line" : 129,
        "CharPositionInLine" : 8
      },
      "24" : {
        "Text" : "# test depends on earlier steps\n",
        "Line" : 131,
        "CharPositionInLine" : 1
      },
      "25" : {
        "Text" : "# now check if the expected output files exist and look ok\n",
        "Line" : 134,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "#TODO: FIXME\n\n# we expect an average hit number of 24 for run 97 (wide geometry) using the example configuration\n\n#ADD_TEST( TestJobsubExampleAconite-4chipHitmakerOutput sh -c \"[ -f ${testdir}/output/results/run${PaddedRunNr}-hit.slcio ] && lcio_check_col_elements -a --expelements 39 --relelementerror 0.1 hit ${testdir}/output/results/run${PaddedRunNr}-hit.slcio\" )\n\n#SET_TESTS_PROPERTIES (TestJobsubExampleAconite-4chipHitmakerOutput PROPERTIES DEPENDS TestJobsubExampleAconite-4chipHitmakerRun)\n",
        "Line" : 144,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "#\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#  STEP 4: ALIGNMENT\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# all this regular expressions must be matched for the test to pass\n",
        "Line" : 155,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# test will pass if ALL of the following expressions are matched\n",
        "Line" : 163,
        "CharPositionInLine" : 8
      },
      "30" : {
        "Text" : "# test will fail if ANY of the following expressions is matched \n",
        "Line" : 165,
        "CharPositionInLine" : 8
      },
      "31" : {
        "Text" : "# test depends on earlier steps\n",
        "Line" : 167,
        "CharPositionInLine" : 1
      },
      "32" : {
        "Text" : "# now check if the expected output files exist and look ok\n",
        "Line" : 170,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "#\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#  STEP 5: FITTER\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#SET( fit_pass_regex_1 \"Total number of reconstructed tracks *[0-9][0-9][0-9][0-9][0-9]+\" )\n",
        "Line" : 192,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# test will pass if ALL of the following expressions are matched\n",
        "Line" : 198,
        "CharPositionInLine" : 8
      },
      "36" : {
        "Text" : "# test will fail if ANY of the following expressions is matched \n",
        "Line" : 200,
        "CharPositionInLine" : 8
      },
      "37" : {
        "Text" : "# test depends on earlier steps\n",
        "Line" : 202,
        "CharPositionInLine" : 1
      },
      "38" : {
        "Text" : "# now check if the expected output files exist and look ok\n",
        "Line" : 205,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "# we expect to see between 1 and 3 tracks in every event \n\n# but tolerate if this is not the case in 40% of the events (empty events are counted)\n",
        "Line" : 212,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "#\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#  STEP 6: StatTest\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#\n\n#    SET( executable \"python ${stattestdir}/runtests.py\" )\n\n#\n\n#    # all this regular expressions must be matched for the test to pass\n\n#    SET( fit_pass_regex_1 \"SUCCESS\" )\n\n#    SET( fit_fail_regex \"FAILED\" \"NOT PASSED\" \"segmentation violation\")\n\n#\n\n#    # run stattest tool on output from previous step and test it against reference file; test are configured in specified config file (*.qa)\n\n#\n\n#    ADD_TEST( TestJobsubExampleAconite-4chipStatTestClustering sh -c \"PYTHONPATH=$ROOTSYS/lib:$PYTHONPATH ${executable} --cdash -g ${testdir}/output/stattest_report_clus.pdf ${referencedatadir}/StatTestConf_Anemone2FEI4Clustering.qa ${testdir}/output/histograms/run${PaddedRunNr}-clu-histo.root ${referencedatadir}/run${PaddedRunNr}-clu-histo.root\" )\n\n#    SET_TESTS_PROPERTIES (TestJobsubExampleAconite-4chipStatTestClustering PROPERTIES\n\n#        # test will pass if ALL of the following expressions are matched\n\n#        PASS_REGULAR_EXPRESSION \"${fit_pass_regex_1}\"\n\n#        # test will fail if ANY of the following expressions is matched \n\n#        FAIL_REGULAR_EXPRESSION \"${fit_fail_regex}\"\n\n#\t# test depends on earlier steps\n\n#\tDEPENDS TestJobsubExampleAconite-4chipClusteringRun\n\n#\t)\n\n#\n\n#\n\n#    ADD_TEST( TestJobsubExampleAconite-4chipStatTestAlign sh -c \"PYTHONPATH=$ROOTSYS/lib:$PYTHONPATH ${executable} --cdash -g ${testdir}/output/stattest_report_align.pdf ${referencedatadir}/StatTestConf_Anemone2FEI4Align.qa ${testdir}/output/histograms/run${PaddedRunNr}-align-histo.root ${referencedatadir}/run${PaddedRunNr}-align-histo.root\" )\n\n#    SET_TESTS_PROPERTIES (TestJobsubExampleAconite-4chipStatTestAlign PROPERTIES\n\n#        # test will pass if ALL of the following expressions are matched\n\n#        PASS_REGULAR_EXPRESSION \"${fit_pass_regex_1}\"\n\n#        # test will fail if ANY of the following expressions is matched \n\n#        FAIL_REGULAR_EXPRESSION \"${fit_fail_regex}\"\n\n#\t# test depends on earlier steps\n\n#\tDEPENDS TestJobsubExampleAconite-4chipAlignRun\n\n#\t)\n\n#\n\n#\n\n#    ADD_TEST( TestJobsubExampleAconite-4chipStatTestFitter sh -c \"PYTHONPATH=$ROOTSYS/lib:$PYTHONPATH ${executable} --cdash  -g${testdir}/output/stattest_report_fitter.pdf ${referencedatadir}/StatTestConf_Anemone2FEI4Fitter.qa ${testdir}/output/histograms/run${PaddedRunNr}-track-histo.root ${referencedatadir}/run${PaddedRunNr}-track-histo.root\" )\n\n#    SET_TESTS_PROPERTIES (TestJobsubExampleAconite-4chipStatTestFitter PROPERTIES\n\n#        # test will pass if ALL of the following expressions are matched\n\n#        PASS_REGULAR_EXPRESSION \"${fit_pass_regex_1}\"\n\n#        # test will fail if ANY of the following expressions is matched \n\n#        FAIL_REGULAR_EXPRESSION \"${fit_fail_regex}\"\n\n#\t# test depends on earlier steps\n\n#\tDEPENDS TestJobsubExampleAconite-4chipFitterRun\n\n#\t)\n\n#\n\n#\n\n##\n\n## +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n##  STEP 7: MemChecks\n\n## +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n##\n\n#  # STEP 1-5 VARIANTS USED FOR MEMCHECKS ONLY:\n\n#    SET( executable python -tt ${jobsubdir}/jobsub.py )\n\n#    # options for memcheck runs: reduced run range, plain output for valgrind parsing\n\n#    SET( jobsubMemCheckOptions --config=${exampledir}/config.cfg -csv ${exampledir}/runlist.csv -o NativePath=${referencedatadir} -o MaxRecordNumber=2000 -o MemCheckFlag=MemCheck --plain)\n\n#\n\n#  # Converter run with reduced run range\n\n#    ADD_TEST( NAME TestJobsubExampleAconite-4chipConverterRunMemCheck\n\n#              WORKING_DIRECTORY \"${testdir}\"\n\n#\t      COMMAND ${executable} ${jobsubMemCheckOptions} converter ${RunNr} )\n\n#    SET_TESTS_PROPERTIES (TestJobsubExampleAconite-4chipConverterRunMemCheck PROPERTIES\n\n#        PASS_REGULAR_EXPRESSION \"${jobsub_pass_regex_1}.*${marlin_pass_regex_1}.*${jobsub_pass_regex_2}\"\n\n#        FAIL_REGULAR_EXPRESSION \"${generic_fail_regex}\"\n\n#    )\n\n#\n\n#    ADD_TEST( NAME TestJobsubExampleAconite-4chipClusteringRunMemCheck\n\n#              WORKING_DIRECTORY ${testdir} \n\n#\t      COMMAND ${executable} ${jobsubMemCheckOptions} clustering ${RunNr} )\n\n#    SET_TESTS_PROPERTIES (TestJobsubExampleAconite-4chipClusteringRunMemCheck PROPERTIES\n\n#        PASS_REGULAR_EXPRESSION \"${jobsub_pass_regex_1}.*${marlin_pass_regex_1}.*${jobsub_pass_regex_2}\"\n\n#        FAIL_REGULAR_EXPRESSION \"${generic_fail_regex}\"\n\n#\t)\n\n#\n\n#    ADD_TEST( NAME TestJobsubExampleAconite-4chipHitmakerRunMemCheck\n\n#              WORKING_DIRECTORY ${testdir} \n\n#\t      COMMAND ${executable} ${jobsubMemCheckOptions} hitmaker ${RunNr} )\n\n#    SET_TESTS_PROPERTIES (TestJobsubExampleAconite-4chipHitmakerRunMemCheck PROPERTIES\n\n#        PASS_REGULAR_EXPRESSION \"${jobsub_pass_regex_1}.*${marlin_pass_regex_1}.*${jobsub_pass_regex_2}\"\n\n#        FAIL_REGULAR_EXPRESSION \"${generic_fail_regex}\"\n\n#\t)\n\n#\n\n#    ADD_TEST( NAME TestJobsubExampleAconite-4chipAlignRunMemCheck\n\n#              WORKING_DIRECTORY ${testdir} \n\n#\t      COMMAND ${executable} ${jobsubMemCheckOptions} align ${RunNr} )\n\n#    SET_TESTS_PROPERTIES (TestJobsubExampleAconite-4chipAlignRunMemCheck PROPERTIES\n\n#        PASS_REGULAR_EXPRESSION \"${jobsub_pass_regex_1}.*${marlin_pass_regex_1}.*${jobsub_pass_regex_2}\"\n\n#        FAIL_REGULAR_EXPRESSION \"${generic_fail_regex}\"\n\n#\t)\n\n#\n\n#    ADD_TEST( NAME TestJobsubExampleAconite-4chipFitterRunMemCheck\n\n#              WORKING_DIRECTORY ${testdir} \n\n#\t      COMMAND ${executable} ${jobsubMemCheckOptions} fitter ${RunNr} )\n\n#    SET_TESTS_PROPERTIES (TestJobsubExampleAconite-4chipFitterRunMemCheck PROPERTIES\n\n#        PASS_REGULAR_EXPRESSION \"${jobsub_pass_regex_1}.*${marlin_pass_regex_1}.*${jobsub_pass_regex_2}\"\n\n#        FAIL_REGULAR_EXPRESSION \"${generic_fail_regex}\"\n\n#\t)\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 41
    },
    "jobsub/examples/legacy/aconite-4chipLocal/testing.cmake" : {
      "ObjectId" : "adc23092ff5dfc95179e88aa16a69d3c16928633",
      "LastModified" : "2019-01-09T14:06:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# This file defines a number of data-driven test based on the example configuration\n\n# in this directory. If you have access the the files and paths defined below you\n\n# can run the tests by running 'make test' in the build directory in the EUTelescope root\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ======================================================================\n\n# ======================================================================\n\n# TestJobsubExampleAconite-4chipLocal: based on config in jobsub/examples/aconite-4chip\n\n# ======================================================================\n\n# ======================================================================\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# the run number\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# run number padded with leading zeros\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# only needed in the last step to test the results of EUTel against a set of reference files:\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# options: use config, use csv, change native path to central AFS location, reduce number of events to 200k\n",
        "Line" : 27,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# all this regular expressions must be matched for the tests to pass.\n\n# the order of the expressions must be matched in the test execution!\n\n# additional statements can be defined for each test individually\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#\n\n#  STEP 0: PREPARE TEST DIRECTORY\n\n#\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#  STEP 1: CONVERTER\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# test will pass if ALL of the following expressions are matched\n",
        "Line" : 56,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# test will fail if ANY of the following expressions is matched \n",
        "Line" : 58,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# test depends on earlier steps\n",
        "Line" : 60,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# converter step sometimes takes a bit longer (in s)\n",
        "Line" : 62,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# now check if the expected output files exist and look ok\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "#\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#  STEP 2: CLUSTERING\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# test will pass if ALL of the following expressions are matched\n",
        "Line" : 95,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# test will fail if ANY of the following expressions is matched \n",
        "Line" : 97,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# test depends on earlier steps\n",
        "Line" : 99,
        "CharPositionInLine" : 1
      },
      "18" : {
        "Text" : "# now check if the expected output files exist and look ok\n",
        "Line" : 102,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "#\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#  STEP 3: HITMAKER\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# test will pass if ALL of the following expressions are matched\n",
        "Line" : 118,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "# test will fail if ANY of the following expressions is matched \n",
        "Line" : 120,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# test depends on earlier steps\n",
        "Line" : 122,
        "CharPositionInLine" : 1
      },
      "23" : {
        "Text" : "# now check if the expected output files exist and look ok\n",
        "Line" : 125,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "#\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#  STEP 4: ALIGNMENT\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# all this regular expressions must be matched for the test to pass\n",
        "Line" : 140,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# test will pass if ALL of the following expressions are matched\n",
        "Line" : 148,
        "CharPositionInLine" : 8
      },
      "27" : {
        "Text" : "# test will fail if ANY of the following expressions is matched \n",
        "Line" : 150,
        "CharPositionInLine" : 8
      },
      "28" : {
        "Text" : "# test depends on earlier steps\n",
        "Line" : 152,
        "CharPositionInLine" : 1
      },
      "29" : {
        "Text" : "# now check if the expected output files exist and look ok\n",
        "Line" : 155,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "#\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#  STEP 5: FITTER\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#SET( fit_pass_regex_1 \"Total number of reconstructed tracks *[0-9][0-9][0-9][0-9][0-9]+\" )\n",
        "Line" : 170,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# test will pass if ALL of the following expressions are matched\n",
        "Line" : 176,
        "CharPositionInLine" : 8
      },
      "33" : {
        "Text" : "# test will fail if ANY of the following expressions is matched \n",
        "Line" : 178,
        "CharPositionInLine" : 8
      },
      "34" : {
        "Text" : "# test depends on earlier steps\n",
        "Line" : 180,
        "CharPositionInLine" : 1
      },
      "35" : {
        "Text" : "# now check if the expected output files exist and look ok\n",
        "Line" : 183,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# we expect to see between 1 and 3 tracks in every event \n\n# but tolerate if this is not the case in 40% of the events (empty events are counted)\n",
        "Line" : 190,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "#\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#  STEP 6: StatTest\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#\n\n#    SET( executable \"python ${stattestdir}/runtests.py\" )\n\n#\n\n#    # all this regular expressions must be matched for the test to pass\n\n#    SET( fit_pass_regex_1 \"SUCCESS\" )\n\n#    SET( fit_fail_regex \"FAILED\" \"NOT PASSED\" \"segmentation violation\")\n\n#\n\n#    # run stattest tool on output from previous step and test it against reference file; test are configured in specified config file (*.qa)\n\n#\n\n#    ADD_TEST( TestJobsubExampleAconite-4chipLocalStatTestClustering sh -c \"PYTHONPATH=$ROOTSYS/lib:$PYTHONPATH ${executable} --cdash -g ${testdir}/output/stattest_report_clus.pdf ${referencedatadir}/StatTestConf_Anemone2FEI4Clustering.qa ${testdir}/output/histograms/run${PaddedRunNr}-clu-histo.root ${referencedatadir}/run${PaddedRunNr}-clu-histo.root\" )\n\n#    SET_TESTS_PROPERTIES (TestJobsubExampleAconite-4chipLocalStatTestClustering PROPERTIES\n\n#        # test will pass if ALL of the following expressions are matched\n\n#        PASS_REGULAR_EXPRESSION \"${fit_pass_regex_1}\"\n\n#        # test will fail if ANY of the following expressions is matched \n\n#        FAIL_REGULAR_EXPRESSION \"${fit_fail_regex}\"\n\n#\t# test depends on earlier steps\n\n#\tDEPENDS TestJobsubExampleAconite-4chipLocalClusteringRun\n\n#\t)\n\n#\n\n#\n\n#    ADD_TEST( TestJobsubExampleAconite-4chipLocalStatTestAlign sh -c \"PYTHONPATH=$ROOTSYS/lib:$PYTHONPATH ${executable} --cdash -g ${testdir}/output/stattest_report_align.pdf ${referencedatadir}/StatTestConf_Anemone2FEI4Align.qa ${testdir}/output/histograms/run${PaddedRunNr}-align-histo.root ${referencedatadir}/run${PaddedRunNr}-align-histo.root\" )\n\n#    SET_TESTS_PROPERTIES (TestJobsubExampleAconite-4chipLocalStatTestAlign PROPERTIES\n\n#        # test will pass if ALL of the following expressions are matched\n\n#        PASS_REGULAR_EXPRESSION \"${fit_pass_regex_1}\"\n\n#        # test will fail if ANY of the following expressions is matched \n\n#        FAIL_REGULAR_EXPRESSION \"${fit_fail_regex}\"\n\n#\t# test depends on earlier steps\n\n#\tDEPENDS TestJobsubExampleAconite-4chipLocalAlignRun\n\n#\t)\n\n#\n\n#\n\n#    ADD_TEST( TestJobsubExampleAconite-4chipLocalStatTestFitter sh -c \"PYTHONPATH=$ROOTSYS/lib:$PYTHONPATH ${executable} --cdash  -g${testdir}/output/stattest_report_fitter.pdf ${referencedatadir}/StatTestConf_Anemone2FEI4Fitter.qa ${testdir}/output/histograms/run${PaddedRunNr}-track-histo.root ${referencedatadir}/run${PaddedRunNr}-track-histo.root\" )\n\n#    SET_TESTS_PROPERTIES (TestJobsubExampleAconite-4chipLocalStatTestFitter PROPERTIES\n\n#        # test will pass if ALL of the following expressions are matched\n\n#        PASS_REGULAR_EXPRESSION \"${fit_pass_regex_1}\"\n\n#        # test will fail if ANY of the following expressions is matched \n\n#        FAIL_REGULAR_EXPRESSION \"${fit_fail_regex}\"\n\n#\t# test depends on earlier steps\n\n#\tDEPENDS TestJobsubExampleAconite-4chipLocalFitterRun\n\n#\t)\n\n#\n\n#\n\n##\n\n## +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n##  STEP 7: MemChecks\n\n## +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n##\n\n#  # STEP 1-5 VARIANTS USED FOR MEMCHECKS ONLY:\n\n#    SET( executable python -tt ${jobsubdir}/jobsub.py )\n\n#    # options for memcheck runs: reduced run range, plain output for valgrind parsing\n\n#    SET( jobsubMemCheckOptions --config=${exampledir}/config.cfg -csv ${exampledir}/runlist.csv -o NativePath=${referencedatadir} -o MaxRecordNumber=2000 -o MemCheckFlag=MemCheck --plain)\n\n#\n\n#  # Converter run with reduced run range\n\n#    ADD_TEST( NAME TestJobsubExampleAconite-4chipLocalConverterRunMemCheck\n\n#              WORKING_DIRECTORY \"${testdir}\"\n\n#\t      COMMAND ${executable} ${jobsubMemCheckOptions} converter ${RunNr} )\n\n#    SET_TESTS_PROPERTIES (TestJobsubExampleAconite-4chipLocalConverterRunMemCheck PROPERTIES\n\n#        PASS_REGULAR_EXPRESSION \"${jobsub_pass_regex_1}.*${marlin_pass_regex_1}.*${jobsub_pass_regex_2}\"\n\n#        FAIL_REGULAR_EXPRESSION \"${generic_fail_regex}\"\n\n#    )\n\n#\n\n#    ADD_TEST( NAME TestJobsubExampleAconite-4chipLocalClusteringRunMemCheck\n\n#              WORKING_DIRECTORY ${testdir} \n\n#\t      COMMAND ${executable} ${jobsubMemCheckOptions} clustering ${RunNr} )\n\n#    SET_TESTS_PROPERTIES (TestJobsubExampleAconite-4chipLocalClusteringRunMemCheck PROPERTIES\n\n#        PASS_REGULAR_EXPRESSION \"${jobsub_pass_regex_1}.*${marlin_pass_regex_1}.*${jobsub_pass_regex_2}\"\n\n#        FAIL_REGULAR_EXPRESSION \"${generic_fail_regex}\"\n\n#\t)\n\n#\n\n#    ADD_TEST( NAME TestJobsubExampleAconite-4chipLocalHitmakerRunMemCheck\n\n#              WORKING_DIRECTORY ${testdir} \n\n#\t      COMMAND ${executable} ${jobsubMemCheckOptions} hitmaker ${RunNr} )\n\n#    SET_TESTS_PROPERTIES (TestJobsubExampleAconite-4chipLocalHitmakerRunMemCheck PROPERTIES\n\n#        PASS_REGULAR_EXPRESSION \"${jobsub_pass_regex_1}.*${marlin_pass_regex_1}.*${jobsub_pass_regex_2}\"\n\n#        FAIL_REGULAR_EXPRESSION \"${generic_fail_regex}\"\n\n#\t)\n\n#\n\n#    ADD_TEST( NAME TestJobsubExampleAconite-4chipLocalAlignRunMemCheck\n\n#              WORKING_DIRECTORY ${testdir} \n\n#\t      COMMAND ${executable} ${jobsubMemCheckOptions} align ${RunNr} )\n\n#    SET_TESTS_PROPERTIES (TestJobsubExampleAconite-4chipLocalAlignRunMemCheck PROPERTIES\n\n#        PASS_REGULAR_EXPRESSION \"${jobsub_pass_regex_1}.*${marlin_pass_regex_1}.*${jobsub_pass_regex_2}\"\n\n#        FAIL_REGULAR_EXPRESSION \"${generic_fail_regex}\"\n\n#\t)\n\n#\n\n#    ADD_TEST( NAME TestJobsubExampleAconite-4chipLocalFitterRunMemCheck\n\n#              WORKING_DIRECTORY ${testdir} \n\n#\t      COMMAND ${executable} ${jobsubMemCheckOptions} fitter ${RunNr} )\n\n#    SET_TESTS_PROPERTIES (TestJobsubExampleAconite-4chipLocalFitterRunMemCheck PROPERTIES\n\n#        PASS_REGULAR_EXPRESSION \"${jobsub_pass_regex_1}.*${marlin_pass_regex_1}.*${jobsub_pass_regex_2}\"\n\n#        FAIL_REGULAR_EXPRESSION \"${generic_fail_regex}\"\n\n#\t)\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 38
    },
    "jobsub/examples/legacy/anemone-2FEI4/testing.cmake" : {
      "ObjectId" : "fd1759cfa743702c0ab6719522ad5fa2208ec236",
      "LastModified" : "2019-01-09T14:06:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# This file defines a number of data-driven test based on the example configuration\n\n# in this directory. If you have access the the files and paths defined below you\n\n# can run the tests by running 'make test' in the build directory in the EUTelescope root\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ======================================================================\n\n# ======================================================================\n\n# TestJobsubExampleAnemone2FEI4: based on config in jobsub/examples/anemone-2FEI4\n\n# ======================================================================\n\n# ======================================================================\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# the run number\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# run number padded with leading zeros\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# only needed in the last step to test the results of EUTel against a set of reference files:\n",
        "Line" : 22,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "#    SET( referencedatadir \"/home/ilcsoft/EutelTestData/TestExampleAnemone2FEI4\" )\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# options: use config, use csv, change native path to central AFS location, reduce number of events to 200k\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# all this regular expressions must be matched for the tests to pass.\n\n# the order of the expressions must be matched in the test execution!\n\n# additional statements can be defined for each test individually\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#\n\n#  STEP 0: PREPARE TEST DIRECTORY\n\n#\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#  STEP 1: CONVERTER\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# test will pass if ALL of the following expressions are matched\n",
        "Line" : 57,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# test will fail if ANY of the following expressions is matched \n",
        "Line" : 59,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# test depends on earlier steps\n",
        "Line" : 61,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# converter step sometimes takes a bit longer (in s)\n",
        "Line" : 63,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# now check if the expected output files exist and look ok\n",
        "Line" : 68,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "#\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#  STEP 2: CLUSTERING\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# test will pass if ALL of the following expressions are matched\n",
        "Line" : 97,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# test will fail if ANY of the following expressions is matched \n",
        "Line" : 99,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# test depends on earlier steps\n",
        "Line" : 101,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "# now check if the expected output files exist and look ok\n",
        "Line" : 104,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# we expect an average of 24.4 clusters per event for M26\n",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# we expect an average of 2.1 clusters per event for APIX\n",
        "Line" : 115,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "#\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#  STEP 3: HITMAKER\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# test will pass if ALL of the following expressions are matched\n",
        "Line" : 128,
        "CharPositionInLine" : 8
      },
      "24" : {
        "Text" : "# test will fail if ANY of the following expressions is matched \n",
        "Line" : 130,
        "CharPositionInLine" : 8
      },
      "25" : {
        "Text" : "# test depends on earlier steps\n",
        "Line" : 132,
        "CharPositionInLine" : 1
      },
      "26" : {
        "Text" : "# now check if the expected output files exist and look ok\n",
        "Line" : 135,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# we expect an average hit number of 24 for run 97 (wide geometry) using the example configuration\n",
        "Line" : 145,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "#\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#  STEP 4: ALIGNMENT\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# all this regular expressions must be matched for the test to pass\n",
        "Line" : 155,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# test will pass if ALL of the following expressions are matched\n",
        "Line" : 163,
        "CharPositionInLine" : 8
      },
      "31" : {
        "Text" : "# test will fail if ANY of the following expressions is matched \n",
        "Line" : 165,
        "CharPositionInLine" : 8
      },
      "32" : {
        "Text" : "# test depends on earlier steps\n",
        "Line" : 167,
        "CharPositionInLine" : 1
      },
      "33" : {
        "Text" : "# now check if the expected output files exist and look ok\n",
        "Line" : 170,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "#\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#  STEP 5: FITTER\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#SET( fit_pass_regex_1 \"Total number of reconstructed tracks *[0-9][0-9][0-9][0-9][0-9]+\" )\n",
        "Line" : 189,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# test will pass if ALL of the following expressions are matched\n",
        "Line" : 195,
        "CharPositionInLine" : 8
      },
      "37" : {
        "Text" : "# test will fail if ANY of the following expressions is matched \n",
        "Line" : 197,
        "CharPositionInLine" : 8
      },
      "38" : {
        "Text" : "# test depends on earlier steps\n",
        "Line" : 199,
        "CharPositionInLine" : 1
      },
      "39" : {
        "Text" : "# now check if the expected output files exist and look ok\n",
        "Line" : 202,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# we expect to see between 1 and 3 tracks in every event \n\n# but tolerate if this is not the case in 40% of the events (empty events are counted)\n",
        "Line" : 209,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "#\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#  STEP 6: StatTest\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# all this regular expressions must be matched for the test to pass\n",
        "Line" : 221,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "# run stattest tool on output from previous step and test it against reference file; test are configured in specified config file (*.qa)\n",
        "Line" : 225,
        "CharPositionInLine" : 4
      },
      "44" : {
        "Text" : "# test will pass if ALL of the following expressions are matched\n",
        "Line" : 229,
        "CharPositionInLine" : 8
      },
      "45" : {
        "Text" : "# test will fail if ANY of the following expressions is matched \n",
        "Line" : 231,
        "CharPositionInLine" : 8
      },
      "46" : {
        "Text" : "# test depends on earlier steps\n",
        "Line" : 233,
        "CharPositionInLine" : 1
      },
      "47" : {
        "Text" : "# test will pass if ALL of the following expressions are matched\n",
        "Line" : 240,
        "CharPositionInLine" : 8
      },
      "48" : {
        "Text" : "# test will fail if ANY of the following expressions is matched \n",
        "Line" : 242,
        "CharPositionInLine" : 8
      },
      "49" : {
        "Text" : "# test depends on earlier steps\n",
        "Line" : 244,
        "CharPositionInLine" : 1
      },
      "50" : {
        "Text" : "# test will pass if ALL of the following expressions are matched\n",
        "Line" : 251,
        "CharPositionInLine" : 8
      },
      "51" : {
        "Text" : "# test will fail if ANY of the following expressions is matched \n",
        "Line" : 253,
        "CharPositionInLine" : 8
      },
      "52" : {
        "Text" : "# test depends on earlier steps\n",
        "Line" : 255,
        "CharPositionInLine" : 1
      },
      "53" : {
        "Text" : "#\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#  STEP 7: MemChecks\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# STEP 1-5 VARIANTS USED FOR MEMCHECKS ONLY:\n",
        "Line" : 265,
        "CharPositionInLine" : 2
      },
      "55" : {
        "Text" : "# options for memcheck runs: reduced run range, plain output for valgrind parsing\n",
        "Line" : 267,
        "CharPositionInLine" : 4
      },
      "56" : {
        "Text" : "# Converter run with reduced run range\n",
        "Line" : 270,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 57
    },
    "jobsub/examples/legacy/datura-150mm-DAF/testing.cmake" : {
      "ObjectId" : "ec1266739c0b84a7e468218ded63f71172419149",
      "LastModified" : "2019-01-09T14:06:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# This file defines a number of data-driven tests based on the example configuration\n\n# in this directory. If you have access the the files and paths defined below you\n\n# can run the tests by running 'make test' in the build directory in the EUTelescope root\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ======================================================================\n\n# ======================================================================\n\n# TestJobsubExampleDaturaAlone: based on config in jobsub/examples/datura-alone\n\n# ======================================================================\n\n# ======================================================================\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# the run number\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# run number padded with leading zeros\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# only needed in the last step to test the results of EUTel against a set of reference files:\n",
        "Line" : 25,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "#\n\n#  STEP 0: PREPARE TEST DIRECTORY\n\n#\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#  STEP 1: CONVERTER\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#\n\n# todo:\n\n#  - currently running only over 10000 events (see steering template); should this number be adjusted and/or tested for (using lcio_event_counter)?\n\n#  - set property DEPENDS to make sure that failure of required steps does not cause following steps to fail as well \n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# all this regular expressions must be matched for the test to pass\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# test will pass if ALL of the following expressions are matched\n",
        "Line" : 55,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# test will fail if ANY of the following expressions is matched \n",
        "Line" : 57,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# test depends on earlier steps\n",
        "Line" : 59,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# now check if the expected output files exist and look ok\n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "#\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#  STEP 2: CLUSTERING\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# all this regular expressions must be matched for the test to pass\n",
        "Line" : 85,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# test will pass if ALL of the following expressions are matched\n",
        "Line" : 96,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# test will fail if ANY of the following expressions is matched \n",
        "Line" : 98,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# test depends on earlier steps\n",
        "Line" : 100,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "# now check if the expected output files exist and look ok\n",
        "Line" : 103,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "#\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#  STEP 3: HITMAKER\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# all this regular expressions must be matched for the test to pass\n",
        "Line" : 123,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# test will pass if ALL of the following expressions are matched\n",
        "Line" : 134,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "# test will fail if ANY of the following expressions is matched \n",
        "Line" : 136,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# test depends on earlier steps\n",
        "Line" : 138,
        "CharPositionInLine" : 1
      },
      "23" : {
        "Text" : "# now check if the expected output files exist and look ok\n",
        "Line" : 141,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# we expect an average hit number of 35 for run 4118 using the example configuration\n",
        "Line" : 151,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "#\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#  STEP 4: ALIGNMENT\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# all this regular expressions must be matched for the test to pass\n",
        "Line" : 161,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# test will pass if ALL of the following expressions are matched\n",
        "Line" : 174,
        "CharPositionInLine" : 8
      },
      "28" : {
        "Text" : "# test will fail if ANY of the following expressions is matched \n",
        "Line" : 176,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : "# test depends on earlier steps\n",
        "Line" : 178,
        "CharPositionInLine" : 1
      },
      "30" : {
        "Text" : "# now check if the expected output files exist and look ok\n",
        "Line" : 181,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "#\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#  STEP 5: FITTER\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# all this regular expressions must be matched for the test to pass\n",
        "Line" : 205,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "#SET( fit_pass_regex_2 \"Total number of reconstructed tracks *[0-9][0-9][0-9][0-9][0-9]+\" )\n",
        "Line" : 207,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# test will pass if ALL of the following expressions are matched\n",
        "Line" : 216,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : "# test will fail if ANY of the following expressions is matched \n",
        "Line" : 218,
        "CharPositionInLine" : 8
      },
      "36" : {
        "Text" : "# test depends on earlier steps\n",
        "Line" : 220,
        "CharPositionInLine" : 1
      },
      "37" : {
        "Text" : "# now check if the expected output files exist and look ok\n",
        "Line" : 223,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# we expect to see between 1 and 7 tracks in every event \n\n# but tolerate if this is not the case in 15% of the events (empty events are not counted!)\n",
        "Line" : 230,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "#\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#  STEP 6: StatTest\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# TODO: ask Andrea Dotti or other Geant4 people for their FindStatTest.cmake \n",
        "Line" : 241,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "# all this regular expressions must be matched for the test to pass\n",
        "Line" : 245,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "# run stattest tool on output from previous step and test it against reference file; test are configured in specified config file (*.qa)\n",
        "Line" : 249,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "# test will pass if ALL of the following expressions are matched\n",
        "Line" : 253,
        "CharPositionInLine" : 8
      },
      "44" : {
        "Text" : "# test will fail if ANY of the following expressions is matched \n",
        "Line" : 255,
        "CharPositionInLine" : 8
      },
      "45" : {
        "Text" : "# test depends on earlier steps\n",
        "Line" : 257,
        "CharPositionInLine" : 1
      },
      "46" : {
        "Text" : "# test will pass if ALL of the following expressions are matched\n",
        "Line" : 264,
        "CharPositionInLine" : 8
      },
      "47" : {
        "Text" : "# test will fail if ANY of the following expressions is matched \n",
        "Line" : 266,
        "CharPositionInLine" : 8
      },
      "48" : {
        "Text" : "# test depends on earlier steps\n",
        "Line" : 268,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 49
    },
    "jobsub/examples/legacy/datura-20mm-DAF/testing.cmake" : {
      "ObjectId" : "ec1266739c0b84a7e468218ded63f71172419149",
      "LastModified" : "2019-01-09T14:06:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# This file defines a number of data-driven tests based on the example configuration\n\n# in this directory. If you have access the the files and paths defined below you\n\n# can run the tests by running 'make test' in the build directory in the EUTelescope root\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ======================================================================\n\n# ======================================================================\n\n# TestJobsubExampleDaturaAlone: based on config in jobsub/examples/datura-alone\n\n# ======================================================================\n\n# ======================================================================\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# the run number\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# run number padded with leading zeros\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# only needed in the last step to test the results of EUTel against a set of reference files:\n",
        "Line" : 25,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "#\n\n#  STEP 0: PREPARE TEST DIRECTORY\n\n#\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#  STEP 1: CONVERTER\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#\n\n# todo:\n\n#  - currently running only over 10000 events (see steering template); should this number be adjusted and/or tested for (using lcio_event_counter)?\n\n#  - set property DEPENDS to make sure that failure of required steps does not cause following steps to fail as well \n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# all this regular expressions must be matched for the test to pass\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# test will pass if ALL of the following expressions are matched\n",
        "Line" : 55,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# test will fail if ANY of the following expressions is matched \n",
        "Line" : 57,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# test depends on earlier steps\n",
        "Line" : 59,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# now check if the expected output files exist and look ok\n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "#\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#  STEP 2: CLUSTERING\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# all this regular expressions must be matched for the test to pass\n",
        "Line" : 85,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# test will pass if ALL of the following expressions are matched\n",
        "Line" : 96,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# test will fail if ANY of the following expressions is matched \n",
        "Line" : 98,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# test depends on earlier steps\n",
        "Line" : 100,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "# now check if the expected output files exist and look ok\n",
        "Line" : 103,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "#\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#  STEP 3: HITMAKER\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# all this regular expressions must be matched for the test to pass\n",
        "Line" : 123,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# test will pass if ALL of the following expressions are matched\n",
        "Line" : 134,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "# test will fail if ANY of the following expressions is matched \n",
        "Line" : 136,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# test depends on earlier steps\n",
        "Line" : 138,
        "CharPositionInLine" : 1
      },
      "23" : {
        "Text" : "# now check if the expected output files exist and look ok\n",
        "Line" : 141,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# we expect an average hit number of 35 for run 4118 using the example configuration\n",
        "Line" : 151,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "#\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#  STEP 4: ALIGNMENT\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# all this regular expressions must be matched for the test to pass\n",
        "Line" : 161,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# test will pass if ALL of the following expressions are matched\n",
        "Line" : 174,
        "CharPositionInLine" : 8
      },
      "28" : {
        "Text" : "# test will fail if ANY of the following expressions is matched \n",
        "Line" : 176,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : "# test depends on earlier steps\n",
        "Line" : 178,
        "CharPositionInLine" : 1
      },
      "30" : {
        "Text" : "# now check if the expected output files exist and look ok\n",
        "Line" : 181,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "#\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#  STEP 5: FITTER\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# all this regular expressions must be matched for the test to pass\n",
        "Line" : 205,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "#SET( fit_pass_regex_2 \"Total number of reconstructed tracks *[0-9][0-9][0-9][0-9][0-9]+\" )\n",
        "Line" : 207,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# test will pass if ALL of the following expressions are matched\n",
        "Line" : 216,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : "# test will fail if ANY of the following expressions is matched \n",
        "Line" : 218,
        "CharPositionInLine" : 8
      },
      "36" : {
        "Text" : "# test depends on earlier steps\n",
        "Line" : 220,
        "CharPositionInLine" : 1
      },
      "37" : {
        "Text" : "# now check if the expected output files exist and look ok\n",
        "Line" : 223,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# we expect to see between 1 and 7 tracks in every event \n\n# but tolerate if this is not the case in 15% of the events (empty events are not counted!)\n",
        "Line" : 230,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "#\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#  STEP 6: StatTest\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# TODO: ask Andrea Dotti or other Geant4 people for their FindStatTest.cmake \n",
        "Line" : 241,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "# all this regular expressions must be matched for the test to pass\n",
        "Line" : 245,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "# run stattest tool on output from previous step and test it against reference file; test are configured in specified config file (*.qa)\n",
        "Line" : 249,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "# test will pass if ALL of the following expressions are matched\n",
        "Line" : 253,
        "CharPositionInLine" : 8
      },
      "44" : {
        "Text" : "# test will fail if ANY of the following expressions is matched \n",
        "Line" : 255,
        "CharPositionInLine" : 8
      },
      "45" : {
        "Text" : "# test depends on earlier steps\n",
        "Line" : 257,
        "CharPositionInLine" : 1
      },
      "46" : {
        "Text" : "# test will pass if ALL of the following expressions are matched\n",
        "Line" : 264,
        "CharPositionInLine" : 8
      },
      "47" : {
        "Text" : "# test will fail if ANY of the following expressions is matched \n",
        "Line" : 266,
        "CharPositionInLine" : 8
      },
      "48" : {
        "Text" : "# test depends on earlier steps\n",
        "Line" : 268,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 49
    },
    "jobsub/examples/legacy/datura-alone/testing.cmake" : {
      "ObjectId" : "79de3c166a87ec75b04a0ef83eb466c15484507a",
      "LastModified" : "2019-01-09T14:06:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# This file defines a number of data-driven tests based on the example configuration\n\n# in this directory. If you have access the the files and paths defined below you\n\n# can run the tests by running 'make test' in the build directory in the EUTelescope root\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ======================================================================\n\n# ======================================================================\n\n# TestJobsubExampleDaturaAlone: based on config in jobsub/examples/datura-alone\n\n# ======================================================================\n\n# ======================================================================\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# the run number\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# run number padded with leading zeros\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# only needed in the last step to test the results of EUTel against a set of reference files:\n",
        "Line" : 25,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "#\n\n#  STEP 0: PREPARE TEST DIRECTORY\n\n#\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#  STEP 1: CONVERTER\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#\n\n# todo:\n\n#  - currently running only over 10000 events (see steering template); should this number be adjusted and/or tested for (using lcio_event_counter)?\n\n#  - set property DEPENDS to make sure that failure of required steps does not cause following steps to fail as well \n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# all this regular expressions must be matched for the test to pass\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# test will pass if ALL of the following expressions are matched\n",
        "Line" : 55,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# test will fail if ANY of the following expressions is matched \n",
        "Line" : 57,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# test depends on earlier steps\n",
        "Line" : 59,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# converter step sometimes takes a bit longer (in s)\n",
        "Line" : 61,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# now check if the expected output files exist and look ok\n",
        "Line" : 65,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "#\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#  STEP 2: CLUSTERING\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# all this regular expressions must be matched for the test to pass\n",
        "Line" : 87,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# test will pass if ALL of the following expressions are matched\n",
        "Line" : 98,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# test will fail if ANY of the following expressions is matched \n",
        "Line" : 100,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# test depends on earlier steps\n",
        "Line" : 102,
        "CharPositionInLine" : 1
      },
      "18" : {
        "Text" : "# now check if the expected output files exist and look ok\n",
        "Line" : 105,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "#\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#  STEP 3: HITMAKER\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# all this regular expressions must be matched for the test to pass\n",
        "Line" : 125,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# test will pass if ALL of the following expressions are matched\n",
        "Line" : 136,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# test will fail if ANY of the following expressions is matched \n",
        "Line" : 138,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "# test depends on earlier steps\n",
        "Line" : 140,
        "CharPositionInLine" : 1
      },
      "24" : {
        "Text" : "# now check if the expected output files exist and look ok\n",
        "Line" : 143,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# we expect an average hit number of 35 for run 4118 using the example configuration\n",
        "Line" : 153,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "#\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#  STEP 4: ALIGNMENT\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# all this regular expressions must be matched for the test to pass\n",
        "Line" : 163,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# test will pass if ALL of the following expressions are matched\n",
        "Line" : 176,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : "# test will fail if ANY of the following expressions is matched \n",
        "Line" : 178,
        "CharPositionInLine" : 8
      },
      "30" : {
        "Text" : "# test depends on earlier steps\n",
        "Line" : 180,
        "CharPositionInLine" : 1
      },
      "31" : {
        "Text" : "# now check if the expected output files exist and look ok\n",
        "Line" : 183,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "#\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#  STEP 5: FITTER\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# all this regular expressions must be matched for the test to pass\n",
        "Line" : 207,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "#SET( fit_pass_regex_2 \"Total number of reconstructed tracks *[0-9][0-9][0-9][0-9][0-9]+\" )\n",
        "Line" : 209,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# test will pass if ALL of the following expressions are matched\n",
        "Line" : 218,
        "CharPositionInLine" : 8
      },
      "36" : {
        "Text" : "# test will fail if ANY of the following expressions is matched \n",
        "Line" : 220,
        "CharPositionInLine" : 8
      },
      "37" : {
        "Text" : "# test depends on earlier steps\n",
        "Line" : 222,
        "CharPositionInLine" : 1
      },
      "38" : {
        "Text" : "# now check if the expected output files exist and look ok\n",
        "Line" : 225,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "# we expect to see between 1 and 7 tracks in every event \n\n# but tolerate if this is not the case in 15% of the events (empty events are not counted!)\n",
        "Line" : 232,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "#\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#  STEP 6: StatTest\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# TODO: ask Andrea Dotti or other Geant4 people for their FindStatTest.cmake \n",
        "Line" : 243,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "# all this regular expressions must be matched for the test to pass\n",
        "Line" : 247,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "# run stattest tool on output from previous step and test it against reference file; test are configured in specified config file (*.qa)\n",
        "Line" : 251,
        "CharPositionInLine" : 4
      },
      "44" : {
        "Text" : "# test will pass if ALL of the following expressions are matched\n",
        "Line" : 255,
        "CharPositionInLine" : 8
      },
      "45" : {
        "Text" : "# test will fail if ANY of the following expressions is matched \n",
        "Line" : 257,
        "CharPositionInLine" : 8
      },
      "46" : {
        "Text" : "# test depends on earlier steps\n",
        "Line" : 259,
        "CharPositionInLine" : 1
      },
      "47" : {
        "Text" : "# test will pass if ALL of the following expressions are matched\n",
        "Line" : 266,
        "CharPositionInLine" : 8
      },
      "48" : {
        "Text" : "# test will fail if ANY of the following expressions is matched \n",
        "Line" : 268,
        "CharPositionInLine" : 8
      },
      "49" : {
        "Text" : "# test depends on earlier steps\n",
        "Line" : 270,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 50
    },
    "jobsub/examples/legacy/datura-noDUT/testing.cmake" : {
      "ObjectId" : "c1b4159845c3fdb76b69b7eae46f01378b6c4735",
      "LastModified" : "2019-01-09T14:06:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# This file defines a number of data-driven tests based on the example configuration\n\n# in this directory. If you have access the the files and paths defined below you\n\n# can run the tests by running 'make test' in the build directory in the EUTelescope root\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ======================================================================\n\n# ======================================================================\n\n# TestJobsubExampleDaturaNoDUT: based on config in jobsub/examples/datura-noDUT\n\n# ======================================================================\n\n# ======================================================================\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# the run number\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# run number padded with leading zeros\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# only needed in the last step to test the results of EUTel against a set of reference files:\n",
        "Line" : 22,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "# options: use config, use csv, change native path to central AFS location, reduce number of events to 200k\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# all this regular expressions must be matched for the tests to pass.\n\n# the order of the expressions must be matched in the test execution!\n\n# additional statements can be defined for each test individually\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#\n\n#  STEP 0: PREPARE TEST DIRECTORY\n\n#\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#  STEP 1: CONVERTER\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# test will pass if ALL of the following expressions are matched\n",
        "Line" : 58,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# test will fail if ANY of the following expressions is matched \n",
        "Line" : 60,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# test depends on earlier steps\n",
        "Line" : 62,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# converter step sometimes takes a bit longer (in s)\n",
        "Line" : 64,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# now check if the expected output files exist and look ok\n",
        "Line" : 69,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "#\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#  STEP 2: CLUSTERING\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# test will pass if ALL of the following expressions are matched\n",
        "Line" : 94,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# test will fail if ANY of the following expressions is matched \n",
        "Line" : 96,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# test depends on earlier steps\n",
        "Line" : 98,
        "CharPositionInLine" : 1
      },
      "18" : {
        "Text" : "# now check if the expected output files exist and look ok\n",
        "Line" : 101,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# we expect an average of 24.4 clusters per event\n",
        "Line" : 108,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "#\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#  STEP 2B: CLUSTER FILTERING\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# test will pass if ALL of the following expressions are matched\n",
        "Line" : 122,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# test will fail if ANY of the following expressions is matched \n",
        "Line" : 124,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "# test depends on earlier steps\n",
        "Line" : 126,
        "CharPositionInLine" : 1
      },
      "24" : {
        "Text" : "# now check if the expected output files exist and look ok\n",
        "Line" : 129,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# we now expect an average of 22.9 clusters per event (after filtering)\n",
        "Line" : 133,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "#\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#  STEP 3: HITMAKER\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# test will pass if ALL of the following expressions are matched\n",
        "Line" : 148,
        "CharPositionInLine" : 8
      },
      "28" : {
        "Text" : "# test will fail if ANY of the following expressions is matched \n",
        "Line" : 150,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : "# test depends on earlier steps\n",
        "Line" : 152,
        "CharPositionInLine" : 1
      },
      "30" : {
        "Text" : "# now check if the expected output files exist and look ok\n",
        "Line" : 155,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# we expect an average hit number of 23 for run 97 (wide geometry) using the example configuration\n",
        "Line" : 165,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "#\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#  STEP 4: ALIGNMENT\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# all this regular expressions must be matched for the test to pass\n",
        "Line" : 175,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# test will pass if ALL of the following expressions are matched\n",
        "Line" : 183,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : "# test will fail if ANY of the following expressions is matched \n",
        "Line" : 185,
        "CharPositionInLine" : 8
      },
      "36" : {
        "Text" : "# test depends on earlier steps\n",
        "Line" : 187,
        "CharPositionInLine" : 1
      },
      "37" : {
        "Text" : "# now check if the expected output files exist and look ok\n",
        "Line" : 190,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "#\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#  STEP 5: FITTER\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#SET( fit_pass_regex_1 \"Total number of reconstructed tracks *[0-9][0-9][0-9][0-9][0-9]+\" )\n",
        "Line" : 209,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# test will pass if ALL of the following expressions are matched\n",
        "Line" : 215,
        "CharPositionInLine" : 8
      },
      "41" : {
        "Text" : "# test will fail if ANY of the following expressions is matched \n",
        "Line" : 217,
        "CharPositionInLine" : 8
      },
      "42" : {
        "Text" : "# test depends on earlier steps\n",
        "Line" : 219,
        "CharPositionInLine" : 1
      },
      "43" : {
        "Text" : "# fitter step sometimes takes a bit longer (in s)\n",
        "Line" : 221,
        "CharPositionInLine" : 1
      },
      "44" : {
        "Text" : "# now check if the expected output files exist and look ok\n",
        "Line" : 224,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "# we expect to see between 1 and 3 tracks in every event \n\n# but tolerate if this is not the case in 40% of the events (empty events are counted)\n",
        "Line" : 231,
        "CharPositionInLine" : 4
      },
      "46" : {
        "Text" : "#\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#  STEP 3b: HITLOCAL : hitmaker where hits stay in the sensor local frame system\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# test will pass if ALL of the following expressions are matched\n",
        "Line" : 245,
        "CharPositionInLine" : 8
      },
      "48" : {
        "Text" : "# test will fail if ANY of the following expressions is matched \n",
        "Line" : 247,
        "CharPositionInLine" : 8
      },
      "49" : {
        "Text" : "# test depends on earlier steps\n",
        "Line" : 249,
        "CharPositionInLine" : 1
      },
      "50" : {
        "Text" : "# now check if the expected output files exist and look ok\n",
        "Line" : 252,
        "CharPositionInLine" : 4
      },
      "51" : {
        "Text" : "# we expect an average hit number of 23 for run 97 (wide geometry) using the example configuration\n",
        "Line" : 262,
        "CharPositionInLine" : 4
      },
      "52" : {
        "Text" : "#\n\n##\n\n## +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n##  STEP 6: GBL TRACKSEARCH\n\n## +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n##\n\n#     ADD_TEST( NAME TestJobsubExampleDaturaNoDUTGblTrkSrchRun \n\n#               WORKING_DIRECTORY ${testdir} \n\n# \t      COMMAND ${executable} ${jobsubOptions} tracksearchHelix ${RunNr} )\n\n#     SET_TESTS_PROPERTIES (TestJobsubExampleDaturaNoDUTGblTrkSrchRun PROPERTIES\n\n#        # test will pass if ALL of the following expressions are matched\n\n#         PASS_REGULAR_EXPRESSION \"${jobsub_pass_regex_1}.*${marlin_pass_regex_1}.*${jobsub_pass_regex_2}\"\n\n#         # test will fail if ANY of the following expressions is matched \n\n#         FAIL_REGULAR_EXPRESSION \"${generic_fail_regex}\"\n\n#\t# test depends on earlier steps\n\n#\tDEPENDS TestJobsubExampleDaturaNoDUTHitlocalRun\n\n#\t)\n\n#    # now check if the expected output files exist and look ok\n\n#    ADD_TEST( TestJobsubExampleDaturaNoDUTGblTrkSrchLog sh -c \"[ -f ${testdir}/output/logs/tracksearchHelix-${PaddedRunNr}.zip ]\" )\n\n#    SET_TESTS_PROPERTIES (TestJobsubExampleDaturaNoDUTGblTrkSrchLog PROPERTIES DEPENDS TestJobsubExampleDaturaNoDUTGblTrkSrchRun)\n\n#\n\n#    ADD_TEST( TestJobsubExampleDaturaNoDUTGblTrkSrchHisto sh -c \"[ -f ${testdir}/output/histograms/run${PaddedRunNr}-tracksearchHelix.root ]\" )\n\n#    SET_TESTS_PROPERTIES (TestJobsubExampleDaturaNoDUTGblTrkSrchHisto PROPERTIES DEPENDS TestJobsubExampleDaturaNoDUTGblTrkSrchRun)\n\n#\n\n#    # we expect to see between 1 and 3 tracks in every event \n\n#    # but tolerate if this is not the case in 40% of the events (empty events are counted)\n\n#    ADD_TEST( TestJobsubExampleDaturaNoDUTGblTrkSrchOutput sh -c \"[ -f ${testdir}/output/lcio/run${PaddedRunNr}-trackcand.slcio ] && lcio_check_col_elements --pedantic --expelements 2 --abselementerror 1 --releventerror .40 track0 ${testdir}/output/lcio/run${PaddedRunNr}-track.slcio\" )\n\n#    SET_TESTS_PROPERTIES (TestJobsubExampleDaturaNoDUTGblTrkSrchOutput PROPERTIES DEPENDS TestJobsubExampleDaturaNoDUTGblTrkSrchRun)\n\n#\n\n#\n\n##\n\n## +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n##  STEP 7: GBL ALIGN\n\n## +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n##\n\n#    ADD_TEST( NAME TestJobsubExampleDaturaNoDUTGblAlignRun \n\n#              WORKING_DIRECTORY ${testdir} \n\n#\t      COMMAND ${executable} ${jobsubOptions} aligngbl ${RunNr} )\n\n#    SET_TESTS_PROPERTIES (TestJobsubExampleDaturaNoDUTGblAlignRun PROPERTIES\n\n#        # test will pass if ALL of the following expressions are matched\n\n#        PASS_REGULAR_EXPRESSION \"${jobsub_pass_regex_1}.*${marlin_pass_regex_1}.*${jobsub_pass_regex_2}\"\n\n#        # test will fail if ANY of the following expressions is matched \n\n#        FAIL_REGULAR_EXPRESSION \"${generic_fail_regex}\"\n\n#\t# test depends on earlier steps\n\n#\tDEPENDS TestJobsubExampleDaturaNoDUTHitlocalRun\n\n#\t)\n\n#    # now check if the expected output files exist and look ok\n\n#    ADD_TEST( TestJobsubExampleDaturaNoDUTGblAlignLog sh -c \"[ -f ${testdir}/output/logs/aligngbl-${PaddedRunNr}.zip ]\" )\n\n#    SET_TESTS_PROPERTIES (TestJobsubExampleDaturaNoDUTGblAlignLog PROPERTIES DEPENDS TestJobsubExampleDaturaNoDUTGblAlignRun)\n\n#\n\n#    ADD_TEST( TestJobsubExampleDaturaNoDUTGblAlignHisto sh -c \"[ -f ${testdir}/output/histograms/run${PaddedRunNr}-aligngbl.root ]\" )\n\n#    SET_TESTS_PROPERTIES (TestJobsubExampleDaturaNoDUTGblAlignHisto PROPERTIES DEPENDS TestJobsubExampleDaturaNoDUTGblAlignRun)\n\n#\n\n#    # we expect to see between 1 and 3 tracks in every event \n\n#    # but tolerate if this is not the case in 40% of the events (empty events are counted)\n\n#    ADD_TEST( TestJobsubExampleDaturaNoDUTGblAlignOutput sh -c \"[ -f ${testdir}/output/lcio/run${PaddedRunNr}-trackcand.slcio ] && lcio_check_col_elements --pedantic --expelements 2 --abselementerror 1 --releventerror .40 track0 ${testdir}/output/lcio/run${PaddedRunNr}-track.slcio\" )\n\n#    SET_TESTS_PROPERTIES (TestJobsubExampleDaturaNoDUTGblAlignOutput PROPERTIES DEPENDS TestJobsubExampleDaturaNoDUTGblAlignRun)\n\n#\n\n#\n\n#\n\n##\n\n## +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n##  STEP 8: GBL FIT\n\n## +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n##\n\n#    ADD_TEST( NAME TestJobsubExampleDaturaNoDUTGblFitRun \n\n#              WORKING_DIRECTORY ${testdir} \n\n#\t      COMMAND ${executable} ${jobsubOptions} trackgbl ${RunNr} )\n\n#    SET_TESTS_PROPERTIES (TestJobsubExampleDaturaNoDUTGblFitRun PROPERTIES\n\n#        # test will pass if ALL of the following expressions are matched\n\n#        PASS_REGULAR_EXPRESSION \"${jobsub_pass_regex_1}.*${marlin_pass_regex_1}.*${jobsub_pass_regex_2}\"\n\n#        # test will fail if ANY of the following expressions is matched \n\n#        FAIL_REGULAR_EXPRESSION \"${generic_fail_regex}\"\n\n#\t# test depends on earlier steps\n\n#\tDEPENDS TestJobsubExampleDaturaNoDUTHitlocalRun\n\n#\t)\n\n#    # now check if the expected output files exist and look ok\n\n#    ADD_TEST( TestJobsubExampleDaturaNoDUTGblFitLog sh -c \"[ -f ${testdir}/output/logs/trackgbl-${PaddedRunNr}.zip ]\" )\n\n#    SET_TESTS_PROPERTIES (TestJobsubExampleDaturaNoDUTGblFitLog PROPERTIES DEPENDS TestJobsubExampleDaturaNoDUTGblFitRun)\n\n#\n\n#    ADD_TEST( TestJobsubExampleDaturaNoDUTGblFitHisto sh -c \"[ -f ${testdir}/output/histograms/run${PaddedRunNr}-trackgbl.root ]\" )\n\n#    SET_TESTS_PROPERTIES (TestJobsubExampleDaturaNoDUTGblFitHisto PROPERTIES DEPENDS TestJobsubExampleDaturaNoDUTGblFitRun)\n\n#\n\n#    # we expect to see between 1 and 3 tracks in every event \n\n#    # but tolerate if this is not the case in 40% of the events (empty events are counted)\n\n#    ADD_TEST( TestJobsubExampleDaturaNoDUTGblFitOutput sh -c \"[ -f ${testdir}/output/lcio/run${PaddedRunNr}-trackcand.slcio ] && lcio_check_col_elements --pedantic --expelements 2 --abselementerror 1 --releventerror .40 track0 ${testdir}/output/lcio/run${PaddedRunNr}-track.slcio\" )\n\n#    SET_TESTS_PROPERTIES (TestJobsubExampleDaturaNoDUTGblFitOutput PROPERTIES DEPENDS TestJobsubExampleDaturaNoDUTGblFitRun)\n\n#\n\n#\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "#\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#  STEP 6: StatTest\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#\n",
        "Line" : 356,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# all this regular expressions must be matched for the test to pass\n",
        "Line" : 363,
        "CharPositionInLine" : 4
      },
      "55" : {
        "Text" : "# run stattest tool on output from previous step and test it against reference file; test are configured in specified config file (*.qa)\n",
        "Line" : 367,
        "CharPositionInLine" : 4
      },
      "56" : {
        "Text" : "# test will pass if ALL of the following expressions are matched\n",
        "Line" : 371,
        "CharPositionInLine" : 8
      },
      "57" : {
        "Text" : "# test will fail if ANY of the following expressions is matched \n",
        "Line" : 373,
        "CharPositionInLine" : 8
      },
      "58" : {
        "Text" : "# test depends on earlier steps\n",
        "Line" : 375,
        "CharPositionInLine" : 1
      },
      "59" : {
        "Text" : "# test will pass if ALL of the following expressions are matched\n",
        "Line" : 382,
        "CharPositionInLine" : 8
      },
      "60" : {
        "Text" : "# test will fail if ANY of the following expressions is matched \n",
        "Line" : 384,
        "CharPositionInLine" : 8
      },
      "61" : {
        "Text" : "# test depends on earlier steps\n",
        "Line" : 386,
        "CharPositionInLine" : 1
      },
      "62" : {
        "Text" : "# test will pass if ALL of the following expressions are matched\n",
        "Line" : 393,
        "CharPositionInLine" : 8
      },
      "63" : {
        "Text" : "# test will fail if ANY of the following expressions is matched \n",
        "Line" : 395,
        "CharPositionInLine" : 8
      },
      "64" : {
        "Text" : "# test depends on earlier steps\n",
        "Line" : 397,
        "CharPositionInLine" : 1
      },
      "65" : {
        "Text" : "#\n\n#    ADD_TEST( TestJobsubExampleDaturaNoDUTStatTestGblTrkSrch sh -c \"PYTHONPATH=$ROOTSYS/lib:$PYTHONPATH ${executable} --cdash  -g${testdir}/output/stattest_report_tracksearchHelix.pdf ${referencedatadir}/StatTestConf_DaturaNoDUTGblTrkSrch.qa ${testdir}/output/histograms/run${PaddedRunNr}-tracksearchHelix.root ${referencedatadir}/run${PaddedRunNr}-tracksearchHelix.root\" )\n\n#    SET_TESTS_PROPERTIES (TestJobsubExampleDaturaNoDUTStatTestGblTrkSrch PROPERTIES\n\n#        # test will pass if ALL of the following expressions are matched\n\n#        PASS_REGULAR_EXPRESSION \"${fit_pass_regex_1}\"\n\n#        # test will fail if ANY of the following expressions is matched \n\n#        FAIL_REGULAR_EXPRESSION \"${fit_fail_regex}\"\n\n#\t# test depends on earlier steps\n\n#\tDEPENDS TestJobsubExampleDaturaNoDUTGblTrkSrchRun\n\n#\t)\n\n#\n\n#\n\n#    ADD_TEST( TestJobsubExampleDaturaNoDUTStatTestGblAlign sh -c \"PYTHONPATH=$ROOTSYS/lib:$PYTHONPATH ${executable} --cdash  -g${testdir}/output/stattest_report_aligngbl.pdf ${referencedatadir}/StatTestConf_DaturaNoDUTGblAlign.qa ${testdir}/output/histograms/run${PaddedRunNr}-aligngbl.root ${referencedatadir}/run${PaddedRunNr}-aligngbl.root\" )\n\n#    SET_TESTS_PROPERTIES (TestJobsubExampleDaturaNoDUTStatTestGblAlign PROPERTIES\n\n#        # test will pass if ALL of the following expressions are matched\n\n#        PASS_REGULAR_EXPRESSION \"${fit_pass_regex_1}\"\n\n#        # test will fail if ANY of the following expressions is matched \n\n#        FAIL_REGULAR_EXPRESSION \"${fit_fail_regex}\"\n\n#\t# test depends on earlier steps\n\n#\tDEPENDS TestJobsubExampleDaturaNoDUTGblAlignRun\n\n#\t)\n\n#\n\n#\n\n#    ADD_TEST( TestJobsubExampleDaturaNoDUTStatTestGblFit sh -c \"PYTHONPATH=$ROOTSYS/lib:$PYTHONPATH ${executable} --cdash  -g${testdir}/output/stattest_report_trackgbl.pdf ${referencedatadir}/StatTestConf_DaturaNoDUTGblFit.qa ${testdir}/output/histograms/run${PaddedRunNr}-trackgbl.root ${referencedatadir}/run${PaddedRunNr}-trackgbl.root\" )\n\n#    SET_TESTS_PROPERTIES (TestJobsubExampleDaturaNoDUTStatTestGblFit PROPERTIES\n\n#        # test will pass if ALL of the following expressions are matched\n\n#        PASS_REGULAR_EXPRESSION \"${fit_pass_regex_1}\"\n\n#        # test will fail if ANY of the following expressions is matched \n\n#        FAIL_REGULAR_EXPRESSION \"${fit_fail_regex}\"\n\n#\t# test depends on earlier steps\n\n#\tDEPENDS TestJobsubExampleDaturaNoDUTGblFitRun\n\n#\t)\n\n#\n",
        "Line" : 400,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "#\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#  STEP 7: MemChecks\n\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n#\n",
        "Line" : 434,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# STEP 1-5 VARIANTS USED FOR MEMCHECKS ONLY:\n",
        "Line" : 439,
        "CharPositionInLine" : 2
      },
      "68" : {
        "Text" : "# options for memcheck runs: reduced run range, plain output for valgrind parsing\n",
        "Line" : 441,
        "CharPositionInLine" : 4
      },
      "69" : {
        "Text" : "# Converter run with reduced run range\n",
        "Line" : 444,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 70
    },
    "unittests/CMakeLists.txt" : {
      "ObjectId" : "2b8ceb30421c4409b5f744473c991cab5318155e",
      "LastModified" : "2019-01-09T14:06:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Options. Turn on with 'cmake -Dmyvarname=ON'.\n\n# Make PROJECT_SOURCE_DIR, PROJECT_BINARY_DIR, and PROJECT_NAME available.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If you want your own include/ directory, set this, and then you can do\n\n# include_directories(${COMMON_INCLUDES}) in other CMakeLists.txt files.\n\n# set(COMMON_INCLUDES ${PROJECT_SOURCE_DIR}/include)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "################################\n\n# Normal Libraries & Executables\n\n################################\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Key idea: SEPARATE OUT your main() function into its own file so it can be its\n\n# own executable. Separating out main() means you can add this library to be\n\n# used elsewhere.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#target_link_libraries(project1 eutelgeotest_lib)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "################################\n\n# Testing\n\n################################\n\n# This adds another subdirectory, which has 'project(gtest)'.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Include the gtest library. gtest_SOURCE_DIR is available due to\n\n# 'project(gtest)' above.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "##############\n\n# Unit Tests\n\n##############\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Standard linking to gtest stuff.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Extra linking for the project.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# This is so you can do 'make test' to see all your tests run, instead of\n\n# manually running the executable runUnitTests to see those specific tests.\n\n# add_test(NAME that-test-I-made COMMAND runUnitTests)\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# You can also omit NAME and COMMAND. The second argument could be some other\n\n# test executable.\n\n# add_test(that-other-test-I-made runUnitTests)\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    }
  },
  "FileTypes" : {
    "CMAKE" : 18
  },
  "ElapsedTime" : 1624
}