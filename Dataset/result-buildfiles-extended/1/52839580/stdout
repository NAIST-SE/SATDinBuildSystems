{
  "Repository" : "52839580",
  "Revision" : "HEAD",
  "ObjectId" : "5887ab377fb1e6dcda4c8271c1c042741a366515",
  "CommitTime" : "2017-05-21T03:06:12Z",
  "Files" : {
    "pom.xml" : {
      "ObjectId" : "7b4f3c589d2041526bc3f70df592caa1f997782a",
      "LastModified" : "2017-01-23T06:00:40Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " =========maven项目公共用的常量编码版本等配置  方便统一修改升级==============",
        "Line" : 11,
        "CharPositionInLine" : 66
      },
      "1" : {
        "Text" : " 项目名称",
        "Line" : 13,
        "CharPositionInLine" : 21
      },
      "2" : {
        "Text" : " 项目创建编码格式UTF-8 ",
        "Line" : 15,
        "CharPositionInLine" : 31
      },
      "3" : {
        "Text" : " 项目Web服务器tomcat版本号 ",
        "Line" : 17,
        "CharPositionInLine" : 35
      },
      "4" : {
        "Text" : " spring版本号 ",
        "Line" : 19,
        "CharPositionInLine" : 27
      },
      "5" : {
        "Text" : " mybatis版本号 ",
        "Line" : 21,
        "CharPositionInLine" : 28
      },
      "6" : {
        "Text" : " log4j日志文件管理包版本 ",
        "Line" : 23,
        "CharPositionInLine" : 32
      },
      "7" : {
        "Text" : " =========maven项目依赖的jar包配置==============",
        "Line" : 27,
        "CharPositionInLine" : 52
      },
      "8" : {
        "Text" : " 单元测试junit4核心包 ",
        "Line" : 29,
        "CharPositionInLine" : 31
      },
      "9" : {
        "Text" : " 表示开发的时候引入，发布的时候不会加载此包 ",
        "Line" : 34,
        "CharPositionInLine" : 43
      },
      "10" : {
        "Text" : " spring核心包 ",
        "Line" : 37,
        "CharPositionInLine" : 27
      },
      "11" : {
        "Text" : " mybatis核心包 ",
        "Line" : 106,
        "CharPositionInLine" : 28
      },
      "12" : {
        "Text" : " mybatis/spring整合包 ",
        "Line" : 112,
        "CharPositionInLine" : 35
      },
      "13" : {
        "Text" : " 导入java ee jar 包 ",
        "Line" : 118,
        "CharPositionInLine" : 33
      },
      "14" : {
        "Text" : " Hibernate Validator 是 Bean Validation 的参考实现 . Hibernate Validator 提供了 JSR 303 规范中所有内置 constraint 的实现,除此之外还有一些附加的 constraint",
        "Line" : 125,
        "CharPositionInLine" : 140
      },
      "15" : {
        "Text" : " JSTL标签类 ",
        "Line" : 132,
        "CharPositionInLine" : 25
      },
      "16" : {
        "Text" : "        <dependency>\n            <groupId>jstl</groupId>\n            <artifactId>jstl</artifactId>\n            <version>1.2</version>\n        </dependency>",
        "Line" : 137,
        "CharPositionInLine" : 25
      },
      "17" : {
        "Text" : " 日志文件管理包 ",
        "Line" : 138,
        "CharPositionInLine" : 25
      },
      "18" : {
        "Text" : " log start ",
        "Line" : 139,
        "CharPositionInLine" : 27
      },
      "19" : {
        "Text" : " 格式化对象，方便输出日志 ",
        "Line" : 147,
        "CharPositionInLine" : 30
      },
      "20" : {
        "Text" : " log end ",
        "Line" : 166,
        "CharPositionInLine" : 25
      },
      "21" : {
        "Text" : " 映入JSON @ResponseBody,要把对象转换成json格式 ",
        "Line" : 168,
        "CharPositionInLine" : 52
      },
      "22" : {
        "Text" : " 上传组件和IO流包 ",
        "Line" : 175,
        "CharPositionInLine" : 27
      },
      "23" : {
        "Text" : " 导入连接池数据源druid(阿里巴巴的框架）jar包 ",
        "Line" : 187,
        "CharPositionInLine" : 44
      },
      "24" : {
        "Text" : " 导入sqlserver数据库链接第三方jar包 ",
        "Line" : 194,
        "CharPositionInLine" : 41
      },
      "25" : {
        "Text" : "    <dependency>\n              <groupId>net.sourceforge.jtds</groupId>\n              <artifactId>jtds</artifactId>\n              <version>1.3.1</version>\n            </dependency>",
        "Line" : 199,
        "CharPositionInLine" : 29
      },
      "26" : {
        "Text" : " 手动添加oracle jdbc到maven本地仓库 数据库链接jar包 driver ",
        "Line" : 201,
        "CharPositionInLine" : 60
      },
      "27" : {
        "Text" : "使用JDK 7;它包含JDBC驱动程序类除了类NLS支持在Oracle中对象和集合类型",
        "Line" : 202,
        "CharPositionInLine" : 59
      },
      "28" : {
        "Text" : "    <dependency>\n              <groupId>com.oracle</groupId>\n              <artifactId>ojdbc7</artifactId>\n              <version>12.1.0.1</version>\n            </dependency>",
        "Line" : 207,
        "CharPositionInLine" : 29
      },
      "29" : {
        "Text" : " 导入Mysql数据库链接jar包 ",
        "Line" : 209,
        "CharPositionInLine" : 34
      },
      "30" : {
        "Text" : " 导入dbcp的jar包，用来在spring-mybatis.xml中配置数据库   已更换切换为数据源druid(阿里巴巴的框架）",
        "Line" : 216,
        "CharPositionInLine" : 82
      },
      "31" : {
        "Text" : "        <dependency>\n            <groupId>commons-dbcp</groupId>\n            <artifactId>commons-dbcp</artifactId>\n            <version>1.2.2</version>\n        </dependency>",
        "Line" : 221,
        "CharPositionInLine" : 25
      },
      "32" : {
        "Text" : " AspectJ是一个面向切面AOP的框架jar包",
        "Line" : 224,
        "CharPositionInLine" : 41
      },
      "33" : {
        "Text" : "aopalliance包是AOP联盟的API包，里面包含了针对面向切面的接口。通常Spring等其它具备动态织入功能的框架依赖此包。",
        "Line" : 231,
        "CharPositionInLine" : 82
      },
      "34" : {
        "Text" : "  aspectjweaver.jar这是Spring AOP切面编程所要用到的包",
        "Line" : 237,
        "CharPositionInLine" : 57
      },
      "35" : {
        "Text" : "  commons-lang.jar一些公共的工具集合，比如对字符、数组的操作等等",
        "Line" : 244,
        "CharPositionInLine" : 57
      },
      "36" : {
        "Text" : " 对 XML相关操作依赖dom4j包",
        "Line" : 251,
        "CharPositionInLine" : 34
      },
      "37" : {
        "Text" : " 接口调用对httpclient相关操作依赖包",
        "Line" : 258,
        "CharPositionInLine" : 39
      },
      "38" : {
        "Text" : "   Redis缓存系统  Java-Jedis操作Redis",
        "Line" : 265,
        "CharPositionInLine" : 47
      },
      "39" : {
        "Text" : "\n        <dependency>\n            <groupId>redis.clients</groupId>\n            <artifactId>jedis</artifactId>\n            <version>2.7.3</version>\n        </dependency>\n",
        "Line" : 272,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : " Lucene是apache一个开放源代码的全文和整个数据库精确模糊检索引擎工具包，但它不是一个完整的全文检索引擎，而是一个全文检索引擎的架构，提供了完整的查询引擎和索引引擎",
        "Line" : 274,
        "CharPositionInLine" : 103
      },
      "41" : {
        "Text" : "        <dependency>\n                    <groupId>org.apache.lucene</groupId>\n                    <artifactId>lucene-core</artifactId>\n                    <version>5.4.1</version>\n                </dependency>\n                <dependency>\n                    <groupId>org.apache.lucene</groupId>\n                    <artifactId>lucene-analyzers-common</artifactId>\n                    <version>5.4.1</version>\n                </dependency>\n                <dependency>\n                    <groupId>org.apache.lucene</groupId>\n                    <artifactId>lucene-queryparser</artifactId>\n                    <version>5.4.1</version>\n                </dependency>\n\n                <dependency>\n                    <groupId>org.apache.lucene</groupId>\n                    <artifactId>lucene-highlighter</artifactId>\n                    <version>5.4.1</version>\n                </dependency>",
        "Line" : 295,
        "CharPositionInLine" : 33
      },
      "42" : {
        "Text" : " jsoup作为Java世界最好的HTML解析库 ，可直接解析某个URL地址、HTML文本内容。它提供了一套非常省力的API",
        "Line" : 297,
        "CharPositionInLine" : 78
      },
      "43" : {
        "Text" : "        Apache POI是Apache软件基金会的开放源码函式库，POI提供API给Java程序对Microsoft Office格式档案读和写的功能",
        "Line" : 304,
        "CharPositionInLine" : 97
      },
      "44" : {
        "Text" : "     <dependency>\n            <groupId>org.apache.poi</groupId>\n            <artifactId>poi-scratchpad</artifactId>\n            <version>3.13</version>\n        </dependency>",
        "Line" : 309,
        "CharPositionInLine" : 25
      },
      "45" : {
        "Text" : "     Java发送email邮件的jar包",
        "Line" : 310,
        "CharPositionInLine" : 39
      },
      "46" : {
        "Text" : "        <dependency>\n            <groupId>javax.mail</groupId>\n            <artifactId>mail</artifactId>\n            <version>1.4.7</version>\n        </dependency>",
        "Line" : 315,
        "CharPositionInLine" : 25
      },
      "47" : {
        "Text" : "微信相关",
        "Line" : 317,
        "CharPositionInLine" : 20
      },
      "48" : {
        "Text" : "<dependency>",
        "Line" : 318,
        "CharPositionInLine" : 28
      },
      "49" : {
        "Text" : "<groupId>cn.com.riversoft</groupId>",
        "Line" : 319,
        "CharPositionInLine" : 51
      },
      "50" : {
        "Text" : "<artifactId>weixin-common</artifactId>",
        "Line" : 320,
        "CharPositionInLine" : 54
      },
      "51" : {
        "Text" : "<version>0.8.9</version>",
        "Line" : 321,
        "CharPositionInLine" : 40
      },
      "52" : {
        "Text" : "</dependency>",
        "Line" : 322,
        "CharPositionInLine" : 29
      },
      "53" : {
        "Text" : "七牛相关",
        "Line" : 365,
        "CharPositionInLine" : 20
      },
      "54" : {
        "Text" : "微信支付相关jar",
        "Line" : 384,
        "CharPositionInLine" : 25
      },
      "55" : {
        "Text" : "java生成二维码jar",
        "Line" : 391,
        "CharPositionInLine" : 28
      },
      "56" : {
        "Text" : "tomcat远程热部署 directory缺省情况下指向target ",
        "Line" : 408,
        "CharPositionInLine" : 55
      },
      "57" : {
        "Text" : "<directory>${basedir}/target</directory>",
        "Line" : 409,
        "CharPositionInLine" : 60
      },
      "58" : {
        "Text" : " server、username、password对应maven的setting下的配置 ",
        "Line" : 416,
        "CharPositionInLine" : 73
      },
      "59" : {
        "Text" : " war文件路径缺省情况下指向target ",
        "Line" : 421,
        "CharPositionInLine" : 50
      },
      "60" : {
        "Text" : "    <warFile>${basedir}/target/${project.build.finalName}.war</warFile>",
        "Line" : 422,
        "CharPositionInLine" : 99
      },
      "61" : {
        "Text" : " 导入MyBatis生成器自动生成实体类、DAO接口和Mapping映射文件插件",
        "Line" : 426,
        "CharPositionInLine" : 60
      },
      "62" : {
        "Text" : "  使用yuicompressor-maven-plugin插件实现js及css代码的自动压缩(删除原先的部署文件 新war:exploded一个项目在压缩)",
        "Line" : 437,
        "CharPositionInLine" : 99
      },
      "63" : {
        "Text" : "     execution表示执行的操作，可以指定操作在maven的哪个生命周期运行 ",
        "Line" : 443,
        "CharPositionInLine" : 72
      },
      "64" : {
        "Text" : "   读取js,css文件采用UTF-8编码  ",
        "Line" : 453,
        "CharPositionInLine" : 52
      },
      "65" : {
        "Text" : "   不显示js可能的错误  ",
        "Line" : 455,
        "CharPositionInLine" : 43
      },
      "66" : {
        "Text" : "   若存在已压缩的文件，会先对比源文件是否有改动  有改动便压缩，无改动就不压缩  ",
        "Line" : 457,
        "CharPositionInLine" : 71
      },
      "67" : {
        "Text" : "   在指定的列号后插入新行  ",
        "Line" : 459,
        "CharPositionInLine" : 44
      },
      "68" : {
        "Text" : "   压缩之前先执行聚合文件操作  ",
        "Line" : 461,
        "CharPositionInLine" : 46
      },
      "69" : {
        "Text" : "   压缩后保存文件后缀  无后缀 ",
        "Line" : 463,
        "CharPositionInLine" : 46
      },
      "70" : {
        "Text" : "  <suffix>.min</suffix> ",
        "Line" : 465,
        "CharPositionInLine" : 52
      },
      "71" : {
        "Text" : "   源目录，即需压缩的根目录  ",
        "Line" : 466,
        "CharPositionInLine" : 45
      },
      "72" : {
        "Text" : "    <sourceDirectory>src/main/webapp/resource</sourceDirectory>",
        "Line" : 467,
        "CharPositionInLine" : 91
      },
      "73" : {
        "Text" : "   要压缩js和css文件  ",
        "Line" : 468,
        "CharPositionInLine" : 44
      },
      "74" : {
        "Text" : "  以下目录和文件不会被压缩 排除本来就压缩的js文件，比如jquery.min.js  xxx-min.js之类的文件  ",
        "Line" : 474,
        "CharPositionInLine" : 90
      },
      "75" : {
        "Text" : "   压缩后输出文件目录  ",
        "Line" : 482,
        "CharPositionInLine" : 42
      },
      "76" : {
        "Text" : "  <outputDirectory>${basedir}/src/main/webapp/js/pc</outputDirectory>",
        "Line" : 483,
        "CharPositionInLine" : 97
      },
      "77" : {
        "Text" : " 导入maven打war包插件",
        "Line" : 488,
        "CharPositionInLine" : 35
      },
      "78" : {
        "Text" : "  在jboss中发布war包，如果包中包含log4j.jar，会报错，所以在本例中将此jar包排除在外。",
        "Line" : 494,
        "CharPositionInLine" : 81
      },
      "79" : {
        "Text" : "         <warSourceExcludes>WEB-INF/lib/log4j-${log4j.version}.jar</warSourceExcludes>",
        "Line" : 495,
        "CharPositionInLine" : 114
      },
      "80" : {
        "Text" : "  源文件中已经压缩的是.min结尾的js，css代码将不会打进war包",
        "Line" : 496,
        "CharPositionInLine" : 64
      },
      "81" : {
        "Text" : " <warSourceExcludes>**/*.js,**/*.css</warSourceExcludes>",
        "Line" : 497,
        "CharPositionInLine" : 84
      },
      "82" : {
        "Text" : "修改Maven的编译级别1.7",
        "Line" : 501,
        "CharPositionInLine" : 35
      },
      "83" : {
        "Text" : " 导入解决maven项目编译后classes文件中没有.xml映射文件问题",
        "Line" : 515,
        "CharPositionInLine" : 53
      },
      "CommentCount" : 84
    }
  },
  "FileTypes" : {
    "MAVEN" : 1
  },
  "ElapsedTime" : 970
}