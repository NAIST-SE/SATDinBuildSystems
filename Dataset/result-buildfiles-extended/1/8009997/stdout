{
  "Repository" : "8009997",
  "Revision" : "HEAD",
  "ObjectId" : "a1bc98b0ec8147bfed2245950a52cafecf5b8874",
  "CommitTime" : "2019-04-18T17:31:59Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "0a926bf2a1c7dbd6734bf762d2343b13f975753e",
      "LastModified" : "2019-04-09T22:30:56Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This Source Code Form is subject to the terms of the Mozilla Public\n\n# License, v. 2.0. If a copy of the MPL was not distributed with this\n\n# file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\n# Copyright (c) 2014 Mozilla Corporation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Pass `pull` in order to pull images instead of building them\n",
        "Line" : 11,
        "CharPositionInLine" : 21
      },
      "2" : {
        "Text" : "## Pass `--no-cache` in order to disable Docker cache\n",
        "Line" : 15,
        "CharPositionInLine" : 12
      },
      "3" : {
        "Text" : "## Pass `$(git rev-parse --short HEAD`) to tag docker hub images as latest git-hash instead\n\n## Run all (`tests`) or a specific test case (ex `tests/alerts/tests/alerts/test_proxy_drop_exfil_domains.py`)\n",
        "Line" : 16,
        "CharPositionInLine" : 20
      },
      "4" : {
        "Text" : "## Run all MozDef containers\n",
        "Line" : 26,
        "CharPositionInLine" : 11
      },
      "5" : {
        "Text" : "## Run the MozDef containers necessary to run in AWS (`cloudy-mozdef`). This is used by the CloudFormation-initiated setup.\n",
        "Line" : 30,
        "CharPositionInLine" : 19
      },
      "6" : {
        "Text" : "# docker-compose -f docker/compose/docker-compose-cloudy-mozdef.yml -p $(NAME) pull  # Images are now in the local packer build AMI and no docker pull is needed\n",
        "Line" : 33,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "## Run the MozDef containers with a user specified env file. Run with make 'run-env-mozdef -e ENV=my.env'\n",
        "Line" : 37,
        "CharPositionInLine" : 16
      },
      "8" : {
        "Text" : "#Check for existence of ENV\n",
        "Line" : 38,
        "CharPositionInLine" : 32
      },
      "9" : {
        "Text" : "## Run all tests (getting/building images as needed)\n",
        "Line" : 52,
        "CharPositionInLine" : 30
      },
      "10" : {
        "Text" : "## Just spin up external resources for tests and have them listen externally\n",
        "Line" : 55,
        "CharPositionInLine" : 30
      },
      "11" : {
        "Text" : "## Just run the external resources required for tests\n",
        "Line" : 60,
        "CharPositionInLine" : 22
      },
      "12" : {
        "Text" : "## Just run the tests (no build/get). Use `make TEST_CASE=tests/...` for specific tests only\n",
        "Line" : 67,
        "CharPositionInLine" : 32
      },
      "13" : {
        "Text" : "## Build local MozDef images (use make NO_CACHE=--no-cache build to disable caching)\n",
        "Line" : 78,
        "CharPositionInLine" : 17
      },
      "14" : {
        "Text" : "## Build local MozDef images from the github branch (use make NO_CACHE=--no-cache build to disable caching).\n",
        "Line" : 82,
        "CharPositionInLine" : 20
      },
      "15" : {
        "Text" : "## Build end-to-end test environment only\n",
        "Line" : 88,
        "CharPositionInLine" : 14
      },
      "16" : {
        "Text" : "## Shutdown all services we started with docker-compose\n",
        "Line" : 95,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "## Upload locally built MozDef images tagged as the current git head (hub.docker.com/mozdef).\n",
        "Line" : 103,
        "CharPositionInLine" : 5
      },
      "18" : {
        "Text" : "## Upload locally built MozDef images tagged as the BRANCH.  Branch and tagged release are interchangeable here.\n",
        "Line" : 116,
        "CharPositionInLine" : 12
      },
      "19" : {
        "Text" : "## Download all pre-built images (hub.docker.com/mozdef)\n",
        "Line" : 123,
        "CharPositionInLine" : 9
      },
      "20" : {
        "Text" : "## Login as the MozDef CI user in order to perform a release of the containers.\n",
        "Line" : 131,
        "CharPositionInLine" : 11
      },
      "21" : {
        "Text" : "## Cleanup all docker volumes and shutdown all related services\n",
        "Line" : 135,
        "CharPositionInLine" : 7
      },
      "22" : {
        "Text" : "# Shorthands\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "## Create an example alert and working alert unit test\n",
        "Line" : 144,
        "CharPositionInLine" : 11
      },
      "CommentCount" : 24
    },
    "cloudy_mozdef/Makefile" : {
      "ObjectId" : "1bf4101106e5fcea39b1d20789e7c3ef8fc2d721",
      "LastModified" : "2019-03-25T15:05:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# For more information on the rationale behind the code in STACK_PARAMS see https://github.com/aws/aws-cli/issues/2429#issuecomment-441133480\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# MozDef uses a nested CF stack, the mozdef-parent.yml will tie all child stacks together and load them from S3\n\n# See also mozdef.infosec.mozilla.org bucket\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Location to publish templates for public consumption\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# OIDC_CLIENT_SECRET is set in an environment variable by running \"source aws_parameters.sh\"\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Note: This requires AWS access\n\n# https://blog.gruntwork.io/locating-aws-ami-owner-id-and-image-name-for-packer-builds-7616fe46b49a\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Build the base AMI with packer\n",
        "Line" : 34,
        "CharPositionInLine" : 21
      },
      "6" : {
        "Text" : "## Create everything you need for a fresh new stack!\n",
        "Line" : 39,
        "CharPositionInLine" : 23
      },
      "7" : {
        "Text" : "## Updates the nested stack on AWS\n",
        "Line" : 54,
        "CharPositionInLine" : 23
      },
      "8" : {
        "Text" : "## Verify the CloudFormation template pass linting tests\n",
        "Line" : 66,
        "CharPositionInLine" : 10
      },
      "9" : {
        "Text" : "## Output current CloudFormation stack status\n",
        "Line" : 70,
        "CharPositionInLine" : 14
      },
      "CommentCount" : 10
    },
    "docker/builder/Makefile" : {
      "ObjectId" : "242db4b654df947b28c0bc14c4aad2664ebd569a",
      "LastModified" : "2018-10-19T19:10:10Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "docs/Makefile" : {
      "ObjectId" : "f6f4b39a9f99e01351dd064b0b9a7d2354c2575f",
      "LastModified" : "2018-10-19T19:10:10Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# User-friendly check for sphinx-build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Internal variables.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "mozdef_util/Makefile" : {
      "ObjectId" : "7ab5b9fa602e9c7a77f2d00f9bfda092a4b9c57d",
      "LastModified" : "2018-12-14T23:18:37Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "## (.*)$$', line)\n",
        "Line" : 8,
        "CharPositionInLine" : 38
      },
      "1" : {
        "Text" : "## remove all build and Python artifacts\n",
        "Line" : 18,
        "CharPositionInLine" : 29
      },
      "2" : {
        "Text" : "## remove build artifacts\n",
        "Line" : 20,
        "CharPositionInLine" : 13
      },
      "3" : {
        "Text" : "## remove Python file artifacts\n",
        "Line" : 27,
        "CharPositionInLine" : 11
      },
      "4" : {
        "Text" : "## check style with flake8\n",
        "Line" : 33,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "## package and upload a release\n",
        "Line" : 36,
        "CharPositionInLine" : 14
      },
      "6" : {
        "Text" : "## builds source and wheel package\n",
        "Line" : 39,
        "CharPositionInLine" : 12
      },
      "7" : {
        "Text" : "## install the package to the active Python's site-packages\n",
        "Line" : 44,
        "CharPositionInLine" : 15
      },
      "CommentCount" : 8
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 5
  },
  "ElapsedTime" : 2520
}