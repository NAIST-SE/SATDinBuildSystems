{
  "Repository" : "11837210",
  "Revision" : "HEAD",
  "ObjectId" : "436d41c3e3dd1a9b629703ee76fd0ef2ee212ef8",
  "CommitTime" : "2016-09-14T12:00:23Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "72a265a11c9dcaafefd06ed478cd13590cce81f1",
      "LastModified" : "2016-01-05T13:49:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set project name\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMake version requirement\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Make our cmake macros to be available for include\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Newline before any output from the CMake script.\n",
        "Line" : 11,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "# Declare options and cached variables that\n\n# can be overridden via  cmake cmd line -D<var>=foo\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If not passed to cmake, set and cache normalized path for environment variables\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# If we still haven't resolved dependencies report a fatal error\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# CMake policies\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# INTERFACE_LINK_LIBRARIES defines the link interface\n",
        "Line" : 66,
        "CharPositionInLine" : 39
      },
      "9" : {
        "Text" : "# Disallow use of the LOCATION target property - therefore we set to OLD as we still need it\n\n# MACOSX_RPATH is enabled by default\n",
        "Line" : 69,
        "CharPositionInLine" : 39
      },
      "10" : {
        "Text" : "# Compiler-specific C++11 activation. Partial C++11 support is mandatory for Tundra-urho3d.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# MSVC has partial C++11 support beginning in VC10\n",
        "Line" : 92,
        "CharPositionInLine" : 21
      },
      "12" : {
        "Text" : "# Set CMake library search policy\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Detect that a supported Visual Version is used and set up helper variables VC_VER and VS_PLATFORM\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Set compiler warning levels.\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# < 2012\n",
        "Line" : 134,
        "CharPositionInLine" : 32
      },
      "16" : {
        "Text" : "# We are using 'override' and strongly typed enums but those are nonstandard extensions in VC < 11 causing a warning.\n",
        "Line" : 135,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# > 2013\n",
        "Line" : 138,
        "CharPositionInLine" : 34
      },
      "18" : {
        "Text" : "# Disable overeager and false positives causing C4458 (\"declaration of 'indentifier' hides class member\"), at least for now.\n",
        "Line" : 139,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# Disable unnecessary build types\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Always use Unicode character set on Windows.\n",
        "Line" : 150,
        "CharPositionInLine" : 41
      },
      "21" : {
        "Text" : "# TODO Due to the C++11/C99 requirement, we should use the safe versions of sprintf() et al.\n\n# and the following should not be used.\n",
        "Line" : 154,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Until worked around properly, disable enhanced instructions on VS2013. Otherwise some math code\n\n# will work incorrectly (eg. sending optimized rigidbody messages)\n",
        "Line" : 157,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# TODO This was/is needed for kNet, will not anymore as soon as kNet's master branch is merged to stable.\n",
        "Line" : 163,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# Enable MathGeoLib-Urho3D interoperability by default everywhere.\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# On all platforms, we enable PCH files by default. TODO Not implemented on non-Windows plaforms!\n\n# TODO Make this an option instead?\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Set CMake custom module path & include them\n\n# The following CMake modules are required for the project to build.\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Find/configure Urho\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Find/configure MathGeoLib\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Find/configure kNet\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Find/configure Bullet\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Set global hardcoded install prefix. User cannot change this at the moment, until we figure how we want to use this!\n\n# Call the cleanup step that cleans the install prefix before every installations. This is important as module setups might change between builds.\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# If the custom optional modules configuration file does not yet\n\n# exist, create it from the template file.\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Setup library output dir for Android\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Deploy Urho3D library\n\n# Todo: should rather happen as part of the deps build\n",
        "Line" : 221,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# Read the set of optional modules from another file\n\n# that is kept outside the source control.\n\n# To configure the set of optional modules to add to the build,\n\n# edit CMakeBuildConfig.txt and rerun cmake.\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 36
    },
    "cmake/ConfigurePackages.cmake" : {
      "ObjectId" : "2807bff21327bca855c0582db864cb924a4afdfe",
      "LastModified" : "2016-04-19T10:55:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# =============================================================================\n\n# Configuration macros for global dependencies.\n\n#\n\n# All global dependency configurations should go here.\n\n# All per-module dependency configurations should go in <Module>/CMakeLists.txt.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find Urho3D library\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Set the debug libraries to match our convention\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Using just find_package does not set all Urho3D definitions. Set some most important of them manually\n",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Boost needed by modules utilizing websocketpp\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Boost lookup rules:\n\n# 1. If a CMake variable BOOST_ROOT was set before calling configure_boost(), that directory is used.\n\n# 2. Otherwise, if an environment variable BOOST_ROOT was set, use that.\n\n# 3. Otherwise, use Boost from the Tundra deps directory.\n",
        "Line" : 70,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# We are trying to move to absolute lib path linking.\n\n# This enables us to use Boost for certain functionality\n\n# without linking Boost to all built libraries and executables.\n\n# This works cleanly even if TUNDRA_NO_BOOST is defined.\n\n# Windows uses auto-linking to library names so it will need this dir.\n",
        "Line" : 101,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 7
    },
    "cmake/ModuleSetup.cmake" : {
      "ObjectId" : "227c058b96d515ab8c491355ee7443f3d2b87402",
      "LastModified" : "2014-11-27T13:57:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tundra build macros\n\n#\n\n# Generally used as follows:\n\n# 1. call configure_${PACKAGE}() once from the main CMakeLists.txt\n\n# 2. call init_target (${NAME}) once per build target in the module CMakeLists.txt\n\n# 3. call use_package (${PACKAGE}) once per build target\n\n# 3. call use_modules() with a list of local module names for includes\n\n# 4. call build_library/executable() on the source files\n\n# 5. call link_package (${PACKAGE}) once per build target\n\n# 6. call link_modules() with a list of local module names libraries\n\n# 7. call SetupCompileFlags/SetupCompileFlagsWithPCH\n\n# 8. call final_target () at the end of build target's CMakeLists.txt\n\n#    (not needed for lib targets, only exe's & modules)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# =============================================================================\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# reusable macros\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# define target name, and directory, if it should be output\n\n# ARGV1 is directive to output, and ARGV2 is where to\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Define target name and output directory.\n\n# Skip ARGV1 that is the keyword OUTPUT.\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Include our own module path. This makes #include \"x.h\"\n\n# work in project subfolders to include the main directory headers\n\n# note: CMAKE_INCLUDE_CURRENT_DIR could automate this\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Add the SDK static libs build location for linking\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# set TARGET_DIR\n",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# export symbols, copy needs to be added via copy_target\n",
        "Line" : 43,
        "CharPositionInLine" : 16
      },
      "9" : {
        "Text" : "# set TARGET_DIR\n",
        "Line" : 53,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# copy to target directory\n",
        "Line" : 56,
        "CharPositionInLine" : 12
      },
      "11" : {
        "Text" : "# set target directory\n",
        "Line" : 60,
        "CharPositionInLine" : 12
      },
      "12" : {
        "Text" : "# Avoid putting built targets in ./bin/[RelWithDebInfo | Release | Debug] and ./bin/plugins/[RelWithDebInfo | Release | Debug]\n\n# Only one rule should be in place here, to avoid a bug (which is reported as fixed) in CMake where different build setups are used\n\n# which results already built libs to be deleted and thus causing build errors in further modules.\n\n# See  http://public.kitware.com/Bug/view.php?id=11844 for more info\n",
        "Line" : 64,
        "CharPositionInLine" : 16
      },
      "13" : {
        "Text" : "# message (STATUS \"project type: \" ${PROJECT_TYPE})\n",
        "Line" : 86,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# newline after each project\n",
        "Line" : 90,
        "CharPositionInLine" : 16
      },
      "15" : {
        "Text" : "# run the setup install macro for everything included in this build\n",
        "Line" : 92,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# build a library from internal sources\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# *unix add -fPIC for static libraries\n",
        "Line" : 104,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Version information for shared libraries. Disabled for now\n\n#if (${TARGET_LIB_TYPE} STREQUAL \"SHARED\")\n\n#    if (WIN32)\n\n#        set(RESOURCE_FILES ${RESOURCE_FILES}\n\n#            ${PROJECT_SOURCE_DIR}/src/TundraCore/Resources/resource.h\n\n#            ${PROJECT_SOURCE_DIR}/src/TundraCore/Resources/TundraPlugin.rc)\n\n#    endif()\n\n#    # TODO non-Windows platforms.\n\n#endif()\n",
        "Line" : 109,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# build static libraries to /lib\n",
        "Line" : 131,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# internal library naming convention\n",
        "Line" : 137,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Android always needs lib prefix\n",
        "Line" : 139,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Add common system library dependencies for Android\n",
        "Line" : 145,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# build an executable from internal sources \n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# include and lib directories, and definitions\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# link directories\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Macro for using modules relative to the src directory\n\n# Example: use_modules(TundraCore Plugins/UrhoRenderer)\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# include local module libraries\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# manually find the debug libraries\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Enables the use of Precompiled Headers in the project this macro is invoked in. Also adds the DEBUG_CPP_NAME to each .cpp file that specifies the name of that compilation unit. MSVC only.\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Label StableHeaders.cpp to create the PCH file and mark all other .cpp files to use that PCH file.\n\n# Add a #define DEBUG_CPP_NAME \"this compilation unit name\" to each compilation unit to aid in memory leak checking.\n",
        "Line" : 220,
        "CharPositionInLine" : 8
      },
      "31" : {
        "Text" : "# TODO PCH for other platforms/compilers\n",
        "Line" : 231,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# Sets up the compilation flags without PCH. For now just set the DEBUG_CPP_NAME to each compilation unit.\n\n# TODO: The SetupCompileFlags and SetupCompileFlagsWithPCH macros should be merged, and the option to use PCH be passed in as a param. However,\n\n# CMake string ops in PROPERTIES COMPILE_FLAGS gave some problems with this, so these are separate for now.\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Add a #define DEBUG_CPP_NAME \"this compilation unit name\" to each compilation unit to aid in memory leak checking.\n",
        "Line" : 239,
        "CharPositionInLine" : 8
      },
      "34" : {
        "Text" : "# Convenience macro for including all TundraCore subfolders.\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Due to automatic CMake dependency transfer, we will need kNet and MathGeoLib link directories\n\n# Urho3D include directories are also needed throughout the project\n",
        "Line" : 263,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 36
    },
    "cmake/TundraInstall.cmake" : {
      "ObjectId" : "a6356d05690aa4e8212ade12ae3e6dca617b6419",
      "LastModified" : "2014-09-26T23:27:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macro for cleaning out the install directory before install, this is needed because module setup for the build might have changed\n\n# from the time install was last ran. This macro is automatically called from the main CMakeLists.txt.\n\n#\n\n# NOTE: This macro needs to be called before any other install macros or cmake install(...) calls are done, so its the first step!       \n\n#\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Never do the recursive remove to the install dir on other systems than windows.\n\n# This might do horrible things if you set CMAKE_INSTALL_PREFIX to /usr or similar.\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Macro for installing a directory into the install prefix.\n\n# Mean to be used for making sure your projects data files will be installed along with the build results.\n\n# DATA_SRC_DIR_PATH: The relative or absolute path of a directory you want to copy. (relative to your cmakelists.txt dir)\n\n# ARGV1: Optional path in the install destination.\n\n#\n\n# Example: setup_install_directory (media) will copy <project_dir>/media to <prefix>/bin/media\n\n#\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Resolve destination dir\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Install directory\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Macro for installing a file into the install prefix.\n\n# Mean to be used for making sure your projects data files will be installed along with the build results.\n\n# DATA_SRC_FILES: Absolute or relative path to file.\n\n# ARGV1: Optional path in the install destination.\n\n#\n\n# Example:  setup_install_file (ui/LoginWidget.ui \"data/ui\") will copy <project_dir>/ui/LoginWidget.ui to <prefix>/bin/data/ui\n\n# Example:  file (GLOB MY_INSTALL_FILES \"config/*.cfg\")\n\n#           setup_install_file (\"${MY_INSTALL_FILES}\") will copy <project_dir>/config/myconfig.cfg to <prefix>/bin \n\n#           NOTE: Must have \" \" around ${MY_INSTALL_FILES} for lists! seem to be needed if you \n\n#           are not using ARGN which we cant coz we have multiple params (right?)\n\n#\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Resolve destination dir\n",
        "Line" : 53,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Install file\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Macro for finding install files from a dir with a glob.\n\n# ARGV0: Search directory path\n\n# ARGV1: Search GLOB\n\n# ARGV2: OPTIONAL Configurations to install (Release|Debug|RelWithDebInfo)\n\n# ARGV3: OPTIONAL Destination directory in install <prefix>. If you give this param you need to give at least \"\" to ARGV2.\n\n#\n\n# Examples:\n\n# setup_install_files_find(\"project-config/generic\" \"*.xml\" \"\" \"config/xml\")\n\n# setup_install_files_find(\".\" \"plugins.cfg\" Release|RelWithDebInfo)\n\n# setup_install_files_find(\"debug-configs\" \"pluginsd.cfg\" Debug)\n\n#\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Find files\n",
        "Line" : 75,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# All configurations if not defined\n",
        "Line" : 79,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# Resolve destination dir\n",
        "Line" : 86,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# Install file\n",
        "Line" : 93,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# Mark windows dependencies for the install step with a regular expression. This has to give a number of parameters for playing nice.\n\n# DEP_INSTALL_DIR: Relative install path inside the target directory. Use empty string \"\" for root.\n\n# RELATIVE_DEP_DIR: Relative path where to look inside ${ENV_TUNDRA_DEP_PATH} eg. \"qt/bin/\". NOTE: This _must_ have trailing slash \"/\" othewise it will also copy the source directory.\n\n# DLL_REGEXP: Regular expression\n\n# CONFIGURATION: Configuration to apply the install step eg. Release|RelWithDebInfo|Debug or Release.\n\n#\n\n# Optional parameters: You can give another set with a different configuration. DEP_INSTALL_DIR can only be given once, both sets go to that directory.\n\n#\n\n# Example: setup_install_windows_deps_regexp (ogre-safe-nocrashes/bin/release \"RenderSystem_+.*[^d][.]dll$\" Release ogre-safe-nocrashes/bin/debug \"RenderSystem_+.*[d][.]dll$\" Debug)\n\n#\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Optional params: RELATIVE_DEP_DIR2 DLL_REGEXP2 CONFIGURATION2 \n",
        "Line" : 112,
        "CharPositionInLine" : 103
      },
      "15" : {
        "Text" : "# Mark windows dependencies for the install step by ; delimited file list (if multiple). Source path is ${TUNDRA_BIN}.\n\n#\n\n# Examples:\n\n# setup_install_windows_deps (\"cg.dll\" Release|RelWithDebInfo|Debug)\n\n# setup_install_windows_deps (\"OgreMain.dll;RenderSystem_Direct3D9.dll\" Release|RelWithDebInfo \"OgreMain_d.dll;RenderSystem_Direct3D9_d.dll\" Debug)\n\n#\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Optional params: DLL_FILES2 DLL_CONFIGURATION2\n",
        "Line" : 139,
        "CharPositionInLine" : 66
      },
      "17" : {
        "Text" : "# Macro removes file from install <prefix>\n\n# Handy for removing files you don't want in the installation after setup_install_directory() or setup_install_files_find().\n\n#\n\n# Example: setup_remove_file (\"data/assets/dummy.txt\")\n\n#\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Removes directory and its content recursively from install <prefix>\n\n# Handy for removing directories you don't want in the installation after setup_install_directory() or setup_install_files_find().\n\n#\n\n# Example: setup_remove_directory(\"data/assets/translations\")\n\n#\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Macro for installing the target build results into the install prefix.\n\n# This macro gets called automatically in final_target() for all projects.\n\n# - shared libraries    <prefix>/bin/plugins\n\n# - executables         <prefix>/bin\n\n# - static libraries    <prefix>/lib\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# For Android there is no install step; everything will be bundled into the apk\n",
        "Line" : 184,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Shared libraries\n",
        "Line" : 186,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# assume /plugins for shared libs, if not plugins assume root.\n",
        "Line" : 188,
        "CharPositionInLine" : 12
      },
      "23" : {
        "Text" : "# non DLL platforms shared libs are LIBRARY\n\n# DLL platforms shared libs are RUNTIME\n",
        "Line" : 194,
        "CharPositionInLine" : 72
      },
      "24" : {
        "Text" : "# todo: This gives errors on linux. This should be enabled if we want linux SDK builds.\n",
        "Line" : 198,
        "CharPositionInLine" : 12
      },
      "25" : {
        "Text" : "# DLL platforms static link part of the shared lib are ARCHIVE\n",
        "Line" : 200,
        "CharPositionInLine" : 118
      },
      "26" : {
        "Text" : "# Static libraries\n",
        "Line" : 204,
        "CharPositionInLine" : 8
      },
      "27" : {
        "Text" : "# Executables\n",
        "Line" : 211,
        "CharPositionInLine" : 8
      },
      "28" : {
        "Text" : "# Headers\n",
        "Line" : 216,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : "# install headers, directly from current source dir and look for subfolders with headers\n",
        "Line" : 218,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 30
    },
    "cmake/TundraUtils.cmake" : {
      "ObjectId" : "86bf7f196f4b8f7a6a0393116efd2118f3de0549",
      "LastModified" : "2014-11-14T19:42:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Start section. Prints a title that must be passed.\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Ends a section. Calling this is optional, the previous\n\n# section is automatically ended in BeginSection.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Init section macro state\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# AddProject takes in one or two parameters:\n\n# - One param:  argv0 == the relative directory (to the root CMakeLists.txt) where you project is and that contains the CMakeLists.txt for this project.\n\n# - Two params: argv0 == project type/category (used also for the solution folder's name), wrap in double quotes if the name contains spaces\n\n#               argv1 == same as in one arg situation.\n\n# More useful for building the Tundra project when including platform provided projects.\n\n# Note: Due to the CMake's add_subdirectory restrictions, the directory cannot be outside the Tundra source tree, hopefully we can go around this one day.\n\n# Examples:     AddProject(TundraCore)\n\n#               AddProject(\"Application Plugins\" Plugins/JavascriptModule)\n\n#               AddProject(mysubdir/MyPlugin)\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Adds the given folder_name into the source files of the current project. Use this macro when your module contains .cpp and .h files in several subdirectories.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Lists sub directories\n\n# Get sub directory names from directory of current CMakeLists.txt\n\n#   GetSubDirectories(MY_RESULT_VAR)\n\n# Get absolute directort paths\n\n#   GetSubDirectories(MY_RESULT_VAR \"/my/path\", TRUE)\n\n# Get absolute sub directory paths from directory of current CMakeLists.txt\n\n#   GetSubDirectories(MY_RESULT_VAR ${CMAKE_CURRENT_SOURCE_DIR} TRUE)\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# If second param is not defined use currently being processed CMakeLists.txt directory\n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Absolute path if extra argument is truthy\n",
        "Line" : 74,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 8
    },
    "cmake/android.toolchain.cmake" : {
      "ObjectId" : "fc349162fb807f6caa846bad28506fe2eeffe9ba",
      "LastModified" : "2014-11-14T19:42:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2010-2011, Ethan Rublee\n\n# Copyright (c) 2011-2014, Andrey Kamaev\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# 1.  Redistributions of source code must retain the above copyright notice,\n\n#     this list of conditions and the following disclaimer.\n\n#\n\n# 2.  Redistributions in binary form must reproduce the above copyright notice,\n\n#     this list of conditions and the following disclaimer in the documentation\n\n#     and/or other materials provided with the distribution.\n\n#\n\n# 3.  Neither the name of the copyright holder nor the names of its\n\n#     contributors may be used to endorse or promote products derived from this\n\n#     software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ------------------------------------------------------------------------------\n\n#  Android CMake toolchain file, for use with the Android NDK r5-r10c\n\n#  Requires cmake 2.6.3 or newer (2.8.5 or newer is recommended).\n\n#  See home page: https://github.com/taka-no-me/android-cmake\n\n#\n\n#  Usage Linux:\n\n#   $ export ANDROID_NDK=/absolute/path/to/the/android-ndk\n\n#   $ mkdir build && cd build\n\n#   $ cmake -DCMAKE_TOOLCHAIN_FILE=path/to/the/android.toolchain.cmake ..\n\n#   $ make -j8\n\n#\n\n#  Usage Linux (using standalone toolchain):\n\n#   $ export ANDROID_STANDALONE_TOOLCHAIN=/absolute/path/to/android-toolchain\n\n#   $ mkdir build && cd build\n\n#   $ cmake -DCMAKE_TOOLCHAIN_FILE=path/to/the/android.toolchain.cmake ..\n\n#   $ make -j8\n\n#\n\n#  Usage Windows:\n\n#     You need native port of make to build your project.\n\n#     Android NDK r7 (and newer) already has make.exe on board.\n\n#     For older NDK you have to install it separately.\n\n#     For example, this one: http://gnuwin32.sourceforge.net/packages/make.htm\n\n#\n\n#   $ SET ANDROID_NDK=C:\\absolute\\path\\to\\the\\android-ndk\n\n#   $ mkdir build && cd build\n\n#   $ cmake.exe -G\"MinGW Makefiles\"\n\n#       -DCMAKE_TOOLCHAIN_FILE=path\\to\\the\\android.toolchain.cmake\n\n#       -DCMAKE_MAKE_PROGRAM=\"%ANDROID_NDK%\\prebuilt\\windows\\bin\\make.exe\" ..\n\n#   $ cmake.exe --build .\n\n#\n\n#\n\n#  Options (can be set as cmake parameters: -D<option_name>=<value>):\n\n#    ANDROID_NDK=/opt/android-ndk - path to the NDK root.\n\n#      Can be set as environment variable. Can be set only at first cmake run.\n\n#\n\n#    ANDROID_STANDALONE_TOOLCHAIN=/opt/android-toolchain - path to the\n\n#      standalone toolchain. This option is not used if full NDK is found\n\n#      (ignored if ANDROID_NDK is set).\n\n#      Can be set as environment variable. Can be set only at first cmake run.\n\n#\n\n#    ANDROID_ABI=armeabi-v7a - specifies the target Application Binary\n\n#      Interface (ABI). This option nearly matches to the APP_ABI variable\n\n#      used by ndk-build tool from Android NDK.\n\n#\n\n#      Possible targets are:\n\n#        \"armeabi\" - ARMv5TE based CPU with software floating point operations\n\n#        \"armeabi-v7a\" - ARMv7 based devices with hardware FPU instructions\n\n#            this ABI target is used by default\n\n#        \"armeabi-v7a with NEON\" - same as armeabi-v7a, but\n\n#            sets NEON as floating-point unit\n\n#        \"armeabi-v7a with VFPV3\" - same as armeabi-v7a, but\n\n#            sets VFPV3 as floating-point unit (has 32 registers instead of 16)\n\n#        \"armeabi-v6 with VFP\" - tuned for ARMv6 processors having VFP\n\n#        \"x86\" - IA-32 instruction set\n\n#        \"mips\" - MIPS32 instruction set\n\n#\n\n#      64-bit ABIs for NDK r10 and newer:\n\n#        \"arm64-v8a\" - ARMv8 AArch64 instruction set\n\n#        \"x86_64\" - Intel64 instruction set (r1)\n\n#        \"mips64\" - MIPS64 instruction set (r6)\n\n#\n\n#    ANDROID_NATIVE_API_LEVEL=android-8 - level of Android API compile for.\n\n#      Option is read-only when standalone toolchain is used.\n\n#      Note: building for \"android-L\" requires explicit configuration.\n\n#\n\n#    ANDROID_TOOLCHAIN_NAME=arm-linux-androideabi-4.9 - the name of compiler\n\n#      toolchain to be used. The list of possible values depends on the NDK\n\n#      version. For NDK r10c the possible values are:\n\n#\n\n#        * aarch64-linux-android-4.9\n\n#        * aarch64-linux-android-clang3.4\n\n#        * aarch64-linux-android-clang3.5\n\n#        * arm-linux-androideabi-4.6\n\n#        * arm-linux-androideabi-4.8\n\n#        * arm-linux-androideabi-4.9 (default)\n\n#        * arm-linux-androideabi-clang3.4\n\n#        * arm-linux-androideabi-clang3.5\n\n#        * mips64el-linux-android-4.9\n\n#        * mips64el-linux-android-clang3.4\n\n#        * mips64el-linux-android-clang3.5\n\n#        * mipsel-linux-android-4.6\n\n#        * mipsel-linux-android-4.8\n\n#        * mipsel-linux-android-4.9\n\n#        * mipsel-linux-android-clang3.4\n\n#        * mipsel-linux-android-clang3.5\n\n#        * x86-4.6\n\n#        * x86-4.8\n\n#        * x86-4.9\n\n#        * x86-clang3.4\n\n#        * x86-clang3.5\n\n#        * x86_64-4.9\n\n#        * x86_64-clang3.4\n\n#        * x86_64-clang3.5\n\n#\n\n#    ANDROID_FORCE_ARM_BUILD=OFF - set ON to generate 32-bit ARM instructions\n\n#      instead of Thumb. Is not available for \"x86\" (inapplicable) and\n\n#      \"armeabi-v6 with VFP\" (is forced to be ON) ABIs.\n\n#\n\n#    ANDROID_NO_UNDEFINED=ON - set ON to show all undefined symbols as linker\n\n#      errors even if they are not used.\n\n#\n\n#    ANDROID_SO_UNDEFINED=OFF - set ON to allow undefined symbols in shared\n\n#      libraries. Automatically turned for NDK r5x and r6x due to GLESv2\n\n#      problems.\n\n#\n\n#    LIBRARY_OUTPUT_PATH_ROOT=${CMAKE_SOURCE_DIR} - where to output binary\n\n#      files. See additional details below.\n\n#\n\n#    ANDROID_SET_OBSOLETE_VARIABLES=ON - if set, then toolchain defines some\n\n#      obsolete variables which were used by previous versions of this file for\n\n#      backward compatibility.\n\n#\n\n#    ANDROID_STL=gnustl_static - specify the runtime to use.\n\n#\n\n#      Possible values are:\n\n#        none           -> Do not configure the runtime.\n\n#        system         -> Use the default minimal system C++ runtime library.\n\n#                          Implies -fno-rtti -fno-exceptions.\n\n#                          Is not available for standalone toolchain.\n\n#        system_re      -> Use the default minimal system C++ runtime library.\n\n#                          Implies -frtti -fexceptions.\n\n#                          Is not available for standalone toolchain.\n\n#        gabi++_static  -> Use the GAbi++ runtime as a static library.\n\n#                          Implies -frtti -fno-exceptions.\n\n#                          Available for NDK r7 and newer.\n\n#                          Is not available for standalone toolchain.\n\n#        gabi++_shared  -> Use the GAbi++ runtime as a shared library.\n\n#                          Implies -frtti -fno-exceptions.\n\n#                          Available for NDK r7 and newer.\n\n#                          Is not available for standalone toolchain.\n\n#        stlport_static -> Use the STLport runtime as a static library.\n\n#                          Implies -fno-rtti -fno-exceptions for NDK before r7.\n\n#                          Implies -frtti -fno-exceptions for NDK r7 and newer.\n\n#                          Is not available for standalone toolchain.\n\n#        stlport_shared -> Use the STLport runtime as a shared library.\n\n#                          Implies -fno-rtti -fno-exceptions for NDK before r7.\n\n#                          Implies -frtti -fno-exceptions for NDK r7 and newer.\n\n#                          Is not available for standalone toolchain.\n\n#        gnustl_static  -> Use the GNU STL as a static library.\n\n#                          Implies -frtti -fexceptions.\n\n#        gnustl_shared  -> Use the GNU STL as a shared library.\n\n#                          Implies -frtti -fno-exceptions.\n\n#                          Available for NDK r7b and newer.\n\n#                          Silently degrades to gnustl_static if not available.\n\n#\n\n#    ANDROID_STL_FORCE_FEATURES=ON - turn rtti and exceptions support based on\n\n#      chosen runtime. If disabled, then the user is responsible for settings\n\n#      these options.\n\n#\n\n#  What?:\n\n#    android-cmake toolchain searches for NDK/toolchain in the following order:\n\n#      ANDROID_NDK - cmake parameter\n\n#      ANDROID_NDK - environment variable\n\n#      ANDROID_STANDALONE_TOOLCHAIN - cmake parameter\n\n#      ANDROID_STANDALONE_TOOLCHAIN - environment variable\n\n#      ANDROID_NDK - default locations\n\n#      ANDROID_STANDALONE_TOOLCHAIN - default locations\n\n#\n\n#    Make sure to do the following in your scripts:\n\n#      SET( CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${my_cxx_flags}\" )\n\n#      SET( CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} ${my_cxx_flags}\" )\n\n#    The flags will be prepopulated with critical flags, so don't loose them.\n\n#    Also be aware that toolchain also sets configuration-specific compiler\n\n#    flags and linker flags.\n\n#\n\n#    ANDROID and BUILD_ANDROID will be set to true, you may test any of these\n\n#    variables to make necessary Android-specific configuration changes.\n\n#\n\n#    Also ARMEABI or ARMEABI_V7A or X86 or MIPS or ARM64_V8A or X86_64 or MIPS64\n\n#    will be set true, mutually exclusive. NEON option will be set true\n\n#    if VFP is set to NEON.\n\n#\n\n#    LIBRARY_OUTPUT_PATH_ROOT should be set in cache to determine where Android\n\n#    libraries will be installed.\n\n#    Default is ${CMAKE_SOURCE_DIR}, and the android libs will always be\n\n#    under the ${LIBRARY_OUTPUT_PATH_ROOT}/libs/${ANDROID_NDK_ABI_NAME}\n\n#    (depending on the target ABI). This is convenient for Android packaging.\n\n#\n\n# ------------------------------------------------------------------------------\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Modified by Lasse Oorni and Yao Wei Tjong for Urho3D\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Urho3D: on Windows Cygwin-based NDK tools may fail in the linking phase with too long command line. Turn on response files to avoid this\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# subsequent toolchain loading is not really needed\n",
        "Line" : 222,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# touch toolchain variable to suppress \"unused variable\" warning\n",
        "Line" : 227,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# inherit settings in recursive loads\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# this one is important\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# this one not so much\n",
        "Line" : 243,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# rpath makes low sence for Android\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# NDK search paths\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# known ABIs\n",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# API level defaults\n\n# Urho3D: default to API 12\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# fight against cygwin\n",
        "Line" : 387,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# remove cygwin from PATH\n",
        "Line" : 396,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# detect current host platform\n",
        "Line" : 405,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# see if we have path to Android NDK\n",
        "Line" : 430,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# see if we have path to Android standalone toolchain\n",
        "Line" : 433,
        "CharPositionInLine" : 1
      },
      "18" : {
        "Text" : "#try to find Android NDK in one of the the default locations\n",
        "Line" : 437,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "#try to find Android standalone toolchain in one of the the default locations\n",
        "Line" : 451,
        "CharPositionInLine" : 3
      },
      "20" : {
        "Text" : "# remember found paths\n",
        "Line" : 462,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# try to detect change\n",
        "Line" : 479,
        "CharPositionInLine" : 1
      },
      "22" : {
        "Text" : "# android NDK layout\n",
        "Line" : 503,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# try to automatically detect the layout\n",
        "Line" : 506,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# only 32-bit at the moment\n",
        "Line" : 518,
        "CharPositionInLine" : 71
      },
      "25" : {
        "Text" : "# only 32-bit at the moment\n",
        "Line" : 523,
        "CharPositionInLine" : 71
      },
      "26" : {
        "Text" : "# ANDROID_NDK_LAYOUT STREQUAL \"RELEASE\"\n",
        "Line" : 527,
        "CharPositionInLine" : 8
      },
      "27" : {
        "Text" : "# try to detect change of NDK\n",
        "Line" : 534,
        "CharPositionInLine" : 1
      },
      "28" : {
        "Text" : "# get all the details about standalone toolchain\n",
        "Line" : 548,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#message(\"machine: !${__machine}!\\narch: !${__arch}!\\nversion: !${__version}!\\ntoolchain: !${__toolchain}!\\n\")\n",
        "Line" : 615,
        "CharPositionInLine" : 3
      },
      "30" : {
        "Text" : "# get all the details about NDK\n",
        "Line" : 627,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# do not go through all toolchains if we know the name\n",
        "Line" : 636,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# we need clang to go after gcc\n",
        "Line" : 649,
        "CharPositionInLine" : 39
      },
      "33" : {
        "Text" : "# build list of available ABIs\n",
        "Line" : 667,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# choose target ABI\n",
        "Line" : 680,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# verify that target ABI is supported\n",
        "Line" : 682,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# set target ABI options\n",
        "Line" : 692,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# need always fallback to older platform\n",
        "Line" : 738,
        "CharPositionInLine" : 1
      },
      "38" : {
        "Text" : "# really dirty hack\n\n# it is not possible to change CMAKE_SYSTEM_PROCESSOR after the first run...\n",
        "Line" : 766,
        "CharPositionInLine" : 1
      },
      "39" : {
        "Text" : "# choose toolchain\n",
        "Line" : 779,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# choose native API level\n",
        "Line" : 828,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# adjust API level\n",
        "Line" : 832,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# validate\n",
        "Line" : 844,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# remember target ABI\n",
        "Line" : 865,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# runtime choice (STL, rtti, exceptions)\n",
        "Line" : 873,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# honor legacy ANDROID_USE_STLPORT\n",
        "Line" : 875,
        "CharPositionInLine" : 1
      },
      "46" : {
        "Text" : "# setup paths and STL for standalone toolchain\n",
        "Line" : 950,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# old location ( pre r8c )\n",
        "Line" : 959,
        "CharPositionInLine" : 3
      },
      "48" : {
        "Text" : "# always search static GNU STL to get the location of libsupc++.a\n",
        "Line" : 969,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "# clang\n",
        "Line" : 1004,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# setup paths and STL for NDK\n",
        "Line" : 1028,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# do nothing\n",
        "Line" : 1034,
        "CharPositionInLine" : 2
      },
      "52" : {
        "Text" : "# before r7\n",
        "Line" : 1044,
        "CharPositionInLine" : 42
      },
      "53" : {
        "Text" : "# before r8d\n",
        "Line" : 1052,
        "CharPositionInLine" : 46
      },
      "54" : {
        "Text" : "# before r7\n",
        "Line" : 1057,
        "CharPositionInLine" : 42
      },
      "55" : {
        "Text" : "# gnustl binary for 4.7 compiler is buggy :(\n\n# TODO: look for right fix\n",
        "Line" : 1069,
        "CharPositionInLine" : 4
      },
      "56" : {
        "Text" : "# find libsupc++.a - rtti & exceptions\n",
        "Line" : 1087,
        "CharPositionInLine" : 1
      },
      "57" : {
        "Text" : "# r8b or newer\n",
        "Line" : 1089,
        "CharPositionInLine" : 137
      },
      "58" : {
        "Text" : "# r7-r8\n",
        "Line" : 1091,
        "CharPositionInLine" : 110
      },
      "59" : {
        "Text" : "# before r7\n",
        "Line" : 1093,
        "CharPositionInLine" : 36
      },
      "60" : {
        "Text" : "# case of shared STL linkage\n",
        "Line" : 1113,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# TODO: check if .so file exists before the renaming\n",
        "Line" : 1116,
        "CharPositionInLine" : 1
      },
      "62" : {
        "Text" : "# ccache support\n",
        "Line" : 1120,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# setup the cross-compiler\n",
        "Line" : 1133,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# Force set compilers because standard identification works badly for us\n",
        "Line" : 1176,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# force ASM compiler (required for CMake < 2.8.5)\n",
        "Line" : 1199,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# flags and definitions\n",
        "Line" : 1207,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# try to convert path to 8.3 form\n",
        "Line" : 1213,
        "CharPositionInLine" : 2
      },
      "68" : {
        "Text" : "# quotes can break try_compile and compiler identification\n",
        "Line" : 1228,
        "CharPositionInLine" : 2
      },
      "69" : {
        "Text" : "# NDK flags\n",
        "Line" : 1235,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# always compile ARMEABI_V6 in arm mode; otherwise there is no difference from ARMEABI\n",
        "Line" : 1252,
        "CharPositionInLine" : 2
      },
      "71" : {
        "Text" : "# good/necessary when porting desktop libraries\n",
        "Line" : 1281,
        "CharPositionInLine" : 62
      },
      "72" : {
        "Text" : "# see https://android-review.googlesource.com/#/c/47564/\n",
        "Line" : 1288,
        "CharPositionInLine" : 72
      },
      "73" : {
        "Text" : "# ABI-specific flags\n",
        "Line" : 1291,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# vfp == vfpv2\n",
        "Line" : 1302,
        "CharPositionInLine" : 91
      },
      "75" : {
        "Text" : "# STL\n",
        "Line" : 1317,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# C objects:\n",
        "Line" : 1328,
        "CharPositionInLine" : 2
      },
      "77" : {
        "Text" : "# variables controlling optional build flags\n",
        "Line" : 1346,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# before r7\n",
        "Line" : 1347,
        "CharPositionInLine" : 40
      },
      "79" : {
        "Text" : "# libGLESv2.so in NDK's prior to r7 refers to missing external symbols.\n\n# So this flag option is required for all projects using OpenGL from native.\n",
        "Line" : 1348,
        "CharPositionInLine" : 1
      },
      "80" : {
        "Text" : "# linker flags\n",
        "Line" : 1368,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# this is *required* to use the following linker flags that routes around\n\n# a CPU bug in some Cortex-A8 implementations:\n",
        "Line" : 1372,
        "CharPositionInLine" : 1
      },
      "82" : {
        "Text" : "# there is some sysroot-related problem in mips linker...\n",
        "Line" : 1379,
        "CharPositionInLine" : 2
      },
      "83" : {
        "Text" : "# after r8b\n",
        "Line" : 1400,
        "CharPositionInLine" : 48
      },
      "84" : {
        "Text" : "# version 4.6\n",
        "Line" : 1408,
        "CharPositionInLine" : 8
      },
      "85" : {
        "Text" : "# cache flags\n",
        "Line" : 1430,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# Urho3D: optimise for size\n",
        "Line" : 1433,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# put flags to cache (for debug purpose only)\n",
        "Line" : 1442,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "# finish flags\n",
        "Line" : 1448,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# configure rtti\n",
        "Line" : 1465,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "# configure exceptios\n",
        "Line" : 1474,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "# global includes and link directories\n",
        "Line" : 1485,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "# avoid CMP0015 policy warning\n",
        "Line" : 1487,
        "CharPositionInLine" : 111
      },
      "93" : {
        "Text" : "# detect if need link crtbegin_so.o explicitly\n",
        "Line" : 1490,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "# setup output directories\n",
        "Line" : 1527,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "# Urho3D: All libraries are first generated in CMake default binary directory and only the main target library is later copied to below output path by Urho3D own build script\n",
        "Line" : 1537,
        "CharPositionInLine" : 1
      },
      "96" : {
        "Text" : "# copy shaed stl library to build directory\n",
        "Line" : 1541,
        "CharPositionInLine" : 0
      },
      "97" : {
        "Text" : "# set these global flags for cmake client scripts to change behavior\n",
        "Line" : 1553,
        "CharPositionInLine" : 0
      },
      "98" : {
        "Text" : "# where is the target environment\n",
        "Line" : 1557,
        "CharPositionInLine" : 0
      },
      "99" : {
        "Text" : "# only search for libraries and includes in the ndk toolchain\n",
        "Line" : 1560,
        "CharPositionInLine" : 0
      },
      "100" : {
        "Text" : "# macro to find packages on the host OS\n",
        "Line" : 1566,
        "CharPositionInLine" : 0
      },
      "101" : {
        "Text" : "# macro to find programs on the host OS\n",
        "Line" : 1588,
        "CharPositionInLine" : 0
      },
      "102" : {
        "Text" : "# export toolchain settings for the try_compile() command\n",
        "Line" : 1625,
        "CharPositionInLine" : 0
      },
      "103" : {
        "Text" : "# force cmake to produce / instead of \\ in build commands for Ninja generator\n",
        "Line" : 1661,
        "CharPositionInLine" : 0
      },
      "104" : {
        "Text" : "# it is a bad hack after all\n\n# CMake generates Ninja makefiles with UNIX paths only if it thinks that we are going to build with MinGW\n",
        "Line" : 1663,
        "CharPositionInLine" : 1
      },
      "105" : {
        "Text" : "# tell CMake that we are MinGW\n\n# stop recursion\n",
        "Line" : 1665,
        "CharPositionInLine" : 37
      },
      "106" : {
        "Text" : "# unset( CMAKE_COMPILER_IS_MINGW ) # can't unset because CMake does not convert back-slashes in response files without it\n",
        "Line" : 1669,
        "CharPositionInLine" : 1
      },
      "107" : {
        "Text" : "# set some obsolete variables for backward compatibility\n",
        "Line" : 1674,
        "CharPositionInLine" : 0
      },
      "108" : {
        "Text" : "# Variables controlling behavior or set by cmake toolchain:\n\n#   ANDROID_ABI : \"armeabi-v7a\" (default), \"armeabi\", \"armeabi-v7a with NEON\", \"armeabi-v7a with VFPV3\", \"armeabi-v6 with VFP\", \"x86\", \"mips\", \"arm64-v8a\", \"x86_64\", \"mips64\"\n\n#   ANDROID_NATIVE_API_LEVEL : 3,4,5,8,9,14,15,16,17,18,19,21 (depends on NDK version)\n\n#   ANDROID_STL : gnustl_static/gnustl_shared/stlport_static/stlport_shared/gabi++_static/gabi++_shared/system_re/system/none\n\n#   ANDROID_FORBID_SYGWIN : ON/OFF\n\n#   ANDROID_NO_UNDEFINED : ON/OFF\n\n#   ANDROID_SO_UNDEFINED : OFF/ON  (default depends on NDK version)\n\n#   ANDROID_FUNCTION_LEVEL_LINKING : ON/OFF\n\n#   ANDROID_GOLD_LINKER : ON/OFF\n\n#   ANDROID_NOEXECSTACK : ON/OFF\n\n#   ANDROID_RELRO : ON/OFF\n\n#   ANDROID_FORCE_ARM_BUILD : ON/OFF\n\n#   ANDROID_STL_FORCE_FEATURES : ON/OFF\n\n#   ANDROID_SET_OBSOLETE_VARIABLES : ON/OFF\n\n# Can be set only at the first run:\n\n#   ANDROID_NDK\n\n#   ANDROID_STANDALONE_TOOLCHAIN\n\n#   ANDROID_TOOLCHAIN_NAME : the NDK name of compiler toolchain\n\n#   ANDROID_NDK_HOST_X64 : try to use x86_64 toolchain (default for x64 host systems)\n\n#   ANDROID_NDK_LAYOUT : the inner NDK structure (RELEASE, LINARO, ANDROID)\n\n#   LIBRARY_OUTPUT_PATH_ROOT : <any valid path>\n\n#   NDK_CCACHE : <path to your ccache executable>\n\n# Obsolete:\n\n#   ANDROID_API_LEVEL : superseded by ANDROID_NATIVE_API_LEVEL\n\n#   ARM_TARGET : superseded by ANDROID_ABI\n\n#   ARM_TARGETS : superseded by ANDROID_ABI (can be set only)\n\n#   ANDROID_NDK_TOOLCHAIN_ROOT : superseded by ANDROID_STANDALONE_TOOLCHAIN (can be set only)\n\n#   ANDROID_USE_STLPORT : superseded by ANDROID_STL=stlport_static\n\n#   ANDROID_LEVEL : superseded by ANDROID_NATIVE_API_LEVEL (completely removed)\n\n#\n\n# Primary read-only variables:\n\n#   ANDROID : always TRUE\n\n#   ARMEABI : TRUE for arm v6 and older devices\n\n#   ARMEABI_V6 : TRUE for arm v6\n\n#   ARMEABI_V7A : TRUE for arm v7a\n\n#   ARM64_V8A : TRUE for arm64-v8a\n\n#   NEON : TRUE if NEON unit is enabled\n\n#   VFPV3 : TRUE if VFP version 3 is enabled\n\n#   X86 : TRUE if configured for x86\n\n#   X86_64 : TRUE if configured for x86_64\n\n#   MIPS : TRUE if configured for mips\n\n#   MIPS64 : TRUE if configured for mips64\n\n#   BUILD_ANDROID : always TRUE\n\n#   BUILD_WITH_ANDROID_NDK : TRUE if NDK is used\n\n#   BUILD_WITH_STANDALONE_TOOLCHAIN : TRUE if standalone toolchain is used\n\n#   ANDROID_NDK_HOST_SYSTEM_NAME : \"windows\", \"linux-x86\" or \"darwin-x86\" depending on host platform\n\n#   ANDROID_NDK_ABI_NAME : \"armeabi\", \"armeabi-v7a\", \"x86\", \"mips\", \"arm64-v8a\", \"x86_64\", \"mips64\" depending on ANDROID_ABI\n\n#   ANDROID_NDK_RELEASE : from r5 to r10c; set only for NDK\n\n#   ANDROID_NDK_RELEASE_NUM : numeric ANDROID_NDK_RELEASE version (1000*major+minor)\n\n#   ANDROID_ARCH_NAME : \"arm\", \"x86\", \"mips\", \"arm64\", \"x86_64\", \"mips64\" depending on ANDROID_ABI\n\n#   ANDROID_SYSROOT : path to the compiler sysroot\n\n#   TOOL_OS_SUFFIX : \"\" or \".exe\" depending on host platform\n\n#   ANDROID_COMPILER_IS_CLANG : TRUE if clang compiler is used\n\n# Obsolete:\n\n#   ARMEABI_NDK_NAME : superseded by ANDROID_NDK_ABI_NAME\n\n#\n\n# Secondary (less stable) read-only variables:\n\n#   ANDROID_COMPILER_VERSION : GCC version used (not Clang version)\n\n#   ANDROID_CLANG_VERSION : version of clang compiler if clang is used\n\n#   ANDROID_CXX_FLAGS : C/C++ compiler flags required by Android platform\n\n#   ANDROID_SUPPORTED_ABIS : list of currently allowed values for ANDROID_ABI\n\n#   ANDROID_TOOLCHAIN_MACHINE_NAME : \"arm-linux-androideabi\", \"arm-eabi\" or \"i686-android-linux\"\n\n#   ANDROID_TOOLCHAIN_ROOT : path to the top level of toolchain (standalone or placed inside NDK)\n\n#   ANDROID_CLANG_TOOLCHAIN_ROOT : path to clang tools\n\n#   ANDROID_SUPPORTED_NATIVE_API_LEVELS : list of native API levels found inside NDK\n\n#   ANDROID_STL_INCLUDE_DIRS : stl include paths\n\n#   ANDROID_RTTI : if rtti is enabled by the runtime\n\n#   ANDROID_EXCEPTIONS : if exceptions are enabled by the runtime\n\n#   ANDROID_GCC_TOOLCHAIN_NAME : read-only, differs from ANDROID_TOOLCHAIN_NAME only if clang is used\n\n#   ANDROID_LIBM_PATH : path to libm.so (set to something like $(TOP)/out/target/product/<product_name>/obj/lib/libm.so) to workaround unresolved `sincos`\n\n#\n\n# Defaults:\n\n#   ANDROID_DEFAULT_NDK_API_LEVEL\n\n#   ANDROID_DEFAULT_NDK_API_LEVEL_${ARCH}\n\n#   ANDROID_NDK_SEARCH_PATHS\n\n#   ANDROID_STANDALONE_TOOLCHAIN_SEARCH_PATH\n\n#   ANDROID_SUPPORTED_ABIS_${ARCH}\n\n#   ANDROID_SUPPORTED_NDK_VERSIONS\n",
        "Line" : 1684,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 109
    },
    "src/Android/build.xml" : {
      "ObjectId" : "fa3f37748322e384b92efba1b14d81f98c19f936",
      "LastModified" : "2014-09-12T16:22:42Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " The local.properties file is created and updated by the 'android' tool.\n         It contains the path to the SDK. It should *NOT* be checked into\n         Version Control Systems. ",
        "Line" : 6,
        "CharPositionInLine" : 38
      },
      "1" : {
        "Text" : " The ant.properties file can be created by you. It is only edited by the\n         'android' tool to add properties to it.\n         This is the place to change some Ant specific build properties.\n         Here are some properties you may want to change/update:\n\n         source.dir\n             The name of the source directory. Default is 'src'.\n         out.dir\n             The name of the output directory. Default is 'bin'.\n\n         For other overridable properties, look at the beginning of the rules\n         files in the SDK, at tools/ant/build.xml\n\n         Properties related to the SDK location or the project target should\n         be updated using the 'android' tool with the 'update' action.\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems.\n\n         ",
        "Line" : 28,
        "CharPositionInLine" : 13
      },
      "2" : {
        "Text" : " if sdk.dir was not set from one of the property file, then\n         get it from the ANDROID_HOME env var.\n         This must be done before we load project.properties since\n         the proguard config can use sdk.dir ",
        "Line" : 34,
        "CharPositionInLine" : 49
      },
      "3" : {
        "Text" : " The project.properties file is created and updated by the 'android'\n         tool, as well as ADT.\n\n         This contains project specific properties such as project target, and library\n         dependencies. Lower level build properties are stored in ant.properties\n         (or in .classpath for Eclipse projects).\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems. ",
        "Line" : 48,
        "CharPositionInLine" : 77
      },
      "4" : {
        "Text" : " quick check on sdk.dir ",
        "Line" : 51,
        "CharPositionInLine" : 36
      },
      "5" : {
        "Text" : "\n        Import per project custom build rules if present at the root of the project.\n        This is the place to put custom intermediary targets such as:\n            -pre-build\n            -pre-compile\n            -post-compile (This is typically used for code obfuscation.\n                           Compiled code location: ${out.classes.absolute.dir}\n                           If this is not done in place, override ${out.dex.input.absolute.dir})\n            -post-package\n            -post-build\n            -pre-clean\n    ",
        "Line" : 68,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : " Import the actual build file.\n\n         To customize existing targets, there are two options:\n         - Customize only one target:\n             - copy/paste the target into this file, *before* the\n               <import> task.\n             - customize it to your needs.\n         - Customize the whole content of build.xml\n             - copy/paste the content of the rules files (minus the top node)\n               into this file, replacing the <import> task.\n             - customize to your needs.\n\n         ***********************\n         ****** IMPORTANT ******\n         ***********************\n         In all cases you must update the value of version-tag below to read 'custom' instead of an integer,\n         in order to avoid having your file be overridden by tools such as \"android update project\"\n    ",
        "Line" : 88,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : " version-tag: 1 ",
        "Line" : 89,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 8
    },
    "src/Plugins/AvatarApplication/CMakeLists.txt" : {
      "ObjectId" : "a9e9dc51e80882f00d5c56d52d232eac1bddb6e2",
      "LastModified" : "2016-04-19T10:55:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define target name and output directory\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define source files\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/Plugins/BulletPhysics/CMakeLists.txt" : {
      "ObjectId" : "28dad8047811688db25f38891f286e936d3060e4",
      "LastModified" : "2016-04-19T10:55:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define target name and output directory\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define source files\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/Plugins/CameraApplication/CMakeLists.txt" : {
      "ObjectId" : "45d5d3aadfb87011f5013bc750df8b1a50ab057c",
      "LastModified" : "2016-04-19T10:55:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define target name and output directory\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define source files\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/Plugins/ECEditor/CMakeLists.txt" : {
      "ObjectId" : "bf459c43eabc3beea07d3e87ab9db3e4abc2dc63",
      "LastModified" : "2016-04-19T10:55:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define target name and output directory\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define source files\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/Plugins/HttpPlugin/CMakeLists.txt" : {
      "ObjectId" : "479eae0deb25198e2325e2d7f23f5d2d26309603",
      "LastModified" : "2016-04-19T10:55:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define target name and output directory\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Define source files\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/Plugins/HttpServer/CMakeLists.txt" : {
      "ObjectId" : "c070716fa9ec71f31c891d2f75057b9fce4673d9",
      "LastModified" : "2016-06-23T15:08:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define target name and output directory\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define source files\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Includes\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Linking\r\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Visual Studio uses library auto-linking, so this is only necessary for the other platforms.\r\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "src/Plugins/JavaScript/CMakeLists.txt" : {
      "ObjectId" : "73fb7af7e37f87285b9aedc95f0f2b09f51fdbf9",
      "LastModified" : "2016-04-19T10:55:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define target name and output directory\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define source files\r\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Specify TundraCore includes manually instead of the full set, as compiling Duktape would clash with the Windows includes\r\n\n# due to Tundra's DebugAPI.h\r\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/Plugins/LoginScreen/CMakeLists.txt" : {
      "ObjectId" : "48886a52a09c747d912b9afe880e05b73537d678",
      "LastModified" : "2016-04-19T10:55:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define target name and output directory\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define source files\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/Plugins/SceneInteract/CMakeLists.txt" : {
      "ObjectId" : "cc5db9e528dc19b87d208c0d4c2739565fc9f416",
      "LastModified" : "2016-04-19T10:55:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define target name and output directory\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define source files\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/Plugins/TundraLogic/CMakeLists.txt" : {
      "ObjectId" : "2e481377cc5d2e148b5ca551942dc8460fb5ce0e",
      "LastModified" : "2016-04-19T10:55:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define target name and output directory\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define source files\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/Plugins/UrhoRenderer/CMakeLists.txt" : {
      "ObjectId" : "fb1588a563698d32dd2d040796ee4404da4e3b10",
      "LastModified" : "2016-04-19T10:55:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define target name and output directory\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define source files\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/Plugins/WebSocketServer/CMakeLists.txt" : {
      "ObjectId" : "5e52f7ba4458bb65ff4738772590bd3b13aecec9",
      "LastModified" : "2016-04-19T10:55:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define target name and output directory\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define source files\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Includes\r\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Needed due to CMake transitional dependency\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Linking\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Visual Studio uses library auto-linking, so this is only necessary for the other platforms.\r\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "src/Plugins/ZipPlugin/CMakeLists.txt" : {
      "ObjectId" : "3259a0b473b0ce17c7a244ada8aea77bfbe25908",
      "LastModified" : "2016-04-19T10:55:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Make fatal once linux dep build is implemented\n",
        "Line" : 4,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "# Make sure to statically link to our dependency build\n\n# zlib is pretty much guaranteed to be picked from the system if not .a postfixed\n\n# and the exact directory given to ZZIPLIB_LIBRARY_DIRS\n",
        "Line" : 17,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "###############################################################################\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Define target name and output directory\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Define source files\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/Tundra/Tundra/CMakeLists.txt" : {
      "ObjectId" : "eb4e54632b441f25db4558195c4ea5016893d53d",
      "LastModified" : "2016-04-19T10:55:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define target name and output directory\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define source files\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add SDL Android main\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Install files\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Readme\n\n# Licence",
        "Line" : 39,
        "CharPositionInLine" : 55
      },
      "CommentCount" : 5
    },
    "src/Tundra/TundraConsole/CMakeLists.txt" : {
      "ObjectId" : "3f09e8528f92b4d8564c643d854f2242863e04cb",
      "LastModified" : "2016-04-19T10:55:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define target name and output directory\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define source files\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/TundraCore/CMakeLists.txt" : {
      "ObjectId" : "2da7f859348dfb4aae3e38675eaa70fab8de7f6f",
      "LastModified" : "2016-04-19T10:55:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define target name and output directory\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define source files\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Include all subfolders within the project\n",
        "Line" : 26,
        "CharPositionInLine" : 16
      },
      "CommentCount" : 3
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "a90a17a39fc0c766420bfa2dd93e1a091d2ab55e",
      "LastModified" : "2016-04-19T10:55:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create parent target for tests\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Appends test \n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Copy executable to /bin for ease of use\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Create a test runner\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Add test runner to RUN_ALL_TESTS\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Init target with provided name, eg. \"Scene\" > TestScene\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Let cmake/ctest know of the test executable\n",
        "Line" : 69,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Add all subfolders as projects\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "tests/Config/CMakeLists.txt" : {
      "ObjectId" : "4e563512a861739ae1bb7bb4280b025eacf26102",
      "LastModified" : "2016-04-19T10:55:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/JSON/CMakeLists.txt" : {
      "ObjectId" : "feba15ba899b41cdcc5c76b0bad191186adf51fc",
      "LastModified" : "2016-04-19T10:55:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/Math/CMakeLists.txt" : {
      "ObjectId" : "3af7d2c105d3140f2d32d00b12bc661419e2c03c",
      "LastModified" : "2016-04-19T10:55:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/Scene/CMakeLists.txt" : {
      "ObjectId" : "85d524a1702918a059e680a967081b1b213b3080",
      "LastModified" : "2016-04-19T10:55:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/Windows/Mods/android-curl-try-run-results.cmake" : {
      "ObjectId" : "c9d2a72355a890d04c3671d522f5d6951507d46d",
      "LastModified" : "2016-04-19T10:55:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file was generated by CMake because it detected TRY_RUN() commands\n\n# in crosscompiling mode. It will be overwritten by the next CMake run.\n\n# Copy it to a safe location, set the variables to appropriate values\n\n# and use it then to preset the CMake cache (using -C).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# fail\n",
        "Line" : 7,
        "CharPositionInLine" : 7
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "CMAKE" : 28,
    "ANT" : 1
  },
  "ElapsedTime" : 1848
}