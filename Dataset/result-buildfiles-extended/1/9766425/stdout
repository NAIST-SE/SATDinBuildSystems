{
  "Repository" : "9766425",
  "Revision" : "HEAD",
  "ObjectId" : "edbbdda9afee1fa76a3fbbac82bd66275434397b",
  "CommitTime" : "2019-04-03T10:23:37Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "cc39dc8e6a1538777b54ae118bf4c1ee50660303",
      "LastModified" : "2019-02-13T12:45:18Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#!/usr/bin/make -f\n\n# -*- coding: utf-8 -*-\n\n#\n\n#    LinOTP - the open source solution for two factor authentication\n\n#    Copyright (C) 2016 - 2019 KeyIdentity GmbH\n\n#\n\n#    This file is part of LinOTP server.\n\n#\n\n#    This program is free software: you can redistribute it and/or\n\n#    modify it under the terms of the GNU Affero General Public\n\n#    License, version 3, as published by the Free Software Foundation.\n\n#\n\n#    This program is distributed in the hope that it will be useful,\n\n#    but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n#    GNU Affero General Public License for more details.\n\n#\n\n#    You should have received a copy of the\n\n#               GNU Affero General Public License\n\n#    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n#\n\n#\n\n#    E-mail: linotp@keyidentity.com\n\n#    Contact: www.linotp.org\n\n#    Support: www.keyidentity.com\n\n#\n\n#\n\n# LinOTP toplevel makefile\n\n#\n\n#\n\n# If you are running in a local development environment, you can\n\n# set these environment variables to configure make behaviour:\n\n# export http_proxy=http://proxy.hostname:port\n\n# export no_proxy=localhost,127.0.0.1,.my.local.domain\n\n# export RANCHER_URL=https://rancher.hostname/v1\n\n# export RANCHER_ACCESS_KEY=copy-from-rancher-UI-API-section\n\n# export RANCHER_SECRET_KEY=copy-from-rancher-UI-API-section\n\n# export DOCKER_REGISTRY_URL=registry.local.domain\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This directory is used as destination for the various parts of\n\n# the build phase. The various install targets default to this directory\n\n# but can be overriden by DESTDIR\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Targets to operate on LinOTPd and its dependent projects shipped\n\n# in this repository\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# These variables let you set the amount of stuff LinOTP is logging.\n\n#\n\n# LINOTP_LOGLEVEL controls the amount of logging in general while\n\n# LINOTP_CONSOLE_LOGLEVEL controls logging to the console (as opposed\n\n# to logstash -- logstash always gets whatever LINOTP_LOGLEVEL lets\n\n# through, so LINOTP_CONSOLE_LOGLEVEL can be used to have less stuff\n\n# show up on the console than in logstash).\n\n# SQLALCHEMY_LOGLEVEL controls the amount of logging done by SQLAlchemy\n\n# (who would have guessed); DEBUG will log SQL queries and results,\n\n# INFO will log just queries (no results) and WARN will log neither.\n\n# APACHE_LOGLEVEL limits the amount of stuff Apache writes to its error\n\n# output; normally anything that is written to the LinOTP console goes\n\n# through here, too, so there isn't a lot of sense in setting this\n\n# differently to LINOTP_CONSOLE_LOGLEVEL unless you're doing nonstandard\n\n# trickery and/or use a different (and unsupported by us) web server\n\n# than Apache to run LinOTP.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#############################################################################################\n\n# Recursive targets\n\n#\n\n# These invoke make in the project subdirectories\n\n#\n\n# install\n\n# clean\n\n#\n\n# Each target will be expanded into the subdirectory targets\n\n#\n\n# e.g. build -> build.subdirmake -> build.smsprovider + build.useridresolver + build.linotpd\n\n#############################################################################################\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Targets that should recurse into linotp project directories\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Invoke makefile target in subdirectory/src\n",
        "Line" : 97,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# Subdirectory make that should invoke target in all subproject directories\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add dependencies for main targets\n\n# build -> build.subdirmake\n\n# clean -> clean.subdirmake\n\n# etc.\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Run a command in a list of directories\n\n# $(call run-in-directories,DIRS,COMMAND)\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Run a command in all linotpd directories\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#################\n\n# Targets invoking setup.py\n\n#\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Installation of packages in 'develop mode'.\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "###############################################################################\n\n# Unit test targets\n\n#\n\n#\n\n# These targets can be run directly from a development\n\n# environment, within a container or an installed system\n\n#\n\n# unittests - just the unit tests\n\n# integrationtests - selenium integration tests\n\n# test - all tests\n\n###############################################################################\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Functional tests. Additional arguments can be\n\n# supplied with FUNCTIONALTESTS_ARGS\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# integrationtests - selenium integration tests\n\n# Use the SELENIUMTESTS_ARGS to supply test arguments\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "###############################################################################\n\n# Packaging targets\n\n#\n\n#\n\n# These targets run the various commands needed\n\n# to create packages of linotp\n\n#\n\n# builddeb: Generate .debs\n\n# deb-install: Build .debs and install to DESTDIR\n\n###############################################################################\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Output is placed in DESTDIR, but this\n\n# can be overriden\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# builddeb: Run debuild in each directory to generate .deb\n",
        "Line" : 198,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "# deb-install: move the built .deb, .changes and related files into an archive directory and\n\n# generate Packages file\n",
        "Line" : 203,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "######################################################################################################\n\n# Docker container targets\n\n#\n\n# These targets are for building and running docker containers\n\n# for integration and builds\n\n#\n\n# Container name | Dockerfile location | Purpose\n\n# ---------------------------------------------------------------------------------------------------\n\n# linotp-builder | Dockerfile.builder             | Container ready to build linotp packages\n\n# linotp         | linotpd/src                    | Runs linotp in apache\n\n# selenium-test  | linotpd/src/tests/integration  | Run LinOTP Selenium tests against selenium remote\n\n# linotp-unit    | linotpd/src/linotp/tests/unit  | Run LinOTP Unit tests\n\n######################################################################################################\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Extra arguments can be passed to docker build\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# List of tags to add to built linotp images, using the '-t' flag to docker-build\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Override to change the mirror used for image building\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Pass proxy environment variables through to docker build by default\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Default Docker run arguments.\n\n# Extra run arguments can be given here. It can also be used to\n\n# override runtime parameters. For example, to specify a port mapping:\n\n#  make docker-run-linotp-sqlite DOCKER_RUN_ARGS='-p 1234:80'\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "## Toplevel targets\n\n# Toplevel target to build all containers\n",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Toplevel target to build linotp container\n",
        "Line" : 261,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Build and run Selenium /integration tests\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# This is expanded during build to add image tags\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# The linotp builder container contains all build dependencies\n\n# needed to build linotp, plus a copy of the linotp\n\n# sources under /pkg/linotp\n\n#\n\n# To use this container as a playground to test build linotp:\n\n#   docker run -it linotp-builder\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# A unique name to reference containers for this build\n",
        "Line" : 291,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Force rebuild of debs\n",
        "Line" : 298,
        "CharPositionInLine" : 1
      },
      "33" : {
        "Text" : "# Build the debian packages in a container, then extract them from the image\n",
        "Line" : 302,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# We show the files sent to Docker context here to aid in debugging\n",
        "Line" : 324,
        "CharPositionInLine" : 1
      },
      "35" : {
        "Text" : "# Pass TEST_CASE=test_manage.py for picking a specific test case (!No list! Only one test case)\n\n# Pass TEST_DEBUG=<some val> e.g. TEST_DEBUG=1 - So your pdb.set_trace() hooks will be recognize\n\n#                                                and execution stops in case of errors/exceptions.\n\n#\n\n#                 Remark: Omit TEST_DEBUG completely to disable stop on fails because of error or\n\n#                         pdb.set_trace() statements.\n\n#\n\n# e.g.\n\n#      make docker-run-selenium TEST_CASE=test_manage.py\n\n#      make docker-run-selenium TEST_CASE=test_manage.py TEST_DEBUG=1\n",
        "Line" : 339,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Remove all selenium test relevant containers/images\n\n# We do not remove the LinOTP image:\n\n#  - Maybe built an up-2-date image some pipeline steps before test execution.\n",
        "Line" : 356,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# This container triggers the python test scripts\n",
        "Line" : 362,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# This container receives the selenium webdriver instructions\n",
        "Line" : 364,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Run linotp in a standalone container\n",
        "Line" : 383,
        "CharPositionInLine" : 1
      },
      "40" : {
        "Text" : "# Dockerfy tool\n",
        "Line" : 397,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Obtain dockerfy binary\n\n# TODO: Build from source\n",
        "Line" : 404,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#\n\n# # Unit tests\n\n#\n",
        "Line" : 415,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Build Unittest Docker Container, based on linotp image\n",
        "Line" : 419,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Run Unit tests. Use $NOSETESTS_ARGS for additional nosetest settings\n",
        "Line" : 426,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#jenkins pipeline uses this make rule\n",
        "Line" : 438,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#\n\n# # Pylint\n\n#\n",
        "Line" : 445,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Run Pylint Code Analysis\n",
        "Line" : 450,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "#\n\n# # Functional Tests\n\n#\n",
        "Line" : 464,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# NIGHTLY variable controls, if certain long-runnig tests are skipped\n\n#\n\n# NIGHTLY=\"no\" or unset: long-running tests are skipped\n\n# NIGHTLY=\"yes\" all tests are executed\n\n#\n\n# Example:\n\n# $ export NIGHTLY=\"yes\"\n\n# $ make docker-run-linotp-functional-test\n",
        "Line" : 469,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "###############################################################################\n\n# Rancher targets\n\n#\n\n# These targets are for deploying built linotp images to rancher\n\n#\n\n###############################################################################\n",
        "Line" : 497,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Override with ID e.g. branch name, tag or git commit\n",
        "Line" : 505,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# Override with type, e.g. prod, qa\n",
        "Line" : 509,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# Overrides to compose file specific to this stack\n",
        "Line" : 524,
        "CharPositionInLine" : 1
      },
      "54" : {
        "Text" : "# Uncomment to aid debugging\n\n# export RANCHER_CLIENT_DEBUG=true\n",
        "Line" : 536,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# Run a given command\n",
        "Line" : 539,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 56
    },
    "adminclient/LinOTPAdminClientCLI/src/Makefile" : {
      "ObjectId" : "9e9635b082148fe93db29e56576ad9324bde1508",
      "LastModified" : "2019-01-28T10:41:05Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n#    LinOTP - the open source solution for two factor authentication\n\n#    Copyright (C) 2010 - 2019 KeyIdentity GmbH\n\n#\n\n#    This file is part of LinOTP admin clients.\n\n#\n\n#    This program is free software: you can redistribute it and/or\n\n#    modify it under the terms of the GNU Affero General Public\n\n#    License, version 3, as published by the Free Software Foundation.\n\n#\n\n#    This program is distributed in the hope that it will be useful,\n\n#    but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n#    GNU Affero General Public License for more details.\n\n#\n\n#    You should have received a copy of the\n\n#               GNU Affero General Public License\n\n#    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n#\n\n#\n\n#    E-mail: linotp@keyidentity.com\n\n#    Contact: www.linotp.org\n\n#    Support: www.keyidentity.com\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\t$(PYTHON) setup.py bdist_rpm --post-install=rpm/postinstall --pre-uninstall=rpm/preuninstall\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# build the source package in the parent directory\n\n# then rename it to project_version.orig.tar.gz\n",
        "Line" : 56,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# build the package\n",
        "Line" : 61,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 4
    },
    "linotpd/src/Makefile" : {
      "ObjectId" : "edc2438c5daa6b21ffdc99e405bc15b007089fec",
      "LastModified" : "2019-01-28T10:41:05Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# -*- coding: utf-8 -*-\n\n#\n\n#    LinOTP - the open source solution for two factor authentication\n\n#    Copyright (C) 2010 - 2019 KeyIdentity GmbH\n\n#\n\n#    This file is part of LinOTP server.\n\n#\n\n#    This program is free software: you can redistribute it and/or\n\n#    modify it under the terms of the GNU Affero General Public\n\n#    License, version 3, as published by the Free Software Foundation.\n\n#\n\n#    This program is distributed in the hope that it will be useful,\n\n#    but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n#    GNU Affero General Public License for more details.\n\n#\n\n#    You should have received a copy of the\n\n#               GNU Affero General Public License\n\n#    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n#\n\n#\n\n#    E-mail: linotp@keyidentity.com\n\n#    Contact: www.linotp.org\n\n#    Support: www.keyidentity.com\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compile a .po file to a .json file using the `pojson` tool.\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Compile all .po files to .mo files using babel. As a dependency,\n\n# the .po files are compiled to .json files. The order doesn't matter.\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Unpack clean sources to a staging directory for building from. This is to ensure\n\n# that we have built linotp from the same source tarball contents.\n",
        "Line" : 107,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# The debian packaging directory is not included in the source tarball.\n\n# See <https://wiki.debian.org/UpstreamGuide#Pristine_Upstream_Source> for rationale\n",
        "Line" : 110,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Create tarball copy in the format expected by dpkg-source\n",
        "Line" : 113,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 6
    },
    "linotpd/src/linotp/tests/functional/Makefile" : {
      "ObjectId" : "716da1b0f94843d5941544f7dbece120267d67c3",
      "LastModified" : "2019-01-28T10:41:05Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#!/usr/bin/make -f\n\n# -*- coding: utf-8 -*-\n\n#\n\n#    LinOTP - the open source solution for two factor authentication\n\n#    Copyright (C) 2016 - 2019 KeyIdentity GmbH\n\n#\n\n#    This file is part of LinOTP server.\n\n#\n\n#    This program is free software: you can redistribute it and/or\n\n#    modify it under the terms of the GNU Affero General Public\n\n#    License, version 3, as published by the Free Software Foundation.\n\n#\n\n#    This program is distributed in the hope that it will be useful,\n\n#    but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n#    GNU Affero General Public License for more details.\n\n#\n\n#    You should have received a copy of the\n\n#               GNU Affero General Public License\n\n#    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n#\n\n#\n\n#    E-mail: linotp@keyidentity.com\n\n#    Contact: www.linotp.org\n\n#    Support: www.keyidentity.com\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#####################\n\n# Unit test configuration\n\n#\n\n# Overrides can be specified on the make command line\n\n# For example:\n\n#   make integrationtests TCFILE=my_cfg.ini LOGGINGFILTER=\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The test settings ini file to use. Override to use a different file.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Nosetests arguments\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Additional test arguments can be specified in FUNCTIONALTESTS_ARGS\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The default log filter does not show debug messages from urllib connections.\n\n# Override this to include them.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#####################\n\n# Functional test targets\n\n#\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# functionaltests\n",
        "Line" : 62,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 8
    },
    "linotpd/src/linotp/tests/integration/Makefile" : {
      "ObjectId" : "5bc0d6b76f6b5acd1864fd02c44dc3b3c4360239",
      "LastModified" : "2019-02-27T10:49:37Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#!/usr/bin/make -f\n\n# -*- coding: utf-8 -*-\n\n#\n\n#    LinOTP - the open source solution for two factor authentication\n\n#    Copyright (C) 2016 - 2019 KeyIdentity GmbH\n\n#\n\n#    This file is part of LinOTP server.\n\n#\n\n#    This program is free software: you can redistribute it and/or\n\n#    modify it under the terms of the GNU Affero General Public\n\n#    License, version 3, as published by the Free Software Foundation.\n\n#\n\n#    This program is distributed in the hope that it will be useful,\n\n#    but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n#    GNU Affero General Public License for more details.\n\n#\n\n#    You should have received a copy of the\n\n#               GNU Affero General Public License\n\n#    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n#\n\n#\n\n#    E-mail: linotp@keyidentity.com\n\n#    Contact: www.linotp.org\n\n#    Support: www.keyidentity.com\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#####################\n\n# Unit test configuration\n\n#\n\n# Overrides can be specified on the make command line\n\n# For example:\n\n#   make integrationtests TCFILE=my_cfg.ini LOGGINGFILTER=\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The test settings ini file to use. Override to use a different file.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Nosetests arguments\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Additional test arguments can be specified in SELENIUMTESTS_ARGS\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The default log filter does not show debug messages from the Selenium connection and urllib connections.\n\n# Override this to include them.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#####################\n\n# Unit test targets\n\n#\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# integrationtests - selenium integration tests\n",
        "Line" : 64,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# integrationtests - selenium integration tests\n",
        "Line" : 68,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# integrationtests - selenium integration tests\n",
        "Line" : 72,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 10
    },
    "linotpd/src/linotp/tests/unit/Makefile" : {
      "ObjectId" : "e0067b316f7768f7a590532b387c52d0977e8e53",
      "LastModified" : "2019-01-28T10:41:05Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#!/usr/bin/make -f\n\n# -*- coding: utf-8 -*-\n\n#\n\n#    LinOTP - the open source solution for two factor authentication\n\n#    Copyright (C) 2016 - 2019 KeyIdentity GmbH\n\n#\n\n#    This file is part of LinOTP server.\n\n#\n\n#    This program is free software: you can redistribute it and/or\n\n#    modify it under the terms of the GNU Affero General Public\n\n#    License, version 3, as published by the Free Software Foundation.\n\n#\n\n#    This program is distributed in the hope that it will be useful,\n\n#    but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n#    GNU Affero General Public License for more details.\n\n#\n\n#    You should have received a copy of the\n\n#               GNU Affero General Public License\n\n#    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n#\n\n#\n\n#    E-mail: linotp@keyidentity.com\n\n#    Contact: www.linotp.org\n\n#    Support: www.keyidentity.com\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#####################\n\n# Unit test targets\n\n#\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 6
  },
  "ElapsedTime" : 2820
}