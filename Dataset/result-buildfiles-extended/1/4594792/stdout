{
  "Repository" : "4594792",
  "Revision" : "HEAD",
  "ObjectId" : "5c5e6df0380c518d098f20d9ffc832887782335c",
  "CommitTime" : "2019-04-16T21:43:48Z",
  "Files" : {
    "CMake/CCache.cmake" : {
      "ObjectId" : "9388b0a28fcd1476d5d11f0bfcebbc8d35d448d1",
      "LastModified" : "2017-02-08T06:55:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ccache uses -I when compiling without preprocessor, which makes clang complain.\n",
        "Line" : 6,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "CMake/CheckAndAddFlag.cmake" : {
      "ObjectId" : "edd0e8cc7eac293097e7040c4e255033b35fa9c2",
      "LastModified" : "2017-03-08T07:21:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# check_add_add_flag(<variable> <flag> [DEBUG_ONLY | RELEASE_ONLY])\n\n#\n\n# Add a C or C++ compilation flag to the current scope\n\n#\n\n# Can optionally add the flag to Debug or Release configurations only, use this when\n\n# targeting multi-configuration generators like Visual Studio or Xcode.\n\n# Release configurations means NOT Debug, so it will work for RelWithDebInfo or MinSizeRel too.\n\n#\n\n# If the flag is added successfully, the variables FLAG_C_<variable> and FLAG_CXX_<variable>\n\n# may be set to ON.\n\n#\n\n# Examples:\n\n#   check_and_add_flag(FOO -foo)\n\n#   check_and_add_flag(ONLYDEBUG -onlydebug DEBUG_ONLY)\n\n#   check_and_add_flag(OPTMAX -O9001 RELEASE_ONLY)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The Visual Studio generators don't support COMPILE_LANGUAGE\n\n# So we fail all the C flags and only actually test CXX ones\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "CMake/CheckLib.cmake" : {
      "ObjectId" : "64c05e9ba05f6d37578074d2a08420b1282f2002",
      "LastModified" : "2017-05-27T21:36:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Make sure include directories for headers found using find_path below\n\n# are re-added when reconfiguring\n",
        "Line" : 32,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "CMake/DolphinCompileDefinitions.cmake" : {
      "ObjectId" : "3818ded0dff37bc30265eaf4981d7595fc0660f3",
      "LastModified" : "2017-12-20T10:05:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add C or C++ compile definitions to the current scope\n\n#\n\n# dolphin_compile_definitions(def [def ...] [DEBUG_ONLY | RELEASE_ONLY])\n\n#\n\n# Can optionally add the definitions to Debug or Release configurations only, use this so we can\n\n# target multi-configuration generators like Visual Studio or Xcode.\n\n# Release configurations means NOT Debug, so it will work for RelWithDebInfo or MinSizeRel too.\n\n# The definitions are added to the COMPILE_DEFINITIONS folder property.\n\n# Supports generator expressions, unlike add_definitions()\n\n#\n\n# Examples:\n\n#   dolphin_compile_definitions(FOO) -> -DFOO\n\n#   dolphin_compile_definitions(_DEBUG DEBUG_ONLY) -> -D_DEBUG\n\n#   dolphin_compile_definitions(NDEBUG RELEASE_ONLY) -> -DNDEBUG\n\n#   dolphin_compile_definitions($<$<COMPILE_LANGUAGE:C>:THISISONLYFORC>)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/DolphinPostprocessBundle.cmake" : {
      "ObjectId" : "4d2eee175ecff5c642973278c35115809ea3b211",
      "LastModified" : "2017-02-08T06:55:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This module can be used in two different ways.\n\n#\n\n# When invoked as `cmake -P DolphinPostprocessBundle.cmake`, it fixes up an\n\n# application folder to be standalone. It bundles all required libraries from\n\n# the system and fixes up library IDs. Any additional shared libraries, like\n\n# plugins, that are found under Contents/MacOS/ will be made standalone as well.\n\n#\n\n# When called with `include(DolphinPostprocessBundle)`, it defines a helper\n\n# function `dolphin_postprocess_bundle` that sets up the command form of the\n\n# module as a post-build step.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Being called as include(DolphinPostprocessBundle), so define a helper function.\n",
        "Line" : 13,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Make sure to fix up any additional shared libraries (like plugins) that are\n\n# needed.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# BundleUtilities doesn't support DYLD_FALLBACK_LIBRARY_PATH behavior, which\n\n# makes it sometimes break on libraries that do weird things with @rpath. Specify\n\n# equivalent search directories until https://gitlab.kitware.com/cmake/cmake/issues/16625\n\n# is fixed and in our minimum CMake version.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# BundleUtilities is overly verbose, so disable most of its messages\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "CMake/FindALSA.cmake" : {
      "ObjectId" : "45e2bccdf413d33c6fe9574b4874514aaac1bb23",
      "LastModified" : "2017-02-08T06:55:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindALSA\n\n# --------\n\n#\n\n# Find alsa\n\n#\n\n# Find the alsa libraries (asound)\n\n#\n\n# ::\n\n#\n\n#   This module defines the following variables:\n\n#      ALSA_FOUND       - True if ALSA_INCLUDE_DIR & ALSA_LIBRARY are found\n\n#      ALSA_LIBRARIES   - Set when ALSA_LIBRARY is found\n\n#      ALSA_INCLUDE_DIRS - Set when ALSA_INCLUDE_DIR is found\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#      ALSA_INCLUDE_DIR - where to find asoundlib.h, etc.\n\n#      ALSA_LIBRARY     - the asound library\n\n#      ALSA_VERSION_STRING - the version of alsa found (since CMake 2.8.8)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMake/FindBacktrace.cmake" : {
      "ObjectId" : "eb93cef97738198b0f822e670486d299849e31f1",
      "LastModified" : "2017-02-08T06:55:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindBacktrace\n\n# -------------\n\n#\n\n# Find provider for backtrace(3).\n\n#\n\n# Checks if OS supports backtrace(3) via either libc or custom library.\n\n# This module defines the following variables:\n\n#\n\n# ``Backtrace_HEADER``\n\n#   The header file needed for backtrace(3). Cached.\n\n#   Could be forcibly set by user.\n\n# ``Backtrace_INCLUDE_DIRS``\n\n#   The include directories needed to use backtrace(3) header.\n\n# ``Backtrace_LIBRARIES``\n\n#   The libraries (linker flags) needed to use backtrace(3), if any.\n\n# ``Backtrace_FOUND``\n\n#   Is set if and only if backtrace(3) support detected.\n\n#\n\n# The following cache variables are also available to set or use:\n\n#\n\n# ``Backtrace_LIBRARY``\n\n#   The external library providing backtrace, if any.\n\n# ``Backtrace_INCLUDE_DIR``\n\n#   The directory holding the backtrace(3) header.\n\n#\n\n# Typical usage is to generate of header file using configure_file() with the\n\n# contents like the following::\n\n#\n\n#  #cmakedefine01 Backtrace_FOUND\n\n#  #if Backtrace_FOUND\n\n#  # include <${Backtrace_HEADER}>\n\n#  #endif\n\n#\n\n# And then reference that generated header file in actual source.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2013 Vadim Zhukov\n\n# Copyright 2000-2016 Kitware, Inc.\n\n# Copyright 2000-2011 Insight Software Consortium\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n#\n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# List of variables to be provided to find_package_handle_standard_args()\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# First, check if we already have backtrace(), e.g., in libc\n",
        "Line" : 89,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Avoid repeating the message() call below each time CMake is run.\n",
        "Line" : 98,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Check for external library, for non-glibc systems\n",
        "Line" : 104,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# OpenBSD has libbacktrace renamed to libexecinfo\n",
        "Line" : 106,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# respect user wishes\n",
        "Line" : 108,
        "CharPositionInLine" : 15
      },
      "8" : {
        "Text" : "# Prepend list with library path as it's more common practice\n",
        "Line" : 114,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 9
    },
    "CMake/FindBlueZ.cmake" : {
      "ObjectId" : "b82e7bdb0fd7ff6957b8c66db54f8017e697df91",
      "LastModified" : "2017-02-08T06:55:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find BlueZ library\n\n# This module defines\n\n#  BlueZ_INCLUDE_DIR\n\n#  BlueZ_LIBRARIES\n\n#  BlueZ_FOUND\n\n#\n\n# vim: expandtab sw=4 ts=4 sts=4:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/FindCubeb.cmake" : {
      "ObjectId" : "c0a730c7ab7e1621dadde908f088873613f50cb3",
      "LastModified" : "2018-08-08T17:25:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/FindEGL.cmake" : {
      "ObjectId" : "dd7a8bcff0c06caccdd86d07ffabb5a4004204f6",
      "LastModified" : "2018-10-24T03:51:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# from https://raw.githubusercontent.com/WebKit/webkit/master/Source/cmake/FindEGL.cmake\n\n# - Try to Find EGL\n\n# Once done, this will define\n\n#\n\n#  EGL_FOUND - system has EGL installed.\n\n#  EGL_INCLUDE_DIRS - directories which contain the EGL headers.\n\n#  EGL_LIBRARIES - libraries required to link against EGL.\n\n#  EGL_DEFINITIONS - Compiler switches required for using EGL.\n\n#\n\n# Copyright (C) 2012 Intel Corporation. All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# 1.  Redistributions of source code must retain the above copyright\n\n#     notice, this list of conditions and the following disclaimer.\n\n# 2.  Redistributions in binary form must reproduce the above copyright\n\n#     notice, this list of conditions and the following disclaimer in the\n\n#     documentation and/or other materials provided with the distribution.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND ITS CONTRIBUTORS ``AS\n\n# IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n\n# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\n# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR ITS\n\n# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\n# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\n# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;\n\n# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n\n# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n\n# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n\n# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/FindFFmpeg.cmake" : {
      "ObjectId" : "af7711f6f3d5133ff2f354ef09cf8dba7e0a311a",
      "LastModified" : "2018-10-24T03:51:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FindFFmpeg\n\n# ----------\n\n#\n\n# Find the native FFmpeg includes and libraries\n\n#\n\n# This module defines the following variables:\n\n#\n\n#  FFmpeg_INCLUDE_<component>: where to find <component>.h\n\n#  FFmpeg_LIBRARY_<component>: where to find the <component> library\n\n#  FFmpeg_INCLUDES: aggregate all the include paths\n\n#  FFmpeg_LIBRARIES: aggregate all the paths to the libraries\n\n#  FFmpeg_FOUND: True if all components have been found\n\n#\n\n# This module defines the following targets, which are prefered over variables:\n\n#\n\n#  FFmpeg::<component>: Target to use <component> directly, with include path,\n\n#    library and dependencies set up. If you are using a static build, you are\n\n#    responsible for adding any external dependencies (such as zlib, bzlib...).\n\n#\n\n# <component> can be one of:\n\n#   avcodec\n\n#   avdevice\n\n#   avfilter\n\n#   avformat\n\n#   postproc\n\n#   swresample\n\n#   swscale\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Didn't find it in the usual paths, try pkg-config\n",
        "Line" : 96,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "CMake/FindHIDAPI.cmake" : {
      "ObjectId" : "81b9990212adb08a946ad2fc5f9c4355adfe7550",
      "LastModified" : "2018-10-24T03:51:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/FindLibUSB.cmake" : {
      "ObjectId" : "dec0b98b0781fb9ce833910f890320e3dcc8dbc4",
      "LastModified" : "2018-10-24T03:51:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find libusb-1.0 library\n\n# This module defines\n\n#  LIBUSB_INCLUDE_DIR, where to find bluetooth.h\n\n#  LIBUSB_LIBRARIES, the libraries needed to use libusb-1.0.\n\n#  LIBUSB_FOUND, If false, do not try to use libusb-1.0.\n\n#\n\n# Copyright (c) 2009, Michal Cihar, <michal@cihar.com>\n\n#\n\n# vim: expandtab sw=4 ts=4 sts=4:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/FindLibevdev.cmake" : {
      "ObjectId" : "e89a5f229d6b00d220f8cba36578688d1467810b",
      "LastModified" : "2018-10-24T03:51:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find libevdev\n\n# Once done this will define\n\n#  LIBEVDEV_FOUND - System has libevdev\n\n#  LIBEVDEV_INCLUDE_DIRS - The libevdev include directories\n\n#  LIBEVDEV_LIBRARIES - The libraries needed to use libevdev\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/FindLibsystemd.cmake" : {
      "ObjectId" : "f75558a44430d2db802a683af4124ee6f29fd591",
      "LastModified" : "2018-10-24T03:51:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/FindLibudev.cmake" : {
      "ObjectId" : "2b71e4e605c27816a7da5ad00a17d65f450da514",
      "LastModified" : "2018-10-24T03:51:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find LIBUDEV\n\n# Once done this will define\n\n#  LIBUDEV_FOUND - System has LIBUDEV\n\n#  LIBUDEV_INCLUDE_DIRS - The LIBUDEV include directories\n\n#  LIBUDEV_LIBRARIES - The libraries needed to use LIBUDEV\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/FindMbedTLS.cmake" : {
      "ObjectId" : "97c45150a7a0f190d22d9343b963c85f9976d6c6",
      "LastModified" : "2018-10-24T03:51:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/FindMiniupnpc.cmake" : {
      "ObjectId" : "f9a14e2a89eb40d4018da04b968c371cf600d530",
      "LastModified" : "2018-10-24T03:51:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file only works for MiniUPnPc 1.7 or later (it requires MINIUPNPC_API_VERSION).\n\n# TODO Find out if any distribution still ships with /usr/include/miniupnpc.h (i.e. not in a separate directory).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/FindOProfile.cmake" : {
      "ObjectId" : "7f349307f0d375af5ed73ae1c5fdcaecd17c8f77",
      "LastModified" : "2018-10-24T03:51:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find OProfile\n\n# Once done this will define\n\n# OPROFILE_FOUND - System has OProfile\n\n# OPROFILE_INCLUDE_DIRS - The OProfile include directories\n\n# OPROFILE_LIBRARIES - The libraries needed to use OProfile\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/FindOpenAL.cmake" : {
      "ObjectId" : "9fc2fadad1536eaf97cae93ab1233b52ca3ed1c6",
      "LastModified" : "2018-10-24T03:51:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindOpenAL\n\n# ----------\n\n#\n\n#\n\n#\n\n# Locate OpenAL This module defines OPENAL_LIBRARY OPENAL_FOUND, if\n\n# false, do not try to link to OpenAL OPENAL_INCLUDE_DIR, where to find\n\n# the headers\n\n#\n\n# $OPENALDIR is an environment variable that would correspond to the\n\n# ./configure --prefix=$OPENALDIR used in building OpenAL.\n\n#\n\n# Created by Eric Wing.  This was influenced by the FindSDL.cmake\n\n# module.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This makes the presumption that you are include al.h like\n\n# #include \"al.h\"\n\n# and not\n\n# #include <AL/al.h>\n\n# The reason for this is that the latter is not entirely portable.\n\n# Windows/Creative Labs does not by default put their headers in AL/ and\n\n# OS X uses the convention <OpenAL/al.h>.\n\n#\n\n# For Windows, Creative Labs seems to have added a registry key for their\n\n# OpenAL 1.1 installer. I have added that key to the list of search paths,\n\n# however, the key looks like it could be a little fragile depending on\n\n# if they decide to change the 1.00.0000 number for bug fix releases.\n\n# Also, they seem to have laid down groundwork for multiple library platforms\n\n# which puts the library in an extra subdirectory. Currently there is only\n\n# Win32 and I have hardcoded that here. This may need to be adjusted as\n\n# platforms are introduced.\n\n# The OpenAL 1.0 installer doesn't seem to have a useful key I can use.\n\n# I do not know if the Nvidia OpenAL SDK has a registry key.\n\n#\n\n# For OS X, remember that OpenAL was added by Apple in 10.4 (Tiger).\n\n# To support the framework, I originally wrote special framework detection\n\n# code in this module which I have now removed with CMake's introduction\n\n# of native support for frameworks.\n\n# In addition, OpenAL is open source, and it is possible to compile on Panther.\n\n# Furthermore, due to bugs in the initial OpenAL release, and the\n\n# transition to OpenAL 1.1, it is common to need to override the built-in\n\n# framework.\n\n# Per my request, CMake should search for frameworks first in\n\n# the following order:\n\n# ~/Library/Frameworks/OpenAL.framework/Headers\n\n# /Library/Frameworks/OpenAL.framework/Headers\n\n# /System/Library/Frameworks/OpenAL.framework/Headers\n\n#\n\n# On OS X, this will prefer the Framework version (if found) over others.\n\n# People will have to manually change the cache values of\n\n# OPENAL_LIBRARY to override this selection or set the CMake environment\n\n# CMAKE_INCLUDE_PATH to modify the search paths.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Fink\n",
        "Line" : 65,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 66,
        "CharPositionInLine" : 13
      },
      "5" : {
        "Text" : "# Blastwave\n",
        "Line" : 67,
        "CharPositionInLine" : 11
      },
      "CommentCount" : 6
    },
    "CMake/FindOpenSLES.cmake" : {
      "ObjectId" : "b50efc6067873674ea09bd80ec075a4a88a02cd9",
      "LastModified" : "2018-10-24T03:51:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find OpenSLES\n\n# Once done this will define\n\n#  OPENSLES_FOUND - System has OpenSLES\n\n#  OPENSLES_INCLUDE_DIR - The OpenSLES include directory\n\n#  OPENSLES_LIBRARY - The library needed to use OpenSLES\n\n# An imported target OpenSLES::OpenSLES is also created, prefer this\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/FindPulseAudio.cmake" : {
      "ObjectId" : "6046898cc425b9ed04bf881630d822e0476d61b9",
      "LastModified" : "2018-10-24T03:51:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find PulseAudio library\n\n# This module defines\n\n#  PulseAudio_INCLUDE_DIR\n\n#  PulseAudio_LIBRARIES\n\n#  PulseAudio_FOUND\n\n#\n\n# vim: expandtab sw=4 ts=4 sts=4:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/FindSDL2.cmake" : {
      "ObjectId" : "08d8dc60807f21eb0694bc3cec5cbf12122bb296",
      "LastModified" : "2018-10-24T03:51:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find SDL2\n\n# Find the SDL2 headers and libraries\n\n#\n\n#  SDL2::SDL2 - Imported target to use for building a library\n\n#  SDL2::SDL2main - Imported interface target to use if you want SDL and SDLmain.\n\n#  SDL2_FOUND - True if SDL2 was found.\n\n#  SDL2_DYNAMIC - If we found a DLL version of SDL (meaning you might want to copy a DLL from SDL2::SDL2)\n\n#\n\n# Original Author:\n\n# 2015 Ryan Pavlik <ryan.pavlik@gmail.com> <abiryan@ryand.net>\n\n#\n\n# Copyright Sensics, Inc. 2015.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set up architectures (for windows) and prefixes (for mingw builds)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Invoke pkgconfig for hints\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Some special-casing if we've found/been given a framework.\n\n# Handles whether we're given the library inside the framework or the framework itself.\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Move up in the directory tree as required to get the framework directory.\n",
        "Line" : 85,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# If we found a framework, do a search for the header ahead of time that will be more likely to get the framework header.\n",
        "Line" : 91,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# this file was introduced with SDL2\n",
        "Line" : 94,
        "CharPositionInLine" : 16
      },
      "7" : {
        "Text" : "# For some reason we couldn't get the framework directory itself.\n\n# Shouldn't happen, but might if something is weird.\n",
        "Line" : 98,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# this file was introduced with SDL2\n",
        "Line" : 106,
        "CharPositionInLine" : 14
      },
      "9" : {
        "Text" : "# Restore things the way they used to be.\n",
        "Line" : 145,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set QUATLIB_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Create SDL2::SDL2\n",
        "Line" : 160,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Handle the case that SDL2 is a framework and we were able to decompose it above.\n",
        "Line" : 173,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Handle the case that SDL2 is a framework and SDL_LIBRARY is just the framework itself.\n",
        "Line" : 177,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# This takes the basename of the framework, without the extension,\n\n# and sets it (as a child of the framework) as the imported location for the target.\n\n# This is the library symlink inside of the framework.\n",
        "Line" : 179,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Handle non-frameworks (including non-Mac), as well as the case that we're given the library inside of the framework\n",
        "Line" : 185,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Need Cocoa here, is always a framework\n",
        "Line" : 196,
        "CharPositionInLine" : 3
      },
      "17" : {
        "Text" : "# Compute what to do with SDL2main\n",
        "Line" : 206,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# MinGW requires some additional libraries to appear earlier in the link line.\n",
        "Line" : 217,
        "CharPositionInLine" : 3
      },
      "19" : {
        "Text" : "# Use pkgconfig-suggested extra libraries if available.\n",
        "Line" : 219,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# fall back to extra libraries specified in pkg-config in\n\n# an official binary distro of SDL2 for MinGW I downloaded\n",
        "Line" : 223,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 21
    },
    "CMake/FindSFML.cmake" : {
      "ObjectId" : "d6acdfb6d6e6951861dffb66334214f244c980c0",
      "LastModified" : "2018-10-24T03:51:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This script locates the SFML library\n\n# ------------------------------------\n\n#\n\n# Usage\n\n# -----\n\n#\n\n# When you try to locate the SFML libraries, you must specify which modules you want to use (system, window, graphics, network, audio, main).\n\n# If none is given, the SFML_LIBRARIES variable will be empty and you'll end up linking to nothing.\n\n# example:\n\n#   find_package(SFML COMPONENTS graphics window system) // find the graphics, window and system modules\n\n#\n\n# You can enforce a specific version, either MAJOR.MINOR or only MAJOR.\n\n# If nothing is specified, the version won't be checked (ie. any version will be accepted).\n\n# example:\n\n#   find_package(SFML COMPONENTS ...)     // no specific version required\n\n#   find_package(SFML 2 COMPONENTS ...)   // any 2.x version\n\n#   find_package(SFML 2.4 COMPONENTS ...) // version 2.4 or greater\n\n#\n\n# By default, the dynamic libraries of SFML will be found. To find the static ones instead,\n\n# you must set the SFML_STATIC_LIBRARIES variable to TRUE before calling find_package(SFML ...).\n\n# In case of static linking, the SFML_STATIC macro will also be defined by this script.\n\n# example:\n\n#   set(SFML_STATIC_LIBRARIES TRUE)\n\n#   find_package(SFML 2 COMPONENTS network system)\n\n#\n\n# On Mac OS X if SFML_STATIC_LIBRARIES is not set to TRUE then by default CMake will search for frameworks unless\n\n# CMAKE_FIND_FRAMEWORK is set to \"NEVER\" for example. Please refer to CMake documentation for more details.\n\n# Moreover, keep in mind that SFML frameworks are only available as release libraries unlike dylibs which\n\n# are available for both release and debug modes.\n\n#\n\n# If SFML is not installed in a standard path, you can use the SFML_ROOT CMake (or environment) variable\n\n# to tell CMake where SFML is.\n\n#\n\n# Output\n\n# ------\n\n#\n\n# This script defines the following variables:\n\n# - For each specified module XXX (system, window, graphics, network, audio, main):\n\n#   - SFML_XXX_LIBRARY_DEBUG:   the name of the debug library of the xxx module (set to SFML_XXX_LIBRARY_RELEASE is no debug version is found)\n\n#   - SFML_XXX_LIBRARY_RELEASE: the name of the release library of the xxx module (set to SFML_XXX_LIBRARY_DEBUG is no release version is found)\n\n#   - SFML_XXX_LIBRARY:         the name of the library to link to for the xxx module (includes both debug and optimized names if necessary)\n\n#   - SFML_XXX_FOUND:           true if either the debug or release library of the xxx module is found\n\n# - SFML_LIBRARIES:   the list of all libraries corresponding to the required modules\n\n# - SFML_FOUND:       true if all the required modules are found\n\n# - SFML_INCLUDE_DIR: the path where SFML headers are located (the directory containing the SFML/Config.hpp file)\n\n#\n\n# example:\n\n#   find_package(SFML 2 COMPONENTS system window graphics audio REQUIRED)\n\n#   include_directories(${SFML_INCLUDE_DIR})\n\n#   add_executable(myapp ...)\n\n#   target_link_libraries(myapp ${SFML_LIBRARIES})\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# define the SFML_STATIC macro if static build was chosen\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# deduce the libraries suffix from the options\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# find the SFML include directory\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Fink\n\n# DarwinPorts\n\n# Blastwave\n",
        "Line" : 74,
        "CharPositionInLine" : 23
      },
      "5" : {
        "Text" : "# check the version number\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# extract the major and minor version numbers from SFML/Config.hpp\n\n# we have to handle framework a little bit differently :\n",
        "Line" : 82,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# if we could extract them, compare with the requested version number\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# transform version numbers to an integer\n",
        "Line" : 97,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# compare them\n",
        "Line" : 100,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# SFML version is < 2.0\n",
        "Line" : 105,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# find the requested modules\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# will be set to false if one of the required modules is not found\n",
        "Line" : 115,
        "CharPositionInLine" : 21
      },
      "13" : {
        "Text" : "# no suffix for sfml-main, it is always a static library\n",
        "Line" : 132,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# debug library\n",
        "Line" : 137,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# release library\n",
        "Line" : 143,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# library found\n",
        "Line" : 150,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# if both are found, set SFML_XXX_LIBRARY to contain both\n",
        "Line" : 153,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# if only one debug/release variant is found, set the other to be equal to the found one\n",
        "Line" : 159,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# debug and not release\n",
        "Line" : 161,
        "CharPositionInLine" : 12
      },
      "20" : {
        "Text" : "# release and not debug\n",
        "Line" : 166,
        "CharPositionInLine" : 12
      },
      "21" : {
        "Text" : "# library not found\n",
        "Line" : 171,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# mark as advanced\n",
        "Line" : 178,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# add to the global list of libraries\n",
        "Line" : 183,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# handle errors\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# SFML version not ok\n",
        "Line" : 189,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# include directory or library not found\n",
        "Line" : 193,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# fatal error\n",
        "Line" : 198,
        "CharPositionInLine" : 8
      },
      "28" : {
        "Text" : "# error but continue\n",
        "Line" : 201,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : "# handle success\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 30
    },
    "CMake/Findpugixml.cmake" : {
      "ObjectId" : "e026b8d32dc94595212fc6c97cae073216beeb9c",
      "LastModified" : "2018-10-24T03:51:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMakeLists.txt" : {
      "ObjectId" : "315f75591cb6896be4046f645eba43a5f237af2f",
      "LastModified" : "2019-02-16T04:15:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################\n\n# General setup\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Minimum OS X version.\n\n# This is inserted into the Info.plist as well.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Name of the Dolphin distributor. If you redistribute Dolphin builds (forks,\n\n# unofficial builds) please consider identifying your distribution with a\n\n# unique name here.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Maintainers: if you consider blanket disabling this for your users, please\n\n# consider the following points:\n\n#  * No data is being sent without explicit user approval (pop up box at first\n\n#    launch).\n\n#  * The Dolphin team relies on the data in order to understand the behavior\n\n#    of our software in the wild.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# TODO: Add DSPSpy\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Enable SDL for default on operating systems that aren't OSX, Android, Linux or Windows.\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Builds a relocatable binary on Linux.\n\n# The Sys folder will need to be copied to the Binaries folder.\n",
        "Line" : 76,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Support functions\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Enable folders for IDE\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Set up paths\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# If we should use a sysroot, tell pkg-config to search for packages in there, not on the host\n",
        "Line" : 100,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Set where the binary files will be built.  The program will not execute from\n\n# here.  You must run \"make install\" to install these to the proper location\n\n# as defined above.\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# setup CCache\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# for revision info\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# make sure version information gets re-run when the current Git HEAD changes\n",
        "Line" : 116,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# defines DOLPHIN_WC_REVISION\n",
        "Line" : 131,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# defines DOLPHIN_WC_DESCRIBE\n",
        "Line" : 135,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# remove hash (and trailing \"-0\" if needed) from description\n",
        "Line" : 140,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# defines DOLPHIN_WC_BRANCH\n",
        "Line" : 143,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# version number\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# If Dolphin is not built from a Git repository, default the version info to\n\n# reasonable values.\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Architecture detection and arch specific settings\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Detect 64bit or 32bit\n\n# CMake doesn't provide a simple way to determine 32bit or 64bit\n\n# If we ever support a architecture that is 64bit with 32bit pointers then this'll break\n\n# Of course the chances of that are slim(x32?) so who cares\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# CRC instruction set is used in the CRC32 hash function\n",
        "Line" : 196,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Enforce minimum GCC version\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Only MSBuild needs this, other generators will compile one file at a time\n",
        "Line" : 213,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Enforce C++ standard conforming conversion rules to catch possible bugs\n",
        "Line" : 221,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Remove unreferenced inline functions/data to reduce link time and catch bugs\n",
        "Line" : 223,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# Assume `new` (w/o std::nothrow) throws to reduce binary size\n",
        "Line" : 225,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# Enforce strict volatile semantics as per ISO C++\n",
        "Line" : 227,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# TODO: would like these but they produce overwhelming amounts of warnings\n\n#check_and_add_flag(EXTRA -Wextra)\n\n#check_and_add_flag(MISSING_FIELD_INITIALIZERS -Wmissing-field-initializers)\n\n#check_and_add_flag(SWITCH_DEFAULT -Wswitch-default)\n\n#check_and_add_flag(FLOAT_EQUAL -Wfloat-equal)\n\n#check_and_add_flag(CONVERSION -Wconversion)\n\n#check_and_add_flag(ZERO_AS_NULL_POINTER_CONSTANT -Wzero-as-null-pointer-constant)\n",
        "Line" : 234,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# gcc uses some optimizations which might break stuff without this flag\n",
        "Line" : 251,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# GNU ar: Create thin archive files.\n\n# Requires binutils-2.19 or later.\n",
        "Line" : 264,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# Hack up the path to prioritize the path to built-in OS libraries to\n\n# increase the chance of not depending on a bunch of copies of them\n\n# installed by MacPorts, Fink, Homebrew, etc, and ending up copying\n\n# them into the bundle.  Since we optionally depend on libraries which\n\n# are not part of OS X (ffmpeg, etc.), however, don't remove the default\n\n# path entirely as was done in a previous version of this file.  This is\n\n# still kinda evil, since it defeats the user's path settings...\n\n# See http://www.cmake.org/cmake/help/v3.0/command/find_program.html\n",
        "Line" : 275,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# Specify target CPUs.\n",
        "Line" : 286,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# Linker flags.\n\n# Drop unreachable code and data.\n",
        "Line" : 290,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# BSDs put packages in /usr/local instead of /usr, so we need to\n\n# force CMake to look in those directories by default, too.\n\n# All commands and submodule commands also need to see these\n\n# changes, so just setting them in the project scope via\n\n# include_directories and link_directories is not sufficient\n",
        "Line" : 319,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Dolphin requires threads.\n",
        "Line" : 330,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Lie to cmake a bit. We are cross compiling to Android\n\n# but not as a shared library. We want an executable.\n",
        "Line" : 373,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "# We are cross compiling, search only the toolchain for libraries and includes\n",
        "Line" : 381,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# Set file offset size to 64 bits.\n\n#\n\n# On modern Unixes, this is typically already the case. The lone exception is\n\n# glibc, which may default to 32 bits. glibc allows this to be configured\n\n# by setting _FILE_OFFSET_BITS.\n",
        "Line" : 394,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "########################################\n\n# Dependency checking\n\n#\n\n# TODO: We should have options for dependencies included in the externals to\n\n# override autodetection of system libraries and force the usage of the\n\n# externals.\n",
        "Line" : 404,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "########################################\n\n# Setup include directories (and make sure they are preferred over the Externals)\n\n#\n",
        "Line" : 493,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "########################################\n\n# Process externals and setup their include directories\n\n#\n\n# NOTES about adding Externals:\n\n#   - If an external provides a target, or one can be introduced with find_package, consider using it.\n\n#     - If a target doesn't exist, consider introducing a target for it with add_library and adding all necessary\n\n#       includes, definitions, etc, to that target. This way, only libraries that need those attributes simply\n\n#       need to link that target in, as opposed to them being provided to every library\n\n#       (which is the case with the directory-based include_directories, add_definitions, etc)\n\n#\n\n#   - make sure to tell cmake to link them statically or dynamically (most\n\n#     should be linked statically)\n\n#   - place the CMakeLists.txt in the first-level subdirectory, e.g.\n\n#     Externals/zlib/CMakeLists.txt (that is: NOT in some Src/ subdirectory)\n\n#\n",
        "Line" : 501,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# hack: LDFLAGS already contains -lenet but all flags but the first are\n\n# dropped; ugh, cmake\n",
        "Line" : 534,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "# enet is too old\n",
        "Line" : 543,
        "CharPositionInLine" : 6
      },
      "46" : {
        "Text" : "# Using static FreeSurround from Externals\n\n# There is no system FreeSurround library.\n",
        "Line" : 594,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Using static soundtouch from Externals\n\n# Unable to use system soundtouch library: We require shorts, not floats.\n",
        "Line" : 604,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "########################################\n\n# Pre-build events: Define configuration variables and write SCM info header\n\n#\n",
        "Line" : 718,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "########################################\n\n# Unit testing.\n\n#\n",
        "Line" : 733,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "########################################\n\n# Process Dolphin source now that all setup is complete\n\n#\n",
        "Line" : 743,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "########################################\n\n# Install shared data files\n\n#\n",
        "Line" : 748,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# Install the application icon and menu item\n",
        "Line" : 758,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# Install manpages\n",
        "Line" : 765,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# packaging information\n",
        "Line" : 772,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# TODO: CPACK_RESOURCE_FILE_README\n\n# TODO: CPACK_RESOURCE_FILE_WELCOME\n\n# TODO: CPACK_PACKAGE_ICON\n\n# TODO: CPACK_NSIS_*\n\n# TODO: Use CPack components for DSPSpy, etc => cpack_add_component\n",
        "Line" : 783,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# CPack must be included after the CPACK_* variables are set in order for those\n\n# variables to take effect.\n",
        "Line" : 794,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 57
    },
    "Externals/Bochs_disasm/CMakeLists.txt" : {
      "ObjectId" : "84326842cb03c8d223eef2480942934c905f19c2",
      "LastModified" : "2018-10-24T03:51:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Externals/FreeSurround/CMakeLists.txt" : {
      "ObjectId" : "6d488f155e2f203d63c1e090c58f979c81a3c8ea",
      "LastModified" : "2019-02-14T08:38:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Externals/LZO/CMakeLists.txt" : {
      "ObjectId" : "48d1af1b1e96bbc39a2a255b8fd224bf69e409d6",
      "LastModified" : "2019-02-14T08:38:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Externals/SFML/CMakeLists.txt" : {
      "ObjectId" : "0e82eae1ece60a02b88ec8c6dbce66d8dc7d5991",
      "LastModified" : "2019-02-14T08:38:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Externals/cpp-optparse/CMakeLists.txt" : {
      "ObjectId" : "f5d05fa2f3d836f4405b26cffaf31114f8014de0",
      "LastModified" : "2019-02-14T08:38:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Externals/cubeb/CMakeLists.txt" : {
      "ObjectId" : "3604041d7da91ed14068e63ca296e6c7fcec2de5",
      "LastModified" : "2019-02-14T08:38:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO\n\n# - backend selection via command line, rather than simply detecting headers.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Externals/cubeb/cmake/sanitizers-cmake/cmake/FindASan.cmake" : {
      "ObjectId" : "fcebb43757e47b0233d0cc6d4f5946efcca32ae2",
      "LastModified" : "2019-02-14T08:38:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\n\n#\n\n# Copyright (c)\n\n#   2013 Matthew Arsenault\n\n#   2015-2016 RWTH Aachen University, Federal Republic of Germany\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Clang 3.2+ use this version. The no-omit-frame-pointer option is optional.\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Older deprecated flag for ASan\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "Externals/cubeb/cmake/sanitizers-cmake/cmake/FindMSan.cmake" : {
      "ObjectId" : "3b0a4addcb9b6f8c95268443285f0217140c491a",
      "LastModified" : "2019-02-14T08:38:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\n\n#\n\n# Copyright (c)\n\n#   2013 Matthew Arsenault\n\n#   2015-2016 RWTH Aachen University, Federal Republic of Germany\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Externals/cubeb/cmake/sanitizers-cmake/cmake/FindSanitizers.cmake" : {
      "ObjectId" : "1c4622fc53063909dadc607649c3567d1e699782",
      "LastModified" : "2019-02-14T08:38:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\n\n#\n\n# Copyright (c)\n\n#   2013 Matthew Arsenault\n\n#   2015-2016 RWTH Aachen University, Federal Republic of Germany\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If any of the used compiler is a GNU compiler, add a second option to static\n\n# link against the sanitizers.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If no sanitizer is enabled, return immediately.\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Check if this target will be compiled by exactly one compiler. Other-\n\n# wise sanitizers can't be used and a warning should be printed once.\n",
        "Line" : 63,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# If the target is compiled by no known compiler, ignore it.\n",
        "Line" : 73,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Add sanitizers for target.\n",
        "Line" : 81,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 6
    },
    "Externals/cubeb/cmake/sanitizers-cmake/cmake/FindTSan.cmake" : {
      "ObjectId" : "0e80f29b6484bf20109e8eeb8eaae7d93b320736",
      "LastModified" : "2019-02-14T08:38:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\n\n#\n\n# Copyright (c)\n\n#   2013 Matthew Arsenault\n\n#   2015-2016 RWTH Aachen University, Federal Republic of Germany\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ThreadSanitizer is not compatible with MemorySanitizer.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Externals/cubeb/cmake/sanitizers-cmake/cmake/FindUBSan.cmake" : {
      "ObjectId" : "69486742a4449564c794e40e18c6277894768ff0",
      "LastModified" : "2019-02-14T08:38:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\n\n#\n\n# Copyright (c)\n\n#   2013 Matthew Arsenault\n\n#   2015-2016 RWTH Aachen University, Federal Republic of Germany\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Externals/cubeb/cmake/sanitizers-cmake/cmake/sanitize-helpers.cmake" : {
      "ObjectId" : "6f3decdfac09882629d06bfbacb824f02904fd3a",
      "LastModified" : "2019-02-14T08:38:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\n\n#\n\n# Copyright (c)\n\n#   2013 Matthew Arsenault\n\n#   2015-2016 RWTH Aachen University, Federal Republic of Germany\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Helper function to get the language of a source file.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Helper function to get compilers used by a target.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Check if all sources for target use the same compiler. If a target uses\n\n# e.g. C and Fortran mixed and uses different compilers (e.g. clang and\n\n# gfortran) this can trigger huge problems, because different compilers may\n\n# use different implementations for sanitizers.\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# If expression was found, FILE is a generator-expression for an object\n\n# library. Object libraries will be ignored.\n",
        "Line" : 53,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Helper function to check compiler flags for language compiler.\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# CheckFortranCompilerFlag was introduced in CMake 3.x. To be compatible\n\n# with older Cmake versions, we will check if this module is present\n\n# before we use it. Otherwise we will define Fortran coverage support as\n\n# not available.\n",
        "Line" : 80,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Helper function to test compiler flags.\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Sanitizer flags are not dependend on language, but the used compiler.\n\n# So instead of searching flags foreach language, search flags foreach\n\n# compiler used.\n",
        "Line" : 102,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# If compiler is a GNU compiler, search for static flag, if\n\n# SANITIZE_LINK_STATIC is enabled.\n",
        "Line" : 118,
        "CharPositionInLine" : 20
      },
      "10" : {
        "Text" : "# Helper to assign sanitizer flags for TARGET.\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Get list of compilers used by target and check, if sanitizer is available\n\n# for this target. Other compiler checks like check for conflicting\n\n# compilers will be done in add_sanitizers function.\n",
        "Line" : 154,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Set compile- and link-flags for target.\n",
        "Line" : 163,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 13
    },
    "Externals/curl/CMakeLists.txt" : {
      "ObjectId" : "96351c4120fb3047e01d73b8a1b07917c2bb0cb8",
      "LastModified" : "2019-02-14T08:38:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Externals/curl/include/curl/Makefile.am" : {
      "ObjectId" : "7c924fcb5a8c1dad23f64f1b3010babc4564cda8",
      "LastModified" : "2019-02-14T08:38:12Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#***************************************************************************\n\n#                                  _   _ ____  _\n\n#  Project                     ___| | | |  _ \\| |\n\n#                             / __| | | | |_) | |\n\n#                            | (__| |_| |  _ <| |___\n\n#                             \\___|\\___/|_| \\_\\_____|\n\n#\n\n# Copyright (C) 1998 - 2011, Daniel Stenberg, <daniel@haxx.se>, et al.\n\n#\n\n# This software is licensed as described in the file COPYING, which\n\n# you should have received as part of this distribution. The terms\n\n# are also available at https://curl.haxx.se/docs/copyright.html.\n\n#\n\n# You may opt to use, copy, modify, merge, publish, distribute and/or sell\n\n# copies of the Software, and permit persons to whom the Software is\n\n# furnished to do so, under the terms of the COPYING file.\n\n#\n\n# This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTY OF ANY\n\n# KIND, either express or implied.\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# curlbuild.h does not exist in the git tree. When the original libcurl\n\n# source code distribution archive file is created, curlbuild.h.dist is\n\n# renamed to curlbuild.h and included in the tarball so that it can be\n\n# used directly on non-configure systems.\n\n#\n\n# The distributed curlbuild.h will be overwritten on configure systems\n\n# when the configure script runs, with one that is suitable and specific\n\n# to the library being configured and built.\n\n#\n\n# curlbuild.h.in is the distributed template file from which the configure\n\n# script creates curlbuild.h at library configuration time, overwiting the\n\n# one included in the distribution archive.\n\n#\n\n# curlbuild.h.dist is not included in the source code distribution archive.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# for debug builds, we scan the sources on all regular make invokes\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Externals/curl/include/curl/curlbuild.h.cmake" : {
      "ObjectId" : "bbb31a9408f229704ecfbadc8d886402cb95adf6",
      "LastModified" : "2019-02-14T08:38:12Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/***************************************************************************\n *                                  _   _ ____  _\n *  Project                     ___| | | |  _ \\| |\n *                             / __| | | | |_) | |\n *                            | (__| |_| |  _ <| |___\n *                             \\___|\\___/|_| \\_\\_____|\n *\n * Copyright (C) 1998 - 2008, Daniel Stenberg, <daniel@haxx.se>, et al.\n *\n * This software is licensed as described in the file COPYING, which\n * you should have received as part of this distribution. The terms\n * are also available at https://curl.haxx.se/docs/copyright.html.\n *\n * You may opt to use, copy, modify, merge, publish, distribute and/or sell\n * copies of the Software, and permit persons to whom the Software is\n * furnished to do so, under the terms of the COPYING file.\n *\n * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTY OF ANY\n * KIND, either express or implied.\n *\n ***************************************************************************/",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/* ================================================================ */\n/*               NOTES FOR CONFIGURE CAPABLE SYSTEMS                */\n/* ================================================================ */",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/*\n * NOTE 1:\n * -------\n *\n * Nothing in this file is intended to be modified or adjusted by the\n * curl library user nor by the curl library builder.\n *\n * If you think that something actually needs to be changed, adjusted\n * or fixed in this file, then, report it on the libcurl development\n * mailing list: https://cool.haxx.se/mailman/listinfo/curl-library/\n *\n * This header file shall only export symbols which are 'curl' or 'CURL'\n * prefixed, otherwise public name space would be polluted.\n *\n * NOTE 2:\n * -------\n *\n * Right now you might be staring at file include/curl/curlbuild.h.in or\n * at file include/curl/curlbuild.h, this is due to the following reason:\n *\n * On systems capable of running the configure script, the configure process\n * will overwrite the distributed include/curl/curlbuild.h file with one that\n * is suitable and specific to the library being configured and built, which\n * is generated from the include/curl/curlbuild.h.in template file.\n *\n */",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* ================================================================ */\n/*  DEFINITION OF THESE SYMBOLS SHALL NOT TAKE PLACE ANYWHERE ELSE  */\n/* ================================================================ */",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* ================================================================ */\n/*  EXTERNAL INTERFACE SETTINGS FOR CONFIGURE CAPABLE SYSTEMS ONLY  */\n/* ================================================================ */",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* Configure process defines this to 1 when it finds out that system  */\n/* header file ws2tcpip.h must be included by the external interface. */",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/* Configure process defines this to 1 when it finds out that system   */\n/* header file sys/types.h must be included by the external interface. */",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/* Configure process defines this to 1 when it finds out that system */\n/* header file stdint.h must be included by the external interface.  */",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "/* Configure process defines this to 1 when it finds out that system  */\n/* header file inttypes.h must be included by the external interface. */",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "/* Configure process defines this to 1 when it finds out that system    */\n/* header file sys/socket.h must be included by the external interface. */",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "/* Configure process defines this to 1 when it finds out that system  */\n/* header file sys/poll.h must be included by the external interface. */",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "/* The size of `long', as computed by sizeof. */",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "/* Integral data type used for curl_socklen_t. */",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "/* The size of `curl_socklen_t', as computed by sizeof. */",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "/* Data type definition of curl_socklen_t. */",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "/* Signed integral data type used for curl_off_t. */",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "/* Data type definition of curl_off_t. */",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "/* curl_off_t formatting string directive without \"%\" conversion specifier. */",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "/* unsigned curl_off_t formatting string without \"%\" conversion specifier. */",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "/* curl_off_t formatting string directive with \"%\" conversion specifier. */",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "/* The size of `curl_off_t', as computed by sizeof. */",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "/* curl_off_t constant suffix. */",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "/* unsigned curl_off_t constant suffix. */",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "Externals/curl/lib/CMakeLists.txt" : {
      "ObjectId" : "00b6a7c2cc42f385144a5ea165b42da7b3614d10",
      "LastModified" : "2019-02-14T08:38:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Externals/curl/lib/curl_config.h.cmake" : {
      "ObjectId" : "6b5070a8bcd6dd4d7f037fc575889dcd9f87ad99",
      "LastModified" : "2019-02-14T08:38:12Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/* lib/curl_config.h.in.  Generated somehow by cmake.  */",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/* when building libcurl itself */",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/* Location of default ca bundle */",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* Location of default ca path */",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* to disable cookies support */",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* to disable cryptographic authentication */",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/* to disable DICT */",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/* to disable FILE */",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "/* to disable FTP */",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "/* to disable GOPHER */",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "/* to disable IMAP */",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "/* to disable HTTP */",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "/* to disable LDAP */",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "/* to disable LDAPS */",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "/* to disable POP3 */",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "/* to disable proxies */",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "/* to disable RTSP */",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "/* to disable RTMP */",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "/* to disable SMB */",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "/* to disable SMTP */",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "/* to disable TELNET */",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "/* to disable TFTP */",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "/* to disable verbose strings */",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "/* to make a symbol visible */",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "/* Ensure using CURL_EXTERN_SYMBOL is possible */",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "/* Use Windows LDAP implementation */",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "/* when not building a shared library */",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "/* Set to explicitly specify we don't want to use thread-safe functions */",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "/* your Entropy Gathering Daemon socket pathname */",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "/* Define if you want to enable IPv6 support */",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "/* Define to the type qualifier of arg 1 for getnameinfo. */",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "/* Define to the type of arg 1 for getnameinfo. */",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "/* Define to the type of arg 2 for getnameinfo. */",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "/* Define to the type of args 4 and 6 for getnameinfo. */",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "/* Define to the type of arg 7 for getnameinfo. */",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "/* Specifies the number of arguments to getservbyport_r */",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "/* Specifies the size of the buffer to pass to getservbyport_r */",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "/* Define to 1 if you have the alarm function. */",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "/* Define to 1 if you have the <alloca.h> header file. */",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "/* Define to 1 if you have the <arpa/inet.h> header file. */",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "/* Define to 1 if you have the <arpa/tftp.h> header file. */",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "/* Define to 1 if you have the <assert.h> header file. */",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "/* Define to 1 if you have the `basename' function. */",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "/* Define to 1 if bool is an available type. */",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "/* Define to 1 if you have the clock_gettime function and monotonic timer. */",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "/* Define to 1 if you have the `closesocket' function. */",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "/* Define to 1 if you have the `CRYPTO_cleanup_all_ex_data' function. */",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "/* Define to 1 if you have the <crypto.h> header file. */",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "/* Define to 1 if you have the <des.h> header file. */",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "/* Define to 1 if you have the <dlfcn.h> header file. */",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "/* Define to 1 if you have the `ENGINE_load_builtin_engines' function. */",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "/* Define to 1 if you have the <errno.h> header file. */",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "/* Define to 1 if you have the <err.h> header file. */",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "/* Define to 1 if you have the fcntl function. */",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "/* Define to 1 if you have the <fcntl.h> header file. */",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "/* Define to 1 if you have a working fcntl O_NONBLOCK function. */",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "/* Define to 1 if you have the fdopen function. */",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "/* Define to 1 if you have the `fork' function. */",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "/* Define to 1 if you have the freeaddrinfo function. */",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "/* Define to 1 if you have the freeifaddrs function. */",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "/* Define to 1 if you have the ftruncate function. */",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "/* Define to 1 if you have a working getaddrinfo function. */",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "/* Define to 1 if you have the `geteuid' function. */",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "/* Define to 1 if you have the gethostbyaddr function. */",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "/* Define to 1 if you have the gethostbyaddr_r function. */",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "/* gethostbyaddr_r() takes 5 args */",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "/* gethostbyaddr_r() takes 7 args */",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "/* gethostbyaddr_r() takes 8 args */",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "/* Define to 1 if you have the gethostbyname function. */",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "/* Define to 1 if you have the gethostbyname_r function. */",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "/* gethostbyname_r() takes 3 args */",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "/* gethostbyname_r() takes 5 args */",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "/* gethostbyname_r() takes 6 args */",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "/* Define to 1 if you have the gethostname function. */",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "/* Define to 1 if you have a working getifaddrs function. */",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "/* Define to 1 if you have the getnameinfo function. */",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "/* Define to 1 if you have the `getpass_r' function. */",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "/* Define to 1 if you have the `getppid' function. */",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "/* Define to 1 if you have the `getprotobyname' function. */",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "/* Define to 1 if you have the `getpwuid' function. */",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "/* Define to 1 if you have the `getrlimit' function. */",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "/* Define to 1 if you have the getservbyport_r function. */",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "/* Define to 1 if you have the `gettimeofday' function. */",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "/* Define to 1 if you have a working glibc-style strerror_r function. */",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "/* Define to 1 if you have a working gmtime_r function. */",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "/* if you have the gssapi libraries */",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "/* Define to 1 if you have the <gssapi/gssapi_generic.h> header file. */",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "/* Define to 1 if you have the <gssapi/gssapi.h> header file. */",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "/* Define to 1 if you have the <gssapi/gssapi_krb5.h> header file. */",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "/* if you have the GNU gssapi libraries */",
        "Line" : 268,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "/* if you have the Heimdal gssapi libraries */",
        "Line" : 271,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "/* if you have the MIT gssapi libraries */",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "/* Define to 1 if you have the `idna_strerror' function. */",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "/* Define to 1 if you have the `idn_free' function. */",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "/* Define to 1 if you have the <idn-free.h> header file. */",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "/* Define to 1 if you have the <ifaddrs.h> header file. */",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "96" : {
        "Text" : "/* Define to 1 if you have the `inet_addr' function. */",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "97" : {
        "Text" : "/* Define to 1 if you have the inet_ntoa_r function. */",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "98" : {
        "Text" : "/* inet_ntoa_r() takes 2 args */",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "99" : {
        "Text" : "/* inet_ntoa_r() takes 3 args */",
        "Line" : 298,
        "CharPositionInLine" : 0
      },
      "100" : {
        "Text" : "/* Define to 1 if you have a IPv6 capable working inet_ntop function. */",
        "Line" : 301,
        "CharPositionInLine" : 0
      },
      "101" : {
        "Text" : "/* Define to 1 if you have a IPv6 capable working inet_pton function. */",
        "Line" : 304,
        "CharPositionInLine" : 0
      },
      "102" : {
        "Text" : "/* Define to 1 if you have the <inttypes.h> header file. */",
        "Line" : 307,
        "CharPositionInLine" : 0
      },
      "103" : {
        "Text" : "/* Define to 1 if you have the ioctl function. */",
        "Line" : 310,
        "CharPositionInLine" : 0
      },
      "104" : {
        "Text" : "/* Define to 1 if you have the ioctlsocket function. */",
        "Line" : 313,
        "CharPositionInLine" : 0
      },
      "105" : {
        "Text" : "/* Define to 1 if you have the IoctlSocket camel case function. */",
        "Line" : 316,
        "CharPositionInLine" : 0
      },
      "106" : {
        "Text" : "/* Define to 1 if you have a working IoctlSocket camel case FIONBIO function.\n   */",
        "Line" : 319,
        "CharPositionInLine" : 0
      },
      "107" : {
        "Text" : "/* Define to 1 if you have a working ioctlsocket FIONBIO function. */",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "108" : {
        "Text" : "/* Define to 1 if you have a working ioctl FIONBIO function. */",
        "Line" : 326,
        "CharPositionInLine" : 0
      },
      "109" : {
        "Text" : "/* Define to 1 if you have a working ioctl SIOCGIFADDR function. */",
        "Line" : 329,
        "CharPositionInLine" : 0
      },
      "110" : {
        "Text" : "/* Define to 1 if you have the <io.h> header file. */",
        "Line" : 332,
        "CharPositionInLine" : 0
      },
      "111" : {
        "Text" : "/* if you have the Kerberos4 libraries (including -ldes) */",
        "Line" : 335,
        "CharPositionInLine" : 0
      },
      "112" : {
        "Text" : "/* Define to 1 if you have the `krb_get_our_ip_for_realm' function. */",
        "Line" : 338,
        "CharPositionInLine" : 0
      },
      "113" : {
        "Text" : "/* Define to 1 if you have the <krb.h> header file. */",
        "Line" : 341,
        "CharPositionInLine" : 0
      },
      "114" : {
        "Text" : "/* Define to 1 if you have the lber.h header file. */",
        "Line" : 344,
        "CharPositionInLine" : 0
      },
      "115" : {
        "Text" : "/* Define to 1 if you have the ldapssl.h header file. */",
        "Line" : 347,
        "CharPositionInLine" : 0
      },
      "116" : {
        "Text" : "/* Define to 1 if you have the ldap.h header file. */",
        "Line" : 350,
        "CharPositionInLine" : 0
      },
      "117" : {
        "Text" : "/* Use LDAPS implementation */",
        "Line" : 353,
        "CharPositionInLine" : 0
      },
      "118" : {
        "Text" : "/* Define to 1 if you have the ldap_ssl.h header file. */",
        "Line" : 356,
        "CharPositionInLine" : 0
      },
      "119" : {
        "Text" : "/* Define to 1 if you have the `ldap_url_parse' function. */",
        "Line" : 359,
        "CharPositionInLine" : 0
      },
      "120" : {
        "Text" : "/* Define to 1 if you have the <libgen.h> header file. */",
        "Line" : 362,
        "CharPositionInLine" : 0
      },
      "121" : {
        "Text" : "/* Define to 1 if you have the `idn' library (-lidn). */",
        "Line" : 365,
        "CharPositionInLine" : 0
      },
      "122" : {
        "Text" : "/* Define to 1 if you have the `resolv' library (-lresolv). */",
        "Line" : 368,
        "CharPositionInLine" : 0
      },
      "123" : {
        "Text" : "/* Define to 1 if you have the `resolve' library (-lresolve). */",
        "Line" : 371,
        "CharPositionInLine" : 0
      },
      "124" : {
        "Text" : "/* Define to 1 if you have the `socket' library (-lsocket). */",
        "Line" : 374,
        "CharPositionInLine" : 0
      },
      "125" : {
        "Text" : "/* Define to 1 if you have the `ssh2' library (-lssh2). */",
        "Line" : 377,
        "CharPositionInLine" : 0
      },
      "126" : {
        "Text" : "/* Define to 1 if libssh2 provides `libssh2_version'. */",
        "Line" : 380,
        "CharPositionInLine" : 0
      },
      "127" : {
        "Text" : "/* Define to 1 if libssh2 provides `libssh2_init'. */",
        "Line" : 383,
        "CharPositionInLine" : 0
      },
      "128" : {
        "Text" : "/* Define to 1 if libssh2 provides `libssh2_exit'. */",
        "Line" : 386,
        "CharPositionInLine" : 0
      },
      "129" : {
        "Text" : "/* Define to 1 if libssh2 provides `libssh2_scp_send64'. */",
        "Line" : 389,
        "CharPositionInLine" : 0
      },
      "130" : {
        "Text" : "/* Define to 1 if libssh2 provides `libssh2_session_handshake'. */",
        "Line" : 392,
        "CharPositionInLine" : 0
      },
      "131" : {
        "Text" : "/* Define to 1 if you have the <libssh2.h> header file. */",
        "Line" : 395,
        "CharPositionInLine" : 0
      },
      "132" : {
        "Text" : "/* Define to 1 if you have the `ssl' library (-lssl). */",
        "Line" : 398,
        "CharPositionInLine" : 0
      },
      "133" : {
        "Text" : "/* if zlib is available */",
        "Line" : 401,
        "CharPositionInLine" : 0
      },
      "134" : {
        "Text" : "/* Define to 1 if you have the <limits.h> header file. */",
        "Line" : 404,
        "CharPositionInLine" : 0
      },
      "135" : {
        "Text" : "/* if your compiler supports LL */",
        "Line" : 407,
        "CharPositionInLine" : 0
      },
      "136" : {
        "Text" : "/* Define to 1 if you have the <locale.h> header file. */",
        "Line" : 410,
        "CharPositionInLine" : 0
      },
      "137" : {
        "Text" : "/* Define to 1 if you have a working localtime_r function. */",
        "Line" : 413,
        "CharPositionInLine" : 0
      },
      "138" : {
        "Text" : "/* Define to 1 if the compiler supports the 'long long' data type. */",
        "Line" : 416,
        "CharPositionInLine" : 0
      },
      "139" : {
        "Text" : "/* Define to 1 if you have the malloc.h header file. */",
        "Line" : 419,
        "CharPositionInLine" : 0
      },
      "140" : {
        "Text" : "/* Define to 1 if you have the <memory.h> header file. */",
        "Line" : 422,
        "CharPositionInLine" : 0
      },
      "141" : {
        "Text" : "/* Define to 1 if you have the MSG_NOSIGNAL flag. */",
        "Line" : 425,
        "CharPositionInLine" : 0
      },
      "142" : {
        "Text" : "/* Define to 1 if you have the <netdb.h> header file. */",
        "Line" : 428,
        "CharPositionInLine" : 0
      },
      "143" : {
        "Text" : "/* Define to 1 if you have the <netinet/in.h> header file. */",
        "Line" : 431,
        "CharPositionInLine" : 0
      },
      "144" : {
        "Text" : "/* Define to 1 if you have the <netinet/tcp.h> header file. */",
        "Line" : 434,
        "CharPositionInLine" : 0
      },
      "145" : {
        "Text" : "/* Define to 1 if you have the <net/if.h> header file. */",
        "Line" : 437,
        "CharPositionInLine" : 0
      },
      "146" : {
        "Text" : "/* Define to 1 if NI_WITHSCOPEID exists and works. */",
        "Line" : 440,
        "CharPositionInLine" : 0
      },
      "147" : {
        "Text" : "/* if you have an old MIT gssapi library, lacking GSS_C_NT_HOSTBASED_SERVICE */",
        "Line" : 443,
        "CharPositionInLine" : 0
      },
      "148" : {
        "Text" : "/* Define to 1 if you have the <openssl/crypto.h> header file. */",
        "Line" : 446,
        "CharPositionInLine" : 0
      },
      "149" : {
        "Text" : "/* Define to 1 if you have the <openssl/engine.h> header file. */",
        "Line" : 449,
        "CharPositionInLine" : 0
      },
      "150" : {
        "Text" : "/* Define to 1 if you have the <openssl/err.h> header file. */",
        "Line" : 452,
        "CharPositionInLine" : 0
      },
      "151" : {
        "Text" : "/* Define to 1 if you have the <openssl/pem.h> header file. */",
        "Line" : 455,
        "CharPositionInLine" : 0
      },
      "152" : {
        "Text" : "/* Define to 1 if you have the <openssl/pkcs12.h> header file. */",
        "Line" : 458,
        "CharPositionInLine" : 0
      },
      "153" : {
        "Text" : "/* Define to 1 if you have the <openssl/rsa.h> header file. */",
        "Line" : 461,
        "CharPositionInLine" : 0
      },
      "154" : {
        "Text" : "/* Define to 1 if you have the <openssl/ssl.h> header file. */",
        "Line" : 464,
        "CharPositionInLine" : 0
      },
      "155" : {
        "Text" : "/* Define to 1 if you have the <openssl/x509.h> header file. */",
        "Line" : 467,
        "CharPositionInLine" : 0
      },
      "156" : {
        "Text" : "/* Define to 1 if you have the <pem.h> header file. */",
        "Line" : 470,
        "CharPositionInLine" : 0
      },
      "157" : {
        "Text" : "/* Define to 1 if you have the `perror' function. */",
        "Line" : 473,
        "CharPositionInLine" : 0
      },
      "158" : {
        "Text" : "/* Define to 1 if you have the `pipe' function. */",
        "Line" : 476,
        "CharPositionInLine" : 0
      },
      "159" : {
        "Text" : "/* Define to 1 if you have a working poll function. */",
        "Line" : 479,
        "CharPositionInLine" : 0
      },
      "160" : {
        "Text" : "/* If you have a fine poll */",
        "Line" : 482,
        "CharPositionInLine" : 0
      },
      "161" : {
        "Text" : "/* Define to 1 if you have the <poll.h> header file. */",
        "Line" : 485,
        "CharPositionInLine" : 0
      },
      "162" : {
        "Text" : "/* Define to 1 if you have a working POSIX-style strerror_r function. */",
        "Line" : 488,
        "CharPositionInLine" : 0
      },
      "163" : {
        "Text" : "/* Define to 1 if you have the <pthread.h> header file */",
        "Line" : 491,
        "CharPositionInLine" : 0
      },
      "164" : {
        "Text" : "/* Define to 1 if you have the <pwd.h> header file. */",
        "Line" : 494,
        "CharPositionInLine" : 0
      },
      "165" : {
        "Text" : "/* Define to 1 if you have the `RAND_egd' function. */",
        "Line" : 497,
        "CharPositionInLine" : 0
      },
      "166" : {
        "Text" : "/* Define to 1 if you have the `RAND_screen' function. */",
        "Line" : 500,
        "CharPositionInLine" : 0
      },
      "167" : {
        "Text" : "/* Define to 1 if you have the `RAND_status' function. */",
        "Line" : 503,
        "CharPositionInLine" : 0
      },
      "168" : {
        "Text" : "/* Define to 1 if you have the recv function. */",
        "Line" : 506,
        "CharPositionInLine" : 0
      },
      "169" : {
        "Text" : "/* Define to 1 if you have the recvfrom function. */",
        "Line" : 509,
        "CharPositionInLine" : 0
      },
      "170" : {
        "Text" : "/* Define to 1 if you have the <rsa.h> header file. */",
        "Line" : 512,
        "CharPositionInLine" : 0
      },
      "171" : {
        "Text" : "/* Define to 1 if you have the select function. */",
        "Line" : 515,
        "CharPositionInLine" : 0
      },
      "172" : {
        "Text" : "/* Define to 1 if you have the send function. */",
        "Line" : 518,
        "CharPositionInLine" : 0
      },
      "173" : {
        "Text" : "/* Define to 1 if you have the <setjmp.h> header file. */",
        "Line" : 521,
        "CharPositionInLine" : 0
      },
      "174" : {
        "Text" : "/* Define to 1 if you have the `setlocale' function. */",
        "Line" : 524,
        "CharPositionInLine" : 0
      },
      "175" : {
        "Text" : "/* Define to 1 if you have the `setmode' function. */",
        "Line" : 527,
        "CharPositionInLine" : 0
      },
      "176" : {
        "Text" : "/* Define to 1 if you have the `setrlimit' function. */",
        "Line" : 530,
        "CharPositionInLine" : 0
      },
      "177" : {
        "Text" : "/* Define to 1 if you have the setsockopt function. */",
        "Line" : 533,
        "CharPositionInLine" : 0
      },
      "178" : {
        "Text" : "/* Define to 1 if you have a working setsockopt SO_NONBLOCK function. */",
        "Line" : 536,
        "CharPositionInLine" : 0
      },
      "179" : {
        "Text" : "/* Define to 1 if you have the <sgtty.h> header file. */",
        "Line" : 539,
        "CharPositionInLine" : 0
      },
      "180" : {
        "Text" : "/* Define to 1 if you have the sigaction function. */",
        "Line" : 542,
        "CharPositionInLine" : 0
      },
      "181" : {
        "Text" : "/* Define to 1 if you have the siginterrupt function. */",
        "Line" : 545,
        "CharPositionInLine" : 0
      },
      "182" : {
        "Text" : "/* Define to 1 if you have the signal function. */",
        "Line" : 548,
        "CharPositionInLine" : 0
      },
      "183" : {
        "Text" : "/* Define to 1 if you have the <signal.h> header file. */",
        "Line" : 551,
        "CharPositionInLine" : 0
      },
      "184" : {
        "Text" : "/* Define to 1 if you have the sigsetjmp function or macro. */",
        "Line" : 554,
        "CharPositionInLine" : 0
      },
      "185" : {
        "Text" : "/* Define to 1 if sig_atomic_t is an available typedef. */",
        "Line" : 557,
        "CharPositionInLine" : 0
      },
      "186" : {
        "Text" : "/* Define to 1 if sig_atomic_t is already defined as volatile. */",
        "Line" : 560,
        "CharPositionInLine" : 0
      },
      "187" : {
        "Text" : "/* Define to 1 if struct sockaddr_in6 has the sin6_scope_id member */",
        "Line" : 563,
        "CharPositionInLine" : 0
      },
      "188" : {
        "Text" : "/* Define to 1 if you have the `socket' function. */",
        "Line" : 566,
        "CharPositionInLine" : 0
      },
      "189" : {
        "Text" : "/* Define to 1 if you have the `SSL_get_shutdown' function. */",
        "Line" : 569,
        "CharPositionInLine" : 0
      },
      "190" : {
        "Text" : "/* Define to 1 if you have the <ssl.h> header file. */",
        "Line" : 572,
        "CharPositionInLine" : 0
      },
      "191" : {
        "Text" : "/* Define to 1 if you have the <stdbool.h> header file. */",
        "Line" : 575,
        "CharPositionInLine" : 0
      },
      "192" : {
        "Text" : "/* Define to 1 if you have the <stdint.h> header file. */",
        "Line" : 578,
        "CharPositionInLine" : 0
      },
      "193" : {
        "Text" : "/* Define to 1 if you have the <stdio.h> header file. */",
        "Line" : 581,
        "CharPositionInLine" : 0
      },
      "194" : {
        "Text" : "/* Define to 1 if you have the <stdlib.h> header file. */",
        "Line" : 584,
        "CharPositionInLine" : 0
      },
      "195" : {
        "Text" : "/* Define to 1 if you have the strcasecmp function. */",
        "Line" : 587,
        "CharPositionInLine" : 0
      },
      "196" : {
        "Text" : "/* Define to 1 if you have the strcasestr function. */",
        "Line" : 590,
        "CharPositionInLine" : 0
      },
      "197" : {
        "Text" : "/* Define to 1 if you have the strcmpi function. */",
        "Line" : 593,
        "CharPositionInLine" : 0
      },
      "198" : {
        "Text" : "/* Define to 1 if you have the strdup function. */",
        "Line" : 596,
        "CharPositionInLine" : 0
      },
      "199" : {
        "Text" : "/* Define to 1 if you have the strerror_r function. */",
        "Line" : 599,
        "CharPositionInLine" : 0
      },
      "200" : {
        "Text" : "/* Define to 1 if you have the stricmp function. */",
        "Line" : 602,
        "CharPositionInLine" : 0
      },
      "201" : {
        "Text" : "/* Define to 1 if you have the <strings.h> header file. */",
        "Line" : 605,
        "CharPositionInLine" : 0
      },
      "202" : {
        "Text" : "/* Define to 1 if you have the <string.h> header file. */",
        "Line" : 608,
        "CharPositionInLine" : 0
      },
      "203" : {
        "Text" : "/* Define to 1 if you have the strlcat function. */",
        "Line" : 611,
        "CharPositionInLine" : 0
      },
      "204" : {
        "Text" : "/* Define to 1 if you have the `strlcpy' function. */",
        "Line" : 614,
        "CharPositionInLine" : 0
      },
      "205" : {
        "Text" : "/* Define to 1 if you have the strncasecmp function. */",
        "Line" : 617,
        "CharPositionInLine" : 0
      },
      "206" : {
        "Text" : "/* Define to 1 if you have the strncmpi function. */",
        "Line" : 620,
        "CharPositionInLine" : 0
      },
      "207" : {
        "Text" : "/* Define to 1 if you have the strnicmp function. */",
        "Line" : 623,
        "CharPositionInLine" : 0
      },
      "208" : {
        "Text" : "/* Define to 1 if you have the <stropts.h> header file. */",
        "Line" : 626,
        "CharPositionInLine" : 0
      },
      "209" : {
        "Text" : "/* Define to 1 if you have the strstr function. */",
        "Line" : 629,
        "CharPositionInLine" : 0
      },
      "210" : {
        "Text" : "/* Define to 1 if you have the strtok_r function. */",
        "Line" : 632,
        "CharPositionInLine" : 0
      },
      "211" : {
        "Text" : "/* Define to 1 if you have the strtoll function. */",
        "Line" : 635,
        "CharPositionInLine" : 0
      },
      "212" : {
        "Text" : "/* if struct sockaddr_storage is defined */",
        "Line" : 638,
        "CharPositionInLine" : 0
      },
      "213" : {
        "Text" : "/* Define to 1 if you have the timeval struct. */",
        "Line" : 641,
        "CharPositionInLine" : 0
      },
      "214" : {
        "Text" : "/* Define to 1 if you have the <sys/filio.h> header file. */",
        "Line" : 644,
        "CharPositionInLine" : 0
      },
      "215" : {
        "Text" : "/* Define to 1 if you have the <sys/ioctl.h> header file. */",
        "Line" : 647,
        "CharPositionInLine" : 0
      },
      "216" : {
        "Text" : "/* Define to 1 if you have the <sys/param.h> header file. */",
        "Line" : 650,
        "CharPositionInLine" : 0
      },
      "217" : {
        "Text" : "/* Define to 1 if you have the <sys/poll.h> header file. */",
        "Line" : 653,
        "CharPositionInLine" : 0
      },
      "218" : {
        "Text" : "/* Define to 1 if you have the <sys/resource.h> header file. */",
        "Line" : 656,
        "CharPositionInLine" : 0
      },
      "219" : {
        "Text" : "/* Define to 1 if you have the <sys/select.h> header file. */",
        "Line" : 659,
        "CharPositionInLine" : 0
      },
      "220" : {
        "Text" : "/* Define to 1 if you have the <sys/socket.h> header file. */",
        "Line" : 662,
        "CharPositionInLine" : 0
      },
      "221" : {
        "Text" : "/* Define to 1 if you have the <sys/sockio.h> header file. */",
        "Line" : 665,
        "CharPositionInLine" : 0
      },
      "222" : {
        "Text" : "/* Define to 1 if you have the <sys/stat.h> header file. */",
        "Line" : 668,
        "CharPositionInLine" : 0
      },
      "223" : {
        "Text" : "/* Define to 1 if you have the <sys/time.h> header file. */",
        "Line" : 671,
        "CharPositionInLine" : 0
      },
      "224" : {
        "Text" : "/* Define to 1 if you have the <sys/types.h> header file. */",
        "Line" : 674,
        "CharPositionInLine" : 0
      },
      "225" : {
        "Text" : "/* Define to 1 if you have the <sys/uio.h> header file. */",
        "Line" : 677,
        "CharPositionInLine" : 0
      },
      "226" : {
        "Text" : "/* Define to 1 if you have the <sys/un.h> header file. */",
        "Line" : 680,
        "CharPositionInLine" : 0
      },
      "227" : {
        "Text" : "/* Define to 1 if you have the <sys/utime.h> header file. */",
        "Line" : 683,
        "CharPositionInLine" : 0
      },
      "228" : {
        "Text" : "/* Define to 1 if you have the <termios.h> header file. */",
        "Line" : 686,
        "CharPositionInLine" : 0
      },
      "229" : {
        "Text" : "/* Define to 1 if you have the <termio.h> header file. */",
        "Line" : 689,
        "CharPositionInLine" : 0
      },
      "230" : {
        "Text" : "/* Define to 1 if you have the <time.h> header file. */",
        "Line" : 692,
        "CharPositionInLine" : 0
      },
      "231" : {
        "Text" : "/* Define to 1 if you have the <tld.h> header file. */",
        "Line" : 695,
        "CharPositionInLine" : 0
      },
      "232" : {
        "Text" : "/* Define to 1 if you have the `tld_strerror' function. */",
        "Line" : 698,
        "CharPositionInLine" : 0
      },
      "233" : {
        "Text" : "/* Define to 1 if you have the `uname' function. */",
        "Line" : 701,
        "CharPositionInLine" : 0
      },
      "234" : {
        "Text" : "/* Define to 1 if you have the <unistd.h> header file. */",
        "Line" : 704,
        "CharPositionInLine" : 0
      },
      "235" : {
        "Text" : "/* Define to 1 if you have the `utime' function. */",
        "Line" : 707,
        "CharPositionInLine" : 0
      },
      "236" : {
        "Text" : "/* Define to 1 if you have the <utime.h> header file. */",
        "Line" : 710,
        "CharPositionInLine" : 0
      },
      "237" : {
        "Text" : "/* Define to 1 if compiler supports C99 variadic macro style. */",
        "Line" : 713,
        "CharPositionInLine" : 0
      },
      "238" : {
        "Text" : "/* Define to 1 if compiler supports old gcc variadic macro style. */",
        "Line" : 716,
        "CharPositionInLine" : 0
      },
      "239" : {
        "Text" : "/* Define to 1 if you have the winber.h header file. */",
        "Line" : 719,
        "CharPositionInLine" : 0
      },
      "240" : {
        "Text" : "/* Define to 1 if you have the windows.h header file. */",
        "Line" : 722,
        "CharPositionInLine" : 0
      },
      "241" : {
        "Text" : "/* Define to 1 if you have the winldap.h header file. */",
        "Line" : 725,
        "CharPositionInLine" : 0
      },
      "242" : {
        "Text" : "/* Define to 1 if you have the winsock2.h header file. */",
        "Line" : 728,
        "CharPositionInLine" : 0
      },
      "243" : {
        "Text" : "/* Define to 1 if you have the winsock.h header file. */",
        "Line" : 731,
        "CharPositionInLine" : 0
      },
      "244" : {
        "Text" : "/* Define this symbol if your OS supports changing the contents of argv */",
        "Line" : 734,
        "CharPositionInLine" : 0
      },
      "245" : {
        "Text" : "/* Define to 1 if you have the writev function. */",
        "Line" : 737,
        "CharPositionInLine" : 0
      },
      "246" : {
        "Text" : "/* Define to 1 if you have the ws2tcpip.h header file. */",
        "Line" : 740,
        "CharPositionInLine" : 0
      },
      "247" : {
        "Text" : "/* Define to 1 if you have the <x509.h> header file. */",
        "Line" : 743,
        "CharPositionInLine" : 0
      },
      "248" : {
        "Text" : "/* Define if you have the <process.h> header file. */",
        "Line" : 746,
        "CharPositionInLine" : 0
      },
      "249" : {
        "Text" : "/* if you have the zlib.h header file */",
        "Line" : 749,
        "CharPositionInLine" : 0
      },
      "250" : {
        "Text" : "/* Define to the sub-directory in which libtool stores uninstalled libraries.\n   */",
        "Line" : 752,
        "CharPositionInLine" : 0
      },
      "251" : {
        "Text" : "/* If you lack a fine basename() prototype */",
        "Line" : 756,
        "CharPositionInLine" : 0
      },
      "252" : {
        "Text" : "/* Define to 1 if you need the lber.h header file even with ldap.h */",
        "Line" : 759,
        "CharPositionInLine" : 0
      },
      "253" : {
        "Text" : "/* Define to 1 if you need the malloc.h header file even with stdlib.h */",
        "Line" : 762,
        "CharPositionInLine" : 0
      },
      "254" : {
        "Text" : "/* Define to 1 if _REENTRANT preprocessor symbol must be defined. */",
        "Line" : 765,
        "CharPositionInLine" : 0
      },
      "255" : {
        "Text" : "/* cpu-machine-OS */",
        "Line" : 768,
        "CharPositionInLine" : 0
      },
      "256" : {
        "Text" : "/* Name of package */",
        "Line" : 771,
        "CharPositionInLine" : 0
      },
      "257" : {
        "Text" : "/* Define to the address where bug reports for this package should be sent. */",
        "Line" : 774,
        "CharPositionInLine" : 0
      },
      "258" : {
        "Text" : "/* Define to the full name of this package. */",
        "Line" : 777,
        "CharPositionInLine" : 0
      },
      "259" : {
        "Text" : "/* Define to the full name and version of this package. */",
        "Line" : 780,
        "CharPositionInLine" : 0
      },
      "260" : {
        "Text" : "/* Define to the one symbol short name of this package. */",
        "Line" : 783,
        "CharPositionInLine" : 0
      },
      "261" : {
        "Text" : "/* Define to the version of this package. */",
        "Line" : 786,
        "CharPositionInLine" : 0
      },
      "262" : {
        "Text" : "/* a suitable file to read random data from */",
        "Line" : 789,
        "CharPositionInLine" : 0
      },
      "263" : {
        "Text" : "/* Define to the type of arg 1 for recvfrom. */",
        "Line" : 792,
        "CharPositionInLine" : 0
      },
      "264" : {
        "Text" : "/* Define to the type pointed by arg 2 for recvfrom. */",
        "Line" : 795,
        "CharPositionInLine" : 0
      },
      "265" : {
        "Text" : "/* Define to 1 if the type pointed by arg 2 for recvfrom is void. */",
        "Line" : 798,
        "CharPositionInLine" : 0
      },
      "266" : {
        "Text" : "/* Define to the type of arg 3 for recvfrom. */",
        "Line" : 801,
        "CharPositionInLine" : 0
      },
      "267" : {
        "Text" : "/* Define to the type of arg 4 for recvfrom. */",
        "Line" : 804,
        "CharPositionInLine" : 0
      },
      "268" : {
        "Text" : "/* Define to the type pointed by arg 5 for recvfrom. */",
        "Line" : 807,
        "CharPositionInLine" : 0
      },
      "269" : {
        "Text" : "/* Define to 1 if the type pointed by arg 5 for recvfrom is void. */",
        "Line" : 810,
        "CharPositionInLine" : 0
      },
      "270" : {
        "Text" : "/* Define to the type pointed by arg 6 for recvfrom. */",
        "Line" : 813,
        "CharPositionInLine" : 0
      },
      "271" : {
        "Text" : "/* Define to 1 if the type pointed by arg 6 for recvfrom is void. */",
        "Line" : 816,
        "CharPositionInLine" : 0
      },
      "272" : {
        "Text" : "/* Define to the function return type for recvfrom. */",
        "Line" : 819,
        "CharPositionInLine" : 0
      },
      "273" : {
        "Text" : "/* Define to the type of arg 1 for recv. */",
        "Line" : 822,
        "CharPositionInLine" : 0
      },
      "274" : {
        "Text" : "/* Define to the type of arg 2 for recv. */",
        "Line" : 825,
        "CharPositionInLine" : 0
      },
      "275" : {
        "Text" : "/* Define to the type of arg 3 for recv. */",
        "Line" : 828,
        "CharPositionInLine" : 0
      },
      "276" : {
        "Text" : "/* Define to the type of arg 4 for recv. */",
        "Line" : 831,
        "CharPositionInLine" : 0
      },
      "277" : {
        "Text" : "/* Define to the function return type for recv. */",
        "Line" : 834,
        "CharPositionInLine" : 0
      },
      "278" : {
        "Text" : "/* Define as the return type of signal handlers (`int' or `void'). */",
        "Line" : 837,
        "CharPositionInLine" : 0
      },
      "279" : {
        "Text" : "/* Define to the type qualifier of arg 5 for select. */",
        "Line" : 840,
        "CharPositionInLine" : 0
      },
      "280" : {
        "Text" : "/* Define to the type of arg 1 for select. */",
        "Line" : 843,
        "CharPositionInLine" : 0
      },
      "281" : {
        "Text" : "/* Define to the type of args 2, 3 and 4 for select. */",
        "Line" : 846,
        "CharPositionInLine" : 0
      },
      "282" : {
        "Text" : "/* Define to the type of arg 5 for select. */",
        "Line" : 849,
        "CharPositionInLine" : 0
      },
      "283" : {
        "Text" : "/* Define to the function return type for select. */",
        "Line" : 852,
        "CharPositionInLine" : 0
      },
      "284" : {
        "Text" : "/* Define to the type qualifier of arg 2 for send. */",
        "Line" : 855,
        "CharPositionInLine" : 0
      },
      "285" : {
        "Text" : "/* Define to the type of arg 1 for send. */",
        "Line" : 858,
        "CharPositionInLine" : 0
      },
      "286" : {
        "Text" : "/* Define to the type of arg 2 for send. */",
        "Line" : 861,
        "CharPositionInLine" : 0
      },
      "287" : {
        "Text" : "/* Define to the type of arg 3 for send. */",
        "Line" : 864,
        "CharPositionInLine" : 0
      },
      "288" : {
        "Text" : "/* Define to the type of arg 4 for send. */",
        "Line" : 867,
        "CharPositionInLine" : 0
      },
      "289" : {
        "Text" : "/* Define to the function return type for send. */",
        "Line" : 870,
        "CharPositionInLine" : 0
      },
      "290" : {
        "Text" : "/* The size of `int', as computed by sizeof. */",
        "Line" : 873,
        "CharPositionInLine" : 0
      },
      "291" : {
        "Text" : "/* The size of `short', as computed by sizeof. */",
        "Line" : 876,
        "CharPositionInLine" : 0
      },
      "292" : {
        "Text" : "/* The size of `long', as computed by sizeof. */",
        "Line" : 879,
        "CharPositionInLine" : 0
      },
      "293" : {
        "Text" : "/* The size of `off_t', as computed by sizeof. */",
        "Line" : 882,
        "CharPositionInLine" : 0
      },
      "294" : {
        "Text" : "/* The size of `size_t', as computed by sizeof. */",
        "Line" : 885,
        "CharPositionInLine" : 0
      },
      "295" : {
        "Text" : "/* The size of `time_t', as computed by sizeof. */",
        "Line" : 888,
        "CharPositionInLine" : 0
      },
      "296" : {
        "Text" : "/* The size of `void*', as computed by sizeof. */",
        "Line" : 891,
        "CharPositionInLine" : 0
      },
      "297" : {
        "Text" : "/* Define to 1 if you have the ANSI C header files. */",
        "Line" : 894,
        "CharPositionInLine" : 0
      },
      "298" : {
        "Text" : "/* Define to the type of arg 3 for strerror_r. */",
        "Line" : 897,
        "CharPositionInLine" : 0
      },
      "299" : {
        "Text" : "/* Define to 1 if you can safely include both <sys/time.h> and <time.h>. */",
        "Line" : 900,
        "CharPositionInLine" : 0
      },
      "300" : {
        "Text" : "/* Define if you want to enable c-ares support */",
        "Line" : 903,
        "CharPositionInLine" : 0
      },
      "301" : {
        "Text" : "/* Define if you want to enable POSIX threaded DNS lookup */",
        "Line" : 906,
        "CharPositionInLine" : 0
      },
      "302" : {
        "Text" : "/* Define to disable non-blocking sockets. */",
        "Line" : 909,
        "CharPositionInLine" : 0
      },
      "303" : {
        "Text" : "/* if GnuTLS is enabled */",
        "Line" : 912,
        "CharPositionInLine" : 0
      },
      "304" : {
        "Text" : "/* if PolarSSL is enabled */",
        "Line" : 915,
        "CharPositionInLine" : 0
      },
      "305" : {
        "Text" : "/* if libSSH2 is in use */",
        "Line" : 918,
        "CharPositionInLine" : 0
      },
      "306" : {
        "Text" : "/* If you want to build curl with the built-in manual */",
        "Line" : 921,
        "CharPositionInLine" : 0
      },
      "307" : {
        "Text" : "/* if NSS is enabled */",
        "Line" : 924,
        "CharPositionInLine" : 0
      },
      "308" : {
        "Text" : "/* if you want to use OpenLDAP code instead of legacy ldap implementation */",
        "Line" : 927,
        "CharPositionInLine" : 0
      },
      "309" : {
        "Text" : "/* if OpenSSL is in use */",
        "Line" : 930,
        "CharPositionInLine" : 0
      },
      "310" : {
        "Text" : "/* if Unix domain sockets are enabled  */",
        "Line" : 933,
        "CharPositionInLine" : 0
      },
      "311" : {
        "Text" : "/* Define to 1 if you are building a Windows target without large file\n   support. */",
        "Line" : 936,
        "CharPositionInLine" : 0
      },
      "312" : {
        "Text" : "/* to enable SSPI support */",
        "Line" : 940,
        "CharPositionInLine" : 0
      },
      "313" : {
        "Text" : "/* to enable Windows SSL  */",
        "Line" : 943,
        "CharPositionInLine" : 0
      },
      "314" : {
        "Text" : "/* Define to 1 if using yaSSL in OpenSSL compatibility mode. */",
        "Line" : 946,
        "CharPositionInLine" : 0
      },
      "315" : {
        "Text" : "/* Version number of package */",
        "Line" : 949,
        "CharPositionInLine" : 0
      },
      "316" : {
        "Text" : "/* Define to avoid automatic inclusion of winsock.h */",
        "Line" : 952,
        "CharPositionInLine" : 0
      },
      "317" : {
        "Text" : "/* Define to 1 if OS is AIX. */",
        "Line" : 955,
        "CharPositionInLine" : 0
      },
      "318" : {
        "Text" : "/* Number of bits in a file offset, on hosts where this is settable. */",
        "Line" : 960,
        "CharPositionInLine" : 0
      },
      "319" : {
        "Text" : "/* Define for large files, on AIX-style hosts. */",
        "Line" : 963,
        "CharPositionInLine" : 0
      },
      "320" : {
        "Text" : "/* define this if you need it to compile thread-safe code */",
        "Line" : 966,
        "CharPositionInLine" : 0
      },
      "321" : {
        "Text" : "/* Define to empty if `const' does not conform to ANSI C. */",
        "Line" : 969,
        "CharPositionInLine" : 0
      },
      "322" : {
        "Text" : "/* Type to use in place of in_addr_t when system does not provide it. */",
        "Line" : 972,
        "CharPositionInLine" : 0
      },
      "323" : {
        "Text" : "/* Define to `__inline__' or `__inline' if that's what the C compiler\n   calls it, or to nothing if 'inline' is not supported under any name.  */",
        "Line" : 975,
        "CharPositionInLine" : 0
      },
      "324" : {
        "Text" : "/* Define to `unsigned int' if <sys/types.h> does not define. */",
        "Line" : 981,
        "CharPositionInLine" : 0
      },
      "325" : {
        "Text" : "/* the signed version of size_t */",
        "Line" : 984,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 326
    },
    "Externals/discord-rpc/CMakeLists.txt" : {
      "ObjectId" : "eae0ce06a771013e0fe648f90b0ed0dfff8d1d63",
      "LastModified" : "2019-02-14T08:38:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# format\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add subdirs\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Externals/discord-rpc/src/CMakeLists.txt" : {
      "ObjectId" : "8e20faac86c7890b4b9502976d0c563b815db19a",
      "LastModified" : "2019-02-14T08:38:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# unreferenced formal parameter\n\n# unreferenced inline\n\n# copy constructor deleted\n\n# move constructor deleted\n\n# move assignment operator deleted\n\n# not defined preprocessor macro\n\n# function not inlined\n\n# function was inlined\n\n# structure padding\n\n# reinterpret_cast used between related classes\n\n# move assignment operator was implicitly defined as deleted\n",
        "Line" : 46,
        "CharPositionInLine" : 20
      },
      "1" : {
        "Text" : "# pragma push thing doesn't work on clang\n",
        "Line" : 87,
        "CharPositionInLine" : 29
      },
      "2" : {
        "Text" : "# it's fine\n",
        "Line" : 88,
        "CharPositionInLine" : 28
      },
      "3" : {
        "Text" : "# that was almost 2 decades ago\n",
        "Line" : 89,
        "CharPositionInLine" : 26
      },
      "4" : {
        "Text" : "# structure padding\n",
        "Line" : 92,
        "CharPositionInLine" : 20
      },
      "5" : {
        "Text" : "# not sure about these\n",
        "Line" : 94,
        "CharPositionInLine" : 35
      },
      "6" : {
        "Text" : "# install\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Externals/ed25519/CMakeLists.txt" : {
      "ObjectId" : "a3a68d536fe97509365bfdb4aa933cd8789b12c5",
      "LastModified" : "2019-02-14T08:38:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Externals/enet/CMakeLists.txt" : {
      "ObjectId" : "24f039651593ea12e269fd2098e1cfb3a11886d1",
      "LastModified" : "2019-02-14T08:38:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The \"configure\" step.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Externals/enet/Makefile.am" : {
      "ObjectId" : "e839463c419c1451d3f30871ba0d7595d110f2cf",
      "LastModified" : "2019-02-14T08:38:12Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# see info '(libtool) Updating version info' before making a release\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Externals/glslang/CMakeLists.txt" : {
      "ObjectId" : "e531534a9641f76e5e146df31fc2cd1dcdae9652",
      "LastModified" : "2019-02-14T08:38:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# glslang requires C++11 at a minimum to compile.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Silence some warnings that occur frequently to reduce noise in build logs.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Externals/glslang/ChooseMSVCCRT.cmake" : {
      "ObjectId" : "209788174ff9cd9a45dc8a15483f21d6091e3e38",
      "LastModified" : "2019-02-14T08:38:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The macro choose_msvc_crt() takes a list of possible\n\n# C runtimes to choose from, in the form of compiler flags,\n\n# to present to the user. (MTd for /MTd, etc)\n\n#\n\n# The macro is invoked at the end of the file.\n\n#\n\n# CMake already sets CRT flags in the CMAKE_CXX_FLAGS_* and\n\n# CMAKE_C_FLAGS_* variables by default. To let the user\n\n# override that for each build type:\n\n# 1. Detect which CRT is already selected, and reflect this in\n\n# LLVM_USE_CRT_* so the user can have a better idea of what\n\n# changes they're making.\n\n# 2. Replace the flags in both variables with the new flag via a regex.\n\n# 3. set() the variables back into the cache so the changes\n\n# are user-visible.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### Helper macros: ###\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Trying to match the beginning or end of the string with stuff\n\n# like [ ^]+ didn't work, so use a bunch of parentheses instead.\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Find the selected-by-CMake CRT for each build type, if any.\n\n# Strip off the leading slash and any whitespace.\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Replaces or adds a flag to a variable.\n\n# Expects 'flag' to be padded with spaces.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Make sure this change gets reflected in the cache/gui.\n\n# CMake requires the docstring parameter whenever set() touches the cache,\n\n# so get the existing docstring and re-use that.\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# List of valid CRTs for MSVC\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Externals/glslang/External/CMakeLists.txt" : {
      "ObjectId" : "4d9690134ae916c52e837c65ff7815e0d86c1828",
      "LastModified" : "2019-02-14T08:38:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Suppress all warnings from external projects.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We need to make sure Google Test does not mess up with the\n\n# global CRT settings on Windows.\n",
        "Line" : 8,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "Externals/glslang/OGLCompilersDLL/CMakeLists.txt" : {
      "ObjectId" : "5bb3f0ee69690a44e0b7b2b31cd5638a1a49a1c8",
      "LastModified" : "2019-02-14T08:38:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Externals/glslang/SPIRV/CMakeLists.txt" : {
      "ObjectId" : "1e5513c735619fe3fa8e39a5c8d63576c0427f60",
      "LastModified" : "2019-02-14T08:38:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Externals/glslang/StandAlone/CMakeLists.txt" : {
      "ObjectId" : "d500121df5b9cd2df0bf212ce28b643e97f2bb3d",
      "LastModified" : "2019-02-14T08:38:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Externals/glslang/glslang/CMakeLists.txt" : {
      "ObjectId" : "1efde2edd4c22ed85dfd35adffe0181e13801e53",
      "LastModified" : "2019-02-14T08:38:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This might be useful for making grammar changes:\n\n#\n\n# find_package(BISON)\n\n# add_custom_command(OUTPUT ${CMAKE_CURRENT_SOURCE_DIR}/MachineIndependent/glslang_tab.cpp ${CMAKE_CURRENT_SOURCE_DIR}/MachineIndependent/glslang_tab.cpp.h\n\n#                    COMMAND ${BISON_EXECUTABLE} --defines=${CMAKE_CURRENT_SOURCE_DIR}/MachineIndependent/glslang_tab.cpp.h -t ${CMAKE_CURRENT_SOURCE_DIR}/MachineIndependent/glslang.y -o ${CMAKE_CURRENT_SOURCE_DIR}/MachineIndependent/glslang_tab.cpp\n\n#                    MAIN_DEPENDENCY MachineIndependent/glslang.y\n\n#                    WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})\n\n# set(BISON_GLSLParser_OUTPUT_SOURCE ${CMAKE_CURRENT_SOURCE_DIR}/MachineIndependent/glslang_tab.cpp)\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Externals/glslang/glslang/OSDependent/Unix/CMakeLists.txt" : {
      "ObjectId" : "1bf49e1256ddbf05cb229526cbc9e903ee36be67",
      "LastModified" : "2019-02-14T08:38:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Externals/glslang/glslang/OSDependent/Windows/CMakeLists.txt" : {
      "ObjectId" : "f257418abbee006a1f82c772f3fb8c202011b35e",
      "LastModified" : "2019-02-14T08:38:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# MinGW GCC complains about function pointer casts to void*.\n\n# Turn that off with -fpermissive.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Externals/glslang/gtests/CMakeLists.txt" : {
      "ObjectId" : "15b73f4bde9edfa4289ec816e33e7dd8fb58c324",
      "LastModified" : "2019-02-14T08:38:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Framework related source files\n",
        "Line" : 6,
        "CharPositionInLine" : 12
      },
      "1" : {
        "Text" : "# Test related source files\n",
        "Line" : 14,
        "CharPositionInLine" : 12
      },
      "2" : {
        "Text" : "# -- Remapper tests\n",
        "Line" : 25,
        "CharPositionInLine" : 12
      },
      "3" : {
        "Text" : "# Supply a default test root directory, so that manual testing\n\n# doesn't have to specify the --test-root option in the normal\n\n# case that you want to use the tests from the same source tree.\n",
        "Line" : 37,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 4
    },
    "Externals/glslang/hlsl/CMakeLists.txt" : {
      "ObjectId" : "6d1d8e6ae5c7555e5c871141421cc99e34540233",
      "LastModified" : "2019-02-14T08:38:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Externals/gtest/CMakeLists.txt" : {
      "ObjectId" : "b09c46ed32bf5565e60d5888e6fe4ef21bdc8c3a",
      "LastModified" : "2019-02-14T08:38:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# CMake build script for Google Test.\n\n#\n\n# To run the tests for Google Test itself on Linux, use 'make test' or\n\n# ctest.  You can select which tests to run using 'ctest -R regex'.\n\n# For more options, run 'ctest --help'.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BUILD_SHARED_LIBS is a standard CMake variable, but we declare it here to\n\n# make it prominent in the GUI.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# When other libraries are using a shared version of runtime libraries,\n\n# Google Test also has to use one.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Defines pre_project_set_up_hermetic_build() and set_up_hermetic_build().\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "########################################################################\n\n#\n\n# Project-wide settings\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Name of the project.\n\n#\n\n# CMake files in this project can refer to the root source directory\n\n# as ${gtest_SOURCE_DIR} and to the root binary directory as\n\n# ${gtest_BINARY_DIR}.\n\n# Language \"C\" is required for find_package(Threads).\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Visibility\n",
        "Line" : 55,
        "CharPositionInLine" : 20
      },
      "7" : {
        "Text" : "# Define helper functions and macros used by Google Test.\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Defined in internal_utils.cmake.\n",
        "Line" : 71,
        "CharPositionInLine" : 30
      },
      "9" : {
        "Text" : "# Where Google Test's .h files can be found.\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Summary of tuple support for Microsoft Visual Studio:\n\n# Compiler    version(MS)  version(cmake)  Support\n\n# ----------  -----------  --------------  -----------------------------\n\n# <= VS 2010  <= 10        <= 1600         Use Google Tests's own tuple.\n\n# VS 2012     11           1700            std::tr1::tuple + _VARIADIC_MAX=10\n\n# VS 2013     12           1800            std::tr1::tuple\n\n# VS 2015     14           1900            std::tuple\n\n# VS 2017     15           >= 1910         std::tuple\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "########################################################################\n\n#\n\n# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Google Test libraries.  We build them using more strict warnings than what\n\n# are used for other targets, to ensure that gtest can be compiled by a user\n\n# aggressive about warnings.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# If the CMake version supports it, attach header directory information\n\n# to the targets for when we are part of a parent build (ie being pulled\n\n# in via add_subdirectory() rather than being a standalone build).\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "########################################################################\n\n#\n\n# Install rules\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# configure and install pkgconfig files\n",
        "Line" : 121,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "########################################################################\n\n#\n\n# Samples on how to link user tests with gtest or gtest_main.\n\n#\n\n# They are not built by default.  To build them, set the\n\n# gtest_build_samples option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_samples=ON flag when running cmake.\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "########################################################################\n\n#\n\n# Google Test's own tests.\n\n#\n\n# You can skip this section if you aren't interested in testing\n\n# Google Test itself.\n\n#\n\n# The tests are not built by default.  To build them, set the\n\n# gtest_build_tests option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_tests=ON flag when running cmake.\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# This must be set in the root directory for the tests to be run by\n\n# 'make test' or ctest.\n",
        "Line" : 167,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "############################################################\n\n# C++ tests built with standard compiler flags.\n",
        "Line" : 171,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "############################################################\n\n# C++ tests built with non-standard compiler flags.\n",
        "Line" : 202,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 205,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# 1600 is Visual Studio 2010.\n",
        "Line" : 234,
        "CharPositionInLine" : 43
      },
      "23" : {
        "Text" : "# Visual Studio 2010, 2012, and 2013 define symbols in std::tr1 that\n\n# conflict with our own definitions. Therefore using our own tuple does not\n\n# work on those compilers.\n",
        "Line" : 235,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "############################################################\n\n# Python tests.\n",
        "Line" : 249,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Visual Studio .NET 2003 does not support STL with exceptions disabled.\n",
        "Line" : 255,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# 1310 is Visual Studio .NET 2003\n",
        "Line" : 256,
        "CharPositionInLine" : 46
      },
      "27" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 292,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 28
    },
    "Externals/gtest/cmake/internal_utils.cmake" : {
      "ObjectId" : "6448918f8e463dfea84b102dfbfd894974a61ff2",
      "LastModified" : "2019-02-14T08:38:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Defines functions and macros useful for building Google Test and\n\n# Google Mock.\n\n#\n\n# Note:\n\n#\n\n# - This file will be run twice when building Google Mock (once via\n\n#   Google Test's CMakeLists.txt, and once via Google Mock's).\n\n#   Therefore it shouldn't have any side effects other than defining\n\n#   the functions and macros.\n\n#\n\n# - The functions/macros defined in this file may depend on Google\n\n#   Test and Google Mock's option() definitions, and thus must be\n\n#   called *after* the options have been defined.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Tweaks CMake's default compiler/linker settings to suit Google Test's needs.\n\n#\n\n# This must be a macro(), as inside a function string() can only\n\n# update variables in the function scope.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For MSVC, CMake sets certain flags to defaults we want to override.\n\n# This replacement code is taken from sample in the CMake Wiki at\n\n# http://www.cmake.org/Wiki/CMake_FAQ#Dynamic_Replace.\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# When Google Test is built as a shared library, it should also use\n\n# shared runtime libraries.  Otherwise, it may end up with multiple\n\n# copies of runtime library data in different modules, resulting in\n\n# hard-to-find crashes. When it is built as a static library, it is\n\n# preferable to use CRT as static libraries, as we don't have to rely\n\n# on CRT DLLs being available. CMake always defaults to using shared\n\n# CRT libraries, so we override that default here.\n",
        "Line" : 28,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# We prefer more strict warning checking for building Google Test.\n\n# Replaces /W3 with /W4 in defaults.\n",
        "Line" : 38,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Defines the compiler/linker flags used to build Google Test and\n\n# Google Mock.  You can tweak these definitions to suit your need.  A\n\n# variable's value is empty before it's explicitly assigned to.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Note: pthreads on MinGW is not supported, even if available\n\n# instead, we use windows threading primitives\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Defines CMAKE_USE_PTHREADS_INIT and CMAKE_THREAD_LIBS_INIT.\n",
        "Line" : 53,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Newlines inside flags variables break CMake's NMake generator.\n\n# TODO(vladl@google.com): Add -RTCs and -RTCu to debug builds.\n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# 1400 is Visual Studio 2005\n",
        "Line" : 66,
        "CharPositionInLine" : 33
      },
      "10" : {
        "Text" : "# Suppress spurious warnings MSVC 7.1 sometimes issues.\n\n# Forcing value to bool.\n",
        "Line" : 67,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# Copy constructor and assignment operator could not be generated.\n",
        "Line" : 70,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# Compatibility warnings not applicable to Google Test.\n\n# Resolved overload was found by argument-dependent lookup.\n",
        "Line" : 72,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# 1500 is Visual Studio 2008\n",
        "Line" : 76,
        "CharPositionInLine" : 33
      },
      "14" : {
        "Text" : "# Conditional expression is constant.\n\n# When compiling with /W4, we get several instances of C4127\n\n# (Conditional expression is constant). In our code, we disable that\n\n# warning on a case-by-case basis. However, on Visual Studio 2005,\n\n# the warning fires on std::list. Therefore on that compiler and earlier,\n\n# we disable the warning project-wide.\n",
        "Line" : 77,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# 1700 is Visual Studio 2012.\n",
        "Line" : 85,
        "CharPositionInLine" : 39
      },
      "16" : {
        "Text" : "# Suppress \"unreachable code\" warning on VS 2012 and later.\n\n# http://stackoverflow.com/questions/3232669 explains the issue.\n",
        "Line" : 86,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# Until version 4.3.2, GCC doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 103,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Sun Pro doesn't provide macros to indicate whether exceptions and\n\n# RTTI are enabled, so we define GTEST_HAS_* explicitly.\n",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# CMake 2.8 changes Visual Age's compiler ID to \"XL\".\n",
        "Line" : 117,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Until version 9.0, Visual Age doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 120,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# RTTI can not be disabled in HP aCC compiler.\n",
        "Line" : 128,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# The pthreads library is available and allowed?\n",
        "Line" : 132,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# For building gtest's own tests and samples.\n",
        "Line" : 140,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# For building the gtest libraries.\n",
        "Line" : 148,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# type can be either STATIC or SHARED to denote a static or shared library.\n\n# ARGN refers to additional arguments after 'cxx_flags'.\n",
        "Line" : 155,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Generate debug library name with a postfix.\n",
        "Line" : 161,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "########################################################################\n\n#\n\n# Helper functions for creating build targets.\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# cxx_executable_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ executable that depends on the given libraries and\n\n# is built from the given source files with the given compiler flags.\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# 1700 is Visual Studio 2012.\n",
        "Line" : 193,
        "CharPositionInLine" : 48
      },
      "31" : {
        "Text" : "# BigObj required for tests.\n",
        "Line" : 194,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# To support mixing linking in static and dynamic libraries, link each\n\n# library in with an extra call to target_link_libraries.\n",
        "Line" : 207,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# cxx_executable(name dir lib srcs...)\n\n#\n\n# creates a named target that depends on the given libs and is built\n\n# from the given source files.  dir/name.cc is implicitly included in\n\n# the source file list.\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Sets PYTHONINTERP_FOUND and PYTHON_EXECUTABLE.\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# cxx_test_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ test that depends on the given libs and is built\n\n# from the given source files with the given compiler flags.\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# cxx_test(name libs srcs...)\n\n#\n\n# creates a named test target that depends on the given libs and is\n\n# built from the given source files.  Unlike cxx_test_with_flags,\n\n# test/name.cc is already implicitly included in the source file list.\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# py_test(name)\n\n#\n\n# creates a Python test with the given name whose main module is in\n\n# test/name.py.  It does nothing if Python is not installed.\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Multi-configuration build generators as for Visual Studio save\n\n# output in a subdirectory of CMAKE_CURRENT_BINARY_DIR (Debug,\n\n# Release etc.), so we have to provide it here.\n",
        "Line" : 254,
        "CharPositionInLine" : 1
      },
      "39" : {
        "Text" : "# Single-configuration build generators like Makefile generators\n\n# don't have subdirs below CMAKE_CURRENT_BINARY_DIR.\n",
        "Line" : 262,
        "CharPositionInLine" : 1
      },
      "40" : {
        "Text" : "# ${CMAKE_CURRENT_BINARY_DIR} is known at configuration time, so we can\n\n# directly bind it from cmake. ${CTEST_CONFIGURATION_TYPE} is known\n\n# only at ctest runtime (by calling ctest -c <Configuration>), so\n\n# we have to escape $ to delay variable substitution here.\n",
        "Line" : 270,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 41
    },
    "Externals/hidapi/CMakeLists.txt" : {
      "ObjectId" : "4b33a46fd504d11e57c5434a442fde48a9198226",
      "LastModified" : "2019-02-14T08:38:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Externals/imgui/CMakeLists.txt" : {
      "ObjectId" : "2cbfe486a301b32fea9063062e0476264caad497",
      "LastModified" : "2019-02-14T08:38:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Externals/libiconv-1.14/CMakeLists.txt" : {
      "ObjectId" : "9a0660b25448967093268eabd992f3de58a8979c",
      "LastModified" : "2019-02-14T08:38:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Externals/libiconv-1.14/src/Makefile" : {
      "ObjectId" : "8877b22b4fdd5f3c032cd6a5db43adc29ad6475e",
      "LastModified" : "2019-02-14T08:38:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for libiconv/src\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### Start of system configuration section. ####\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Directories used by \"make\":\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Directories used by \"make install\":\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Programs used by \"make\":\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Programs used by \"make install\":\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Programs used by \"make install-strip\":\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#### End of system configuration section. ####\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Needed by $(LIBTOOL).\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Needed by SET_RELOCATABLE.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Needed by RELOCATABLE_LDFLAGS.\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# We cannot link with libintl until libiconv is installed. (When we call\n\n# libtool with arguments \"../lib/libiconv.la -lintl\", libtool will call ld\n\n# with \"../lib/.libs/libiconv.so $libdir/libintl.so $libdir/libiconv.so\",\n\n# (remember that $libdir/libintl.la lists $libdir/libiconv.so as a dependency),\n\n# and this gives a fatal linker error on Solaris because the two libiconv.so\n\n# files are different but have the same soname.\n\n# So we can link the iconv executable only after we have installed libiconv,\n\n# i.e. during \"make install\". The intermediate 'iconv' executable is built\n\n# without internationalization and not linked with libintl.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# This is the temporary iconv executable, without internationalization.\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# The following rule is necessary to avoid a toplevel \"make -n check\" failure.\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Support for relocatability.\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# During \"make install\", we can build the final iconv executable.\n\n# On HP-UX, in order to ensure that the new libiconv.sl will override the old\n\n# one that is hardcoded in libintl.sl, we need to mention libiconv.sl before\n\n# libintl.sl on the link command line. We have to bypass libtool in order to\n\n# achieve this.\n\n# On Solaris, the linker gives an error if we are using libintl.so and it\n\n# refers to a libiconv.so in $prefix/lib since then it sees two libiconv.so's,\n\n# one in $prefix/lib and one in ../lib/.libs. So we have to avoid using\n\n# ../lib/libiconv.la entirely.\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16,
      "Errorlog" : "line 74:46 token recognition error at: '\\1'\n"
    },
    "Externals/libpng/CMakeLists.txt" : {
      "ObjectId" : "4396e4a34cf906143713422ea97f3bb40d1475a3",
      "LastModified" : "2019-02-14T08:38:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Externals/libusb/CMakeLists.txt" : {
      "ObjectId" : "c20036d80da504247433ab17e0e6713f5056f58e",
      "LastModified" : "2019-02-14T08:38:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# turns out other projects also have \"config.h\", so make sure the\n\n# LibUSB one comes first\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# # Dolphin on Android doesn't use libusb.\n\n#elseif(ANDROID)\n\n#    target_sources(usb PRIVATE\n\n#        libusb/os/linux_usbfs.c\n\n#        libusb/os/linux_netlink.c\n\n#    )\n\n#    find_library(LOG_LIBRARY log)\n\n#    target_link_libraries(usb PRIVATE ${LOG_LIBRARY})\n\n#    set(OS_LINUX TRUE)\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Externals/libusb/libusb/Makefile.am" : {
      "ObjectId" : "0eca02e857bc945bec606c92124a05e875f6b571",
      "LastModified" : "2019-02-14T08:38:12Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Rebuild the import lib from the .def so that MS and MinGW DLLs can be interchanged\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Externals/libusb/libusb/os/haiku/Makefile.am" : {
      "ObjectId" : "d6639bbf74f39788ecffb6c0da2d759150f6a641",
      "LastModified" : "2019-02-14T08:38:12Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Externals/mbedtls/CMakeLists.txt" : {
      "ObjectId" : "f5c18c1351d097932242d62e0f86b5f007082e31",
      "LastModified" : "2019-02-14T08:38:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# some warnings we want are not available with old GCC versions\n\n# note: starting with CMake 2.8 we could use CMAKE_C_COMPILER_VERSION\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "Externals/mbedtls/library/CMakeLists.txt" : {
      "ObjectId" : "ce9e939580289eba6c9cf30638b3f7d990b625d3",
      "LastModified" : "2019-02-14T08:38:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_custom_target(lib DEPENDS mbedcrypto mbedx509 mbedtls)\n\n#if(USE_STATIC_MBEDTLS_LIBRARY AND USE_SHARED_MBEDTLS_LIBRARY)\n\n#    add_dependencies(lib mbedcrypto_static mbedx509_static mbedtls_static)\n\n#endif()\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Externals/mbedtls/library/Makefile" : {
      "ObjectId" : "28f92315a0f9540281407cdaf53f9e04e291ffce",
      "LastModified" : "2019-02-14T08:38:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Also see \"include/mbedtls/config.h\"\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# MicroBlaze specific options:\n\n# CFLAGS += -mno-xl-soft-mul -mxl-barrel-shift\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# To compile on Plan9:\n\n# CFLAGS += -D_BSD_EXTENSION\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# if were running on Windows build for Windows\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# To compile as a shared library:\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# all code is position-indep with mingw, avoid warning about useless flag\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# OSX shared library extension:\n\n# DLEXT=dylib\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Windows shared library extension:\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# tls\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# x509\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# crypto\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "Externals/miniupnpc/CMakeLists.txt" : {
      "ObjectId" : "efd45e000ec505244395e184eacf7daf0fe77e69",
      "LastModified" : "2019-02-14T08:38:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Externals/minizip/CMakeLists.txt" : {
      "ObjectId" : "3b8d84043f4cbc927920eb17d6b95f3f56fe2b89",
      "LastModified" : "2019-02-14T08:38:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Externals/pugixml/CMakeLists.txt" : {
      "ObjectId" : "0f2de7c837263bdb086efed85da3ac492a8aa4ce",
      "LastModified" : "2019-02-14T08:38:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Rewrite command line flags to use /MT if necessary\n",
        "Line" : 12,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "Externals/soundtouch/CMakeLists.txt" : {
      "ObjectId" : "74acedfb4f86eaafef7d98505d1d33926ebf1db3",
      "LastModified" : "2019-02-14T08:38:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Externals/xxhash/CMakeLists.txt" : {
      "ObjectId" : "8218f801d8d5a0e180221ddad569a3400c68332e",
      "LastModified" : "2019-02-14T08:38:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Externals/zlib/CMakeLists.txt" : {
      "ObjectId" : "a76e97b06a41f5ed348dc00ac3d42c4643a4229c",
      "LastModified" : "2019-02-14T08:38:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check to see if we have large file support\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# clear variable\n",
        "Line" : 29,
        "CharPositionInLine" : 32
      },
      "2" : {
        "Text" : "# Check for fseeko\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#============================================================================\n\n# zlib\n\n#============================================================================\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Source/Android/app/proguard-rules.pro" : {
      "ObjectId" : "52592ad511c25685068b1bad3739e0a36d1be317",
      "LastModified" : "2019-02-14T08:38:12Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# By default, the flags in this file are appended to flags specified\n\n# in /home/sigma/apps/android-sdk/tools/proguard/proguard-android.txt\n\n# You can edit the include path and order by changing the proguardFiles\n\n# directive in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add any project specific keep options here:\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Source/Android/jni/CMakeLists.txt" : {
      "ObjectId" : "848da018236a7ac214d65d426d9c46721ea59d14",
      "LastModified" : "2019-02-14T08:38:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Delete folders that aren't used by the Android version of Dolphin\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Source/CMakeLists.txt" : {
      "ObjectId" : "69a8cd9eab80fff479b455c6e6cb5a6740c1364e",
      "LastModified" : "2019-02-14T08:38:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# enable the latest C++ standard feature set,\n\n# and also disable MSVC specific extensions\n\n# to be even more standards compliant.\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Enable C++17, but fall back to C++14 if it isn't available.\n\n# CMAKE_CXX_STANDARD cannot be used here because we require C++14 or newer, not any standard.\n",
        "Line" : 19,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# These compat headers must not be in the include path when building with MSVC,\n\n# because it currently does not support __has_include_next / #include_next.\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# These aren't actually needed for C11/C++11\n\n# but some dependencies require them (LLVM, libav).\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# TODO: Add DSPSpy. Preferably make it option() and cpack component\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Source/Core/AudioCommon/CMakeLists.txt" : {
      "ObjectId" : "577bdb41fbc3fb031b8f5701a3da39c57c185216",
      "LastModified" : "2019-02-14T08:38:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# PulseAudio ships with a PulseAudioConfig.cmake with no imported target\n\n# So we use our own FindPulseAudio instead with \"MODULE\"\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Dolphin loads openal32.dll at runtime\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "Source/Core/CMakeLists.txt" : {
      "ObjectId" : "b1a19522bf0dc654756cf271d460c5422b29719c",
      "LastModified" : "2019-02-26T21:15:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Source/Core/Common/CMakeLists.txt" : {
      "ObjectId" : "21f25d750ee5a090503212690d4c1aa924ec3388",
      "LastModified" : "2019-03-29T10:40:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#X86\n",
        "Line" : 96,
        "CharPositionInLine" : 13
      },
      "1" : {
        "Text" : "# Generic\n",
        "Line" : 103,
        "CharPositionInLine" : 9
      },
      "2" : {
        "Text" : "# OpenGL Interface\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# GLX has a hard dependency on libGL.\n\n# Make sure to link to it if using GLX.\n",
        "Line" : 141,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Posix networking code needs to be fixed for Windows\n",
        "Line" : 159,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "Source/Core/Core/CMakeLists.txt" : {
      "ObjectId" : "0cda183141c7b51d9bf34ec5fa0db62c1ed81145",
      "LastModified" : "2019-04-13T16:13:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Using shared LibUSB\n",
        "Line" : 323,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Bluez doesn't support all the communication modes on FreeBSD, so only using it on Linux\n",
        "Line" : 355,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Source/Core/DiscIO/CMakeLists.txt" : {
      "ObjectId" : "78d603acbcb5b1f08c1fd34336b854422582d866",
      "LastModified" : "2019-04-13T16:13:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Source/Core/DolphinNoGUI/CMakeLists.txt" : {
      "ObjectId" : "b2bf174d8bba589225d42162b0dbba92747a49d1",
      "LastModified" : "2019-04-13T16:13:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Source/Core/DolphinQt/CMakeLists.txt" : {
      "ObjectId" : "a82cc672fb7da638aa23d71570f7400d7a5ed45b",
      "LastModified" : "2019-04-13T16:13:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Handle localization\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Ask for an application bundle.\n",
        "Line" : 194,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Copy qt.conf into the bundle\n",
        "Line" : 201,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Copy icon into the bundle\n",
        "Line" : 205,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Copy Qt plugins into the bundle\n",
        "Line" : 209,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Copy resources into the bundle\n",
        "Line" : 218,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Copy MoltenVK into the bundle\n",
        "Line" : 229,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Update library references to make the bundle portable\n",
        "Line" : 233,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "Source/Core/InputCommon/CMakeLists.txt" : {
      "ObjectId" : "a3df1a2d22f4be9c6e8e8627a1fb7cc15a2d2864",
      "LastModified" : "2019-04-13T16:13:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# SDL2 not found, try SDL\n",
        "Line" : 107,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "Source/Core/MacUpdater/CMakeLists.txt" : {
      "ObjectId" : "725917e030f2935a642458b5c60e8da4c31d0102",
      "LastModified" : "2019-04-13T16:13:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copy icon into the bundle\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compile storyboards (Adapted from https://gitlab.kitware.com/cmake/community/wikis/doc/tutorials/OSX-InterfaceBuilderFiles)\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Make sure we can find the 'ibtool' program. If we can NOT find it we\n\n# skip generation of this project\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Source/Core/UICommon/CMakeLists.txt" : {
      "ObjectId" : "46f212490b78a6b664c3050d04d5dfdf50cf0c6a",
      "LastModified" : "2019-04-13T16:13:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Source/Core/UpdaterCommon/CMakeLists.txt" : {
      "ObjectId" : "8a98814e4df48292ebcb49c05cf640d728797383",
      "LastModified" : "2019-04-13T16:13:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Source/Core/VideoBackends/CMakeLists.txt" : {
      "ObjectId" : "51ea3428265a4a73068825fcac39d90294fd73a0",
      "LastModified" : "2019-04-13T16:13:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Source/Core/VideoBackends/D3D/CMakeLists.txt" : {
      "ObjectId" : "b80d9df8184584750826a89dab179e0365ca1a57",
      "LastModified" : "2019-04-13T16:13:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Source/Core/VideoBackends/D3D12/CMakeLists.txt" : {
      "ObjectId" : "08eec49005b018875c82baa57aa371e6ae3e76fd",
      "LastModified" : "2019-04-13T16:13:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Source/Core/VideoBackends/D3DCommon/CMakeLists.txt" : {
      "ObjectId" : "ba24ba133f8768556b2ccd1a545f05376db559e6",
      "LastModified" : "2019-04-13T16:13:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Source/Core/VideoBackends/Null/CMakeLists.txt" : {
      "ObjectId" : "d77c9ef96dfae2453d05f8be0bf97dfac980b89e",
      "LastModified" : "2019-04-13T16:13:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Source/Core/VideoBackends/OGL/CMakeLists.txt" : {
      "ObjectId" : "da091c8e9b563996fc24d5acb86881e1ea2cff77",
      "LastModified" : "2019-04-13T16:13:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Source/Core/VideoBackends/Software/CMakeLists.txt" : {
      "ObjectId" : "ef5a1f509bb9b2c336c9019bdc28dc2ad2bf1f25",
      "LastModified" : "2019-04-13T16:13:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Source/Core/VideoBackends/Vulkan/CMakeLists.txt" : {
      "ObjectId" : "014a3378c83fc76b0fff9ad27692d84511470769",
      "LastModified" : "2019-04-13T16:13:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Link against glslang, the other necessary libraries are referenced by the executable.\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Only include the Vulkan headers when building the Vulkan backend\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Silence warnings on glslang by flagging it as a system include\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Source/Core/VideoCommon/CMakeLists.txt" : {
      "ObjectId" : "dfabf8fede68d80111c5bb261b8f8c300fd467ce",
      "LastModified" : "2019-04-13T16:13:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Source/DSPSpy/Makefile" : {
      "ObjectId" : "cbf9f85dfa086e3433e6eb1afd04e526c7e49fa7",
      "LastModified" : "2019-04-13T16:13:13Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# Clear the implicit built in rules\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# build for wii by default, make HW_TYPE=gamecube will do what it sounds like\n\n# NOTE: gamecube build may require use of dollz3 before running, if sending over BBA\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# TARGET is the name of the output\n\n# BUILD is the directory where object files & intermediate files will be placed\n\n# SOURCES is a list of directories containing source code\n\n# INCLUDES is a list of directories containing extra header files\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# options for code generation\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# any extra libraries we wish to link with the project\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# list of directories containing libraries, this must be the top level containing\n\n# include and lib\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# no real need to edit anything past this point unless you need to add additional\n\n# rules for different file extensions\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# automatically build a list of object files for our project\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# use CXX for linking C++ projects, CC for standard C\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# build a list of include paths\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# build a list of library paths\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#%.biz: %.ds\n\n#\tgcdsptool -c $< -o $@\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#%.h: %.biz\n\n#\traw2c $< $@\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# main targets\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# This rule links in binary data with the .bin extension\n\n#---------------------------------------------------------------------------------\n\n#%.bin.o\t:\t%.bin\n\n#---------------------------------------------------------------------------------\n\n#\t@echo $(notdir $<)\n\n#\t$(bin2o)\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "Source/DSPTool/CMakeLists.txt" : {
      "ObjectId" : "56fbee9e0145adb5a6958b974f4ba73b45f213dd",
      "LastModified" : "2019-04-13T16:13:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Source/UnitTests/CMakeLists.txt" : {
      "ObjectId" : "50167617a08bffb70e0998cd7b5da5fddce75f0c",
      "LastModified" : "2019-04-13T16:13:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Since this is a Core dependency, it can't be linked as a normal library.\n\n# Otherwise CMake inserts the library after core, but before other core\n\n# dependencies like videocommon which also use Host_ functions, which makes the\n\n# GNU linker complain.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Source/UnitTests/Common/CMakeLists.txt" : {
      "ObjectId" : "120fee6c3308be937b03c4dcd88937348029916b",
      "LastModified" : "2019-04-13T16:13:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Source/UnitTests/Core/CMakeLists.txt" : {
      "ObjectId" : "894310e1263d7b0fb33f7b7c0daab62c7e0d0dc6",
      "LastModified" : "2019-04-13T16:13:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Source/UnitTests/VideoCommon/CMakeLists.txt" : {
      "ObjectId" : "b5198536ed4b5c52627c9951d0f84793ffe3a9f2",
      "LastModified" : "2019-04-13T16:13:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 97,
    "CMAKESOURCE" : 2,
    "QMAKE" : 1,
    "MAKEFILE" : 3,
    "AUTOMAKE" : 4
  },
  "ElapsedTime" : 5477
}