{
  "Repository" : "1307466",
  "Revision" : "HEAD",
  "ObjectId" : "29b9265531a808c8e337c4c9ff0091888bbd89da",
  "CommitTime" : "2015-05-12T23:55:10Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "45d8554ce709ca7b9c49df3e5705477d6c25af4e",
      "LastModified" : "2015-01-30T22:16:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Top level Makefile for the OpenPilot project build system.\n\n# Copyright (c) 2010-2013, The OpenPilot Team, http://www.openpilot.org\n\n# Use 'make help' for instructions.\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful, but\n\n# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n\n# for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along\n\n# with this program; if not, write to the Free Software Foundation, Inc.,\n\n# 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This top level Makefile passes down some variables to sub-makes through\n\n# the environment. They are explicitly exported using the export keyword.\n\n# Lower level makefiles assume that these variables are defined. To ensure\n\n# that a special magic variable is exported here. It must be checked for\n\n# existance by each sub-make.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# It is possible to set OPENPILOT_DL_DIR and/or OPENPILOT_TOOLS_DIR environment\n\n# variables to override local tools download and installation directorys. So the\n\n# same toolchains can be used for all working copies. Particularly useful for CI\n\n# server build agents, but also for local installations.\n\n#\n\n# If no OPENPILOT_* variables found, makefile internal DL_DIR and TOOLS_DIR paths\n\n# will be used. They still can be overriden by the make command line parameters:\n\n# make DL_DIR=/path/to/download/directory TOOLS_DIR=/path/to/tools/directory targets...\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Function for converting Windows style slashes into Unix style\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Function for converting an absolute path to one relative\n\n# to the top of the source tree\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set up some macros for common directories within the tree\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set up default build configurations (debug | release)\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Clean out undesirable variables from the environment and command-line\n\n# to remove the chance that they will cause problems with our build\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# These specific variables can influence compilation in unexpected (and undesirable) ways\n\n# gcc flags\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# preprocessor flags\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# make flags\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# These specific variables used to be valid but now they make no sense\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Make sure this isn't being run as root unless installing (no whoami on Windows, but that is ok here)\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Decide on a verbosity level based on the V= parameter\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Make sure we know few things about the architecture before including\n\n# the tools.mk to ensure that we download/install the right tools.\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Here and everywhere if not Linux or Mac then assume Windows\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Include tools installers\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# We almost need to consider autoconf/automake instead of this\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "##############################\n\n#\n\n# All targets\n\n#\n\n##############################\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "##############################\n\n#\n\n# UAVObjects\n\n#\n\n##############################\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "##############################\n\n#\n\n# Flight related components\n\n#\n\n##############################\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Define some pointers to the various important pieces of the flight code\n\n# to prevent these being repeated in every sub makefile\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Define supported board lists\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Short names of each board (used to display board name in parallel builds)\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# SimPosix only builds on Linux so drop it from the list for\n\n# all other platforms.\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Start out assuming that we'll build fw, bl and bu for all boards\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# SimPosix doesn't have a BL, BU or EF target so we need to\n\n# filter them out to prevent errors on the all_flight target.\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Generate the targets for whatever boards are left in each list\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# When building any of the \"all_*\" targets, tell all sub makefiles to display\n\n# additional details on each line of output to describe which build and target\n\n# that each line applies to. The same applies also to all, opfw_resource,\n\n# package targets\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# When building more than one goal in a single make invocation, also\n\n# enable the extra context for each output line\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# TEMPLATES (used to generate build rules)\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# $(1) = Canonical board name all in lower case (e.g. coptercontrol)\n\n# $(2) = Short name for board (e.g cc)\n",
        "Line" : 268,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# $(1) = Canonical board name all in lower case (e.g. coptercontrol)\n\n# $(2) = Short name for board (e.g cc)\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# $(1) = Canonical board name all in lower case (e.g. coptercontrol)\n\n# $(2) = Short name for board (e.g cc)\n",
        "Line" : 335,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# $(1) = Canonical board name all in lower case (e.g. coptercontrol)\n\n# $(2) = Short name for board (e.g cc)\n",
        "Line" : 359,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# $(1) = Canonical board name all in lower case (e.g. coptercontrol)\n",
        "Line" : 384,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Generate flight build rules\n",
        "Line" : 399,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Expand the groups of targets for each board\n",
        "Line" : 420,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Expand the firmware rules\n",
        "Line" : 423,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Expand the bootloader rules\n",
        "Line" : 426,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Expand the bootloader updater rules\n",
        "Line" : 429,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Expand the entire-flash rules\n",
        "Line" : 432,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "##############################\n\n#\n\n# GCS related components\n\n#\n\n##############################\n",
        "Line" : 451,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Convenience target for the GCS\n",
        "Line" : 460,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "################################\n\n#\n\n# Serial Uploader tool\n\n#\n\n################################\n",
        "Line" : 498,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "################################\n\n#\n\n# Android GCS related components\n\n#\n\n################################\n",
        "Line" : 532,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Build the output directory for the Android GCS build\n",
        "Line" : 538,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Build the asset directory for the android assets\n",
        "Line" : 543,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# We want to take snapshots of the UAVOs at each point that they change\n\n# to allow the GCS to be compatible with as many versions as possible.\n\n# We always include a pseudo collection called \"srctree\" which represents\n\n# the UAVOs in the source tree. So not necessary to add current tree UAVO\n\n# hash here, it is always included.\n",
        "Line" : 575,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Find the git hashes of each commit that changes uavobjects with:\n\n#   git log --format=%h -- shared/uavobjectdefinition/ | head -n 2\n\n# List only UAVO hashes of past releases, do not list current hash.\n\n# Past compatible versions are so far: RELEASE-12.10.2\n",
        "Line" : 581,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# All versions includes also the current source tree UAVO hash\n",
        "Line" : 587,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# This is where the UAVO collections are stored\n",
        "Line" : 590,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# $(1) git hash of a UAVO snapshot\n",
        "Line" : 593,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# Make the output directory that will contain all of the synthetics for the\n\n# uavo collection referenced by the git hash $(1)\n",
        "Line" : 596,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# Extract the snapshot of shared/uavobjectdefinition from git hash $(1)\n",
        "Line" : 601,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# Extract the uavo xml files from our snapshot\n",
        "Line" : 607,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# Map the current working directory into the set of UAVO collections\n",
        "Line" : 615,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# $(1) git hash (or symbolic name) of a UAVO snapshot\n",
        "Line" : 623,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# This leaves us with a (broken) symlink that points to the full sha1sum of the collection\n",
        "Line" : 626,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# Compute the sha1 hash for this UAVO collection\n\n# The sed bit truncates the UAVO hash to 16 hex digits\n",
        "Line" : 628,
        "CharPositionInLine" : 8
      },
      "60" : {
        "Text" : "# Generate the java uavobjects for this UAVO collection\n",
        "Line" : 637,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# Build a jar file for this UAVO collection\n",
        "Line" : 646,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# One of these for each element of UAVO_GIT_VERSIONS so we can extract the UAVOs from git\n",
        "Line" : 669,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# One of these for each UAVO_ALL_VERSIONS which includes the ones in the srctree\n",
        "Line" : 672,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "##############################\n\n#\n\n# Unit Tests\n\n#\n\n##############################\n",
        "Line" : 686,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# Build the directory for the unit tests\n",
        "Line" : 694,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# $(1) = Unit test name\n",
        "Line" : 713,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# Expand the unittest rules\n",
        "Line" : 735,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# Disable parallel make when the all_ut_run target is requested otherwise the TAP\n\n# output is interleaved with the rest of the make output.\n",
        "Line" : 738,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "##############################\n\n#\n\n# Packaging components\n\n#\n\n##############################\n",
        "Line" : 745,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# Firmware files to package\n",
        "Line" : 751,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Rules to generate GCS resources used to embed firmware binaries into the GCS.\n\n# They are used later by the vehicle setup wizard to update board firmware.\n\n# To open a firmware image use \":/firmware/fw_coptercontrol.opfw\"\n",
        "Line" : 756,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# If opfw_resource or all firmware are requested, GCS should depend on the resource\n",
        "Line" : 777,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# Packaging targets: package\n\n#  - builds all firmware, opfw_resource, gcs\n\n#  - copies firmware into a package directory\n\n#  - calls paltform-specific packaging script\n",
        "Line" : 782,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# Define some variables\n",
        "Line" : 787,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# We can only package release builds\n",
        "Line" : 798,
        "CharPositionInLine" : 1
      },
      "76" : {
        "Text" : "##############################\n\n#\n\n# Source code formatting\n\n#\n\n##############################\n",
        "Line" : 802,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# $(1) = Uncrustify target (e.g flight or ground)\n\n# $(2) = Target root directory\n",
        "Line" : 810,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "##############################\n\n#\n\n# Doxygen documentation\n\n#\n\n# Each target should have own Doxyfile.$(target) with build directory build/docs/$(target),\n\n# proper source directory (e.g. $(target)) and appropriate other doxygen options.\n\n#\n\n##############################\n",
        "Line" : 825,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# $(1) = Doxygen target (e.g flight or ground)\n",
        "Line" : 836,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "##############################\n\n#\n\n# Build info\n\n#\n\n##############################\n",
        "Line" : 862,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "##############################\n\n#\n\n# Source for distribution\n\n#\n\n##############################\n",
        "Line" : 877,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "# Because to many deps to list\n",
        "Line" : 885,
        "CharPositionInLine" : 25
      },
      "83" : {
        "Text" : "##############################\n\n#\n\n# Help message, the default Makefile goal\n\n#\n\n##############################\n",
        "Line" : 900,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 84,
      "Errorlog" : "line 633:38 token recognition error at: '\\1'\n"
    },
    "flight/libraries/PyMite/platform/desktop/Makefile" : {
      "ObjectId" : "03fbc6b196b86d6ff621270e017497aeb6489d65",
      "LastModified" : "2013-04-25T10:13:36Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# PyMite Configuration\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Generate native code and module images from the python source\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "flight/libraries/rscode/Makefile" : {
      "ObjectId" : "daa12624f352386e92856aac5f56c8006b043b51",
      "LastModified" : "2013-04-25T10:13:36Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Cross Interleaved Reed Solomon encoder/decoder\n\n#\n\n# (c) Henry Minsky, Universal Access 1991-1996\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# OPTIMIZE_FLAGS = -O69\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "flight/targets/boards/coptercontrol/bootloader/Makefile" : {
      "ObjectId" : "7c575411b62924a19699031fab87d03696b93845",
      "LastModified" : "2013-05-19T13:03:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2009-2013, The OpenPilot Team, http://www.openpilot.org\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful, but\n\n# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n\n# for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along\n\n# with this program; if not, write to the Free Software Foundation, Inc.,\n\n# 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## The standard CMSIS startup\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "flight/targets/boards/coptercontrol/firmware/Makefile" : {
      "ObjectId" : "d58b57e64c59477d1893cb283e08753ce4d3d8b4",
      "LastModified" : "2015-02-19T01:19:28Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2009-2013, The OpenPilot Team, http://www.openpilot.org\n\n# Copyright (c) 2012, PhoenixPilot, http://github.com/PhoenixPilot\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful, but\n\n# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n\n# for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along\n\n# with this program; if not, write to the Free Software Foundation, Inc.,\n\n# 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ARM DSP library\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set to YES to build a FW version that will erase data flash memory\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set to yes to include Gcsreceiver module\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable Diag tasks ?\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# List of mandatory modules to include\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# List of optional modules to include\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#OPTMODULES += Altitude\n\n#OPTMODULES += Fault\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Include all camera options\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Erase flash firmware should be buildable from command line\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# List C source files here (C dependencies are automatically generated).\n\n# Use file-extension c for \"c-only\"-files\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## The standard CMSIS startup\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "## Application Core\n",
        "Line" : 75,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "## UAVObjects\n",
        "Line" : 87,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Command line option for Gcsreceiver module\n",
        "Line" : 129,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Enable Diag tasks and UAVOs needed\n",
        "Line" : 133,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "## Test Code\n",
        "Line" : 142,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 17
    },
    "flight/targets/boards/discoveryf4bare/bootloader/Makefile" : {
      "ObjectId" : "e046f6e80dd52aac6bf8284e2fd4f23ac7683e7a",
      "LastModified" : "2014-05-11T12:56:56Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2009-2013, The OpenPilot Team, http://www.openpilot.org\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful, but\n\n# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n\n# for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along\n\n# with this program; if not, write to the Free Software Foundation, Inc.,\n\n# 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "flight/targets/boards/discoveryf4bare/firmware/Makefile" : {
      "ObjectId" : "f0d0e483f468eb41f0b116679c741139ed51708e",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2009-2013, The OpenPilot Team, http://www.openpilot.org\n\n# Copyright (c) 2012, PhoenixPilot, http://github.com/PhoenixPilot\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful, but\n\n# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n\n# for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along\n\n# with this program; if not, write to the Free Software Foundation, Inc.,\n\n# 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA\n\n#####\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ARM DSP library\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# List of mandatory modules to include\n\n#MODULES += Sensors\n\n#MODULES += Attitude/revolution\n\n#MODULES += StateEstimation # use instead of Attitude\n\n#MODULES += Altitude/revolution\n\n#MODULES += Airspeed\n\n#MODULES += AltitudeHold\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#MODULES += Radio\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Include all camera options\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Some diagnostics\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Misc options\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# List C source files here (C dependencies are automatically generated).\n\n# Use file-extension c for \"c-only\"-files\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Application Core\n",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#ifeq ($(DEBUG), YES)\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "#endif\n",
        "Line" : 84,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "## Misc library functions\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "## UAVObjects\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "## Test Code\n",
        "Line" : 99,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Optional component libraries\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#include $(FLIGHTLIB)/PyMite/pymite.mk\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "flight/targets/boards/gpsplatinum/bootloader/Makefile" : {
      "ObjectId" : "7e03f6704ec46992db6506067643ecde286a93b6",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2009-2013, The OpenPilot Team, http://www.openpilot.org\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful, but\n\n# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n\n# for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along\n\n# with this program; if not, write to the Free Software Foundation, Inc.,\n\n# 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## The standard CMSIS startup\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "flight/targets/boards/gpsplatinum/firmware/Makefile" : {
      "ObjectId" : "9232432c54e9ac64782d45251bbb39c8de5f2da2",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2009-2013, The OpenPilot Team, http://www.openpilot.org\n\n# Copyright (c) 2012, PhoenixPilot, http://github.com/PhoenixPilot\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful, but\n\n# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n\n# for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along\n\n# with this program; if not, write to the Free Software Foundation, Inc.,\n\n# 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ARM DSP library\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set to YES to build a FW version that will erase data flash memory\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# List of mandatory modules to include\n\n#MODULES += FirmwareIAP\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Include all camera options\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# List C source files here (C dependencies are automatically generated).\n\n# Use file-extension c for \"c-only\"-files\n\n## The standard CMSIS startup\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Application Core\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## UAVObjects\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "flight/targets/boards/oplinkmini/bootloader/Makefile" : {
      "ObjectId" : "3991b5b94405e706cd9f34e03578011635a672b8",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2009-2013, The OpenPilot Team, http://www.openpilot.org\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful, but\n\n# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n\n# for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along\n\n# with this program; if not, write to the Free Software Foundation, Inc.,\n\n# 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## The standard CMSIS startup\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "flight/targets/boards/oplinkmini/firmware/Makefile" : {
      "ObjectId" : "7c77ae0d85e0d0161468dc677f514d5544521288",
      "LastModified" : "2015-02-19T01:19:28Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2009-2013, The OpenPilot Team, http://www.openpilot.org\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful, but\n\n# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n\n# for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along\n\n# with this program; if not, write to the Free Software Foundation, Inc.,\n\n# 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ARM DSP library\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# List of mandatory modules to include\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# List of optional modules to include\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# List C source files here (C dependencies are automatically generated).\n\n# Use file-extension c for \"c-only\"-files\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## The standard CMSIS startup\n",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "## Application Core\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "## Misc library functions\n",
        "Line" : 51,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "## UAVObjects\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "## Test Code\n",
        "Line" : 61,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Optional component libraries\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "flight/targets/boards/osd/bootloader/Makefile" : {
      "ObjectId" : "e046f6e80dd52aac6bf8284e2fd4f23ac7683e7a",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2009-2013, The OpenPilot Team, http://www.openpilot.org\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful, but\n\n# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n\n# for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along\n\n# with this program; if not, write to the Free Software Foundation, Inc.,\n\n# 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "flight/targets/boards/osd/firmware/Makefile" : {
      "ObjectId" : "76e5a48c71452b8f74358f41a5290cb45a498cc0",
      "LastModified" : "2015-02-23T03:40:55Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2009-2013, The OpenPilot Team, http://www.openpilot.org\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful, but\n\n# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n\n# for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along\n\n# with this program; if not, write to the Free Software Foundation, Inc.,\n\n# 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ARM DSP library\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# List of mandatory modules to include\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#MODULES += Extensions/MagBaro\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Some diagnostics\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Misc options\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# List C source files here (C dependencies are automatically generated).\n\n# Use file-extension c for \"c-only\"-files\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## Application Core\n",
        "Line" : 51,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "## OSD fonts\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#ifeq ($(DEBUG), YES)\n",
        "Line" : 67,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "#endif\n",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "## Misc library functions\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "## UAVObjects\n",
        "Line" : 76,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "## Test Code\n",
        "Line" : 106,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Optional component libraries\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "flight/targets/boards/revolution/bootloader/Makefile" : {
      "ObjectId" : "e046f6e80dd52aac6bf8284e2fd4f23ac7683e7a",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2009-2013, The OpenPilot Team, http://www.openpilot.org\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful, but\n\n# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n\n# for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along\n\n# with this program; if not, write to the Free Software Foundation, Inc.,\n\n# 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "flight/targets/boards/revolution/firmware/Makefile" : {
      "ObjectId" : "3f9eed363fd907b412f1fb2fad2c207d289d32b1",
      "LastModified" : "2015-02-23T03:40:55Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2009-2013, The OpenPilot Team, http://www.openpilot.org\n\n# Copyright (c) 2012, PhoenixPilot, http://github.com/PhoenixPilot\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful, but\n\n# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n\n# for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along\n\n# with this program; if not, write to the Free Software Foundation, Inc.,\n\n# 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA\n\n#####\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# REVO C++ support \n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ARM DSP library\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# List of mandatory modules to include\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Include all camera options\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Some diagnostics\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Misc options\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# List C source files here (C dependencies are automatically generated).\n\n# Use file-extension c for \"c-only\"-files\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Application Core\n",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#ifeq ($(DEBUG), YES)\n",
        "Line" : 82,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "#endif\n",
        "Line" : 85,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "## Misc library functions\n",
        "Line" : 87,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "## UAVObjects\n",
        "Line" : 97,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "## Test Code\n",
        "Line" : 101,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Optional component libraries\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#include $(FLIGHTLIB)/PyMite/pymite.mk\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "flight/targets/boards/revoproto/bootloader/Makefile" : {
      "ObjectId" : "e046f6e80dd52aac6bf8284e2fd4f23ac7683e7a",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2009-2013, The OpenPilot Team, http://www.openpilot.org\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful, but\n\n# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n\n# for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along\n\n# with this program; if not, write to the Free Software Foundation, Inc.,\n\n# 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "flight/targets/boards/revoproto/firmware/Makefile" : {
      "ObjectId" : "c040a0421ea0c110a06ccd846779c5b595b8b343",
      "LastModified" : "2015-02-23T03:40:55Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2009-2013, The OpenPilot Team, http://www.openpilot.org\n\n# Copyright (c) 2012, PhoenixPilot, http://github.com/PhoenixPilot\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful, but\n\n# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n\n# for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along\n\n# with this program; if not, write to the Free Software Foundation, Inc.,\n\n# 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA\n\n#####\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ARM DSP library\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# List of mandatory modules to include\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Include all camera options\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Some diagnostics\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Misc options\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# List C source files here (C dependencies are automatically generated).\n\n# Use file-extension c for \"c-only\"-files\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## Application Core\n",
        "Line" : 65,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#ifeq ($(DEBUG), YES)\n",
        "Line" : 76,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#endif\n",
        "Line" : 79,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "## Misc library functions\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "## UAVObjects\n",
        "Line" : 88,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "## Test Code\n",
        "Line" : 92,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Optional component libraries\n\n#include $(FLIGHTLIB)/PyMite/pymite.mk\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "flight/targets/boards/simposix/firmware/Makefile" : {
      "ObjectId" : "2417a5127fc6f8dd390af367ffe7f34661a25c37",
      "LastModified" : "2015-02-23T03:40:55Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#####\n\n#\n\n# TODO: This file should be reworked. It will be done as a part of sim target refactoring.\n\n#\n\n# The OpenPilot Team, http://www.openpilot.org, Copyright (C) 2009.\n\n#\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful, but\n\n# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n\n# for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along\n\n# with this program; if not, write to the Free Software Foundation, Inc.,\n\n# 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA\n\n#####\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set developer code and compile options\n\n# Set to YES for debugging\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# List of modules to include\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#MODULES += Sensors/simulated/Sensors\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#MODULES += AltitudeHold # now integrated in Stabilization\n\n#MODULES += OveroSync\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Paths\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# optional component libraries\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Used for yaffs testing\n",
        "Line" : 74,
        "CharPositionInLine" : 38
      },
      "8" : {
        "Text" : "# Only required for yaffs testing\n",
        "Line" : 75,
        "CharPositionInLine" : 52
      },
      "9" : {
        "Text" : "# Only required for yaffs testing\n",
        "Line" : 76,
        "CharPositionInLine" : 54
      },
      "10" : {
        "Text" : "#include $(FLIGHTLIB)/PyMite/pymite.mk\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# List C source files here. (C dependencies are automatically generated.)\n\n# use file-extension c for \"c-only\"-files\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## MODULES\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## OPENPILOT CORE:\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Used for yaffs testing\n",
        "Line" : 113,
        "CharPositionInLine" : 38
      },
      "15" : {
        "Text" : "## PIOS Hardware\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# List any extra directories to look for include files here.\n\n#    Each directory must be seperated by a space.\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Since we are simulating all this firmware the code needs to know what the BL would\n\n# normally contain\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# tracing\n\n# CFLAGS += -DPIOS_TRACE\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# common architecture-specific flags from the device-specific library makefile\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Or all of above:\n\n#CFLAGS += -DDIAG_ALL\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# This is not the best place for these.  Really should abstract out\n\n# to the board file or something\n\n#CFLAGS += -DSTM32F4XX\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Output format. (can be ihex or binary or both)\n\n#  binary to create a load-image in raw-binary format i.e. for SAM-BA,\n\n#  ihex to create a load-image in Intel hex format\n\n#LOADFORMAT = ihex\n\n#LOADFORMAT = binary\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Debugging format.\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Place project-specific -D (define) and/or\n\n# -U options for C here.\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Place project-specific -D and/or -U options for\n\n# Assembler with preprocessor here.\n\n#ADEFS = -DUSE_IRQ_ASM_WRAPPER\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Compiler flag to set the C Standard level.\n\n# c89   - \"ANSI\" C\n\n# gnu89 - c89 plus GCC extensions\n\n# c99   - ISO C99 standard (not yet fully implemented)\n\n# gnu99 - c99 plus GCC extensions\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#-----\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Compiler flags.\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#  -g*:          generate debugging information\n\n#  -O*:          optimization level\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\n\n#  -Wall...:     warning level\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\n\n#    -adhlns...: create assembler listing\n\n#\n\n# Flags for C and C++ (arm-elf-gcc/arm-elf-g++)\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#CFLAGS += -mcpu=$(MCU)\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#CFLAGS += -mapcs-frame\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#CFLAGS += -Werror\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Compiler flags to generate dependency files:\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# flags only for C\n\n#CONLYFLAGS += -Wnested-externs\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Assembler flags.\n\n#  -Wa,...:    tell GCC to pass this to the assembler.\n\n#  -ahlns:     create listing\n",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Linker flags.\n\n#  -Wl,...:     tell GCC to pass this to linker.\n\n#    -Map:      create map file\n\n#    --cref:    add cross reference to  map file\n\n#LDFLAGS = -nostartfiles -Wl,-Map=$(OUTDIR)/$(TARGET).map,--cref,--gc-sections\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#Linker scripts\n",
        "Line" : 279,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Define programs and commands.\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List of all source files.\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List of all source files without directory and file-extension.\n",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Define all object files.\n",
        "Line" : 291,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Define all listing files (used for make clean).\n",
        "Line" : 294,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Define all depedency-files (used for make clean).\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Default target.\n",
        "Line" : 299,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Link: create ELF output file from object files.\n",
        "Line" : 317,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Assemble: create object files from assembler source files.\n",
        "Line" : 320,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Assemble: create object files from assembler source files. ARM-only\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# Compile: create object files from C source files.\n",
        "Line" : 326,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Compile: create object files from C source files. ARM-only\n",
        "Line" : 329,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Compile: create object files from C++ source files.\n",
        "Line" : 332,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Compile: create object files from C++ source files. ARM-only\n",
        "Line" : 335,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# Compile: create assembler files from C source files. ARM/Thumb\n",
        "Line" : 338,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# Compile: create assembler files from C source files. ARM only\n",
        "Line" : 341,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# Add jtag targets (program and wipe)\n",
        "Line" : 350,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# Display sizes of sections.\n",
        "Line" : 362,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# Install: install binary file with prefix/suffix into install directory\n",
        "Line" : 365,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# Target: clean project.\n",
        "Line" : 375,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# Create output files directory\n\n# all known MS Windows OS define the ComSpec environment variable\n",
        "Line" : 395,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# Include the dependency files.\n",
        "Line" : 403,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "#create compile-time module auto-initialisation\n",
        "Line" : 410,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# Generate intermediate code\n",
        "Line" : 413,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Generate code for module initialization\n",
        "Line" : 416,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# Listing of phony targets.\n",
        "Line" : 429,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 64,
      "Errorlog" : "line 405:43 token recognition error at: '\\d'\n"
    },
    "flight/targets/common/bootloader_updater/Makefile" : {
      "ObjectId" : "8c312d6acaf7efef1258a790ddd754eef0898874",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2009-2013, The OpenPilot Team, http://www.openpilot.org\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful, but\n\n# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n\n# for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along\n\n# with this program; if not, write to the Free Software Foundation, Inc.,\n\n# 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ARM DSP library\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Paths\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# List C source files here (C dependencies are automatically generated).\n\n# Use file-extension c for \"c-only\"-files\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## PIOS Hardware\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## The standard CMSIS startup\n",
        "Line" : 47,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Set linker-script name depending on selected submodel name\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Set linker-script name depending on selected submodel name\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Using the _compat ld script ensure that the bootloader updated is compiled with irqstack in sram\n\n# This allow to be used with bootloader earlier than rel5\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# List any extra directories to look for include files here.\n\n#    Each directory must be seperated by a space.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Link: create ELF output file from object files.\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "flight/targets/common/entire_flash/Makefile" : {
      "ObjectId" : "12c525142391e442af616dc86582904ff8703627",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2009-2013, The OpenPilot Team, http://www.openpilot.org\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful, but\n\n# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n\n# for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along\n\n# with this program; if not, write to the Free Software Foundation, Inc.,\n\n# 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Paths\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "flight/tests/lednotification/Makefile" : {
      "ObjectId" : "d013f5b83a55254a4782dd19511add9fd85e2914",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\n\n# @file       Makefile\n\n# @author     PhoenixPilot, http://github.com/PhoenixPilot, Copyright (C) 2012\n\n#             Copyright (c) 2013, The OpenPilot Team, http://www.openpilot.org\n\n# @addtogroup \n\n# @{\n\n# @addtogroup \n\n# @{\n\n# @brief Makefile for unit test\n\n###############################################################################\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful, but\n\n# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n\n# for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along\n\n# with this program; if not, write to the Free Software Foundation, Inc.,\n\n# 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "flight/tests/logfs/Makefile" : {
      "ObjectId" : "050a7efa46e03beb06469e206d0c383d0aece97a",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\n\n# @file       Makefile\n\n# @author     PhoenixPilot, http://github.com/PhoenixPilot, Copyright (C) 2012\n\n#             Copyright (c) 2013, The OpenPilot Team, http://www.openpilot.org\n\n# @addtogroup \n\n# @{\n\n# @addtogroup \n\n# @{\n\n# @brief Makefile for unit test\n\n###############################################################################\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful, but\n\n# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n\n# for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along\n\n# with this program; if not, write to the Free Software Foundation, Inc.,\n\n# 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "flight/tests/math/Makefile" : {
      "ObjectId" : "cb97e89f9dca5e718f06433e023a8ed0428301c9",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\n\n# @file       Makefile\n\n# @author     PhoenixPilot, http://github.com/PhoenixPilot, Copyright (C) 2012\n\n#             Copyright (c) 2013, The OpenPilot Team, http://www.openpilot.org\n\n# @addtogroup \n\n# @{\n\n# @addtogroup \n\n# @{\n\n# @brief Makefile for unit test\n\n###############################################################################\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful, but\n\n# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n\n# for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along\n\n# with this program; if not, write to the Free Software Foundation, Inc.,\n\n# 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ground/ground.pro" : {
      "ObjectId" : "c3d463f5270b22643e2b5abb94c8798eb437565d",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#\n\n# Top level Qt-Creator project file for OpenPilot GCS\n\n# Copyright (c) 2009-2013, The OpenPilot Team, http://www.openpilot.org\n\n#\n\n# This meta-project allows qt-creator users to open and configure a\n\n# single project and build all required software to produce the GCS.\n\n# This includes regenerating all uavobject-synthetic files.\n\n#\n\n# NOTE: to use this meta-project you MUST perform these steps once\n\n# for each source tree checkout:\n\n# - Open <top>/ground/ground.pro in qt-creator\n\n# - Select the \"Projects\" tab\n\n# - Under Build Settings/General heading activate \"Shadow build\"\n\n# - Set \"Build directory\" below to <top>/build\n\n# Here <top> = the full path to the base of your git source tree which\n\n# should contain \"flight\", \"ground\", etc.\n\n#\n\n# NOTE: only debug qt-creator builds are supported on Windows.\n\n#       Release builds may fail because it seems that qt-creator does not\n\n#       define QTMINGW variable used to copy MinGW DLLs in release builds.\n\n#\n\n# There is a minor problem with dependencies. qmake needs synthetic\n\n# files when it generates GCS Makefiles. But we do not have\n\n# uavobjgenerator built yet. So we use the following trick: at make\n\n# stage in uavobject-synthetics we rerun qmake for openpilotgcs.pro\n\n# and regenerate GCS Makefiles using just built synthetic files.\n\n# It takes some extra time but solves the dependency problem.\n\n#\n\n# Please note that this meta-project is only intended to be used by\n\n# qt-creator users. Top level Makefile handles all dependencies itself\n\n# and does not use ground.pro.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# uavobjgenerator\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# uavobject-synthetics\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# openpilotgcs\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "ground/openpilotgcs/copydata.pro" : {
      "ObjectId" : "1961dc163d9bf00f4cc5efaf16c83e24a5e5c934",
      "LastModified" : "2015-02-23T03:40:55Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Copy Qt runtime libraries into the build directory (to run or package)\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# create Qt plugin directories\n",
        "Line" : 43,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# create QtQuick2 plugin directories\n",
        "Line" : 67,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Copy QtQuick2 complete directories\n\n# These directories have a lot of files\n\n# Easier to copy everything\n",
        "Line" : 80,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Remaining QtQuick plugin libs\n",
        "Line" : 89,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# set debug suffix if needed\n",
        "Line" : 121,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# copy Qt DLLs\n",
        "Line" : 124,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# it is more robust to take the following DLLs from Qt rather than from MinGW\n",
        "Line" : 148,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# create Qt plugin directories\n",
        "Line" : 156,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# copy Qt plugin DLLs\n",
        "Line" : 167,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# create QtQuick2 plugin directories\n",
        "Line" : 182,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# Copy QtQuick2 complete directories\n\n# These directories have a lot of files\n\n# Easier to copy everything\n",
        "Line" : 195,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# Remaining QtQuick plugin DLLs\n",
        "Line" : 204,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# copy OpenSSL DLLs\n",
        "Line" : 231,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# copy OpenGL DLL\n",
        "Line" : 239,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "#NOTE: debug dylib can be copied as they will be cleaned out with packaging scripts\n\n#standard plugins directory (will copy just dylib, plugins.qmltypes and qmldir\n",
        "Line" : 252,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "#those directories will be fully copied to dest\n",
        "Line" : 255,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "#create QtQuick dir (that will host all subdirs)\n",
        "Line" : 258,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "#data_copy.commands += -@$(MKDIR) $$targetPath(\\\"$$GCS_QT_QML_PATH/$$dir\\\") $$addNewline()\n",
        "Line" : 262,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 19
    },
    "ground/openpilotgcs/openpilotgcs.pri" : {
      "ObjectId" : "5a212a00b82a2fc5150e8cbcd77eb85390ed0db8",
      "LastModified" : "2015-02-23T21:56:20Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# For use in custom compilers which just copy files\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#ideally, we would want a qmake.conf patch, but this does the trick...\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find the tools directory,\n\n# try from Makefile (not run by Qt Creator),\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# check for custom enviroment variable,\n",
        "Line" : 82,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# fallback to default location.\n",
        "Line" : 84,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# FIXME\n",
        "Line" : 103,
        "CharPositionInLine" : 38
      },
      "6" : {
        "Text" : "# DEFINES += QT_NO_CAST_FROM_ASCII\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#DEFINES += QT_USE_FAST_OPERATOR_PLUS\n\n#DEFINES += QT_USE_FAST_CONCATENATION\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Bail out on non-selfcontained libraries. Just a security measure\n\n# to prevent checking in code that does not compile on other platforms.\n",
        "Line" : 168,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Fix ((packed)) pragma handling issue introduced when upgrading MinGW from 4.4 to 4.8\n\n# See http://gcc.gnu.org/bugzilla/show_bug.cgi?id=52991\n\n# The ((packet)) pragma is used in uav metadata struct and other places\n",
        "Line" : 174,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 10
    },
    "ground/openpilotgcs/openpilotgcs.pro" : {
      "ObjectId" : "aaf5edf05a822c480035e86cfa31c07cdfb5141e",
      "LastModified" : "2015-02-23T03:40:55Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#\n\n# Qmake project for the OpenPilot GCS.\n\n# Copyright (c) 2009-2013, The OpenPilot Team, http://www.openpilot.org\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# check Qt version\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This ensures that code is compiled with the /usr/bin version of gcc instead\n\n# of the gcc in XCode.app/Context/Development\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "ground/openpilotgcs/share/openpilotgcs/translations/translations.pro" : {
      "ObjectId" : "e428c3712e08259fd78375f63ced2fb265e0855b",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Commented languages with outdated translations\n\n# Allow removing the 'C' language in default config files at first start.\n\n# Need to be uncommented for update in all languages files (make ts)\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# de es ru\n",
        "Line" : 6,
        "CharPositionInLine" : 21
      },
      "2" : {
        "Text" : "# var, prepend, append\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#========= begin block copying qt_*.qm files ==========\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#========= end block copying qt_*.qm files ============\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "ground/openpilotgcs/share/share.pro" : {
      "ObjectId" : "7a4fe575a629b74cdbf65b837e2c849094de0263",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Qt make macros (CHK_DIR_EXISTS, COPY_DIR, etc) have different syntax. They cannot be used\n\n# reliably to copy subdirectories in two different Windows environments (bash and cmd/QtCreator).\n\n# So undocumented QMAKE_SH variable is used to find out the real environment.\n",
        "Line" : 11,
        "CharPositionInLine" : 12
      },
      "1" : {
        "Text" : "# sh environment (including Windows bash)\n",
        "Line" : 15,
        "CharPositionInLine" : 16
      },
      "2" : {
        "Text" : "# native Windows cmd environment\n",
        "Line" : 19,
        "CharPositionInLine" : 16
      },
      "CommentCount" : 3
    },
    "ground/openpilotgcs/src/app/app.pro" : {
      "ObjectId" : "d7b33ccaee2c22aafbfcfcb6f0c7a4c0a63fdfde",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/experimental/HIDTest/HIDTest.pro" : {
      "ObjectId" : "94dbe389944fc2af26d2476e82a666bebc6f2ece",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2010-07-24T11:26:38\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ground/openpilotgcs/src/experimental/PowerLog6S/HIDTest.pro" : {
      "ObjectId" : "94dbe389944fc2af26d2476e82a666bebc6f2ece",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2010-07-24T11:26:38\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ground/openpilotgcs/src/experimental/SerialLogger/SerialLogger.pro" : {
      "ObjectId" : "2732664a2bb94e494b301ebc385e7b19eebc4f35",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2010-08-25T23:31:09\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# event driven device enumeration on windows requires the gui module\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# needed for mingw to pull in appropriate dbt business...probably a better way to do this\n",
        "Line" : 36,
        "CharPositionInLine" : 36
      },
      "CommentCount" : 3
    },
    "ground/openpilotgcs/src/experimental/USB_UPLOAD_TOOL/SSP/ssp_test.pro" : {
      "ObjectId" : "e0fdc09e061282094f032550dffb39975c207439",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2010-07-24T11:26:38\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# needed for mingw to pull in appropriate dbt business...probably a better way to do this\n",
        "Line" : 40,
        "CharPositionInLine" : 36
      },
      "CommentCount" : 2
    },
    "ground/openpilotgcs/src/experimental/USB_UPLOAD_TOOL/upload.pro" : {
      "ObjectId" : "00f69b76736d60682e454ae4988af9bcb856bc75",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2010-07-24T11:26:38\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# win32 {\n\n#    SOURCES += ../../plugins/rawhid/pjrc_rawhid_win.cpp\n\n#\n\n#    LIBS += -lhid \\\n#        -lsetupapi\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#}\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#macx {\n\n#    SOURCES += ../../plugins/rawhid/pjrc_rawhid_mac.cpp\n\n#    SDK = /Developer/SDKs/MacOSX10.5.sdk\n\n#    ARCH = -mmacosx-version-min=10.5 \\\n#        -arch \\\n#        ppc \\\n#        -arch \\\n#        i386\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#    LIBS += $(ARCH) \\\n#        -Wl,-syslibroot,$(SDK) \\\n#        -framework \\\n#        IOKit \\\n#        -framework \\\n#        CoreFoundation\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#}\n\n#linux-g++ {\n\n#    SOURCES += ../../plugins/rawhid/pjrc_rawhid_unix.cpp\n\n#    LIBS += -lusb\n\n#}\n\n#linux-g++-64 {\n\n#    SOURCES += ../../plugins/rawhid/pjrc_rawhid_unix.cpp\n\n#    LIBS += -lusb\n\n#}\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#unix:SOURCES           += ../../libs/qextserialport/src/posix_qextserialport.cpp\n\n#unix:!macx:SOURCES     += ../../libs/qextserialport/src/qextserialenumerator_unix.cpp\n\n#macx {\n\n#  SOURCES          += ../../libs/qextserialport/src/qextserialenumerator_osx.cpp\n\n#  LIBS             += -framework IOKit -framework CoreFoundation\n\n#}\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#win32 {\n\n#  SOURCES          += ../../libs/qextserialport/src/win_qextserialport.cpp \\\n#../../libs/qextserialport/src/qextserialenumerator_win.cpp\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#  DEFINES          += WINVER=0x0501 # needed for mingw to pull in appropriate dbt business...probably a better way to do this\n\n#  LIBS             += -lsetupapi\n\n#}\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "ground/openpilotgcs/src/experimental/finaltest/finaltest.pro" : {
      "ObjectId" : "62097fc4560fb1cbcfb87fa7401aba850e2a3da3",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2010-06-11T10:37:33\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ground/openpilotgcs/src/experimental/tools/DocumentationHelper/DocumentationHelper.pro" : {
      "ObjectId" : "0b98445aaf538dedd344b87bf9e6383d6342b55f",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2010-05-30T17:21:05\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ground/openpilotgcs/src/libs/aggregation/aggregation.pri" : {
      "ObjectId" : "fc6ddc81f54751e20c0a3567e7c9e6aee04362cf",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/aggregation/aggregation.pro" : {
      "ObjectId" : "a542b181be9b6f55d1a119691bd4158d48362113",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/aggregation/examples/examples.pro" : {
      "ObjectId" : "7389255366d8a4086efdca0eeebad6a3314c00c8",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/aggregation/examples/text/text.pro" : {
      "ObjectId" : "3893c5e95f63a9d9d4f6b1fb048061e73180386e",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/CMakeLists.txt" : {
      "ObjectId" : "ad0269ea657ff2dc9cacf00288fa178fc73c30af",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# guard against in-source builds\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# guard against bad build-type strings\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#############################################################################\n\n# retrieve version infomation                                               #\n\n#############################################################################\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# automatically parse the version number\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# if the mercurial program is absent, this will leave the EIGEN_HG_CHANGESET string empty,\n\n# but won't stop CMake.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# if this is the default (aka development) branch, extract the mercurial changeset number from the hg tip output...\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#...and show it next to the version number\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#############################################################################\n\n# find how to link to the standard libraries                                #\n\n#############################################################################\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# We assume that other compilers are partly compatible with GNUCC\n",
        "Line" : 119,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# clang outputs some warnings for unknwon flags that are not caught by check_cxx_compiler_flag\n\n# adding -Werror turns such warnings into errors\n",
        "Line" : 125,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#ei_add_cxx_compiler_flag(\"-Weverything\")              # clang\n",
        "Line" : 135,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# disable ICC's \"operands are evaluated in unspecified order\" remark\n\n# disbale ICC's \"warning #2304: non-explicit constructor with single argument may cause implicit type conversion\" produced by -Wnon-virtual-dtor\n",
        "Line" : 153,
        "CharPositionInLine" : 56
      },
      "12" : {
        "Text" : "# The -ansi flag must be added last, otherwise it is also used as a linker flag by check_cxx_compiler_flag making it fails\n\n# Moreover we should not set both -strict-ansi and -ansi\n",
        "Line" : 156,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# disable clang warning: argument unused during compilation: '-ansi'\n",
        "Line" : 159,
        "CharPositionInLine" : 56
      },
      "14" : {
        "Text" : "# C4127 - conditional expression is constant\n\n# C4714 - marked as __forceinline not inlined (I failed to deactivate it selectively)\n\n#         We can disable this warning in the unit tests since it is clear that it occurs\n\n#         because we are oftentimes returning objects that have a destructor or may\n\n#         throw exceptions - in particular in the unit tests we are throwing extra many\n\n#         exceptions to cover indexing errors.\n\n# C4505 - unreferenced local function has been removed (impossible to deactive selectively)\n",
        "Line" : 222,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# replace all /Wx by /W4\n",
        "Line" : 231,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# arch is not supported on 64 bit systems, SSE is enabled automatically.\n",
        "Line" : 246,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# the user modifiable install path for header files\n",
        "Line" : 291,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# set the internal install path for header files which depends on wether the user modifiable\n\n# EIGEN_INCLUDE_INSTALL_DIR has been set by the user or not.\n",
        "Line" : 294,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# similar to set_target_properties but append the property instead of overwriting it\n",
        "Line" : 310,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# if the property wasn't previously set, ${previous} is now \"previous-NOTFOUND\" which cmake allows catching with plain if()\n",
        "Line" : 314,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# fixme, not sure this line is still needed:\n",
        "Line" : 351,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# must be called from the root CMakeLists, see man page\n",
        "Line" : 352,
        "CharPositionInLine" : 17
      },
      "23" : {
        "Text" : "# can't do EXCLUDE_FROM_ALL here, breaks CTest\n",
        "Line" : 356,
        "CharPositionInLine" : 25
      },
      "24" : {
        "Text" : "# must be after test and unsupported, for configuring buildtests.in\n",
        "Line" : 373,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# TODO: consider also replacing EIGEN_BUILD_BTL by a custom target \"make btl\"?\n",
        "Line" : 376,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 26
    },
    "ground/openpilotgcs/src/libs/eigen/CTestConfig.cmake" : {
      "ObjectId" : "4c0027824f7bd13e067dad73b75f89869c814abb",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## This file should be placed in the root directory of your project.\n\n## Then modify the CMakeLists.txt file in the root directory of your\n\n## project to incorporate the testing dashboard.\n\n## # The following are required to uses Dart and the Cdash dashboard\n\n##   ENABLE_TESTING()\n\n##   INCLUDE(CTest)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ground/openpilotgcs/src/libs/eigen/Eigen/CMakeLists.txt" : {
      "ObjectId" : "a92dd6f6cafd2206f8be1a50f1294e2ae49feb5a",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/Eigen/src/CMakeLists.txt" : {
      "ObjectId" : "c326f374d9ee89c953dd9caefbfaffccb905511c",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/Eigen/src/Cholesky/CMakeLists.txt" : {
      "ObjectId" : "d01488b41a826850277a918f555e3668167dd367",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/Eigen/src/CholmodSupport/CMakeLists.txt" : {
      "ObjectId" : "814dfa61313847c0f33538e11c4ac4557ec3e32e",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/Eigen/src/Core/CMakeLists.txt" : {
      "ObjectId" : "2346fc2bbca4d9bd699efc4c366afd7abd400e3c",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/Eigen/src/Core/arch/AltiVec/CMakeLists.txt" : {
      "ObjectId" : "9f8d2e9c46765f4253d6877d040e5c2a90612086",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/Eigen/src/Core/arch/CMakeLists.txt" : {
      "ObjectId" : "8456dec1581554a4f7798ebe7d9d292369f21607",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/Eigen/src/Core/arch/Default/CMakeLists.txt" : {
      "ObjectId" : "339c091d156100d46f3acbc67ad205749d8f4b3d",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/Eigen/src/Core/arch/NEON/CMakeLists.txt" : {
      "ObjectId" : "fd4d4af50cb46dac7e6b29ef8654e70528e1f3ca",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/Eigen/src/Core/arch/SSE/CMakeLists.txt" : {
      "ObjectId" : "46ea7cc623c62394c78425b15e100b84126b40a7",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/Eigen/src/Core/products/CMakeLists.txt" : {
      "ObjectId" : "21fc94ae38a5574289ae4e304ce087f3ed6897f0",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/Eigen/src/Core/util/CMakeLists.txt" : {
      "ObjectId" : "a1e2e521fc11124c92768621c4edf784bc10f51f",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/Eigen/src/Eigen2Support/CMakeLists.txt" : {
      "ObjectId" : "7ae41b3cbe9c568f7efdaf45cd1a1ef874bf309b",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/Eigen/src/Eigen2Support/Geometry/CMakeLists.txt" : {
      "ObjectId" : "c347a8f26228694dc67e0e89ff6d509152dac738",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/Eigen/src/Eigenvalues/CMakeLists.txt" : {
      "ObjectId" : "193e0268599516e2515318ed04eb6dda37b2dd59",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/Eigen/src/Geometry/CMakeLists.txt" : {
      "ObjectId" : "f8f728b84faf0e08d91fac04e2986260368b9063",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/Eigen/src/Geometry/arch/CMakeLists.txt" : {
      "ObjectId" : "1267a79c78767c43d11c529cc84468cbdd1052a2",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/Eigen/src/Householder/CMakeLists.txt" : {
      "ObjectId" : "ce4937db061bbadb0357ccc45547b141761a70e3",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/Eigen/src/IterativeLinearSolvers/CMakeLists.txt" : {
      "ObjectId" : "59ccc0072cc4ed78e6aa783bfab2486aac757fca",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/Eigen/src/Jacobi/CMakeLists.txt" : {
      "ObjectId" : "490dac626439ade5e05baaba504689366db22e6d",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/Eigen/src/LU/CMakeLists.txt" : {
      "ObjectId" : "e0d8d78c1720abb27432f41aa2ace29ef3f3794f",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/Eigen/src/LU/arch/CMakeLists.txt" : {
      "ObjectId" : "f6b7ed9ecc3a25e3885c7fece60428481e51c696",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/Eigen/src/MetisSupport/CMakeLists.txt" : {
      "ObjectId" : "2bad314163c5044265aa6ac14e3767308dd04ba6",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/Eigen/src/OrderingMethods/CMakeLists.txt" : {
      "ObjectId" : "9f4bb275808257ac71d6c04d9c602ce5c0b5be8d",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/Eigen/src/PaStiXSupport/CMakeLists.txt" : {
      "ObjectId" : "28c657e9bcf7d3e0ecc800f6d5a11d54020b58cc",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/Eigen/src/PardisoSupport/CMakeLists.txt" : {
      "ObjectId" : "a097ab401920ea1b7068f790edcfcf9086b3038b",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/Eigen/src/QR/CMakeLists.txt" : {
      "ObjectId" : "96f43d7f5b30fa024b9bd2d9e3a5dacb9d401ecb",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/Eigen/src/SPQRSupport/CMakeLists.txt" : {
      "ObjectId" : "4968beaf2c59bcec07fe1861b5d72cb4d6723a6d",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/Eigen/src/SVD/CMakeLists.txt" : {
      "ObjectId" : "55efc44b12970d5ec715393cb68cd061203ce941",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/Eigen/src/SparseCholesky/CMakeLists.txt" : {
      "ObjectId" : "375a59d7a577877313a1ff2a6bf1c8fac138768b",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/Eigen/src/SparseCore/CMakeLists.txt" : {
      "ObjectId" : "d860452a65cb20850a12a120ab1fd3e3fd83dccc",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/Eigen/src/SparseLU/CMakeLists.txt" : {
      "ObjectId" : "69729ee8961aa7d4ef514e9f890de0d29f12161f",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/Eigen/src/SparseQR/CMakeLists.txt" : {
      "ObjectId" : "f9ddf2bdb75878292267c18697d9dedbd69a6611",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/Eigen/src/StlSupport/CMakeLists.txt" : {
      "ObjectId" : "0f094f637acd51b0931e58a199c30f550beaa282",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/Eigen/src/SuperLUSupport/CMakeLists.txt" : {
      "ObjectId" : "b28ebe5839cf5c664abdb44c186547507ce688d3",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/Eigen/src/UmfPackSupport/CMakeLists.txt" : {
      "ObjectId" : "a57de00209d3bc746b050d1b8aa736bccc66f2bc",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/Eigen/src/misc/CMakeLists.txt" : {
      "ObjectId" : "a58ffb7457e06a7a69426a21a9d46d07a6a8ee91",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/Eigen/src/plugins/CMakeLists.txt" : {
      "ObjectId" : "1a1d3ffbd724d17e161c40c48ac56c8b1aeb2e1f",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/bench/btl/CMakeLists.txt" : {
      "ObjectId" : "119b470d9342aa9e78e3590fe1f29ae4fd51f3ad",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#   SET(CMAKE_Fortran_FLAGS \"-g0 -O3 -DNDEBUG\")\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# find_package(MKL)\n\n# if (MKL_FOUND)\n\n#   add_definitions(-DHAVE_MKL)\n\n#   set(DEFAULT_LIBRARIES ${MKL_LIBRARIES})\n\n# endif (MKL_FOUND)\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "ground/openpilotgcs/src/libs/eigen/bench/btl/cmake/FindACML.cmake" : {
      "ObjectId" : "f45ae1b0de58ce095c47ada25c6b11f7c2e09916",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/bench/btl/cmake/FindATLAS.cmake" : {
      "ObjectId" : "6b906520664472741c142dbd5cb55469b6bd88c5",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# search the default lapack lib link to it\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "ground/openpilotgcs/src/libs/eigen/bench/btl/cmake/FindBlitz.cmake" : {
      "ObjectId" : "92880bbed7cc687dee65ba2419e236e383c26479",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find blitz lib\n\n# Once done this will define\n\n#\n\n#  BLITZ_FOUND - system has blitz lib\n\n#  BLITZ_INCLUDES - the blitz include directory\n\n#  BLITZ_LIBRARIES - The libraries needed to use blitz\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2007, Allen Winter, <winter@kde.org>\n\n# Copyright (C) 2008 Gael Guennebaud <gael.guennebaud@inria.fr>\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# include(FindLibraryWithDebug)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "ground/openpilotgcs/src/libs/eigen/bench/btl/cmake/FindCBLAS.cmake" : {
      "ObjectId" : "554f0291b4130ff86b71cf9555e415e09fec9708",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# include(FindLibraryWithDebug)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ground/openpilotgcs/src/libs/eigen/bench/btl/cmake/FindGMM.cmake" : {
      "ObjectId" : "5049c64edcea43027c7875c9efa328a849cdb53f",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# in cache already\n",
        "Line" : 2,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "ground/openpilotgcs/src/libs/eigen/bench/btl/cmake/FindGOTO.cmake" : {
      "ObjectId" : "67ea0934a52c80701c9c3c1a67fde1c0ab5846ae",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/bench/btl/cmake/FindGOTO2.cmake" : {
      "ObjectId" : "baa68d2136028e4f7f58882a703d0f74616c9de3",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# find_path(GOTO_INCLUDES\n\n#   NAMES\n\n#   cblas.h\n\n#   PATHS\n\n#   $ENV{GOTODIR}/include\n\n#   ${INCLUDE_INSTALL_DIR}\n\n# )\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ground/openpilotgcs/src/libs/eigen/bench/btl/cmake/FindMKL.cmake" : {
      "ObjectId" : "f4d7c6ebe7dd629d20b7579ee6efa4dad989edcf",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/bench/btl/cmake/FindMTL4.cmake" : {
      "ObjectId" : "3de4909802be09039c847931d323a81b8998fa50",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find eigen2 headers\n\n# Once done this will define\n\n#\n\n#  MTL4_FOUND - system has eigen2 lib\n\n#  MTL4_INCLUDE_DIR - the eigen2 include directory\n\n#\n\n# Copyright (C) 2008 Gael Guennebaud <gael.guennebaud@inria.fr>\n\n# Adapted from FindEigen.cmake:\n\n# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "ground/openpilotgcs/src/libs/eigen/bench/btl/cmake/FindPackageHandleStandardArgs.cmake" : {
      "ObjectId" : "7f122edcddd304b99fc1fd67ab1ca023a46edcb2",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIND_PACKAGE_HANDLE_STANDARD_ARGS(NAME (DEFAULT_MSG|\"Custom failure message\") VAR1 ... )\n\n#\n\n# This macro is intended to be used in FindXXX.cmake modules files.\n\n# It handles the REQUIRED and QUIET argument to FIND_PACKAGE() and\n\n# it also sets the <UPPERCASED_NAME>_FOUND variable.\n\n# The package is found if all variables listed are TRUE.\n\n# Example:\n\n#\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(LibXml2 DEFAULT_MSG LIBXML2_LIBRARIES LIBXML2_INCLUDE_DIR)\n\n#\n\n# LibXml2 is considered to be found, if both LIBXML2_LIBRARIES and \n\n# LIBXML2_INCLUDE_DIR are valid. Then also LIBXML2_FOUND is set to TRUE.\n\n# If it is not found and REQUIRED was used, it fails with FATAL_ERROR, \n\n# independent whether QUIET was used or not.\n\n#\n\n# If it is found, the location is reported using the VAR1 argument, so \n\n# here a message \"Found LibXml2: /usr/lib/libxml2.so\" will be printed out.\n\n# If the second argument is DEFAULT_MSG, the message in the failure case will \n\n# be \"Could NOT find LibXml2\", if you don't like this message you can specify\n\n# your own custom failure message there.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ground/openpilotgcs/src/libs/eigen/bench/btl/cmake/FindTvmet.cmake" : {
      "ObjectId" : "26a29d965d125b34b1fff2c6bbfc2b5bf52e42df",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find tvmet headers\n\n# Once done this will define\n\n#\n\n#  TVMET_FOUND - system has tvmet lib\n\n#  TVMET_INCLUDE_DIR - the tvmet include directory\n\n#\n\n# Copyright (C) 2008 Gael Guennebaud <gael.guennebaud@inria.fr>\n\n# Adapted from FindEigen.cmake:\n\n# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "ground/openpilotgcs/src/libs/eigen/bench/btl/cmake/MacroOptionalAddSubdirectory.cmake" : {
      "ObjectId" : "545048b684371ec6b8bdab3aaee2415b15b321a0",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - MACRO_OPTIONAL_ADD_SUBDIRECTORY() combines ADD_SUBDIRECTORY() with an OPTION()\n\n# MACRO_OPTIONAL_ADD_SUBDIRECTORY( <dir> )\n\n# If you use MACRO_OPTIONAL_ADD_SUBDIRECTORY() instead of ADD_SUBDIRECTORY(),\n\n# this will have two effects\n\n# 1 - CMake will not complain if the directory doesn't exist\n\n#     This makes sense if you want to distribute just one of the subdirs\n\n#     in a source package, e.g. just one of the subdirs in kdeextragear.\n\n# 2 - If the directory exists, it will offer an option to skip the \n\n#     subdirectory.\n\n#     This is useful if you want to compile only a subset of all\n\n#     directories.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2007, Alexander Neundorf, <neundorf@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "ground/openpilotgcs/src/libs/eigen/bench/btl/data/CMakeLists.txt" : {
      "ObjectId" : "6af2a366f77ac4923d84584f1e7e4d7a834123bc",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/bench/btl/libs/BLAS/CMakeLists.txt" : {
      "ObjectId" : "de42fe047cafc469f7d807fc0f2637db9555358d",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# we are inside Eigen and blas/lapack interface is compilable\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "ground/openpilotgcs/src/libs/eigen/bench/btl/libs/STL/CMakeLists.txt" : {
      "ObjectId" : "4cfc2dcf298fbd1baba1fb0202f3b9d48bae2bd1",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/bench/btl/libs/blitz/CMakeLists.txt" : {
      "ObjectId" : "880ab7338564d89aaa919e7af064faf06b27e44e",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/bench/btl/libs/eigen2/CMakeLists.txt" : {
      "ObjectId" : "a2e8fc6da0948e1207d634ee9aca120aa8fc1352",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# EIGEN2_FOUND\n",
        "Line" : 19,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 1
    },
    "ground/openpilotgcs/src/libs/eigen/bench/btl/libs/eigen3/CMakeLists.txt" : {
      "ObjectId" : "00cae23d3a74f3cfe14b2ecf8335145aa185a419",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# unless EIGEN3_INCLUDE_DIR is defined, let's use current Eigen version\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#     if(BUILD_btl_eigen3_adv)\n\n#       target_link_libraries(btl_eigen3_adv ${MKL_LIBRARIES})\n\n#     endif(BUILD_btl_eigen3_adv)\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "ground/openpilotgcs/src/libs/eigen/bench/btl/libs/gmm/CMakeLists.txt" : {
      "ObjectId" : "bc2586243092771e0b1f9919c6a093f522b8d685",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/bench/btl/libs/mtl4/CMakeLists.txt" : {
      "ObjectId" : "14b47a808c990500baadcef95268a8636b2e3bd1",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/bench/btl/libs/tvmet/CMakeLists.txt" : {
      "ObjectId" : "25b565b972360f99d49dc7560bd7989ba1f24682",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/bench/btl/libs/ublas/CMakeLists.txt" : {
      "ObjectId" : "bdb58bea1ba0c7aedec5b82f1c6b8f2c2c443c89",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/bench/spbench/CMakeLists.txt" : {
      "ObjectId" : "6e0e1b1039a5980bd13d829ae11491cb6a1520d0",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find_library(PARDISO_LIBRARIES pardiso412-GNU450-X86-64)\n\n# if(PARDISO_LIBRARIES)\n\n#   add_definitions(\"-DEIGEN_PARDISO_SUPPORT\")\n\n#   set(SPARSE_LIBS ${SPARSE_LIBS} ${PARDISO_LIBRARIES})\n\n# endif(PARDISO_LIBRARIES)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ground/openpilotgcs/src/libs/eigen/blas/CMakeLists.txt" : {
      "ObjectId" : "c35a2fdbe720e838b1013cdcf0a3a19aee9f8853",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# can't do EXCLUDE_FROM_ALL here, breaks CTest\n",
        "Line" : 51,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 1
    },
    "ground/openpilotgcs/src/libs/eigen/blas/testing/CMakeLists.txt" : {
      "ObjectId" : "3ab8026ea3e4dd051697be9303e3ad5a5576d72a",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add_custom_target(level1)\n\n# add_dependencies(level1 sblat1)\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ground/openpilotgcs/src/libs/eigen/cmake/EigenConfigureTesting.cmake" : {
      "ObjectId" : "228d29e979500e9a794a4bf25d873ad1f3c6557c",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# configure the \"site\" and \"buildname\" \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# retrieve and store the build string\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# check whether /bin/bash exists\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# CMake/Ctest does not allow us to change the build command,\n\n# so we have to workaround by directly editing the generated DartConfiguration.tcl file\n\n# save CMAKE_MAKE_PROGRAM\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# and set a fake one\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# This call activates testing and generates the DartConfiguration.tcl\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# overwrite default DartConfiguration.tcl\n\n# The worarounds are different for each version of the MSVC IDE\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# devenv\n",
        "Line" : 32,
        "CharPositionInLine" : 47
      },
      "8" : {
        "Text" : "# msbuild\n",
        "Line" : 34,
        "CharPositionInLine" : 9
      },
      "9" : {
        "Text" : "# for make and nmake\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# copy ctest properties, which currently\n\n# o raise the warning levels\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# restore default CMAKE_MAKE_PROGRAM\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# un-set temporary variables so that it is like they never existed. \n\n# CMake 2.6.3 introduces the more logical unset() syntax for this.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# some documentation of this function would be nice\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# configure Eigen related testing options\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "ground/openpilotgcs/src/libs/eigen/cmake/EigenDetermineOSVersion.cmake" : {
      "ObjectId" : "3c48d4c3740b549da322258024368b9fee1466f1",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The utility function DetermineOSVersion aims at providing an\n\n# improved version of the CMake variable ${CMAKE_SYSTEM} on Windows\n\n# machines.\n\n#\n\n# Usage:\n\n#  include(EigenDetermineOSVersion)\n\n#  DetermineOSVersion(OS_VERSION)\n\n#  message(\"OS: ${OS_VERSION}\")\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - A little helper variable which should not be directly called\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "ground/openpilotgcs/src/libs/eigen/cmake/EigenDetermineVSServicePack.cmake" : {
      "ObjectId" : "8e5546a851f2fbd23ee614fd390d7fd66bc7a8ac",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The code is almost identical to the CMake version. The only difference is that we remove\n\n# _DetermineVSServicePack_FastCheckVersionWithCompiler which lead to errors on some systems.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Call helper function to determine VS version\n",
        "Line" : 18,
        "CharPositionInLine" : 16
      },
      "CommentCount" : 2
    },
    "ground/openpilotgcs/src/libs/eigen/cmake/EigenTesting.cmake" : {
      "ObjectId" : "d9e22ab1a60ed14d2890f72f122d02f7c25fa6d3",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#internal. See documentation of ei_add_test for details.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# let the user pass flags.\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# it could be that some cmake module provides a bad library string \" \"  (just spaces),\n\n# and that severely breaks target_link_libraries (\"can't link to -l-lstdc++\" errors).\n\n# so we check for strings containing only spaces.\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# notice: no double quotes around ${libs_to_link} here. It may be a list.\n",
        "Line" : 66,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# Specify target and test labels accoirding to EIGEN_CURRENT_SUBPROJECT\n",
        "Line" : 77,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Macro to add a test\n\n#\n\n# the unique mandatory parameter testname must correspond to a file\n\n# <testname>.cpp which follows this pattern:\n\n#\n\n# #include \"main.h\"\n\n# void test_<testname>() { ... }\n\n#\n\n# Depending on the contents of that file, this macro can have 2 behaviors,\n\n# see below.\n\n#\n\n# The optional 2nd parameter is libraries to link to.\n\n#\n\n# A. Default behavior\n\n#\n\n# this macro adds an executable <testname> as well as a ctest test\n\n# named <testname> too.\n\n#\n\n# On platforms with bash simply run:\n\n#   \"ctest -V\" or \"ctest -V -R <testname>\"\n\n# On other platform use ctest as usual\n\n#\n\n# B. Multi-part behavior\n\n#\n\n# If the source file matches the regexp\n\n#    CALL_SUBTEST_[0-9]+|EIGEN_TEST_PART_[0-9]+\n\n# then it is interpreted as a multi-part test. The behavior then depends on the\n\n# CMake option EIGEN_SPLIT_LARGE_TESTS, which is ON by default.\n\n#\n\n# If EIGEN_SPLIT_LARGE_TESTS is OFF, the behavior is the same as in A (the multi-part\n\n# aspect is ignored).\n\n#\n\n# If EIGEN_SPLIT_LARGE_TESTS is ON, the test is split into multiple executables\n\n#   test_<testname>_<N>\n\n# where N runs from 1 to the greatest occurence found in the source file. Each of these\n\n# executables is built passing -DEIGEN_TEST_PART_N. This allows to split large tests\n\n# into smaller executables.\n\n#\n\n# Moreover, targets <testname> are still generated, they\n\n# have the effect of building all the parts of the test.\n\n#\n\n# Again, ctest -R allows to run all matching tests.\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# adds a failtest, i.e. a test that succeed if the program fails to compile\n\n# note that the test runner for these is CMake itself, when passed -DEIGEN_FAILTEST=ON\n\n# so here we're just running CMake commands immediately, we're not adding any targets.\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# print a summary of the different options\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# vectorization / alignment options\n",
        "Line" : 266,
        "CharPositionInLine" : 10
      },
      "9" : {
        "Text" : "# uncomment anytime you change the ei_get_compilerver_from_cxx_version_string macro\n\n# ei_test_get_compilerver_from_cxx_version_string()\n",
        "Line" : 291,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# if the sitename is not yet set, try to set it\n",
        "Line" : 296,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# in case it is already set, enforce lower case\n",
        "Line" : 306,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# on windows system, we use a modified CMake script  \n",
        "Line" : 314,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# on all other system we rely on ${CMAKE_CXX_COMPILER}\n\n# supporting a \"--version\" flag\n",
        "Line" : 324,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# check whether the head command exists\n",
        "Line" : 327,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Extract compiler name and version from a raw version string\n\n# WARNING: if you edit thid macro, then please test it by  uncommenting\n\n# the testing macro call in ei_init_testing() of the EigenTesting.cmake file.\n\n# See also the ei_test_get_compilerver_from_cxx_version_string macro at the end of the file\n",
        "Line" : 344,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# extract possible compiler names  \n",
        "Line" : 349,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# combine them\n",
        "Line" : 356,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# extract possible version numbers\n\n# first try to extract 3 isolated numbers:\n",
        "Line" : 369,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# try to extract 2 isolated ones:\n",
        "Line" : 373,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# try to extract 3:\n",
        "Line" : 376,
        "CharPositionInLine" : 6
      },
      "21" : {
        "Text" : "# try to extract 2:\n",
        "Line" : 379,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# nmake 64 bit\n",
        "Line" : 467,
        "CharPositionInLine" : 42
      },
      "23" : {
        "Text" : "# helper macro for testing ei_get_compilerver_from_cxx_version_string\n\n# STR: raw version string\n\n# REFNAME: expected compiler name\n\n# REFVER: expected compiler version\n",
        "Line" : 473,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# macro for testing ei_get_compilerver_from_cxx_version_string\n\n# feel free to add more version strings\n",
        "Line" : 485,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "ground/openpilotgcs/src/libs/eigen/cmake/FindAdolc.cmake" : {
      "ObjectId" : "1a7ff3628a1aa6bd0a033b75edf23bbdc587d899",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/cmake/FindBLAS.cmake" : {
      "ObjectId" : "68c4e072417b9bc434895d1feb6e89e3bc7e5548",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find BLAS library\n\n#\n\n# This module finds an installed library that implements the BLAS\n\n# linear-algebra interface (see http://www.netlib.org/blas/).\n\n# The list of libraries searched for is mainly taken\n\n# from the autoconf macro file, acx_blas.m4 (distributed at\n\n# http://ac-archive.sourceforge.net/ac-archive/acx_blas.html).\n\n#\n\n# This module sets the following variables:\n\n#  BLAS_FOUND - set to true if a library implementing the BLAS interface\n\n#    is found\n\n#  BLAS_INCLUDE_DIR - Directories containing the BLAS header files\n\n#  BLAS_DEFINITIONS - Compilation options to use BLAS\n\n#  BLAS_LINKER_FLAGS - Linker flags to use BLAS (excluding -l\n\n#    and -L).\n\n#  BLAS_LIBRARIES_DIR - Directories containing the BLAS libraries.\n\n#     May be null if BLAS_LIBRARIES contains libraries name using full path.\n\n#  BLAS_LIBRARIES - List of libraries to link against BLAS interface.\n\n#     May be null if the compiler supports auto-link (e.g. VC++).\n\n#  BLAS_USE_FILE - The name of the cmake module to include to compile\n\n#     applications or libraries using BLAS.\n\n#\n\n# This module was modified by CGAL team:\n\n# - find libraries for a C++ compiler, instead of Fortran\n\n# - added BLAS_INCLUDE_DIR, BLAS_DEFINITIONS and BLAS_LIBRARIES_DIR\n\n# - removed BLAS95_LIBRARIES\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This macro checks for the existence of the combination of fortran libraries\n\n# given by _list.  If the combination is found, this macro checks (using the\n\n# check_function_exists macro) whether can link against that library\n\n# combination using the name of a routine given by _name using the linker\n\n# flags given by _flags.  If the combination of libraries is found and passes\n\n# the link test, LIBRARIES is set to the list of complete library paths that\n\n# have been found and DEFINITIONS to the required definitions.\n\n# Otherwise, LIBRARIES is set to FALSE.\n\n# N.B. _prefix is the prefix applied to the names of all cached variables that\n\n# are generated internally and marked advanced by this macro.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#message(\"DEBUG: check_fortran_libraries(${_list} in ${_path})\")\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Check for the existence of the libraries given by _list\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# search first in ${_path}\n",
        "Line" : 54,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# if not found, search in environment variables and system\n",
        "Line" : 59,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# Test this combination of libraries with the Fortran/f2c interface.\n\n# We test the Fortran interface first as it is well standardized.\n",
        "Line" : 85,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Some C++ linkers require the f2c library to link with Fortran libraries.\n\n# I do not know which ones, thus I just add the f2c library if it is available.\n",
        "Line" : 90,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#message(\"DEBUG: CMAKE_REQUIRED_DEFINITIONS = ${CMAKE_REQUIRED_DEFINITIONS}\")\n\n#message(\"DEBUG: CMAKE_REQUIRED_LIBRARIES = ${CMAKE_REQUIRED_LIBRARIES}\")\n\n# Check if function exists with f2c calling convention (ie a trailing underscore)\n",
        "Line" : 99,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# If not found, test this combination of libraries with a C interface.\n\n# A few implementations (ie ACML) provide a C interface. Unfortunately, there is no standard.\n",
        "Line" : 109,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#message(\"DEBUG: CMAKE_REQUIRED_LIBRARIES = ${CMAKE_REQUIRED_LIBRARIES}\")\n",
        "Line" : 116,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# on failure\n",
        "Line" : 123,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "#message(\"DEBUG: ${DEFINITIONS} = ${${DEFINITIONS}}\")\n\n#message(\"DEBUG: ${LIBRARIES} = ${${LIBRARIES}}\")\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#\n\n# main\n\n#\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Is it already configured?\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# reset variables\n",
        "Line" : 144,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "#\n\n# If Unix, search for BLAS function in possible libraries\n\n#\n",
        "Line" : 151,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# BLAS in ATLAS library? (http://math-atlas.sourceforge.net/)\n",
        "Line" : 155,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# BLAS in PhiPACK libraries? (requires generic BLAS lib, too)\n",
        "Line" : 168,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# BLAS in Alpha CXML library?\n",
        "Line" : 181,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# BLAS in Alpha DXML library? (now called CXML, see above)\n",
        "Line" : 194,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# BLAS in Sun Performance library?\n",
        "Line" : 207,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Extra linker flag\n",
        "Line" : 219,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "# BLAS in SCSL library?  (SGI/Cray Scientific Library)\n",
        "Line" : 224,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# BLAS in SGIMATH library?\n",
        "Line" : 237,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# BLAS in IBM ESSL library? (requires generic BLAS lib, too)\n",
        "Line" : 250,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "#BLAS in intel mkl 10 library? (em64t 64bit)\n",
        "Line" : 263,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "### windows version of intel mkl 10?\n",
        "Line" : 276,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "#older versions of intel mkl libs\n",
        "Line" : 289,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# BLAS in intel mkl library? (shared)\n",
        "Line" : 291,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "#BLAS in intel mkl library? (static, 32bit)\n",
        "Line" : 304,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "#BLAS in intel mkl library? (static, em64t 64bit)\n",
        "Line" : 317,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "#BLAS in acml library?\n",
        "Line" : 330,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# Apple BLAS library?\n",
        "Line" : 343,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# Generic BLAS library?\n\n# This configuration *must* be the last try as this library is notably slow.\n",
        "Line" : 368,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# Add variables to cache\n",
        "Line" : 400,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "#message(\"DEBUG: BLAS_INCLUDE_DIR = ${BLAS_INCLUDE_DIR}\")\n\n#message(\"DEBUG: BLAS_DEFINITIONS = ${BLAS_DEFINITIONS}\")\n\n#message(\"DEBUG: BLAS_LINKER_FLAGS = ${BLAS_LINKER_FLAGS}\")\n\n#message(\"DEBUG: BLAS_LIBRARIES = ${BLAS_LIBRARIES}\")\n\n#message(\"DEBUG: BLAS_LIBRARIES_DIR = ${BLAS_LIBRARIES_DIR}\")\n\n#message(\"DEBUG: BLAS_FOUND = ${BLAS_FOUND}\")\n",
        "Line" : 412,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 37
    },
    "ground/openpilotgcs/src/libs/eigen/cmake/FindCholmod.cmake" : {
      "ObjectId" : "7b3046d45c4fc94ac6096d57045ff9d3aeb59742",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Cholmod lib usually requires linking to a blas and lapack library.\n\n# It is up to the user of this module to find a BLAS and link to it.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ground/openpilotgcs/src/libs/eigen/cmake/FindEigen2.cmake" : {
      "ObjectId" : "a834b887286045fcdc381633ec95bf204834aadf",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Eigen2 lib\n\n#\n\n# This module supports requiring a minimum version, e.g. you can do\n\n#   find_package(Eigen2 2.0.3)\n\n# to require version 2.0.3 to newer of Eigen2.\n\n#\n\n# Once done this will define\n\n#\n\n#  EIGEN2_FOUND - system has eigen lib with correct version\n\n#  EIGEN2_INCLUDE_DIR - the eigen include directory\n\n#  EIGEN2_VERSION - eigen version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "ground/openpilotgcs/src/libs/eigen/cmake/FindEigen3.cmake" : {
      "ObjectId" : "9c546a05d859b18c49554d7ee7221cc486b7760e",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Eigen3 lib\n\n#\n\n# This module supports requiring a minimum version, e.g. you can do\n\n#   find_package(Eigen3 3.1.2)\n\n# to require version 3.1.2 or newer of Eigen3.\n\n#\n\n# Once done this will define\n\n#\n\n#  EIGEN3_FOUND - system has eigen lib with correct version\n\n#  EIGEN3_INCLUDE_DIR - the eigen include directory\n\n#  EIGEN3_VERSION - eigen version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Copyright (c) 2009 Benoit Jacob <jacob.benoit.1@gmail.com>\n\n# Redistribution and use is allowed according to the terms of the 2-clause BSD license.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "ground/openpilotgcs/src/libs/eigen/cmake/FindFFTW.cmake" : {
      "ObjectId" : "a9e9925e7590c68fc2182df94d8255b604391eba",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find the FFTW library\n\n#\n\n# Usage:\n\n#   find_package(FFTW [REQUIRED] [QUIET] )\n\n#     \n\n# It sets the following variables:\n\n#   FFTW_FOUND               ... true if fftw is found on the system\n\n#   FFTW_LIBRARIES           ... full path to fftw library\n\n#   FFTW_INCLUDES            ... fftw include directory\n\n#\n\n# The following variables will be checked by the function\n\n#   FFTW_USE_STATIC_LIBS    ... if true, only static libraries are found\n\n#   FFTW_ROOT               ... if set, the libraries are exclusively searched\n\n#                               under this path\n\n#   FFTW_LIBRARY            ... fftw library to use\n\n#   FFTW_INCLUDE_DIR        ... fftw include directory\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#If environment variable FFTWDIR is specified, it has same effect as FFTW_ROOT\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check if we can use PkgConfig\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Determine from PKG\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Check whether to search static or dynamic libs\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#find libs\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#find includes\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    },
    "ground/openpilotgcs/src/libs/eigen/cmake/FindGLEW.cmake" : {
      "ObjectId" : "54da20f12bdba627f0d90fb8d225e4995b92ea7c",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2009 Boudewijn Rempt <boud@valdyas.org>                                                                                          \n\n#                                                                                                                                                \n\n# Redistribution and use is allowed according to the terms of the BSD license.                                                                   \n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file. \n\n# \n\n# - try to find glew library and include files\n\n#  GLEW_INCLUDE_DIR, where to find GL/glew.h, etc.\n\n#  GLEW_LIBRARIES, the libraries to link against\n\n#  GLEW_FOUND, If false, do not try to use GLEW.\n\n# Also defined, but not for general use are:\n\n#  GLEW_GLEW_LIBRARY = the full path to the glew library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# These values for Apple could probably do with improvement.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Is -lXi and -lXmu required on all platforms that have it?\n\n# If not, we need some way to figure out what platform we are on.\n",
        "Line" : 75,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#The following deprecated settings are for backwards compatibility with CMake1.4\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "ground/openpilotgcs/src/libs/eigen/cmake/FindGMP.cmake" : {
      "ObjectId" : "1f0273960142810512c933c53e2ff8de7ab9d428",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find the GNU Multiple Precision Arithmetic Library (GMP)\n\n# See http://gmplib.org/\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ground/openpilotgcs/src/libs/eigen/cmake/FindGSL.cmake" : {
      "ObjectId" : "bf411a7f9814843a67465198cb61c82e59c4beff",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find gnu scientific library GSL\n\n# See \n\n# http://www.gnu.org/software/gsl/  and\n\n# http://gnuwin32.sourceforge.net/packages/gsl.htm\n\n#\n\n# Once run this will define: \n\n# \n\n# GSL_FOUND       = system has GSL lib\n\n#\n\n# GSL_LIBRARIES   = full path to the libraries\n\n#    on Unix/Linux with additional linker flags from \"gsl-config --libs\"\n\n# \n\n# CMAKE_GSL_CXX_FLAGS  = Unix compiler flags for GSL, essentially \"`gsl-config --cxxflags`\"\n\n#\n\n# GSL_INCLUDE_DIR      = where to find headers \n\n#\n\n# GSL_LINK_DIRECTORIES = link directories, useful for rpath on Unix\n\n# GSL_EXE_LINKER_FLAGS = rpath on Unix\n\n#\n\n# Felix Woelk 07/2004\n\n# Jan Woetzel\n\n#\n\n# www.mip.informatik.uni-kiel.de\n\n# --------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# JW tested with gsl-1.8, Windows XP, MSVS 7.1\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#MESSAGE(\"DBG\\n\"\n\n#  \"GSL_GSL_LIBRARY=${GSL_GSL_LIBRARY}\\n\"\n\n#  \"GSL_GSLCBLAS_LIBRARY=${GSL_GSLCBLAS_LIBRARY}\\n\"\n\n#  \"GSL_LIBRARIES=${GSL_LIBRARIES}\")\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# MESSAGE(\"DBG GSL_CONFIG ${GSL_CONFIG}\")\n",
        "Line" : 94,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# set CXXFLAGS to be fed into CXX_FLAGS by the user:\n",
        "Line" : 97,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# set INCLUDE_DIRS to prefix+include\n",
        "Line" : 100,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# set link libraries and link flags\n\n#SET(GSL_LIBRARIES \"`${GSL_CONFIG} --libs`\")\n",
        "Line" : 106,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# extract link dirs for rpath  \n",
        "Line" : 112,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# extract version\n",
        "Line" : 117,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# split version as major/minor\n",
        "Line" : 122,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# split off the link dirs (for rpath)\n\n# use regular expression to match wildcard equivalent \"-L*<endchar>\"\n\n# with <endchar> is a space or a semicolon\n",
        "Line" : 128,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "#      MESSAGE(\"DBG  GSL_LINK_DIRECTORIES_WITH_PREFIX=${GSL_LINK_DIRECTORIES_WITH_PREFIX}\")\n",
        "Line" : 134,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# remove prefix -L because we need the pure directory for LINK_DIRECTORIES\n",
        "Line" : 136,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "#      MESSAGE(\"DBG  GSL_LINK_DIRECTORIES=${GSL_LINK_DIRECTORIES}\")\n\n#      MESSAGE(\"DBG  GSL_EXE_LINKER_FLAGS=${GSL_EXE_LINKER_FLAGS}\")\n",
        "Line" : 142,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "#      ADD_DEFINITIONS(\"-DHAVE_GSL\")\n\n#      SET(GSL_DEFINITIONS \"-DHAVE_GSL\")\n",
        "Line" : 145,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 15
    },
    "ground/openpilotgcs/src/libs/eigen/cmake/FindGoogleHash.cmake" : {
      "ObjectId" : "f6a81a02ce9dbac0710ef2b5e46eb8b9c5aa5999",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# let's make sure it compiles with the current compiler\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "ground/openpilotgcs/src/libs/eigen/cmake/FindLAPACK.cmake" : {
      "ObjectId" : "2fcae2199f5f55f707089108301eb2c0a350671d",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find LAPACK library\n\n#\n\n# This module finds an installed library that implements the LAPACK\n\n# linear-algebra interface (see http://www.netlib.org/lapack/).\n\n# The approach follows mostly that taken for the autoconf macro file, acx_lapack.m4\n\n# (distributed at http://ac-archive.sourceforge.net/ac-archive/acx_lapack.html).\n\n#\n\n# This module sets the following variables:\n\n#  LAPACK_FOUND - set to true if a library implementing the LAPACK interface\n\n#    is found\n\n#  LAPACK_INCLUDE_DIR - Directories containing the LAPACK header files\n\n#  LAPACK_DEFINITIONS - Compilation options to use LAPACK\n\n#  LAPACK_LINKER_FLAGS - Linker flags to use LAPACK (excluding -l\n\n#    and -L).\n\n#  LAPACK_LIBRARIES_DIR - Directories containing the LAPACK libraries.\n\n#     May be null if LAPACK_LIBRARIES contains libraries name using full path.\n\n#  LAPACK_LIBRARIES - List of libraries to link against LAPACK interface.\n\n#     May be null if the compiler supports auto-link (e.g. VC++).\n\n#  LAPACK_USE_FILE - The name of the cmake module to include to compile\n\n#     applications or libraries using LAPACK.\n\n#\n\n# This module was modified by CGAL team:\n\n# - find libraries for a C++ compiler, instead of Fortran\n\n# - added LAPACK_INCLUDE_DIR, LAPACK_DEFINITIONS and LAPACK_LIBRARIES_DIR\n\n# - removed LAPACK95_LIBRARIES\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This macro checks for the existence of the combination of fortran libraries\n\n# given by _list.  If the combination is found, this macro checks (using the\n\n# check_function_exists macro) whether can link against that library\n\n# combination using the name of a routine given by _name using the linker\n\n# flags given by _flags.  If the combination of libraries is found and passes\n\n# the link test, LIBRARIES is set to the list of complete library paths that\n\n# have been found and DEFINITIONS to the required definitions.\n\n# Otherwise, LIBRARIES is set to FALSE.\n\n# N.B. _prefix is the prefix applied to the names of all cached variables that\n\n# are generated internally and marked advanced by this macro.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#message(\"DEBUG: check_lapack_libraries(${_list} in ${_path} with ${_blas})\")\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Check for the existence of the libraries given by _list\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# search first in ${_path}\n",
        "Line" : 53,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# if not found, search in environment variables and system\n",
        "Line" : 58,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# Test this combination of libraries with the Fortran/f2c interface.\n\n# We test the Fortran interface first as it is well standardized.\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Some C++ linkers require the f2c library to link with Fortran libraries.\n\n# I do not know which ones, thus I just add the f2c library if it is available.\n",
        "Line" : 89,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#message(\"DEBUG: CMAKE_REQUIRED_DEFINITIONS = ${CMAKE_REQUIRED_DEFINITIONS}\")\n\n#message(\"DEBUG: CMAKE_REQUIRED_LIBRARIES = ${CMAKE_REQUIRED_LIBRARIES}\")\n\n# Check if function exists with f2c calling convention (ie a trailing underscore)\n",
        "Line" : 98,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# If not found, test this combination of libraries with a C interface.\n\n# A few implementations (ie ACML) provide a C interface. Unfortunately, there is no standard.\n",
        "Line" : 108,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#message(\"DEBUG: CMAKE_REQUIRED_LIBRARIES = ${CMAKE_REQUIRED_LIBRARIES}\")\n",
        "Line" : 115,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# on failure\n",
        "Line" : 122,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "#message(\"DEBUG: ${DEFINITIONS} = ${${DEFINITIONS}}\")\n\n#message(\"DEBUG: ${LIBRARIES} = ${${LIBRARIES}}\")\n",
        "Line" : 127,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#\n\n# main\n\n#\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# LAPACK requires BLAS\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Is it already configured?\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# reset variables\n",
        "Line" : 155,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# unused (yet)\n",
        "Line" : 158,
        "CharPositionInLine" : 32
      },
      "18" : {
        "Text" : "#\n\n# If Unix, search for LAPACK function in possible libraries\n\n#\n",
        "Line" : 162,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "#intel mkl lapack?\n",
        "Line" : 166,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "#acml lapack?\n",
        "Line" : 180,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Apple LAPACK library?\n",
        "Line" : 194,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Generic LAPACK library?\n\n# This configuration *must* be the last try as this library is notably slow.\n",
        "Line" : 221,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# Add variables to cache\n",
        "Line" : 254,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "#message(\"DEBUG: LAPACK_INCLUDE_DIR = ${LAPACK_INCLUDE_DIR}\")\n\n#message(\"DEBUG: LAPACK_DEFINITIONS = ${LAPACK_DEFINITIONS}\")\n\n#message(\"DEBUG: LAPACK_LINKER_FLAGS = ${LAPACK_LINKER_FLAGS}\")\n\n#message(\"DEBUG: LAPACK_LIBRARIES = ${LAPACK_LIBRARIES}\")\n\n#message(\"DEBUG: LAPACK_LIBRARIES_DIR = ${LAPACK_LIBRARIES_DIR}\")\n\n#message(\"DEBUG: LAPACK_FOUND = ${LAPACK_FOUND}\")\n",
        "Line" : 266,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 25
    },
    "ground/openpilotgcs/src/libs/eigen/cmake/FindMPFR.cmake" : {
      "ObjectId" : "aa4c2cd7d29c65f88dd63b5507b9f1aeeeb3f7a6",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find the MPFR library\n\n# See http://www.mpfr.org/\n\n#\n\n# This module supports requiring a minimum version, e.g. you can do\n\n#   find_package(MPFR 2.3.0)\n\n# to require version 2.3.0 to newer of MPFR.\n\n#\n\n# Once done this will define\n\n#\n\n#  MPFR_FOUND - system has MPFR lib with correct version\n\n#  MPFR_INCLUDES - the MPFR include directory\n\n#  MPFR_LIBRARIES - the MPFR library\n\n#  MPFR_VERSION - MPFR version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Copyright (c) 2010 Jitse Niesen, <jitse@maths.leeds.ac.uk>\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set MPFR_INCLUDES\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set MPFR_FIND_VERSION to 1.0.0 if no minimum version is specified\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set MPFR_VERSION\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Check whether found version exceeds minimum version\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Set MPFR_LIBRARIES\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Epilogue\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "ground/openpilotgcs/src/libs/eigen/cmake/FindMetis.cmake" : {
      "ObjectId" : "627c3e9ae4741a03b8249d7f7fb0265daba9e2cc",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Pastix requires METIS or METIS (partitioning and reordering tools)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ground/openpilotgcs/src/libs/eigen/cmake/FindPastix.cmake" : {
      "ObjectId" : "e2e6c810d3cf985eb5faca6d87768e42a81e89ea",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Pastix lib requires linking to a blas library.\n\n# It is up to the user of this module to find a BLAS and link to it.\n\n# Pastix requires SCOTCH or METIS (partitioning and reordering tools) as well\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ground/openpilotgcs/src/libs/eigen/cmake/FindSPQR.cmake" : {
      "ObjectId" : "794c212af8e046af21cad24c3220a28f7bd680aa",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# SPQR lib usually requires linking to a blas and lapack library.\n\n# It is up to the user of this module to find a BLAS and link to it.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# SPQR lib requires Cholmod, colamd and amd as well. \n\n# FindCholmod.cmake can be used to find those packages before finding spqr\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "ground/openpilotgcs/src/libs/eigen/cmake/FindScotch.cmake" : {
      "ObjectId" : "530340b16fb3ef7da5507a9e8c6e667270e1a0a3",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Pastix requires SCOTCH or METIS (partitioning and reordering tools)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ground/openpilotgcs/src/libs/eigen/cmake/FindStandardMathLibrary.cmake" : {
      "ObjectId" : "711b0e4b4f1d82323123088b4ef04cd0836b5f9f",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find how to link to the standard math library, if anything at all is needed to do.\n\n# On most platforms this is automatic, but for example it's not automatic on QNX.\n\n#\n\n# Once done this will define\n\n#\n\n#  STANDARD_MATH_LIBRARY_FOUND - we found how to successfully link to the standard math library\n\n#  STANDARD_MATH_LIBRARY - the name of the standard library that one has to link to.\n\n#                            -- this will be left empty if it's automatic (most platforms).\n\n#                            -- this will be set to \"m\" on platforms where one must explicitly\n\n#                               pass the \"-lm\" linker flag.\n\n#\n\n# Copyright (c) 2010 Benoit Jacob <jacob.benoit.1@gmail.com>\n\n# Redistribution and use is allowed according to the terms of the 2-clause BSD license.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# a little test program for c++ math functions.\n\n# notice the std:: is required on some platforms such as QNX\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# first try compiling/linking the test program without any linker flags\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# the test program linked successfully without any linker flag.\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# the test program did not link successfully without any linker flag.\n\n# This is a very uncommon case that so far we only saw on QNX. The next try is the\n\n# standard name 'm' for the standard math library.\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# the test program linked successfully when linking to the 'm' library\n",
        "Line" : 53,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# the test program still doesn't link successfully\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "ground/openpilotgcs/src/libs/eigen/cmake/FindSuperLU.cmake" : {
      "ObjectId" : "8a3df36668defb6ef511872de33729a474f9e792",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Umfpack lib usually requires linking to a blas library.\n\n# It is up to the user of this module to find a BLAS and link to it.\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ground/openpilotgcs/src/libs/eigen/cmake/FindUmfpack.cmake" : {
      "ObjectId" : "16b046cd61bb7ac0cb63a23d9ae8fb28a3cfd229",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Umfpack lib usually requires linking to a blas library.\n\n# It is up to the user of this module to find a BLAS and link to it.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ground/openpilotgcs/src/libs/eigen/cmake/RegexUtils.cmake" : {
      "ObjectId" : "b59dfc340f524d25add382306ba143e662baabdb",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/cmake/language_support.cmake" : {
      "ObjectId" : "2ca303c921e0b724d35b74539a0fd58dfaa195f4",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# cmake/modules/language_support.cmake\n\n#\n\n# Temporary additional general language support is contained within this\n\n# file.  \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This additional function definition is needed to provide a workaround for\n\n# CMake bug 9220.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# On debian testing (cmake 2.6.2), I get return code zero when calling \n\n# cmake the first time, but cmake crashes when running a second time\n\n# as follows:\n\n#\n\n#  -- The Fortran compiler identification is unknown\n\n#  CMake Error at /usr/share/cmake-2.6/Modules/CMakeFortranInformation.cmake:7 (GET_FILENAME_COMPONENT):\n\n#    get_filename_component called with incorrect number of arguments\n\n#  Call Stack (most recent call first):\n\n#    CMakeLists.txt:3 (enable_language)\n\n#\n\n# My workaround is to invoke cmake twice.  If both return codes are zero, \n\n# it is safe to invoke ENABLE_LANGUAGE(Fortran OPTIONAL)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#message(\"DEBUG: language = ${language}\")\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Second run\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Temporary tests of the above function.\n\n#workaround_9220(CXX CXX_language_works)\n\n#message(\"CXX_language_works = ${CXX_language_works}\")\n\n#workaround_9220(CXXp CXXp_language_works)\n\n#message(\"CXXp_language_works = ${CXXp_language_works}\")\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "ground/openpilotgcs/src/libs/eigen/demos/CMakeLists.txt" : {
      "ObjectId" : "b0d2eddbb8eaaf87a668274fbe63bddfb02ac792",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/demos/mandelbrot/CMakeLists.txt" : {
      "ObjectId" : "5c500e064dec6a01c8b203e250f746d26b7e626f",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/demos/opengl/CMakeLists.txt" : {
      "ObjectId" : "299aa441df95a47c84443068c95ad19ecee42516",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/doc/CMakeLists.txt" : {
      "ObjectId" : "8a493031c16978458903c4d613cb7419cf498239",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set some Doxygen flags\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set(EIGEN_DOXY_TAGFILES                 \"\\\"${Eigen_BINARY_DIR}/doc/eigen.doxytags =../\\\"\")\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "ground/openpilotgcs/src/libs/eigen/doc/examples/CMakeLists.txt" : {
      "ObjectId" : "71b272a15254f76e5ba510274246bfd192df4f90",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/doc/snippets/CMakeLists.txt" : {
      "ObjectId" : "92a22ea610c3c79e951b251124d3b692fbe28889",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/doc/special_examples/CMakeLists.txt" : {
      "ObjectId" : "138a2f6efbcb36fbf2e9d80a80860564b5d164b6",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/failtest/CMakeLists.txt" : {
      "ObjectId" : "5afa2ac8249b7593337455ce709959be458bdc35",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/lapack/CMakeLists.txt" : {
      "ObjectId" : "7e744432635c8b19e0e7cac630677f9884dfdbd5",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Download lapack and install sources and testing at the right place\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# The following comes from lapack/TESTING/CMakeLists.txt\n\n# Get Python\n",
        "Line" : 112,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#  string(REPLACE \"/STACK:10000000\" \"/STACK:900000000000000000\"\n\n#    CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS}\")\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# ======== SINGLE RFP LIN TESTS ========================\n",
        "Line" : 154,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#\n\n#\n\n# ======== SINGLE EIG TESTS ===========================\n\n#\n",
        "Line" : 157,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#\n\n# ======== DOUBLE LIN TESTS ===========================\n",
        "Line" : 220,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#\n\n# ======== DOUBLE RFP LIN TESTS ========================\n",
        "Line" : 223,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#\n\n# ======== DOUBLE EIG TESTS ===========================\n",
        "Line" : 226,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#\n\n# ======== COMPLEX RFP LIN TESTS ========================\n",
        "Line" : 288,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#\n\n# ======== COMPLEX EIG TESTS ===========================\n",
        "Line" : 291,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#\n\n# ======== COMPLEX16 LIN TESTS ========================\n",
        "Line" : 352,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "#\n\n# ======== COMPLEX16 RFP LIN TESTS ========================\n",
        "Line" : 355,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "#\n\n# ======== COMPLEX16 EIG TESTS ===========================\n",
        "Line" : 358,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#\n\n# ======== SINGLE-DOUBLE PROTO LIN TESTS ==============\n",
        "Line" : 421,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "#\n\n# ======== COMPLEX-COMPLEX16 LIN TESTS ========================\n",
        "Line" : 430,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# ==============================================================================\n",
        "Line" : 436,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 16
    },
    "ground/openpilotgcs/src/libs/eigen/scripts/CMakeLists.txt" : {
      "ObjectId" : "0d9a631a9dd0d46b726703af0e51d5f49fddf029",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/test/CMakeLists.txt" : {
      "ObjectId" : "ccb0fc7981b0edcf31d7e11633239474337bba34",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# generate split test header file\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# configure blas/lapack (use Eigen's ones)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ei_add_test(denseLM)\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "ground/openpilotgcs/src/libs/eigen/test/eigen2/CMakeLists.txt" : {
      "ObjectId" : "84931e0372a8bdb551b00ee59e2144d9786726d9",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ei_add_test(eigen2_first_aligned)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#ei_add_test(eigen2_packetmath)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#ei_add_test(eigen2_vectorization_logic)\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# no support for eigen2 sparse module\n\n# if(NOT EIGEN_DEFAULT_TO_ROW_MAJOR)\n\n#   ei_add_test(eigen2_sparse_vector)\n\n#   ei_add_test(eigen2_sparse_basic)\n\n#   ei_add_test(eigen2_sparse_solvers \" \" \"${SPARSE_LIBS}\")\n\n#   ei_add_test(eigen2_sparse_product)\n\n# endif()\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "ground/openpilotgcs/src/libs/eigen/test/eigen2/testsuite.cmake" : {
      "ObjectId" : "12b6bfa2ebf3f045c975f368ea020e6c5f0e81de",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "####################################################################\n\n#\n\n# Usage:\n\n#  - create a new folder, let's call it cdash\n\n#  - in that folder, do:\n\n#    ctest -S path/to/eigen2/test/testsuite.cmake[,option1=value1[,option2=value2]]\n\n#\n\n# Options:\n\n#  - EIGEN_CXX: compiler, eg.: g++-4.2\n\n#      default: default c++ compiler\n\n#  - EIGEN_SITE: eg, INRIA-Bdx_pc-gael, or the name of the contributor, etc.\n\n#      default: hostname\n\n#  - EIGEN_BUILD_STRING: a string which identify the system/compiler. It should be formed like that:\n\n#        <OS_name>-<OS_version>-<arch>-<compiler-version>\n\n#      with:\n\n#        <OS_name> = opensuse, debian, osx, windows, cygwin, freebsd, solaris, etc.\n\n#        <OS_version> = 11.1, XP, vista, leopard, etc.\n\n#        <arch> = i386, x86_64, ia64, powerpc, etc.\n\n#        <compiler-version> = gcc-4.3.2, icc-11.0, MSVC-2008, etc.\n\n#  - EIGEN_EXPLICIT_VECTORIZATION: novec, SSE2, Altivec\n\n#       default: SSE2 for x86_64 systems, novec otherwise\n\n#       Its value is automatically appended to EIGEN_BUILD_STRING\n\n#  - EIGEN_CMAKE_DIR: path to cmake executable\n\n#  - EIGEN_MODE: dashboard model, can be Experimental, Nightly, or Continuous\n\n#      default: Nightly\n\n#  - EIGEN_WORK_DIR: directory used to download the source files and make the builds\n\n#      default: folder which contains this script\n\n#  - EIGEN_CMAKE_ARGS: additional arguments passed to cmake\n\n#  - CTEST_SOURCE_DIRECTORY: path to eigen's src (use a new and empty folder, not the one you are working on)\n\n#      default: <EIGEN_WORK_DIR>/src\n\n#  - CTEST_BINARY_DIRECTORY: build directory\n\n#      default: <EIGEN_WORK_DIR>/nightly-<EIGEN_CXX>\n\n#\n\n# Here is an example running several compilers on a linux system:\n\n# #!/bin/bash\n\n# ARCH=`uname -m`\n\n# SITE=`hostname`\n\n# VERSION=opensuse-11.1\n\n# WORK_DIR=/home/gael/Coding/eigen2/cdash\n\n# # get the last version of the script\n\n# wget http://bitbucket.org/eigen/eigen/raw/tip/test/testsuite.cmake -o $WORK_DIR/testsuite.cmake\n\n# COMMON=\"ctest -S $WORK_DIR/testsuite.cmake,EIGEN_WORK_DIR=$WORK_DIR,EIGEN_SITE=$SITE,EIGEN_MODE=$1,EIGEN_BUILD_STRING=$OS_VERSION-$ARCH\"\n\n# $COMMON-gcc-3.4.6,EIGEN_CXX=g++-3.4\n\n# $COMMON-gcc-4.0.1,EIGEN_CXX=g++-4.0.1\n\n# $COMMON-gcc-4.3.2,EIGEN_CXX=g++-4.3,EIGEN_EXPLICIT_VECTORIZATION=novec\n\n# $COMMON-gcc-4.3.2,EIGEN_CXX=g++-4.3,EIGEN_EXPLICIT_VECTORIZATION=SSE2\n\n# $COMMON-icc-11.0,EIGEN_CXX=icpc\n\n#\n\n####################################################################\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# process the arguments\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# pick first\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# remove first\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# decompose as a pair key=value\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# set the variable to the specified value\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "####################################################################\n\n# Automatically set some user variables if they have not been defined manually\n\n####################################################################\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# let's try to find all information we need to make the build string ourself\n",
        "Line" : 96,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# OS\n",
        "Line" : 98,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# arch\n",
        "Line" : 101,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "## mandatory variables (the default should be ok in most cases):\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# which ctest command to use for running the dashboard\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# what cmake command to use for configuring this dashboard\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "####################################################################\n\n# The values in this section are optional you can either\n\n# have them or leave them commented out\n\n####################################################################\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# this make sure we get consistent outputs\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# should ctest wipe the binary tree before running\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# this is the initial cache to use for the binary tree, be careful to escape\n\n# any quotes inside of this string if you use it\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#message(SEND_ERROR \"win32\")\n",
        "Line" : 159,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# set any extra environment variables to use during the execution of the script here:\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "ground/openpilotgcs/src/libs/eigen/test/testsuite.cmake" : {
      "ObjectId" : "3bec56b3fafc1a60a2b60fd0cd1e4ea6e008ab04",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "####################################################################\n\n#\n\n# Usage:\n\n#  - create a new folder, let's call it cdash\n\n#  - in that folder, do:\n\n#    ctest -S path/to/eigen/test/testsuite.cmake[,option1=value1[,option2=value2]]\n\n#\n\n# Options:\n\n#  - EIGEN_CXX: compiler, eg.: g++-4.2\n\n#      default: default c++ compiler\n\n#  - EIGEN_SITE: eg, INRIA-Bdx_pc-gael, or the name of the contributor, etc.\n\n#      default: hostname\n\n#  - EIGEN_BUILD_STRING: a string which identify the system/compiler. It should be formed like that:\n\n#        <OS_name>-<OS_version>-<arch>-<compiler-version>\n\n#      with:\n\n#        <OS_name> = opensuse, debian, osx, windows, cygwin, freebsd, solaris, etc.\n\n#        <OS_version> = 11.1, XP, vista, leopard, etc.\n\n#        <arch> = i386, x86_64, ia64, powerpc, etc.\n\n#        <compiler-version> = gcc-4.3.2, icc-11.0, MSVC-2008, etc.\n\n#  - EIGEN_EXPLICIT_VECTORIZATION: novec, SSE2, Altivec\n\n#       default: SSE2 for x86_64 systems, novec otherwise\n\n#       Its value is automatically appended to EIGEN_BUILD_STRING\n\n#  - EIGEN_CMAKE_DIR: path to cmake executable\n\n#  - EIGEN_MODE: dashboard model, can be Experimental, Nightly, or Continuous\n\n#      default: Nightly\n\n#  - EIGEN_WORK_DIR: directory used to download the source files and make the builds\n\n#      default: folder which contains this script\n\n#  - EIGEN_CMAKE_ARGS: additional arguments passed to cmake\n\n#  - EIGEN_GENERATOR_TYPE: allows to overwrite the generator type\n\n#      default: nmake (windows\n\n#      See http://www.cmake.org/cmake/help/cmake2.6docs.html#section_Generators for a complete\n\n#      list of supported generators.\n\n#  - EIGEN_NO_UPDATE: allows to submit dash boards from local repositories\n\n#      This might be interesting in case you want to submit dashboards\n\n#      including local changes.\n\n#  - CTEST_SOURCE_DIRECTORY: path to eigen's src (use a new and empty folder, not the one you are working on)\n\n#      default: <EIGEN_WORK_DIR>/src\n\n#  - CTEST_BINARY_DIRECTORY: build directory\n\n#      default: <EIGEN_WORK_DIR>/nightly-<EIGEN_CXX>\n\n#\n\n# Here is an example running several compilers on a linux system:\n\n# #!/bin/bash\n\n# ARCH=`uname -m`\n\n# SITE=`hostname`\n\n# VERSION=opensuse-11.1\n\n# WORK_DIR=/home/gael/Coding/eigen/cdash\n\n# # get the last version of the script\n\n# wget http://bitbucket.org/eigen/eigen/raw/tip/test/testsuite.cmake -o $WORK_DIR/testsuite.cmake\n\n# COMMON=\"ctest -S $WORK_DIR/testsuite.cmake,EIGEN_WORK_DIR=$WORK_DIR,EIGEN_SITE=$SITE,EIGEN_MODE=$1,EIGEN_BUILD_STRING=$OS_VERSION-$ARCH\"\n\n# $COMMON-gcc-3.4.6,EIGEN_CXX=g++-3.4\n\n# $COMMON-gcc-4.0.1,EIGEN_CXX=g++-4.0.1\n\n# $COMMON-gcc-4.3.2,EIGEN_CXX=g++-4.3,EIGEN_EXPLICIT_VECTORIZATION=novec\n\n# $COMMON-gcc-4.3.2,EIGEN_CXX=g++-4.3,EIGEN_EXPLICIT_VECTORIZATION=SSE2\n\n# $COMMON-icc-11.0,EIGEN_CXX=icpc\n\n#\n\n####################################################################\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# process the arguments\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# pick first\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# remove first\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# decompose as a pair key=value\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# set the variable to the specified value\n",
        "Line" : 79,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "####################################################################\n\n# Automatically set some user variables if they have not been defined manually\n\n####################################################################\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# let's try to find all information we need to make the build string ourself\n",
        "Line" : 103,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# OS\n",
        "Line" : 105,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# arch\n",
        "Line" : 108,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "## mandatory variables (the default should be ok in most cases):\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# the backup is CVS related ...\n",
        "Line" : 145,
        "CharPositionInLine" : 37
      },
      "12" : {
        "Text" : "# which ctest command to use for running the dashboard\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# what cmake command to use for configuring this dashboard\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "####################################################################\n\n# The values in this section are optional you can either\n\n# have them or leave them commented out\n\n####################################################################\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# this make sure we get consistent outputs\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# should ctest wipe the binary tree before running\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# raise the warning/error limit\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# this is the initial cache to use for the binary tree, be careful to escape\n\n# any quotes inside of this string if you use it\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#message(SEND_ERROR \"win32\")\n",
        "Line" : 174,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# set any extra environment variables to use during the execution of the script here:\n\n# setting this variable on windows machines causes trouble ...\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "ground/openpilotgcs/src/libs/eigen/unsupported/CMakeLists.txt" : {
      "ObjectId" : "4fef40a86c6d17dd8cc792a5e4f9e8d65abcdf58",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# can't do EXCLUDE_FROM_ALL here, breaks CTest\n",
        "Line" : 4,
        "CharPositionInLine" : 25
      },
      "CommentCount" : 1
    },
    "ground/openpilotgcs/src/libs/eigen/unsupported/Eigen/CMakeLists.txt" : {
      "ObjectId" : "e06f1238b4031701cc3560ca3fc416f152da5693",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/unsupported/Eigen/src/AutoDiff/CMakeLists.txt" : {
      "ObjectId" : "ad91fd9c4628cd921b2efedc59b093218dc34064",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/unsupported/Eigen/src/BVH/CMakeLists.txt" : {
      "ObjectId" : "b377d865cb1f9d2db01426f0b599929a4fa6458a",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/unsupported/Eigen/src/CMakeLists.txt" : {
      "ObjectId" : "f3180b52b64af01220b781afdd3447988e11e802",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/unsupported/Eigen/src/FFT/CMakeLists.txt" : {
      "ObjectId" : "edcffcb189c872b5339f345aa32d772cda3f8bf0",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/unsupported/Eigen/src/IterativeSolvers/CMakeLists.txt" : {
      "ObjectId" : "7986afc5ed4ecf09fa871c726a0c2ab1945e8559",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/unsupported/Eigen/src/KroneckerProduct/CMakeLists.txt" : {
      "ObjectId" : "4daefebee6f676c073f5ecacf9e8781aa5d673c2",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/unsupported/Eigen/src/LevenbergMarquardt/CMakeLists.txt" : {
      "ObjectId" : "8513803ce9a47fc5e2de969d386da87dc966af09",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/unsupported/Eigen/src/MatrixFunctions/CMakeLists.txt" : {
      "ObjectId" : "cdde64d2cd45b59bee6b55d6590f2fcd7827d52c",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/unsupported/Eigen/src/MoreVectorization/CMakeLists.txt" : {
      "ObjectId" : "1b887cc8e3447b27bb9d289274eeb1ee0b5e71e0",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/unsupported/Eigen/src/NonLinearOptimization/CMakeLists.txt" : {
      "ObjectId" : "9322ddadf0364cc12cd9a77fdf0b48e2cbe49f85",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/unsupported/Eigen/src/NumericalDiff/CMakeLists.txt" : {
      "ObjectId" : "1199aca2f7073703a946344a922e0adec1e22b3e",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/unsupported/Eigen/src/Polynomials/CMakeLists.txt" : {
      "ObjectId" : "51f13f3cb91ea44bc113178d58ab26db47369d25",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/unsupported/Eigen/src/SVD/CMakeLists.txt" : {
      "ObjectId" : "b40baf09210610f0c605ac4a3079700f9b447bd4",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/unsupported/Eigen/src/Skyline/CMakeLists.txt" : {
      "ObjectId" : "3bf1b0dd46a7d1fa7cf90884e2284c0c06c4e8a5",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/unsupported/Eigen/src/SparseExtra/CMakeLists.txt" : {
      "ObjectId" : "7ea32ca5e26bf653f5814ce780c63c078ee83e29",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/unsupported/Eigen/src/Splines/CMakeLists.txt" : {
      "ObjectId" : "55c6271e96328c14e32ae6252521182e3051f713",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/unsupported/doc/CMakeLists.txt" : {
      "ObjectId" : "9e9ab98007eb189f2625f7fdd3c232c2d3da4e3b",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/unsupported/doc/examples/CMakeLists.txt" : {
      "ObjectId" : "978f9afd8345931b4a38a0a1457c5660d9b3c323",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/unsupported/doc/snippets/CMakeLists.txt" : {
      "ObjectId" : "4a41579330370ecb3cc5fc1e4680436a45fd1af6",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/eigen/unsupported/test/CMakeLists.txt" : {
      "ObjectId" : "a94a3b5e57c0c8329503cd42f7c4295f298a8ae8",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# this test seems to never have been successful on x87, so is considered to contain a FP-related bug.\n\n# see thread: \"non-linear optimization test summary\"\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ground/openpilotgcs/src/libs/extensionsystem/extensionsystem.pri" : {
      "ObjectId" : "4c7641b9cb46866e0be9238e07739ca0a417f498",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/extensionsystem/extensionsystem.pro" : {
      "ObjectId" : "c40987f6d39ec3e4f9cb8029b52b71dab5389bd6",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/extensionsystem/extensionsystem_dependencies.pri" : {
      "ObjectId" : "63b2e339a3688c3d8fc2c446f9c0a03088b9e7b4",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/extensionsystem/test/auto/auto.pro" : {
      "ObjectId" : "2dd640021271b2c935ce5b5713561bf059b6d4b8",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/extensionsystem/test/auto/pluginmanager/circularplugins/circularplugins.pro" : {
      "ObjectId" : "21f257cf083f0f281d5e992498d632a30a5d3c96",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/extensionsystem/test/auto/pluginmanager/circularplugins/plugin1/plugin1.pro" : {
      "ObjectId" : "4181188287f4d0f214df617c509494a627908cd7",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/extensionsystem/test/auto/pluginmanager/circularplugins/plugin2/plugin2.pro" : {
      "ObjectId" : "58798b54f14110c8e0c982aa541c2430bd0dc5c4",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/extensionsystem/test/auto/pluginmanager/circularplugins/plugin3/plugin3.pro" : {
      "ObjectId" : "f601f06162c5e865d5c14df01568a1429ed9d896",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/extensionsystem/test/auto/pluginmanager/correctplugins1/correctplugins1.pro" : {
      "ObjectId" : "f0d76950e86724e5cca9a14076d37af586150ffc",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/extensionsystem/test/auto/pluginmanager/correctplugins1/plugin1/plugin1.pro" : {
      "ObjectId" : "9101770f9ac0ac18250ccff682af63737893df55",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/extensionsystem/test/auto/pluginmanager/correctplugins1/plugin2/plugin2.pro" : {
      "ObjectId" : "a80f4a5c76534d8580e594f040c78dc9af0bd7f8",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/extensionsystem/test/auto/pluginmanager/correctplugins1/plugin3/plugin3.pro" : {
      "ObjectId" : "c5ff581b1badd8e3c3c951501dc69d0dedc357f8",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/extensionsystem/test/auto/pluginmanager/pluginmanager.pro" : {
      "ObjectId" : "57b026f5fb84a5671c443a1ee5b794c7cfacd0f2",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/extensionsystem/test/auto/pluginmanager/test.pro" : {
      "ObjectId" : "c5934b1331c1d08ef477002b72db90540bd8746e",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "######################################################################\n\n# Automatically generated by qmake (2.01a) Fr Jul 27 23:12:52 2007\n\n######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Input\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "ground/openpilotgcs/src/libs/extensionsystem/test/auto/pluginspec/pluginspec.pro" : {
      "ObjectId" : "d4b941b2320910f5770e49a42938e6d4b8aba350",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/extensionsystem/test/auto/pluginspec/test.pro" : {
      "ObjectId" : "d8fda889176a58f4befd52a7dfe07cada81bdfdc",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Input\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ground/openpilotgcs/src/libs/extensionsystem/test/auto/pluginspec/testplugin/testplugin.pro" : {
      "ObjectId" : "8b4d81a82ad3245a1af003af44d4b86374500820",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/extensionsystem/test/extensionsystem_test.pri" : {
      "ObjectId" : "6ad874add3ef2f4b1581aec8b82ee9ef173207f4",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/extensionsystem/test/manual/manual.pro" : {
      "ObjectId" : "829f2fce57961bc7cf008a8bc6a7c39401e70632",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/extensionsystem/test/manual/pluginview/plugins/plugin1/plugin1.pro" : {
      "ObjectId" : "9101770f9ac0ac18250ccff682af63737893df55",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/extensionsystem/test/manual/pluginview/plugins/plugin2/plugin2.pro" : {
      "ObjectId" : "a80f4a5c76534d8580e594f040c78dc9af0bd7f8",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/extensionsystem/test/manual/pluginview/plugins/plugin3/plugin3.pro" : {
      "ObjectId" : "c5ff581b1badd8e3c3c951501dc69d0dedc357f8",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/extensionsystem/test/manual/pluginview/plugins/plugins.pro" : {
      "ObjectId" : "f0d76950e86724e5cca9a14076d37af586150ffc",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/extensionsystem/test/manual/pluginview/pluginview.pro" : {
      "ObjectId" : "8527b82c47c3fc5858806d0db9bd29fe226ae387",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/extensionsystem/test/manual/pluginview/test.pro" : {
      "ObjectId" : "4b9cd21d8ad556f70b6de8f0d2ef5ad1612e1fff",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Input\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ground/openpilotgcs/src/libs/extensionsystem/test/test.pro" : {
      "ObjectId" : "471ea892f1f815c99bcdfabf6f81a11bdcd841d0",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/glc_lib/3rdparty/zlib/Makefile" : {
      "ObjectId" : "a4954c8f976ae2372d435d5a000ff914c51cf7e4",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for zlib\r\n\n# Copyright (C) 1995-2005 Jean-loup Gailly.\r\n\n# For conditions of distribution and use, see copyright notice in zlib.h\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# To compile and test, type:\r\n\n#    ./configure; make test\r\n\n# The call of configure is optional if you don't have special requirements\r\n\n# If you wish to build zlib as a shared library, use: ./configure -s\r\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# To use the asm code, type:\r\n\n#    cp contrib/asm?86/match.S ./match.S\r\n\n#    make LOC=-DASMV OBJA=match.o\r\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# To install /usr/local/lib/libz.* and /usr/local/include/zlib.h, type:\r\n\n#    make install\r\n\n# To install in $HOME instead of /usr/local, use:\r\n\n#    make install prefix=$HOME\r\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#CFLAGS=-O -DMAX_WBITS=14 -DMAX_MEM_LEVEL=7\r\n\n#CFLAGS=-g -DDEBUG\r\n\n#CFLAGS=-O3 -Wall -Wwrite-strings -Wpointer-arith -Wconversion \\\r\n#           -Wstrict-prototypes -Wmissing-prototypes\r\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# to use the asm code: make OBJA=match.o\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The ranlib in install is needed on NeXTSTEP which checks file times\r\n\n# ldconfig is for Linux\r\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\r\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "ground/openpilotgcs/src/libs/glc_lib/glc_lib.pri" : {
      "ObjectId" : "d3199ba3a1bec3daff1410808507e7b97877e147",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/glc_lib/glc_lib.pro" : {
      "ObjectId" : "c9199a2a3bc09a34d142142d57e5733a484a0ace",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#VERSION = 2.2.0\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# disable all warnings (no need for warnings as glc sources are imported)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Input\t\t\t\t\t\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Windows compilation configuration\n",
        "Line" : 339,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# install header\n",
        "Line" : 342,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Linux and macx install configuration\n",
        "Line" : 446,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Location of HEADERS and library\n",
        "Line" : 448,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Adds a -P to preserve link\n",
        "Line" : 451,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Windows Install configuration\n",
        "Line" : 467,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Location of HEADERS and library\n",
        "Line" : 469,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# install library\n",
        "Line" : 499,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# \"make install\" configuration options\n",
        "Line" : 502,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "ground/openpilotgcs/src/libs/juavobjects/build.xml" : {
      "ObjectId" : "79f599808a26a424b0c1b3197c60a94055a858e7",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "ANT",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/juavtalk/build.xml" : {
      "ObjectId" : "f9ec55d5bec69e5ed11ae8c7e4fd09a51b71d0e0",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "ANT",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/libs.pro" : {
      "ObjectId" : "7ba26d840524359716b31871e0ba361e31225a9c",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/opmapcontrol/opmapcontrol.pri" : {
      "ObjectId" : "f6ea6004b5d30e7d36cb9bd1aac1c5a2bdef2155",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/opmapcontrol/opmapcontrol.pro" : {
      "ObjectId" : "dee478c28b6d74c6455f70672ba6bc59836b0942",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/opmapcontrol/src/common.pri" : {
      "ObjectId" : "a7889f5e8889308d54efd271c6c20be34a4f1605",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/opmapcontrol/src/core/core.pro" : {
      "ObjectId" : "d606082a1243108551b13e19185e9d9b7f6678be",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/opmapcontrol/src/internals/internals.pro" : {
      "ObjectId" : "787e6ca5c0ffeb41764a8c392bac1dc7acb5498c",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/opmapcontrol/src/mapwidget/mapwidget.pro" : {
      "ObjectId" : "93627ddc5fe746678037f697805583f28f7c1165",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# DESTDIR = ../build\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# order of linking matters\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "ground/openpilotgcs/src/libs/opmapcontrol/src/src.pro" : {
      "ObjectId" : "28d447759680a22d56fd4f0756744669b0b1eefb",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#SUBDIRS +=finaltest\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ground/openpilotgcs/src/libs/qscispinbox/qscispinbox.pri" : {
      "ObjectId" : "85cd572533f2035808257cf0723fe45e9f54e9a0",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/qscispinbox/qscispinbox.pro" : {
      "ObjectId" : "028a562c59b389192ae1072ad3c252859c51d11b",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/qtconcurrent/qtconcurrent.pri" : {
      "ObjectId" : "141de8ee8e2ea2fb4f9ffe08e1277d71e066e83a",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/qtconcurrent/qtconcurrent.pro" : {
      "ObjectId" : "ef29d9188ff217c5fe0551fdee0c0c5c07cf6cd7",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/qwt/qwt.pri" : {
      "ObjectId" : "7d57a8ce75ba4391bd3b17f62bedc1b8a0545f95",
      "LastModified" : "2014-10-06T08:55:56Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/qwt/qwt.pro" : {
      "ObjectId" : "d705acd757df4c23bd980a04810c8d864a72a30e",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#################################################################\n\n# Qwt Widget Library\n\n# Copyright (C) 1997   Josef Wilgen\n\n# Copyright (C) 2002   Uwe Rathmann\n\n#\n\n# This library is free software; you can redistribute it and/or\n\n# modify it under the terms of the Qwt License, Version 1.0\n\n#################################################################\n\n#\n\n# Adaptations made by:\n\n# The OpenPilot Team, http://www.openpilot.org Copyright (C) 2014.\n\n#\n\n#################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# disable all warnings (no need for warnings as qwt sources are imported)\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#    textengines \\\n#    doc\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# qwtspec.files  = qwtconfig.pri qwtfunctions.pri qwt.prf\n\n# qwtspec.path  = $${QWT_INSTALL_FEATURES}\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# INSTALLS += qwtspec\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "ground/openpilotgcs/src/libs/qwt/qwtconfig.pri" : {
      "ObjectId" : "865f1cf2b2df58d8cb3c4193ff7e247a01d16ba4",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "################################################################\n\n# Qwt Widget Library\n\n# Copyright (C) 1997   Josef Wilgen\n\n# Copyright (C) 2002   Uwe Rathmann\n\n#\n\n# This library is free software; you can redistribute it and/or\n\n# modify it under the terms of the Qwt License, Version 1.0\n\n#################################################################\n\n#\n\n# Adaptations made by:\n\n# The OpenPilot Team, http://www.openpilot.org Copyright (C) 2014.\n\n#\n\n#################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "######################################################################\n\n# Install paths\n\n######################################################################\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# QWT_INSTALL_PREFIX = $$[QT_INSTALL_PREFIX]\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#    QWT_INSTALL_PREFIX    = /usr/local/qwt-$$QWT_VERSION\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# QWT_INSTALL_PREFIX = /usr/local/qwt-$$QWT_VERSION-qt-$$QT_VERSION\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#    QWT_INSTALL_PREFIX    = C:/Qwt-$$QWT_VERSION\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# QWT_INSTALL_PREFIX = C:/Qwt-$$QWT_VERSION-qt-$$QT_VERSION\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# QWT_INSTALL_DOCS      = $${QWT_INSTALL_PREFIX}/doc\n\n# QWT_INSTALL_HEADERS   = $${QWT_INSTALL_PREFIX}/include\n\n# QWT_INSTALL_LIBS      = $${QWT_INSTALL_PREFIX}/lib\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "######################################################################\n\n# Designer plugin\n\n# creator/designer load designer plugins from certain default\n\n# directories ( f.e the path below QT_INSTALL_PREFIX ) and the \n\n# directories listed in the QT_PLUGIN_PATH environment variable.\n\n# When using the path below QWT_INSTALL_PREFIX you need to\n\n# add $${QWT_INSTALL_PREFIX}/plugins to QT_PLUGIN_PATH in the \n\n# runtime environment of designer/creator.\n\n######################################################################\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# QWT_INSTALL_PLUGINS   = $${QWT_INSTALL_PREFIX}/plugins/designer\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# linux distributors often organize the Qt installation\n\n# their way and QT_INSTALL_PREFIX doesn't offer a good\n\n# path. Also QT_INSTALL_PREFIX is only one of the default\n\n# search paths of the designer - not the Qt creator\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#QWT_INSTALL_PLUGINS   = $$[QT_INSTALL_PREFIX]/plugins/designer\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "######################################################################\n\n# Features\n\n# When building a Qwt application with qmake you might want to load\n\n# the compiler/linker flags, that are required to build a Qwt application\n\n# from qwt.prf. Therefore all you need to do is to add \"CONFIG += qwt\" \n\n# to your project file and take care, that qwt.prf can be found by qmake.\n\n# ( see http://doc.trolltech.com/4.7/qmake-advanced-usage.html#adding-new-configuration-features )\n\n# I recommend not to install the Qwt features together with the\n\n# Qt features, because you will have to reinstall the Qwt features,\n\n# with every Qt upgrade. \n\n######################################################################\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# QWT_INSTALL_FEATURES  = $${QWT_INSTALL_PREFIX}/features\n\n# QWT_INSTALL_FEATURES  = $$[QT_INSTALL_PREFIX]/features\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "######################################################################\n\n# Build the static/shared libraries.\n\n# If QwtDll is enabled, a shared library is built, otherwise\n\n# it will be a static library.\n\n######################################################################\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "######################################################################\n\n# QwtPlot enables all classes, that are needed to use the QwtPlot \n\n# widget. \n\n######################################################################\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "######################################################################\n\n# QwtWidgets enables all classes, that are needed to use the all other\n\n# widgets (sliders, dials, ...), beside QwtPlot. \n\n######################################################################\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "######################################################################\n\n# If you want to display svg images on the plot canvas, or\n\n# export a plot to a SVG document\n\n######################################################################\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "######################################################################\n\n# If you want to use a OpenGL plot canvas\n\n######################################################################\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# QWT_CONFIG     += QwtOpenGL\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "######################################################################\n\n# You can use the MathML renderer of the Qt solutions package to \n\n# enable MathML support in Qwt. Because of license implications\n\n# the ( modified ) code of the MML Widget solution is included and\n\n# linked together with the QwtMathMLTextEngine into an own library. \n\n# To use it you will have to add \"CONFIG += qwtmathml\"\n\n# to your qmake project file.\n\n######################################################################\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#QWT_CONFIG     += QwtMathML\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "######################################################################\n\n# If you want to build the Qwt designer plugin, \n\n# enable the line below.\n\n# Otherwise you have to build it from the designer directory.\n\n######################################################################\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# QWT_CONFIG     += QwtDesigner\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "######################################################################\n\n# Compile all Qwt classes into the designer plugin instead\n\n# of linking it against the shared Qwt library. Has no effect\n\n# when QwtDesigner or QwtDll are not both enabled.\n\n#\n\n# On systems where rpath is supported ( all Unixoids ) the \n\n# location of the installed Qwt library is compiled into the plugin,\n\n# but on Windows it might be easier to have a self contained\n\n# plugin to avoid any hassle with configuring the runtime\n\n# environment of the designer/creator.\n\n######################################################################\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#    QWT_CONFIG     += QwtDesignerSelfContained\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "######################################################################\n\n# If you want to auto build the examples, enable the line below\n\n# Otherwise you have to build them from the examples directory.\n\n######################################################################\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#QWT_CONFIG     += QwtExamples\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "######################################################################\n\n# The playground is primarily intended for the Qwt development \n\n# to explore and test new features. Nevertheless you might find\n\n# ideas or code snippets that help for application development\n\n# If you want to auto build the applications in playground, enable \n\n# the line below.\n\n# Otherwise you have to build them from the playground directory.\n\n######################################################################\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#QWT_CONFIG     += QwtPlayground\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "######################################################################\n\n# When Qt has been built as framework qmake wants \n\n# to link frameworks instead of regular libs\n\n######################################################################\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#    QWT_CONFIG += QwtFramework\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "######################################################################\n\n# Create and install pc files for pkg-config\n\n# See http://www.freedesktop.org/wiki/Software/pkg-config/\n\n######################################################################\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#QWT_CONFIG     += QwtPkgConfig\n",
        "Line" : 179,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 34
    },
    "ground/openpilotgcs/src/libs/qwt/src/src.pri" : {
      "ObjectId" : "65d79a397eb5c0661e2acfd3261a37b623802a01",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "################################################################\n\n# Qwt Widget Library\n\n# Copyright (C) 1997   Josef Wilgen\n\n# Copyright (C) 2002   Uwe Rathmann\n\n#\n\n# This library is free software; you can redistribute it and/or\n\n# modify it under the terms of the Qwt License, Version 1.0\n\n################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ground/openpilotgcs/src/libs/qwt/src/src.pro" : {
      "ObjectId" : "fcdf13f5fc5222fab4aa399a1307863a081d6ddc",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#################################################################\n\n# Qwt Widget Library\n\n# Copyright (C) 1997   Josef Wilgen\n\n# Copyright (C) 2002   Uwe Rathmann\n\n#\n\n# This library is free software; you can redistribute it and/or\n\n# modify it under the terms of the Qwt License, Version 1.0\n\n#################################################################\n\n#\n\n# Adaptations made by:\n\n# The OpenPilot Team, http://www.openpilot.org Copyright (C) 2014.\n\n#\n\n#################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# qmake project file for building the qwt libraries\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# include( $${QWT_ROOT}/qwtbuild.pri )\n\n# include( $${QWT_ROOT}/qwtfunctions.pri )\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# QWT_OUT_ROOT = $${OUT_PWD}/..\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# TARGET            = $$qwtLibraryTarget(qwt)\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# DESTDIR           = $${QWT_OUT_ROOT}/lib\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# NOTE: The include below must come AFTER the TARGET is\n\n# defined.  Otherwise the debug version of the library\n\n# will not have the 'd' suffix it needs.\n\n#\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Install directives\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# target.path    = $${QWT_INSTALL_LIBS}\n\n# INSTALLS       = target\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# there is no QMAKE_PKGCONFIG_FILE fo Qt4\n",
        "Line" : 102,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 10
    },
    "ground/openpilotgcs/src/libs/sdlgamepad/copydata.pro" : {
      "ObjectId" : "4fa7cb21961e0ae27520183fef7915816a787ce6",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# copy SDL DLL\n",
        "Line" : 4,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "# add make target\n",
        "Line" : 11,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "ground/openpilotgcs/src/libs/sdlgamepad/sdlgamepad.pri" : {
      "ObjectId" : "a5d13203c0a81901c6d1a3dfc8a2f307492b4ec2",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/sdlgamepad/sdlgamepad.pro" : {
      "ObjectId" : "92633eed7f967d1040172a7f5dc6cde55c3a21b1",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#\n\n# This file is part of SDLGamepad.\n\n#\n\n# SDLGamepad is free software: you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation, either version 3 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# SDLGamepad is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with Foobar.  If not, see <http://www.gnu.org/licenses/>.\n\n#\n\n# Manuel Blanquett\n\n# mail.nalla@gmail.com\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Ensures that SDL framework and header files are found when compiled with Qt5.2.1\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Add SDL to CFLAGS fixes build problems on mac\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Let the linker know where to find the frameworks\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "ground/openpilotgcs/src/libs/utils/utils.pri" : {
      "ObjectId" : "f6e523b74d763e2bcfc534a3d0dc6d6aed24714a",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/utils/utils.pro" : {
      "ObjectId" : "be86d2abe27227d26a38c761d433948ea17c6723",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/version_info/version_info.pri" : {
      "ObjectId" : "332f074976717bc8e523f1ce43afc1d46b13e258",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/libs/version_info/version_info.pro" : {
      "ObjectId" : "6436e0d36c36b5f8397ae39a0bd4d979b4a7ed1d",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#\n\n# This qmake code generates VersionInfo class implementation.\n\n#\n\n# This is a bit tricky since the script should be run always and before\n\n# the other dependencies evaluation.\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Since debug_and_release option is set, we need this\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Define other variables\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Create custom version_info target which generates a real file\n",
        "Line" : 27,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Hook version_info target in between qmake's Makefile update and\n\n# the actual project target\n",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "ground/openpilotgcs/src/openpilotgcslibrary.pri" : {
      "ObjectId" : "4dbe647f5a55116f8d11f31d39a369e75f860fc9",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/openpilotgcsplugin.pri" : {
      "ObjectId" : "2a01ffcc3bb3c68928863eff25209b7b3b728260",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# copy the plugin spec\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ground/openpilotgcs/src/plugins/antennatrack/antennatrack.pro" : {
      "ObjectId" : "8c4bd40245dbfd7ca26429d4776e3768d422f878",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/antennatrack/antennatrack_dependencies.pri" : {
      "ObjectId" : "ad54b0073737c9327ee07e46ae096ff6510c1249",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#include(../../plugins/coreplugin/coreplugin.pri)\n\n#include(../../libs/utils/utils.pri)\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ground/openpilotgcs/src/plugins/config/config.pri" : {
      "ObjectId" : "4c7a450b8eba4c91d6db949feed91abcbec546dd",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#include(config_dependencies.pri)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add the include path to the built-in uavobject include files.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "ground/openpilotgcs/src/plugins/config/config.pro" : {
      "ObjectId" : "18c0984eac558f1c9026cccd44bcb5ed63023733",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/config/config_dependencies.pri" : {
      "ObjectId" : "d8117e555f214d40c116fdf4fe613c2d4794b024",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/consolegadget/consolegadget.pro" : {
      "ObjectId" : "7b29b765c63ae542efde5954c9975c5fd10e9247",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/coreplugin/authorsdialog.pri" : {
      "ObjectId" : "96d7457efc982c27ad03be7fa9156b05b9d8fc18",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#\n\n# This qmake code generates AuthorsModel.qml using CREDITS.txt.\n\n#\n\n# This is a bit tricky since the script should be run always and before\n\n# the other dependencies evaluation.\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Since debug_and_release option is set, we need this\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Define other variables\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Create custom authors target which generates a real file\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Hook authors target in between qmake's Makefile update and\n\n# the actual project target\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "ground/openpilotgcs/src/plugins/coreplugin/coreplugin.pri" : {
      "ObjectId" : "26143cbc129b0ad08cd44ff9e44a4b5e4e175984",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/coreplugin/coreplugin.pro" : {
      "ObjectId" : "d329bdbf8f5008f032235770690a3823bfaf59d0",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/coreplugin/coreplugin_dependencies.pri" : {
      "ObjectId" : "8b548e7179652be5353d07e47e964551305602df",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/debuggadget/debuggadget.pro" : {
      "ObjectId" : "767966bc1b415a87814ce6a5ca56604a47c665b1",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/dial/dial.pro" : {
      "ObjectId" : "ee28b36e28e7bcd1f49010b47bd4cb781a7fc050",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/dial/dial_dependencies.pri" : {
      "ObjectId" : "9aae5fbc081a09fb4a2974e6c44a3ebf2ae461e1",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/donothing/donothing.pro" : {
      "ObjectId" : "18de4d9f91d33782421d06bc6d3c3f3906228cd8",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/emptygadget/emptygadget.pro" : {
      "ObjectId" : "6897e7604903d64c67bb005afd57ddb636d563f1",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/flightlog/flightlog.pro" : {
      "ObjectId" : "f8f8f84a8857646539205feea5f37259fbdf3f75",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/gcscontrol/gcscontrol.pro" : {
      "ObjectId" : "57fb56136deea6c28bb47fa1b7b9222ab1270f57",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/gpsdisplay/gpsdisplay.pro" : {
      "ObjectId" : "ada1528127f42730e9172c04722674dcd36ed6a0",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/gpsdisplay/gpsdisplay_dependencies.pri" : {
      "ObjectId" : "ad54b0073737c9327ee07e46ae096ff6510c1249",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#include(../../plugins/coreplugin/coreplugin.pri)\n\n#include(../../libs/utils/utils.pri)\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ground/openpilotgcs/src/plugins/hitl/aerosimrc/aerosimrc.pro" : {
      "ObjectId" : "74df871856aa20ef767ae3ccb56c13ae3974d895",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/hitl/aerosimrc/src/plugin.pro" : {
      "ObjectId" : "dab7ba70a87204afc3792f130870cf145b7d85d0",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Resemble the AeroSimRC directory structure and copy plugin files and resources\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Windows release only\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# resources and sample configuration\n",
        "Line" : 40,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Qt DLLs\n",
        "Line" : 52,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# MinGW DLLs\n\n#MINGW_DLLS = \\\n        #             libgcc_s_dw2-1.dll \\\n        #             mingwm10.dll\n",
        "Line" : 60,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "#for(dll, MINGW_DLLS) {\n\n#    data_copy.commands += $(COPY_FILE) $$targetPath(\\\"$$(QTMINGW)/$$dll\\\") $$targetPath(\\\"$$SIM_DIR/$$dll\\\") $$addNewline()\n\n#}\n",
        "Line" : 64,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 6
    },
    "ground/openpilotgcs/src/plugins/hitl/aerosimrc/src/udptest.pro" : {
      "ObjectId" : "1d9a811e0e7c8a97f77351a0953d206cf686e848",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/hitl/hitl.pro" : {
      "ObjectId" : "132fbe8ee2f653ab8ffa9344caf5acb3c3ef650f",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/hitl/hitl_dependencies.pri" : {
      "ObjectId" : "303773902010c357d98cc9a023b23b564c2bc8d9",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/hitl/plugin.pro" : {
      "ObjectId" : "066c60ec012f8d3613d9235b7238f967f249077e",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/importexport/importexport.pro" : {
      "ObjectId" : "3c9b6ba13fd9657d557efb8c76bd1d5fdb8556aa",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/importexport/importexport_dependencies.pri" : {
      "ObjectId" : "a64caedc103f51644196d974398ebb44fc4c5f88",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/ipconnection/ipconnection.pri" : {
      "ObjectId" : "74f3f4380980f89ed6830ff1c7a928ee6f792784",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/ipconnection/ipconnection.pro" : {
      "ObjectId" : "cd6a2337910a97ec3f7a66448295183fd96b5677",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/ipconnection/ipconnection_dependencies.pri" : {
      "ObjectId" : "0e063b82b52b3924844607a55b99af41c75ff54f",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/lineardial/lineardial.pro" : {
      "ObjectId" : "a76a60f3965580e49f5ba58519f596b5195f1e39",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/lineardial/lineardial_dependencies.pri" : {
      "ObjectId" : "9aae5fbc081a09fb4a2974e6c44a3ebf2ae461e1",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/logging/logging.pro" : {
      "ObjectId" : "5514f4034106d6f53c0b7e16a394635467eb0fbc",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/logging/logging_dependencies.pri" : {
      "ObjectId" : "563cb1ff1e1b7a4748647efc597ca74e63f14ed4",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/magicwaypoint/magicwaypoint.pro" : {
      "ObjectId" : "b4f096193a4b5e755b6d634fa4ee2d3e01733e5e",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/modelview/modelview.pro" : {
      "ObjectId" : "57e644bb7e8a4bca587fd972c17054f0b4155814",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/modelview/modelview_dependencies.pri" : {
      "ObjectId" : "9da489f648a1cea76b282f7b247c4a870458a8ea",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/notify/notify.pro" : {
      "ObjectId" : "31af2fdd277f4efadedbd64d5461b58b7a5ae91d",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/notify/notifyplugin_dependencies.pri" : {
      "ObjectId" : "883e471278b3aa62a66262e4dcd8c1988f074445",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/ophid/ophid.pri" : {
      "ObjectId" : "8ddbc3c4f813fa20a6c4acc9290b850c7caa9a7f",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/ophid/ophid.pro" : {
      "ObjectId" : "f882d919864b17dd44ac3e871b69df189fdb39a3",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Platform Specific\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# hidapi library\n\n## rawhid\n\n#  SOURCES += hidapi/linux/hid.c\n\n## libusb\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "ground/openpilotgcs/src/plugins/ophid/ophid_dependencies.pri" : {
      "ObjectId" : "a64caedc103f51644196d974398ebb44fc4c5f88",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/opmap/opmap.pro" : {
      "ObjectId" : "ca4e01c4758a9fd18c2c91e3e4201476c6be8870",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/osgearthview/osg.pri" : {
      "ObjectId" : "40e14ec30a6b276b51a59f5df55503797ec56730",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#QMAKE_LFLAGS += -F/usr/local/lib\n\n#LIBS += -framework OpenThreads -framework osg -framework osgUtil -framework osgViewer -framework osgDB -framework osgQt -framework osgGA\n\n#LIBS += -framework CoreFoundation\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ground/openpilotgcs/src/plugins/osgearthview/osgearth.pri" : {
      "ObjectId" : "6a4ea3e4096d915c993cb21131e94f0e8a8e1b10",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/osgearthview/osgearthview.pro" : {
      "ObjectId" : "e88ea8a2785a71e5d286cef4f9fb27f8451c714b",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/osgearthview/osgearthview_dependencies.pri" : {
      "ObjectId" : "44b7c249de0e4bfada9d0c7878e6b7f09cf4bdd3",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/pathactioneditor/pathactioneditor.pro" : {
      "ObjectId" : "28e44147ad3321bc43cd1f89bd230c0ce3846eb4",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/pfdqml/pfdqml.pro" : {
      "ObjectId" : "5c532a3c9fad50113519d3782e5deec08d308c8d",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/pfdqml/pfdqml_dependencies.pri" : {
      "ObjectId" : "9aae5fbc081a09fb4a2974e6c44a3ebf2ae461e1",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/plugins.pro" : {
      "ObjectId" : "2019d848d7c5330f5ea11e43f58104f8ff7419b1",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# USE .subdir AND .depends !\n\n# OTHERWISE PLUGINS WILL BUILD IN WRONG ORDER (DIRECTORIES ARE COMPILED IN PARALLEL)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Blank Template Plugin, not compiled by default\n\n#SUBDIRS += plugin_donothing\n\n#plugin_donothing.subdir = donothing\n\n#plugin_donothing.depends = plugin_coreplugin\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Core plugin\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Empty UAVGadget - Default for new splits\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Debug Gadget plugin\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Welcome plugin\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# opHID connection plugin\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Serial port connection plugin\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# UAVObjects plugin\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# UAVTalk plugin\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Telemetry plugin\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# OPMap UAVGadget\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Scope UAVGadget\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# UAVObject Browser gadget\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# ModelView UAVGadget\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#Qt 4.8.0 / phonon may crash on Mac, fixed in Qt 4.8.1, QTBUG-23128\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Notify gadget\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Uploader gadget\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Dial gadget\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Linear Dial gadget\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# System Health gadget\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Config gadget\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# GPS Display gadget\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# QML viewer gadget\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# PathAction Editor gadget\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Primary Flight Display (PFD) gadget\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# IP connection plugin\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#HITL Simulation gadget\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Export and Import GCS Configuration\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Telemetry data logging plugin\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# GCS Control of UAV gadget\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Antenna tracker\n\n#plugin_antennatrack.subdir = antennatrack\n\n#plugin_antennatrack.depends = plugin_coreplugin\n\n#plugin_antennatrack.depends += plugin_uavobjects\n\n#SUBDIRS += plugin_antennatrack\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Scope OpenGL Gadget\n\n#plugin_scopeogl.subdir = scopeogl\n\n#plugin_scopeogl.depends = plugin_coreplugin\n\n#plugin_scopeogl.depends += plugin_uavobjects\n\n#SUBDIRS += plugin_scopeogl\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# UAV Object Utility plugin\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# OSG Earth View plugin\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Magic Waypoint gadget\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# UAV Settings Import/Export plugin\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# UAV Object Widget Utility plugin\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Setup Wizard plugin\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Flight Logs plugin\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 40
    },
    "ground/openpilotgcs/src/plugins/qmlview/qmlview.pro" : {
      "ObjectId" : "de95a72182bee9ca22e36833a200104f797b9194",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/qmlview/qmlview_dependencies.pri" : {
      "ObjectId" : "9aae5fbc081a09fb4a2974e6c44a3ebf2ae461e1",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/scope/scope.pri" : {
      "ObjectId" : "31dea2f41822caf7ca685bd1f7bd98a922aa9da0",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/scope/scope.pro" : {
      "ObjectId" : "b95e23e6cc84909dd91b4ad7cb95854f1318a1b5",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/scope/scope_dependencies.pri" : {
      "ObjectId" : "f743801a69fc3d7c322575aee7013bdd2230be25",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/serialconnection/serial.pri" : {
      "ObjectId" : "2b5291336a923158fc26f25267ade8fc8ec90323",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/serialconnection/serial_dependencies.pri" : {
      "ObjectId" : "0e063b82b52b3924844607a55b99af41c75ff54f",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/serialconnection/serialconnection.pro" : {
      "ObjectId" : "93a40dee399ea2f9b321d8cc21af9351b177d967",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/setupwizard/setupwizard.pro" : {
      "ObjectId" : "d2c6ffd74c5d2af1f18de3ac32a3b2a3e35cbede",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/systemhealth/systemhealth.pro" : {
      "ObjectId" : "e61a12e16e857eb5874b1823606836f5cc247ee6",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/systemhealth/systemhealth_dependencies.pri" : {
      "ObjectId" : "7750ae9aaf240a136f0d560fbd652db6a4caf1d1",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/telemetry/telemetry.pri" : {
      "ObjectId" : "c5054c34fb9fa3f998e3d8d8467109979776f2ea",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/telemetry/telemetry.pro" : {
      "ObjectId" : "a1d8a8ad9981d18d2450ab17d70566470409f25d",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/telemetry/telemetry_dependencies.pri" : {
      "ObjectId" : "702d40aeeb9b318f2f68713601cff4c8ac16457b",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/uavobjectbrowser/uavobjectbrowser.pro" : {
      "ObjectId" : "dad4e601fcf6d44f8c838ad4f32b4645138af5d8",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/uavobjectbrowser/uavobjectbrowser_dependencies.pri" : {
      "ObjectId" : "14fc925e69180e68cdfd4ab99b3f80bb0dbdf035",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/uavobjects/tests/uavobjectstest.pro" : {
      "ObjectId" : "6c0d467fbafe235d61c4adff1e4b1113d40ef1ff",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# -------------------------------------------------\n\n# Project created by QtCreator 2010-03-13T15:17:38\n\n# -------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ground/openpilotgcs/src/plugins/uavobjects/uavobjects.pri" : {
      "ObjectId" : "dbe86657333a62f479f46fb6a2ae141c0925bcf6",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add the include path to the built-in uavobject include files.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ground/openpilotgcs/src/plugins/uavobjects/uavobjects.pro" : {
      "ObjectId" : "94225fc8178446801de7b7e95bb6cd62884fbbd8",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add in all of the synthetic/generated uavobject files\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ground/openpilotgcs/src/plugins/uavobjects/uavobjects_dependencies.pri" : {
      "ObjectId" : "9cf42e4845809045bda59b9f3a9d77a9d94041d5",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Provide the path to the auto-generated uavobject source files for the GCS.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#message(UAVOBJECT_SYNTHETICS is $$UAVOBJECT_SYNTHETICS)\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add the include path to the auto-generated uavobject include files.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "ground/openpilotgcs/src/plugins/uavobjects/wireshark/op-uavobjects/CMakeLists.txt" : {
      "ObjectId" : "d5f880936df823026ae3e2d5b6e6a5cba5ec3471",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# $Id$\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# This program is free software; you can redistribute it and/or\n\n# modify it under the terms of the GNU General Public License\n\n# as published by the Free Software Foundation; either version 2\n\n# of the License, or (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, write to the Free Software\n\n# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ground/openpilotgcs/src/plugins/uavobjects/wireshark/op-uavobjects/Makefile.am" : {
      "ObjectId" : "f82bc21604a1af74011a4eb85265895bea4ec148",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Makefile.am\n\n# Automake file for OpenPilot UAVObject Dissector\n\n# Copyright 2012, Stacey Sheldon <stac@solidgoldbomb.org>\n\n#\n\n# $Id$\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# This program is free software; you can redistribute it and/or\n\n# modify it under the terms of the GNU General Public License\n\n# as published by the Free Software Foundation; either version 2\n\n# of the License, or (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, write to the Free Software\n\n# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Libs must be cleared, or else libtool won't create a shared module.\n\n# If your module needs to be linked against any particular libraries,\n\n# add them here.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Build plugin.c, which contains the plugin version[] string, a\n\n# function plugin_register() that calls the register routines for all\n\n# protocols, and a function plugin_reg_handoff() that calls the handoff\n\n# registration routines for all protocols.\n\n#\n\n# We do this by scanning sources.  If that turns out to be too slow,\n\n# maybe we could just require every .o file to have an register routine\n\n# of a given name (packet-aarp.o -> proto_register_aarp, etc.).\n\n#\n\n# Formatting conventions:  The name of the proto_register_* routines an\n\n# proto_reg_handoff_* routines must start in column zero, or must be\n\n# preceded only by \"void \" starting in column zero, and must not be\n\n# inside #if.\n\n#\n\n# DISSECTOR_SRC is assumed to have all the files that need to be scanned.\n\n#\n\n# For some unknown reason, having a big \"for\" loop in the Makefile\n\n# to scan all the files doesn't work with some \"make\"s; they seem to\n\n# pass only the first few names in the list to the shell, for some\n\n# reason.\n\n#\n\n# Therefore, we have a script to generate the plugin.c file.\n\n# The shell script runs slowly, as multiple greps and seds are run\n\n# for each input file; this is especially slow on Windows.  Therefore,\n\n# if Python is present (as indicated by PYTHON being defined), we run\n\n# a faster Python script to do that work instead.\n\n#\n\n# The first argument is the directory in which the source files live.\n\n# The second argument is \"plugin\", to indicate that we should build\n\n# a plugin.c file for a plugin.\n\n# All subsequent arguments are the files to scan.\n\n#\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Currently plugin.c can be included in the distribution because\n\n# we always build all protocol dissectors. We used to have to check\n\n# whether or not to build the snmp dissector. If we again need to\n\n# variably build something, making plugin.c non-portable, uncomment\n\n# the dist-hook line below.\n\n#\n\n# Oh, yuk.  We don't want to include \"plugin.c\" in the distribution, as\n\n# its contents depend on the configuration, and therefore we want it\n\n# to be built when the first \"make\" is done; however, Automake insists\n\n# on putting *all* source into the distribution.\n\n#\n\n# We work around this by having a \"dist-hook\" rule that deletes\n\n# \"plugin.c\", so that \"dist\" won't pick it up.\n\n#\n\n#dist-hook:\n\n#\t@rm -f $(distdir)/plugin.c\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "ground/openpilotgcs/src/plugins/uavobjects/wireshark/op-uavtalk/CMakeLists.txt" : {
      "ObjectId" : "59830ea717c5edb847e4c1955bcb65f2af335be9",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# $Id$\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# This program is free software; you can redistribute it and/or\n\n# modify it under the terms of the GNU General Public License\n\n# as published by the Free Software Foundation; either version 2\n\n# of the License, or (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, write to the Free Software\n\n# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ground/openpilotgcs/src/plugins/uavobjects/wireshark/op-uavtalk/Makefile.am" : {
      "ObjectId" : "6df4814a23ac580513ec2eff4bdfe0caf229b02e",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Makefile.am\n\n# Automake file for OpenPilot UAVTalk protocol\n\n# Copyright 2012, Stacey Sheldon <stac@solidgoldbomb.org>\n\n#\n\n# $Id$\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# This program is free software; you can redistribute it and/or\n\n# modify it under the terms of the GNU General Public License\n\n# as published by the Free Software Foundation; either version 2\n\n# of the License, or (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, write to the Free Software\n\n# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Libs must be cleared, or else libtool won't create a shared module.\n\n# If your module needs to be linked against any particular libraries,\n\n# add them here.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Build plugin.c, which contains the plugin version[] string, a\n\n# function plugin_register() that calls the register routines for all\n\n# protocols, and a function plugin_reg_handoff() that calls the handoff\n\n# registration routines for all protocols.\n\n#\n\n# We do this by scanning sources.  If that turns out to be too slow,\n\n# maybe we could just require every .o file to have an register routine\n\n# of a given name (packet-aarp.o -> proto_register_aarp, etc.).\n\n#\n\n# Formatting conventions:  The name of the proto_register_* routines an\n\n# proto_reg_handoff_* routines must start in column zero, or must be\n\n# preceded only by \"void \" starting in column zero, and must not be\n\n# inside #if.\n\n#\n\n# DISSECTOR_SRC is assumed to have all the files that need to be scanned.\n\n#\n\n# For some unknown reason, having a big \"for\" loop in the Makefile\n\n# to scan all the files doesn't work with some \"make\"s; they seem to\n\n# pass only the first few names in the list to the shell, for some\n\n# reason.\n\n#\n\n# Therefore, we have a script to generate the plugin.c file.\n\n# The shell script runs slowly, as multiple greps and seds are run\n\n# for each input file; this is especially slow on Windows.  Therefore,\n\n# if Python is present (as indicated by PYTHON being defined), we run\n\n# a faster Python script to do that work instead.\n\n#\n\n# The first argument is the directory in which the source files live.\n\n# The second argument is \"plugin\", to indicate that we should build\n\n# a plugin.c file for a plugin.\n\n# All subsequent arguments are the files to scan.\n\n#\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Currently plugin.c can be included in the distribution because\n\n# we always build all protocol dissectors. We used to have to check\n\n# whether or not to build the snmp dissector. If we again need to\n\n# variably build something, making plugin.c non-portable, uncomment\n\n# the dist-hook line below.\n\n#\n\n# Oh, yuk.  We don't want to include \"plugin.c\" in the distribution, as\n\n# its contents depend on the configuration, and therefore we want it\n\n# to be built when the first \"make\" is done; however, Automake insists\n\n# on putting *all* source into the distribution.\n\n#\n\n# We work around this by having a \"dist-hook\" rule that deletes\n\n# \"plugin.c\", so that \"dist\" won't pick it up.\n\n#\n\n#dist-hook:\n\n#\t@rm -f $(distdir)/plugin.c\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "ground/openpilotgcs/src/plugins/uavobjectutil/uavobjectutil.pri" : {
      "ObjectId" : "3890b284ac73db2d8c949f644127584db0f7be23",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add the include path to the built-in uavobject include files.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ground/openpilotgcs/src/plugins/uavobjectutil/uavobjectutil.pro" : {
      "ObjectId" : "dde6e81b5a3fcaa896cc0b7b781673c9ac7c7bea",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/uavobjectutil/uavobjectutil_dependencies.pri" : {
      "ObjectId" : "a88e5360827aa66f63ecde5f16c0450c8e350e3e",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/uavobjectwidgetutils/uavobjectwidgetutils.pri" : {
      "ObjectId" : "b3b18df549c6094061a3177f2d3c0074cc6ce1fa",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add the include path to the built-in uavobject include files.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ground/openpilotgcs/src/plugins/uavobjectwidgetutils/uavobjectwidgetutils.pro" : {
      "ObjectId" : "b75b019ce7dd6a1efa04fec8d4cb446278d8d6a7",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/uavobjectwidgetutils/uavobjectwidgetutils_dependencies.pri" : {
      "ObjectId" : "df9b0797734245c780771a70efa033d1a5164c71",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/uavsettingsimportexport/uavsettingsimportexport.pri" : {
      "ObjectId" : "bddd381815531d740c3ec8728fba28fa236bc3d1",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/uavsettingsimportexport/uavsettingsimportexport.pro" : {
      "ObjectId" : "d03f46ccf3cf632b5c79e3b9188e990de515b342",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/uavsettingsimportexport/uavsettingsimportexport_dependencies.pri" : {
      "ObjectId" : "c8a47223b592d47735df371feb5f7c3419aa0010",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/uavtalk/uavtalk.pri" : {
      "ObjectId" : "aeb4173aab43130350a45835932053f7a0e25615",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/uavtalk/uavtalk.pro" : {
      "ObjectId" : "59275fa3c94ab8ae9e2abca98dab3b5df96c38e7",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#DEFINES += VERBOSE_TELEMETRY\n\n#DEFINES += VERBOSE_UAVTALK\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ground/openpilotgcs/src/plugins/uavtalk/uavtalk_dependencies.pri" : {
      "ObjectId" : "9da489f648a1cea76b282f7b247c4a870458a8ea",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/uploader/uploader.pri" : {
      "ObjectId" : "8425d364947ade18301eb986c9a898ed946fc442",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/uploader/uploader.pro" : {
      "ObjectId" : "5f775e96ed5e928172e12282497503e3bbb7e5b7",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/uploader/uploader_dependencies.pri" : {
      "ObjectId" : "0de081d391cbf29eab5e74e5755ca0412f95fc66",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/welcome/welcome.pri" : {
      "ObjectId" : "41e3d85b10d27a39ba3221f52b7c4ebd47ccd749",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/welcome/welcome.pro" : {
      "ObjectId" : "40eba229cc14c282d8d11881274930b1eefcc563",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/plugins/welcome/welcome_dependencies.pri" : {
      "ObjectId" : "04c4323a7ace314150711ca2ac7059e63b177899",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/python.pri" : {
      "ObjectId" : "ab8763997ef52f136056253900f431ae902ae466",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# We use python to extract git version info and generate some other files,\n\n# but it may be installed locally. The expected python version should be\n\n# kept in sync with make/tools.mk.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Search the python using environment override first\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If not found, search the predefined tools path\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# not found, hope it's in the path...\n",
        "Line" : 15,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 4
    },
    "ground/openpilotgcs/src/rpath.pri" : {
      "ObjectId" : "1b1fcd39557985c221d457c39334a1ae5ed6a257",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# HACK! Do the rpath by hand since it's not possible to use ORIGIN in QMAKE_RPATHDIR before Qt 5.4\n\n# \\'\\$$ORIGIN\\'  expands to $ORIGIN (after qmake and make), it does NOT read a qmake var\n",
        "Line" : 2,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "ground/openpilotgcs/src/shared/qtlockedfile/qtlockedfile.pri" : {
      "ObjectId" : "46d1f1a12aa22ae7f5e0ca2db2f6dcb03948f14e",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/shared/qtsingleapplication/qtsingleapplication.pri" : {
      "ObjectId" : "f6d84626191936dec8b8d00d2f5fed717f34ca91",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/shared/qtsingleapplication/qtsinglecoreapplication.pri" : {
      "ObjectId" : "3d6301b29c4fd97bebf8a99665834c12d2fef927",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/shared/scriptwrapper/scriptwrapper.pri" : {
      "ObjectId" : "49c7d607cfc935764e02d1aab428f0c5534f2132",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/openpilotgcs/src/src.pro" : {
      "ObjectId" : "b46a0c4be25bf66c15631c476c09f815f6f2a568",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/uavobject-synthetics/uavobject-synthetics.pro" : {
      "ObjectId" : "1f974ae803d1e2b58407aad96e83d756fa7b4573",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#\n\n# Qmake project for UAVObjects generation.\n\n# Copyright (c) 2009-2013, The OpenPilot Team, http://www.openpilot.org\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Some handy defines\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# QMAKESPEC should be defined by qmake but sometimes it is not\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Some platform-dependent options\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Windows sometimes remembers working directory changed from Makefile, sometimes not.\n\n# That's why pushd/popd is used here - to make sure that we know current directory.\n",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "ground/uavobjgenerator/uavobjgenerator.pro" : {
      "ObjectId" : "d3a06d92a418fffc3ad79092a893a00188200d8a",
      "LastModified" : "2015-02-25T00:00:00Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#\n\n# Qmake project for UAVObjGenerator.\n\n# Copyright (c) 2010-2013, The OpenPilot Team, http://www.openpilot.org\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 129,
    "QMAKE" : 170,
    "MAKEFILE" : 24,
    "AUTOMAKE" : 2,
    "ANT" : 2
  },
  "ElapsedTime" : 12580
}