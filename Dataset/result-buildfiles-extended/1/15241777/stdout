{
  "Repository" : "15241777",
  "Revision" : "HEAD",
  "ObjectId" : "7c27aa0ad505bb4802eee3fc40886836c814353f",
  "CommitTime" : "2018-10-12T16:16:31Z",
  "Files" : {
    "Makefile.am" : {
      "ObjectId" : "de20aa8f310f5c1bb9ee8fa0e53519f5d676967b",
      "LastModified" : "2018-08-04T22:50:37Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#########################################\n\n##### Defaults & Paths #####\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# pkg-config support\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#########################################\n\n##### Files, Binaries, & Libs #####\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##### ASIO #####\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##### PortAudio #####\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "##### PortMidi #####\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "##### Localizations #####\n\n# optionally build localizations\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# files that are included but not built\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# subdirs that are built,\n\n# mac before src due to uninstall target order kludge (see mac/Makfile.am)\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# subdirs that are always included in the dist, etc.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#########################################\n\n##### Targets #####\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# optionaly build localizations\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# forward target to mac/Makefile\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# forward target to msw/Makefile\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# startup location for GUI plugins and/or patches,\n\n# leftover from Pd-extended & not currently used\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# remove the leftover $(libdir)/pd dir, fail silently on any non-empty dirs\n\n# The \"|| true\" ensures that if the dir is *not* empty, then rmdir does not throw\n\n# an error and stop make.\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "asio/Makefile.am" : {
      "ObjectId" : "0bb62534bf4957bd8f27881eea35f753ca052310",
      "LastModified" : "2018-09-10T22:19:39Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# The ASIO sources are not free, so they are not included here.  You can get\n\n# them for free (as in beer) from Steinberg:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# https://www.steinberg.net/en/company/developer.html\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# First, download the ASIO SDK (asiosdk2.3 or higher), then unzip it right into\n\n# the /asio folder. You should have all of the ASIO files in pure-data/asio/ASIOSDK\n\n# when you are done unzipping. (You'll probably have to remove the version number\n\n# from the folder name.)\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# this is built as a static convenience library\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#########################################\n\n##### Defaults & Paths #####\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# hack for /asio/ASIOSDK/common/combase.h\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#########################################\n\n##### Files, Binaries, & Libs #####\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "doc/Makefile.am" : {
      "ObjectId" : "2c5369381e3ec9c7f79a6b9dcfb02d4b1b8ef195",
      "LastModified" : "2018-09-13T19:13:03Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#########################################\n\n##### Defaults & Paths #####\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# default doc location is $(prefix)/doc/pd,\n\n# but we want $(prefix)/lib/pd/doc\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# about text file, needed to write version string into\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# location to pd header\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# get version info from m_pd.h to use in doc/1.manual/1.introduction.txt\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#########################################\n\n##### Targets #####\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# build version string & write into about file during install\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#########################################\n\n##### Files, Binaries, & Libs #####\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# empty var for data list footer\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# this is at the end because its loooong\n\n# these files go into libpddir defined above\n\n# to regenerate:\n\n# cd doc\n\n# find . -type f -not -path \"./Makefile*\" | sort | awk '{print \"    \", $1, \"\\\\\"}'; echo '     $(empty)'\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10,
      "Errorlog" : "line 18:52 token recognition error at: '\\1'\nline 20:52 token recognition error at: '\\1'\nline 22:53 token recognition error at: '\\1'\nline 24:49 token recognition error at: '\\1'\n"
    },
    "extra/Makefile.am" : {
      "ObjectId" : "4c453ff5e47152ff6e67fecc7e812efe88431a31",
      "LastModified" : "2016-05-13T03:16:57Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#########################################\n\n##### Files, Binaries, & Libs #####\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "font/Makefile.am" : {
      "ObjectId" : "e71a16394ee47549aca4cfb4b7ba45a8467834c8",
      "LastModified" : "2018-09-13T19:13:03Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#########################################\n\n##### Files, Binaries, & Libs #####\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# files that are included but not built\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "mac/Makefile.am" : {
      "ObjectId" : "a1f0f86522ed59f1cca55b0cf64368f1c56bd8e6",
      "LastModified" : "2017-07-20T09:30:52Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#########################################\n\n##### Files, Binaries, & Libs #####\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# files that are included but not built\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#########################################\n\n##### Targets #####\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# build an app bundle on OSX\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# don't bother on other platforms\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# kludge that relies on this Makefile being called *before* the src/Makefile\n\n# since we remove empty folders in $(libdir)/pd last in the main Makefile,\n\n# make sure multiple calls to `make uninstall` do not fail due to missing bin dir\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "man/Makefile.am" : {
      "ObjectId" : "b594b3ca28fa3b4b0406b92cfd0e8684a376d36d",
      "LastModified" : "2016-05-13T03:16:57Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#########################################\n\n##### Files, Binaries, & Libs #####\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "msw/Makefile.am" : {
      "ObjectId" : "5ac5ef3fe2d69d7ad165241229103ae25eb5f8e9",
      "LastModified" : "2018-09-13T19:13:03Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#########################################\n\n##### Files, Binaries, & Libs #####\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#########################################\n\n##### Targets #####\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# build a standalone application directory on Windows\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# don't bother on other platforms\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "po/Makefile.am" : {
      "ObjectId" : "d07e52ca1c23dd7b2dea760e6978228113e74a6e",
      "LastModified" : "2018-09-13T19:13:03Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#########################################\n\n##### Defaults & Paths #####\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#########################################\n\n##### Files, Binaries, & Libs #####\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# note: adding $(top_srcdir) prefix for out of tree builds\n\n# where $(top_srcdir) and $(top_builddir) are not the same\n\n#\n\n# updating template.pot & the .po files are not considered per-build artifacts\n\n# but part of the source, the per build files are the generated .msg files\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# these are the supported languages\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# files that are included but not built\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#########################################\n\n##### Targets #####\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# refresh template.pot from the source code\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# remove string file locations and header \"POT-Creation-Date\" to suppress\n\n# unnecessary changes, we really only want to update the .po files when a\n\n# translation string changes in a tcl file\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# print the locations for translation strings in the .tcl source files\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# refresh .po files from the template\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# the .po files depend on template.pot, suppress line location changes to\n\n# avoid unnecessary updates\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# generate .msg files from the .po files,\n\n# these are installed and loaded by the GUI at runtime\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# each .msg file depends on updates to the corresponding .po file\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13,
      "Errorlog" : "line 138:40 token recognition error at: '\"/proc[ \\t]+\\([^ \\t]+\\)/\\1'\nline 138:67 token recognition error at: '\" *.tcl\\n\u0000'\n"
    },
    "portaudio/Makefile.am" : {
      "ObjectId" : "d565fa5dd3511b97e792eae1f1d4299fe5fb57ad",
      "LastModified" : "2018-09-24T10:25:10Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# this is built as a static convenience library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#########################################\n\n##### Defaults & Paths #####\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#########################################\n\n##### Files, Binaries, & Libs #####\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# required for PortAudio to build on newer versions of macOS as it\n\n# disables deprecation warnings stopping the build\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# hack for /asio/ASIOSDK/common/combase.h\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# empty var for headers list footer\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# include the headers in the dist so you can build\n\n# find portaudio -type file -name *.h | sort | awk '{print \"   \", $1, \"\\\\\"}'; echo '     $(empty)'\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "portmidi/Makefile.am" : {
      "ObjectId" : "724b65eed7dbebf258326600ef183dd21fb3a3bf",
      "LastModified" : "2018-09-23T01:29:52Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# this is built as a static convenience library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#########################################\n\n##### Defaults & Paths #####\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#########################################\n\n##### Files, Binaries, & Libs #####\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# empty var for headers list footer\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# include the headers in the dist so you can build\n\n# find portmidi -type file -name *.h | sort | awk '{print \"   \", $1, \"\\\\\"}'; echo '     $(empty)'\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/Makefile.am" : {
      "ObjectId" : "5ea860438b3c5c96ce8774016ba4aa24e7c8f0df",
      "LastModified" : "2018-09-13T19:13:03Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#########################################\n\n##### Defaults & Paths #####\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# there are pd_* and pd_*_core variables as we need different flags on Windows\n\n# for the DLL and the EXE, other OSes simply set pd_* = $(pd_*_core) later\n\n# also, the \"_core\" suffix is used as this keeps automake from thinking these\n\n# are library or binary variables since we only need them as placeholders\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#########################################\n\n##### Files, Binaries, & Libs #####\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# pd core & utils\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# on Windows, pd.exe contains only s_entry.c and links against pd.dll\n\n# (where all the logic resides), that's why we have to split the sources\n\n# (only to later merge them again for non-Windows systems)\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# pd-watchdog and \"local\" pd symlink location for tcl scripts\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# these install to ${includedir}/pd\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# compatibility: m_pd.h also goes into ${includedir}/\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# we want these in the dist tarball\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# add WISH define if it's set\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# need Carbon framework for PA on Mac\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##### ASIO #####\n\n# ASIO needs to go after PORTAUDIO in order for it to link properly\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# always Windows\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "##### PortMidi #####\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# link the included portmidi which is built as a static lib\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# link the system's portmidi\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# need Carbon framework for PM on Mac\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "##### NO API? #####\n\n# if no audio or midi api was detected/specified, fall back to dummy apis\n\n# ie. GNU/HURD, IPHONEOS, ... have no MIDI (not even OSS)\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "##### FFTW fft library #####\n",
        "Line" : 243,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#########################################\n\n##### Configurations Per Platform #####\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "##### GNU/Hurd #####\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# install watchdog to $(libdir)/pd/bin as it's not a user facing program\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# this flag has to have a single leading \"-\" for libtool, even though ld uses\n\n# --export-dynamic, and libtool sends -Wl,--export-dynamic to ld...\n",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# on Ubuntu/Karmic 9.10, it doesn't seem to find libm, so force it\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# force linking to pthread, which should really be done with some autotools way\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# force linking to dl, which should really be done with some autotools way\n",
        "Line" : 269,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "##### GNU/Linux #####\n",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# install watchdog to $(libdir)/pd/bin as it's not a user facing program\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# this flag has to have a single leading \"-\" for libtool, even though ld uses\n\n# --export-dynamic, and libtool sends -Wl,--export-dynamic to ld...\n",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# on Ubuntu/Karmic 9.10, it doesn't seem to find libm, so force it\n",
        "Line" : 284,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "##### Apple Mac OSX #####\n",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# install watchdog to $(libdir)/pd/bin as it's not a user facing program\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# kludge, should use auto macro __APPLE__\n\n# but who knows what externals rely on this\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# for dynamic loading & threading\n",
        "Line" : 299,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "##### Windows #####\n",
        "Line" : 304,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# win32 sockets, multimedia, and all that\n",
        "Line" : 307,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# hide the console\n",
        "Line" : 316,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# link with ressources and pd.dll import library\n",
        "Line" : 318,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# the variables are taken from the automake Makefile\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# import library for pd.dll. also works with MSVC!\n",
        "Line" : 331,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# another import library (when linking with -lpd), the same as pd.lib.\n",
        "Line" : 334,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# same as pd.exe but without -mwindows and resources\n\n# NOTE: this is a bit ugly. I couldn't figure out how to get automake to build\n\n# two programs with the same basename but different suffix.\n",
        "Line" : 345,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# for other OS, join pd_* with pd_*_core\n",
        "Line" : 352,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "##### Windows MinGW #####\n",
        "Line" : 358,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# To use SetDllDirectory() in s_loader.c, we need a minimum of Windows\n\n# XP SP1. WINVER isnt' fine-grained enough for that, so we use the\n\n# next minor version of Windows, 5.2.  That gives us -DWINVER=0x0502\n",
        "Line" : 360,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#########################################\n\n##### Targets #####\n",
        "Line" : 366,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# create a bin folder & symlinks to the binaries in order to\n\n# replicate the src/makefile.* build result\n",
        "Line" : 373,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# link to $(libdir)/pd/bin so the tcl scripts can\n\n# launch the core if the gui is started first\n\n#\n\n# We have to make the dir just in case as it may not exist yet &\n\n# we remove any existing symlink if doing a repeated install.\n",
        "Line" : 387,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# remove the $(libdir)/pd/bin link\n\n# &\n\n# remove the leftover $(includedir)/pd dir, fail silently on any non-empty dirs\n\n#\n\n# The \"|| true\" ensures that if the dir is *not* empty, then rmdir does not throw\n\n# an error and stop make.\n",
        "Line" : 397,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# generate Emacs tags\n",
        "Line" : 409,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 50,
      "Errorlog" : "line 411:40 token recognition error at: '\"/proc[ \\t]+\\([^ \\t]+\\)/\\1'\nline 411:67 token recognition error at: '\" *.tcl\\n\u0000'\n"
    },
    "tcl/Makefile.am" : {
      "ObjectId" : "55393f9897ccca6e19337ed8927d9a21a56045e2",
      "LastModified" : "2018-09-13T19:13:03Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#########################################\n\n##### Defaults & Paths #####\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#########################################\n\n##### Files, Binaries, & Libs #####\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# install gui launcher script to $(prefix)/bin\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# we want these in the dist tarball\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# install icons based on the platform\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# should this be gif or xpm?\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# MACOSX only loads icon within app bundle\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#########################################\n\n##### Targets #####\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# create symlinks to the tcl files for out of tree builds:\n\n# test ! path1 -ef path2 checks if top_srcdir & top_builddir are different\n\n#\n\n# this allows running locally from $(top_builddir) to work\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# remove convenience links for out of tree builds\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# generate Emacs tags\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11,
      "Errorlog" : "line 95:40 token recognition error at: '\"/proc[ \\t]+\\([^ \\t]+\\)/\\1'\nline 95:67 token recognition error at: '\" *.tcl\\n\u0000'\n"
    }
  },
  "FileTypes" : {
    "AUTOMAKE" : 13
  },
  "ElapsedTime" : 1406
}