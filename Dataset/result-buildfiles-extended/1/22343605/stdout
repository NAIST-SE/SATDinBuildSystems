{
  "Repository" : "22343605",
  "Revision" : "HEAD",
  "ObjectId" : "c5b96359ba03c61f9fb8031e6967ea0d5f76721a",
  "CommitTime" : "2019-04-09T09:27:43Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "962fb6411422728e2454b38574717fa6744bb27f",
      "LastModified" : "2019-03-26T07:36:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# simulate QoreConfig\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# simulate QoreConfig\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# issue #2994: ensure that the arch-specific libdir is used on Debian/Ubuntu\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# qore interpreter\n",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#set(QR_CPP_SRC command-line.cpp qr-main.cpp)\n",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# find needed libraries\n",
        "Line" : 261,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# check for C++11\n",
        "Line" : 290,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# check if we need libatomic\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# other checks\n",
        "Line" : 303,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# issue #2897 make build reproducible by omitting the hostname if possible\n",
        "Line" : 330,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# prepare scanner and parser targets\n",
        "Line" : 351,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# qpp\n",
        "Line" : 356,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# just fake qpp for macro\n",
        "Line" : 365,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# libqore generators\n",
        "Line" : 369,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# prepare libqore target\n",
        "Line" : 618,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# prepare qore target\n",
        "Line" : 654,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#add_executable(qr ${QR_CPP_SRC})\n\n#target_link_libraries(qr libqore)\n",
        "Line" : 657,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#set_target_properties(qore qr PROPERTIES INSTALL_RPATH ${CMAKE_INSTALL_FULL_LIBDIR})\n",
        "Line" : 660,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# configuration files\n",
        "Line" : 663,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# prepare dist target\n",
        "Line" : 680,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# prepare installation targets\n",
        "Line" : 683,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#install(TARGETS qore qpp qr libqore\n\n#        RUNTIME DESTINATION ${CMAKE_INSTALL_FULL_BINDIR}\n\n#        LIBRARY DESTINATION ${CMAKE_INSTALL_FULL_LIBDIR})\n",
        "Line" : 690,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# prepare documentation targets\n",
        "Line" : 712,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# documentation\n",
        "Line" : 715,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# doc generators\n",
        "Line" : 719,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# get space-separated string from list of generated files\n",
        "Line" : 724,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# get space-separated string from list of generated files\n",
        "Line" : 727,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# library\n",
        "Line" : 732,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# lang\n",
        "Line" : 744,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# end of documentation\n",
        "Line" : 764,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# astparser module\n",
        "Line" : 766,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# reflection module\n",
        "Line" : 768,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# HACK: we need to simulate QORE_USER_MODULES_DIR as the versioned one\n\n#       for qore core qlib modules.\n\n# NOTE: anything below will be installed into versioned dirs!\n",
        "Line" : 771,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# modules must go after docs target - it's depending on it\n",
        "Line" : 775,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# qlib modules + their documentation\n\n# ---\n\n# modules here are divided to groups in the order of dependence\n\n# and then sorted alphabetically inside the groups\n",
        "Line" : 777,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# base modules\n",
        "Line" : 782,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# base 2 modules\n",
        "Line" : 792,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# base 3 modules\n",
        "Line" : 804,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# base 4 modules\n",
        "Line" : 818,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# base 5 modules\n",
        "Line" : 829,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# base 6 modules\n",
        "Line" : 835,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# base 7 modules\n",
        "Line" : 838,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# print info\n",
        "Line" : 843,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 43
    },
    "Makefile.am" : {
      "ObjectId" : "89c021e908279bb9ff25fa692b929f1cb55cdbcb",
      "LastModified" : "2019-03-05T21:01:40Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## use automake to create the Makefile.in for configure\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# user modules that have dox referenced from other user modules (docs for these must be built first)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# use native qpp for build when cross compiling\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# the QORE_MODULE_DIR=./qlib is there because of situation of fresh install\n\n# when the qore is not in system (modules are searched in  eg. /usr/local/lib/qore-modules/0.8.4\n\n# by default - and it does not exist in the fresh install)\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# when cross-compiling, we just hope that qore is installed also natively, otherwise the documentation can't be built\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# all tests\n",
        "Line" : 906,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#TESTS = `find ./examples/test/ -name \"*.qtest\"`\n",
        "Line" : 908,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# explicit Doxyfile rules for modules providing tags for other modules\n",
        "Line" : 958,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#docs/lang/html\n",
        "Line" : 1056,
        "CharPositionInLine" : 85
      },
      "9" : {
        "Text" : "#$(dist_man_MANS): doxygen-doc\n",
        "Line" : 1106,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#qr_LDADD = lib/libqore.la\n",
        "Line" : 1109,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#qr_LDFLAGS=-g -pg\n",
        "Line" : 1118,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#qr_LDFLAGS=-g\n",
        "Line" : 1123,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "##qore_LDFLAGS=-s\n",
        "Line" : 1125,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# qr\n",
        "Line" : 1130,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#qr_SOURCES = qr-single-compilation-unit.cpp\n",
        "Line" : 1134,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#qr_SOURCES = \\\n#\tqr-main.cpp \\\n#\tcommand-line.cpp\n",
        "Line" : 1139,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# cmake support\n",
        "Line" : 1147,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "cmake/FindICONV.cmake" : {
      "ObjectId" : "faa634e3efe9b966d34eda73db93a11172e41325",
      "LastModified" : "2017-06-28T13:51:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2015 Niclas Rosenvik <youremailsarecrap@gmail.com>\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in\n\n# copies of this file or files derived from it .\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\n# THE SOFTWARE.\n\n#\n\n# Module to find iconv.\n\n# Sets ICONV_INCLUDE_DIR and ICONV_LIBRARY in case libiconv is used.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindMPFR.cmake" : {
      "ObjectId" : "450bed24289c93873aa515d9acd93cfcf838c17d",
      "LastModified" : "2017-06-28T13:51:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find the MPFR librairies\n\n#  MPFR_FOUND - system has MPFR lib\n\n#  MPFR_INCLUDE_DIRS - the MPFR include directories\n\n#  MPFR_LIBRARIES - Libraries needed to use MPFR\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2012, Evan Teran <evan.teran@gmail.com>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# 1. Redistributions of source code must retain the copyright\n\n#    notice, this list of conditions and the following disclaimer.\n\n# 2. Redistributions in binary form must reproduce the copyright\n\n#    notice, this list of conditions and the following disclaimer in the\n\n#    documentation and/or other materials provided with the distribution.\n\n# 3. The name of the author may not be used to endorse or promote products \n\n#    derived from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n\n# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n\n# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n\n# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\n\n# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n\n# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n\n# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "cmake/QoreMacros.cmake" : {
      "ObjectId" : "dc1dbb6d2aac8887f212d02229536bf7cfaf8625",
      "LastModified" : "2019-02-04T11:40:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Qore Programming Languages cmake macros\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Create C++ code from the QPP files\n\n#\n\n#  _cpp_files : output list of filenames created in CMAKE_CURRENT_BINARY_DIR.\n\n#\n\n# usage:\n\n# set(MY_QPP foo.qpp bar.qpp)\n\n# qore_wrap_qpp(MY_CPP ${MY_QPP})\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Create C++ code using the new value API from the QPP files\n\n#\n\n#  _cpp_files : output list of filenames created in CMAKE_CURRENT_BINARY_DIR.\n\n#\n\n# usage:\n\n# set(MY_QPP foo.qpp bar.qpp)\n\n# qore_wrap_qpp_value(MY_CPP ${MY_QPP})\n\n#\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#MESSAGE(STATUS \"DEBUG D: \" _WRAP_QPP_DOXLIST \" ${D}:\" ${_WRAP_QPP_DOXLIST} \" ${${D}}:\" ${${_WRAP_QPP_DOXLIST}})\n",
        "Line" : 77,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "#\n\n# Create dox code from dox.tmpl files\n\n#\n\n#  _dox_files : output dox filenames created in CMAKE_CURRENT_BINARY_DIR\n\n#\n\n# usage:\n\n# set(MY_DOX_TMPL foo.dox.tmpl bar.dox.tmpl)\n\n# qore_wrap_dox(MY_DOX ${MY_DOX_TMPL})\n\n#\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Create qore binary module.\n\n# Arguments:\n\n#  _module_name - string name of the module\n\n#  _version - a version. Used in -DPACKAGE_VERSION=...\n\n# [additional libraries] - optional list of libs\n\n#\n\n# The initial shared library is renamed to for Qore modules naming convention.\n\n# Linking with [additional libraries] is enabled.\n\n# libqore is linked automatically.\n\n#\n\n# additional targets created:\n\n#  'make docs' - if there is Doxygen found\n\n#  'make uninstall' - if exists CMAKE_CURRENT_SOURCE_DIR/cmake/cmake_uninstall.cmake.in\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# standard repeating stuff for modules\n",
        "Line" : 161,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# compiler stuff\n",
        "Line" : 169,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# add BUILDING_DLL=1 define to modules' CXXFLAGS\n",
        "Line" : 174,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# setup the target\n",
        "Line" : 177,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# add pthread library on Windows\n",
        "Line" : 183,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# add additional libraries\n",
        "Line" : 188,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# set install target dir\n",
        "Line" : 195,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# this line breaks jhbuild \"chroot\": install( TARGETS ${_module_name} DESTINATION ${QORE_MODULES_DIR})\n\n#install( TARGETS ${_module_name} DESTINATION ${QORE_MODULES_DIR})\n",
        "Line" : 200,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# TODO/FIXME: @Niclas: please verify if it's correct\n\n# It should allow to use full path in the module refernce itself. otool -L /path/to/module.qmod, 1st line.\n",
        "Line" : 205,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# uninstall\n",
        "Line" : 211,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# make uninstall\n",
        "Line" : 213,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# docs\n",
        "Line" : 233,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Install qore native/user module (.qm file) into proper location.\n\n#\n\n# Param #1: path to the module; e.g. \"qlib/RestHandler.qm\"\n\n# Param #2: list of module dependencies separated by semicolon; e.g. \"HttpServerUtil;Mime;Util\"\n\n#\n\n# Example:\n\n#     qore_user_module(\"qlib/RestHandler.qm\" \"HttpServerUtil;Mime;Util\")\n\n#\n\n# The module will be installed automatically in 'make install' target.\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# install files into a subdir\n",
        "Line" : 277,
        "CharPositionInLine" : 38
      },
      "20" : {
        "Text" : "# common qm file\n",
        "Line" : 281,
        "CharPositionInLine" : 34
      },
      "21" : {
        "Text" : "# get module name\n",
        "Line" : 285,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# prepare directories for the documentation\n",
        "Line" : 288,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "# prepare needed vars\n",
        "Line" : 291,
        "CharPositionInLine" : 8
      },
      "24" : {
        "Text" : "# prepare QDX arguments\n",
        "Line" : 298,
        "CharPositionInLine" : 8
      },
      "25" : {
        "Text" : "# add CMake target for the documentation\n",
        "Line" : 302,
        "CharPositionInLine" : 8
      },
      "26" : {
        "Text" : "# make 'docs' target dependent on this module documentation\n",
        "Line" : 345,
        "CharPositionInLine" : 8
      },
      "27" : {
        "Text" : "# make this dependent on Qore lang and lib documentation targets\n",
        "Line" : 348,
        "CharPositionInLine" : 8
      },
      "28" : {
        "Text" : "# make this dependent on the other module targets\n",
        "Line" : 352,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : "# install qm file\n",
        "Line" : 358,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# Install qore native/user modules (qm files) into proper location.\n\n# Example:\n\n#   set(QM_FILES foo.qm bar.qm)\n\n#   qore_user_modules(${QM_FILES})\n\n# Files will be installed automatically in 'make install' target\n",
        "Line" : 362,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# first - handle qlib documentation\n",
        "Line" : 368,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# used for configure_file line below\n",
        "Line" : 374,
        "CharPositionInLine" : 38
      },
      "33" : {
        "Text" : "# install qm files\n",
        "Line" : 389,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# Make distributable (source code) tarball. Target 'make dist'\n",
        "Line" : 394,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# packaging related stuff\n",
        "Line" : 396,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# simulate autotools' \"make dist\"\n",
        "Line" : 404,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "# prints a summary of configuration\n",
        "Line" : 413,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#\n\n# Find Pthreads.\n\n# Uses FindThreads with pthreads preference to look for pthreads.\n\n# Cmake generation will break if pthreads are not found.\n\n# For variables and targets defined by this, see docs for FindThreads.\n\n#\n",
        "Line" : 437,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# find pthread_setname\n",
        "Line" : 455,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# find pthread_getattr_np\n",
        "Line" : 502,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 41
    },
    "cmake/QoreMacrosIntern.cmake" : {
      "ObjectId" : "fb932b51997d0b65ea8baf083b57e7129e7be429",
      "LastModified" : "2018-09-26T13:06:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Written by Niclas Rosenvik <youremailsarecrap@gmail.com>\n\n# Based on the tests found in qores configure.ac\n\n#\n\n#\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\tstring(CONCAT file_output ${file_output} \"\\n#cmakedefine \" ${have_var})\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#    file(WRITE ${CMAKE_BINARY_DIR}/header_defines.txt ${file_output})\n\n#    unset(file_output)\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\tstring(CONCAT file_output ${file_output} \"\\n#cmakedefine \" ${HAVE_VAR})\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#    file(WRITE ${CMAKE_BINARY_DIR}/funcs_defines.txt ${file_output})\n\n#    unset(file_output)\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# check for openssl const correctness (later versions have it)\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# check for const required with SSL_CTX_new\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# check for return value with HMAC_Update and friends\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# check for X509_get_signature_nid()\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# check for const correctness in X509_get0_signature() (1.1+ has it)\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# check for X509_get0_pubkey() (1.1+ has it)\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# check for OPENSSL_init_crypto()\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Check definition of gethostbyaddr_r (glibc2 defines this with 8 arguments)\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Check definition of gethostbyname_r (glibc2.0.100 is different from Solaris)\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Check 3rd argument of gethostbyname_r\n",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# check if the compiler supports variadic local arrays\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# see if struct flock is declared\n",
        "Line" : 291,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#see if compiler supports namespaces\n",
        "Line" : 304,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#unordered map\n",
        "Line" : 337,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#std unordered map\n",
        "Line" : 355,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#tr1 unordered map\n",
        "Line" : 376,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#hash map\n",
        "Line" : 397,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#ext hash map\n",
        "Line" : 417,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#std hash map\n",
        "Line" : 438,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#stdext hash map\n",
        "Line" : 459,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#write the file.\n",
        "Line" : 486,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#slist\n",
        "Line" : 501,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#ext slist\n",
        "Line" : 518,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#std slist\n",
        "Line" : 539,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#stdext slist\n",
        "Line" : 559,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#set(QORE_CPPFLAGS -D_POSIX_C_SOURCE=199506L -D_XPG4_2 -D_XPG5 -D__EXTENSIONS__)\n",
        "Line" : 656,
        "CharPositionInLine" : 3
      },
      "31" : {
        "Text" : "# netinet/tcp.h needs sys/types.h on illumos but it does not include it\n",
        "Line" : 660,
        "CharPositionInLine" : 6
      },
      "32" : {
        "Text" : "#use libumem if available\n",
        "Line" : 663,
        "CharPositionInLine" : 3
      },
      "33" : {
        "Text" : "#look for libtbbmalloc\n",
        "Line" : 676,
        "CharPositionInLine" : 3
      },
      "34" : {
        "Text" : "# make sure dlfcn.h header file can be parsed without 'extern \"C\" {}'\n",
        "Line" : 696,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#64-bit\n",
        "Line" : 712,
        "CharPositionInLine" : 28
      },
      "36" : {
        "Text" : "# set(LIBQORE_ASM_SRC lib/sunpro-sparc64.s)\n",
        "Line" : 714,
        "CharPositionInLine" : 8
      },
      "37" : {
        "Text" : "#32-bit\n",
        "Line" : 718,
        "CharPositionInLine" : 10
      },
      "38" : {
        "Text" : "# Check for explicit link against libatomic\n\n# Helper for checking for atomics\n",
        "Line" : 743,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#set(CMAKE_REQUIRED_FLAGS \"-std=c++11\")\n",
        "Line" : 749,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# First check if atomics work without the library.\n\n# If not, check if the library exists, and atomics work with it.\n",
        "Line" : 763,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# find_library() fails for libatomic on fedora, no clue why - so here we hardcode it anyway\n\n#message(FATAL_ERROR \"Compiler appears to require libatomic, but cannot find it.\")\n",
        "Line" : 782,
        "CharPositionInLine" : 6
      },
      "42" : {
        "Text" : "# issue #3812: add library architecture directory to all library dirs; GNUInstallDirs\n\n# will only set this for /usr, but it needs to be set\n\n# for all library dirs\n\n# cmake change removing this support:\n\n#   https://gitlab.kitware.com/cmake/cmake/commit/620939e4e6f5a61cd5c0fac2704de4bfda0eb7ef\n\n# debian refs showing that in fact the arch-specific library dir should be used: \n\n#   https://wiki.debian.org/Multiarch/TheCaseForMultiarch\n\n#   https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=685519\n",
        "Line" : 808,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 43
    },
    "cmake/qore-version.h.cmake" : {
      "ObjectId" : "7d36d19e8c6d23643b6cb86e86ff3335300b01f8",
      "LastModified" : "2017-10-24T16:07:17Z",
      "FileType" : "CMAKESOURCE",
      "CommentCount" : 0
    },
    "cmake/unix-config.h.cmake" : {
      "ObjectId" : "421320d8efdc6e12f45fb084f199d71452b48f10",
      "LastModified" : "2018-11-27T15:51:11Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/* headers */",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/* functions */",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/* OpenSSL */",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* mpfr */",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* backtrace */",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* gethost* */",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/* stl hash_map and list */",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/* CPU:s */",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "/* OS:s */",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "/* the rest */",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "/* to be set later */",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "lib/Makefile.am" : {
      "ObjectId" : "f5b8bea507f610a007987e79e733c0b971e96ce8",
      "LastModified" : "2018-12-14T16:57:45Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Apps and files included in BUILT_SOURCES are compiled/created first.\n\n# It must include qpp since qpp is required to generate some cpp's\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#parser.cpp parser.hpp scanner.cpp\n",
        "Line" : 88,
        "CharPositionInLine" : 45
      },
      "2" : {
        "Text" : "# only copy parser.h to parser.hpp as automake < 1.12 will still expect parser.h in the dist file :-(\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#if COND_SOLARIS_CC_SPARC64\n\n#libqore_la_SOURCES += sunpro-sparc64.s\n\n#endif\n",
        "Line" : 362,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "modules/astparser/CMakeLists.txt" : {
      "ObjectId" : "5275672a8b1ca6aa9abe5244b32b53f5539d87ae",
      "LastModified" : "2018-09-26T13:06:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# start of hacks to simulate installed QoreConfig.cmake\n\n# which cannot be available yet - the QORE_LIBRARY is missing\n\n# as find_library does not work yet\n\n#include(${CMAKE_BINARY_DIR}/cmake/QoreConfig.cmake)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### end of hacks\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# source files\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# prepare ast_scanner and ast_parser targets\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# prepare astparser module target\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "modules/astparser/Makefile.am" : {
      "ObjectId" : "da5abb592c1973a6c555c83d61f4b2b7baeb1b69",
      "LastModified" : "2018-09-26T13:06:44Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "modules/astparser/src/Makefile.am" : {
      "ObjectId" : "a1dd369db795a7124b84d2f05c0ad56aba1dba65",
      "LastModified" : "2018-12-14T16:57:45Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# issue #3069: make sure to install correctly when cross compiling\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "modules/reflection/CMakeLists.txt" : {
      "ObjectId" : "9ed0462e676aff2c2084317f081c0fbb44bbb509",
      "LastModified" : "2018-11-27T15:51:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# start of hacks to simulate installed QoreConfig.cmake\n\n# which cannot be available yet - the QORE_LIBRARY is missing\n\n# as find_library does not work yet\n\n#include(${CMAKE_BINARY_DIR}/cmake/QoreConfig.cmake)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### end of hacks\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# we cannot include src directory as it causes doxygen warnings for @file\n\n#include_directories(${CMAKE_CURRENT_SOURCE_DIR}/src)\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# source files\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# we need copy header files to avoid doxygen warning about duplicate files *.cpp\n\n# when src/ dir is in included_directory\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# prepare reflection module target\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "modules/reflection/Makefile.am" : {
      "ObjectId" : "f090063f2ab96d190de71b4495f4cb27f29b0c33",
      "LastModified" : "2018-09-26T13:06:44Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "modules/reflection/src/Makefile.am" : {
      "ObjectId" : "93358a408a604da356c78eb009f78bc9635417b6",
      "LastModified" : "2019-04-09T09:27:43Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# issue #3069: make sure to install correctly when cross compiling\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "testbed/Makefile" : {
      "ObjectId" : "6cf95a10193f2fad8c07f89c22a01019a1527737",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 7,
    "CMAKESOURCE" : 2,
    "MAKEFILE" : 1,
    "AUTOMAKE" : 6
  },
  "ElapsedTime" : 3191
}