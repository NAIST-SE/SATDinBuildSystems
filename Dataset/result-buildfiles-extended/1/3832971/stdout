{
  "Repository" : "3832971",
  "Revision" : "HEAD",
  "ObjectId" : "8753420d76bc83cd730c607951100be0a7c9d150",
  "CommitTime" : "2019-04-15T09:42:07Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "c5e24687b55bf27d0fd79bbae4c65e2c3aac6adc",
      "LastModified" : "2019-03-11T10:28:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Evolution build script\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Base Version: This is for API/version tracking for things like\n\n# D-Bus server files. This should always be the major/minor of\n\n# the stable version or stable version to be.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Used for pkg-config files\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Required for FindIntltool module\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Required for 'disttest' and 'ditcheck' of DistTarget module\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Keep these two definitions in agreement.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Keep these two definitions in agreement.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Keep these two definitions in agreement.\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Warn about API usage that violates our minimum requirements.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# These will suppress warnings about newly-deprecated symbols. Ideally\n\n# these settings should match our minimum requirements and we will clean\n\n# up any new deprecation warnings after bumping our minimum requirements.\n\n# But if the warnings get to be overwhelming, use fixed versions instead.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Optional Packages\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Load modules from the source tree\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Packagers might want to need different settings for the RPATH related things\n\n# From experience, especially CMAKE_BUILD_WITH_INSTALL_RPATH might need to be\n\n# switched to ON, if CMake fails to set the right values during make install\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# CMAKE_INSTALL_RPATH is set below\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# CMake modules\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Project custom modules\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# ******************************\n\n# Special directories\n\n# ******************************\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# If you add something here, consider whether or not you also\n\n# need to add it to one or more .pc.in files (for Connector, etc)\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# On Win32 there is no \"rpath\" mechanism. We install the private\n\n# shared libraries in $libdir, meaning the DLLs will actually be in\n\n# $bindir. This means just having $bindir in PATH will be enough.\n",
        "Line" : 163,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "# ******************************\n\n# Dependencies\n\n# ******************************\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Setup compiler/linker flags\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# ******************************\n\n# executables\n\n# ******************************\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# ******************************\n\n# Check for nl_langinfo features\n\n# ******************************\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# ******************************\n\n# Dependencies\n\n# ******************************\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# It's checked for it twice, this one gives a hint to disable the dependency if not found\n",
        "Line" : 263,
        "CharPositionInLine" : 1
      },
      "25" : {
        "Text" : "# ******************************\n\n# Enchant - support both, but better to use the same as the dependencies (gspell, webkitgtk+,...)\n\n# ******************************\n",
        "Line" : 299,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# ******************************\n\n# Canberra / Canberra-GTK Sound\n\n# ******************************\n",
        "Line" : 327,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# ******************************\n\n# Archives Integration / gnome-autoar\n\n# ******************************\n",
        "Line" : 338,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ******************************\n\n# User Documentation\n\n# ******************************\n",
        "Line" : 352,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ******************************\n\n# iconv checking\n\n# ******************************\n",
        "Line" : 365,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# ******************************\n\n# Timezone checks\n\n# ******************************\n",
        "Line" : 398,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# ******************************\n\n# iso-codes\n\n# ******************************\n",
        "Line" : 415,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# ******************************\n\n# TNEF implementation\n\n# ******************************\n",
        "Line" : 436,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# ******************************\n\n# Bogofilter (spam filter)\n\n# ******************************\n",
        "Line" : 462,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# ******************************\n\n# SpamAssassin (spam filter)\n\n# ******************************\n",
        "Line" : 501,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# ******************************\n\n# CERT_UI Flags\n\n# ******************************\n\n#\n\n# Here we want the Mozilla flags to go *before* the other ones,\n\n# especially the mozilla-nss -I flags to go before the gnutls ones,\n\n# as both gnutls and mozilla-nss have a header called \"pkcs12.h\" which is\n\n# included in smime/lib/e-pkcs12.c. It wants the Mozilla NSS one.\n",
        "Line" : 566,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# ******************************\n\n# Libnotify\n\n# ******************************\n",
        "Line" : 578,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# ******************************\n\n# Libunity\n\n# ******************************\n",
        "Line" : 585,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# ******************************\n\n# libical tweaks\n\n# ******************************\n",
        "Line" : 592,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# ******************************\n\n# gspell\n\n# ******************************\n",
        "Line" : 635,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# ******************************\n\n# gnu_get_libc_version()\n\n# ******************************\n",
        "Line" : 646,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# ******************************\n\n# Plugins\n\n# ******************************\n",
        "Line" : 653,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# ******************************************************************\n\n# The following plugins have additional library dependencies.\n\n# They must be explicitly disabled if the libraries are not present.\n\n# ******************************************************************\n",
        "Line" : 676,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# text-highlight\n",
        "Line" : 681,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# weather calendar\n",
        "Line" : 693,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# maps in Contacts preview\n",
        "Line" : 701,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# pst-import plugin\n",
        "Line" : 711,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Finish plugins build setup\n",
        "Line" : 720,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# ******************************\n\n# Glade catalog\n\n# ******************************\n",
        "Line" : 731,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Generate the ${PROJECT_NAME}-config.h file\n",
        "Line" : 741,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# The shell_private_requirements is used by the evolution-shell.pc.in\n",
        "Line" : 746,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# The shell_privlibdir_rpath_flags is used by the evolution-shell.pc.in\n\n# and if set, then should be preceded with a space.\n",
        "Line" : 753,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# Add it as the last, because it looks for targets defined above\n",
        "Line" : 772,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 53
    },
    "cmake/modules/CheckTarget.cmake" : {
      "ObjectId" : "71824a990ad4c84a3d58661da549d4e9e2735eab",
      "LastModified" : "2016-10-10T12:46:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CheckTarget.cmake\n\n#\n\n# Defines a custom target 'check', which gathers test programs like 'make check'\n\n# This is taken from https://cmake.org/Wiki/CMakeEmulateMakeCheck\n\n#\n\n# What you do is to call command:\n\n# add_check_test(_name)\n\n#   where _name is the name of the test, as defined by add_executable().\n\n#   Note it is a good idea to use EXCLUDE_FROM_ALL within the add_executable().\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Disable this to not have verbose tests\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/CodeCoverageGCOV.cmake" : {
      "ObjectId" : "bf670e0a5977dbddaa0fa5bd89b000c66418b2ae",
      "LastModified" : "2016-10-10T12:46:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CodeCoverageGCOV.cmake\n\n#\n\n# Adds options ENABLE_CODE_COVERAGE, which builds the project with\n\n# code coverage support\n\n#\n\n# It sets variables:\n\n# CODE_COVERAGE_DEFINES - to be used with target_compile_definitions() and similar\n\n# CODE_COVERAGE_CFLAGS - to be used with target_compile_options() and similar for C code\n\n# CODE_COVERAGE_CXXFLAGS - to be used with target_compile_options() and similar for C++ code\n\n# CODE_COVERAGE_LDFLAGS - to be used with target_link_libraries() and similar\n\n#\n\n# These variables should be added as the last in the options, because they change compilation\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/DistTargets.cmake" : {
      "ObjectId" : "2e6f037bf10c0f3438242af384b98df906eb7119",
      "LastModified" : "2016-10-12T08:04:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# DistTarget.cmake\n\n#\n\n# Defines custom targets related to distributing source code.\n\n# It requires to have populated 'PROJECT_NAME' and 'PROJECT_VERSION' variables,\n\n# possibly through the project() command. It also uses 'PROJECT_DISTCONFIGURE_PARAMS'\n\n# variable when configuring the unpacked distribution.\n\n#\n\n# Added targets:\n\n# dist - only creates a tarball\n\n# disttest - creates a tarball and 'make && make install' it to a temporary prefix\n\n#    to verify that the code can be built and installed; it also verifies\n\n#    that the first line of the NEWS file contains the same version as\n\n#    the tarball and that it claims today's date.\n\n# distcheck - similar to 'disttest', only runs also 'make check' before installing\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Filenames for tarball\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# remove any left-over directory\n",
        "Line" : 33,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# extract the tarball\n",
        "Line" : 36,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# verify the NEWS file contains what it should contain\n",
        "Line" : 39,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# create a _build sub-directory\n",
        "Line" : 43,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# configure the project with PROJECT_DISTCHECK_PARAMS\n",
        "Line" : 46,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# 'make' the project\n",
        "Line" : 54,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# 'make check' the project\n",
        "Line" : 62,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# 'make install' the project\n",
        "Line" : 65,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# if we get this far, then everything worked, thus clean up\n",
        "Line" : 68,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# and show the good news\n",
        "Line" : 71,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# 'make install' the project\n",
        "Line" : 78,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# if we get this far, then everything worked, thus clean up\n",
        "Line" : 81,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# and show the good news\n",
        "Line" : 84,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 15
    },
    "cmake/modules/EvolutionMacros.cmake" : {
      "ObjectId" : "0491e135a0c1da590980d3abe4ad2bacaf83d6d0",
      "LastModified" : "2016-10-10T12:46:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# EvolutionMacros.cmake\n\n#\n\n# Utility macros for evolution-related files\n\n#\n\n# add_error_files(_part _file0)\n\n#    Adds build and install rules to create .error files from .error.xml\n\n#    files in the current source directory. The _file0 is expected to be\n\n#    without the .xml extension. The macro can receive one or more error\n\n#    files. There is created a custom \"${_part}-error-files\" target.\n\n#\n\n# add_eplug_file(_part _eplug_filename)\n\n#    Adds build and install rules to create .eplug files from .eplug.xml\n\n#    files in the current source directory. The _eplug_filename is expected\n\n#    to be without the .xml extension. The macro can receive exactly one\n\n#    eplug file. There is created a custom \"${_part}-eplug-file\" target.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindIntltool.cmake" : {
      "ObjectId" : "8e223e9d7fc007071aa7b602a593032d79ecaea2",
      "LastModified" : "2018-10-30T14:50:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FindIntltool.cmake\n\n#\n\n# Searches for intltool and gettext. It aborts, if anything cannot be found.\n\n# Requires GETTEXT_PO_DIR to be set to full path of the po/ directory.\n\n#\n\n# Output is:\n\n#   INTLTOOL_UPDATE  - an intltool-update executable path, as found\n\n#   INTLTOOL_EXTRACT  - an intltool-extract executable path, as found\n\n#   INTLTOOL_MERGE  - an intltool-merge executable path, as found\n\n#\n\n# and anything from the FindGettext module.\n\n#\n\n# The below provided macros require GETTEXT_PACKAGE to be set.\n\n#\n\n# intltool_add_check_potfiles_target()\n\n#    Adds a check-potfiles target, which verifies that all files with translations\n\n#    are added in the POTFILES.in file inside GETTEXT_PO_DIR. This macro can be called\n\n#    only inside GETTEXT_PO_DIR.\n\n#\n\n# intltool_add_pot_file_target()\n\n#    Creates a new target pot-file, which generates ${GETTEXT_PACKAGE}.pot file into\n\n#    the CMAKE_CURERNT_BINARY_DIR. This target is not part of ALL.\n\n#    This can be called only inside GETTEXT_PO_DIR.\n\n#\n\n# intltool_process_po_files()\n\n#    Processes all files in the GETTEXT_PO_DIR and generates .gmo files for them\n\n#    in CMAKE_CURRENT_BINARY_DIR. These are added into a new target gmo-files.\n\n#    It also installs them into proper location under LOCALE_INSTALL_DIR.\n\n#    This can be called only inside GETTEXT_PO_DIR.\n\n#\n\n# intltool_setup_po_dir()\n\n#    Shortcut to setup intltool's po/ directory by adding all custom targets\n\n#    and such. this can be called only inside GETTEXT_PO_DIR.\n\n#\n\n# intltool_merge(_in_filename _out_filename ...args)\n\n#    Adds rule to call intltool-merge. The args are optional arguments.\n\n#    This can be called in any folder, only the GETTEXT_PO_DIR should\n\n#    be properly set, otherwise the call will fail.\n\n#\n\n# add_appdata_file(_infilename _outfilename)\n\n#    A shortcut to call intltool-merge() for an appdata file and install it\n\n#    to ${SHARE_INSTALL_PREFIX}/metainfo\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindLDAP.cmake" : {
      "ObjectId" : "a98bbba76e30bcc944be6569c918829b802a8bd5",
      "LastModified" : "2019-04-12T10:37:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FindLDAP.cmake\n\n#\n\n# Searches for OpenLDAP/SunLDAP library\n\n#\n\n# Adds these options:\n\n#    -DWITH_OPENLDAP=ON/OFF/PATH - enable/disable OpenLDAP, eventually set prefix to find it\n\n#    -DWITH_SUNLDAP=OFF/ON/PATH - enable/disable SunLDAP, eventually set prefix to find it\n\n#    -DWITH_STATIC_LDAP=OFF/ON - enable/disable static LDAP linking\n\n#\n\n# The OpenLDAP has precedence over SunLDAP, if both are specified. The default is to use OpenLDAP.\n\n#\n\n# The output is:\n\n#    HAVE_LDAP - set to ON, if LDAP support is enabled and libraries found\n\n#    SUNLDAP - set to ON, when using SunLDAP implementation\n\n#    LDAP_CFLAGS - CFLAGS to use with target_compile_options() and similar commands\n\n#    LDAP_INCLUDE_DIRS - include directories to use with target_include_directories() and similar commands\n\n#    LDAP_LIBS - libraries to use with target_link_libraries() and similar commands\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\t\t# libldap might depend on OpenSSL... We need to pull\n\n#\t\t# in the dependency libs explicitly here since we're\n\n#\t\t# not using libtool for the configure test.\n\n#\t\tif test -f ${LDAP_PREFIX}/lib${LIB_SUFFIX}/libldap.la; then\n\n#\t\t\tLDAP_LIBS=\"`. ${LDAP_PREFIX}/libPLIB_SUFFIX}/libldap.la; echo $dependency_libs` $LDAP_LIBS\"\n\n#\t\tfi\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindSMIME.cmake" : {
      "ObjectId" : "25371198255c34acbd98d56af2ec8a6990763357",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FindSMIME.cmake\n\n#\n\n# Searches for Mozilla's NSS and NSPR libraries, unless -DENABLE_SMIME=OFF is used\n\n#\n\n# The output is:\n\n#    mozilla_nspr - if non-empty, then a pkg-config package name for nspr\n\n#    mozilla_nss - if non-empty, then a pkg-config package name for nss\n\n#    MANUAL_NSPR_INCLUDES - if non-empty, then contains manual nspr include directory, used for target_include_directories() and similar commands\n\n#    MANUAL_NSPR_LIBS - if non-empty, then contains manual nspr libraries, used for target_link_libraries() and similar commands\n\n#    MANUAL_NSS_INCLUDES - if non-empty, then contains manual nss include directory, used for target_include_directories() and similar commands\n\n#    MANUAL_NSS_LIBS - if non-empty, then contains manual nss libraries, used for target_link_libraries() and similar commands\n\n#    MOZILLA_NSS_LIB_DIR - a lib directory where Mozilla stores its libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use pkg-config when none is specified\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Manual search, even when pkg-config failed\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ******************\n\n# Check for NSPR 4\n\n# ******************\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# *****************\n\n# Check for NSS 3\n\n# *****************\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/modules/GLibTools.cmake" : {
      "ObjectId" : "d40953c4fb9f7409bf98651b42d86459f065f8ee",
      "LastModified" : "2018-10-30T14:50:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# GLibTools.cmake\n\n#\n\n# Provides functions to run glib tools.\n\n#\n\n# Functions:\n\n#\n\n# glib_mkenums(_output_filename_noext _enums_header _define_name)\n\n#    runs glib-mkenums to generate enumtypes .h and .c files from _enums_header.\n\n#    It searches for files in the current source directory and exports to the current\n\n#    binary directory.\n\n#\n\n#    An example call is:\n\n#        glib_mkenums(camel-enumtypes camel-enums.h CAMEL_ENUMTYPES_H)\n\n#        which uses camel-enums.h as the source of known enums and generates\n\n#        camel-enumtypes.h which will use the CAMEL_ENUMTYPES_H define\n\n#        and also generates camel-enumtypes.c with the needed code.\n\n#\n\n# glib_genmarshal(_output_filename_noext _prefix _marshallist_filename)\n\n#    runs glib-genmarshal to process ${_marshallist_filename} to ${_output_filename_noext}.c\n\n#    and ${_output_filename_noext}.h files in the current binary directory, using\n\n#    the ${_prefix} as the function prefix.\n\n#\n\n# gdbus_codegen(_xml _interface_prefix _c_namespace _files_prefix _list_gens)\n\n#    runs gdbus-codegen to generate GDBus code from _xml file description,\n\n#    using _interface_prefix, _c_namespace and _files_prefix as arguments.\n\n#    The _list_gens is a list variable are stored expected generated files.\n\n#\n\n#    An example call is:\n\n#        set(GENERATED_DBUS_LOCALE\n\n#               e-dbus-localed.c\n\n#\t        e-dbus-localed.h\n\n#        )\n\n#        gdbus_codegen(org.freedesktop.locale1.xml org.freedesktop. E_DBus e-dbus-localed GENERATED_DBUS_LOCALE)\n\n#\n\n# gdbus_codegen_custom(_xml _interface_prefix _c_namespace _files_prefix _list_gens _args)\n\n#    The same as gdbus_codegen() except allows to pass other arguments to the call,\n\n#    like for example --c-generate-object-manager\n\n#\n\n# add_gsettings_schemas(_target _schema0 ...)\n\n#    Adds one or more GSettings schemas. The extension is supposed to be .gschema.xml. The schema file generation\n\n#    is added as a dependency of _target.\n\n#\n\n# glib_compile_resources _sourcedir _outputprefix _cname _inxml ...deps)\n\n#    Calls glib-compile-resources as defined in _inxml and using _outputprefix and_cname as other arguments\n\n#    beside _sourcedir. The optional arguments are other dependencies.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# this is required to compile gsettings schemas like after 'make install,\n\n# because there is no better way in CMake to run a code/script after\n\n# the whole `make install`\n",
        "Line" : 226,
        "CharPositionInLine" : 3
      },
      "2" : {
        "Text" : "# Do both, to have 'uninstall' working properly\n",
        "Line" : 234,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Compile gsettings schemas and ensure that all of them are in the place.\n",
        "Line" : 240,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# This is called too early, when the schemas are not installed yet during `make install`\n\n#\n\n# compile_gsettings_schemas()\n\n#    Optionally (based on ENABLE_SCHEMAS_COMPILE) recompiles schemas at the destination folder\n\n#    after install. It's necessary to call it as the last command in the toplevel CMakeLists.txt,\n\n#    thus the compile runs when all the schemas are installed.\n\n#\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/modules/GtkDoc.cmake" : {
      "ObjectId" : "cc6cc007a429cb7ce7552d2da2f054f6c498fc6c",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# GtkDoc.cmake\n\n#\n\n# Macros to support develper documentation build from sources with gtk-doc.\n\n#\n\n# Note that every target and dependency should be defined before the macro is\n\n# called, because it uses information from those targets.\n\n#\n\n# add_gtkdoc(_module _namespace _deprecated_guards _srcdirsvar _depsvar _ignoreheadersvar)\n\n#    Adds rules to build developer documentation using gtk-doc for some part.\n\n#    Arguments:\n\n#       _module - the module name, like 'camel'; it expects ${_part}-docs.sgml.in in the CMAKE_CURRENT_SOURCE_DIR\n\n#       _namespace - namespace for symbols\n\n#       _deprecated_guards - define name, which guards deprecated symbols\n\n#       _srcdirsvar - variable with dirs where the source files are located\n\n#       _depsvar - a variable with dependencies (targets)\n\n#       _ignoreheadersvar - a variable with a set of header files to ignore\n\n#\n\n# It also adds custom target gtkdoc-rebuild-${_module}-sgml to rebuild the sgml.in\n\n# file based on the current sources.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add them as the last, thus in-tree headers/libs have precedence\n",
        "Line" : 99,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# first add target dependencies, to have built libraries first, then add those non-target dependencies\n",
        "Line" : 114,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# ***************************************\n\n# sgml.in file rebuild, unconditional\n\n# ***************************************\n",
        "Line" : 204,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 4
    },
    "cmake/modules/IconCache.cmake" : {
      "ObjectId" : "145b843f1da46340e048456bd22020a837b1c40d",
      "LastModified" : "2017-10-02T17:23:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# IconCache.cmake\n\n#\n\n# This is required here only to have defined target 'uninstall'\n\n# in the same directory.\n\n#\n\n# Macros:\n\n# add_icon_cache_files(_destdir _fileslistvar ...)\n\n#    adds rules to install icons to icon cache directory with prefix _destdir;\n\n#    the other arguments are one or more list variables with file names.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/InstalledTests.cmake" : {
      "ObjectId" : "82380fa02656f3bdc644fdf77a2e6e485d27d614",
      "LastModified" : "2016-10-13T07:56:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# InstalledTests.cmake\n\n#\n\n# Adds option ENABLE_INSTALLED_TESTS and helper macros to manage\n\n# installed test. There are also set variables:\n\n# INSTALLED_TESTS_EXEC_DIR - where to store installed tests and eventually its data\n\n# INSTALLED_TESTS_META_DIR - where to store .test meta files for installed tests\n\n#\n\n# install_test_if_enabled(_test_target _type _environ)\n\n#    Adds rules to install a test whose target is _test_target (the one\n\n#    used for add_executable()), while the target name should match\n\n#    the executable name. The _type and _environ are used for populating\n\n#    the .test meta file.\n\n#\n\n# install_behave_tests_if_enabled(_testsvar _type _environ)\n\n#    Adds rules to install the 'behave' tests as stored in _testsvar\n\n#    in the current source directory.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/PkgConfigEx.cmake" : {
      "ObjectId" : "866fe7c0749e726f8e57870d19597ef9838db040",
      "LastModified" : "2016-10-10T12:46:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# PkgConfigEx.cmake\n\n#\n\n# Extends CMake's PkgConfig module with commands:\n\n#\n\n# pkg_check_modules_for_option(_option_name _option_description _prefix _module0)\n\n#\n\n#    which calls `pkg_check_modules(_prefix _module0)` and if <_prefix>_FOUND is False,\n\n#    then prints an error with a hint to disaable the _option_name if needed.\n\n#\n\n# pkg_check_exists(_output_name _pkg)\n\n#\n\n#    calls pkg-config --exists for _pkg and stores the result to _output_name.\n\n#\n\n# pkg_check_at_least_version(_output_name _pkg _version)\n\n#\n\n#    calls pkg-config --at-least-version=_version for _pkg and stores the result to _output_name.\n\n#\n\n# pkg_check_exact_version(_output_name _pkg _version)\n\n#\n\n#    calls pkg-config --exact-version=_version for _pkg and stores the result to _output_name.\n\n#\n\n# pkg_check_variable(_output_name _pkg _name)\n\n#\n\n#    gets a variable named _name from package _pkg and stores the result into _output_name\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Negate the result, because 0 means 'found'\n",
        "Line" : 40,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Negate the result, because 0 means 'found'\n",
        "Line" : 52,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# Negate the result, because 0 means 'found'\n",
        "Line" : 64,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 4
    },
    "cmake/modules/PrintableOptions.cmake" : {
      "ObjectId" : "23ce356991d2761a6bd803b1ae19af6d5f560760",
      "LastModified" : "2016-10-10T12:46:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# PrintableOptions.cmake\n\n#\n\n# Provides functions to manage printable otpions,\n\n# which can be printed at the end of the configuration\n\n#\n\n# add_printable_variable_bare(_name)\n\n#    adds variable named _name to the list of prinable options\n\n#\n\n# add_printable_option(_name _description _default_value)\n\n#    the same as option() commnd, only also notes this option for later printing\n\n#\n\n# add_printable_variable(_name _description _default_value)\n\n#    sets a new cached STRING variable and adds it to the list of printable options\n\n#\n\n# add_printable_variable_path(_name _description _default_value)\n\n#    sets a new cached PATH variable and adds it to the list of printable options\n\n#\n\n# print_build_options()\n\n#    prints all the build options previously added with the above functions\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/SetupBuildFlags.cmake" : {
      "ObjectId" : "284445455a79a98a342958077129e035a916b829",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# SetupBuildFlags.cmake\n\n#\n\n# Setups compiler/linker flags, skipping those which are not supported.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/UninstallTarget.cmake" : {
      "ObjectId" : "7ccfcf39476a8ad9c3cb3e1e42395bd440ff40fa",
      "LastModified" : "2016-10-10T12:46:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# UninstallTarget.cmake\n\n#\n\n# Defines a custom target named 'uninstall'\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "data/CMakeLists.txt" : {
      "ObjectId" : "5f5608a5d28eacf2d5623a1fc8b17bc0e26f2956",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "data/icons/CMakeLists.txt" : {
      "ObjectId" : "d479cd2d06ebce09fb64c15d063f52ae101eb683",
      "LastModified" : "2018-10-30T14:50:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# hicolor_status_16x16_wrapped.png was copied from Firefox\n\n# (toolkit/themes/gnomestripe/global/icons/wrap.png), which\n\n# contained the following notice:\n\n#\n\n#     All files in this directory are assumed to be licensed under the\n\n#     tri-license (MPL/GPL/LGPL) used throughout this codebase.\n\n#\n\n# There is no corresponding SVG file. */\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# These icons were in gnome-icon-theme prior to GNOME 2.30.\n\n# XXX Need to reevaluate which icons we really need and drop the rest.\n\n#     Many are not Tango-compliant and look dated and out of place.\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# These are source files for future editing\n\n# and are not meant to be installed as icons.\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "data/images/CMakeLists.txt" : {
      "ObjectId" : "1d8ee48b4830a2cd72abc1c9a5cf9942771fbc58",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "data/sounds/CMakeLists.txt" : {
      "ObjectId" : "c80e758d77e6f2b63aa58ded81408fe817abaa97",
      "LastModified" : "2016-10-13T07:56:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "data/ui/CMakeLists.txt" : {
      "ObjectId" : "996d072575cbdb62a98f6d77375615abe24947f7",
      "LastModified" : "2016-10-13T07:56:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "data/views/CMakeLists.txt" : {
      "ObjectId" : "0f8a14aa1a51c146b471b3d53471aa5d61fe2549",
      "LastModified" : "2016-10-13T07:56:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "data/views/addressbook/CMakeLists.txt" : {
      "ObjectId" : "d69c2d860421186361e358579e60ba20233739a5",
      "LastModified" : "2016-10-13T07:56:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "data/views/calendar/CMakeLists.txt" : {
      "ObjectId" : "906a2c2609c376c978834681b8b4ecc7bd9f9353",
      "LastModified" : "2016-10-13T07:56:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "data/views/mail/CMakeLists.txt" : {
      "ObjectId" : "e38ec103b996a05246f1b66b277b506b367a29a9",
      "LastModified" : "2016-10-13T07:56:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "data/views/memos/CMakeLists.txt" : {
      "ObjectId" : "457418ebabecd3c1b3253f62294af64c7490014e",
      "LastModified" : "2016-10-13T07:56:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "data/views/tasks/CMakeLists.txt" : {
      "ObjectId" : "1e70f00c18785a4319e23564c136e374ab7191b6",
      "LastModified" : "2016-10-13T07:56:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "docs/CMakeLists.txt" : {
      "ObjectId" : "0bc0820cdd7d8d066a54f7e9eadf7cbbf9630455",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "docs/devel/images/Makefile" : {
      "ObjectId" : "bef9f8bf6203920f8578a4a5b4e3727790b33400",
      "LastModified" : "2016-10-13T07:56:58Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# this is only a temporary makefile\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# you need ps2eps, groff, pnmutils, and ghostscript installed\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "docs/reference/CMakeLists.txt" : {
      "ObjectId" : "872529e026142c4af5f23dc13c178d574acb850d",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# In order as they are built, because GtkDoc requires them to be defined\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "docs/reference/evolution-mail-composer/CMakeLists.txt" : {
      "ObjectId" : "e82ab488251f652d68f21fecf60df60578565c47",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "docs/reference/evolution-mail-engine/CMakeLists.txt" : {
      "ObjectId" : "67f29d5e2a9ecb7e1c34345b1b4e5c793338ea08",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "docs/reference/evolution-mail-formatter/CMakeLists.txt" : {
      "ObjectId" : "e7bcd30699fd95c360a64481f24476ed85e48ed4",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "docs/reference/evolution-shell/CMakeLists.txt" : {
      "ObjectId" : "903d834381c68e5a3a5d703ea07e447216c37e06",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "docs/reference/evolution-util/CMakeLists.txt" : {
      "ObjectId" : "96b06a3654a7f4ec29d5ea93c83845fb9fc16146",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "help/CMakeLists.txt" : {
      "ObjectId" : "5c32df2b7a50b248f315a5b8ff1913c5599730a6",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Pity, no symlink ability here\n",
        "Line" : 298,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "po/CMakeLists.txt" : {
      "ObjectId" : "9e81642a72ed308831aec05fcd05bae11775fb05",
      "LastModified" : "2016-10-13T07:56:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "de2c56914d280c919dd10c39342482a678c5e7f5",
      "LastModified" : "2016-10-13T07:56:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/addressbook/CMakeLists.txt" : {
      "ObjectId" : "b611bc3a2def96591e121c68fb90106f17625bdd",
      "LastModified" : "2016-10-13T07:56:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/addressbook/gui/CMakeLists.txt" : {
      "ObjectId" : "72e429778783f4f3ed4dff44f67faa627fc8304e",
      "LastModified" : "2016-10-13T07:56:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/addressbook/gui/contact-editor/CMakeLists.txt" : {
      "ObjectId" : "aca6e8fba97ee0153fa14782ff3c160d8e126585",
      "LastModified" : "2016-10-13T07:56:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/addressbook/gui/contact-list-editor/CMakeLists.txt" : {
      "ObjectId" : "02d3806143d5463f2756c281d3c051b5f5ae3572",
      "LastModified" : "2016-10-13T07:56:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/addressbook/gui/widgets/CMakeLists.txt" : {
      "ObjectId" : "cc48c41285a1849479b75ce6db43b22672d1c6c5",
      "LastModified" : "2016-10-13T07:56:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/addressbook/importers/CMakeLists.txt" : {
      "ObjectId" : "f8ce9068f0d0c4d476f6b2cdc42e8d4478255600",
      "LastModified" : "2016-10-13T07:56:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/addressbook/printing/CMakeLists.txt" : {
      "ObjectId" : "169c33330de853a61bf95d03dbb718257be27906",
      "LastModified" : "2016-10-13T07:56:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/addressbook/util/CMakeLists.txt" : {
      "ObjectId" : "2753f159a12e5d7ddda82132dd4ad75888fba8c7",
      "LastModified" : "2016-10-13T07:56:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/calendar/CMakeLists.txt" : {
      "ObjectId" : "b9091243f3b32d55f3df28433a40978f53c06d38",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/calendar/gui/CMakeLists.txt" : {
      "ObjectId" : "09cf401d6c46a1fb30bfbbb0bf9ef5f8083e7ce8",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/calendar/importers/CMakeLists.txt" : {
      "ObjectId" : "d0bc817c3334c1e01c34c8876d5f2de46e324e81",
      "LastModified" : "2016-10-13T07:56:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/composer/CMakeLists.txt" : {
      "ObjectId" : "43359201334b64a4cae0b17da2f154ec67a9ef07",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/e-util/CMakeLists.txt" : {
      "ObjectId" : "ceed0a45e284e3ba8e84f0f911ffa7eaed56c119",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Main libevolution-util\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Private gsettings module\n",
        "Line" : 676,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is not meant to be distributed to end users, unless test-html-editor-units\n\n# is also distributed, but even then it can work without it\n",
        "Line" : 686,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Private test programs\n",
        "Line" : 723,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/em-format/CMakeLists.txt" : {
      "ObjectId" : "7b6a3d9b21e464f3c451de5dc43c6c8764c250dc",
      "LastModified" : "2016-10-13T07:56:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/glade/CMakeLists.txt" : {
      "ObjectId" : "c887c6dc899f6b5a3572c94fa8502e17ceacc37e",
      "LastModified" : "2016-10-13T07:56:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# To honor configured prefix, but still use the right place\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/libemail-engine/CMakeLists.txt" : {
      "ObjectId" : "9029cc731792e408894c5b7ceb69de2801e54a82",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/libgnomecanvas/CMakeLists.txt" : {
      "ObjectId" : "6b4f3bfa87cfd3a7e3d0494478d6206ceffb8de2",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/mail/CMakeLists.txt" : {
      "ObjectId" : "a51c1ed251b3b53c96fc17a48fac7bf15607d8c6",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ******************************\n\n# test-mail-autoconfig\n\n# ******************************\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/mail/default/CMakeLists.txt" : {
      "ObjectId" : "1549f2abf3f4a632749aefea93d3282f6afa1871",
      "LastModified" : "2016-10-13T07:56:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/mail/importers/CMakeLists.txt" : {
      "ObjectId" : "a91d1543bb8eb9b42f87f4a924c841ee6f376504",
      "LastModified" : "2016-10-13T07:56:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/CMakeLists.txt" : {
      "ObjectId" : "9e326d99e50b3e0adc964dfe7d30af0ac102a38f",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/accounts-window/CMakeLists.txt" : {
      "ObjectId" : "3f80e7d6e0c50cf99461aedd70be4f6557f0c73a",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/addressbook/CMakeLists.txt" : {
      "ObjectId" : "58d45a2b51fff58fc71973d1ce9026fe44523967",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/alarm-notify/CMakeLists.txt" : {
      "ObjectId" : "0a6020e41aaf9168b155116153a718f5d0b7b5aa",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/backup-restore/CMakeLists.txt" : {
      "ObjectId" : "80a6fa63fec1fa18f9e76827bc05e8de616a30ea",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ******************************\n\n# evolution-backup binary\n\n# ******************************\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/modules/bogofilter/CMakeLists.txt" : {
      "ObjectId" : "858ade307217fac2b2b2623c2066402ba852527f",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/book-config-carddav/CMakeLists.txt" : {
      "ObjectId" : "f8e8e78890a17e2a8366729d58acf5bbc411e3fa",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/book-config-google/CMakeLists.txt" : {
      "ObjectId" : "d455caf0381b1d8676fe2e18153f147d03af5c31",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/book-config-ldap/CMakeLists.txt" : {
      "ObjectId" : "7bcf9ef3f9ae527448c62c6a946dd9206b3b08bd",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/book-config-local/CMakeLists.txt" : {
      "ObjectId" : "f057cbb57a64c50b8f486e1ec1afb7134ec5b219",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/cal-config-caldav/CMakeLists.txt" : {
      "ObjectId" : "cc28d9646c34c8078d2d8deadb378b6fa7e84007",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/cal-config-contacts/CMakeLists.txt" : {
      "ObjectId" : "376f1d8f716cc6f59c6dec804c44832604a329a6",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/cal-config-google/CMakeLists.txt" : {
      "ObjectId" : "48eda74cbb13c7188cff74c6fcdab9bf9d44eccd",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/cal-config-local/CMakeLists.txt" : {
      "ObjectId" : "22f5ab54d0b0f6b8c32a95188f868c3e6b4d819e",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/cal-config-weather/CMakeLists.txt" : {
      "ObjectId" : "b610b0b47947e2d2d5d0de2f9c685b0ed498f86c",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/cal-config-webcal/CMakeLists.txt" : {
      "ObjectId" : "2253a596454c355cb96c2b30322b64d5892e45bb",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/calendar/CMakeLists.txt" : {
      "ObjectId" : "3117326fcc5b6f79e6c98ae673bd5fdd4ec1ae71",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/composer-autosave/CMakeLists.txt" : {
      "ObjectId" : "8cb002788616f822c62252f35ed5eeaa1e60bb79",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/composer-to-meeting/CMakeLists.txt" : {
      "ObjectId" : "3e9c8bd59e9ca43b68dfcaeeeb020cb1583afd37",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/config-lookup/CMakeLists.txt" : {
      "ObjectId" : "fce8536daae99f031e22b1d145badeccd201c4c6",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/contact-photos/CMakeLists.txt" : {
      "ObjectId" : "99372abf20301185344df80b3f251cd1d231071f",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/gravatar/CMakeLists.txt" : {
      "ObjectId" : "150577e9252e329e1f4ef4af558d7be49edc6d98",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/itip-formatter/CMakeLists.txt" : {
      "ObjectId" : "b6f8e19c72c02979c9d7750931cf616690e57fdb",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/itip-formatter/web-extension/CMakeLists.txt" : {
      "ObjectId" : "431004e2defef39990124c2cbc6eb16bd16477fa",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/mail-config/CMakeLists.txt" : {
      "ObjectId" : "da5824978e18d1f68be480ad4d1ff63a513b8fad",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/mail/CMakeLists.txt" : {
      "ObjectId" : "9205b62a4e11cac586331defdcfdbaf4e133a0b9",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/mailto-handler/CMakeLists.txt" : {
      "ObjectId" : "3015b29728d5d0132bc499dc9707b784672dfffd",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/mdn/CMakeLists.txt" : {
      "ObjectId" : "687aca39566ea9268e001f20709a4cca8e2dc0d5",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/offline-alert/CMakeLists.txt" : {
      "ObjectId" : "0e14b31180d5097a206e6813dac2c93fcf4f2124",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/plugin-lib/CMakeLists.txt" : {
      "ObjectId" : "f21059abe2bb2f34038b9cb035f2e51cbbe6fd17",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/plugin-manager/CMakeLists.txt" : {
      "ObjectId" : "c960500f1129d536184203f25b13c7a8ae81144f",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/prefer-plain/CMakeLists.txt" : {
      "ObjectId" : "44e9e5998d3140ae3b9570d931ef93359f9daa27",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/prefer-plain/plugin/CMakeLists.txt" : {
      "ObjectId" : "503497de8ac06badd333f08190c94971e73a33d6",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/settings/CMakeLists.txt" : {
      "ObjectId" : "5d6d38ddf42811f49813309f14cfd67a53b38e6e",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/spamassassin/CMakeLists.txt" : {
      "ObjectId" : "624f456957b366b205af171ceca1d277098a6fb2",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/startup-wizard/CMakeLists.txt" : {
      "ObjectId" : "cb54eec4215ccdc107f9dc1b33290fdf0e176456",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/text-highlight/CMakeLists.txt" : {
      "ObjectId" : "c4634671c4aafe073915e3ee22f363cd13b48554",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/tnef-attachment/CMakeLists.txt" : {
      "ObjectId" : "afea03bdaffb5300bc60092ec08d5d7e8f5d6193",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/vcard-inline/CMakeLists.txt" : {
      "ObjectId" : "64474f23d4b69b74a517e72f949b9ff66257c7da",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/webkit-editor/CMakeLists.txt" : {
      "ObjectId" : "3dadd07bf095bcecaac25351a6965ddfc5739dbc",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/webkit-editor/web-extension/CMakeLists.txt" : {
      "ObjectId" : "a7f07ff742652d951a800e604b5dd008b09e9800",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/webkit-inspector/CMakeLists.txt" : {
      "ObjectId" : "5b8bfbde2a6599c6cb68719b8827746f5bdd0db4",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/plugins/CMakeLists.txt" : {
      "ObjectId" : "69239fa902718d8c45dea0144dd44c7740411bce",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/plugins/attachment-reminder/CMakeLists.txt" : {
      "ObjectId" : "fcde9d1b7988bf3a3b47095e0c889a91357c244e",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/plugins/bbdb/CMakeLists.txt" : {
      "ObjectId" : "9b2b4cae022a18be68a53f233e4a7cb99cb4330e",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/plugins/dbx-import/CMakeLists.txt" : {
      "ObjectId" : "3458b09462e2796164b3bf4a7e473391c9fde365",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/plugins/email-custom-header/CMakeLists.txt" : {
      "ObjectId" : "f1c6956e9be0dd45f7dfbf416ad29d62635b78c2",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/plugins/external-editor/CMakeLists.txt" : {
      "ObjectId" : "471c43d1d5f6b1f99abcb7ce22001adb56d548ae",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/plugins/face/CMakeLists.txt" : {
      "ObjectId" : "af98d5a54c7d2a7c083dffd750f7bb97746f8149",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/plugins/mail-notification/CMakeLists.txt" : {
      "ObjectId" : "6cb333a42075364f370767a531c1f3f118c342d2",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/plugins/mail-to-task/CMakeLists.txt" : {
      "ObjectId" : "6ea3c4fad50d72284caed47e8e9bbcfe6f6744e5",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/plugins/mailing-list-actions/CMakeLists.txt" : {
      "ObjectId" : "b332772227b742aea1a9f0fa6fec503bbce86e32",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/plugins/pst-import/CMakeLists.txt" : {
      "ObjectId" : "e8bb55e86750c3ead78950dbc63f41094e5f8501",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/plugins/publish-calendar/CMakeLists.txt" : {
      "ObjectId" : "5980835b69cc9b367f99950b599782149bdc86c7",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/plugins/save-calendar/CMakeLists.txt" : {
      "ObjectId" : "6dd30c6e62f4ac93b47aadc12c7af05c12ffbd35",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/plugins/templates/CMakeLists.txt" : {
      "ObjectId" : "29c67c8cfc7e1b1a6773d42c527fba67d036323a",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/shell/CMakeLists.txt" : {
      "ObjectId" : "1eb839d8a13ae7b1b1eddf59a069d00337da05e4",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ******************************\n\n# evolution-shell library\n\n# ******************************\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ******************************\n\n# evolution binary\n\n# ******************************\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ******************************\n\n# killev binary\n\n# ******************************\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/smime/CMakeLists.txt" : {
      "ObjectId" : "bd5d12239a7d6119ac1a0ae1fd41af1803bebceb",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/smime/gui/CMakeLists.txt" : {
      "ObjectId" : "5efcb4232abd0da3a1c3a3496c703427fa4f10e6",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/smime/lib/CMakeLists.txt" : {
      "ObjectId" : "0826c417fdd85cbf2f57d9e7f9f05daa5b5a630c",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/web-extensions/CMakeLists.txt" : {
      "ObjectId" : "9e5c03d1874fefa73502e45339977eefdb59d167",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "ce001775d57dac80efad6482ef38f9239619cb97",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "win32/Makefile" : {
      "ObjectId" : "13bf5aaade82588dd1bae102db567e75c48eb366",
      "LastModified" : "2019-04-12T10:06:07Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# use `make V=1` to get verbose build\r\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Shortcuts\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# !!! TODO !!! FixMe !!! TODO !!!\r\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# to be able to call ./autogen.sh\r\n",
        "Line" : 622,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    }
  },
  "FileTypes" : {
    "CMAKE" : 119,
    "MAKEFILE" : 2
  },
  "ElapsedTime" : 19393
}