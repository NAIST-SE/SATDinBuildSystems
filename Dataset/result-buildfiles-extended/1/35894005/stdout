{
  "Repository" : "35894005",
  "Revision" : "HEAD",
  "ObjectId" : "04a56f4c33acd14cfb446cf7ea666e6a7a16958d",
  "CommitTime" : "2018-12-14T23:48:40Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "9a9c2edce018f99d94997ecddecdf6f1fca49fd8",
      "LastModified" : "2018-05-26T10:29:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License\n\n#\n\n# Copyright (C) 2018 Alexander Saprykin <saprykin.spb@gmail.com>\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining\n\n# a copy of this software and associated documentation files (the\n\n# 'Software'), to deal in the Software without restriction, including\n\n# without limitation the rights to use, copy, modify, merge, publish,\n\n# distribute, sublicense, and/or sell copies of the Software, and to\n\n# permit persons to whom the Software is furnished to do so, subject to\n\n# the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be\n\n# included in all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\n\n# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\n# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n\n# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n\n# CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n\n# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n\n# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/PlatformDetect.cmake" : {
      "ObjectId" : "ab05065602afd194d00f816c4a637b706397e3eb",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License\n\n#\n\n# Copyright (C) 2018 Alexander Saprykin <saprykin.spb@gmail.com>\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining\n\n# a copy of this software and associated documentation files (the\n\n# 'Software'), to deal in the Software without restriction, including\n\n# without limitation the rights to use, copy, modify, merge, publish,\n\n# distribute, sublicense, and/or sell copies of the Software, and to\n\n# permit persons to whom the Software is furnished to do so, subject to\n\n# the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be\n\n# included in all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\n\n# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\n# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n\n# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n\n# CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n\n# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n\n# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Get target system OS\n",
        "Line" : 25,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# Detect C compiler by it's ID\n",
        "Line" : 28,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Fix gcc -> qcc naming on QNX 6\n",
        "Line" : 37,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Rename intel -> icc\n",
        "Line" : 42,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Rename openwatcom -> watcom\n",
        "Line" : 47,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Rename xl -> xlc\n",
        "Line" : 52,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Assign result\n",
        "Line" : 57,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# Rename mingw -> windows\n",
        "Line" : 103,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Rename hp-ux -> hpux\n",
        "Line" : 108,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Rename sco_sv -> scosv\n",
        "Line" : 113,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# Rename osf1 -> tru64\n",
        "Line" : 118,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# Rename craylinuxenvironment -> linux\n",
        "Line" : 123,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 13
    },
    "cmake/StdargDetect.cmake" : {
      "ObjectId" : "d9037fb870e667ffc8fb265e8efa253896ca02f7",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License\n\n#\n\n# Copyright (C) 2017 Jean-Damien Durand <jeandamiendurand@gmail.com>\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining\n\n# a copy of this software and associated documentation files (the\n\n# 'Software'), to deal in the Software without restriction, including\n\n# without limitation the rights to use, copy, modify, merge, publish,\n\n# distribute, sublicense, and/or sell copies of the Software, and to\n\n# permit persons to whom the Software is furnished to do so, subject to\n\n# the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be\n\n# included in all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\n\n# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\n# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n\n# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n\n# CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n\n# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n\n# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# On platforms that supports va_start() and al.\n\n# there is sometimes the need to do va_copy() when\n\n# calling another va_list aware function.\n\n#\n\n# This means that va_copy() is not needed (thus not available)\n\n# everywhere.\n\n#\n\n# We depend on stdarg.h in any case, stdio.h in some cases.\n\n#\n\n# Known implementations vary from va_copy to __va_copy (old proposed name).\n\n# We check the _va_copy eventually.\n\n#\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Assign result\n",
        "Line" : 69,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "cmake/VisibilityDetect.cmake" : {
      "ObjectId" : "cbf23cd63bee69b5303124d412fdb67488ddbb28",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License\n\n#\n\n# Copyright (C) 2018 Alexander Saprykin <saprykin.spb@gmail.com>\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining\n\n# a copy of this software and associated documentation files (the\n\n# 'Software'), to deal in the Software without restriction, including\n\n# without limitation the rights to use, copy, modify, merge, publish,\n\n# distribute, sublicense, and/or sell copies of the Software, and to\n\n# permit persons to whom the Software is furnished to do so, subject to\n\n# the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be\n\n# included in all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\n\n# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\n# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n\n# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n\n# CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n\n# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n\n# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check GCC\n",
        "Line" : 31,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# Check Sun Studio\n",
        "Line" : 54,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Check IBM XL C\n",
        "Line" : 72,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Check HP C/aC++\n",
        "Line" : 89,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Check Clang\n",
        "Line" : 107,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Empty result\n",
        "Line" : 124,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 7
    },
    "platforms/aix-gcc/platform.cmake" : {
      "ObjectId" : "be1d25a414f2fc58546f468df37f672372547a62",
      "LastModified" : "2017-10-24T13:35:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "platforms/amigaos-gcc/Platform/AmigaOS.cmake" : {
      "ObjectId" : "2889670102cc0e03136d59a377a3a4fa9a87f134",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is a dummy file to suppress CMake warnings about unknown platform.\n\n# As we are doing it during cross-compilation, it is completely fine.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "platforms/amigaos-gcc/amigaos.cmake" : {
      "ObjectId" : "df2b968d116d6d76d5e32a678f3a7102cfa51640",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# In order to suppress CMake warnings about unknown platform\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "platforms/amigaos-gcc/platform.cmake" : {
      "ObjectId" : "2e589e3275fb69302e5b70c3a7dfa4686fe8688b",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "platforms/android-clang/platform.cmake" : {
      "ObjectId" : "3295b5c9da34b3d32a9847bd5e85ec84c7517865",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "platforms/android-gcc/platform.cmake" : {
      "ObjectId" : "3295b5c9da34b3d32a9847bd5e85ec84c7517865",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "platforms/bb10-qcc/blackberry.cmake" : {
      "ObjectId" : "6509d24043bed5323e41571feb6760858730076c",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# To remove full linking paths\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# To distinguish from QNX \n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "platforms/beos-gcc/platform.cmake" : {
      "ObjectId" : "502313f4ba0795e49b21ed91ce2e29c5e1755589",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "platforms/common/HPUX.cmake" : {
      "ObjectId" : "d41106611747f8ca1c2648bbab7c4ba27a5c9d33",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "platforms/common/SCOSV.cmake" : {
      "ObjectId" : "6ef24163cda4be6843bddfd3b11868c0aa9bb755",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "platforms/cygwin-clang/platform.cmake" : {
      "ObjectId" : "177a8c61b7bbfefc62095c886cb504b5fc0d8bad",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "platforms/cygwin-gcc/platform.cmake" : {
      "ObjectId" : "177a8c61b7bbfefc62095c886cb504b5fc0d8bad",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "platforms/darwin-clang/platform.cmake" : {
      "ObjectId" : "38771bec6e8ee66742232cfa6dda0b9bfe997d43",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "platforms/darwin-gcc/platform.cmake" : {
      "ObjectId" : "38771bec6e8ee66742232cfa6dda0b9bfe997d43",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "platforms/darwin-icc/platform.cmake" : {
      "ObjectId" : "7b69004775b214b4a78197cbff1045858507cf00",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "platforms/darwin-pgi/platform.cmake" : {
      "ObjectId" : "791ff79adcf2425f0b1f16f108d11dad413ce6df",
      "LastModified" : "2018-05-25T13:58:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "platforms/dragonfly-clang/platform.cmake" : {
      "ObjectId" : "b801c3e33c640e1d5951a18a8bc3795c270b604a",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "platforms/dragonfly-gcc/platform.cmake" : {
      "ObjectId" : "b801c3e33c640e1d5951a18a8bc3795c270b604a",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "platforms/freebsd-clang/platform.cmake" : {
      "ObjectId" : "975c5df0d4b10266ea8119aafaf70745ae317820",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "platforms/freebsd-gcc/platform.cmake" : {
      "ObjectId" : "975c5df0d4b10266ea8119aafaf70745ae317820",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "platforms/haiku-clang/platform.cmake" : {
      "ObjectId" : "0c93b2d03f5408233ea3e794fbc0c0f4cc324f89",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "platforms/haiku-gcc/platform.cmake" : {
      "ObjectId" : "0c93b2d03f5408233ea3e794fbc0c0f4cc324f89",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "platforms/hpux-gcc/platform.cmake" : {
      "ObjectId" : "bfaa7d81aaac3bee87c98512efa410d12538b8a3",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "platforms/ios-clang/ios.cmake" : {
      "ObjectId" : "e0df03bd9a87dce25aa83a186f10bd4f87851ae7",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2014, Bogdan Cristea and LTE Engineering Software,\n\n# Kitware, Inc., Insight Software Consortium.  All rights reserved.\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# 1. Redistributions of source code must retain the above copyright\n\n# notice, this list of conditions and the following disclaimer.\n\n#\n\n# 2. Redistributions in binary form must reproduce the above copyright\n\n# notice, this list of conditions and the following disclaimer in the\n\n# documentation and/or other materials provided with the distribution.\n\n#\n\n# 3. Neither the name of the copyright holder nor the names of its\n\n# contributors may be used to endorse or promote products derived from\n\n# this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\n\n# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n\n# COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n\n# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n\n# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n\n# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\n\n# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n# Updated by Alex Stewart (alexs.mac@gmail.com)\n\n#\n\n# *****************************************************************************\n\n#      Now maintained by Alexander Widerberg (widerbergaren [at] gmail.com)\n\n#                      under the BSD-Clause-3 licence\n\n# *****************************************************************************\n\n#\n\n#                           INFORMATION / HELP\n\n#\n\n# The following variables control the behaviour of this toolchain:\n\n#\n\n# IOS_PLATFORM: OS (default), SIMULATOR, SIMULATOR64, TVOS or SIMULATOR_TVOS\n\n#    OS = Build for iOS.\n\n#    SIMULATOR = Build for x86 iPhone simulator.\n\n#    SIMULATOR64 = Build for x64 iPhone simulator.\n\n#    TVOS = Build for Apple tvOS.\n\n#    SIMULATOR_TVOS = Build for x64 Apple TV Simulator.\n\n#    WATCHOS = Build for Apple watchOS.\n\n#    SIMULATOR_WATCHOS = Build for x86 watchOS Simulator.\n\n#    SIMULATOR64_WATCHOS = Build for x64 watchOS Simulator.\n\n# IOS_DEPLOYMENT_TARGET: Minimum version for deployment target.\n\n# CMAKE_OSX_SYSROOT: Path to the iOS SDK to use. By default this is\n\n#    automatically determined from IOS_PLATFORM and xcodebuild, but can also be\n\n#    manually specified (although this should not be required).\n\n# CMAKE_IOS_DEVELOPER_ROOT: Path to the Developer directory for the iOS\n\n#    platform being compiled for. By default this is automatically determined\n\n#    from CMAKE_OSX_SYSROOT, but can also be manually specified (although this\n\n#    should not be required).\n\n# ENABLE_BITCODE: (ON / OFF) Enables or disables bitcode support. Default: ON.\n\n# ENABLE_ARC: (ON / OFF) Enables or disables ARC support. Default: ON.\n\n# IOS_ARCH: (armv7 armv7s armv7k arm64 i386 x86_64) If specified, will override the\n\n#    default architectures for the given IOS_PLATFORM. Default architectures:\n\n#    OS = armv7 armv7s arm64\n\n#    SIMULATOR = i386\n\n#    SIMULATOR64 = x86_64\n\n#    TVOS = arm64\n\n#    SIMULATOR_TVOS = x86_64\n\n#    WATCHOS = armv7k\n\n#    SIMULATOR_WATCHOS = i386\n\n#    SIMULATOR64_WATCHOS = x86_64\n\n#\n\n# Copyright 2018, Alexander Saprykin <saprykin.spb@gmail.com>\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Get the Xcode version being used.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Default to building for iOS if not specified otherwise, and we cannot\n\n# determine the platform from the CMAKE_OSX_ARCHITECTURES variable. The use\n\n# of CMAKE_OSX_ARCHITECTURES is such that try_compile() projects can correctly\n\n# determine the value of IOS_PLATFORM from the root project, as\n\n# CMAKE_OSX_ARCHITECTURES is propagated to them by CMake.\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Determine the platform name and architectures for use in xcodebuild commands\n\n# from the specified IOS_PLATFORM name.\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# If user did not specify the SDK root to use, then query xcodebuild for it.\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Specify minimum version of deployment target.\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# iOS 11 does not support 32-bit (armv7*).\n",
        "Line" : 198,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Use bitcode or not\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Unless specified, enable bitcode support by default\n",
        "Line" : 215,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Use ARC or not\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Unless specified, enable ARC support by default\n",
        "Line" : 223,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# Get the SDK version information.\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Find the Developer root for the specific iOS platform being compiled for\n\n# from CMAKE_OSX_SYSROOT. Should be ../../ from SDK specified in\n\n# CMAKE_OSX_SYSROOT. There does not appear to be a direct way to obtain\n\n# this information from xcrun or xcodebuild.\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Find the C & C++ compilers for the specified SDK.\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Find (Apple's) libtool.\n",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Configure libtool to be used instead of ar + ranlib to build static libraries.\n\n# This is required on Xcode 7+, but should also work on previous versions of\n\n# Xcode.\n",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Standard settings.\n",
        "Line" : 279,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Force unset of OS X-specific deployment target (otherwise autopopulated),\n\n# required as of cmake 2.8.10.\n",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Set the architectures for which to build.\n",
        "Line" : 294,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# All iOS/Darwin specific settings - some may be redundant.\n",
        "Line" : 298,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Note that only Xcode 7+ supports the newer more specific:\n\n# -m${XCODE_IOS_PLATFORM}-version-min flags, older versions of Xcode use:\n\n# -m(ios/ios-simulator)-version-min instead.\n",
        "Line" : 314,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Xcode 7.0+ uses flags we can build directly from XCODE_IOS_PLATFORM.\n",
        "Line" : 321,
        "CharPositionInLine" : 16
      },
      "22" : {
        "Text" : "# SIMULATOR or SIMULATOR64 both use -mios-simulator-version-min.\n",
        "Line" : 333,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "# In order to ensure that the updated compiler flags are used in try_compile()\n\n# tests, we have to forcibly set them in the CMake cache, not merely set them\n\n# in the local scope.\n",
        "Line" : 360,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Hack: If a new CMake (which uses CMAKE_INSTALL_NAME_TOOL) runs on an old\n\n# build tree (where install_name_tool was hardcoded) and where\n\n# CMAKE_INSTALL_NAME_TOOL isn't in the cache and still CMake didn't fail in\n\n# CMakeFindBinUtils.cmake (because it isn't rerun) hardcode\n\n# CMAKE_INSTALL_NAME_TOOL here to install_name_tool, so it behaves as it did\n\n# before, Alex.\n",
        "Line" : 385,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Set the find root to the iOS developer roots and to user defined paths.\n",
        "Line" : 396,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Default to searching for frameworks first.\n",
        "Line" : 403,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Set up the default search directories for frameworks.\n",
        "Line" : 407,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Only search the specified iOS SDK, not the remainder of the host filesystem.\n",
        "Line" : 415,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 29
    },
    "platforms/ios-clang/platform.cmake" : {
      "ObjectId" : "38771bec6e8ee66742232cfa6dda0b9bfe997d43",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "platforms/irix64-gcc/platform.cmake" : {
      "ObjectId" : "1a7e78e808fb1a4f182530232b4120b8bb98fc21",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "platforms/irix64-mipspro/platform.cmake" : {
      "ObjectId" : "1a7e78e808fb1a4f182530232b4120b8bb98fc21",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "platforms/linux-clang/platform.cmake" : {
      "ObjectId" : "b73cab77d84465926dd9519cc5c8fd9ae2e8ac66",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "platforms/linux-cray/platform.cmake" : {
      "ObjectId" : "3ec77b659dfd17bf34eae9320307694b9ed8d3a2",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "platforms/linux-gcc/platform.cmake" : {
      "ObjectId" : "b73cab77d84465926dd9519cc5c8fd9ae2e8ac66",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "platforms/linux-icc/platform.cmake" : {
      "ObjectId" : "59aa1d797e48f0e9e15a68919833be648cc3e188",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "platforms/linux-pgi/platform.cmake" : {
      "ObjectId" : "639223f1bc6f7c9d5e939f88a5f7e515450be665",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "platforms/linux-xlc/platform.cmake" : {
      "ObjectId" : "1ea7f1a037785402b0e53868dc80ecf787092f48",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "platforms/msys-clang/platform.cmake" : {
      "ObjectId" : "177a8c61b7bbfefc62095c886cb504b5fc0d8bad",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "platforms/msys-gcc/platform.cmake" : {
      "ObjectId" : "177a8c61b7bbfefc62095c886cb504b5fc0d8bad",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "platforms/netbsd-clang/platform.cmake" : {
      "ObjectId" : "975c5df0d4b10266ea8119aafaf70745ae317820",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "platforms/netbsd-gcc/platform.cmake" : {
      "ObjectId" : "975c5df0d4b10266ea8119aafaf70745ae317820",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "platforms/openbsd-clang/platform.cmake" : {
      "ObjectId" : "975c5df0d4b10266ea8119aafaf70745ae317820",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "platforms/openbsd-gcc/platform.cmake" : {
      "ObjectId" : "975c5df0d4b10266ea8119aafaf70745ae317820",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "platforms/os2-gcc/platform.cmake" : {
      "ObjectId" : "258bbb5490449ddd6845d4c73d457ab8597a4f49",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "platforms/qnx-qcc/platform.cmake" : {
      "ObjectId" : "de75bc2432abe1ffd8a25cd15aff011b93430138",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "platforms/scosv-gcc/platform.cmake" : {
      "ObjectId" : "d1a2d8d84c020170a118e9660116085338bac3af",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "platforms/sunos-gcc/platform.cmake" : {
      "ObjectId" : "a980d6ee39e10a0e2a57259a96537cdc417f61b4",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "platforms/sunos-sunpro/platform.cmake" : {
      "ObjectId" : "a980d6ee39e10a0e2a57259a96537cdc417f61b4",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "platforms/syllable-gcc/platform.cmake" : {
      "ObjectId" : "a61e1e0d8b6bb3cc4d07fe3761ce67d8137d9120",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "platforms/tru64-compaq/platform.cmake" : {
      "ObjectId" : "693ba57368b8fe7d29e0abb25364b5a634a9f482",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "platforms/tru64-gcc/platform.cmake" : {
      "ObjectId" : "ecacc1df15564bcd1f63d6abc7347b2a4681ef01",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "platforms/unixware-gcc/platform.cmake" : {
      "ObjectId" : "96ca256e0d829e0ef08dc2dc3031227035b3190c",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "platforms/win32-borland/platform.cmake" : {
      "ObjectId" : "564ae9a3d401e393a8ffc08c293c4ff66a1ccf3c",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "platforms/win32-clang/platform.cmake" : {
      "ObjectId" : "bd115ff763dbaa8daa92eab879874f78a3f29275",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "platforms/win32-gcc/platform.cmake" : {
      "ObjectId" : "05ac5d8c7a68d18527185eccb73337f4f1aba59c",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "platforms/win32-icc/platform.cmake" : {
      "ObjectId" : "05ac5d8c7a68d18527185eccb73337f4f1aba59c",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "platforms/win32-msvc/platform.cmake" : {
      "ObjectId" : "05ac5d8c7a68d18527185eccb73337f4f1aba59c",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "platforms/win32-watcom/platform.cmake" : {
      "ObjectId" : "ef5a8550b3e49fcd5e5429e9d49986276c205acf",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "platforms/win64-clang/platform.cmake" : {
      "ObjectId" : "bd115ff763dbaa8daa92eab879874f78a3f29275",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "platforms/win64-gcc/platform.cmake" : {
      "ObjectId" : "05ac5d8c7a68d18527185eccb73337f4f1aba59c",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "platforms/win64-icc/platform.cmake" : {
      "ObjectId" : "05ac5d8c7a68d18527185eccb73337f4f1aba59c",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "platforms/win64-msvc/platform.cmake" : {
      "ObjectId" : "05ac5d8c7a68d18527185eccb73337f4f1aba59c",
      "LastModified" : "2018-05-23T21:51:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "e0cab857da4cf30e151f3abc50b66d23d767257c",
      "LastModified" : "2018-12-14T23:48:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License\n\n#\n\n# Copyright (C) 2018 Alexander Saprykin <saprykin.spb@gmail.com>\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining\n\n# a copy of this software and associated documentation files (the\n\n# 'Software'), to deal in the Software without restriction, including\n\n# without limitation the rights to use, copy, modify, merge, publish,\n\n# distribute, sublicense, and/or sell copies of the Software, and to\n\n# permit persons to whom the Software is furnished to do so, subject to\n\n# the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be\n\n# included in all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\n\n# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\n# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n\n# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n\n# CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n\n# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n\n# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# First of all, detect size of the pointer for the target machine.\n\n# We can't rely on CMAKE_SIZEOF_VOID_P when building universal\n\n# binaries.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Without generated code multi-arch builds are not supported anyway,\n\n# so the best we can do is to fallback to detected size values\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Try to detect target platform\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# CMP0042, see http://www.cmake.org/Wiki/CMake_RPATH_handling\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Fix runtime paths on macOS 10.5 and less\n",
        "Line" : 86,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Save compiler flags\n",
        "Line" : 243,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# GCC __atomic* intrinsics\n",
        "Line" : 258,
        "CharPositionInLine" : 16
      },
      "8" : {
        "Text" : "# GCC __sync* intinsics\n",
        "Line" : 282,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Check for anonymous mmap()\n",
        "Line" : 381,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Check for clock_nanosleep() call\n",
        "Line" : 416,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# Check for nanosleep() call\n",
        "Line" : 435,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# Prefere clock_nanosleep() over nanosleep() for power consumption\n",
        "Line" : 455,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# Check for getaddrinfo() call\n",
        "Line" : 462,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Some systems only need the difinition to be available\n",
        "Line" : 495,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# Check for thread scheduling\n",
        "Line" : 504,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# Check for thread stack size\n",
        "Line" : 531,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# Some platforms may have headers, but lack actual implementation,\n\n# thus we can let platform to override read-write lock model with\n\n# general implementation\n",
        "Line" : 554,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Check for read-write lock support\n",
        "Line" : 559,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# Check for socklen_t definition\n",
        "Line" : 595,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Check for sockaddr_storage structure\n",
        "Line" : 614,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Check sa_len field in struct sockaddr\n",
        "Line" : 635,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Check sin6_scope_id field in struct sockaddr_in6\n",
        "Line" : 656,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Check sin6_flowinfo field in struct sockaddr_in6\n",
        "Line" : 677,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Check sa_family_t type size in struct sockaddr\n",
        "Line" : 698,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Check for lldiv() call\n",
        "Line" : 719,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Symbols visibility attributes\n",
        "Line" : 742,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Variable arguments\n",
        "Line" : 763,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Restore compiler flags\n",
        "Line" : 773,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Disable useless warnings\n",
        "Line" : 778,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Prepare compile definitions\n",
        "Line" : 784,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Add targets\n",
        "Line" : 791,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Add include directories\n",
        "Line" : 798,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Add compile definitions\n",
        "Line" : 809,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Prepare installation dirs\n",
        "Line" : 892,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Print summary\n",
        "Line" : 930,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 36
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "54f747b3c9f21929068f4b967987a538bd7130d2",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License\n\n#\n\n# Copyright (C) 2018 Alexander Saprykin <saprykin.spb@gmail.com>\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining\n\n# a copy of this software and associated documentation files (the\n\n# 'Software'), to deal in the Software without restriction, including\n\n# without limitation the rights to use, copy, modify, merge, publish,\n\n# distribute, sublicense, and/or sell copies of the Software, and to\n\n# permit persons to whom the Software is furnished to do so, subject to\n\n# the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be\n\n# included in all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\n\n# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\n# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n\n# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n\n# CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n\n# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n\n# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# QNX requires libm for sqrt() and friends\n",
        "Line" : 41,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# Add include directories\n",
        "Line" : 46,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Add compile definitions\n",
        "Line" : 53,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 4
    }
  },
  "FileTypes" : {
    "CMAKE" : 64
  },
  "ElapsedTime" : 957
}