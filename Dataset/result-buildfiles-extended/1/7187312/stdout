{
  "Repository" : "7187312",
  "Revision" : "HEAD",
  "ObjectId" : "6706b073ee8fb505f32855d200af9012ea187b40",
  "CommitTime" : "2018-06-19T19:01:34Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "863fb80148777801b6029936d73fbf0861014831",
      "LastModified" : "2018-06-19T19:01:34Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# The tests work in JAR's setup...\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#  $^ = all prerequisites\n\n#  $< = first prerequisite\n\n#  $@ = file name of target\n\n#  $(*F) = The directory part and the file-within-directory part of\n\n#    the stem (stem = % in pattern rules)\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Modify as appropriate to your own hardware - I set it one or two Gbyte\n\n# below physical memory size\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# External URLs.  These may change from time to time\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ----- Version selection -----\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ----- Taxonomy source locations -----\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Where to put tarballs\n\n#TARDIR=/raid/www/roots/opentree/ott\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# -----\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Smasher related configuration\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ----- Targets\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# The open tree reference taxonomy\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# for debugging\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# The works\n\n# Reinstate later: r/ott-NEW/source/debug/otu_differences.tsv\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# kludge - it's set as a dependency in properties.json, but doesn't live in r/\n\n# (needed for idlist)\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# ----- Taxonomy sources\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# N.b. unpack-archive will fetch an archive if there isn't one already\n\n# there\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Pattern rules!\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# From the gnu make manual, re pattern rules:\n\n# \"all of its prerequisites (after pattern substitution) must name\n\n# files that exist or can be made\"\n\n# For our purposes this means most pattern rules should have zero\n\n# prerequisistes.\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# My experience is that this is not true.  The pattern rule won't\n\n# apply even if the prerequisiste *can* be made.\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# \"It is possible that more than one pattern rule will meet these\n\n# criteria. In that case, make will choose the rule with the\n\n# shortest stem (that is, the pattern that matches most\n\n# specifically). If more than one pattern rule has the shortest\n\n# stem, make will choose the first one found in the makefile.\"\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# unpack does a fetch, if necessary\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# (why doesn't this just use bin/set-head?)\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# store does a pack, if necessary\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Not quite right... need to handle draft releases\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# --- Source: SILVA\n\n# Significant tabs !!!\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Silva 115: 206M uncompresses to 817M\n\n# issue #62 - verify  (is it a tsv file or csv file?)\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Create the taxonomy import files from the no_sequences digest & accessions\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Get taxon names from Genbank accessions file.\n\n# The accessions file has genbank id, ncbi id, strain, taxon name.\n\n# -- it seems the accessions file now has taxon names, so we\n\n# probably don't need to take NCBI taxonomy as an input.\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Refresh from web.\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Digestify fasta file and create sources for archive\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Get the fasta file (big; for release 128, it's 150M)\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Figure out which release we want, before downloading, by scanning the index.html file\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# --- Source: Digest of genbank sequence records\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# -rw-r--r--+ 1 jar  staff  17773988 Dec 16 19:38 feed/silva/work/accessions.tsv\n\n# -rw-r--r--+ 1 jar  staff   6728426 Dec  2 22:42 feed/silva/accessionid_to_taxonid.tsv\n\n# -rw-r--r--+ 1 jar  staff      6573 Jun 28  2016 feed/genbank/accessionFromGenbank.py\n\n# -rw-r--r--+ 1 jar  staff      1098 Oct  7  2015 feed/genbank/makeaccessionid2taxonid.py\n\n#\n\n# accessionFromGenbank.py reads genbank and writes Genbank.pickle\n\n# makeaccessionid2taxonid.py reads Genbank.pickle writes accessionid_to_taxonid.tsv\n\n#\n\n# feed/silva/accessionid_to_taxonid.tsv:\n\n#   As of 2017-04-25, this file was in the repository.  6.7M\n\n#   It's an input to the SILVA build.\n\n#   It really ought to be versioned and archived.\n\n#   Originally made: 30 Nov 2013\n\n#\n\n# accessions.tsv not in repo, is more recent, includes taxon name and a column for strain.\n\n# Created before 6 July 2016, don't know when.  But none of the rows have strain info.\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# This takes a long time - reads every flat file in genbank\n\n# Also - be sure to update RANGES in accessionFromGenbank.py, so you\n\n# don't miss any genbank records!  Manual process now, could be \n\n# automated.\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Alert: sometimes we might want silva-NEW instead of silva-HEAD\n",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# --- Source: Index Fungorum in Open Tree form\n",
        "Line" : 297,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# How fung-9 was created:\n\n# import_scripts/fung/cobble_fung.py \n\n#   which reads fung-4, fung-2, fung-1\n\n#\n\n# The earlier versions were created using various versions of the\n\n# feed/if.py (process_fungorum.py) script, operating on various files\n\n# from Paul Kirk as unput.\n",
        "Line" : 318,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# --- Source: WoRMS in Open Tree form\n",
        "Line" : 326,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Make resource (i.e. taxonomy) from source (digest of WoRMS API traversal)\n",
        "Line" : 328,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# --- Source: NCBI Taxonomy\n",
        "Line" : 348,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Build resource from source.\n\n# Formerly (version 1.0), where we now have /dev/null, we had\n\n# ../data/ncbi/ncbi.taxonomy.homonym.ids.MANUAL_KEEP\n",
        "Line" : 350,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Refresh source from web.  Source depends on archive.\n\n# Override default pattern rule (archive instead of source).\n",
        "Line" : 363,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# --- Source: GBIF\n",
        "Line" : 386,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Formerly, where it says /dev/null, we had ../data/gbif/ignore.txt\n",
        "Line" : 388,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Get a new GBIF from the web and store to r/gbif-HEAD/archive/archive.zip\n",
        "Line" : 407,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Was http://ecat-dev.gbif.org/repository/export/checklist1.zip\n\n# Could be http://rs.gbif.org/datasets/backbone/backbone.zip\n\n# 2016-05-17 purl.org is broken, cannot update this link\n\n# GBIF_URL=http://purl.org/opentree/gbif-backbone-2013-07-02.zip\n",
        "Line" : 409,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# should be very similar to IRMNG\n",
        "Line" : 414,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# --- Source: IRMNG\n",
        "Line" : 437,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Build IRMNG from Tony's .csv files\n\n#  should be mostly the same as for GBIF\n\n# Refresh makes archive instead of source\n",
        "Line" : 451,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# --- Source: EOL page ids\n",
        "Line" : 476,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# From Yan Wong:\n\n#  ((('ncbi', 1172), ('if', 596), ('worms', 123), ('irmng', 1347), ('gbif', 800)))\n",
        "Line" : 489,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# Haven't figure out how to automate the download yet.  The site uses\n\n# some screwy javascript that seems to require manual operation.\n",
        "Line" : 492,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# --- Source: Open Tree curated amendments\n",
        "Line" : 518,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# Note, no dependence on /source/.\n\n# A dependence on /source/ would attempt archive retrieval, which would fail.\n",
        "Line" : 520,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# Recursive make is not generally recommended, but don't see what else\n\n# to do in this case.  We don't want HEAD to depend (in the Makefile\n\n# sense) on PREVIOUS, since otherwise a demand for HEAD would force\n\n# a retrieval of PREVIOUS, which is not always what we want.\n",
        "Line" : 526,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# New version: fetch from github\n",
        "Line" : 536,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# Local clone\n",
        "Line" : 552,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# --- Source: OTT id list compiled from all previous OTT versions\n",
        "Line" : 560,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# When we build OTT 3.1, we need idlist-3.0, but we have\n\n# idlist-PREVIOUS which is idlist-2.10, which has ids through OTT 2.9.\n",
        "Line" : 566,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# So, to make the id list needed to build OTT 3.1, we extend\n\n# idlist-2.10 with new identifiers added in OTT 3.0 (ott-HEAD), obtaining\n\n# idlist-3.0, which is then used as input in build OTT 3.1.\n\n# Whew!\n",
        "Line" : 569,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# ----- TBD: wikidata.py (from which we get EOL ids)\n",
        "Line" : 595,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Get wikidata dump from https://dumps.wikimedia.org/wikidatawiki/entities/wikidata-DDDDDDDD-all.json.gz\n\n# e.g. DDDDDDDD = 20170424\n\n# The .bz2 would be better (only 66% the size).\n",
        "Line" : 597,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# Make a digest that we can archive. \n\n#   source qid, wikidata id, EOL id\n",
        "Line" : 604,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# To make resource, look up OTT source ids ... or maybe just use the\n\n# digest directly\n",
        "Line" : 607,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# ----- Phylesystem OTU list\n",
        "Line" : 610,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# Used only for reporting!  We want to avoid having OTT depend on\n\n# phylesystem.\n",
        "Line" : 612,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# This rule typically won't run, since the target is checked in.\n\n# To refresh, remove the target, then make it\n",
        "Line" : 615,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# Synthetic tree OTT id list (this rule assumes you're part of the\n\n# Open Tree project and can use scp; could be modified to use\n\n# curl. this doesn't matter much since the list is checked into the\n\n# repo.)\n\n# To refresh, remove the target, then make it\n",
        "Line" : 624,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# ----- Products\n",
        "Line" : 636,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# For publishing OTT drafts or releases.\n\n# File names beginning with # are emacs lock links.\n",
        "Line" : 638,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Maybe this rule isn't needed now that we have pack/ and store/ targets?\n",
        "Line" : 641,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# Then, something like\n\n# scp -p -i ~/.ssh/opentree/opentree.pem tarballs/ott2.9draft3.tgz \\\n#   opentree@ot10.opentreeoflife.org:files.opentreeoflife.org/ott/ott2.9/\n",
        "Line" : 645,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# This file is big\n",
        "Line" : 649,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# OTUs only\n",
        "Line" : 655,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# ----- Libraries\n",
        "Line" : 664,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# -----Taxon inclusion tests\n",
        "Line" : 681,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# ----- Testing\n",
        "Line" : 687,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# Trivial, not very useful any more\n",
        "Line" : 689,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# internal tests\n",
        "Line" : 693,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# These are run by the OTT build script so this is usually redundant\n",
        "Line" : 700,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Taxonomy-subset test system ('make test')\n",
        "Line" : 704,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "# t/tax/prev/taxonomy.tsv: r/ott-HEAD/resource/taxonomy.tsv   - correct expensive\n",
        "Line" : 710,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# dependency on r/ncbi-HEAD/resource/taxonomy.tsv - correct expensive\n",
        "Line" : 715,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# dependency on GBIF taxonomy.tsv - correct but expensive\n",
        "Line" : 720,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# Previously:\n\n#t/tax/aster/taxonomy.tsv: $(CLASS) \\\n#                          t/tax/ncbi_aster/taxonomy.tsv \\\n#                          t/tax/gbif_aster/taxonomy.tsv \\\n#                          t/tax/prev_aster/taxonomy.tsv \\\n#                          t/edits/edits.tsv\n",
        "Line" : 725,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "#        @mkdir -p `dirname $@`\n\n#        $(SMASH) t/tax/ncbi_aster/ t/tax/gbif_aster/ \\\n#             --edits t/edits/ \\\n#             --ids t/tax/prev_aster/ \\\n#             --out t/tax/aster/\n",
        "Line" : 731,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# New:\n",
        "Line" : 737,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "# ----- Smasher\n",
        "Line" : 757,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# Shorthand target\n",
        "Line" : 759,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "# Compile the Java classes\n",
        "Line" : 762,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "# Script to start up jython (with OTT classes preloaded)\n",
        "Line" : 769,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "# Script to start up the background daemon\n",
        "Line" : 778,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "# ----- Clean\n",
        "Line" : 786,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "# The 'clean' target deletes everything except files fetched from the Internet.\n\n# To really delete everything, use the 'distclean' target.\n",
        "Line" : 788,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 95
    },
    "doc/method/Makefile" : {
      "ObjectId" : "19d9fd3b3884843eacfbb6e99ada93bd8ae2b510",
      "LastModified" : "2017-02-28T19:18:38Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#  $^ = all prerequisites\n\n#  $< = first prerequisite\n\n#  $@ = file name of target\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# use --html4tags flag?\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Need to manually insert the output into results.py\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\techo '<link crossorigin=\"anonymous\" href=\"https://assets-cdn.github.com/assets/frameworks-130b94ff796a9660d814b59665547ebaf99cc439323c908f41c6ff46e4255c8e.css\" integrity=\"sha256-EwuU/3lqlmDYFLWWZVR+uvmcxDkyPJCPQcb/RuQlXI4=\" media=\"all\" rel=\"stylesheet\" />' \\\n#\t  >draft.html\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\techo '<link crossorigin=\"anonymous\" href=\"https://assets-cdn.github.com/assets/github-907704789dc9e0c1cd78c2f3adfc91e42ed23a0a97b2790c4171d9d8959f7cdc.css\" integrity=\"sha256-kHcEeJ3J4MHNeMLzrfyR5C7SOgqXsnkMQXHZ2JWffNw=\" media=\"all\" rel=\"stylesheet\" />' \\\n#\t  >>draft.html\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# This overwrites whatever is in cache.  Cache is checked in to the\n\n# repository so that people can make the manuscript .HTML file without\n\n# having a copy of the taxonomy on hand.  But it's necessary to do\n\n# 'make refresh' after a taxonomy build.\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# How well does the taxonomy cover...\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Graveyard\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# - no longer used. delete soon -\n\n# there are pathnames in the code, should match prereq list\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Use this to test that results.py works before siccing it on OTT\n\n# NEEDS TO BE FIXED\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# -----------------------------------------------------------------------------\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "doc/method/data-package/Makefile" : {
      "ObjectId" : "498d7de9194099769e4bce107b4084d50a961836",
      "LastModified" : "2017-04-13T18:06:51Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Creates a bunch of .tgz files, to be uploaded to Dryad one at a time.\n\n# Be sure to upload README as well.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This Makefile needs to be run in a directory that has successfully\n\n# built OTT 3.0, so that all the processed source taxonomies are available.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Decided not to include these\n\n# $F/silva.tgz $F/worms.tgz $F/fung.tgz $F/ncbi.tgz $F/gbif.tgz $F/irmng.tgz\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# For assigning identifiers only\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Copy the separation taxonomy from the git repo.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Genbank accessions\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Curator additions\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Don't put these in the data package.\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "service/Makefile" : {
      "ObjectId" : "49f89ed675fdf316e98c1648bbf690ec0cb1120e",
      "LastModified" : "2016-10-31T01:50:24Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 4
  },
  "ElapsedTime" : 1283
}