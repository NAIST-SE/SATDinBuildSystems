{
  "Repository" : "10389884",
  "Revision" : "HEAD",
  "ObjectId" : "8e437e772bbf330ea2e3e59f2dc322460f9532cb",
  "CommitTime" : "2016-09-09T12:47:08Z",
  "Files" : {
    "3rdparty/Box2D/CMakeLists.txt" : {
      "ObjectId" : "696a493e4e9fc3878a19424d7475c4c2c7c91c36",
      "LastModified" : "2015-11-15T17:07:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set(PATCH_FILE          ${CMAKE_CURRENT_LIST_DIR}/linux.patch)\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# URL                     https://github.com/erincatto/Box2D/archive/v2.3.1.zip\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# PATCH_COMMAND           patch -p1 < ${PATCH_FILE}\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "3rdparty/CMakeLists.txt" : {
      "ObjectId" : "7d067ddb06f9bf2b2d7991a44b8e784e8133b991",
      "LastModified" : "2015-11-15T17:07:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/FreeType/CMakeLists.txt" : {
      "ObjectId" : "1f6caafb526b402ddfd95ee56e852ca588a91cbc",
      "LastModified" : "2015-11-15T17:07:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# contain freetype itself\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rdparty/GLEW/CMakeLists.txt" : {
      "ObjectId" : "414b1d5b4d856d2d3d96dee7d1d40e968b48df63",
      "LastModified" : "2015-08-25T11:12:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Using GLES 2.0\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Using GLES 2.0\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "3rdparty/GLFW/CMakeLists.txt" : {
      "ObjectId" : "6546472dc886fcd7f767001be5854f1fd73f3011",
      "LastModified" : "2015-11-15T17:07:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Emscripten already contain some\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Using EGL\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "3rdparty/GLM/CMakeLists.txt" : {
      "ObjectId" : "31cf1641a953c65fe19d78df27bad61530862221",
      "LastModified" : "2015-11-15T17:07:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/Lua/CMakeLists.txt" : {
      "ObjectId" : "24dadd2b01348c7783cb43441d399d58637dfb55",
      "LastModified" : "2015-11-15T17:07:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/Ogg/CMakeLists.txt" : {
      "ObjectId" : "8a46988843c1f0ad4a29e148d84b7a55607d29fe",
      "LastModified" : "2015-11-15T17:07:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/OpenAL/CMakeLists.txt" : {
      "ObjectId" : "0a8383f073ae4db2b3df2fe2bd3c011c1d6cfea2",
      "LastModified" : "2015-11-15T17:07:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# contain OpenAL itself\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rdparty/POCO/CMakeLists.txt" : {
      "ObjectId" : "f0883ee030787f6e8a8ec7416606b05f17c3fed9",
      "LastModified" : "2015-11-15T17:07:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -DOPENSSL_INCLUDE_DIR=${3RDPARTY_INSTALL}/include\n\n# -DOPENSSL_CRYPTO_LIBRARY=${3RDPARTY_INSTALL}/lib/libcrypto.a\n\n# -DOPENSSL_SSL_LIBRARY=${3RDPARTY_INSTALL}/lib/libssl.a\n",
        "Line" : 27,
        "CharPositionInLine" : 28
      },
      "1" : {
        "Text" : "# elseif(MSVC)\n\n#     ExternalProject_Add(\n\n#         ${EXT_POCO}\n\n#         URL                 http://pocoproject.org/releases/poco-1.6.1/poco-1.6.1-all.tar.gz\n\n#         CMAKE_ARGS          -DCMAKE_INSTALL_PREFIX=${3RDPARTY_INSTALL}\n\n#                             -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}\n\n#                             -DENABLE_DATA_ODBC=OFF\n\n#                             -DENABLE_APACHECONNECTOR=OFF\n\n#                             -DENABLE_POCODOC=OFF\n\n#                             -DENABLE_PDF=OFF\n\n#                             -DENABLE_PAGECOMPILER=OFF\n\n#                             -DENABLE_PAGECOMPILER_FILE2PAGE=OFF\n\n#                             -DENABLE_TESTS=OFF\n\n#                             -DCMAKE_CXX_FLAGS=${CMAKE_CXX_FLAGS}\n\n#     )\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# -DOPENSSL_INCLUDE_DIR=${3RDPARTY_INSTALL}/include\n\n# -DOPENSSL_CRYPTO_LIBRARY=${3RDPARTY_INSTALL}/lib/libcrypto.a\n\n# -DOPENSSL_SSL_LIBRARY=${3RDPARTY_INSTALL}/lib/libssl.a\n",
        "Line" : 65,
        "CharPositionInLine" : 28
      },
      "3" : {
        "Text" : "# -DOPENSSL_INCLUDE_DIR=${3RDPARTY_INSTALL}/include\n\n# -DOPENSSL_CRYPTO_LIBRARY=${3RDPARTY_INSTALL}/lib/libcrypto.a\n\n# -DOPENSSL_SSL_LIBRARY=${3RDPARTY_INSTALL}/lib/libssl.a\n",
        "Line" : 115,
        "CharPositionInLine" : 28
      },
      "4" : {
        "Text" : "# elseif(BLACKBERRY)\n\n#     # прокинуть свойства для блэкбери, без этого беда\n\n#     \n\n#     set(CXX_FLAGS \"-DPOCO_OS_FAMILY_UNIX -D__EXT_POSIX1_200112 -D__EXT_QNX\")\n\n#     \n\n#     ExternalProject_Add(\n\n#         ${EXT_POCO}\n\n#         URL         http://pocoproject.org/releases/poco-1.6.1/poco-1.6.1-all.tar.gz\n\n#         CMAKE_ARGS  -DCMAKE_INSTALL_PREFIX=${3RDPARTY_INSTALL}\n\n#                     -DCMAKE_TOOLCHAIN_FILE=${CMAKE_TOOLCHAIN_FILE}\n\n#                     -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}\n\n#                     -DCMAKE_C_FLAGS=${CXX_FLAGS}\n\n#                     -DCMAKE_CXX_FLAGS=${CXX_FLAGS}\n\n#                     -DENABLE_DATA_ODBC=OFF\n\n#                     -DENABLE_APACHECONNECTOR=OFF\n\n#                     -DENABLE_POCODOC=OFF\n\n#                     -DENABLE_PDF=OFF\n\n#                     -DENABLE_PAGECOMPILER=OFF\n\n#                     -DENABLE_PAGECOMPILER_FILE2PAGE=OFF\n\n#                     -DENABLE_TESTS=OFF\n\n#                     -DPOCO_STATIC=OFF\n\n#     )\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "3rdparty/Vorbis/CMakeLists.txt" : {
      "ObjectId" : "486a943c709ea88fe79c7d529da0245204e4e35d",
      "LastModified" : "2015-11-15T17:07:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/boost/CMakeLists.txt" : {
      "ObjectId" : "9c3677a1635b97bfec1d25d932de9ba0fd633ce1",
      "LastModified" : "2015-11-15T17:07:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/freealut/CMakeLists.txt" : {
      "ObjectId" : "e1d30b2124f2cbdcb3fcd018b8fccecd6d310457",
      "LastModified" : "2015-11-15T17:07:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# contain OpenAL itself\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rdparty/freeglut/CMakeLists.txt" : {
      "ObjectId" : "2fd9ccf7c5b2af0f4a3cc5ea3edc1d9e96c54cef",
      "LastModified" : "2015-11-15T17:07:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Emscripten already contain glut\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Using EGL\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "3rdparty/gmock/CMakeLists.txt" : {
      "ObjectId" : "4fe50e0a50cd267b47a3f6ab2e93bcea16793cea",
      "LastModified" : "2016-09-09T12:47:08Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/libpng/CMakeLists.txt" : {
      "ObjectId" : "9bec8c4d56c4e54e21610a22bf7c1e4fa21bb44f",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# emmake make -S USE_LIBPNG=1 -s USE_ZLIB=1\n\n# \n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rdparty/mpg123/CMakeLists.txt" : {
      "ObjectId" : "6c5536bbeb0ee91a4644b462ba6c9a31df56a223",
      "LastModified" : "2015-11-15T17:07:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# http://downloads.sourceforge.net/project/mpg123/mpg123/1.22.4/mpg123-1.22.4.tar.bz2\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMakeLists.txt" : {
      "ObjectId" : "535f4d183c3acc4af6267635c65141513920092f",
      "LastModified" : "2015-11-15T17:07:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# include modules\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Cобирать ли вообще обёртки\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Собирать ли обёртки для Юпитера на разных языках\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Собирать ли Калисто\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Под Android эти программы не собираем\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Под Emscripten и Android это не актуально\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# find OpenGL\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# set(3RDPARTY_INSTALL ${CMAKE_BINARY_DIR}/install)\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Дополнительные флаги\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Собираем зависимости\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Место куда будут складываться собранные части\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Собираем включения\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Libraries sets\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Lua\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# GLEW\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# FreeGLUT and GLFW\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# FreeGLUT window system\n",
        "Line" : 194,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# GLFW window system\n",
        "Line" : 211,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# GLM\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# find glm\n",
        "Line" : 231,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Box2D\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Boost\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# PNG\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# OpenAL\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# FreeType\n",
        "Line" : 303,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Ogg\n",
        "Line" : 315,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Vorbis\n",
        "Line" : 322,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# POCO\n\n#\n\n# Предупреждение: порядок библиотек в списке не менять, иначе для некоторых платформ может не собраться\n\n#\n",
        "Line" : 329,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# PocoNetSSLd PocoUtild PocoJSONd PocoCryptod ssl crypto\n",
        "Line" : 353,
        "CharPositionInLine" : 12
      },
      "29" : {
        "Text" : "# PocoNetSSL PocoUtil PocoJSON PocoCrypto ssl crypto\n",
        "Line" : 363,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 30
    },
    "apps/CMakeLists.txt" : {
      "ObjectId" : "418949b2ccb6ceb46e1e0d6ebf27d1840e6dcfde",
      "LastModified" : "2015-11-15T17:07:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "apps/Callisto/CMakeLists.txt" : {
      "ObjectId" : "684b0d6a5742a0ad71b27069fa6876b718bea1b6",
      "LastModified" : "2015-11-15T17:07:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#include_directories(src/asteroids)\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "apps/GamePlayerAndroid/CMakeLists.txt" : {
      "ObjectId" : "79610aa55a5cc7e03d9c252c274b939b3edfe022",
      "LastModified" : "2015-11-15T17:07:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "apps/Test/CMakeLists.txt" : {
      "ObjectId" : "23bda8dd72bd3030625ad03c52594a6af7ddc12d",
      "LastModified" : "2015-12-08T06:18:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# if(MINGW OR MSYS)\n\n#     add_dependencies(Test-1 ext_freeglut ext_GLFW ext_GLEW)\n\n# elseif(EMSCRIPTEN)\n\n# elseif(ANDROID)\n\n# elseif(APPLE)\n\n#     add_dependencies(Test-1 ext_GLFW ext_GLEW)\n\n# else()\n\n#     add_dependencies(Test-1 ext_freeglut ext_GLFW ext_GLEW)\n\n# endif()\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "apps/Test/HungryStreet/CMakeLists.txt" : {
      "ObjectId" : "8d927f9d0acd20339ec2c256fbd5f9fc25385a4f",
      "LastModified" : "2015-11-15T17:07:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "apps/Test/OlivePlastic/CMakeLists.txt" : {
      "ObjectId" : "27d69e36a4782923f36feaef3376708a793c1dfd",
      "LastModified" : "2015-11-15T17:07:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "apps/Test/RichLaser/CMakeLists.txt" : {
      "ObjectId" : "6917663a34e0a889470bb648148cf83629dabadf",
      "LastModified" : "2015-11-19T07:50:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "apps/Test/SubtleCreek/CMakeLists.txt" : {
      "ObjectId" : "01bb0d0d854385332187d664a6a701c0d671b3ad",
      "LastModified" : "2015-12-08T06:18:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# target_link_libraries(SubtleCreek ${OPENAL_LIB} ${OGG_LIB} ${VORBIS_LIB})\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "apps/Test/ViperFreaky/CMakeLists.txt" : {
      "ObjectId" : "2b3c464407d3b48643e10ccf1c2c9515abed950d",
      "LastModified" : "2015-12-08T06:18:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "apps/Test/ViperFreaky/NextSummer/CMakeLists.txt" : {
      "ObjectId" : "3845aa55724e06c9430f534e6fc9fbf41233895e",
      "LastModified" : "2015-12-08T06:18:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "apps/Test/test-6/CMakeLists.txt" : {
      "ObjectId" : "3fa3b52f1f1671d500f80580fc5a168edbc55605",
      "LastModified" : "2015-12-08T06:18:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Modules/FindBox2D.cmake" : {
      "ObjectId" : "ed864d81ffdae21ad13f278489eca47bd7efdb03",
      "LastModified" : "2015-12-08T06:18:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find Box2D\r\n\n# Find the native Box2D includes and libraries\r\n\n#\r\n\n#  BOX2D_INCLUDE_DIR - where to find TmxParser/Config.hpp, etc.\r\n\n#  BOX2D_LIBRARIES   - List of libraries when using libTmxParser.\r\n\n#  BOX2D_FOUND       - True if libTmxParser found.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\r\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Fink\r\n\n# DarwinPorts\r\n\n# Blastwave\r\n",
        "Line" : 20,
        "CharPositionInLine" : 15
      },
      "3" : {
        "Text" : "# Fink\r\n\n# DarwinPorts\r\n\n# Blastwave\r\n",
        "Line" : 35,
        "CharPositionInLine" : 15
      },
      "4" : {
        "Text" : "# Fink\r\n\n# DarwinPorts\r\n\n# Blastwave\r\n",
        "Line" : 50,
        "CharPositionInLine" : 15
      },
      "5" : {
        "Text" : "# Library found\r\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# If both were found, set BOX2D_LIBRARY to the release version\r\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set SNDFILE_FOUND to TRUE if\r\n\n# all listed variables are TRUE.\r\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake/Modules/FindFreeImage.cmake" : {
      "ObjectId" : "ff8f5651049fdaf304fe11388216dcecaa5e7b38",
      "LastModified" : "2015-12-08T06:18:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find FreeImage includes and library\r\n\n#\r\n\n# This module defines\r\n\n#  FreeImage_INCLUDE_DIRS\r\n\n#  FreeImage_LIBRARIES, the libraries to link against to use FreeImage.\r\n\n#  FreeImage_LIBRARY_DIRS, the location of the libraries\r\n\n#  FreeImage_FOUND, If false, do not try to use FreeImage\r\n\n#\r\n\n# Copyright © 2007, Matt Williams\r\n\n#\r\n\n# Redistribution and use is allowed according to the terms of the BSD license.\r\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\r\n",
        "Line" : 15,
        "CharPositionInLine" : 34
      },
      "2" : {
        "Text" : "#Do some preparation\r\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/Modules/FindGLFW.cmake" : {
      "ObjectId" : "d1463b4d3e4c314679823d804e39496c75b81c58",
      "LastModified" : "2015-12-08T06:18:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\r\n\n#   Copyright 2013 Pixar\r\n\n#\r\n\n#   Licensed under the Apache License, Version 2.0 (the \"Apache License\")\r\n\n#   with the following modification; you may not use this file except in\r\n\n#   compliance with the Apache License and the following modification to it:\r\n\n#   Section 6. Trademarks. is deleted and replaced with:\r\n\n#\r\n\n#   6. Trademarks. This License does not grant permission to use the trade\r\n\n#      names, trademarks, service marks, or product names of the Licensor\r\n\n#      and its affiliates, except as required to comply with Section 4(c) of\r\n\n#      the License and to reproduce the content of the NOTICE file.\r\n\n#\r\n\n#   You may obtain a copy of the Apache License at\r\n\n#\r\n\n#       http://www.apache.org/licenses/LICENSE-2.0\r\n\n#\r\n\n#   Unless required by applicable law or agreed to in writing, software\r\n\n#   distributed under the Apache License with the above modification is\r\n\n#   distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n\n#   KIND, either express or implied. See the Apache License for the specific\r\n\n#   language governing permissions and limitations under the Apache License.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Try to find GLFW library and include path.\r\n\n# Once done this will define\r\n\n#\r\n\n# GLFW_FOUND\r\n\n# GLFW_INCLUDE_DIR\r\n\n# GLFW_LIBRARIES\r\n\n#\r\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# (*)NIX\r\n",
        "Line" : 111,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Tease the GLFW_VERSION numbers from the lib headers\r\n",
        "Line" : 170,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "cmake/Modules/FindGLM.cmake" : {
      "ObjectId" : "887807dfe772fe7025eb6751f8e0bd46c763fce3",
      "LastModified" : "2015-12-08T06:18:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FindGLM - attempts to locate the glm matrix/vector library.\r\n\n#\r\n\n# This module defines the following variables (on success):\r\n\n#   GLM_INCLUDE_DIRS  - where to find glm/glm.hpp\r\n\n#   GLM_FOUND         - if the library was successfully located\r\n\n#\r\n\n# It is trying a few standard installation locations, but can be customized\r\n\n# with the following variables:\r\n\n#   GLM_ROOT_DIR      - root directory of a glm installation\r\n\n#                       Headers are expected to be found in either:\r\n\n#                       <GLM_ROOT_DIR>/glm/glm.hpp           OR\r\n\n#                       <GLM_ROOT_DIR>/include/glm/glm.hpp\r\n\n#                       This variable can either be a cmake or environment\r\n\n#                       variable. Note however that changing the value\r\n\n#                       of the environment varible will NOT result in\r\n\n#                       re-running the header search and therefore NOT\r\n\n#                       adjust the variables set by this module.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\r\n\n# Copyright 2012 Carsten Neumann\r\n\n#\r\n\n# Distributed under the OSI-approved BSD License (the \"License\");\r\n\n# see accompanying file Copyright.txt for details.\r\n\n#\r\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\r\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n\n# See the License for more information.\r\n\n#=============================================================================\r\n\n# (To distribute this file outside of CMake, substitute the full\r\n\n#  License text for the above reference.)\r\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# default search dirs\r\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# check environment variable\r\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# put user specified location at beginning of search\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# locate header\r\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/Modules/FindMyLua.cmake" : {
      "ObjectId" : "3ace34e15768e1b74eac221d9618d97f845d8255",
      "LastModified" : "2015-12-08T06:18:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate Lua library\r\n\n# This module defines\r\n\n#  LUA_EXECUTABLE, if found\r\n\n#  LUA_FOUND, if false, do not try to link to Lua \r\n\n#  LUA_LIBRARIES\r\n\n#  LUA_INCLUDE_DIR, where to find lua.h\r\n\n#  LUA_VERSION_STRING, the version of Lua found (since CMake 2.8.8)\r\n\n#\r\n\n# Note that the expected include convention is\r\n\n#  #include \"lua.h\"\r\n\n# and not\r\n\n#  #include <lua/lua.h>\r\n\n# This is because, the lua location is not standardized and may exist\r\n\n# in locations other than lua/\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\r\n\n# Copyright 2007-2009 Kitware, Inc.\r\n\n# Modified to support Lua 5.2 by LuaDist 2012\r\n\n#\r\n\n# Distributed under the OSI-approved BSD License (the \"License\");\r\n\n# see accompanying file Copyright.txt for details.\r\n\n#\r\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\r\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n\n# See the License for more information.\r\n\n#=============================================================================\r\n\n# (To distribute this file outside of CMake, substitute the full\r\n\n#  License text for the above reference.)\r\n\n#\r\n\n# The required version of Lua can be specified using the\r\n\n# standard syntax, e.g. FIND_PACKAGE(Lua 5.1)\r\n\n# Otherwise the module will search for any available Lua implementation\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Always search for non-versioned lua first (recommended)\r\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Determine possible naming suffixes (there is no standard for this)\r\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set up possible search names and locations\r\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Find the lua executable\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Find the lua header\r\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Fink\r\n",
        "Line" : 68,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# DarwinPorts\r\n",
        "Line" : 69,
        "CharPositionInLine" : 13
      },
      "9" : {
        "Text" : "# Blastwave\r\n",
        "Line" : 70,
        "CharPositionInLine" : 11
      },
      "10" : {
        "Text" : "# Find the lua library\r\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# include the math library for Unix\r\n",
        "Line" : 92,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# For Windows and Mac, don't need to explicitly include the math library\r\n",
        "Line" : 96,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Determine Lua version\r\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LUA_FOUND to TRUE if \r\n\n# all listed variables are TRUE\r\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "cmake/Modules/lua.cmake" : {
      "ObjectId" : "3452380e587a6a91d10e2e53868a6dfe4514f63a",
      "LastModified" : "2015-12-08T06:18:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# LuaDist CMake utility library for Lua.\r\n\n# \r\n\n# Copyright (C) 2007-2012 LuaDist.\r\n\n# by David Manura, Peter Drahos\r\n\n# Redistribution and use of this file is allowed according to the terms of the MIT license.\r\n\n# For details see the COPYRIGHT file distributed with LuaDist.\r\n\n# Please note that the package source code is licensed under its own license.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# List of (Lua module name, file path) pairs.\r\n\n# Used internally by add_lua_test.  Built by add_lua_module.\r\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# utility function: appends path `path` to path `basepath`, properly\r\n\n# handling cases when `path` may be relative or absolute.\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# install_lua_executable ( target source )\r\n\n# Automatically generate a binary wrapper for lua application and install it\r\n\n# The wrapper and the source of the application will be placed into /bin\r\n\n# If the application source did not have .lua suffix then it will be added\r\n\n# USE: lua_executable ( sputnik src/sputnik.lua )\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# _target is CMake-compatible target name for module (e.g. socket_core).\r\n\n# _module is relative path of target (e.g. socket/core),\r\n\n#   without extension (e.g. .lua/.so/.dll).\r\n\n# _MODULE_SRC is list of module source files (e.g. .lua and .c files).\r\n\n# _MODULE_NAMES is list of module names (e.g. socket.core).\r\n",
        "Line" : 171,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Lua source module\r\n",
        "Line" : 194,
        "CharPositionInLine" : 31
      },
      "6" : {
        "Text" : "# Lua C binary module\r\n",
        "Line" : 211,
        "CharPositionInLine" : 11
      },
      "7" : {
        "Text" : "# add_lua_module\r\n\n# Builds a Lua source module into a destination locatable by Lua\r\n\n# require syntax.\r\n\n# Binary modules are also supported where this function takes sources and\r\n\n# libraries to compile separated by LINK keyword.\r\n\n# USE: add_lua_module ( socket.http src/http.lua )\r\n\n# USE2: add_lua_module ( mime.core src/mime.c )\r\n\n# USE3: add_lua_module ( socket.core ${SRC_SOCKET} LINK ${LIB_SOCKET} )\r\n\n# USE4: add_lua_module ( ssl.context ssl.core ALL_IN_ONE src/context.c src/ssl.c )\r\n\n#   This form builds an \"all-in-one\" module (e.g. ssl.so or ssl.dll containing\r\n\n#   both modules ssl.context and ssl.core).  The CMake target name will be\r\n\n#   ssl_all_in_one.\r\n\n# Also sets variable _module_path (relative path where module typically\r\n\n# would be installed).\r\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# install_lua_module\r\n\n# This is the same as `add_lua_module` but also installs the module.\r\n\n# USE: install_lua_module ( socket.http src/http.lua )\r\n\n# USE2: install_lua_module ( mime.core src/mime.c )\r\n\n# USE3: install_lua_module ( socket.core ${SRC_SOCKET} LINK ${LIB_SOCKET} )\r\n",
        "Line" : 254,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Builds string representing Lua table mapping Lua modules names to file\r\n\n# paths.  Used internally.\r\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# avoids cmake complaint\r\n",
        "Line" : 268,
        "CharPositionInLine" : 25
      },
      "11" : {
        "Text" : "# add_lua_test ( _testfile [ WORKING_DIRECTORY _working_dir ] )\r\n\n# Runs Lua script `_testfile` under CTest tester.\r\n\n# Optional named argument `WORKING_DIRECTORY` is current working directory to\r\n\n# run test under (defaults to ${CMAKE_CURRENT_BINARY_DIR}).\r\n\n# Both paths, if relative, are relative to ${CMAKE_CURRENT_SOURCE_DIR}.\r\n\n# Any modules previously defined with install_lua_module are automatically\r\n\n# preloaded (via package.preload) prior to running the test script.\r\n\n# Under LuaDist, set test=true in config.lua to enable testing.\r\n\n# USE: add_lua_test ( test/test1.lua [args...] [WORKING_DIRECTORY dir])\r\n",
        "Line" : 281,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Write wrapper script.\r\n\n# Note: One simple way to allow the script to find modules is\r\n\n# to just put them in package.preload.\r\n",
        "Line" : 299,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# note: CMake 2.6 (unlike 2.8) lacks WORKING_DIRECTORY parameter.\r\n",
        "Line" : 328,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# see also http://gdcm.svn.sourceforge.net/viewvc/gdcm/Sandbox/CMakeModules/UsePythonTest.cmake\r\n\n# Note: ${CMAKE_CFG_INTDIR} is a command-line argument to allow proper\r\n\n# expansion by the native build tool.\r\n",
        "Line" : 336,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Converts Lua source file `_source` to binary string embedded in C source\r\n\n# file `_target`.  Optionally compiles Lua source to byte code (not available\r\n\n# under LuaJIT2, which doesn't have a bytecode loader).  Additionally, Lua\r\n\n# versions of bin2c [1] and luac [2] may be passed respectively as additional\r\n\n# arguments.\r\n\n#\r\n\n# [1] http://lua-users.org/wiki/BinToCee\r\n\n# [2] http://lua-users.org/wiki/LuaCompilerInLua\r\n",
        "Line" : 342,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "cmake/Toolchains/MinGW/Toolchain-cross-mingw32-linux.cmake" : {
      "ObjectId" : "6751662261502e1074cf2f1a6fe64a3994eac59e",
      "LastModified" : "2015-12-08T06:18:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# the name of the target operating system\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Choose an appropriate compiler prefix\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# for classical mingw32\n\n# see http://www.mingw.org/\n\n#set(COMPILER_PREFIX \"i586-mingw32msvc\")\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# for 32 or 64 bits mingw-w64\n\n# see http://mingw-w64.sourceforge.net/\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#set(COMPILER_PREFIX \"x86_64-w64-mingw32\"\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# which compilers to use for C and C++\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#SET(CMAKE_RC_COMPILER ${COMPILER_PREFIX}-windres)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#SET(CMAKE_C_COMPILER ${COMPILER_PREFIX}-gcc)\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#SET(CMAKE_CXX_COMPILER ${COMPILER_PREFIX}-g++)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# here is the target environment located\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# adjust the default behaviour of the FIND_XXX() commands:\n\n# search headers and libraries in the target environment, search \n\n# programs in the host environment\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "modules/CMakeLists.txt" : {
      "ObjectId" : "7e8c6f7dc8616488ed902d342822b9072a48223f",
      "LastModified" : "2015-12-08T06:18:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "modules/Jupiter/CMakeLists.txt" : {
      "ObjectId" : "0c53e9f1242444a9374748c48c614145ed3a7102",
      "LastModified" : "2015-12-08T06:18:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# src/SpriteBody.cpp\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# TODO if jupiter shared, then link\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n#  В тестах для тестирования приватных членов делать \n\n#  #define private public\n\n#  подсмотрено здесь https://github.com/nlohmann/json/blob/master/test/unit.cpp\n\n# \n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add_executable(JupiterTests tests/main.cpp)\n\n# target_link_libraries(JupiterTests Jupiter gmock gtest pthread gmock_main gtest_main)\n",
        "Line" : 143,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "modules/lodepng/CMakeLists.txt" : {
      "ObjectId" : "129a8be4e2993934162fe738b15386db26a19ce0",
      "LastModified" : "2015-12-08T06:18:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/CMakeLists.txt" : {
      "ObjectId" : "3d2421098e0a18de4dcfa312ae1b267b95e9c9fb",
      "LastModified" : "2015-12-08T06:18:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "wrappers/Box2D/CMakeLists.txt" : {
      "ObjectId" : "e4781844cdcd09cae774e06c1a96ff8b96e43488",
      "LastModified" : "2015-12-08T06:18:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "wrappers/CMakeLists.txt" : {
      "ObjectId" : "f8ebedc0d842b2b15d384ed21d6cc782565f5eee",
      "LastModified" : "2015-12-08T06:18:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "wrappers/Jupiter/CMakeLists.txt" : {
      "ObjectId" : "ef967dc70b9f884d8a37159fe7ca0c86cc0d5de6",
      "LastModified" : "2015-12-08T06:18:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Lua\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Python\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# C#\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Java\n",
        "Line" : 46,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Java\n",
        "Line" : 53,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 5
    },
    "wrappers/gl/CMakeLists.txt" : {
      "ObjectId" : "a8694edf5f7e398400dcf5b672999b8c981928fd",
      "LastModified" : "2015-12-08T06:18:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "wrappers/glew/CMakeLists.txt" : {
      "ObjectId" : "51fe5491aeb84dcdb70cf206d3cbc29a35e15feb",
      "LastModified" : "2015-12-08T06:18:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "wrappers/glfw/CMakeLists.txt" : {
      "ObjectId" : "b5384ebbbef184a20a9db7ae8764800d6df3ad20",
      "LastModified" : "2015-12-08T06:18:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "wrappers/glm/CMakeLists.txt" : {
      "ObjectId" : "61604a95f95fc0a2c1aabe1762720b30506145e6",
      "LastModified" : "2015-12-08T06:18:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if(WITH_GL_LUA_WRAPPER)\n\n#    SWIG_ADD_MODULE(glLua lua gl.i)\n\n#    SWIG_LINK_LIBRARIES(glLua ${OPENGL_LIBRARIES} ${GLEW_LIB} ${LUA_LIB})\n\n#endif()\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 47
  },
  "ElapsedTime" : 1363
}