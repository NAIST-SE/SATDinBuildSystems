{
  "Repository" : "13127685",
  "Revision" : "HEAD",
  "ObjectId" : "810d9a1473ea856613b76e3afde8e0dc28b5bfa9",
  "CommitTime" : "2019-03-11T08:52:47Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "8ae7ea3a66886acead40b3bcc7477ab9e59df426",
      "LastModified" : "2019-01-21T10:46:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## cmake build script for davix\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find the python executable to use during the build.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# Regenerate include/davix/features.hpp and version.cmake at _build_ time\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# Regenerate version.cmake at _configure_ time. Important since the above\n\n# only regenerates it at compile time.\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# Include version.cmake. Whenever the version changes, ie you commit or tag,\n\n# the following happens:\n\n# - Next time you run 'make', version.cmake is updated.\n\n# - The next 'make' will detect version.cmake was changed, and cmake will\n\n#   reconfigure itself.\n\n#\n\n# A bit hacky.\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# build type\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# load module\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#enable testing\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# components\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# features\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# tests\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# libs checks\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# openssl\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#const\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#libuuid\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "## general defs\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# GNU source, import LFS, etc...\n\n# protection flag\n\n# C99 limit macros\n",
        "Line" : 101,
        "CharPositionInLine" : 45
      },
      "17" : {
        "Text" : "#############################################################################\n\n## headers\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "##############################################################################\n\n## Doc file\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# install release notes\n",
        "Line" : 135,
        "CharPositionInLine" : 49
      },
      "20" : {
        "Text" : "#######################################################\n\n# Configure an 'uninstall' target\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "cmake/modules/CMakeCXX11Support.cmake" : {
      "ObjectId" : "cdde3f98db96d895eaf427af51e5387b3e4809b4",
      "LastModified" : "2016-09-13T11:56:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Check TR1\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/CMakeGeneratePkgConfig.cmake" : {
      "ObjectId" : "1e3693299ede78d82929c85372cc81112e55ddb1",
      "LastModified" : "2017-01-26T13:32:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# @title cmake macro for pkgconfig files generation\n\n# @brief generate a .pc package config file with a given name\n\n# @author Adrien Devresse\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# main function to use\n\n# FORMAT : add_PkgConfigFile_for_Library(\"string_filename.pc\" target_library\n\n#\t\t\t\t\t\t\t\t\t\t\t[DESCRIPTION] \"description of the pkgconfig files\"\n\n#\t\t\t\t\t\t\t\t\t\t\t[HEADER_DIRS] dir1, dir2 \n\n#\t\t\t\t\t\t\t\t\t\t\t[REQUIRES] req1 req 2 ) # list of dir to include in $prefix/include/, ex : $prefix/include/dir1\n\n# the pc file is produced in the ${CMAKE_CURRENT_BINARY_DIR} directory\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/CMakeMacroParseArguments.cmake" : {
      "ObjectId" : "fd8e88fa7c97839670e8f34957365ffcc4ec6909",
      "LastModified" : "2012-06-01T10:24:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/modules/CMakeStringHelpers.cmake" : {
      "ObjectId" : "7733fa94ecd8aa57a47ba616fc9b3e32c1dc2ad0",
      "LastModified" : "2012-06-01T10:24:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##convenience function for string manipulation \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/DefineInstallationPaths.cmake" : {
      "ObjectId" : "92215f3cbb4cdae1bda05a93c849156bf5673134",
      "LastModified" : "2017-01-26T13:32:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# detect lib suffix\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#  correct cmake netpath issue with cmake 2.8\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The following are directories where stuff will be installed to\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Same same\n",
        "Line" : 127,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "cmake/modules/FindROOT.cmake" : {
      "ObjectId" : "fe9be07678d1824c32634d2eebf276a997a8d926",
      "LastModified" : "2017-01-26T13:32:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Finds ROOT instalation\n\n# This module sets up ROOT information\n\n# It defines:\n\n# ROOT_FOUND          If the ROOT is found\n\n# ROOT_INCLUDE_DIR    PATH to the include directory\n\n# ROOT_INCLUDE_DIRS   PATH to the include directories (not cached)\n\n# ROOT_LIBRARIES      Most common libraries\n\n# ROOT_<name>_LIBRARY Full path to the library <name>\n\n# ROOT_LIBRARY_DIR    PATH to the library directory\n\n#\n\n# Updated by K. Smith (ksmith37@nd.edu) to properly handle\n\n#  dependencies in ROOT_GENERATE_DICTIONARY\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# function ROOT_GENERATE_DICTIONARY( dictionary\n\n#                                    header1 header2 ...\n\n#                                    LINKDEF linkdef1 ...\n\n#                                    OPTIONS opt1...)\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#---Get the list of include directories------------------\n",
        "Line" : 77,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#---Get the list of header files-------------------------\n",
        "Line" : 83,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Is this header a globbing expression?\n",
        "Line" : 86,
        "CharPositionInLine" : 29
      },
      "5" : {
        "Text" : "# skip LinkDefs from globbing result\n",
        "Line" : 89,
        "CharPositionInLine" : 34
      },
      "6" : {
        "Text" : "#---Get LinkDef.h file------------------------------------\n",
        "Line" : 99,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#---call rootcint------------------------------------------\n",
        "Line" : 106,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# function REFLEX_GENERATE_DICTIONARY(dictionary\n\n#                                     header1 header2 ...\n\n#                                     SELECTION selectionfile ...\n\n#                                     OPTIONS opt1...)\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#---Get the list of header files-------------------------\n",
        "Line" : 120,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#---Get Selection file------------------------------------\n",
        "Line" : 132,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "#---Get the list of include directories------------------\n",
        "Line" : 138,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "#---Get preprocessor definitions--------------------------\n",
        "Line" : 144,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#---Nanes and others---------------------------------------\n",
        "Line" : 149,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "#set(gccxmlopts \"--gccxmlopt=\\'--gccxml-cxxflags -m64 \\'\")\n",
        "Line" : 154,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "#set(rootmapname ${dictionary}Dict.rootmap)\n\n#set(rootmapopts --rootmap=${rootmapname} --rootmap-lib=${libprefix}${dictionary}Dict)\n\n#---Check GCCXML and get path-----------------------------\n",
        "Line" : 157,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "#---Actual command----------------------------------------\n",
        "Line" : 165,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 17
    },
    "cmake/modules/FindSOCKET.cmake" : {
      "ObjectId" : "eeac05fc25fe1a1b6056df5b9af8cd1779f1bd72",
      "LastModified" : "2017-01-26T13:32:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# This module detects if W32 SOCKETS are needed \n\n# include files and libraries are.\n\n#\n\n# This code sets the following variables:\n\n# \n\n# SOCKET_PKG_LIBRARIES   =  link flag for the w32 sockets\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -----------------------------------------------------\n\n# handle the QUIETLY and REQUIRED arguments and set LFC_FOUND to TRUE if\n\n# all listed variables are TRUE\n\n# -----------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindSphinx.cmake" : {
      "ObjectId" : "a1b1d9f9edfe016528af499423ce27887deb32e6",
      "LastModified" : "2019-01-28T08:57:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Sphinx (sphinx-build)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Once done this will define\n\n#\n\n#   SPHINX_FOUND      - system has Sphinx\n\n#   SPHINX_EXECUTABLE - full path to the Sphinx documentation generator tool\n\n#   SPHINX_VERSION    - the version of Sphinx which was found, e.g. \"1.0.7\"\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#=============================================================================\n\n# Copyright (C) 2011 Marie Rognes and Johannes Ring\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# 1. Redistributions of source code must retain the above copyright\n\n#    notice, this list of conditions and the following disclaimer.\n\n# 2. Redistributions in binary form must reproduce the above copyright\n\n#    notice, this list of conditions and the following disclaimer in\n\n#    the documentation and/or other materials provided with the\n\n#    distribution.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\n\n# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n\n# COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n\n# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n\n# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n\n# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\n\n# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make sure Python is available\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Try to find sphinx-build\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Try to check Sphinx version by importing Sphinx\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Check if version found is >= required version\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# No specific version of Sphinx is requested\n",
        "Line" : 65,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "cmake/modules/FindgSOAP.cmake" : {
      "ObjectId" : "509d0b8bd05df4b92798424b643c20a1e065dbf2",
      "LastModified" : "2017-10-30T12:40:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# This module detects if gsoap is installed and determines where the\n\n# include files and libraries are.\n\n#\n\n# This code sets the following variables:\n\n#\n\n# GSOAP_LIBRARIES       = full path to the gsoap libraries\n\n# GSOAP_SSL_LIBRARIES   = full path to the gsoap ssl libraries\n\n# GSOAP_INCLUDE_DIR     = include dir to be used when using the gsoap library\n\n# GSOAP_WSDL2H          = wsdl2h binary\n\n# GSOAP_SOAPCPP2        = soapcpp2 binary\n\n# GSOAP_FOUND           = set to true if gsoap was found successfully\n\n#\n\n# GSOAP_LOCATION\n\n#   setting this enables search for gsoap libraries / headers in this location\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -----------------------------------------------------\n\n# GSOAP Libraries\n\n# -----------------------------------------------------\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# -----------------------------------------------------\n\n# GSOAP Include Directories\n\n# -----------------------------------------------------\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# -----------------------------------------------------\n\n# GSOAP Binaries\n\n# -----------------------------------------------------\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# -----------------------------------------------------\n\n# GSOAP_276_COMPAT_FLAGS and GSOAPVERSION\n\n# try to determine the flagfor the 2.7.6 compatiblity, break with 2.7.13 and re-break with 2.7.16\n\n# ----------------------------------------------------\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# -----------------------------------------------------\n\n# handle the QUIETLY and REQUIRED arguments and set GSOAP_FOUND to TRUE if\n\n# all listed variables are TRUE\n\n# -----------------------------------------------------\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/modules/Finduuid.cmake" : {
      "ObjectId" : "1b93cbff9cff04f2ab37417542dc9e3385a24326",
      "LastModified" : "2018-10-24T07:58:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# Finduuid\n\n# -----------\n\n#\n\n# Find libuuid, DCE compatible Universally Unique Identifier library.\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module will set the following variables in your project:\n\n#\n\n# ``UUID_FOUND``\n\n#   True if libuuid has been found.\n\n# ``UUID_INCLUDE_DIRS``\n\n#   Where to find uuid/uuid.h.\n\n# ``UUID_LIBRARIES``\n\n#   The libraries to link against to use libuuid.\n\n#\n\n# Obsolete variables\n\n# ^^^^^^^^^^^^^^^^^^\n\n#\n\n# The following variables may also be set, for backwards compatibility:\n\n#\n\n# ``UUID_LIBRARY``\n\n#   where to find the libuuid library (same as UUID_LIBRARIES).\n\n# ``UUID_INCLUDE_DIR``\n\n#   where to find the uuid/uuid.h header (same as UUID_INCLUDE_DIRS).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/MacroAddDoxygen.cmake" : {
      "ObjectId" : "84337da235d307b8f17e7df384dd6397ef269b8d",
      "LastModified" : "2017-01-26T13:32:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n## Doxygen macro, allow Doxygen generation from cmake\n\n## do a \"\"make doc\" for the generation\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/PortabilityGNUCheck.cmake" : {
      "ObjectId" : "985c7e6fb47fafa0daa681a468ac990dc5fdcce5",
      "LastModified" : "2018-04-26T14:34:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\r\n\n# This module setup common portability variables\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##  C func\r\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## C++ header files\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## SYSTEM\r\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## size type\r\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## POSIX\r\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Windows\r\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## BSD\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##GNU EXT\r\n\n#CHECK_FUNCTION_EXISTS(mempcpy HAVE_MEMPCPY_H)\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#NET\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "cmake/modules/ReleaseDebugAutoFlags.cmake" : {
      "ObjectId" : "1957d1d68e455a811e78cb5a51912070d91dfd86",
      "LastModified" : "2017-01-26T13:32:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## debug / release autoManagement\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/CMakeLists.txt" : {
      "ObjectId" : "d79765d69d203fed6fb414ae5e02ead252c348cb",
      "LastModified" : "2018-04-26T14:34:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###\n\n## compile dependencies of davix\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/libneon/CMakeLists.txt" : {
      "ObjectId" : "ed48aaaa672676562e217a8ebe0276484a3b5356",
      "LastModified" : "2017-01-26T13:32:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# main file for src\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# load module\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/libneon/src/CMakeLists.txt" : {
      "ObjectId" : "1eb67db9c900398fd1e4b895348170425dc539ba",
      "LastModified" : "2017-01-26T13:32:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# if the static library is produced, then we need also to install the dependent libraries to be useful\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "dist/CMakeLists.txt" : {
      "ObjectId" : "aa92280edb1f1e13a55bdb437375ceb70fb41b10",
      "LastModified" : "2017-01-26T13:32:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# configure abi checker\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "doc/CMakeLists.txt" : {
      "ObjectId" : "707bf0be0b6301a6f9bfff74a3870d341ce1ce63",
      "LastModified" : "2017-01-26T13:32:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "packaging/Makefile" : {
      "ObjectId" : "951cfe730ce7517ad114cd190e4edc13c3fb42ad",
      "LastModified" : "2018-08-13T12:25:08Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Leave blank. To be overriden by CI tools.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "9c79e4917581752dce217bd7cbeebb0265850893",
      "LastModified" : "2019-01-28T08:57:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# main file for src\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#install pkgconfig\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/libs/CMakeLists.txt" : {
      "ObjectId" : "4f44f0b8db0b61a00149b4f3248f8a75ad759142",
      "LastModified" : "2017-01-26T13:32:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# libs CMakefile for third party deps\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/libs/alibxx/CMakeLists.txt" : {
      "ObjectId" : "4d9396169ce7a0d7683fd0837064026eb69839a7",
      "LastModified" : "2017-01-26T13:32:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# libs CMakefile for A_LIB_NAMESPACE\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/libs/datetime/CMakeLists.txt" : {
      "ObjectId" : "771a5f122e2530b1241003af13c346d55a07e369",
      "LastModified" : "2017-01-26T13:32:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# main file for src\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/modules/copy/CMakeLists.txt" : {
      "ObjectId" : "62310a011d8aac7af47b3e33b50b45a4f8408121",
      "LastModified" : "2017-01-26T13:32:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Compile the WSDL for 1.1.0\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Compile the WSDL for 2.0.0\n",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Need to generate some utility functions in the global namespace\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Includes\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# link\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Build third party copy as a static library\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "src/tools/CMakeLists.txt" : {
      "ObjectId" : "a1abb458c083354137a5c03145a7853f83d841d9",
      "LastModified" : "2018-04-26T14:34:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# main file for command line tools\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## davix tool lib\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## davix cmd line\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## davix ls cmd line\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## davix get cmd line\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## davix put cmd line\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## davix del cmd line\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## davix rm cmd line\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## davix mv cmd line\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## davix cp cmd line\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "3cce424acb7953f00131a1d4ca53aa67cca33852",
      "LastModified" : "2017-01-26T13:32:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# main file for src\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# force RPATH usage for easy test execution\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "test/bench/CMakeLists.txt" : {
      "ObjectId" : "6a2c920e4b7b05d9f9f4edacbc06a8121214f3bc",
      "LastModified" : "2017-01-26T13:32:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# main file for src\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#include_directories(/usr/include/davix)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "test/bench/ctest_bench.cmake" : {
      "ObjectId" : "158eca0cc13da2cad0554cd009338c8210e62bb9",
      "LastModified" : "2017-01-26T13:32:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## ctest script file for automated bench tests for davix\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# DPM tests\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "test/functional/CMakeLists.txt" : {
      "ObjectId" : "be013a55e19d4a48e07a470dd1dc6a5c9839ae85",
      "LastModified" : "2019-01-28T08:57:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# main file for src\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set( src_test_req \"test_request.cpp\")\n\n#set( src_test_checksum \"test_checksum.cpp\")\n\n#set( src_test_stat_session \"test_stat_session.cpp\")\n\n#set( src_test_rw \"davix_rw_test.cpp\")\n\n#set( src_test_opendir \"test_opendir.cpp\")\n\n#set( src_test_opendir_partial \"test_opendir_partial.cpp\")\n\n#set( src_test_opendirpp \"test_opendirpp.cpp\")\n\n#set( src_test_directory \"test_directory.cpp\")\n\n#set( src_test_auto_stat_mkdir_check \"test_auto_stat_mkdir_check.cpp\")\n\n#set( src_test_auto_rmdir_unlink_delete \"test_auto_rmdir_unlink_delete.cpp\")\n\n#set( src_test_valid_read_generic_simple \"test_valid_read_generic_simple.cpp\")\n\n#set( src_test_valid_write_read_generic_simple \"test_valid_write_read_generic_simple.cpp\")\n\n#set( src_test_valid_write_read_fd \"test_valid_write_read_fd.cpp\")\n\n#set( src_test_valid_write_read_vector_simple \"test_valid_write_read_vector_simple.cpp\")\n\n#set( src_tool_read_vector_simple \"tool_read_vector_simple.cpp\")\n\n#set( src_tool_get_replicas \"tool_get_replica_simple.cpp\")\n\n#set( src_test_mv \"test_mv.cpp\")\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#add_executable(test_request ${src_test_req} )\n\n#target_link_libraries(test_request libdavix  test_davix_functional_lib)\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#add_executable(tool_read_vector_simple ${src_tool_read_vector_simple} )\n\n#target_link_libraries(tool_read_vector_simple libdavix test_davix_functional_lib )\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#add_executable(test_rw_fd ${src_test_valid_write_read_fd})\n\n#target_link_libraries(test_rw_fd libdavix test_davix_functional_lib )\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#add_executable(test_stat_auto_check ${src_test_auto_stat_mkdir_check})\n\n#target_link_libraries(test_stat_auto_check libdavix test_davix_functional_lib)\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#add_executable(test_checksum ${src_test_checksum})\n\n#target_link_libraries(test_checksum libdavix test_davix_functional_lib)\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#add_executable(test_auto_rmdir_unlink_delete ${src_test_auto_rmdir_unlink_delete})\n\n#target_link_libraries(test_auto_rmdir_unlink_delete libdavix test_davix_functional_lib)\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#add_executable(test_stat_session ${src_test_stat_session})\n\n#target_link_libraries(test_stat_session libdavix test_davix_functional_lib)\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#add_executable(test_rw ${src_test_rw})\n\n#target_link_libraries(test_rw libdavix test_davix_functional_lib)\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#add_executable(test_opendir ${src_test_opendir} )\n\n#target_link_libraries(test_opendir libdavix test_davix_functional_lib)\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#add_executable(test_directory ${src_test_directory} )\n\n#target_link_libraries(test_directory libdavix test_davix_functional_lib)\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#add_executable(test_opendir_partial ${src_test_opendir_partial})\n\n#target_link_libraries(test_opendir_partial libdavix test_davix_functional_lib)\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#add_executable(test_opendirpp ${src_test_opendirpp})\n\n#target_link_libraries(test_opendirpp libdavix test_davix_functional_lib)\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#add_executable(test_valid_read_generic_simple ${src_test_valid_read_generic_simple})\n\n#target_link_libraries(test_valid_read_generic_simple libdavix test_davix_functional_lib)\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#add_executable(test_valid_write_read_generic_simple ${src_test_valid_write_read_generic_simple})\n\n#target_link_libraries(test_valid_write_read_generic_simple libdavix test_davix_functional_lib)\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#add_executable(test_valid_write_read_vector_simple ${src_test_valid_write_read_vector_simple})\n\n#target_link_libraries(test_valid_write_read_vector_simple libdavix test_davix_functional_lib)\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#add_executable(tool_get_replicas ${src_tool_get_replicas})\n\n#target_link_libraries(tool_get_replicas libdavix test_davix_functional_lib)\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#add_executable(test_mv ${src_test_mv})\n\n#target_link_libraries(test_mv libdavix test_davix_functional_lib)\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# build testname\n",
        "Line" : 126,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "### DEPRECATED, to remove soon\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# function(test_dav_endpoint_ronly name cred)\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#     add_test(test_stat_session_${name} test_stat_session ${cred} ${name} ${name} ${name} ${name} ${name} ${name} ${name})\n\n#     add_test(test_opendir_${name} test_opendir ${name} ${cred})\n\n#   #  add_test(test_opendir_c_${name} test_opendir_c ${name} ${cred})\n\n#     add_test(test_opendirpp_${name} test_opendirpp ${name} ${cred})\n\n#   #  add_test(test_stat_c_${name} test_stat_c ${name} ${cred})\n\n# endfunction(test_dav_endpoint_ronly name cred)\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# function(test_dav_endpoint_rw name cred)\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#     add_test(test_stat_session_${name} test_stat_session ${cred} ${name} ${name} ${name} ${name} ${name} ${name} ${name})\n\n#     add_test(test_opendir_${name} test_opendir ${name} ${cred})\n\n#     add_test(test_opendirpp_${name} test_opendirpp ${name} ${cred})\n\n#     add_test(test_stat_auto_check_${name} test_stat_auto_check ${name} ${cred})\n\n# endfunction(test_dav_endpoint_rw name cred)\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# function(listdir_partial name size cred)\n\n#     add_test(test_opendir_partial_${name}  test_opendir_partial ${name} ${size} ${cred})\n\n# endfunction(listdir_partial name size cred)\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# function(test_collection name cred)\n\n#     add_test(test_directory_${name} test_directory ${name} ${cred})\n\n# endfunction(test_collection name cred)\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# function(test_valid_read_generic url cred)\n\n#     add_test(test_valid_read_generic_${url} test_valid_read_generic_simple ${url} ${cred})\n\n# endfunction(test_valid_read_generic url cred)\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# function(test_valid_delete_all url cred)\n\n#     add_test(test_auto_rmdir_unlink_delete_${url} test_auto_rmdir_unlink_delete ${url} ${cred})\n\n# endfunction(test_valid_delete_all url cred)\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# function(test_valid_write_read_generic url cred)\n\n#     add_test(test_valid_write_read_generic_simple_${url} test_valid_write_read_generic_simple ${url} ${cred})\n\n#     add_test(test_rw_fd_${url} test_rw_fd ${url} ${cred})\n\n#     add_test(test_valid_write_read_vector_simple_${url} test_valid_write_read_vector_simple ${url} ${cred})\n\n# endfunction(test_valid_write_read_generic url cred)\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# function(test_replica_listing_existing url cred)\n\n#    add_test(tool_get_replicas_${url} tool_get_replicas ${url} ${cred})\n\n# endfunction(test_replica_listing_existing url cred)\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# function(test_rename url cred)\n\n#     add_test(test_mv_${url} test_mv ${url} ${cred})\n\n# endfunction(test_rename url cred)\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 32
    },
    "test/functional/ctest_functional.cmake" : {
      "ObjectId" : "8b74b9e1267d53045ef454562f41075022d426a3",
      "LastModified" : "2017-01-26T13:32:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ctest script file for automated functional tests for davix\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set(metalink_url \"http://download.documentfoundation.org/libreoffice/stable/4.3.4/deb/x86_64/LibreOffice_4.3.4_Linux_x86-64_deb.tar.gz\")\n\n# set(metalink3_url \"http://download.documentfoundation.org/libreoffice/stable/4.3.4/deb/x86_64/LibreOffice_4.3.4_Linux_x86-64_deb_helppack_en-US.tar.gz.metalink\")\n\n# set(metalink_url_direct \"http://download.documentfoundation.org/libreoffice/stable/4.3.4/deb/x86_64/LibreOffice_4.3.4_Linux_x86-64_deb_helppack_en-US.tar.gz.meta4\")\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# dCache read-only\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# dCache tests\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# test_valid_delete_all(\"${https_dcache}\"  \"proxy\")\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# DPM tests\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# DPM Webdav\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Storm tests\n\n## Disable storm test no valid gate !\n\n#test_dav_endpoint_rw( \"${http_storm_base}\" \"proxy\")\n\n#test_valid_delete_all(\"${http_storm_base}\"  \"proxy\")\n\n#test_valid_read_generic(\"${http_storm_base}\" \"proxy\")\n\n#test_valid_write_read_generic(\"${http_storm_base}\" \"proxy\")\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# localhost generic server, ex : \"davserver -n -D /tmp\"\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# localhost generic server with basic auth on port 8009,\n\n# ex : \"davserver -u test -p tester -P 8009 -D /tmp\"\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## generic http query test\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# testwith common SE\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# dynaFed\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# test replicas listing\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# test_replica_listing_existing(\"${metalink_url}\" \"proxy\")\n\n# test_replica_listing_existing(\"${metalink3_url}\" \"proxy\")\n\n# test_replica_listing_existing(\"${metalink_url_direct}\" \"proxy\")\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "test/root-tests/CMakeLists.txt" : {
      "ObjectId" : "b84f86d9dfcf16811c22839b79e59dbbd504bbf6",
      "LastModified" : "2017-01-26T13:32:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## the root tests are compatibility tests with the ROOT analysis framework (http://root.cern.ch/)\n\n## The root tests need to be compiled and executed :\n\n## - the ROOT framework\n\n## - a valid proxy credential for the dteam VO\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## official root website\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## DPM test https\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Dcache test http\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "test/unit/CMakeLists.txt" : {
      "ObjectId" : "e1b5b49bf5f501e9d63fcc33f7fe0e4ae6b6dd46",
      "LastModified" : "2019-01-28T08:57:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# Make gtest / gmock available for all targets that need it\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 32,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 1550
}