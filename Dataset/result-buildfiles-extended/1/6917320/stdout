{
  "Repository" : "6917320",
  "Revision" : "HEAD",
  "ObjectId" : "09ebd90e78d6b0d5c3287c0c6c4f441a3bb25376",
  "CommitTime" : "2018-12-12T09:08:26Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "7f5fa3e38af73ba5bd3761fd7df829206450e71f",
      "LastModified" : "2017-09-14T10:23:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Choose new behaviour for CMP0042.\n\n# See http://www.cmake.org/cmake/help/v3.0/policy/CMP0042.html for more details.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the Standard version.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set maximum warnings level depending on compiler.\n\n# TODO: target_maximum_warnings(${LIBRARY_NAME})\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The rule is that: any breakage of the ABI must be indicated by incrementing the SOVERSION.\n\n# So, adding e.g. functions is no problem, modifying argument lists or removing functions would\n\n# required the SOVERSION to be incremented. Similar rules hold of course for non-opaque\n\n# data-structures.\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Reset all execution counts to zero.\n",
        "Line" : 181,
        "CharPositionInLine" : 16
      },
      "5" : {
        "Text" : "# Run tests.\n",
        "Line" : 184,
        "CharPositionInLine" : 16
      },
      "6" : {
        "Text" : "# Capture coverage data.\n",
        "Line" : 187,
        "CharPositionInLine" : 16
      },
      "7" : {
        "Text" : "# Generating the report.\n",
        "Line" : 191,
        "CharPositionInLine" : 16
      },
      "8" : {
        "Text" : "# COMMAND ${CMAKE_COMMAND} -E remove ${_outputname}.info ${_outputname}.info.cleaned\n",
        "Line" : 193,
        "CharPositionInLine" : 16
      },
      "9" : {
        "Text" : "# Show info where to find the report\n",
        "Line" : 197,
        "CharPositionInLine" : 12
      },
      "10" : {
        "Text" : "# SETUP_TARGET_FOR_COVERAGE\n",
        "Line" : 201,
        "CharPositionInLine" : 22
      },
      "11" : {
        "Text" : "# Hello World example.\n",
        "Line" : 307,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Configuration using manual builder.\n",
        "Line" : 316,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Configuration using JSON config file.\n",
        "Line" : 325,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Configuration using JSON config file with facade.\n",
        "Line" : 334,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 15
    },
    "tests/cmake/PrepareGoogleTesting.cmake" : {
      "ObjectId" : "d11a31dc4f65e3fbdae25905cb889f8829ec7026",
      "LastModified" : "2018-12-12T09:08:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Builds at least on GCC 4.8 and Apple clang-703.0.31.                                                                                \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Using a specific git tag violates the Abseil/Google Test Live At Head philosophy.                                               \n\n# https://abseil.io/about/philosophy                                                                                              \n\n# But in case the blackhole tests fail to build, uncommenting the GIT_TAG line will                                               \n\n# use a Google Test version, which was working.                                                                                   \n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "CMAKE" : 2
  },
  "ElapsedTime" : 1130
}