{
  "Repository" : "888329",
  "Revision" : "HEAD",
  "ObjectId" : "74334b765e0eea6d1de371ae8a9c32d769e51e4d",
  "CommitTime" : "2019-03-29T13:54:47Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "761e04ad78ac4b1b51fdf1c6f504ef7e89f9bcb7",
      "LastModified" : "2019-03-07T16:59:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define global caktin_lint suppressions\n\n#catkin_lint: ignore uninstalled_script missing_install_target\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Old versions of OGRE (pre 1.9) included OGRE-Overlay in the main package\n\n# (i.e. there was no OGRE-Overlay component).  So if the above\n\n# pkg_check_modules() failed, try looking for just OGRE.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Find OGRE Plugin path (not necessarily platform-independent, I guess)\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# find absolute path of ogre libraries.\n\n# This is stored in the cache to save time on cmake re-run.\n\n# Using absolute paths is necessary if pkg-config finds Ogre in a different\n\n# location than the default.  This can happen when Ogre is built from source,\n\n# or when 2 versions of Ogre are installed.  Using absolute paths ensures that\n\n# components that link against Ogre (rviz and any packages depending on rviz)\n\n# all find the same Ogre shared library.\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This definition prevents an Apple header from defining a macro called \"check\", which if\n\n# present, collides with another function in the rviz code. See:\n\n# https://opensource.apple.com/source/CarbonHeaders/CarbonHeaders-18.1/AssertMacros.h\n",
        "Line" : 97,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# set variable names already used with Qt4\n",
        "Line" : 111,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#catkin_lint: ignore_once deprecated_cmake_module\n",
        "Line" : 150,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Not strictly necessary as Eigen is head only\n",
        "Line" : 153,
        "CharPositionInLine" : 44
      },
      "8" : {
        "Text" : "# Possibly map additional variables to the EIGEN3_ prefix.\n",
        "Line" : 154,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Set the Qt version for use in the extras file.\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# This variable controls the target name of the default plugin library.\n\n# It is used in the extras file (processed in caktin_package(...)) and the\n\n# cmake code for the default plugin.\n\n# There is a matching instance of this in the plugin_description.xml.\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#### If gtk ends up being the best way to get the correct window\n\n#### position under X11, this is how to compile it in.\n\n#\n\n# find_package(GTK2)\n\n# include_directories(${GTK2_INCLUDE_DIRS})\n\n# include_directories(/usr/include/gdk-pixbuf-2.0)\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "ca4d43d566e7b910cf41f8eaf4daf9acf5220bc4",
      "LastModified" : "2016-04-09T01:54:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Python bindings are only support with Qt5, PyQt5, and PySide2 for Kinetic+.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/image_view/CMakeLists.txt" : {
      "ObjectId" : "331e368135fcb1b3c0dfae650492a3f904880cfd",
      "LastModified" : "2016-06-16T20:43:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/python_bindings/CMakeLists.txt" : {
      "ObjectId" : "aedb7ad06bfcc3a1a8bc99f4acc196ae0697e69a",
      "LastModified" : "2019-02-17T18:36:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO(wjwwood): re-enabled PySide2 support when it is fixed.\n\n# add_subdirectory(shiboken)\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/python_bindings/shiboken/CMakeLists.txt" : {
      "ObjectId" : "24ea0964dbabfa4c781082b0b92e844a66790f0f",
      "LastModified" : "2019-02-17T18:36:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build file for Python bindings via shiboken and pyside.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#catkin_lint: ignore_once duplicate_find\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This appears to no longer be a problem at least with Shiboken 1.2.2 on OS X and Boost 1.57.\n",
        "Line" : 16,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# shiboken 1.1.2 and higher will segfault until https://bugreports.qt-project.org/browse/PYSIDE-218 is fixed\n",
        "Line" : 19,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# To add a new rviz class to the bindings, add it:\n\n# - in rviz_shiboken_SRCS below, like rviz_myclass_wrapper.cpp\n\n# - in rviz_HDRS below, like ../rviz/my_class.h\n\n# - in global.h, like #include <rviz/my_class.h>\n\n# - in typesystem.xml, like <object-type name=\"rviz::MyClass\"/>\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "src/python_bindings/sip/CMakeLists.txt" : {
      "ObjectId" : "82a936ef2eb35a0ff7f913b58755f477466c5498",
      "LastModified" : "2019-03-29T09:17:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build file for Python bindings via sip and pyqt.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#catkin_lint: ignore_once duplicate_find\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#catkin_lint: ignore_once external_file\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# maintain context for different named target\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#catkin_lint: ignore_once external_file\n",
        "Line" : 71,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "src/rviz/CMakeLists.txt" : {
      "ObjectId" : "9c562dd4c49f5cb2f072d2cd67743b73fcbfb6bf",
      "LastModified" : "2019-03-07T16:59:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build the version number and other build-time constants into the\n\n# source for access at run-time.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#catkin_lint: ignore_once env_var\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We create one lib with the C++...\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "########### The rviz executable ###########\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/rviz/default_plugin/CMakeLists.txt" : {
      "ObjectId" : "1c263ac9ef5e67e9743e42fb54973d07eaabb75d",
      "LastModified" : "2019-03-07T16:59:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Generate to the devel space so the extras file can include it from the devel space.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#catkin_lint: ignore_once external_file\n\n# Install from the devel space to the install space.\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/test/CMakeLists.txt" : {
      "ObjectId" : "6f8c6dc33c1bc4a692f0f7c881addf4f7e9cb8f0",
      "LastModified" : "2019-02-17T18:36:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# rviz's automated tests\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is a test utility which publishes images of different types.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is a test utility which can publish different kinds of markers.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This is a test utility which can publish different kinds of mesh markers.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This is a GTest which tests the different types of primitive display properties.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# TODO(wjwwood): Fix this test, it used to use a set of Mock classes, but\n\n#                has since undergone a lot of changes and it no longer works.\n\n# This is a GTest which tests the display system.\n\n# qt4_wrap_cpp(MOC_MOCK_DISPLAY mock_display.h)\n\n# add_rostest_gtest(display_test display_test.test\n\n#   display_test.cpp\n\n#   mock_context.cpp\n\n#   mock_display.cpp\n\n#   mock_display_factory.cpp\n\n#   mock_property_change_receiver.cpp\n\n#   ${MOC_MOCK_DISPLAY}\n\n#   ${MOC_MOCK_PROPERTY_CHANGE_RECEIVER}\n\n# )\n\n# target_link_libraries(display_test rviz ${catkin_LIBRARIES} ${QT_LIBRARIES})\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# This is a GTest which tests the uniform_string_stream.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This is an example node which serves an rviz logo as an interactive marker.\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# This is an example node which publishes different kinds of point clouds.\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# This is an example node which serves an interactive marker.\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# This is another example node that publishes images.\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# This is a node that sends lots of point clouds.\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Yet another example which sends point clouds.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# This is a node which sends grid cells.\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# This is a test program that uses the rviz panel interface.\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# This is an executable which uses the rviz new display diaglog interface.\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# This is an executable which uses the rviz color editor test.\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# This is a modified version of the property test.\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# This is an executable that uses the line_edit_with_button property interface.\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# This is an executable which tests the connect/disconnect behavior of signals and slots in Qt.\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# This is a GTest which tests the display configuration.\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# This is an acceptance test executable which renders points.\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# This is an example application which creates two ogre render windows.\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# This is a GTest which tests the STL loader\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24
    }
  },
  "FileTypes" : {
    "CMAKE" : 9
  },
  "ElapsedTime" : 1791
}