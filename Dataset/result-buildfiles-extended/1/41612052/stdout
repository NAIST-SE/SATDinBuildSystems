{
  "Repository" : "41612052",
  "Revision" : "HEAD",
  "ObjectId" : "83551f8c25db7e2bed676cb38b579937a6b5e3fc",
  "CommitTime" : "2019-04-14T07:08:40Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "215434e0a0aada2a00edbc1101eba167ecaa68bb",
      "LastModified" : "2019-04-10T15:34:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# default off\n",
        "Line" : 7,
        "CharPositionInLine" : 28
      },
      "1" : {
        "Text" : "# default noop\n",
        "Line" : 33,
        "CharPositionInLine" : 35
      },
      "2" : {
        "Text" : "# default noop\n",
        "Line" : 37,
        "CharPositionInLine" : 26
      },
      "3" : {
        "Text" : "# default noop\n",
        "Line" : 41,
        "CharPositionInLine" : 34
      },
      "4" : {
        "Text" : "# pkgconfig installation:\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/Finddoctest.cmake" : {
      "ObjectId" : "b0d9c26f0c0b0b44aa056ad91fe3486c5560c78b",
      "LastModified" : "2017-10-10T18:06:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/HunterGate.cmake" : {
      "ObjectId" : "c24c0e57714ce4af3036d9a06f40b581fb2e4b62",
      "LastModified" : "2018-02-12T13:46:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2013-2017, Ruslan Baratov\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright notice, this\n\n#   list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright notice,\n\n#   this list of conditions and the following disclaimer in the documentation\n\n#   and/or other materials provided with the distribution.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\n# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n\n# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n\n# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is a gate file to Hunter package manager.\n\n# Include this file using `include` command and add package you need, example:\n\n#\n\n#     cmake_minimum_required(VERSION 3.0)\n\n#\n\n#     include(\"cmake/HunterGate.cmake\")\n\n#     HunterGate(\n\n#         URL \"https://github.com/path/to/hunter/archive.tar.gz\"\n\n#         SHA1 \"798501e983f14b28b10cda16afa4de69eee1da1d\"\n\n#     )\n\n#\n\n#     project(MyProject)\n\n#\n\n#     hunter_add_package(Foo)\n\n#     hunter_add_package(Boo COMPONENTS Bar Baz)\n\n#\n\n# Projects:\n\n#     * https://github.com/hunter-packages/gate/\n\n#     * https://github.com/ruslo/hunter\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# cmake_parse_arguments\n",
        "Line" : 53,
        "CharPositionInLine" : 29
      },
      "3" : {
        "Text" : "# Set HUNTER_GATE_ROOT cmake variable to suitable value.\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Check CMake variable\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Check environment variable\n",
        "Line" : 155,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Check HOME environment variable\n",
        "Line" : 163,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Check SYSTEMDRIVE and USERPROFILE environment variable (windows only)\n",
        "Line" : 171,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# while waiting for lock other instance can do all the job\n",
        "Line" : 253,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# check directory permissions\n",
        "Line" : 261,
        "CharPositionInLine" : 38
      },
      "10" : {
        "Text" : "# Disabling languages speeds up a little bit, reduces noise in the output\n\n# and avoids path too long windows error\n",
        "Line" : 263,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Need to add toolchain file too.\n\n# Otherwise on Visual Studio + MDD this will fail with error:\n\n# \"Could not find an appropriate version of the Windows 10 SDK installed on this machine\"\n",
        "Line" : 300,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# 'toolchain_arg' can't be empty\n",
        "Line" : 307,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Test case: remove Ninja from PATH but set it via CMAKE_MAKE_PROGRAM\n",
        "Line" : 315,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Must be a macro so master file 'cmake/Hunter' can\n\n# apply all variables easily just by 'include' command\n\n# (otherwise PARENT_SCOPE magic needed)\n",
        "Line" : 361,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# variable HUNTER_GATE_DONE set explicitly for external project\n\n# (see `hunter_download`)\n",
        "Line" : 366,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# First HunterGate command will init Hunter, others will be ignored\n",
        "Line" : 371,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Empty function to avoid error \"unknown function\"\n",
        "Line" : 375,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# set HUNTER_GATE_ROOT\n",
        "Line" : 462,
        "CharPositionInLine" : 30
      },
      "19" : {
        "Text" : "# Beautify path, fix probable problems with windows path slashes\n",
        "Line" : 464,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Hunter downloaded manually (e.g. by 'git clone')\n",
        "Line" : 502,
        "CharPositionInLine" : 6
      },
      "21" : {
        "Text" : "# Check Hunter already downloaded by HunterGate\n",
        "Line" : 511,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 22
    },
    "cmake/hunter.cmake" : {
      "ObjectId" : "827fb8988a4da1a4de10c543760bce2a9fc283d0",
      "LastModified" : "2018-02-12T13:46:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/pkgconfig.cmake" : {
      "ObjectId" : "e325bafdc292fb3a103c58b58900fce552bce446",
      "LastModified" : "2018-02-12T13:46:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Installation (https://github.com/forexample/package-example) {\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Layout. This works for all platforms:\n\n#   * <prefix>/lib/cmake/<PROJECT-NAME>\n\n#   * <prefix>/lib/\n\n#   * <prefix>/include/\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Configuration\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Include module with fuction 'write_basic_package_version_file'\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Configure '<PROJECT-NAME>ConfigVersion.cmake'\n\n# Use:\n\n#   * PROJECT_VERSION\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Configure '<PROJECT-NAME>Config.cmake'\n\n# Use variables:\n\n#   * TARGETS_EXPORT_NAME\n\n#   * PROJECT_NAME\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Targets:\n\n#   * header location after install: <prefix>/include/fdeep/fdeep.hpp\n\n#   * headers can be included by C++ code `#include <fdeep/fdeep.hpp>`\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Headers:\n\n#   * include/fdeep/fdeep.hpp -> <prefix>/include/fdeep/fdeep.hpp\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# no trailing slash\n",
        "Line" : 53,
        "CharPositionInLine" : 30
      },
      "9" : {
        "Text" : "# Config\n\n#   * <prefix>/lib/cmake/frugally-deep/frugally-deepConfig.cmake\n\n#   * <prefix>/lib/cmake/frugally-deep/frugally-deepConfigVersion.cmake\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Config\n\n#   * <prefix>/lib/cmake/frugally-deep/frugally-deepTargets.cmake\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# }\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "cmake/toolchain.cmake" : {
      "ObjectId" : "dda38971e717332ba812e177595320fa44f2cfbc",
      "LastModified" : "2018-02-12T13:46:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "f0937f8fc2460b5e7eca6ebc86a7f5eb1dab5dab",
      "LastModified" : "2019-03-09T19:33:28Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test_package/CMakeLists.txt" : {
      "ObjectId" : "e0305f725f895d45c2b3fba134efd700444bd9b4",
      "LastModified" : "2018-03-02T12:15:31Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 8
  },
  "ElapsedTime" : 990
}