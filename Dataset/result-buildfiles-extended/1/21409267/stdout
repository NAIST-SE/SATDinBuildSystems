{
  "Repository" : "21409267",
  "Revision" : "HEAD",
  "ObjectId" : "12d27a8b9b5781d97a674c352a88d6141716534b",
  "CommitTime" : "2018-05-19T19:18:54Z",
  "Files" : {
    "QtApp/CMakeLists.txt" : {
      "ObjectId" : "8047d2d691e0eddbec47af577ecdc9d55f8d6464",
      "LastModified" : "2018-02-10T15:25:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# root of your msvc14 x64 prebuild, there should be a `/lib/cmake` dir\n\n#set( CMAKE_PREFIX_PATH ${CMAKE_PREFIX_PATH} $ENV{QT5_DIR} )\n\n#set( CMAKE_PREFIX_PATH ${CMAKE_PREFIX_PATH} \"C:/Qt/VS2015x64/Qt5.6.0/5.6/msvc2015_64\" ) # remember to add `C:\\Qt\\VS2015x64\\Qt5.6.0\\5.6\\msvc2015_64\\bin` to %PATH%\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "librecraft/CMakeLists.txt" : {
      "ObjectId" : "860002c7a7d7ccaae66e45061cad692143d2bfe7",
      "LastModified" : "2018-05-01T20:17:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add deps subdirectory\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Get Include Directories\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add executable to project\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# set(SFML_ROOT \"${CMAKE_SOURCE_DIR}/SFML-2.4.2\")\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "librecraft/cmake_modules/FindSFML.cmake" : {
      "ObjectId" : "871f8662fae354d8d8ef2f7b904e6f4f02a8a644",
      "LastModified" : "2018-02-10T15:25:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This script locates the SFML library\n\n# ------------------------------------\n\n#\n\n# Usage\n\n# -----\n\n#\n\n# When you try to locate the SFML libraries, you must specify which modules you want to use (system, window, graphics, network, audio, main).\n\n# If none is given, the SFML_LIBRARIES variable will be empty and you'll end up linking to nothing.\n\n# example:\n\n#   find_package(SFML COMPONENTS graphics window system) // find the graphics, window and system modules\n\n#\n\n# You can enforce a specific version, either MAJOR.MINOR or only MAJOR.\n\n# If nothing is specified, the version won't be checked (i.e. any version will be accepted).\n\n# example:\n\n#   find_package(SFML COMPONENTS ...)     // no specific version required\n\n#   find_package(SFML 2 COMPONENTS ...)   // any 2.x version\n\n#   find_package(SFML 2.4 COMPONENTS ...) // version 2.4 or greater\n\n#\n\n# By default, the dynamic libraries of SFML will be found. To find the static ones instead,\n\n# you must set the SFML_STATIC_LIBRARIES variable to TRUE before calling find_package(SFML ...).\n\n# Since you have to link yourself all the SFML dependencies when you link it statically, the following\n\n# additional variables are defined: SFML_XXX_DEPENDENCIES and SFML_DEPENDENCIES (see their detailed\n\n# description below).\n\n# In case of static linking, the SFML_STATIC macro will also be defined by this script.\n\n# example:\n\n#   set(SFML_STATIC_LIBRARIES TRUE)\n\n#   find_package(SFML 2 COMPONENTS network system)\n\n#\n\n# On Mac OS X if SFML_STATIC_LIBRARIES is not set to TRUE then by default CMake will search for frameworks unless\n\n# CMAKE_FIND_FRAMEWORK is set to \"NEVER\" for example. Please refer to CMake documentation for more details.\n\n# Moreover, keep in mind that SFML frameworks are only available as release libraries unlike dylibs which\n\n# are available for both release and debug modes.\n\n#\n\n# If SFML is not installed in a standard path, you can use the SFML_ROOT CMake (or environment) variable\n\n# to tell CMake where SFML is.\n\n#\n\n# Output\n\n# ------\n\n#\n\n# This script defines the following variables:\n\n# - For each specified module XXX (system, window, graphics, network, audio, main):\n\n#   - SFML_XXX_LIBRARY_DEBUG:   the name of the debug library of the xxx module (set to SFML_XXX_LIBRARY_RELEASE is no debug version is found)\n\n#   - SFML_XXX_LIBRARY_RELEASE: the name of the release library of the xxx module (set to SFML_XXX_LIBRARY_DEBUG is no release version is found)\n\n#   - SFML_XXX_LIBRARY:         the name of the library to link to for the xxx module (includes both debug and optimized names if necessary)\n\n#   - SFML_XXX_FOUND:           true if either the debug or release library of the xxx module is found\n\n#   - SFML_XXX_DEPENDENCIES:    the list of libraries the module depends on, in case of static linking\n\n# - SFML_LIBRARIES:    the list of all libraries corresponding to the required modules\n\n# - SFML_FOUND:        true if all the required modules are found\n\n# - SFML_INCLUDE_DIR:  the path where SFML headers are located (the directory containing the SFML/Config.hpp file)\n\n# - SFML_DEPENDENCIES: the list of libraries SFML depends on, in case of static linking\n\n#\n\n# example:\n\n#   find_package(SFML 2 COMPONENTS system window graphics audio REQUIRED)\n\n#   include_directories(${SFML_INCLUDE_DIR})\n\n#   add_executable(myapp ...)\n\n#   target_link_libraries(myapp ${SFML_LIBRARIES})\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# define the SFML_STATIC macro if static build was chosen\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# define the list of search paths for headers and libraries\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# find the SFML include directory\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# check the version number\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# extract the major and minor version numbers from SFML/Config.hpp\n\n# we have to handle framework a little bit differently:\n",
        "Line" : 84,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# if we could extract them, compare with the requested version number\n",
        "Line" : 100,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# transform version numbers to an integer\n",
        "Line" : 102,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# compare them\n",
        "Line" : 105,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# SFML version is < 2.0\n",
        "Line" : 110,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# find the requested modules\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# will be set to false if one of the required modules is not found\n",
        "Line" : 121,
        "CharPositionInLine" : 21
      },
      "12" : {
        "Text" : "# no suffix for sfml-main, it is always a static library\n",
        "Line" : 127,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# release library\n",
        "Line" : 129,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# debug library\n",
        "Line" : 135,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# static release library\n",
        "Line" : 141,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# static debug library\n",
        "Line" : 147,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# dynamic release library\n",
        "Line" : 153,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# dynamic debug library\n",
        "Line" : 159,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# choose the entries that fit the requested link type\n",
        "Line" : 165,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# library found\n",
        "Line" : 184,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "# if both are found, set SFML_XXX_LIBRARY to contain both\n",
        "Line" : 187,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# if only one debug/release variant is found, set the other to be equal to the found one\n",
        "Line" : 193,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "# debug and not release\n",
        "Line" : 195,
        "CharPositionInLine" : 12
      },
      "24" : {
        "Text" : "# release and not debug\n",
        "Line" : 200,
        "CharPositionInLine" : 12
      },
      "25" : {
        "Text" : "# library not found\n",
        "Line" : 205,
        "CharPositionInLine" : 8
      },
      "26" : {
        "Text" : "# mark as advanced\n",
        "Line" : 212,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# add to the global list of libraries\n",
        "Line" : 221,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# in case of static linking, we must also define the list of all the dependencies of SFML libraries\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# detect the OS\n",
        "Line" : 228,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# start with an empty list\n",
        "Line" : 239,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# macro that searches for a 3rd-party library\n",
        "Line" : 243,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# No lookup in environment variables (PATH on Windows), as they may contain wrong library versions\n",
        "Line" : 245,
        "CharPositionInLine" : 8
      },
      "33" : {
        "Text" : "# sfml-system\n",
        "Line" : 253,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# update the list -- these are only system libraries, no need to find them\n",
        "Line" : 257,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : "# sfml-network\n",
        "Line" : 270,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# update the list -- these are only system libraries, no need to find them\n",
        "Line" : 274,
        "CharPositionInLine" : 8
      },
      "37" : {
        "Text" : "# sfml-window\n",
        "Line" : 281,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# find libraries\n",
        "Line" : 285,
        "CharPositionInLine" : 8
      },
      "39" : {
        "Text" : "# update the list\n",
        "Line" : 298,
        "CharPositionInLine" : 8
      },
      "40" : {
        "Text" : "# sfml-graphics\n",
        "Line" : 311,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "# find libraries\n",
        "Line" : 315,
        "CharPositionInLine" : 8
      },
      "42" : {
        "Text" : "# update the list\n",
        "Line" : 319,
        "CharPositionInLine" : 8
      },
      "43" : {
        "Text" : "# sfml-audio\n",
        "Line" : 324,
        "CharPositionInLine" : 4
      },
      "44" : {
        "Text" : "# find libraries\n",
        "Line" : 328,
        "CharPositionInLine" : 8
      },
      "45" : {
        "Text" : "# update the list\n",
        "Line" : 336,
        "CharPositionInLine" : 8
      },
      "46" : {
        "Text" : "# handle errors\n",
        "Line" : 343,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# SFML version not ok\n",
        "Line" : 345,
        "CharPositionInLine" : 4
      },
      "48" : {
        "Text" : "# include directory or library not found\n",
        "Line" : 352,
        "CharPositionInLine" : 4
      },
      "49" : {
        "Text" : "# fatal error\n",
        "Line" : 357,
        "CharPositionInLine" : 8
      },
      "50" : {
        "Text" : "# error but continue\n",
        "Line" : 360,
        "CharPositionInLine" : 8
      },
      "51" : {
        "Text" : "# handle success\n",
        "Line" : 365,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 52
    },
    "librecraft/dependencies/CMakeLists.txt" : {
      "ObjectId" : "984c4af8af2f842e1168de0fea5d3c92f9ae6640",
      "LastModified" : "2018-02-10T15:25:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "librecraft/include/glm/CMakeLists.txt" : {
      "ObjectId" : "d60a887712d6b0346b52b4748c3d87f00340b931",
      "LastModified" : "2018-02-10T15:25:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "librecraft/src/dependencies/libnoise/Makefile" : {
      "ObjectId" : "8df1a9556a7caf0ed094babccb8865f8a43966c1",
      "LastModified" : "2018-02-10T15:25:18Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# defines source files and vpaths\r\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# What source objects are we building?\r\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# hooks for future makefiles being able to make multiple SOs, or older SOs\r\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Real build targets\r\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#clean up after libtool\r\n",
        "Line" : 32,
        "CharPositionInLine" : 23
      },
      "5" : {
        "Text" : "# Utility rules\r\n\n# Generates dependancy files:\r\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# C and C++ libtool (rather than raw CXX/CC) use\r\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# If dependancies have never been built this will produce a horde of\r\n\n# \"file not found\" warnings and *then* build the deps.  Very odd.\r\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8,
      "Errorlog" : "line 44:31 token recognition error at: '\\1'\n"
    }
  },
  "FileTypes" : {
    "CMAKE" : 5,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 881
}