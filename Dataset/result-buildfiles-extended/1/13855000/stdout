{
  "Repository" : "13855000",
  "Revision" : "HEAD",
  "ObjectId" : "db6cd08f18f4917e0c6557b2766fb40d8e2bee39",
  "CommitTime" : "2016-06-20T15:24:13Z",
  "Files" : {
    "lib/assimp/code/CMakeLists.txt" : {
      "ObjectId" : "69ee3d7c70e9aceb0baa1f961a4689ecba089c78",
      "LastModified" : "2015-11-30T01:00:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Listing and grouping of all the source files.\n\n# 1) Set the file lists for each component\n\n# 2) Create a Source Group for each component, for IDE project orginization\n\n# 3) Add libassimp using the file lists (eliminates duplication of file names between\n\n#    source groups and library command)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# macro to add the CMake Option ADD_ASSIMP_IMPORTER_<name> which enables compile of loader\n\n# this way selective loaders can be compiled (reduces filesize + compile time)\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# list of enabled importers\n",
        "Line" : 177,
        "CharPositionInLine" : 33
      },
      "3" : {
        "Text" : "# disabled list (used to print)\n",
        "Line" : 178,
        "CharPositionInLine" : 34
      },
      "4" : {
        "Text" : "#FIXME: allow to set IRRMESH by option\n",
        "Line" : 251,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# VC2010 fixes\n",
        "Line" : 665,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Assimp Files\n",
        "Line" : 690,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Model Support\n",
        "Line" : 699,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Third-party libraries\n",
        "Line" : 702,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Necessary to show the headers in the project when using the VC++ generator:\n",
        "Line" : 710,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# in order to prevent DLL hell, each of the DLLs have to be suffixed with the major version and msvc prefix\n",
        "Line" : 745,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# use full version\n",
        "Line" : 766,
        "CharPositionInLine" : 32
      },
      "12" : {
        "Text" : "# Build against external unzip, or add ../contrib/unzip so\n\n# assimp can #include \"unzip.h\"\n",
        "Line" : 774,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "lib/assimp/contrib/openddlparser/CMakeLists.txt" : {
      "ObjectId" : "a39d0219f051e60a59d5fdebd545cbcb8d7af031",
      "LastModified" : "2015-11-30T01:00:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Force to always compile with W4\n",
        "Line" : 35,
        "CharPositionInLine" : 53
      },
      "1" : {
        "Text" : "# Update if necessary\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "lib/assimp/contrib/picojson/Makefile" : {
      "ObjectId" : "908e2a0a092767afcf71b4321ab0ce81bd913bcb",
      "LastModified" : "2015-11-30T01:00:04Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "lib/assimp/contrib/zlib/CMakeLists.txt" : {
      "ObjectId" : "022d3dfba6cd48e0c006afdd1969b7ca323e315f",
      "LastModified" : "2015-11-30T01:00:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake 3.0 changed the project command, setting policy CMP0048 reverts to the old behaviour.\n\n# See http://www.cmake.org/cmake/help/v3.0/policy/CMP0048.html\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(INSTALL_BIN_DIR \"${CMAKE_INSTALL_PREFIX}/bin\" CACHE PATH \"Installation directory for executables\")\n\n#set(INSTALL_LIB_DIR \"${CMAKE_INSTALL_PREFIX}/lib\" CACHE PATH \"Installation directory for libraries\")\n\n#set(INSTALL_INC_DIR \"${CMAKE_INSTALL_PREFIX}/include\" CACHE PATH \"Installation directory for headers\")\n\n#set(INSTALL_MAN_DIR \"${CMAKE_INSTALL_PREFIX}/share/man\" CACHE PATH \"Installation directory for manual pages\")\n\n#set(INSTALL_PKGCONFIG_DIR \"${CMAKE_INSTALL_PREFIX}/share/pkgconfig\" CACHE PATH \"Installation directory for pkgconfig (.pc) files\")\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Check to see if we have large file support\n\n#\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We add these other definitions here because CheckTypeSize.cmake\n\n# in CMake 2.4.x does not automatically do so and we want\n\n# compatibility with CMake 2.4.x.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# clear variable\n",
        "Line" : 54,
        "CharPositionInLine" : 32
      },
      "5" : {
        "Text" : "#\n\n# Check for fseeko\n\n#\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# Check for unistd.h\n\n#\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# If we're doing an out of source build and the user has a zconf.h\n\n# in their source tree...\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#============================================================================\n\n# zlib\n\n#============================================================================\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# If present will override custom build rule below.\n",
        "Line" : 136,
        "CharPositionInLine" : 23
      },
      "10" : {
        "Text" : "# parse the full version number from zlib.h and include in ZLIB_FULL_VERSION\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# This gets us DLL resource information when compiling on MinGW.\n",
        "Line" : 179,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 12
    },
    "lib/bgfx/3rdparty/glsl-optimizer/CMakeLists.txt" : {
      "ObjectId" : "c058bef4096e14cd346a977e5559dcc22aa1c4ae",
      "LastModified" : "2015-11-30T01:00:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#file(GLOB glcpp-library_sources_remove src/glsl/glcpp/glcpp.c)\n\n#list(REMOVE_ITEM glcpp-library_sources ${glcpp-library_sources_remove})\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# OSX-specific build requirements\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#add_executable(glcpp src/glsl/glcpp/glcpp.c)\n\n#target_link_libraries(glcpp glsl_optimizer)\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "lib/bgfx/3rdparty/scintilla/qt/ScintillaEdit/ScintillaEdit.pro" : {
      "ObjectId" : "1fe61cffb3d527bdedd75d0afa3765e555dd0076",
      "LastModified" : "2015-11-30T01:00:04Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2011-05-05T12:41:23\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/bgfx/3rdparty/scintilla/qt/ScintillaEditBase/ScintillaEditBase.pro" : {
      "ObjectId" : "93dda6e793dc5672db2ddd5d9ac7f12591b2f83d",
      "LastModified" : "2015-11-30T01:00:04Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2011-05-05T12:41:23\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/bgfx/3rdparty/scintilla/qt/ScintillaEditPy/ScintillaEditPy.pro" : {
      "ObjectId" : "4eb968c0316f83703f16267c385674c294173ca7",
      "LastModified" : "2015-11-30T01:00:04Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Clear debug & release so that sepbuild.pri can set one or the other\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# gcc on freebsd 9.2, at least, doesn't support -Wno-empty-body\n",
        "Line" : 38,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Only build for x64 for now\n\n# QMAKE_CFLAGS = -arch i386 -arch x86_64\n\n# QMAKE_CXXFLAGS = -arch i386 -arch x86_64\n\n# QMAKE_LFLAGS = -arch i386 -arch x86_64\n",
        "Line" : 44,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# Note python lib is pulled in via a #pragma\n",
        "Line" : 68,
        "CharPositionInLine" : 28
      },
      "4" : {
        "Text" : "# PySide uses x.y suffix on Windows even though Python uses xy\n",
        "Line" : 70,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Wrapper sources; notifyheader commented out due to shiboken bug\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ScintillaEdit sources\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# HEADERS is used to find what needs to be run through moc\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Rename to not have 'lib' at start\n",
        "Line" : 114,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# Rename to .so and not have 'lib' at start\n",
        "Line" : 119,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 10
    },
    "lib/bullet/BulletCollision/CMakeLists.txt" : {
      "ObjectId" : "3648fb404f820c415b5958baeed79f86d35e8271",
      "LastModified" : "2015-11-30T01:00:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#INSTALL of other files requires CMake 2.6\n",
        "Line" : 260,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Have to list out sub-directories manually:\n",
        "Line" : 279,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 2
    },
    "lib/bullet/BulletDynamics/CMakeLists.txt" : {
      "ObjectId" : "b053c5787c0db0db5150351c2811506f01af30cd",
      "LastModified" : "2015-11-30T01:00:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\tDynamics/Bullet-C-API.cpp\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Have to list out sub-directories manually:\n",
        "Line" : 151,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 2
    },
    "lib/bullet/BulletSoftBody/CMakeLists.txt" : {
      "ObjectId" : "e66bd02d44f15aa3e286a4d76ef1c44acdff675f",
      "LastModified" : "2015-11-30T01:00:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#SUBDIRS( Solvers )\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/bullet/LinearMath/CMakeLists.txt" : {
      "ObjectId" : "8d8a54b9ebf78320bb5ee8b2b90bf5001e0dc4b6",
      "LastModified" : "2015-11-30T01:00:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#FILES_MATCHING requires CMake 2.6\n",
        "Line" : 52,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "lib/freetype/android/freetype-2.4.12/Makefile" : {
      "ObjectId" : "c1fa16cee542044c2b91397de1bd931260d2d0ce",
      "LastModified" : "2015-11-30T01:00:04Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# FreeType 2 build system -- top-level Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright 1996-2000, 2002, 2006 by\n\n# David Turner, Robert Wilhelm, and Werner Lemberg.\n\n#\n\n# This file is part of the FreeType project, and may only be used, modified,\n\n# and distributed under the terms of the FreeType project license,\n\n# LICENSE.TXT.  By continuing to use, modify, or distribute this file you\n\n# indicate that you have read the license and understand and accept it\n\n# fully.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Project names\n\n#\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The variable TOP_DIR holds the path to the topmost directory in the project\n\n# engine source hierarchy.  If it is not defined, default it to `.'.\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The variable OBJ_DIR gives the location where object files and the\n\n# FreeType library are built.\n\n#\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# EOF\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "lib/freetype/android/freetype-2.4.12/src/tools/ftrandom/Makefile" : {
      "ObjectId" : "2e619299cdfcdb13ec98282f200b013d60a002c3",
      "LastModified" : "2015-11-30T01:00:04Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# TOP_DIR and OBJ_DIR should be set by the user to the right directories,\n\n# if necessary.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The setup below is for gcc on a Unix-like platform.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# EOF\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "lib/openal/Android/openal-soft-master/Makefile" : {
      "ObjectId" : "09535d23a475b1620be8df828899c8a66adc96aa",
      "LastModified" : "2015-11-30T01:00:04Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Set to yes to include support for output to OpenSL\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/openal/Android/openal-soft-master/build.xml" : {
      "ObjectId" : "f9b7848af2409fe2449ab5adebc060349f8a6c85",
      "LastModified" : "2015-11-30T01:00:04Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " The local.properties file is created and updated by the 'android' tool.\n         It contains the path to the SDK. It should *NOT* be checked into\n         Version Control Systems. ",
        "Line" : 6,
        "CharPositionInLine" : 38
      },
      "1" : {
        "Text" : " The ant.properties file can be created by you. It is only edited by the\n         'android' tool to add properties to it.\n         This is the place to change some Ant specific build properties.\n         Here are some properties you may want to change/update:\n\n         source.dir\n             The name of the source directory. Default is 'src'.\n         out.dir\n             The name of the output directory. Default is 'bin'.\n\n         For other overridable properties, look at the beginning of the rules\n         files in the SDK, at tools/ant/build.xml\n\n         Properties related to the SDK location or the project target should\n         be updated using the 'android' tool with the 'update' action.\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems.\n\n         ",
        "Line" : 28,
        "CharPositionInLine" : 13
      },
      "2" : {
        "Text" : " The project.properties file is created and updated by the 'android'\n         tool, as well as ADT.\n\n         This contains project specific properties such as project target, and library\n         dependencies. Lower level build properties are stored in ant.properties\n         (or in .classpath for Eclipse projects).\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems. ",
        "Line" : 39,
        "CharPositionInLine" : 77
      },
      "3" : {
        "Text" : " quick check on sdk.dir ",
        "Line" : 42,
        "CharPositionInLine" : 36
      },
      "4" : {
        "Text" : " extension targets. Uncomment the ones where you want to do custom work\n     in between standard targets ",
        "Line" : 50,
        "CharPositionInLine" : 37
      },
      "5" : {
        "Text" : "\n    <target name=\"-pre-build\">\n    </target>\n    <target name=\"-pre-compile\">\n    </target>\n\n    /* This is typically used for code obfuscation.\n       Compiled code location: ${out.classes.absolute.dir}\n       If this is not done in place, override ${out.dex.input.absolute.dir} */\n    <target name=\"-post-compile\">\n    </target>\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : " Import the actual build file.\n\n         To customize existing targets, there are two options:\n         - Customize only one target:\n             - copy/paste the target into this file, *before* the\n               <import> task.\n             - customize it to your needs.\n         - Customize the whole content of build.xml\n             - copy/paste the content of the rules files (minus the top node)\n               into this file, replacing the <import> task.\n             - customize to your needs.\n\n         ***********************\n         ****** IMPORTANT ******\n         ***********************\n         In all cases you must update the value of version-tag below to read 'custom' instead of an integer,\n         in order to avoid having your file be overridden by tools such as \"android update project\"\n    ",
        "Line" : 81,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : " version-tag: 1 ",
        "Line" : 82,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 8
    },
    "lib/openal/Android/openal-soft-master/jni/OpenAL/Makefile" : {
      "ObjectId" : "1f84440d37d6c0b4f1d27359d4efcb897bb0dda4",
      "LastModified" : "2015-11-30T01:00:04Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "plugins/PolyVox/PolyVoxCore/CMakeLists.txt" : {
      "ObjectId" : "3a0625acc31acd305f3d49de75f59f4739e5d25a",
      "LastModified" : "2015-12-10T23:54:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2008-2012 Matt Williams\n\n# Copyright (c) 2008-2012 David Williams\n\n# \n\n# This software is provided 'as-is', without any express or implied\n\n# warranty. In no event will the authors be held liable for any damages\n\n# arising from the use of this software.\n\n# \n\n# Permission is granted to anyone to use this software for any purpose,\n\n# including commercial applications, and to alter it and redistribute it\n\n# freely, subject to the following restrictions:\n\n# \n\n# 1. The origin of this software must not be misrepresented; you must not\n\n# claim that you wrote the original software. If you use this software\n\n# in a product, an acknowledgment in the product documentation would be\n\n# appreciated but is not required.\n\n# \n\n# 2. Altered source versions must be plainly marked as such, and must not be\n\n# misrepresented as being the original software.\n\n# \n\n# 3. This notice may not be removed or altered from any source\n\n# distribution.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Projects source files\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Projects headers files\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#NOTE: The following line should be uncommented when building shared libs.\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\"Sources\" and \"Headers\" are the group names in Visual Studio.\n\n#They may have other uses too...\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Tell CMake the paths\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#Core\n\n#Build\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#Disable warning on STL exports\n",
        "Line" : 149,
        "CharPositionInLine" : 84
      },
      "8" : {
        "Text" : "#Install\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#Install the core header files, including the ones in the Impl subfolder.\n",
        "Line" : 160,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "#On windows, we also install the debug information. It's unfortunate that we have to hard-code\n\n#the 'Debug' part of the path, but CMake doesn't seem to provide a way around this. The best I\n\n#found was: http://www.cmake.org/pipermail/cmake/2007-October/016924.html (and it is a bit ugly).\n",
        "Line" : 163,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "#Install the core header files, including the ones in the Impl subfolder.\n",
        "Line" : 175,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 12
    },
    "src/persistence/rapidjson/thirdparty/yajl/src/CMakeLists.txt" : {
      "ObjectId" : "479b405e66284b56a7fbadb48acd59ce93399f78",
      "LastModified" : "2015-12-10T23:54:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2007-2011, Lloyd Hilaiel <lloyd@hilaiel.com>\n\n#\n\n# Permission to use, copy, modify, and/or distribute this software for any\n\n# purpose with or without fee is hereby granted, provided that the above\n\n# copyright notice and this permission notice appear in all copies.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n\n# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n\n# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n\n# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n\n# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n\n# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n\n# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# useful when fixing lexer bugs.\n\n#ADD_DEFINITIONS(-DYAJL_LEXER_DEBUG)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Ensure defined when building YAJL (as opposed to using it from\n\n# another project).  Used to ensure correct function export when\n\n# building win32 DLL.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# set up some paths\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# set the output path for libraries\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#### setup shared library version number\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#### ensure a .dylib has correct absolute installation paths upon installation\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#### build up an sdk as a post build step\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# create some directories\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# generate build-time source\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# copy public headers to output directory\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# at build time you may specify the cmake variable LIB_SUFFIX to handle\n\n# 64-bit systems which use 'lib64'\n",
        "Line" : 76,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 12
    },
    "src/persistence/rapidjson/thirdparty/yajl/src/api/yajl_version.h.cmake" : {
      "ObjectId" : "4262ff71f9bd7f620850d33f59eba14bbaf21f75",
      "LastModified" : "2015-12-10T23:54:14Z",
      "FileType" : "CMAKESOURCE",
      "CommentCount" : 0
    },
    "src/testing/googleTest/CMakeLists.txt" : {
      "ObjectId" : "0fe26540b345fcab7b3260a8d7f6e784a1128e14",
      "LastModified" : "2015-12-10T23:54:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# CMake build script for Google Test.\n\n#\n\n# To run the tests for Google Test itself on Linux, use 'make test' or\n\n# ctest.  You can select which tests to run using 'ctest -R regex'.\n\n# For more options, run 'ctest --help'.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BUILD_SHARED_LIBS is a standard CMake variable, but we declare it here to\n\n# make it prominent in the GUI.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# When other libraries are using a shared version of runtime libraries,\n\n# Google Test also has to use one.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Defines pre_project_set_up_hermetic_build() and set_up_hermetic_build().\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "########################################################################\n\n#\n\n# Project-wide settings\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Name of the project.\n\n#\n\n# CMake files in this project can refer to the root source directory\n\n# as ${gtest_SOURCE_DIR} and to the root binary directory as\n\n# ${gtest_BINARY_DIR}.\n\n# Language \"C\" is required for find_package(Threads).\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define helper functions and macros used by Google Test.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Defined in internal_utils.cmake.\n",
        "Line" : 52,
        "CharPositionInLine" : 30
      },
      "8" : {
        "Text" : "# Where Google Test's .h files can be found.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Where Google Test's libraries can be found.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "########################################################################\n\n#\n\n# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Google Test libraries.  We build them using more strict warnings than what\n\n# are used for other targets, to ensure that gtest can be compiled by a user\n\n# aggressive about warnings.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "########################################################################\n\n#\n\n# Samples on how to link user tests with gtest or gtest_main.\n\n#\n\n# They are not built by default.  To build them, set the\n\n# gtest_build_samples option to ON.  You can do it by running ccmake\n\n# or specifying the -Dbuild_gtest_samples=ON flag when running cmake.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "########################################################################\n\n#\n\n# Google Test's own tests.\n\n#\n\n# You can skip this section if you aren't interested in testing\n\n# Google Test itself.\n\n#\n\n# The tests are not built by default.  To build them, set the\n\n# gtest_build_tests option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_tests=ON flag when running cmake.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# This must be set in the root directory for the tests to be run by\n\n# 'make test' or ctest.\n",
        "Line" : 107,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "############################################################\n\n# C++ tests built with standard compiler flags.\n",
        "Line" : 111,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "############################################################\n\n# C++ tests built with non-standard compiler flags.\n",
        "Line" : 140,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# The C++ Standard specifies tuple_element<int, class>.\n\n# Yet MSVC 10's <utility> declares tuple_element<size_t, class>.\n\n# That declaration conflicts with our own standard-conforming\n\n# tuple implementation.  Therefore using our own tuple with\n\n# MSVC 10 doesn't compile.\n",
        "Line" : 170,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "############################################################\n\n# Python tests.\n",
        "Line" : 186,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 19
    },
    "src/testing/googleTest/Makefile.am" : {
      "ObjectId" : "cb350b75bc5a58bba70faa8a070144a4a09d4330",
      "LastModified" : "2015-12-10T23:54:14Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Automake file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Nonstandard package files for distribution\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# gtest source files that we don't compile directly.  They are\n\n# #included by gtest-all.cc.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Sample files that we don't compile.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# C++ test files that we don't compile directly.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Python tests that we don't run.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# CMake script\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# MSVC project files\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# xcode project files\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# xcode sample files\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# C++Builder project files\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Distribute and install M4 macro\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# We define the global AM_CPPFLAGS as everything we compile includes from these\n\n# directories.\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Modifies compiler and linker flags for pthreads compatibility.\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Build rules for libraries.\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Bulid rules for samples and tests. Automake's naming for some of\n\n# these variables isn't terribly obvious, so this is a brief\n\n# reference:\n\n#\n\n# TESTS -- Programs run automatically by \"make check\"\n\n# check_PROGRAMS -- Programs built by \"make check\" but not necessarily run\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# A simple sample on using gtest.\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Another sample.  It also verifies that libgtest works.\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# This tests most constructs of gtest and verifies that libgtest_main\n\n# and libgtest work.\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Tests that fused gtest files compile and work.\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Build rules for putting fused Google Test files into the distribution\n\n# package. The user can also create those files by manually running\n\n# scripts/fuse_gtest_files.py.\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Death tests may produce core dumps in the build directory. In case\n\n# this happens, clean them to keep distcleancheck happy.\n",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Disables 'make install' as installing a compiled version of Google\n\n# Test can lead to undefined behavior due to violation of the\n\n# One-Definition Rule.\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "src/testing/googleTest/cmake/internal_utils.cmake" : {
      "ObjectId" : "7efc2ac797aa6ec29cb011191373b3bb5242b74f",
      "LastModified" : "2015-12-10T23:54:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Defines functions and macros useful for building Google Test and\n\n# Google Mock.\n\n#\n\n# Note:\n\n#\n\n# - This file will be run twice when building Google Mock (once via\n\n#   Google Test's CMakeLists.txt, and once via Google Mock's).\n\n#   Therefore it shouldn't have any side effects other than defining\n\n#   the functions and macros.\n\n#\n\n# - The functions/macros defined in this file may depend on Google\n\n#   Test and Google Mock's option() definitions, and thus must be\n\n#   called *after* the options have been defined.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Tweaks CMake's default compiler/linker settings to suit Google Test's needs.\n\n#\n\n# This must be a macro(), as inside a function string() can only\n\n# update variables in the function scope.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For MSVC, CMake sets certain flags to defaults we want to override.\n\n# This replacement code is taken from sample in the CMake Wiki at\n\n# http://www.cmake.org/Wiki/CMake_FAQ#Dynamic_Replace.\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# When Google Test is built as a shared library, it should also use\n\n# shared runtime libraries.  Otherwise, it may end up with multiple\n\n# copies of runtime library data in different modules, resulting in\n\n# hard-to-find crashes. When it is built as a static library, it is\n\n# preferable to use CRT as static libraries, as we don't have to rely\n\n# on CRT DLLs being available. CMake always defaults to using shared\n\n# CRT libraries, so we override that default here.\n",
        "Line" : 28,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# We prefer more strict warning checking for building Google Test.\n\n# Replaces /W3 with /W4 in defaults.\n",
        "Line" : 38,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Defines the compiler/linker flags used to build Google Test and\n\n# Google Mock.  You can tweak these definitions to suit your need.  A\n\n# variable's value is empty before it's explicitly assigned to.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Defines CMAKE_USE_PTHREADS_INIT and CMAKE_THREAD_LIBS_INIT.\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Newlines inside flags variables break CMake's NMake generator.\n\n# TODO(vladl@google.com): Add -RTCs and -RTCu to debug builds.\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Until version 4.3.2, GCC doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 68,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Sun Pro doesn't provide macros to indicate whether exceptions and\n\n# RTTI are enabled, so we define GTEST_HAS_* explicitly.\n",
        "Line" : 75,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# CMake 2.8 changes Visual Age's compiler ID to \"XL\".\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Until version 9.0, Visual Age doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 84,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# RTTI can not be disabled in HP aCC compiler.\n",
        "Line" : 92,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# The pthreads library is available and allowed.\n",
        "Line" : 96,
        "CharPositionInLine" : 32
      },
      "14" : {
        "Text" : "# For building gtest's own tests and samples.\n",
        "Line" : 102,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# For building the gtest libraries.\n",
        "Line" : 110,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# type can be either STATIC or SHARED to denote a static or shared library.\n\n# ARGN refers to additional arguments after 'cxx_flags'.\n",
        "Line" : 117,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "########################################################################\n\n#\n\n# Helper functions for creating build targets.\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# cxx_executable_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ executable that depends on the given libraries and\n\n# is built from the given source files with the given compiler flags.\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# To support mixing linking in static and dynamic libraries, link each\n\n# library in with an extra call to target_link_libraries.\n",
        "Line" : 161,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# cxx_executable(name dir lib srcs...)\n\n#\n\n# creates a named target that depends on the given libs and is built\n\n# from the given source files.  dir/name.cc is implicitly included in\n\n# the source file list.\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Sets PYTHONINTERP_FOUND and PYTHON_EXECUTABLE.\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# cxx_test_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ test that depends on the given libs and is built\n\n# from the given source files with the given compiler flags.\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# cxx_test(name libs srcs...)\n\n#\n\n# creates a named test target that depends on the given libs and is\n\n# built from the given source files.  Unlike cxx_test_with_flags,\n\n# test/name.cc is already implicitly included in the source file list.\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# py_test(name)\n\n#\n\n# creates a Python test with the given name whose main module is in\n\n# test/name.py.  It does nothing if Python is not installed.\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# We are not supporting Python tests on Linux yet as they consider\n\n# all Linux environments to be google3 and try to use google3 features.\n",
        "Line" : 205,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# ${CMAKE_BINARY_DIR} is known at configuration time, so we can\n\n# directly bind it from cmake. ${CTEST_CONFIGURATION_TYPE} is known\n\n# only at ctest runtime (by calling ctest -c <Configuration>), so\n\n# we have to escape $ to delay variable substitution here.\n",
        "Line" : 208,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 28
    },
    "src/testing/googleTest/make/Makefile" : {
      "ObjectId" : "5b27b6a2cbb13e380ee75d186f553bfb5fa144b5",
      "LastModified" : "2015-12-10T23:54:14Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# A sample Makefile for building Google Test and using it in user\n\n# tests.  Please tweak it to suit your environment and project.  You\n\n# may want to move it to your project's root directory.\n\n#\n\n# SYNOPSIS:\n\n#\n\n#   make [all]  - makes everything.\n\n#   make TARGET - makes the given target.\n\n#   make clean  - removes all files generated by make.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Please tweak the following variable definitions as needed by your\n\n# project, except GTEST_HEADERS, which you can use in your own targets\n\n# but shouldn't modify.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Points to the root of Google Test, relative to where this file is.\n\n# Remember to tweak this if you move this file.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Where to find user code.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Flags passed to the preprocessor.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Flags passed to the C++ compiler.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# All tests produced by this Makefile.  Remember to add new tests you\n\n# created to the list.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# All Google Test headers.  Usually you shouldn't change this\n\n# definition.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# House-keeping build targets.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Builds gtest.a and gtest_main.a.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Usually you shouldn't tweak such internal variables, indicated by a\n\n# trailing _.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# For simplicity and to avoid depending on Google Test's\n\n# implementation details, the dependencies specified below are\n\n# conservative and not optimized.  This is fine as Google Test\n\n# compiles fast and for ordinary users its source rarely changes.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Builds a sample test.  A test should link with either gtest.a or\n\n# gtest_main.a, depending on whether it defines its own main()\n\n# function.\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "src/testing/googleTest/scripts/test/Makefile" : {
      "ObjectId" : "cdff584637b7a6e9df1fa43ce8f588c43815e561",
      "LastModified" : "2015-12-10T23:54:14Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# A Makefile for fusing Google Test and building a sample test against it.\n\n#\n\n# SYNOPSIS:\n\n#\n\n#   make [all]  - makes everything.\n\n#   make TARGET - makes the given target.\n\n#   make check  - makes everything and runs the built sample test.\n\n#   make clean  - removes all files generated by make.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Points to the root of fused Google Test, relative to where this file is.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Paths to the fused gtest files.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Where to find the sample test.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Where to find gtest_main.cc.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Flags passed to the preprocessor.\n\n# We have no idea here whether pthreads is available in the system, so\n\n# disable its use.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Flags passed to the C++ compiler.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    }
  },
  "FileTypes" : {
    "CMAKE" : 12,
    "CMAKESOURCE" : 1,
    "QMAKE" : 3,
    "MAKEFILE" : 7,
    "AUTOMAKE" : 1,
    "ANT" : 1
  },
  "ElapsedTime" : 6579
}