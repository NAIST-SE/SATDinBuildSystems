{
  "Repository" : "9808223",
  "Revision" : "HEAD",
  "ObjectId" : "dc7ea1bf471b5043355806dc24ae317a1412ea5f",
  "CommitTime" : "2019-02-08T00:12:09Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "bf87aaed1c10df44734b54e78a5e56c874432e08",
      "LastModified" : "2018-12-12T12:45:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Nightscout tests/builds/analysis\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# XXX.bewest: Mocha is an odd process, and since things are being\n\n# wrapped and transformed, this odd path needs to be used, not the\n\n# normal wrapper.  When ./node_modules/.bin/mocha is used, no coverage\n\n# information is generated.  This happens because typical shell\n\n# wrapper performs process management that mucks with the test\n\n# coverage reporter's ability to instrument the tests correctly.\n\n# Hard coding it to the local with our pinned version is bigger for\n\n# initial installs, but ensures a consistent environment everywhere.\n\n# On Travis, ./node_modules/.bin and other `nvm` and `npm` bundles are\n\n# inserted into the default `$PATH` enviroinment, making pointing to\n\n# the unwrapped mocha executable necessary.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Pinned from dependency list.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Following token deprecated\n\n# export CODACY_REPO_TOKEN=e29ae5cf671f4f918912d9864316207c\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\tNODE_ENV=test ${MONGO_SETTINGS} \\\n#\t${ISTANBUL} cover ${MOCHA} --report lcovonly -- --timeout 5000 -R tap ${TESTS}\t\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Get the version from the package.json file\n",
        "Line" : 58,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "#\n\n# Create a Dockerfile that contains the correct NodeJS version\n",
        "Line" : 61,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "#\n\n# Rebuild the image. We do this with no-cache so that we have all security upgrades,\n\n# since that's more important than fewer layers in the Docker image.\n",
        "Line" : 64,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# Push an image to Docker Hub with the version from package.json:\n",
        "Line" : 68,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "#\n\n# Push the master branch to Docker hub as 'latest'\n",
        "Line" : 70,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "#\n\n# Push the dev branch to Docker Hub as 'latest_dev'\n",
        "Line" : 76,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 11
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 1621
}