{
  "Repository" : "11751699",
  "Revision" : "HEAD",
  "ObjectId" : "028d3b314a6e97be403427d9043a31668e973d0f",
  "CommitTime" : "2019-04-15T17:01:22Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "0c2179cdd0ce56e4b2fd47f836d475c30875eefc",
      "LastModified" : "2019-04-14T13:15:34Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Export all variables to sub-make processes.\n\n#.EXPORT_ALL_VARIABLES: #export\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ROOTDIR avoid abspath to match Makefile targets\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# subdirectories (relative) to PREFIX (install targets)\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# initial default flags: RPM_OPT_FLAGS are usually NULL\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# THRESHOLD problem size (M x N x K) determining when to use BLAS\n\n# A value of zero (0) populates a default threshold\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Generates M,N,K-combinations for each comma separated group e.g., \"1, 2, 3\" generates (1,1,1), (2,2,2),\n\n# and (3,3,3). This way a heterogeneous set can be generated e.g., \"1 2, 3\" generates (1,1,1), (1,1,2),\n\n# (1,2,1), (1,2,2), (2,1,1), (2,1,2) (2,2,1) out of the first group, and a (3,3,3) for the second group\n\n# To generate a series of square matrices one can specify e.g., make MNK=$(echo $(seq -s, 1 5))\n\n# Alternative to MNK, index sets can be specified separately according to a loop nest relationship\n\n# (M(N(K))) using M, N, and K separately. Please consult the documentation for further details.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable thread-local cache of recently dispatched kernels either\n\n# 0: \"disable\", 1: \"enable\", or small power-of-two number.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Issue software prefetch instructions (see end of section\n\n# https://github.com/hfp/libxsmm/#generator-driver)\n\n# Use the enumerator 1...16, or the exact strategy\n\n# name pfsigonly...AL1_BL1_CL1.\n\n#  1: auto-select\n\n#  2: pfsigonly\n\n#  3: BL2viaC\n\n#  4: curAL2\n\n#  7: curAL2_BL2viaC\n\n#  5: AL2\n\n#  6: AL2_BL2viaC\n\n#  8: AL2jpst\n\n#  9: AL2jpst_BL2viaC\n\n# 10: AL1\n\n# 11: BL1\n\n# 12: CL1\n\n# 13: AL1_BL1\n\n# 14: BL1_CL1\n\n# 15: AL1_CL1\n\n# 16: AL1_BL1_CL1\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Preferred precision when registering statically generated code versions\n\n# 0: SP and DP code versions to be registered\n\n# 1: SP only\n\n# 2: DP only\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Specify the size of a cacheline (Bytes)\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Alpha argument of GEMM\n\n# Supported: 1.0\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Beta argument of GEMM\n\n# Supported: 0.0, 1.0\n\n# 0: C  = A * B\n\n# 1: C += A * B\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Determines if the library is thread-safe\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# 0: shared libraries files suitable for dynamic linkage\n\n# 1: library archives suitable for static linkage\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# 0: link all dependencies as specified for the target\n\n# 1: attempt to avoid dependencies if not referenced\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# 0: build according to the value of STATIC\n\n# 1: build according to STATIC=0 and STATIC=1\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Determines if the library can act as a wrapper-library (GEMM)\n\n# 1: enables wrapping SGEMM/DGEMM, and GEMV (depends on \"GEMM\")\n\n# 2: enables wrapping DGEMM only (DGEMV-wrap depends on \"GEMM\")\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Determines the kind of routine called for intercepted GEMMs\n\n# odd: sequential and non-tiled (small problem sizes only)\n\n# even: parallelized and tiled (all problem sizes)\n\n# 3: GEMV is intercepted; small problem sizes\n\n# 4: GEMV is intercepted; all problem sizes\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# JIT backend is enabled by default\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# TRACE facility\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# explicitly target all objects\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# target library for a broad range of systems\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Profiling JIT code using Linux Perf\n\n# PERF=0: disabled (default)\n\n# PERF=1: enabled (without JITDUMP)\n\n# PERF=2: enabled (with JITDUMP)\n\n#\n\n# Additional support for jitdump\n\n# JITDUMP=0: disabled (default)\n\n# JITDUMP=1: enabled\n\n# PERF=2: enabled\n\n#\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# OpenMP is disabled by default and LIBXSMM is\n\n# always agnostic wrt the threading runtime\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# disable lazy initialization and rely on ctor attribute\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Kind of documentation (internal key)\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# state to be excluded from tracking the (re-)build state\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# avoid to link with C++ standard library\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# include common Makefile artifacts\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Version numbers according to interface (version.txt)\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# target library for a broad range of systems\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# osx\n",
        "Line" : 250,
        "CharPositionInLine" : 5
      },
      "32" : {
        "Text" : "# list of object might be \"incomplete\" if not all code gen. FLAGS are supplied with clean target!\n",
        "Line" : 315,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# TODO: full support for Windows calling convention\n",
        "Line" : 452,
        "CharPositionInLine" : 28
      },
      "34" : {
        "Text" : "# auto\n",
        "Line" : 455,
        "CharPositionInLine" : 53
      },
      "35" : {
        "Text" : "# Mapping build options to libxsmm_gemm_prefetch_type (see include/libxsmm_typedefs.h)\n",
        "Line" : 489,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# Prefetch \"auto\" is a pseudo-strategy introduced by the frontend;\n\n# select \"nopf\" for statically generated code.\n",
        "Line" : 491,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "# adopt host scheme\n",
        "Line" : 542,
        "CharPositionInLine" : 31
      },
      "38" : {
        "Text" : "# Mapping build options to libxsmm_gemm_flags (see include/libxsmm_typedefs.h)\n\n#FLAGS = $(shell echo $$((((0==$(ALPHA))*4) | ((0>$(ALPHA))*8) | ((0==$(BETA))*16) | ((0>$(BETA))*32))))\n",
        "Line" : 546,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#SUPPRESS_UNUSED_VARIABLE_WARNINGS += LIBXSMM_UNUSED(A_prefetch); LIBXSMM_UNUSED(B_prefetch);\n\n#SUPPRESS_UNUSED_PREFETCH_WARNINGS = $(NULL)  LIBXSMM_UNUSED(C_prefetch);~\n",
        "Line" : 552,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# target\n",
        "Line" : 665,
        "CharPositionInLine" : 6
      },
      "41" : {
        "Text" : "# noarch\n",
        "Line" : 666,
        "CharPositionInLine" : 5
      },
      "42" : {
        "Text" : "# noarch\n",
        "Line" : 681,
        "CharPositionInLine" : 6
      },
      "43" : {
        "Text" : "# OpenMP\n",
        "Line" : 713,
        "CharPositionInLine" : 5
      },
      "44" : {
        "Text" : "# build rules that include target flags\n",
        "Line" : 736,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# build rules that by default include no target flags\n",
        "Line" : 752,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# static\n",
        "Line" : 830,
        "CharPositionInLine" : 5
      },
      "47" : {
        "Text" : "# static\n",
        "Line" : 853,
        "CharPositionInLine" : 5
      },
      "48" : {
        "Text" : "# static\n",
        "Line" : 865,
        "CharPositionInLine" : 5
      },
      "49" : {
        "Text" : "# static\n",
        "Line" : 879,
        "CharPositionInLine" : 5
      },
      "50" : {
        "Text" : "# static\n",
        "Line" : 896,
        "CharPositionInLine" : 5
      },
      "51" : {
        "Text" : "# static\n",
        "Line" : 912,
        "CharPositionInLine" : 5
      },
      "52" : {
        "Text" : "# intel @ osx\n",
        "Line" : 926,
        "CharPositionInLine" : 24
      },
      "53" : {
        "Text" : "# osx\n",
        "Line" : 929,
        "CharPositionInLine" : 5
      },
      "54" : {
        "Text" : "# static\n",
        "Line" : 933,
        "CharPositionInLine" : 5
      },
      "55" : {
        "Text" : "# static\n",
        "Line" : 946,
        "CharPositionInLine" : 5
      },
      "56" : {
        "Text" : "# intel @ osx\n",
        "Line" : 960,
        "CharPositionInLine" : 24
      },
      "57" : {
        "Text" : "# osx\n",
        "Line" : 963,
        "CharPositionInLine" : 5
      },
      "58" : {
        "Text" : "# static\n",
        "Line" : 967,
        "CharPositionInLine" : 5
      },
      "59" : {
        "Text" : "# added for specfem sample\n\n# will need option: make MNK=\"5 25\" ..\n",
        "Line" : 1015,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# still exists\n",
        "Line" : 1497,
        "CharPositionInLine" : 31
      },
      "61" : {
        "Text" : "# still exists\n",
        "Line" : 1512,
        "CharPositionInLine" : 31
      },
      "62" : {
        "Text" : "# still exists\n",
        "Line" : 1525,
        "CharPositionInLine" : 31
      },
      "63" : {
        "Text" : "# INSTALL_ROOT may sanitize the given PREFIX\n",
        "Line" : 1553,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# ensure INSTALL_ROOT is an absolute path\n",
        "Line" : 1559,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# consider DESTDIR\n",
        "Line" : 1560,
        "CharPositionInLine" : 29
      },
      "66" : {
        "Text" : "# no private libraries\n",
        "Line" : 1714,
        "CharPositionInLine" : 5
      },
      "67" : {
        "Text" : "# no private libraries\n",
        "Line" : 1751,
        "CharPositionInLine" : 5
      },
      "CommentCount" : 68,
      "Errorlog" : "line 1333:40 token recognition error at: '\\1'\nline 1335:65 token recognition error at: '\\1'\nline 1382:40 token recognition error at: '\\1'\nline 1384:65 token recognition error at: '\\1'\nline 1403:40 token recognition error at: '\\1'\nline 1405:65 token recognition error at: '\\1'\nline 1429:40 token recognition error at: '\\1'\nline 1431:65 token recognition error at: '\\1'\nline 1455:40 token recognition error at: '\\1'\nline 1457:65 token recognition error at: '\\1'\nline 1812:47 token recognition error at: '\\1'\nline 1813:42 token recognition error at: '\\s'\nline 1813:44 token recognition error at: '\\s'\nline 1817:40 token recognition error at: '\\1'\nline 1818:69 token recognition error at: '\\1'\nline 1819:29 token recognition error at: '\\1'\nline 1820:76 token recognition error at: '\\s'\nline 1820:78 token recognition error at: '\\s'\n"
    },
    "samples/blocked_gemm/Makefile" : {
      "ObjectId" : "4ecdba80efa1cfcd46ec2b39064b39b0b36c1e6a",
      "LastModified" : "2019-04-14T14:29:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Export all variables to sub-make processes.\n\n#.EXPORT_ALL_VARIABLES: #export\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# include common Makefile artifacts\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# still exists\n",
        "Line" : 85,
        "CharPositionInLine" : 31
      },
      "3" : {
        "Text" : "# still exists\n",
        "Line" : 98,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 4
    },
    "samples/cp2k/Makefile" : {
      "ObjectId" : "1ee1b72d83be8b0f151c407dadeb8fefd118d32d",
      "LastModified" : "2019-04-14T14:29:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Export all variables to sub-make processes.\n\n#.EXPORT_ALL_VARIABLES: #export\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# include common Makefile artifacts\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# still exists\n",
        "Line" : 85,
        "CharPositionInLine" : 31
      },
      "3" : {
        "Text" : "# still exists\n",
        "Line" : 98,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 4
    },
    "samples/deeplearning/cnnlayer/Makefile" : {
      "ObjectId" : "82d542436d977d353e58629baeb505169659601b",
      "LastModified" : "2019-04-14T14:29:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Export all variables to sub-make processes.\n\n#.EXPORT_ALL_VARIABLES: #export\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# include common Makefile artifacts\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# still exists\n",
        "Line" : 94,
        "CharPositionInLine" : 31
      },
      "3" : {
        "Text" : "# still exists\n",
        "Line" : 107,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 4
    },
    "samples/deeplearning/fullyconnecteddriver/Makefile" : {
      "ObjectId" : "fc9148358d7068bca7bd7b00808eaf1b15f173a0",
      "LastModified" : "2019-04-14T14:29:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Export all variables to sub-make processes.\n\n#.EXPORT_ALL_VARIABLES: #export\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# include common Makefile artifacts\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# still exists\n",
        "Line" : 76,
        "CharPositionInLine" : 31
      },
      "3" : {
        "Text" : "# still exists\n",
        "Line" : 89,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 4
    },
    "samples/deeplearning/fusedbndriver/Makefile" : {
      "ObjectId" : "fc9148358d7068bca7bd7b00808eaf1b15f173a0",
      "LastModified" : "2019-04-14T14:29:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Export all variables to sub-make processes.\n\n#.EXPORT_ALL_VARIABLES: #export\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# include common Makefile artifacts\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# still exists\n",
        "Line" : 76,
        "CharPositionInLine" : 31
      },
      "3" : {
        "Text" : "# still exists\n",
        "Line" : 89,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 4
    },
    "samples/deeplearning/grudriver/Makefile" : {
      "ObjectId" : "696ec64f42e96e9a67397e4cf108e5948a5ec00c",
      "LastModified" : "2019-04-14T14:29:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Export all variables to sub-make processes.\n\n#.EXPORT_ALL_VARIABLES: #export\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# include common Makefile artifacts\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# still exists\n",
        "Line" : 85,
        "CharPositionInLine" : 31
      },
      "3" : {
        "Text" : "# still exists\n",
        "Line" : 98,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 4
    },
    "samples/deeplearning/gxm/Makefile" : {
      "ObjectId" : "0c2fb35709421d4d23ddb68670c5b27a1aad4565",
      "LastModified" : "2018-12-20T10:23:42Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#############################################################################\n\n# Copyright (c) 2017-2019, Intel Corporation                                #\n\n# All rights reserved.                                                      #\n\n#                                                                           #\n\n# Redistribution and use in source and binary forms, with or without        #\n\n# modification, are permitted provided that the following conditions        #\n\n# are met:                                                                  #\n\n# 1. Redistributions of source code must retain the above copyright         #\n\n#    notice, this list of conditions and the following disclaimer.          #\n\n# 2. Redistributions in binary form must reproduce the above copyright      #\n\n#    notice, this list of conditions and the following disclaimer in the    #\n\n#    documentation and/or other materials provided with the distribution.   #\n\n# 3. Neither the name of the copyright holder nor the names of its          #\n\n#    contributors may be used to endorse or promote products derived        #\n\n#    from this software without specific prior written permission.          #\n\n#                                                                           #\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS       #\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT         #\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR     #\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT      #\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,    #\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED  #\n\n# TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR    #\n\n# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF    #\n\n# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING      #\n\n# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS        #\n\n# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.              #\n\n#############################################################################\n\n# Sasikanth Avancha, Dhiraj Kalamkar, Alexander Heinecke (Intel Corp.)\n\n#############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# All of the directories containing code.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Source files\n\n# CXX_SRCS are the source files excluding the test ones.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#$(info CXX_SRCS = $(CXX_SRCS))\n\n# BUILD_INCLUDE_DIR contains any generated header files we want to include.\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# PROTO_SRCS are the protocol buffer definitions\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# PROTO_BUILD_DIR will contain the .cc and obj files generated from\n\n# PROTO_SRCS; PROTO_BUILD_INCLUDE_DIR will contain the .h header files\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Generated files\n\n# The generated files for protocol buffers\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Source file objects\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Output files for automatic dependency generation\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Compiler warning locations\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# include and lib directories\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# build directories\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# build\n\n# Determine platform\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Linux\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Custom compiler\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Architecture\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#CXXFLAGS += -DUSE_NTS_SPLIT -DUSE_NTS_BN -DUSE_BLOCKING_BN\n",
        "Line" : 146,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "#CXXFLAGS += -DUSE_NTS_SPLIT -DUSE_NTS_BN\n",
        "Line" : 150,
        "CharPositionInLine" : 1
      },
      "18" : {
        "Text" : "# Debugging\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# configure IO libraries\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# CPU-only configuration\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# BLAS configuration (default = mkl)\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# OpenBLAS\n",
        "Line" : 178,
        "CharPositionInLine" : 1
      },
      "23" : {
        "Text" : "# libxsmm paths\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#MLSL paths\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Optimized Buffer allocation for BP\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Return all\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Timing per layer\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Stats for layer activations/weights\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Complete build flags.\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# build targets\n",
        "Line" : 268,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 31
    },
    "samples/deeplearning/lstmdriver/Makefile" : {
      "ObjectId" : "783356f45dccae3a459b22a325668f4ec5c23625",
      "LastModified" : "2019-04-14T14:29:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Export all variables to sub-make processes.\n\n#.EXPORT_ALL_VARIABLES: #export\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# include common Makefile artifacts\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# still exists\n",
        "Line" : 90,
        "CharPositionInLine" : 31
      },
      "3" : {
        "Text" : "# still exists\n",
        "Line" : 103,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 4
    },
    "samples/deeplearning/poolingdriver/Makefile" : {
      "ObjectId" : "a108bde064ffc9fc0a41232d28e0ffa66479656a",
      "LastModified" : "2019-04-14T14:29:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Export all variables to sub-make processes.\n\n#.EXPORT_ALL_VARIABLES: #export\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# include common Makefile artifacts\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# still exists\n",
        "Line" : 76,
        "CharPositionInLine" : 31
      },
      "3" : {
        "Text" : "# still exists\n",
        "Line" : 89,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 4
    },
    "samples/deeplearning/rnndriver/Makefile" : {
      "ObjectId" : "6bbdf4049cb1d0ec64f317eb05a47fbada283c44",
      "LastModified" : "2019-04-14T14:29:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Export all variables to sub-make processes.\n\n#.EXPORT_ALL_VARIABLES: #export\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# include common Makefile artifacts\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# still exists\n",
        "Line" : 90,
        "CharPositionInLine" : 31
      },
      "3" : {
        "Text" : "# still exists\n",
        "Line" : 103,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 4
    },
    "samples/edge/Makefile" : {
      "ObjectId" : "4f4a7c467ca7af049e82dbf5fd823675cf215abd",
      "LastModified" : "2019-04-14T14:29:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Export all variables to sub-make processes.\n\n#.EXPORT_ALL_VARIABLES: #export\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# include common Makefile artifacts\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# still exists\n",
        "Line" : 114,
        "CharPositionInLine" : 31
      },
      "3" : {
        "Text" : "# still exists\n",
        "Line" : 127,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 4
    },
    "samples/edge/repro/Makefile" : {
      "ObjectId" : "56eb3c2b4b1fa859a747e8d6f636d5bd057bd5a7",
      "LastModified" : "2019-04-14T14:29:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# settings for reproducer\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# settings for compiler\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# settings for libxsmm\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# include common Makefile artifacts\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#$(CXXSRCS) $(CCXSRCS) $(CSOURCS)\n\n#$(CXXOBJS) $(CCXOBJS) $(COBJCTS)\n",
        "Line" : 73,
        "CharPositionInLine" : 22
      },
      "5" : {
        "Text" : "#\\\n           $(OUTDIR)/test_helper\n",
        "Line" : 82,
        "CharPositionInLine" : 49
      },
      "6" : {
        "Text" : "# $(OUTDIR)/test_helper: $(SRCDIR)/edge_helper.test.cpp .state $(OUTDIR)/.make $(SRCDIR)/edge_helper.hpp $(ROOTDIR)/Makefile $(DEPDIR)/Makefile.inc $(LIBDEP)\n\n# \t$(CXX) $(EDGE_CXXFLAGS) $(DFLAGS) $(IFLAGS) $(CTARGET) -c $(SRCDIR)/edge_helper.test.cpp -o $(BLDDIR)/edge_helper.test.o\n\n# \t$(XLD) -o $@ $(BLDDIR)/edge_helper.test.o $(MAINLIB) $(SLDFLAGS) $(LDFLAGS) $(CLDFLAGS)\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# still exists\n",
        "Line" : 143,
        "CharPositionInLine" : 31
      },
      "8" : {
        "Text" : "# still exists\n",
        "Line" : 156,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 9
    },
    "samples/eigen/Makefile" : {
      "ObjectId" : "50a8d4e807d084e47eb69639e203c42388fb4742",
      "LastModified" : "2019-04-14T14:29:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Export all variables to sub-make processes.\n\n#.EXPORT_ALL_VARIABLES: #export\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# include common Makefile artifacts\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# no need to link against any of LIBXSMM's libraries since the sample code uses header-only LIBXSMM\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#$(EXTDEP) $(LIBDEP)\n",
        "Line" : 91,
        "CharPositionInLine" : 73
      },
      "4" : {
        "Text" : "# no need to link against any of LIBXSMM's libraries since the sample code uses header-only LIBXSMM\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#$(EXTDEP) $(LIBDEP)\n",
        "Line" : 95,
        "CharPositionInLine" : 79
      },
      "6" : {
        "Text" : "# still exists\n",
        "Line" : 123,
        "CharPositionInLine" : 31
      },
      "7" : {
        "Text" : "# still exists\n",
        "Line" : 136,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 8
    },
    "samples/magazine/Makefile" : {
      "ObjectId" : "69f5d86900d6264f2438bac60f5de72ae3d546ba",
      "LastModified" : "2019-04-14T14:29:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Export all variables to sub-make processes.\n\n#.EXPORT_ALL_VARIABLES: #export\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# include common Makefile artifacts\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#ifneq (0,$(MKL))\n",
        "Line" : 91,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#DFLAGS += -DEIGEN_USE_MKL_ALL\n",
        "Line" : 92,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#endif\n",
        "Line" : 93,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# still exists\n",
        "Line" : 160,
        "CharPositionInLine" : 31
      },
      "6" : {
        "Text" : "# still exists\n",
        "Line" : 173,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 7
    },
    "samples/matcopy/Makefile" : {
      "ObjectId" : "a203d792778fa4991c4f3fffc66a43d4e6fa5fd7",
      "LastModified" : "2019-04-14T14:29:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Export all variables to sub-make processes.\n\n#.EXPORT_ALL_VARIABLES: #export\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# include common Makefile artifacts\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# still exists\n",
        "Line" : 73,
        "CharPositionInLine" : 31
      },
      "3" : {
        "Text" : "# still exists\n",
        "Line" : 86,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 4
    },
    "samples/nek/Makefile" : {
      "ObjectId" : "81a4a21a3311f2490667ff8c38b1b9d12ffb4413",
      "LastModified" : "2019-04-14T14:29:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Export all variables to sub-make processes.\n\n#.EXPORT_ALL_VARIABLES: #export\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Fortran code here does not allow for PEDANTIC=2\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# include common Makefile artifacts\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# still exists\n",
        "Line" : 100,
        "CharPositionInLine" : 31
      },
      "4" : {
        "Text" : "# still exists\n",
        "Line" : 113,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 5
    },
    "samples/packed/gemm/Makefile" : {
      "ObjectId" : "0cc6d05a9cec07c9d8450fc2bab6712b0a0bcde2",
      "LastModified" : "2019-04-14T14:29:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Export all variables to sub-make processes.\n\n#.EXPORT_ALL_VARIABLES: #export\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Automatically disable parallel builds\n\n# depending on the version of GNU Make.\n\n# MAKE_PARALLEL=0: disable explicitly\n\n# MAKE_PARALLEL=1: enable explicitly\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fortran code here does not allow for PEDANTIC=2\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# include common Makefile artifacts\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# still exists\n",
        "Line" : 101,
        "CharPositionInLine" : 31
      },
      "5" : {
        "Text" : "# still exists\n",
        "Line" : 114,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 6
    },
    "samples/packed/getrf/Makefile" : {
      "ObjectId" : "0cc6d05a9cec07c9d8450fc2bab6712b0a0bcde2",
      "LastModified" : "2019-04-14T14:29:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Export all variables to sub-make processes.\n\n#.EXPORT_ALL_VARIABLES: #export\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Automatically disable parallel builds\n\n# depending on the version of GNU Make.\n\n# MAKE_PARALLEL=0: disable explicitly\n\n# MAKE_PARALLEL=1: enable explicitly\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fortran code here does not allow for PEDANTIC=2\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# include common Makefile artifacts\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# still exists\n",
        "Line" : 101,
        "CharPositionInLine" : 31
      },
      "5" : {
        "Text" : "# still exists\n",
        "Line" : 114,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 6
    },
    "samples/packed/trmm/Makefile" : {
      "ObjectId" : "e1e2fd37bf5284660058aaacb45daa5f81d78724",
      "LastModified" : "2019-04-14T14:29:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Export all variables to sub-make processes.\n\n#.EXPORT_ALL_VARIABLES: #export\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Fortran code here does not allow for PEDANTIC=2\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# include common Makefile artifacts\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# still exists\n",
        "Line" : 89,
        "CharPositionInLine" : 31
      },
      "4" : {
        "Text" : "# still exists\n",
        "Line" : 102,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 5
    },
    "samples/packed/trsm/Makefile" : {
      "ObjectId" : "e1e2fd37bf5284660058aaacb45daa5f81d78724",
      "LastModified" : "2019-04-14T14:29:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Export all variables to sub-make processes.\n\n#.EXPORT_ALL_VARIABLES: #export\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Fortran code here does not allow for PEDANTIC=2\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# include common Makefile artifacts\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# still exists\n",
        "Line" : 89,
        "CharPositionInLine" : 31
      },
      "4" : {
        "Text" : "# still exists\n",
        "Line" : 102,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 5
    },
    "samples/pyfr/Makefile" : {
      "ObjectId" : "1483cc1e89eb5be35b53617ce9de294be49154a4",
      "LastModified" : "2018-12-20T10:23:42Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (c) 2016-2019, Intel Corporation\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n#     * Redistributions of source code must retain the above copyright notice,\n\n#       this list of conditions and the following disclaimer.\n\n#     * Redistributions in binary form must reproduce the above copyright\n\n#       notice, this list of conditions and the following disclaimer in the\n\n#       documentation and/or other materials provided with the distribution.\n\n#     * Neither the name of Intel Corporation nor the names of its contributors\n\n#       may be used to endorse or promote products derived from this software\n\n#       without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\n# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE\n\n# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n\n# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n##################################################################################\n\n# Alexander Heinecke (Intel Corp.)\n\n##################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "samples/smm/Makefile" : {
      "ObjectId" : "3cd3bf1a75d675124b29f3b605dba2a7100d2e32",
      "LastModified" : "2019-04-14T14:29:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Export all variables to sub-make processes.\n\n#.EXPORT_ALL_VARIABLES: #export\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Fortran code here does not allow for PEDANTIC=2\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# include common Makefile artifacts\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# still exists\n",
        "Line" : 111,
        "CharPositionInLine" : 31
      },
      "4" : {
        "Text" : "# still exists\n",
        "Line" : 124,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 5
    },
    "samples/specfem/Makefile" : {
      "ObjectId" : "e954fb3e30e74586120cbee230b495f16543081b",
      "LastModified" : "2019-04-14T14:29:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Export all variables to sub-make processes.\n\n#.EXPORT_ALL_VARIABLES: #export\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Fortran code here does not allow for PEDANTIC=2\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# include common Makefile artifacts\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# specfem example specific\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# OpenMP directives support\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# fixes library paths: substitutes path name from ../mkl/lib/intel64/.. to ../mkl/lib/mic/..\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "##\n\n## targets\n\n##\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# still exists\n",
        "Line" : 110,
        "CharPositionInLine" : 31
      },
      "8" : {
        "Text" : "# still exists\n",
        "Line" : 123,
        "CharPositionInLine" : 31
      },
      "9" : {
        "Text" : "##\n\n## dependencies\n\n##\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "##\n\n## rules\n\n##\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "samples/spmdm/Makefile" : {
      "ObjectId" : "33ca408ad3719625183f767bdf3d441c47192275",
      "LastModified" : "2019-04-14T14:29:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Export all variables to sub-make processes.\n\n#.EXPORT_ALL_VARIABLES: #export\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# include common Makefile artifacts\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# still exists\n",
        "Line" : 90,
        "CharPositionInLine" : 31
      },
      "3" : {
        "Text" : "# still exists\n",
        "Line" : 103,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 4
    },
    "samples/transpose/Makefile" : {
      "ObjectId" : "ad53b8320bb780fa6879d8c2bc4569c4f087acbb",
      "LastModified" : "2019-04-14T14:29:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Export all variables to sub-make processes.\n\n#.EXPORT_ALL_VARIABLES: #export\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# include common Makefile artifacts\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\t$(LD) -o $@ $(BLDDIR)/$(OUTNAME)-c.o $(MAINLIB) $(EXTLIB) $(NOBLASLIB) $(SLDFLAGS) $(LDFLAGS) $(CLDFLAGS)\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# still exists\n",
        "Line" : 100,
        "CharPositionInLine" : 31
      },
      "4" : {
        "Text" : "# still exists\n",
        "Line" : 113,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 5
    },
    "samples/utilities/diff/Makefile" : {
      "ObjectId" : "7862ef13dbb9dbdcb0400d58e99b23e873d42723",
      "LastModified" : "2019-04-14T14:29:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Export all variables to sub-make processes.\n\n#.EXPORT_ALL_VARIABLES: #export\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# include common Makefile artifacts\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# still exists\n",
        "Line" : 73,
        "CharPositionInLine" : 31
      },
      "3" : {
        "Text" : "# still exists\n",
        "Line" : 86,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 4
    },
    "samples/utilities/dispatch/Makefile" : {
      "ObjectId" : "179cef8f955a522f89ce4b9c12c4e81acae63f7a",
      "LastModified" : "2019-04-14T14:29:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Export all variables to sub-make processes.\n\n#.EXPORT_ALL_VARIABLES: #export\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# include common Makefile artifacts\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# still exists\n",
        "Line" : 93,
        "CharPositionInLine" : 31
      },
      "3" : {
        "Text" : "# still exists\n",
        "Line" : 106,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 4
    },
    "samples/utilities/math/Makefile" : {
      "ObjectId" : "7862ef13dbb9dbdcb0400d58e99b23e873d42723",
      "LastModified" : "2019-04-14T14:29:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Export all variables to sub-make processes.\n\n#.EXPORT_ALL_VARIABLES: #export\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# include common Makefile artifacts\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# still exists\n",
        "Line" : 73,
        "CharPositionInLine" : 31
      },
      "3" : {
        "Text" : "# still exists\n",
        "Line" : 86,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 4
    },
    "samples/utilities/mhd/Makefile" : {
      "ObjectId" : "dc6b9ddb51cc4c0f236dc49074291e57b68a1df9",
      "LastModified" : "2019-04-14T14:29:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Export all variables to sub-make processes.\n\n#.EXPORT_ALL_VARIABLES: #export\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Fortran code here does not allow for PEDANTIC=2\n\n#override PEDANTIC = 1\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# include common Makefile artifacts\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#$(EXTDEP) $(LIBDEP)\n",
        "Line" : 59,
        "CharPositionInLine" : 49
      },
      "4" : {
        "Text" : "# still exists\n",
        "Line" : 87,
        "CharPositionInLine" : 31
      },
      "5" : {
        "Text" : "# still exists\n",
        "Line" : 100,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 6
    },
    "samples/utilities/rng/Makefile" : {
      "ObjectId" : "4cdbef6e56634b094845b4b7e915be81b662e475",
      "LastModified" : "2019-04-14T14:29:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Export all variables to sub-make processes.\n\n#.EXPORT_ALL_VARIABLES: #export\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# include common Makefile artifacts\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# still exists\n",
        "Line" : 85,
        "CharPositionInLine" : 31
      },
      "3" : {
        "Text" : "# still exists\n",
        "Line" : 98,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 4
    },
    "samples/utilities/scratch/Makefile" : {
      "ObjectId" : "dd275b76e08de1b5343dbc2f3b18dd8c95cb012d",
      "LastModified" : "2019-04-14T14:29:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Export all variables to sub-make processes.\n\n#.EXPORT_ALL_VARIABLES: #export\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# include common Makefile artifacts\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# still exists\n",
        "Line" : 85,
        "CharPositionInLine" : 31
      },
      "3" : {
        "Text" : "# still exists\n",
        "Line" : 98,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 4
    },
    "samples/utilities/sync/Makefile" : {
      "ObjectId" : "0bdd63a16a0271a9f38c668b3aaee0068a7d3787",
      "LastModified" : "2019-04-14T14:29:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Export all variables to sub-make processes.\n\n#.EXPORT_ALL_VARIABLES: #export\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# include common Makefile artifacts\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# still exists\n",
        "Line" : 88,
        "CharPositionInLine" : 31
      },
      "3" : {
        "Text" : "# still exists\n",
        "Line" : 101,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 4
    },
    "samples/utilities/wrap/Makefile" : {
      "ObjectId" : "f1251477b5b47c1a1c7fff4fc55be310ec4bc3bb",
      "LastModified" : "2019-04-14T14:29:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Export all variables to sub-make processes.\n\n#.EXPORT_ALL_VARIABLES: #export\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# include common Makefile artifacts\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#$(OUTDIR)/dgemv-blas $(OUTDIR)/dgemv-wrap\n",
        "Line" : 66,
        "CharPositionInLine" : 10
      },
      "3" : {
        "Text" : "# should not happen\n",
        "Line" : 119,
        "CharPositionInLine" : 5
      },
      "4" : {
        "Text" : "# should not happen\n",
        "Line" : 133,
        "CharPositionInLine" : 5
      },
      "5" : {
        "Text" : "# still exists\n",
        "Line" : 172,
        "CharPositionInLine" : 31
      },
      "6" : {
        "Text" : "# still exists\n",
        "Line" : 185,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 7
    },
    "samples/xgemm/Makefile" : {
      "ObjectId" : "6d8791b8be141e31447c20238ba7f3bfa08d3624",
      "LastModified" : "2019-04-14T14:29:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Export all variables to sub-make processes.\n\n#.EXPORT_ALL_VARIABLES: #export\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# include common Makefile artifacts\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# still exists\n",
        "Line" : 88,
        "CharPositionInLine" : 31
      },
      "3" : {
        "Text" : "# still exists\n",
        "Line" : 101,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 4
    },
    "tests/Makefile" : {
      "ObjectId" : "f565b1a7014c697865a4022f7f0967beb54f386f",
      "LastModified" : "2019-04-14T14:29:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Export all variables to sub-make processes.\n\n#.EXPORT_ALL_VARIABLES: #export\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# include common Makefile artifacts\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# determine header-only tests (to avoid linking against LIBXSMM libraries; see below)\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# compile headeronly_aux.c as C++ translation unit\n",
        "Line" : 117,
        "CharPositionInLine" : 5
      },
      "4" : {
        "Text" : "#$(DEPDIR)/include/libxsmm_source.h\n",
        "Line" : 126,
        "CharPositionInLine" : 112
      },
      "5" : {
        "Text" : "#$(BLDDIR)/%-f.o: $(SRCDIR)/%.f .state $(BLDDIR)/.make $(ROOTDIR)/Makefile $(DEPDIR)/Makefile.inc $(DEPDIR)/include/libxsmm_source.h\n\n#\t$(FC) $(FCMTFLAGS) $(DFLAGS) $(IFLAGS) $(FCFLAGS) $(FTARGET) -c $< -o $@\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#$(BLDDIR)/%-f90.o: $(SRCDIR)/%.f90 .state $(BLDDIR)/.make $(ROOTDIR)/Makefile $(DEPDIR)/Makefile.inc $(DEPDIR)/include/libxsmm_source.h\n\n#\t$(FC) $(FCMTFLAGS) $(DFLAGS) $(IFLAGS) $(FCFLAGS) $(FTARGET) -c $< -o $@\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#$(BLDDIR)/%-f90.o: $(SRCDIR)/%.F90 .state $(BLDDIR)/.make $(ROOTDIR)/Makefile $(DEPDIR)/Makefile.inc $(DEPDIR)/include/libxsmm_source.h\n\n#\t$(FC) $(FCMTFLAGS) $(DFLAGS) $(IFLAGS) $(FCFLAGS) $(FTARGET) -c $< -o $@\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#$(BLDDIR)/%-f77.o: $(SRCDIR)/%.F .state $(BLDDIR)/.make $(ROOTDIR)/Makefile $(DEPDIR)/Makefile.inc $(DEPDIR)/include/libxsmm_source.h\n\n#\t$(FC) $(FCMTFLAGS) $(DFLAGS) $(IFLAGS) $(FCFLAGS) $(FTARGET) -c $< -o $@\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# still exists\n",
        "Line" : 151,
        "CharPositionInLine" : 31
      },
      "10" : {
        "Text" : "# still exists\n",
        "Line" : 164,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 11
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 36
  },
  "ElapsedTime" : 4468
}