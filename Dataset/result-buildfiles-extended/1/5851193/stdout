{
  "Repository" : "5851193",
  "Revision" : "HEAD",
  "ObjectId" : "4bc4ad4d9e2c223ccadf2b7f4eb11b849137098d",
  "CommitTime" : "2018-09-04T15:31:29Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "a00bb179728684bf570573fa6b12a9f26ae7be7e",
      "LastModified" : "2018-07-31T15:06:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2014 Martin Stumpf\n\n# Copyright (c) 2015 Patrick Diehl\n\n# Copyright (c) 2017 Madhavan Seshadri\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Require a minimum version of CMake\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This project is C++ based.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add our cmake path\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#add -std=gnu++11 to the debug flags\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Set mixed target_libraries allowed\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "########################################################################\n\n# Include hpx\n\n# Instruct cmake to find the HPX settings\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# inherit varios setting from HPXConfig\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Adjust auxiliary build settings for HPX to work properly\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# enable solution folders for MSVC\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "########################################################################\n\n# enable resource precompiler\n\n#\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "########################################################################\n\n# configurations\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "########################################################################\n\n# further includes, depending on config\n\n#\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#get_filename_component(PARENT_DIR ${OPENCL_LIBRARIES} OPENCL_LIBRARY_DIR)\n",
        "Line" : 98,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Only search for PNG lib, if HPXCL_BUILD_EXAMPLES is build\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# VS2012 and above has a special flag for improving the debug experience by\n\n# adding more symbol information to the build (-d2Zi)\n",
        "Line" : 120,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# VS2013 and above know how to do link time constant data segment folding\n\n# VS2013 update 2 and above know how to remove debug information for\n\n#     non-referenced functions and data (-Zc:inline)\n",
        "Line" : 124,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# assume conforming (throwing) operator new implementations\n",
        "Line" : 134,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# enable faster linking (requires VS2015 Update1)\n\n# disabled for now as this flag crashes debugger\n\n# hpx_remove_link_flag(/debug CONFIGURATIONS Debug)\n\n# hpx_add_link_flag(/debug:fastlink CONFIGURATIONS Debug)\n",
        "Line" : 137,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Exceptions\n\n# Runtime type information\n\n# Multiprocessor build\n\n# Increase the maximum size of object file sections\n",
        "Line" : 143,
        "CharPositionInLine" : 36
      },
      "20" : {
        "Text" : "#########################\n\n# Builds\n\n#\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# build opencl\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# build cuda\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "###############################################################################\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24
    },
    "benchmark/CMakeLists.txt" : {
      "ObjectId" : "493e7a713061b24f8bc7bf8ba5ce86f8b3d894b9",
      "LastModified" : "2017-07-20T10:53:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c)       2016 Patrick Diehl\n\n#\t\t\t\t\t  2017 Madhavan Seshadri\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "benchmark/cuda/CMakeLists.txt" : {
      "ObjectId" : "7465b7fa9f98f895c7a57048f8070025c1138a03",
      "LastModified" : "2018-07-31T15:06:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c)       2016 Patrick Diehl\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "benchmark/cuda/dgemm/CMakeLists.txt" : {
      "ObjectId" : "2ac98f4565929369389ef4e89bf17554548cd024",
      "LastModified" : "2018-07-31T15:06:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2017 Madhavan Seshadri\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "############################################################################\n\n# Configure pure CUDA benchmarks\n\n############################################################################\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#Benchmark for single dgemm kernel\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "############################################################################\n\n# Configure HPXCL benchmarks\n\n############################################################################\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# add example executable\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# add a custom target for this example\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# make pseudo-targets depend on master pseudo-target\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# add dependencies to pseudo-target\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "benchmark/cuda/smvp/CMakeLists.txt" : {
      "ObjectId" : "ed47594ecb4a062d975da0000552496e1cf42410",
      "LastModified" : "2018-07-31T15:06:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2017 Madhavan Seshadri\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "############################################################################\n\n# Configure pure CUDA benchmarks\n\n############################################################################\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#Benchmark for single dgemm kernel\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "############################################################################\n\n# Configure HPXCL benchmarks\n\n############################################################################\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# add example executable\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# add a custom target for this example\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# make pseudo-targets depend on master pseudo-target\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# add dependencies to pseudo-target\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "benchmark/cuda/stencil/CMakeLists.txt" : {
      "ObjectId" : "aec595685e7c365e1251e42b70104ac36715d3bf",
      "LastModified" : "2018-09-01T16:02:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2015 Patrick Diehl\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "############################################################################\n\n# Configure pure CUDA benchmarks\n\n############################################################################\n",
        "Line" : 7,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "#Benchmark for single stencil kernel\n",
        "Line" : 17,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "#Benchmark for partitions\n",
        "Line" : 19,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "#Benchmark for partitions using multiple devices\n",
        "Line" : 21,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "############################################################################\n\n# Configure HPXCL benchmarks\n\n############################################################################\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# add example executable\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# add a custom target for this example\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# make pseudo-targets depend on master pseudo-target\n",
        "Line" : 52,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# add dependencies to pseudo-target\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 10
    },
    "benchmark/cuda/stream/CMakeLists.txt" : {
      "ObjectId" : "371f75e999451b12f4034f134a4455f176818f4e",
      "LastModified" : "2018-07-31T15:06:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2015 Patrick Diehl\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "############################################################################\n\n# Configure HPXCL benchmarks\n\n############################################################################\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add example executable\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# add a custom target for this example\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# make pseudo-targets depend on master pseudo-target\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# add dependencies to pseudo-target\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "benchmark/opencl/CMakeLists.txt" : {
      "ObjectId" : "eb4854ded031e1ba64622c894bc9dc4d78c90d1e",
      "LastModified" : "2018-07-31T15:06:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2017 Madhavan Seshadri\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#add_subdirectory(stencil)\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "benchmark/opencl/dgemm/CMakeLists.txt" : {
      "ObjectId" : "28fc8403611eb2172a22accba1f8a09e49662947",
      "LastModified" : "2018-07-31T15:06:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2017 Madhavan Seshadri\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "############################################################################\n\n# Configure pure OPENCL benchmarks\n\n############################################################################\n",
        "Line" : 7,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# add example executable\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add a custom target for this example\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# make pseudo-targets depend on master pseudo-target\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# add dependencies to pseudo-target\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "benchmark/opencl/smvp/CMakeLists.txt" : {
      "ObjectId" : "e6ae5453cb2692a555fb1c00505f86e3152c512a",
      "LastModified" : "2018-07-31T15:06:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2017 Madhavan Seshadri\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "############################################################################\n\n# Configure pure OPENCL benchmarks\n\n############################################################################\n",
        "Line" : 7,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# add example executable\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add a custom target for this example\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# make pseudo-targets depend on master pseudo-target\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# add dependencies to pseudo-target\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "benchmark/opencl/stencil/CMakeLists.txt" : {
      "ObjectId" : "00620082c28a44a7cba98ea1b529fb55c7639fa1",
      "LastModified" : "2018-07-31T15:06:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2017 Madhavan Seshadri\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "############################################################################\n\n# Configure pure OPENCL benchmarks\n\n############################################################################\n",
        "Line" : 7,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "benchmark/opencl/stream/CMakeLists.txt" : {
      "ObjectId" : "9251eb8730c1603d504d692ea18a76031d99937f",
      "LastModified" : "2018-07-31T15:06:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2017 Madhavan Seshadri\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "############################################################################\n\n# Configure pure OPENCL benchmarks\n\n############################################################################\n",
        "Line" : 7,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "cmake/EmbedResources.cmake" : {
      "ObjectId" : "1c1ee87c4f49c0828cd18c33fc538a8dc694fc88",
      "LastModified" : "2018-07-31T15:06:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set up input and output variables\n",
        "Line" : 18,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "# set the build variable\n",
        "Line" : 24,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "cmake/FindNVRTC.cmake" : {
      "ObjectId" : "aa75bc643478234864d687fdf511044766271ad4",
      "LastModified" : "2018-07-31T15:06:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c)    2015 Patrick Diehl\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt\n\n##############################################################################\n\n# - Try to find the Cuda NVRTC library\n\n# Once done this will define\n\n# LIBNVRTC_FOUND - System has LibNVRTC\n\n# LIBNVRTC_LIBRARY_DIR - The NVRTC library dir\n\n# CUDA_NVRTC_LIB - The NVRTC lib\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindOpenCL.cmake" : {
      "ObjectId" : "6938315fe6064633c567db1f42ca8ff8de5eeb1c",
      "LastModified" : "2018-07-31T15:06:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find OpenCL\n\n# This module tries to find an OpenCL implementation on your system. It supports\n\n# AMD / ATI, Apple and NVIDIA implementations, but should work, too.\n\n#\n\n# To set manually the paths, define these CMAKE variables:\n\n# OpenCL_INCPATH    - Include path (e.g. -DOpenCL_INCPATH=/opt/cuda/4.0/cuda/include)\n\n# OpenCL_LIBPATH    - Library path (e.h. -DOpenCL_LIBPATH=/usr/lib64/nvidia)\n\n#\n\n# Once done this will define\n\n#  OPENCL_FOUND            - system has OpenCL\n\n#  OPENCL_INCLUDE_DIRS     - the OpenCL include directory\n\n#  OPENCL_LIBRARIES        - link these to use OpenCL\n\n#  OPENCL_HAS_CPP_BINDINGS - TRUE if cl.hpp was found\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The AMD SDK currently installs both x86 and x86_64 libraries\n\n# This is only a hack to find out architecture\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# On Win32 search relative to the library\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Unix style platforms\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# The AMD SDK currently does not place its headers\n\n# in /usr/include, therefore also search relative\n\n# to the library\n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# This is often the same, so clean up\n",
        "Line" : 76,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "cmake/FindPNG.cmake" : {
      "ObjectId" : "35d359f9211b8c57c6a34212a4e4f945a4f6a46f",
      "LastModified" : "2018-07-31T15:06:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindPNG\n\n# -------\n\n#\n\n# Find the native PNG includes and library\n\n#\n\n#\n\n#\n\n# This module searches libpng, the library for working with PNG images.\n\n#\n\n# It defines the following variables\n\n#\n\n# ::\n\n#\n\n#   PNG_INCLUDE_DIRS, where to find png.h, etc.\n\n#   PNG_LIBRARIES, the libraries to link against to use PNG.\n\n#   PNG_DEFINITIONS - You should add_definitons(${PNG_DEFINITIONS}) before compiling code that includes png library files.\n\n#   PNG_FOUND, If false, do not try to use PNG.\n\n#   PNG_VERSION_STRING - the version of the PNG library found (since CMake 2.8.8)\n\n#\n\n# Also defined, but not for general use are\n\n#\n\n# ::\n\n#\n\n#   PNG_LIBRARY, where to find the PNG library.\n\n#\n\n# For backward compatiblity the variable PNG_INCLUDE_DIR is also set.\n\n# It has the same value as PNG_INCLUDE_DIRS.\n\n#\n\n# Since PNG depends on the ZLib compression library, none of the above\n\n# will be defined unless ZLib can be found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2002-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# OpenBSD\n",
        "Line" : 56,
        "CharPositionInLine" : 50
      },
      "3" : {
        "Text" : "# Windows x86\n",
        "Line" : 57,
        "CharPositionInLine" : 77
      },
      "4" : {
        "Text" : "# Windows x64\n",
        "Line" : 58,
        "CharPositionInLine" : 88
      },
      "5" : {
        "Text" : "#foreach(search ${PNG_SEARCH_DIRS})\n",
        "Line" : 63,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#endforeach()\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# For compatiblity with versions prior to this multi-config search, honor\n\n# any PNG_LIBRARY that is already specified and skip the search.\n",
        "Line" : 88,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Set by select_library_configurations(), but we want the one from\n\n# find_package_handle_standard_args() below.\n",
        "Line" : 100,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# png.h includes zlib.h. Sigh.\n",
        "Line" : 105,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# for backward compatiblity\n",
        "Line" : 107,
        "CharPositionInLine" : 48
      },
      "11" : {
        "Text" : "# No need to define PNG_USE_DLL here, because it's default for Cygwin.\n",
        "Line" : 112,
        "CharPositionInLine" : 11
      },
      "12" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set PNG_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "cmake/FindZLIB.cmake" : {
      "ObjectId" : "862636beef130596874146247eeb65af4d2a5a3a",
      "LastModified" : "2018-07-31T15:06:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindZLIB\n\n# --------\n\n#\n\n# Find zlib\n\n#\n\n# Find the native ZLIB includes and library.  Once done this will define\n\n#\n\n# ::\n\n#\n\n#   ZLIB_INCLUDE_DIRS   - where to find zlib.h, etc.\n\n#   ZLIB_LIBRARIES      - List of libraries when using zlib.\n\n#   ZLIB_FOUND          - True if zlib found.\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#   ZLIB_VERSION_STRING - The version of zlib found (x.y.z)\n\n#   ZLIB_VERSION_MAJOR  - The major version of zlib\n\n#   ZLIB_VERSION_MINOR  - The minor version of zlib\n\n#   ZLIB_VERSION_PATCH  - The patch version of zlib\n\n#   ZLIB_VERSION_TWEAK  - The tweak version of zlib\n\n#\n\n#\n\n#\n\n# The following variable are provided for backward compatibility\n\n#\n\n# ::\n\n#\n\n#   ZLIB_MAJOR_VERSION  - The major version of zlib\n\n#   ZLIB_MINOR_VERSION  - The minor version of zlib\n\n#   ZLIB_PATCH_VERSION  - The patch version of zlib\n\n#\n\n#\n\n#\n\n# An includer may set ZLIB_ROOT to a zlib installation root to tell this\n\n# module where to look.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2001-2011 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search ZLIB_ROOT first if it is set.\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Normal search.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Try each search configuration.\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# only append a TWEAK version if it exists:\n",
        "Line" : 91,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set ZLIB_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/SelectLibraryConfigurations.cmake" : {
      "ObjectId" : "d7108562b1bdee824723f15ade932d4564495371",
      "LastModified" : "2018-07-31T15:06:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# SelectLibraryConfigurations\n\n# ---------------------------\n\n#\n\n#\n\n#\n\n# select_library_configurations( basename )\n\n#\n\n# This macro takes a library base name as an argument, and will choose\n\n# good values for basename_LIBRARY, basename_LIBRARIES,\n\n# basename_LIBRARY_DEBUG, and basename_LIBRARY_RELEASE depending on what\n\n# has been found and set.  If only basename_LIBRARY_RELEASE is defined,\n\n# basename_LIBRARY will be set to the release value, and\n\n# basename_LIBRARY_DEBUG will be set to basename_LIBRARY_DEBUG-NOTFOUND.\n\n# If only basename_LIBRARY_DEBUG is defined, then basename_LIBRARY will\n\n# take the debug value, and basename_LIBRARY_RELEASE will be set to\n\n# basename_LIBRARY_RELEASE-NOTFOUND.\n\n#\n\n# If the generator supports configuration types, then basename_LIBRARY\n\n# and basename_LIBRARIES will be set with debug and optimized flags\n\n# specifying the library to be used for the given configuration.  If no\n\n# build type has been set or the generator in use does not support\n\n# configuration types, then basename_LIBRARY and basename_LIBRARIES will\n\n# take only the release value, or the debug value if the release one is\n\n# not set.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2009 Will Dicharry <wdicharry@stellarscience.com>\n\n# Copyright 2005-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This macro was adapted from the FindQt4 CMake module and is maintained by Will\n\n# Dicharry <wdicharry@stellarscience.com>.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# if the generator supports configuration types or CMAKE_BUILD_TYPE\n\n# is set, then set optimized and debug options.\n",
        "Line" : 55,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 4
    },
    "cuda/CMakeLists.txt" : {
      "ObjectId" : "1a5f2fbd3363c21fc2607b4cb598a806008426fa",
      "LastModified" : "2018-07-31T15:06:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c)       2014 Martin Stumpf\n\n#                     2014 Damond Howard\n\n#                     2015 Patrick Diehl\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add installation of the header files\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cuda/Makefile" : {
      "ObjectId" : "98f3e8fa153a7f4ce24de7ab7b5a65fd33f841f4",
      "LastModified" : "2018-07-31T15:06:45Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# CMAKE generated file: DO NOT EDIT!\n\n# Generated by \"Unix Makefiles\" Generator, CMake Version 2.8\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Default target executed when no arguments are given to make.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#=============================================================================\n\n# Special targets provided by cmake.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Disable implicit rules so canonical targets will work.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Remove some rules from gmake that .SUFFIXES does not remove.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Suppress display of executed commands.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# A target that is always out of date.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#=============================================================================\n\n# Set environment variables for the build.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# The shell in which to execute make rules.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# The CMake executable.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# The command to remove a file.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# The program to use to edit the cache.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# The top-level source directory on which CMake was run.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# The top-level build directory on which CMake was run.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#=============================================================================\n\n# Targets provided globally by CMake.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Special rule for the target edit_cache\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Special rule for the target edit_cache\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Special rule for the target install\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Special rule for the target install\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Special rule for the target install/local\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Special rule for the target install/local\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Special rule for the target install/strip\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Special rule for the target install/strip\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Special rule for the target list_install_components\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Special rule for the target list_install_components\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Special rule for the target rebuild_cache\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Special rule for the target rebuild_cache\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# The main all target\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# The main clean target\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# The main clean target\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Prepare targets for installation.\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Prepare targets for installation.\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# clear depends\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Convenience name for target.\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Convenience name for target.\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# fast build rule for target.\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# target to build an object file\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# target to build an object file\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# target to build an object file\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# target to build an object file\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# target to build an object file\n",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 271,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# target to build an object file\n",
        "Line" : 279,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 287,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# target to build an object file\n",
        "Line" : 303,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 311,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 319,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# target to build an object file\n",
        "Line" : 327,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 335,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 343,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# target to build an object file\n",
        "Line" : 351,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 359,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 367,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# target to build an object file\n",
        "Line" : 375,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 383,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 391,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# target to build an object file\n",
        "Line" : 399,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 407,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 415,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# target to build an object file\n",
        "Line" : 423,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 431,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 439,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# Help Target\n",
        "Line" : 444,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "#=============================================================================\n\n# Special targets to cleanup operation of make.\n",
        "Line" : 497,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# Special rule to run CMake to check the build system integrity.\n\n# No rule that depends on this can have commands that come from listfiles\n\n# because they might be regenerated.\n",
        "Line" : 500,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 75
    },
    "cuda/cmake_install.cmake" : {
      "ObjectId" : "99d8a5c9456a30d937df912184af95ebf6087998",
      "LastModified" : "2018-07-31T15:06:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install script for directory: /home/diehl/git/hpxcl/cuda\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the install prefix\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the install configuration name.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set the component getting installed.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Install shared libraries without execute permission?\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "docs/CMakeLists.txt" : {
      "ObjectId" : "0e14142ed3ffc5c96320e006a96b09fa74cb1604",
      "LastModified" : "2018-07-31T15:06:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c)       2014 Martin Stumpf\n\n#\t\t\t\t\t  2016 Patrick Diehl\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#hpx_write_boostbook_catalog(${CMAKE_CURRENT_BINARY_DIR}/boostbook_catalog.xml)\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#find_package(BoostAutoIndex)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#############################################################################\n\n# Definitions for autodoc.doxy.in\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#############################################################################\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Generate Doxygen from the source code.\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Create links to properly view the docs in the build directory\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "examples/CMakeLists.txt" : {
      "ObjectId" : "6cc23b64af245ecc0f718a0caedaac3a7c04c096",
      "LastModified" : "2018-07-31T15:06:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c)       2013 Martin Stumpf\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/cuda/CMakeLists.txt" : {
      "ObjectId" : "e88cd0d8c5ef34bfa8f76ef0c89a573ae680727d",
      "LastModified" : "2018-09-01T16:02:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c)       2015 Patrick Diehl\n\n#                     2017 Madhavan Seshadri\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add example executable\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# add a custom target for this example\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# make pseudo-targets depend on master pseudo-target\n",
        "Line" : 32,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# add dependencies to pseudo-target\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "examples/cuda/mandelbrot/CMakeLists.txt" : {
      "ObjectId" : "5968d10f64650617d604315586ef20e5591d6d7b",
      "LastModified" : "2018-09-01T16:02:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c)       2017 Madhavan Seshadri\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add example executable\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add a custom target for this example\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# make pseudo-targets depend on master pseudo-target\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "examples/opencl/CMakeLists.txt" : {
      "ObjectId" : "440079062cb3e0ff2cf9fe307ad3d12d59552721",
      "LastModified" : "2018-07-31T15:06:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2013 Martin Stumpf\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add example executable\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# add a custom target for this example\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# make pseudo-targets depend on master pseudo-target\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# add dependencies to pseudo-target\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "examples/opencl/benchmark_vector/CMakeLists.txt" : {
      "ObjectId" : "7b498ec22ba1d0a2e3aa385a275c7423f2b8d37b",
      "LastModified" : "2018-07-31T15:06:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2013 Martin Stumpf\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add example executable\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add a custom target for this example\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# make pseudo-targets depend on master pseudo-target\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# add dependencies to pseudo-target\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "examples/opencl/mandelbrot/CMakeLists.txt" : {
      "ObjectId" : "5571ecbd8cdd04ada1e81f947e885893a081a979",
      "LastModified" : "2018-07-31T15:06:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2013 Martin Stumpf\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add example executable\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add a custom target for this example\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# make pseudo-targets depend on master pseudo-target\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# add dependencies to pseudo-target\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# add example executable\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# add a custom target for this example\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# make pseudo-targets depend on master pseudo-target\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# add dependencies to pseudo-target\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "opencl/CMakeLists.txt" : {
      "ObjectId" : "ab8e6069703dd4be62df7cc675e5e11693a52746",
      "LastModified" : "2018-07-31T15:06:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c)       2013 Martin Stumpf\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set library exports\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# allow old opencl 1.1 calls\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "0078bb04813cdc711b7de85dc7cc22786f272baf",
      "LastModified" : "2018-07-31T15:06:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2011 Bryce Adelstein-Lelbach\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/performance/CMakeLists.txt" : {
      "ObjectId" : "9a0e3015253ec8299b3a818e5fc5858abf189304",
      "LastModified" : "2018-07-31T15:06:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2011-2012 Bryce Adelstein-Lelbach\n\n# Copyright (c) 2007-2012 Hartmut Kaiser\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#if(HPXCL_WITH_CUDA)\n\n#  set(subdirs\n\n#    ${subdirs} cuda)\n\n#endif()\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tests/performance/opencl/CMakeLists.txt" : {
      "ObjectId" : "d1b84286146a416d65ed03dde2f9c9a5d567ee79",
      "LastModified" : "2018-07-31T15:06:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2007-2013 Hartmut Kaiser\n\n# Copyright (c) 2011-2012 Bryce Adelstein-Lelbach\n\n# Copyright (c) 2013      Martin Stumpf\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add example executable\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# add a custom target for this example\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# make pseudo-targets depend on master pseudo-target\n",
        "Line" : 32,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# add dependencies to pseudo-target\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "tests/regressions/CMakeLists.txt" : {
      "ObjectId" : "8b137891791fe96927ad78e64b0aad7bded08bdc",
      "LastModified" : "2018-07-31T15:06:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/unit/CMakeLists.txt" : {
      "ObjectId" : "001cda1e46e5b7fea91c327835c177f0e02e0d09",
      "LastModified" : "2018-07-31T15:06:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2011-2012 Bryce Adelstein-Lelbach\n\n# Copyright (c) 2007-2012 Hartmut Kaiser\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/unit/cuda/CMakeLists.txt" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2018-07-31T15:06:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/unit/opencl/CMakeLists.txt" : {
      "ObjectId" : "dae07d4756182146f31e2201730270159cb4e6f1",
      "LastModified" : "2018-07-31T15:06:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2007-2013 Hartmut Kaiser\n\n# Copyright (c) 2011-2012 Bryce Adelstein-Lelbach\n\n# Copyright (c) 2013      Martin Stumpf\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(async_continue_PARAMETERS LOCALITIES 2)\n\n#set(promise_PARAMETERS THREADS_PER_LOCALITY 4)\n\n#set(events_and_futures_PARAMETERS THREADS_PER_LOCALITY 4)\n\n#set(buffer_read_write_PARAMETERS    LOCALITIES 2)\n\n#set(kernel_PARAMETERS               LOCALITIES 2)\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add example executable\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#add_hpx_unit_test(\"opencl\" ${test}_remote EXECUTABLE ${test}\n\n#                                      LOCALITIES 2\n\n#                                     THREADS_PER_LOCALITY 2)\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# add a custom target for this example\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# make pseudo-targets depend on master pseudo-target\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# add dependencies to pseudo-target\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    }
  },
  "FileTypes" : {
    "CMAKE" : 35,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 1144
}