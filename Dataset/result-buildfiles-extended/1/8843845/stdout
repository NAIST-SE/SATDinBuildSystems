{
  "Repository" : "8843845",
  "Revision" : "HEAD",
  "ObjectId" : "1326988d1091202be426aba07d0061b6759862ff",
  "CommitTime" : "2019-04-18T22:30:11Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "7f4750e49a615a43c308a5ab7f37e8d917daaf4c",
      "LastModified" : "2019-01-23T10:12:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Options for coder / decoder executables.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Option needed for handling Unicode file names on Windows.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Include dependencies.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ##############################################################################\n\n# Options.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Windows recommends setting both UNICODE and _UNICODE.\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# ##############################################################################\n\n# Android only.\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# MSVC doesn't have libm\n",
        "Line" : 90,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# ##############################################################################\n\n# WebP source files. Read the Makefile.am to get the source files.\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# We expect the Makefiles to define the sources as defined in the first regex.\n\n# E.g.: libimagedec_la_SOURCES  = image_dec.c image_dec.h\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Remove the files specific to SIMD we don't use.\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Generate the config.h file.\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# ##############################################################################\n\n# Build the webpdecoder library.\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# avoid security warnings for e.g., fopen() used in the examples.\n",
        "Line" : 160,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Build the webp library.\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Make sure the OBJECT libraries are built with position independent code (it is\n\n# not ON by default).\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Build the webp demux library.\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Set the version numbers.\n",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Define the libraries to install.\n",
        "Line" : 308,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Deal with SIMD. Change the compile flags for SIMD files we use.\n",
        "Line" : 311,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Build the executables if asked for.\n",
        "Line" : 333,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Example utility library.\n",
        "Line" : 340,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Image-decoding utility library.\n",
        "Line" : 354,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Image-encoding utility library.\n",
        "Line" : 364,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# dwebp\n",
        "Line" : 379,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# cwebp\n",
        "Line" : 388,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# gif2webp\n",
        "Line" : 420,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# img2webp\n",
        "Line" : 436,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# vwebp\n",
        "Line" : 452,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# webpinfo\n",
        "Line" : 480,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# webpmux\n",
        "Line" : 491,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# get_disto\n",
        "Line" : 507,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# webp_quality\n",
        "Line" : 516,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# vwebp_sdl\n",
        "Line" : 522,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# JavaScript version\n",
        "Line" : 540,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# WASM version\n",
        "Line" : 553,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# anim_diff\n",
        "Line" : 568,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# anim_dump\n",
        "Line" : 584,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# Install the different headers and libraries.\n",
        "Line" : 601,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Create the CMake version file.\n",
        "Line" : 616,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Create the Config file.\n",
        "Line" : 623,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Install the generated CMake files.\n",
        "Line" : 631,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Install the man pages.\n",
        "Line" : 636,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 42
    },
    "Makefile.am" : {
      "ObjectId" : "e415f6f1ecc29fe2dae8d299b0ef6a61c870ba88",
      "LastModified" : "2018-06-02T17:41:49Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "cmake/cpu.cmake" : {
      "ObjectId" : "da9a42a4e37b29b625532e9ed9776da137b70292",
      "LastModified" : "2018-10-17T13:02:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check for SIMD extensions.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# those are included in the names of WEBP_USE_* in c++ code.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# MSVC does not have a SSE4 flag but AVX support implies SSE4 support.\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# This is because Android studio uses the configuration \"-march=armv7-a\n\n# -mfloat-abi=softfp -mfpu=vfpv3-d16\" that does not trigger neon\n\n# optimizations but should (as this configuration does not exist anymore).\n",
        "Line" : 51,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# First try with no extra flag added as the compiler might have default flags\n\n# (especially on Android).\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Check which files we should include or not.\n",
        "Line" : 82,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Memorize the file and flags.\n",
        "Line" : 90,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Remove the file from the list.\n",
        "Line" : 100,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Explicitly disable SIMD.\n",
        "Line" : 104,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Do one more check for Clang to circumvent CMake issue 13194.\n",
        "Line" : 112,
        "CharPositionInLine" : 10
      },
      "10" : {
        "Text" : "# Only in CMake 3.0 and above.\n",
        "Line" : 114,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 11
    },
    "cmake/deps.cmake" : {
      "ObjectId" : "f19c0378be933c268f75013c187cdca8ef8485df",
      "LastModified" : "2018-10-05T12:23:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Generate the config.h to compile with specific intrinsics / libs.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check for compiler options.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check for libraries.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TODO: this seems unused, check with autotools.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Only useful for vwebp, so useless for now.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Check if we need to link to the C math library. We do not look for it as it is\n\n# not found when cross-compiling, while it is here.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Find the standard image libraries.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# GIF detection, gifdec isn't part of the imageio lib.\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# GIF find_package only locates the header and library, it doesn't fail\n\n# compile tests when detecting the version, but falls back to 3 (as of at\n\n# least cmake 3.7.2). Make sure the library links to avoid incorrect detection\n\n# when cross compiling.\n",
        "Line" : 86,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Check for specific headers.\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Windows specifics\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Check for SIMD extensions.\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define extra info.\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Read from configure.ac.\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Build more info.\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "examples/Makefile.am" : {
      "ObjectId" : "8d52589ff58d4a7d59e679e725e8df2b87b49e21",
      "LastModified" : "2018-10-09T15:29:54Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "extras/Makefile.am" : {
      "ObjectId" : "7e29888be2bf465fb6132f3caabcf71026a0e4f9",
      "LastModified" : "2018-06-02T17:41:49Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "imageio/Makefile.am" : {
      "ObjectId" : "500ec7e325eceb19c422e15eb31089749d8b6234",
      "LastModified" : "2018-06-02T17:41:49Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "man/Makefile.am" : {
      "ObjectId" : "57e2483f51ad33226cbd03541be3004e5dd9e6b9",
      "LastModified" : "2018-06-02T17:41:49Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/Makefile.am" : {
      "ObjectId" : "52c0a9e53f82647f1191c7dcd04bc845d2262286",
      "LastModified" : "2019-01-23T10:12:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# The mux and demux libraries depend on libwebp, thus the '.' to force\n\n# the build order so it's available to them.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use '-no-undefined' to declare that libwebp does not depend on any libraries\n\n# other than the ones listed on the command line, i.e., after linking, it will\n\n# not have unresolved symbols. Some platforms (Windows among them) require all\n\n# symbols in shared libraries to be resolved at library creation.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/dec/Makefile.am" : {
      "ObjectId" : "f8c6398d994b4c78fca5ac4f10929846eb686656",
      "LastModified" : "2018-06-02T17:41:49Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/demux/Makefile.am" : {
      "ObjectId" : "a0b0c6a9561df24603b2edf747275f04fd9244e7",
      "LastModified" : "2019-01-23T10:12:26Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/dsp/Makefile.am" : {
      "ObjectId" : "9f67f5b3c3a7f784a30b8cea9538dc96404ca3ab",
      "LastModified" : "2019-01-23T10:12:26Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/enc/Makefile.am" : {
      "ObjectId" : "27d52285da58e41b27cc6e10eae6273e4ceb36ad",
      "LastModified" : "2018-06-02T17:41:49Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/mux/Makefile.am" : {
      "ObjectId" : "d9a0b28059323b4a170ec9af4b1e0de88a18fe57",
      "LastModified" : "2019-01-23T10:12:26Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/utils/Makefile.am" : {
      "ObjectId" : "fbb0fe73ffa6c9cc96da9488b678b7f3509e0dea",
      "LastModified" : "2018-06-02T17:41:49Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 3,
    "AUTOMAKE" : 12
  },
  "ElapsedTime" : 1307
}