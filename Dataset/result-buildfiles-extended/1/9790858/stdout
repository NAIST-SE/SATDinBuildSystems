{
  "Repository" : "9790858",
  "Revision" : "HEAD",
  "ObjectId" : "655085fae12b7cce8558484baefdac1bf3d84c2c",
  "CommitTime" : "2016-12-12T04:48:11Z",
  "Files" : {
    "3rdparty/CMakeLists.txt" : {
      "ObjectId" : "c8c137004886eb98f02de813cf3f8565591b484e",
      "LastModified" : "2016-10-07T03:47:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Managing 3rd-party libraries and tools\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Specify include dir\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Specify include dir\n",
        "Line" : 102,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Add gmock\n",
        "Line" : 141,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Disable install step\n",
        "Line" : 156,
        "CharPositionInLine" : 10
      },
      "5" : {
        "Text" : "# Wrap download, configure and build steps in a script to log output\n",
        "Line" : 158,
        "CharPositionInLine" : 10
      },
      "6" : {
        "Text" : "# Specify include dir\n",
        "Line" : 164,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# propagate include lists to parent directory\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "CMakeLists.txt" : {
      "ObjectId" : "161888ddaae597640d6bbab7265b43af09faf428",
      "LastModified" : "2016-12-12T04:48:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set default ExternalProject root directory\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check for C++11 support\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# NOTE: This branch is not tested yet (in theory it should work)\n",
        "Line" : 126,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Enable all compiler warnings\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set features from options\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add / include 3rd-party libraries\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# makes available:\n\n#  - Eigen headers in 3rdparty_INCLUDES\n\n#  - Google test and mock headers in 3rdparty_INCLUDES (if pfasst_BUILD_TESTS)\n\n#  - FFTW_INCLUDE_PATH (if pfasst_BUILD_EXAMPLES)\n\n#  - FFTW_LIBRARIES (if pfasst_BUILD_EXAMPLES)\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/FindEigen3.cmake" : {
      "ObjectId" : "87fd77afcf900c8437d02296265107f0fab6cd56",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find Eigen3\n\n# Find the native Eigen3 includes\n\n#\n\n# Eigen3_INCLUDE_PATH - where to find signature_of_eigen3_matrix_library\n\n# Eigen3_FOUND - True if Eigen3 found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Edison\n",
        "Line" : 15,
        "CharPositionInLine" : 42
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set FFTW_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/FindFFTW.cmake" : {
      "ObjectId" : "97e72c9853c0fb6a91194033de1dac15476d1c3d",
      "LastModified" : "2016-10-07T03:47:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find FFTW\n\n# Find the native FFTW3 includes and library\n\n#\n\n# FFTW_INCLUDE_PATH - where to find fftw3.h\n\n# FFTW_LIBRARIES - List of libraries when using FFTW.\n\n# FFTW_FOUND - True if FFTW found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Edison\n",
        "Line" : 19,
        "CharPositionInLine" : 23
      },
      "3" : {
        "Text" : "# Edison\n",
        "Line" : 28,
        "CharPositionInLine" : 23
      },
      "4" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set FFTW_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/FindGMock.cmake" : {
      "ObjectId" : "800a509ab8a335d4fd9d699d028c94381143a8c9",
      "LastModified" : "2014-12-05T09:37:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate the Google C++ Mocking Framework.\n\n# (This file is almost an identical copy of the original FindGTest.cmake file,\n\n#  feel free to use it as it is or modify it for your own needs.)\n\n#\n\n#\n\n# Defines the following variables:\n\n#\n\n#   GMOCK_FOUND - Found the Google Testing framework\n\n#   GMOCK_INCLUDE_DIRS - Include directories\n\n#\n\n# Also defines the library variables below as normal\n\n# variables. These contain debug/optimized keywords when\n\n# a debugging library is found.\n\n#\n\n#   GMOCK_BOTH_LIBRARIES - Both libgmock & libgmock-main\n\n#   GMOCK_LIBRARIES - libgmock\n\n#   GMOCK_MAIN_LIBRARIES - libgmock-main\n\n#\n\n# Accepts the following variables as input:\n\n#\n\n#   GMOCK_ROOT - (as a CMake or environment variable)\n\n#                The root directory of the gmock install prefix\n\n#\n\n#   GMOCK_MSVC_SEARCH - If compiling with MSVC, this variable can be set to\n\n#                       \"MD\" or \"MT\" to enable searching a gmock build tree\n\n#                       (defaults: \"MD\")\n\n#\n\n#-----------------------\n\n# Example Usage:\n\n#\n\n#    find_package(GMock REQUIRED)\n\n#    include_directories(${GMOCK_INCLUDE_DIRS})\n\n#\n\n#    add_executable(foo foo.cc)\n\n#    target_link_libraries(foo ${GMOCK_BOTH_LIBRARIES})\n\n#\n\n#=============================================================================\n\n# This file is released under the MIT licence:\n\n#\n\n# Copyright (c) 2011 Matej Svec\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to\n\n# deal in the Software without restriction, including without limitation the\n\n# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n\n# sell copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in\n\n# all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n\n# IN THE SOFTWARE.\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The provided /MD project files for Google Mock add -md suffixes to the\n\n# library names.\n",
        "Line" : 108,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "cmake/FindMPIP.cmake" : {
      "ObjectId" : "0d47fb6d7c7d14cfb9666edd0d1ab142d05566ef",
      "LastModified" : "2016-10-07T03:47:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find MPIP\n\n# Find the mpiP library\n\n#\n\n# MPIP_LIBRARIES - List of libraries when using MPIP.\n\n# MPIP_FOUND - True if mpiP was found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set MPIP_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/toolchain_juqueen.cmake" : {
      "ObjectId" : "a6cb7c37b86f2ef82f7691405829fec146bc7a39",
      "LastModified" : "2016-12-12T04:48:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Toolchain File for JUQUEEN @ Juelich Supercomputing Center\n\n# BG/Q system\n\n#\n\n# Remark: IBM XL/C++ compiler is not supported by PFASST++ due to lack of C++11 support\n\n#\n\n# IMPORTANT!!\n\n# Make sure you have loaded only the following modules:\n\n#  - gcc/4.8.1\n\n#  - fftw3/3.3.3\n\n#  - python3/3.4.2\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/utility_functions.cmake" : {
      "ObjectId" : "917a8c22d0d895e80507d8029e68ddb1a3812e8b",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#   message(STATUS \"Adding '${ARGN}' to '${in_string}'\")\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#       message(STATUS \"  processing: '${element}'\")\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# escape regex commands in new element\n",
        "Line" : 6,
        "CharPositionInLine" : 12
      },
      "3" : {
        "Text" : "# only append if not already in string\n",
        "Line" : 10,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "#               message(STATUS \"    '${element}' found as '${elem_escaped}'\")\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#               message(STATUS \"    '${element}' appended\")\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#   message(STATUS \"Full string is now: '${in_string}'\")\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "examples/CMakeLists.txt" : {
      "ObjectId" : "62774dbfced1d23177d936e5f1fdce0a4165185a",
      "LastModified" : "2016-10-07T14:19:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/advection_diffusion/CMakeLists.txt" : {
      "ObjectId" : "81d8fafd6b7eb5a0bcd405519d0c9720b764aa3e",
      "LastModified" : "2016-10-07T03:47:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/advection_diffusion/Makefile" : {
      "ObjectId" : "1369050663832a2be5fd4ff5e2d8545fe72c2189",
      "LastModified" : "2016-12-11T22:18:10Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "examples/scalar/CMakeLists.txt" : {
      "ObjectId" : "adcfb26f30e56951ef919102d5efc4e73c6b5806",
      "LastModified" : "2016-10-07T03:47:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/vanderpol/CMakeLists.txt" : {
      "ObjectId" : "70c2d7234dcd9702e5e146a0c90b0e2cefc32698",
      "LastModified" : "2016-10-07T03:47:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "include/CMakeLists.txt" : {
      "ObjectId" : "0b0e3cf11e916fa0224015155d9a3436adad03ed",
      "LastModified" : "2016-10-07T03:47:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add this source directory to PFASST's includes so headers are found here\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# enable debug build if required\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## set the sources for PFASST\n\n## (uncomment the following lines if PFASST becomes not a header-only library one day)\n\n# set(pfasst_SOURCES\n\n# )\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# include_directories(\n\n#     ${3rdparty_INCLUDES}\n\n#     ${pfasst_INCLUDES}\n\n# )\n\n# message(\"3rdparty_INCLUDES: ${3rdparty_INCLUDES}\")\n\n# \n\n# add_library(pfasst ${pfasst_SOURCES})\n\n# target_link_libraries(pfasst\n\n#   ${3rdparty_DEPENDEND_LIBS}\n\n#   ${pfasst_DEPENDEND_LIBS}\n\n# )\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "92c7d425f629436166e4b462adbbc916a48a72c5",
      "LastModified" : "2016-10-07T03:47:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Building and Running Tests\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/examples/CMakeLists.txt" : {
      "ObjectId" : "4990750c08c4ae37a464d94569c9a38063236281",
      "LastModified" : "2016-12-11T22:18:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/examples/advection_diffusion/CMakeLists.txt" : {
      "ObjectId" : "b827a3a77997e729cfaff2de9ebaf9a92aff9c1e",
      "LastModified" : "2016-10-07T03:47:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Building and Running Tests\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/examples/boris/CMakeLists.txt" : {
      "ObjectId" : "2b3c610beb44aa7ca182255982f6c1c1ad5e3d53",
      "LastModified" : "2016-10-07T03:47:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Building and Running Tests\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#     test_boris_physics\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tests/examples/scalar/CMakeLists.txt" : {
      "ObjectId" : "59ec0388cfaa71d6f328ceca7ff296b94a535f4f",
      "LastModified" : "2016-10-07T03:47:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Building and Running Tests\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/examples/vanderpol/CMakeLists.txt" : {
      "ObjectId" : "c78c659767f9cd47bdc89fda5201ed67de17385e",
      "LastModified" : "2016-10-07T03:47:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Building and Running Tests\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 19,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 766
}