{
  "Repository" : "59636",
  "Revision" : "HEAD",
  "ObjectId" : "c9b4d35df179e407e7aa2bd9a1bda7a8a9d9322e",
  "CommitTime" : "2013-05-22T12:43:31Z",
  "Files" : {
    "phprojekt/htdocs/dojo/util/buildscripts/cldr/build.xml" : {
      "ObjectId" : "ce856bc609b46d0ab7a926212a8f0a5ba52b1420",
      "LastModified" : "2011-07-24T01:27:14Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n\tCopyright (c) 2004-2011 The Dojo Foundation, Licensed under the Academic\n\tFree License version 2.1 or BSD licenses\n",
        "Line" : 6,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : " Arbitrary defaults. locales and currencies properties can be altered or eliminated to build the entire set ",
        "Line" : 17,
        "CharPositionInLine" : 117
      },
      "CommentCount" : 2
    },
    "phprojekt/htdocs/dojo/util/buildscripts/webbuild/server/build.xml" : {
      "ObjectId" : "669739deda92e28029fbf8d83038fba7161bdc50",
      "LastModified" : "2011-06-24T16:26:10Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " ==================== All Target ==================================== ",
        "Line" : 28,
        "CharPositionInLine" : 79
      },
      "1" : {
        "Text" : " ==================== Clean Target ==================================== ",
        "Line" : 31,
        "CharPositionInLine" : 81
      },
      "2" : {
        "Text" : " ==================== Prepare Target ================================== ",
        "Line" : 37,
        "CharPositionInLine" : 81
      },
      "3" : {
        "Text" : " Create build directories as needed ",
        "Line" : 39,
        "CharPositionInLine" : 46
      },
      "4" : {
        "Text" : " Copy static content of this web application ",
        "Line" : 45,
        "CharPositionInLine" : 55
      },
      "5" : {
        "Text" : " Copy external dependencies as required ",
        "Line" : 50,
        "CharPositionInLine" : 50
      },
      "6" : {
        "Text" : " ==================== Compile Target ================================== ",
        "Line" : 57,
        "CharPositionInLine" : 81
      },
      "7" : {
        "Text" : " Compile Java classes as necessary ",
        "Line" : 60,
        "CharPositionInLine" : 45
      },
      "8" : {
        "Text" : " Copy application resources ",
        "Line" : 70,
        "CharPositionInLine" : 38
      },
      "9" : {
        "Text" : " ==================== Dist Target ===================================== ",
        "Line" : 77,
        "CharPositionInLine" : 81
      },
      "10" : {
        "Text" : " Copy documentation subdirectories ",
        "Line" : 79,
        "CharPositionInLine" : 45
      },
      "11" : {
        "Text" : " mkdir   dir=\"${dist.home}/docs\"/>\n\t\t<copy    todir=\"${dist.home}/docs\">\n\t\t\t<fileset dir=\"${docs.home}\"/>\n\t\t</copy ",
        "Line" : 83,
        "CharPositionInLine" : 13
      },
      "12" : {
        "Text" : " Create application JAR file ",
        "Line" : 85,
        "CharPositionInLine" : 39
      },
      "13" : {
        "Text" : " ==================== Install Target ================================== ",
        "Line" : 89,
        "CharPositionInLine" : 81
      },
      "14" : {
        "Text" : "\n\t\n\tThe \"install\" target tells the specified Tomcat 6 installation to dynamically\n\tinstall this web application and make it available for execution.  It does\n\t*not* cause the existence of this web application to be remembered across\n\tTomcat restarts; if you restart the server, you will need to re-install all\n\tthis web application.\n\t\n\tIf you have already installed this application, and simply want Tomcat to\n\trecognize that you have updated Java classes (or the web.xml file), use the\n\t\"reload\" target instead.\n\t\n\tNOTE:  This target will only succeed if it is run from the same server that\n\tTomcat is running on.\n\t\n\tNOTE:  This is the logical opposite of the \"remove\" target.\n\t\n\t",
        "Line" : 107,
        "CharPositionInLine" : 5
      },
      "15" : {
        "Text" : " ==================== Javadoc Target ================================== ",
        "Line" : 117,
        "CharPositionInLine" : 81
      },
      "16" : {
        "Text" : "\n\t\n\t  The \"javadoc\" target creates Javadoc API documentation for the Java\n\t  classes included in your application.  Normally, this is only required\n\t  when preparing a distribution release, but is available as a separate\n\t  target in case the developer wants to create Javadocs independently.\n\t\n\t",
        "Line" : 125,
        "CharPositionInLine" : 5
      },
      "17" : {
        "Text" : " ==================== Reload Target =================================== ",
        "Line" : 135,
        "CharPositionInLine" : 81
      },
      "18" : {
        "Text" : "\n\t\n\t  The \"reload\" signals the specified application Tomcat 6 to shut itself down\n\t  and reload. This can be useful when the web application context is not\n\t  reloadable and you have updated classes or property files in the\n\t  /WEB-INF/classes directory or when you have added or updated jar files in the\n\t  /WEB-INF/lib directory.\n\t\n\t  NOTE: The /WEB-INF/web.xml web application configuration file is not reread\n\t  on a reload. If you have made changes to your web.xml file you must stop\n\t  then start the web application. \n\t\n\t",
        "Line" : 148,
        "CharPositionInLine" : 5
      },
      "19" : {
        "Text" : " ==================== Remove Target =================================== ",
        "Line" : 157,
        "CharPositionInLine" : 81
      },
      "20" : {
        "Text" : "\n\t\n\t  The \"remove\" target tells the specified Tomcat 6 installation to dynamically\n\t  remove this web application from service.\n\t\n\t  NOTE:  This is the logical opposite of the \"install\" target.\n\t\n\t",
        "Line" : 165,
        "CharPositionInLine" : 5
      },
      "CommentCount" : 21
    },
    "phprojekt/htdocs/dojo2/util/buildscripts/cldr/build.xml" : {
      "ObjectId" : "648edaa5be44cfc98a1b05226877068588c5a1ee",
      "LastModified" : "2012-12-06T15:45:27Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n\tCopyright (c) 2004-2011 The Dojo Foundation, Licensed under the Academic\n\tFree License version 2.1 or BSD licenses\n",
        "Line" : 6,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : " Arbitrary defaults. locales and currencies properties can be altered or eliminated to build the entire set ",
        "Line" : 17,
        "CharPositionInLine" : 117
      },
      "CommentCount" : 2
    },
    "phprojekt/htdocs/dojo2/util/buildscripts/webbuild/server/build.xml" : {
      "ObjectId" : "669739deda92e28029fbf8d83038fba7161bdc50",
      "LastModified" : "2012-12-06T15:45:27Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " ==================== All Target ==================================== ",
        "Line" : 28,
        "CharPositionInLine" : 79
      },
      "1" : {
        "Text" : " ==================== Clean Target ==================================== ",
        "Line" : 31,
        "CharPositionInLine" : 81
      },
      "2" : {
        "Text" : " ==================== Prepare Target ================================== ",
        "Line" : 37,
        "CharPositionInLine" : 81
      },
      "3" : {
        "Text" : " Create build directories as needed ",
        "Line" : 39,
        "CharPositionInLine" : 46
      },
      "4" : {
        "Text" : " Copy static content of this web application ",
        "Line" : 45,
        "CharPositionInLine" : 55
      },
      "5" : {
        "Text" : " Copy external dependencies as required ",
        "Line" : 50,
        "CharPositionInLine" : 50
      },
      "6" : {
        "Text" : " ==================== Compile Target ================================== ",
        "Line" : 57,
        "CharPositionInLine" : 81
      },
      "7" : {
        "Text" : " Compile Java classes as necessary ",
        "Line" : 60,
        "CharPositionInLine" : 45
      },
      "8" : {
        "Text" : " Copy application resources ",
        "Line" : 70,
        "CharPositionInLine" : 38
      },
      "9" : {
        "Text" : " ==================== Dist Target ===================================== ",
        "Line" : 77,
        "CharPositionInLine" : 81
      },
      "10" : {
        "Text" : " Copy documentation subdirectories ",
        "Line" : 79,
        "CharPositionInLine" : 45
      },
      "11" : {
        "Text" : " mkdir   dir=\"${dist.home}/docs\"/>\n\t\t<copy    todir=\"${dist.home}/docs\">\n\t\t\t<fileset dir=\"${docs.home}\"/>\n\t\t</copy ",
        "Line" : 83,
        "CharPositionInLine" : 13
      },
      "12" : {
        "Text" : " Create application JAR file ",
        "Line" : 85,
        "CharPositionInLine" : 39
      },
      "13" : {
        "Text" : " ==================== Install Target ================================== ",
        "Line" : 89,
        "CharPositionInLine" : 81
      },
      "14" : {
        "Text" : "\n\t\n\tThe \"install\" target tells the specified Tomcat 6 installation to dynamically\n\tinstall this web application and make it available for execution.  It does\n\t*not* cause the existence of this web application to be remembered across\n\tTomcat restarts; if you restart the server, you will need to re-install all\n\tthis web application.\n\t\n\tIf you have already installed this application, and simply want Tomcat to\n\trecognize that you have updated Java classes (or the web.xml file), use the\n\t\"reload\" target instead.\n\t\n\tNOTE:  This target will only succeed if it is run from the same server that\n\tTomcat is running on.\n\t\n\tNOTE:  This is the logical opposite of the \"remove\" target.\n\t\n\t",
        "Line" : 107,
        "CharPositionInLine" : 5
      },
      "15" : {
        "Text" : " ==================== Javadoc Target ================================== ",
        "Line" : 117,
        "CharPositionInLine" : 81
      },
      "16" : {
        "Text" : "\n\t\n\t  The \"javadoc\" target creates Javadoc API documentation for the Java\n\t  classes included in your application.  Normally, this is only required\n\t  when preparing a distribution release, but is available as a separate\n\t  target in case the developer wants to create Javadocs independently.\n\t\n\t",
        "Line" : 125,
        "CharPositionInLine" : 5
      },
      "17" : {
        "Text" : " ==================== Reload Target =================================== ",
        "Line" : 135,
        "CharPositionInLine" : 81
      },
      "18" : {
        "Text" : "\n\t\n\t  The \"reload\" signals the specified application Tomcat 6 to shut itself down\n\t  and reload. This can be useful when the web application context is not\n\t  reloadable and you have updated classes or property files in the\n\t  /WEB-INF/classes directory or when you have added or updated jar files in the\n\t  /WEB-INF/lib directory.\n\t\n\t  NOTE: The /WEB-INF/web.xml web application configuration file is not reread\n\t  on a reload. If you have made changes to your web.xml file you must stop\n\t  then start the web application. \n\t\n\t",
        "Line" : 148,
        "CharPositionInLine" : 5
      },
      "19" : {
        "Text" : " ==================== Remove Target =================================== ",
        "Line" : 157,
        "CharPositionInLine" : 81
      },
      "20" : {
        "Text" : "\n\t\n\t  The \"remove\" target tells the specified Tomcat 6 installation to dynamically\n\t  remove this web application from service.\n\t\n\t  NOTE:  This is the logical opposite of the \"install\" target.\n\t\n\t",
        "Line" : 165,
        "CharPositionInLine" : 5
      },
      "CommentCount" : 21
    }
  },
  "FileTypes" : {
    "ANT" : 4
  },
  "ElapsedTime" : 6272
}