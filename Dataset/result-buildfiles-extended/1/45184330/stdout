{
  "Repository" : "45184330",
  "Revision" : "HEAD",
  "ObjectId" : "15cb75fc9b2ee31032a24bf53f5a8f4ab79f6a45",
  "CommitTime" : "2019-01-17T13:37:36Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "83401156c545291b89589a82256a550292af6e99",
      "LastModified" : "2018-09-15T07:31:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Default build type will be release (No build type provided to CMAKE)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set our build type compiler flags\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\tset(CMAKE_CXX_FLAGS_RELEASE \"${CMAKE_CXX_FLAGS} -g\")\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Setup the package requirements\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Remove this on linux when building against the Steam Runtime\n",
        "Line" : 42,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Add source files (this means regenerating CMake files every time we add new source files)\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Technically don't need this as we run cmake from the build folder. Could use it to copy\n\n# builds to the steam content folder though\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "external_dependencies/cmake-modules/FindBOX2D.cmake" : {
      "ObjectId" : "a9fa86fd68c60db6c6ee12d385aff4a996dadb46",
      "LastModified" : "2017-05-02T15:23:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# source: http://breathe.git.sourceforge.net\n\n#\n\n# Locate Box2D library\n\n# This module defines\n\n# BOX2D_LIBRARY, the name of the library to link against\n\n# BOX2D_FOUND, if false, do not try to link to Box2D\n\n# BOX2D_INCLUDE_DIR, where to find Box2D headers\n\n#\n\n# Created by Sven-Hendrik Haase. Based on the FindZLIB.cmake module.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Per-recommendation\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set BOX2D_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "external_dependencies/cmake-modules/FindFMOD.cmake" : {
      "ObjectId" : "b23f621c3262be43b49d392274d36183078a9b39",
      "LastModified" : "2017-05-02T15:23:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find FMOD includes and library\n\n#\n\n# This module defines\n\n#  FMOD_INCLUDE_DIRS\n\n#  FMOD_LIBRARIES, the libraries to link against to use FMOD.\n\n#  FMOD_LIBRARY_DIRS, the location of the libraries\n\n#  FMOD_FOUND, If false, do not try to use FMOD\n\n#\n\n# Copyright Â© 2007-2008, Matt Williams\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Windows\n",
        "Line" : 44,
        "CharPositionInLine" : 11
      },
      "2" : {
        "Text" : "#Unix\n",
        "Line" : 49,
        "CharPositionInLine" : 13
      },
      "3" : {
        "Text" : "# TODO i don't know how this would be registered in pkg-config\n",
        "Line" : 52,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#If PkgConfig couldn't find OGRE...\n",
        "Line" : 58,
        "CharPositionInLine" : 20
      },
      "5" : {
        "Text" : "#Do some preparation\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "external_dependencies/cmake-modules/FindLIBCONFIG.cmake" : {
      "ObjectId" : "cc63a596e9837ef4e9103aa3d28a7815475dc8d5",
      "LastModified" : "2017-05-02T15:23:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the CUnit includes and library\n\n#\n\n# This module defines\n\n# LIBCONFIG_INCLUDE_DIR, where to find cppunit include files, etc.\n\n# LIBCONFIG_LIBRARIES, the libraries to link against to use CppUnit.\n\n# LIBCONFIG_STATIC_LIBRARIY_PATH\n\n# LIBCONFIG_FOUND, If false, do not try to use CppUnit.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# also defined, but not for general use are\n\n# LIBCONFIG_LIBRARY, where to find the CUnit library.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#MESSAGE(\"Searching for libconfig library\")\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "external_dependencies/cmake-modules/FindSDL2.cmake" : {
      "ObjectId" : "eb137d0658c1a631af9426a4d06235fd0b4d4fd4",
      "LastModified" : "2017-05-02T15:23:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This module defines\n\n# SDL2_LIBRARY, the name of the library to link against\n\n# SDL2_FOUND, if false, do not try to link to SDL2\n\n# SDL2_INCLUDE_DIR, where to find SDL.h\n\n#\n\n# This module responds to the the flag:\n\n# SDL2_BUILDING_LIBRARY\n\n# If this is defined, then no SDL2main will be linked in because\n\n# only applications need main().\n\n# Otherwise, it is assumed you are building an application and this\n\n# module will attempt to locate and set the the proper link flags\n\n# as part of the returned SDL2_LIBRARY variable.\n\n#\n\n# Don't forget to include SDLmain.h and SDLmain.m your project for the\n\n# OS X framework based version. (Other versions link to -lSDL2main which\n\n# this module will try to find on your behalf.) Also for OS X, this\n\n# module will automatically add the -framework Cocoa on your behalf.\n\n#\n\n#\n\n# Additional Note: If you see an empty SDL2_LIBRARY_TEMP in your configuration\n\n# and no SDL2_LIBRARY, it means CMake did not find your SDL2 library\n\n# (SDL2.dll, libsdl2.so, SDL2.framework, etc).\n\n# Set SDL2_LIBRARY_TEMP to point to your SDL2 library, and configure again.\n\n# Similarly, if you see an empty SDL2MAIN_LIBRARY, you should set this value\n\n# as appropriate. These values are used to generate the final SDL2_LIBRARY\n\n# variable, but when these values are unset, SDL2_LIBRARY does not get created.\n\n#\n\n#\n\n# $SDL2DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$SDL2DIR\n\n# used in building SDL2.\n\n# l.e.galup  9-20-02\n\n#\n\n# Modified by Eric Wing.\n\n# Added code to assist with automated building by using environmental variables\n\n# and providing a more controlled/consistent search behavior.\n\n# Added new modifications to recognize OS X frameworks and\n\n# additional Unix paths (FreeBSD, etc).\n\n# Also corrected the header search path to follow \"proper\" SDL guidelines.\n\n# Added a search for SDL2main which is needed by some platforms.\n\n# Added a search for threads which is needed by some platforms.\n\n# Added needed compile switches for MinGW.\n\n#\n\n# On OSX, this will prefer the Framework version (if found) over others.\n\n# People will have to manually change the cache values of\n\n# SDL2_LIBRARY to override this selection or set the CMake environment\n\n# CMAKE_INCLUDE_PATH to modify the search paths.\n\n#\n\n# Note that the header path has changed from SDL2/SDL.h to just SDL.h\n\n# This needed to change because \"proper\" SDL convention\n\n# is #include \"SDL.h\", not <SDL2/SDL.h>. This is done for portability\n\n# reasons because not all systems place things in SDL2/ (see FreeBSD).\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2003-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fink\n",
        "Line" : 75,
        "CharPositionInLine" : 5
      },
      "3" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 76,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "# Blastwave\n",
        "Line" : 77,
        "CharPositionInLine" : 10
      },
      "5" : {
        "Text" : "# Non-OS X framework versions expect you to also dynamically link to\n\n# SDL2main. This is mainly for Windows and OS X. Other (Unix) platforms\n\n# seem to provide SDL2main for compatibility even though they don't\n\n# necessarily need it.\n",
        "Line" : 99,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# SDL2 may require threads on your system.\n\n# The Apple build may not need an explicit flag because one of the\n\n# frameworks may already provide it.\n\n# But for non-OSX systems, I will use the CMake Threads package.\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# MinGW needs an additional library, mwindows\n\n# It's total link flags should look like -lmingw32 -lSDL2main -lSDL2 -lmwindows\n\n# (Actually on second look, I think it only needs one of the m* libraries.)\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# For SDL2main\n",
        "Line" : 129,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# For OS X, SDL2 uses Cocoa as a backend so it must link to Cocoa.\n\n# CMake doesn't display the -framework Cocoa string in the UI even\n\n# though it actually is there if I modify a pre-used variable.\n\n# I think it has something to do with the CACHE STRING.\n\n# So I use a temporary variable until the end so I can set the\n\n# \"real\" variable in one-shot.\n",
        "Line" : 136,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# For threads, as mentioned Apple doesn't need this.\n\n# In fact, there seems to be a problem if I used the Threads package\n\n# and try using this line, so I'm just skipping it entirely for OS X.\n",
        "Line" : 146,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# For MinGW library\n",
        "Line" : 153,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# Set the final string here so the GUI reflects the final state.\n",
        "Line" : 158,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# Set the temp variable to INTERNAL so it is not seen in the CMake GUI\n",
        "Line" : 160,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 14
    },
    "external_dependencies/cmake-modules/FindSDL2IMAGE.cmake" : {
      "ObjectId" : "d5d44d54ad3226006610d448e4d341a9b5952086",
      "LastModified" : "2017-05-02T15:23:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate SDL_image library\n\n#\n\n# This module defines:\n\n#\n\n# ::\n\n#\n\n#   SDL_IMAGE_LIBRARIES, the name of the library to link against\n\n#   SDL_IMAGE_INCLUDE_DIRS, where to find the headers\n\n#   SDL_IMAGE_FOUND, if false, do not try to link against\n\n#   SDL_IMAGE_VERSION_STRING - human-readable string containing the version of SDL_image\n\n#\n\n#\n\n#\n\n# For backward compatiblity the following variables are also set:\n\n#\n\n# ::\n\n#\n\n#   SDLIMAGE_LIBRARY (same value as SDL_IMAGE_LIBRARIES)\n\n#   SDLIMAGE_INCLUDE_DIR (same value as SDL_IMAGE_INCLUDE_DIRS)\n\n#   SDLIMAGE_FOUND (same value as SDL_IMAGE_FOUND)\n\n#\n\n#\n\n#\n\n# $SDLDIR is an environment variable that would correspond to the\n\n# ./configure --prefix=$SDLDIR used in building SDL.\n\n#\n\n# Created by Eric Wing.  This was influenced by the FindSDL.cmake\n\n# module, but with modifications to recognize OS X frameworks and\n\n# additional Unix paths (FreeBSD, etc).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2005-2009 Kitware, Inc.\n\n# Copyright 2012 Benjamin Eikel\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# path suffixes to search inside ENV{SDLDIR}\n",
        "Line" : 51,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# for backward compatiblity\n\n#set(SDLIMAGE_LIBRARY ${SDL_IMAGE_LIBRARIES})\n\n#set(SDLIMAGE_INCLUDE_DIR ${SDL_IMAGE_INCLUDE_DIRS})\n\n#set(SDLIMAGE_FOUND ${SDL_IMAGE_FOUND})\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "external_dependencies/cmake-modules/FindSDL2_Mixer.cmake" : {
      "ObjectId" : "92d5b6ad9097e23a24fc04bc74fe48ae5f9502f7",
      "LastModified" : "2017-05-02T15:23:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate SDL_mixer library\n\n#\n\n# This module defines:\n\n#\n\n# ::\n\n#\n\n#   SDL_MIXER_LIBRARIES, the name of the library to link against\n\n#   SDL_MIXER_INCLUDE_DIRS, where to find the headers\n\n#   SDL_MIXER_FOUND, if false, do not try to link against\n\n#   SDL_MIXER_VERSION_STRING - human-readable string containing the version of SDL_mixer\n\n#\n\n#\n\n#\n\n# For backward compatiblity the following variables are also set:\n\n#\n\n# ::\n\n#\n\n#   SDLMIXER_LIBRARY (same value as SDL_MIXER_LIBRARIES)\n\n#   SDLMIXER_INCLUDE_DIR (same value as SDL_MIXER_INCLUDE_DIRS)\n\n#   SDLMIXER_FOUND (same value as SDL_MIXER_FOUND)\n\n#\n\n#\n\n#\n\n# $SDLDIR is an environment variable that would correspond to the\n\n# ./configure --prefix=$SDLDIR used in building SDL.\n\n#\n\n# Created by Eric Wing.  This was influenced by the FindSDL.cmake\n\n# module, but with modifications to recognize OS X frameworks and\n\n# additional Unix paths (FreeBSD, etc).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2005-2009 Kitware, Inc.\n\n# Copyright 2012 Benjamin Eikel\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# path suffixes to search inside ENV{SDLDIR}\n",
        "Line" : 50,
        "CharPositionInLine" : 16
      },
      "3" : {
        "Text" : "# for backward compatiblity\n\n#set(SDLMIXER_LIBRARY ${SDL_MIXER_LIBRARIES})\n\n#set(SDLMIXER_INCLUDE_DIR ${SDL_MIXER_INCLUDE_DIRS})\n\n#set(SDLMIXER_FOUND ${SDL_MIXER_FOUND})\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "external_dependencies/cmake-modules/FindSDL2_image.cmake" : {
      "ObjectId" : "436ae900dfde80acad4072d3e5c533e678e1d8ce",
      "LastModified" : "2017-05-02T15:23:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate SDL_image library\n\n#\n\n# This module defines:\n\n#\n\n# ::\n\n#\n\n#   SDL_IMAGE_LIBRARIES, the name of the library to link against\n\n#   SDL_IMAGE_INCLUDE_DIRS, where to find the headers\n\n#   SDL_IMAGE_FOUND, if false, do not try to link against\n\n#   SDL_IMAGE_VERSION_STRING - human-readable string containing the version of SDL_image\n\n#\n\n#\n\n#\n\n# For backward compatiblity the following variables are also set:\n\n#\n\n# ::\n\n#\n\n#   SDLIMAGE_LIBRARY (same value as SDL_IMAGE_LIBRARIES)\n\n#   SDLIMAGE_INCLUDE_DIR (same value as SDL_IMAGE_INCLUDE_DIRS)\n\n#   SDLIMAGE_FOUND (same value as SDL_IMAGE_FOUND)\n\n#\n\n#\n\n#\n\n# $SDLDIR is an environment variable that would correspond to the\n\n# ./configure --prefix=$SDLDIR used in building SDL.\n\n#\n\n# Created by Eric Wing.  This was influenced by the FindSDL.cmake\n\n# module, but with modifications to recognize OS X frameworks and\n\n# additional Unix paths (FreeBSD, etc).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2005-2009 Kitware, Inc.\n\n# Copyright 2012 Benjamin Eikel\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# path suffixes to search inside ENV{SDLDIR}\n",
        "Line" : 50,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# for backward compatiblity\n\n#set(SDLIMAGE_LIBRARY ${SDL_IMAGE_LIBRARIES})\n\n#set(SDLIMAGE_INCLUDE_DIR ${SDL_IMAGE_INCLUDE_DIRS})\n\n#set(SDLIMAGE_FOUND ${SDL_IMAGE_FOUND})\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "external_dependencies/cmake-modules/FindSDL2_ttf.cmake" : {
      "ObjectId" : "421fe2e99374a11362ede997d835926fc87519d7",
      "LastModified" : "2017-05-02T15:23:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate SDL_image library\n\n#\n\n# This module defines:\n\n#\n\n# ::\n\n#\n\n#   SDL_TTF_LIBRARIES, the name of the library to link against\n\n#   SDL_TTF_INCLUDE_DIRS, where to find the headers\n\n#   SDL_TTF_FOUND, if false, do not try to link against\n\n#   SDL_F_VERSION_STRING - human-readable string containing the version of SDL_ttf\n\n#\n\n#\n\n#\n\n# For backward compatiblity the following variables are also set:\n\n#\n\n# ::\n\n#\n\n#   SDLTTF_LIBRARY (same value as SDL_TTF_LIBRARIES)\n\n#   SDLTTF_INCLUDE_DIR (same value as SDL_TTF_INCLUDE_DIRS)\n\n#   SDLTTF_FOUND (same value as SDL_TTF_FOUND)\n\n#\n\n#\n\n#\n\n# $SDLDIR is an environment variable that would correspond to the\n\n# ./configure --prefix=$SDLDIR used in building SDL.\n\n#\n\n# Created by Eric Wing.  This was influenced by the FindSDL.cmake\n\n# module, but with modifications to recognize OS X frameworks and\n\n# additional Unix paths (FreeBSD, etc).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2005-2009 Kitware, Inc.\n\n# Copyright 2012 Benjamin Eikel\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# path suffixes to search inside ENV{SDLDIR}\n",
        "Line" : 50,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# for backward compatiblity\n\n#set(SDLTTF_LIBRARY ${SDL_TTF_LIBRARIES})\n\n#set(SDLTTF_INCLUDE_DIR ${SDL_TTF_INCLUDE_DIRS})\n\n#set(SDLTTF_FOUND ${SDL_TTF_FOUND})\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "external_dependencies/cmake-modules/FindSTEAMWORKS.cmake" : {
      "ObjectId" : "c393330d19d9df5e04367b581cb8f8bc011785dd",
      "LastModified" : "2017-07-20T13:27:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate Steamworks library\n\n# This module defines\n\n# STEAMWORKS_LIBRARY, the name of the library to link against\n\n# STEAMWORKS_INCLUDE_DIR, the directory containing steam/steam_api.h\n\n# STEAMWORKS_FOUND, if false, do not try to link to Steamworks\n\n#\n\n# If a path is set in the SteamworksDIR environment variable it will check there\n\n#\n\n# This has been tested on OS X\n\n# This may or may not with Linux - it should, but i think it could be broken easily\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Fink\n",
        "Line" : 19,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 20,
        "CharPositionInLine" : 13
      },
      "3" : {
        "Text" : "# Blastwave\n",
        "Line" : 21,
        "CharPositionInLine" : 11
      },
      "4" : {
        "Text" : "# Set the final string here so the GUI reflects the final state.\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Set the temp variable to INTERNAL so it is not seen in the CMake GUI\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    }
  },
  "FileTypes" : {
    "CMAKE" : 10
  },
  "ElapsedTime" : 1403
}