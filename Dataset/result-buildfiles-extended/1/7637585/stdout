{
  "Repository" : "7637585",
  "Revision" : "HEAD",
  "ObjectId" : "22e9eb592774a1e5a0e3afd25bc8b6b25e4bbd74",
  "CommitTime" : "2019-01-27T04:00:30Z",
  "Files" : {
    "novacoin-qt.pro" : {
      "ObjectId" : "16277f72ebe5cbc612471e3edd16abc34fad7451",
      "LastModified" : "2016-03-27T13:14:35Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# QMAKE_CC=clang\n\n# QMAKE_CXX=clang++\n\n# QMAKE_LINK=clang++\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# for boost 1.37, add -mt to the boost libraries\n\n# use: qmake BOOST_LIB_SUFFIX=-mt\n\n# for boost thread win32 with _win32 sufix\n\n# use: BOOST_THREAD_LIB_SUFFIX=_win32-...\n\n# or when linking against a specific BerkelyDB version: BDB_LIB_SUFFIX=-6.1\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Dependency library locations can be customized with:\n\n#    BOOST_INCLUDE_PATH, BOOST_LIB_PATH, BDB_INCLUDE_PATH,\n\n#    BDB_LIB_PATH, OPENSSL_INCLUDE_PATH and OPENSSL_LIB_PATH respectively\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#BOOST_LIB_SUFFIX=-mgw49-mt-s-1_55\n\n#BOOST_INCLUDE_PATH=C:/deps/boost_1_55_0\n\n#BOOST_LIB_PATH=C:/deps/boost_1_55_0/stage/lib\n\n#BDB_INCLUDE_PATH=C:/deps/db-6.0.20/build_unix\n\n#BDB_LIB_PATH=C:/deps/db-6.0.20/build_unix\n\n#OPENSSL_INCLUDE_PATH=C:/d1eps/openssl-1.0.2g/include\n\n#OPENSSL_LIB_PATH=C:/deps/openssl-1.0.2g\n\n#QRENCODE_INCLUDE_PATH=C:/deps/qrencode-3.4.4\n\n#QRENCODE_LIB_PATH=C:/deps/qrencode-3.4.4/.libs\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# use: qmake \"RELEASE=1\"\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Linux: static link\n",
        "Line" : 53,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# for extra security against potential buffer overflows: enable GCCs Stack Smashing Protection\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# We need to exclude this for Windows cross compile with MinGW 4.2.x, as it will result in a non-working executable!\n\n# This can be enabled for Windows, when we switch to MinGW >= 4.4.x.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# for extra security on Windows: enable ASLR and DEP via GCC linker flags\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# use: qmake \"USE_QRCODE=1\"\n\n# libqrencode (http://fukuchi.org/works/qrencode/index.en.html) must be installed for support\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# use: qmake \"USE_DBUS=1\"\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# use: qmake \"USE_IPV6=1\" ( enabled by default; default)\n\n#  or: qmake \"USE_IPV6=0\" (disabled by default)\n\n#  or: qmake \"USE_IPV6=-\" (not supported)\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# we use QMAKE_CXXFLAGS_RELEASE even without RELEASE=1 because we use RELEASE to indicate linking preferences not -O preferences\n",
        "Line" : 118,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# make an educated guess about what the ranlib command is called\n",
        "Line" : 121,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Gross ugly hack that depends on qmake internals, unfortunately there is no other way to do it.\n",
        "Line" : 132,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# use: qmake \"USE_ASM=1\"\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# use: qmake \"USE_SSE2=1\"\n",
        "Line" : 154,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# regenerate src/build.h\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Input\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# for lrelease/lupdate\n\n# also add new translations to src/qt/bitcoin.qrc under translations/\n",
        "Line" : 397,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# automatically build translations, so they can be included in resource file\n",
        "Line" : 406,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# \"Other files\" to show in Qt Creator\n",
        "Line" : 414,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# platform specific defaults, if not overridden on command line\n",
        "Line" : 418,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# At least qmake's win32-g++-cross profile is missing the -lmingwthrd\n\n# thread-safety flag. GCC has -mthreads to enable this, but it doesn't\n\n# work with static linking. -lmingwthrd must come BEFORE -lmingw, so\n\n# it is prepended to QMAKE_LIBS_QT_ENTRY.\n\n# It can be turned off with MINGW_THREAD_BUGFIX=0, just in case it causes\n\n# any problems on some untested qmake profile now or in the future.\n",
        "Line" : 460,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# Set libraries and includes at end, to use platform-defined defaults if not overridden\n",
        "Line" : 487,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# -lgdi32 has to happen after -lcrypto (see  #681)\n",
        "Line" : 491,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Linux: turn dynamic linking back on for c/c++ runtime libraries\n",
        "Line" : 498,
        "CharPositionInLine" : 8
      },
      "27" : {
        "Text" : "# We may need some linuxism here\n",
        "Line" : 504,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# libexecinfo is required for back trace\n",
        "Line" : 509,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 29
    },
    "src/leveldb/Makefile" : {
      "ObjectId" : "20b725e3c453c8ec17464d5bb955f6500993012a",
      "LastModified" : "2014-11-03T03:58:02Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n\n# Use of this source code is governed by a BSD-style license that can be\n\n# found in the LICENSE file. See the AUTHORS file for names of contributors.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------\n\n# Uncomment exactly one of the lines labelled (A), (B), and (C) below\n\n# to switch between compilation modes.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# (A) Production use (optimized mode)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# (B) Debug mode, w/ full line-level debugging symbols\n\n# OPT ?= -g2\n\n# (C) Profiling mode: opt, but w/debugging symbols\n\n# OPT ?= -O2 -g2 -DNDEBUG\n\n#-----------------------------------------------\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# detect what platform we're building on\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# this file is generated by the previous line to set build flags and sources\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Note: iOS should probably be using libtool, not ar.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Should we build shared libraries?\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Update db.h if you change these.\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# PLATFORM_SHARED_EXT\n",
        "Line" : 98,
        "CharPositionInLine" : 7
      },
      "10" : {
        "Text" : "# For iOS, create universal object files to be used on both the simulator and\n\n# a device.\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "src/qt/locale/translations.pro" : {
      "ObjectId" : "ada7a2f8da953a063aa8f4a69a5a348878ef2279",
      "LastModified" : "2014-11-03T03:58:02Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# for lrelease/lupdate\n\n# also add new translations to src/qt/bitcoin.qrc under translations/\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# automatically build translations, so they can be included in resource file\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "QMAKE" : 2,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 1538
}