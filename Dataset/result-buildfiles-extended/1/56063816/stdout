{
  "Repository" : "56063816",
  "Revision" : "HEAD",
  "ObjectId" : "aaee723c609ce4ba8790bb2383d5b718d3a5bce5",
  "CommitTime" : "2019-03-29T19:18:05Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "7bdd7fd6c144711b6022bbd14e4b27027bef1a1f",
      "LastModified" : "2018-06-23T03:40:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#*********************************************************************\n\n# Taichi - Open-Source Computer Graphics Library\n\n#*********************************************************************\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/AddCompilerFlag.cmake" : {
      "ObjectId" : "f67def8b95b10621f5b31d39481a5409965cc93a",
      "LastModified" : "2017-10-02T02:04:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Add a given compiler flag to flags variables.\n\n# AddCompilerFlag(<flag> [<var>])\n\n# or\n\n# AddCompilerFlag(<flag> [C_FLAGS <var>] [CXX_FLAGS <var>] [C_RESULT <var>]\n\n#                        [CXX_RESULT <var>])\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2010-2015 Matthias Kretz <kretz@kde.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are\n\n# met:\n\n#\n\n#  * Redistributions of source code must retain the above copyright notice,\n\n#    this list of conditions and the following disclaimer.\n\n#\n\n#  * Redistributions in binary form must reproduce the above copyright notice,\n\n#    this list of conditions and the following disclaimer in the documentation\n\n#    and/or other materials provided with the distribution.\n\n#\n\n#  * Neither the names of contributing organizations nor the\n\n#    names of its contributors may be used to endorse or promote products\n\n#    derived from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND CONTRIBUTORS ``AS IS''\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n\n# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Compiling with FMA3 support may fail only at the assembler level.\n\n# In that case we need to have such an instruction in the test code\n",
        "Line" : 119,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Compiling with libc++ not only requires a compiler that understands it, but also\n\n# the libc++ headers itself\n",
        "Line" : 126,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 4
    },
    "cmake/CheckCXXCompilerFlag.cmake" : {
      "ObjectId" : "44cd2a33e593a5c58109a0a189d301908998da37",
      "LastModified" : "2017-10-02T02:04:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check whether the CXX compiler supports a given flag.\n\n# CHECK_CXX_COMPILER_FLAG(<flag> <var>)\n\n#  <flag> - the compiler flag\n\n#  <var>  - variable to store the result\n\n# This internally calls the check_cxx_source_compiles macro.  See help\n\n# for CheckCXXSourceCompiles for a listing of variables that can\n\n# modify the build.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2006-2009 Kitware, Inc.\n\n# Copyright 2006 Alexander Neundorf <neundorf@kde.org>\n\n# Copyright 2011-2013 Matthias Kretz <kretz@kde.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are\n\n# met:\n\n#\n\n#  * Redistributions of source code must retain the above copyright notice,\n\n#    this list of conditions and the following disclaimer.\n\n#\n\n#  * Redistributions in binary form must reproduce the above copyright notice,\n\n#    this list of conditions and the following disclaimer in the documentation\n\n#    and/or other materials provided with the distribution.\n\n#\n\n#  * The names of Kitware, Inc., the Insight Consortium, or the names of\n\n#    any consortium members, or of any contributors, may not be used to\n\n#    endorse or promote products derived from this software without\n\n#    specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND CONTRIBUTORS ``AS IS''\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n\n# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Some compilers do not fail with a bad flag\n",
        "Line" : 53,
        "CharPositionInLine" : 12
      },
      "3" : {
        "Text" : "# GNU\n\n# clang\n\n# GNU\n\n# GNU\n\n# GNU\n\n# MSVC\n\n# MSVC\n\n# HP\n\n# SunPro\n\n# XL\n\n# Open64\n\n# ICC\n\n# ICC\n\n# ICC: File not found\n\n# ICC\n\n# ICC: option '-mfma' ignored, suggest using '-march=core-avx2'\n",
        "Line" : 54,
        "CharPositionInLine" : 67
      },
      "CommentCount" : 4
    },
    "cmake/FindGLEW.cmake" : {
      "ObjectId" : "a1296bdfbed26175893be92bd710a1d89074959d",
      "LastModified" : "2017-10-02T02:04:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindGLEW\n\n# --------\n\n#\n\n# Find the OpenGL Extension Wrangler Library (GLEW)\n\n#\n\n# IMPORTED Targets\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the :prop_tgt:`IMPORTED` target ``GLEW::GLEW``,\n\n# if GLEW has been found.\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the following variables:\n\n#\n\n# ::\n\n#\n\n#   GLEW_INCLUDE_DIRS - include directories for GLEW\n\n#   GLEW_LIBRARIES - libraries to link against GLEW\n\n#   GLEW_FOUND - true if GLEW has been found and can be used\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#include(${CMAKE_CURRENT_LIST_DIR}/FindPackageHandleStandardArgs.cmake)\n\n#find_package_handle_standard_args(GLEW\n\n#                                  REQUIRED_VARS GLEW_INCLUDE_DIR GLEW_LIBRARY)\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/FindGLFW3.cmake" : {
      "ObjectId" : "fb2e4ca722b33bf8e960684db18f524b5b16a829",
      "LastModified" : "2017-10-02T02:04:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# From https://raw.githubusercontent.com/zero57/CMakeScripts/master/FindGLFW3.cmake\n\n#\n\n# Try to find GLFW library and include path.\n\n# Once done this will define\n\n#\n\n# GLFW3_FOUND\n\n# GLFW3_INCLUDE_PATH\n\n# GLFW3_LIBRARY\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\t\t${GLFW_ROOT_DIR}/include\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#        $ENV{PROGRAMFILES}/GLFW/lib\n\n#\t\t${GLFW_ROOT_DIR}/lib\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Prefer the static library.\n",
        "Line" : 41,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 4
    },
    "cmake/OptimizeForArchitecture.cmake" : {
      "ObjectId" : "3f3cacc295251dd6018b2206f65ca745aee86dc6",
      "LastModified" : "2017-10-02T02:04:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Determine the host CPU feature set and determine the best set of compiler\n\n# flags to enable all supported SIMD relevant features. Alternatively, the\n\n# target CPU can be explicitly selected (for generating more generic binaries\n\n# or for targeting a different system).\n\n# Compilers provide e.g. the -march=native flag to achieve a similar result.\n\n# This fails to address the need for building for a different microarchitecture\n\n# than the current host.\n\n# The script tries to deduce all settings from the model and family numbers of\n\n# the CPU instead of reading the CPUID flags from e.g. /proc/cpuinfo. This makes\n\n# the detection more independent from the CPUID code in the kernel (e.g. avx2 is\n\n# not listed on older kernels).\n\n#\n\n# Usage:\n\n# OptimizeForArchitecture()\n\n# If either of Vc_SSE_INTRINSICS_BROKEN, Vc_AVX_INTRINSICS_BROKEN,\n\n# Vc_AVX2_INTRINSICS_BROKEN is defined and set, the OptimizeForArchitecture\n\n# macro will consequently disable the relevant features via compiler flags.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2010-2016 Matthias Kretz <kretz@kde.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are\n\n# met:\n\n#\n\n#  * Redistributions of source code must retain the above copyright notice,\n\n#    this list of conditions and the following disclaimer.\n\n#  * Redistributions in binary form must reproduce the above copyright notice,\n\n#    this list of conditions and the following disclaimer in the documentation\n\n#    and/or other materials provided with the distribution.\n\n#  * Neither the names of contributing organizations nor the\n\n#    names of its contributors may be used to endorse or promote products\n\n#    derived from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND CONTRIBUTORS ``AS IS''\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n\n# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# taken from the Intel ORM\n\n# http://www.intel.com/content/www/us/en/processors/architectures-software-developer-manuals.html\n\n# CPUID Signature Values of Of Recent Intel Microarchitectures\n\n# 4E 5E       | Skylake microarchitecture\n\n# 3D 47 56    | Broadwell microarchitecture\n\n# 3C 45 46 3F | Haswell microarchitecture\n\n# 3A 3E       | Ivy Bridge microarchitecture\n\n# 2A 2D       | Sandy Bridge microarchitecture\n\n# 25 2C 2F    | Intel microarchitecture Westmere\n\n# 1A 1E 1F 2E | Intel microarchitecture Nehalem\n\n# 17 1D       | Enhanced Intel Core microarchitecture\n\n# 0F          | Intel Core microarchitecture\n\n#\n\n# Intel SDM Vol. 3C 35-1 / December 2016:\n\n# 57          | Xeon Phi 3200, 5200, 7200  [Knights Landing]\n\n# 85          | Future Xeon Phi\n\n# 8E 9E       | 7th gen. Core              [Kaby Lake]\n\n# 55          | Future Xeon                [Skylake w/ AVX512]\n\n# 4E 5E       | 6th gen. Core / E3 v5      [Skylake w/o AVX512]\n\n# 56          | Xeon D-1500                [Broadwell]\n\n# 4F          | Xeon E5 v4, E7 v4, i7-69xx [Broadwell]\n\n# 47          | 5th gen. Core / Xeon E3 v4 [Broadwell]\n\n# 3D          | M-5xxx / 5th gen.          [Broadwell]\n\n# 3F          | Xeon E5 v3, E7 v3, i7-59xx [Haswell-E]\n\n# 3C 45 46    | 4th gen. Core, Xeon E3 v3  [Haswell]\n\n# 3E          | Xeon E5 v2, E7 v2, i7-49xx [Ivy Bridge-E]\n\n# 3A          | 3rd gen. Core, Xeon E3 v2  [Ivy Bridge]\n\n# 2D          | Xeon E5, i7-39xx           [Sandy Bridge]\n\n# 2F          | Xeon E7\n\n# 2A          | Xeon E3, 2nd gen. Core     [Sandy Bridge]\n\n# 2E          | Xeon 7500, 6500 series\n\n# 25 2C       | Xeon 3600, 5600 series, Core i7, i5 and i3\n\n#\n\n# Values from the Intel SDE:\n\n# 5C | Goldmont\n\n# 5A | Silvermont\n\n# 57 | Knights Landing\n\n# 66 | Cannonlake\n\n# 55 | Skylake Server\n\n# 4E | Skylake Client\n\n# 3C | Broadwell (likely a bug in the SDE)\n\n# 3C | Haswell\n",
        "Line" : 88,
        "CharPositionInLine" : 12
      },
      "3" : {
        "Text" : "# 57\n",
        "Line" : 130,
        "CharPositionInLine" : 37
      },
      "4" : {
        "Text" : "# Knights Landing\n",
        "Line" : 131,
        "CharPositionInLine" : 48
      },
      "5" : {
        "Text" : "# 8E, 9E\n",
        "Line" : 138,
        "CharPositionInLine" : 66
      },
      "6" : {
        "Text" : "# 55\n",
        "Line" : 140,
        "CharPositionInLine" : 41
      },
      "7" : {
        "Text" : "# 4E, 5E\n",
        "Line" : 142,
        "CharPositionInLine" : 64
      },
      "8" : {
        "Text" : "# 3D, 47, 4F, 56\n",
        "Line" : 144,
        "CharPositionInLine" : 110
      },
      "9" : {
        "Text" : "# Itanium (not supported)\n",
        "Line" : 171,
        "CharPositionInLine" : 37
      },
      "10" : {
        "Text" : "# NetBurst\n",
        "Line" : 173,
        "CharPositionInLine" : 38
      },
      "11" : {
        "Text" : "# Not sure whether this must be 3 or even 4 instead\n",
        "Line" : 175,
        "CharPositionInLine" : 38
      },
      "12" : {
        "Text" : "# 16h\n",
        "Line" : 182,
        "CharPositionInLine" : 38
      },
      "13" : {
        "Text" : "# 15h\n",
        "Line" : 184,
        "CharPositionInLine" : 38
      },
      "14" : {
        "Text" : "# 14h\n",
        "Line" : 190,
        "CharPositionInLine" : 38
      },
      "15" : {
        "Text" : "# 12h\n\n# 10h\n",
        "Line" : 192,
        "CharPositionInLine" : 38
      },
      "16" : {
        "Text" : "# I don't know the right number to put here. This is just a guess from the hardware I have access to\n",
        "Line" : 197,
        "CharPositionInLine" : 39
      },
      "17" : {
        "Text" : "# add this clause to remove it from the else clause\n",
        "Line" : 392,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# MSVC on 32 bit can select /arch:SSE2 (since 2010 also /arch:AVX)\n\n# MSVC on 64 bit cannot select anything (should have changed with MSVC 2010)\n",
        "Line" : 465,
        "CharPositionInLine" : 12
      },
      "19" : {
        "Text" : "# ICC (on Linux)\n",
        "Line" : 488,
        "CharPositionInLine" : 59
      },
      "20" : {
        "Text" : "# This is the Intel compiler, so SSE2 is a very reasonable baseline.\n",
        "Line" : 512,
        "CharPositionInLine" : 16
      },
      "21" : {
        "Text" : "# not MSVC and not ICC => GCC, Clang, Open64\n",
        "Line" : 516,
        "CharPositionInLine" : 16
      },
      "CommentCount" : 22
    },
    "cmake/PythonNumpyPybind11.cmake" : {
      "ObjectId" : "e357fbacad0c1fb73844006320158e6fb0162018",
      "LastModified" : "2018-10-02T04:59:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Python, numpy, and pybind11\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Creating python enters\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# returns zero if success\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "cmake/TaichiCXXFlags.cmake" : {
      "ObjectId" : "68739872a92f89bbfb7639f760e2078c061bb43c",
      "LastModified" : "2019-03-18T03:34:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/TaichiCore.cmake" : {
      "ObjectId" : "f1f8359a946390dbbbeb0814a93b2c51a81d7b2a",
      "LastModified" : "2019-03-18T01:51:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Optional dependencies\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#add_subdirectory(external/glfw)\n\n#include_directories(external/glfw/include)\n\n#target_link_libraries(${CORE_LIBRARY_NAME} glfw)\n",
        "Line" : 27,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# OS X\n",
        "Line" : 58,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Linux\n",
        "Line" : 63,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# MinGW. Disable Embree for now.\n\n#target_link_libraries(${CORE_LIBRARY_NAME} ${CMAKE_CURRENT_SOURCE_DIR}/external/lib/embree.lib)\n\n#target_link_libraries(${CORE_LIBRARY_NAME} ${CMAKE_CURRENT_SOURCE_DIR}/external/lib/embree.dll)\n",
        "Line" : 94,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 5
    },
    "cmake/TaichiMain.cmake" : {
      "ObjectId" : "28978928b56377170592a9214b3bab4456425387",
      "LastModified" : "2018-06-23T03:40:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# On Windows, generate a ti.exe as entry\n",
        "Line" : 3,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "external/include/Eigen/CMakeLists.txt" : {
      "ObjectId" : "9eb502b792d4a9607e2d323f2d8114939b43c209",
      "LastModified" : "2019-03-18T01:51:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external/include/Eigen_old/CMakeLists.txt" : {
      "ObjectId" : "a92dd6f6cafd2206f8be1a50f1294e2ae49feb5a",
      "LastModified" : "2019-03-18T01:51:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external/include/Eigen_old/src/CMakeLists.txt" : {
      "ObjectId" : "c326f374d9ee89c953dd9caefbfaffccb905511c",
      "LastModified" : "2019-03-18T01:51:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external/include/Eigen_old/src/Cholesky/CMakeLists.txt" : {
      "ObjectId" : "d01488b41a826850277a918f555e3668167dd367",
      "LastModified" : "2019-03-18T01:51:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external/include/Eigen_old/src/CholmodSupport/CMakeLists.txt" : {
      "ObjectId" : "814dfa61313847c0f33538e11c4ac4557ec3e32e",
      "LastModified" : "2019-03-18T01:51:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external/include/Eigen_old/src/Core/CMakeLists.txt" : {
      "ObjectId" : "2346fc2bbca4d9bd699efc4c366afd7abd400e3c",
      "LastModified" : "2019-03-18T01:51:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external/include/Eigen_old/src/Core/arch/AltiVec/CMakeLists.txt" : {
      "ObjectId" : "9f8d2e9c46765f4253d6877d040e5c2a90612086",
      "LastModified" : "2019-03-18T01:51:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external/include/Eigen_old/src/Core/arch/CMakeLists.txt" : {
      "ObjectId" : "8456dec1581554a4f7798ebe7d9d292369f21607",
      "LastModified" : "2019-03-18T01:51:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external/include/Eigen_old/src/Core/arch/Default/CMakeLists.txt" : {
      "ObjectId" : "339c091d156100d46f3acbc67ad205749d8f4b3d",
      "LastModified" : "2019-03-18T01:51:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external/include/Eigen_old/src/Core/arch/NEON/CMakeLists.txt" : {
      "ObjectId" : "fd4d4af50cb46dac7e6b29ef8654e70528e1f3ca",
      "LastModified" : "2019-03-18T01:51:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external/include/Eigen_old/src/Core/arch/SSE/CMakeLists.txt" : {
      "ObjectId" : "46ea7cc623c62394c78425b15e100b84126b40a7",
      "LastModified" : "2019-03-18T01:51:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external/include/Eigen_old/src/Core/products/CMakeLists.txt" : {
      "ObjectId" : "21fc94ae38a5574289ae4e304ce087f3ed6897f0",
      "LastModified" : "2019-03-18T01:51:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external/include/Eigen_old/src/Core/util/CMakeLists.txt" : {
      "ObjectId" : "a1e2e521fc11124c92768621c4edf784bc10f51f",
      "LastModified" : "2019-03-18T01:51:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external/include/Eigen_old/src/Eigen2Support/CMakeLists.txt" : {
      "ObjectId" : "7ae41b3cbe9c568f7efdaf45cd1a1ef874bf309b",
      "LastModified" : "2019-03-18T01:51:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external/include/Eigen_old/src/Eigen2Support/Geometry/CMakeLists.txt" : {
      "ObjectId" : "c347a8f26228694dc67e0e89ff6d509152dac738",
      "LastModified" : "2019-03-18T01:51:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external/include/Eigen_old/src/Eigenvalues/CMakeLists.txt" : {
      "ObjectId" : "193e0268599516e2515318ed04eb6dda37b2dd59",
      "LastModified" : "2019-03-18T01:51:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external/include/Eigen_old/src/Geometry/CMakeLists.txt" : {
      "ObjectId" : "f8f728b84faf0e08d91fac04e2986260368b9063",
      "LastModified" : "2019-03-18T01:51:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external/include/Eigen_old/src/Geometry/arch/CMakeLists.txt" : {
      "ObjectId" : "1267a79c78767c43d11c529cc84468cbdd1052a2",
      "LastModified" : "2019-03-18T01:51:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external/include/Eigen_old/src/Householder/CMakeLists.txt" : {
      "ObjectId" : "ce4937db061bbadb0357ccc45547b141761a70e3",
      "LastModified" : "2019-03-18T01:51:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external/include/Eigen_old/src/IterativeLinearSolvers/CMakeLists.txt" : {
      "ObjectId" : "59ccc0072cc4ed78e6aa783bfab2486aac757fca",
      "LastModified" : "2019-03-18T01:51:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external/include/Eigen_old/src/Jacobi/CMakeLists.txt" : {
      "ObjectId" : "490dac626439ade5e05baaba504689366db22e6d",
      "LastModified" : "2019-03-18T01:51:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external/include/Eigen_old/src/LU/CMakeLists.txt" : {
      "ObjectId" : "e0d8d78c1720abb27432f41aa2ace29ef3f3794f",
      "LastModified" : "2019-03-18T01:51:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external/include/Eigen_old/src/LU/arch/CMakeLists.txt" : {
      "ObjectId" : "f6b7ed9ecc3a25e3885c7fece60428481e51c696",
      "LastModified" : "2019-03-18T01:51:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external/include/Eigen_old/src/MetisSupport/CMakeLists.txt" : {
      "ObjectId" : "2bad314163c5044265aa6ac14e3767308dd04ba6",
      "LastModified" : "2019-03-18T01:51:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external/include/Eigen_old/src/OrderingMethods/CMakeLists.txt" : {
      "ObjectId" : "9f4bb275808257ac71d6c04d9c602ce5c0b5be8d",
      "LastModified" : "2019-03-18T01:51:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external/include/Eigen_old/src/PaStiXSupport/CMakeLists.txt" : {
      "ObjectId" : "28c657e9bcf7d3e0ecc800f6d5a11d54020b58cc",
      "LastModified" : "2019-03-18T01:51:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external/include/Eigen_old/src/PardisoSupport/CMakeLists.txt" : {
      "ObjectId" : "a097ab401920ea1b7068f790edcfcf9086b3038b",
      "LastModified" : "2019-03-18T01:51:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external/include/Eigen_old/src/QR/CMakeLists.txt" : {
      "ObjectId" : "96f43d7f5b30fa024b9bd2d9e3a5dacb9d401ecb",
      "LastModified" : "2019-03-18T01:51:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external/include/Eigen_old/src/SPQRSupport/CMakeLists.txt" : {
      "ObjectId" : "4968beaf2c59bcec07fe1861b5d72cb4d6723a6d",
      "LastModified" : "2019-03-18T01:51:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external/include/Eigen_old/src/SVD/CMakeLists.txt" : {
      "ObjectId" : "55efc44b12970d5ec715393cb68cd061203ce941",
      "LastModified" : "2019-03-18T01:51:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external/include/Eigen_old/src/SparseCholesky/CMakeLists.txt" : {
      "ObjectId" : "375a59d7a577877313a1ff2a6bf1c8fac138768b",
      "LastModified" : "2019-03-18T01:51:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external/include/Eigen_old/src/SparseCore/CMakeLists.txt" : {
      "ObjectId" : "d860452a65cb20850a12a120ab1fd3e3fd83dccc",
      "LastModified" : "2019-03-18T01:51:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external/include/Eigen_old/src/SparseLU/CMakeLists.txt" : {
      "ObjectId" : "69729ee8961aa7d4ef514e9f890de0d29f12161f",
      "LastModified" : "2019-03-18T01:51:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external/include/Eigen_old/src/SparseQR/CMakeLists.txt" : {
      "ObjectId" : "f9ddf2bdb75878292267c18697d9dedbd69a6611",
      "LastModified" : "2019-03-18T01:51:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external/include/Eigen_old/src/StlSupport/CMakeLists.txt" : {
      "ObjectId" : "0f094f637acd51b0931e58a199c30f550beaa282",
      "LastModified" : "2019-03-18T01:51:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external/include/Eigen_old/src/SuperLUSupport/CMakeLists.txt" : {
      "ObjectId" : "b28ebe5839cf5c664abdb44c186547507ce688d3",
      "LastModified" : "2019-03-18T01:51:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external/include/Eigen_old/src/UmfPackSupport/CMakeLists.txt" : {
      "ObjectId" : "a57de00209d3bc746b050d1b8aa736bccc66f2bc",
      "LastModified" : "2019-03-18T01:51:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external/include/Eigen_old/src/misc/CMakeLists.txt" : {
      "ObjectId" : "a58ffb7457e06a7a69426a21a9d46d07a6a8ee91",
      "LastModified" : "2019-03-18T01:51:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external/include/Eigen_old/src/plugins/CMakeLists.txt" : {
      "ObjectId" : "1a1d3ffbd724d17e161c40c48ac56c8b1aeb2e1f",
      "LastModified" : "2019-03-18T01:51:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "projects/CMakeLists.txt" : {
      "ObjectId" : "00ff9d372e3233de8cd6f2ce912414cabde9aad3",
      "LastModified" : "2019-03-18T01:51:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "python/taichi/misc/CMakeLists.txt" : {
      "ObjectId" : "af0cfa8759e6ec52e24225b03717a6d37890e242",
      "LastModified" : "2019-03-18T01:51:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 51
  },
  "ElapsedTime" : 2205
}