{
  "Repository" : "31560834",
  "Revision" : "HEAD",
  "ObjectId" : "16f8478bafde6d192258d8706a34d0f3ae567f4b",
  "CommitTime" : "2019-01-29T02:14:45Z",
  "Files" : {
    "doc/Makefile" : {
      "ObjectId" : "0dd083aac2f1d12030f50818ee6789559ad99181",
      "LastModified" : "2018-07-20T01:36:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Minimal makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Put it first so that \"make\" without argument is like \"make help\".\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Catch-all target: route all unknown targets to Sphinx using the new\n\n# \"make mode\" option.  $(O) is meant as a shortcut for $(SPHINXOPTS).\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "receiver/CMakeLists.txt" : {
      "ObjectId" : "c077e07724435a7ebf56be468d0e385c2f9541e3",
      "LastModified" : "2018-07-20T01:36:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set policies\n\n# CMP0042 - MACOSX_RPATH is enabled by default (v3.0)\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# RPATH settings\n\n# Enable MACOS_RPATH\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Additional settings from: https://cmake.org/Wiki/CMake_RPATH_handling#Always_full_RPATH\n\n# use, i.e. don't skip the full RPATH for the build tree\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# when building, don't use the install RPATH already\n\n# (but later on when installing)\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set install RPATH\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# add the automatically determined parts of the RPATH\n\n# which point to directories outside the build tree to the install RPATH\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# the RPATH to be used when installing, but only if it's not a system directory\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Old style root build process\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# New style root build process (with CMake)\n\n# From: https://root.cern.ch/how/integrate-root-my-project-cmake\n\n# (May not be entirely required...)\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Ensure compilation with c++11\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# If ALIROOT is passed, then use it.\n\n# Otherwise, it will automatically download the requisite files.\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "receiver/cmake/FindAliRoot.cmake" : {
      "ObjectId" : "14bf3096ed5a3e4998f28fc939bc508eea25ee5a",
      "LastModified" : "2018-07-20T01:36:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check AliRoot installation\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check for aliroot executable\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "receiver/cmake/FindZeroMQ.cmake" : {
      "ObjectId" : "d6ffa38b3149640a02a1429be9b42410ec2807c3",
      "LastModified" : "2018-07-20T01:36:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Checks for a ZeroMQ installation\n\n# ZeroMQ custom installation can be pointed using -DZEROMQ\n\n#       - ZEROMQ_INCLUDE_DIR - Where to find zeromq include sub-directory.\n\n#       - ZEROMQ_LIBRARIES   - List of libraries when using zeromq.\n\n#       - ZEROMQ_FOUND       - True if zeromq found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ZeroMQ is installed in a custom place\n",
        "Line" : 12,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Check is the library is installed on the system\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "receiver/src/AliZMQhelpers/CMakeLists.txt" : {
      "ObjectId" : "8b23e6fec2dbffc9ec9f9ec316470f893a06eaa8",
      "LastModified" : "2018-11-22T01:43:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Download the files from the HLT\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Download the file from the main AliRoot GitHub repository since it appears to be in sync with the\n\n# HLT dev repository. Note that if a newer version is necessary and updates are provided, it may be\n\n# made available in the dev branch of the ALICEHLT/AliRoot fork.\n",
        "Line" : 12,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# Variable should be plural to support both ROOT build methods...\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Installation\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "receiver/src/CMakeLists.txt" : {
      "ObjectId" : "c4283f7b2bf983790b7081b3949bcb47cb01b9d2",
      "LastModified" : "2018-07-20T01:36:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Download and use local copy\n\n# NOTE: We don't need to use the MessageFormat switch!\n\n#       It is only needed when sending with the new library and receiving with the old. Which we don't do,\n\n#       so we don't need to worry about it!\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Add ZMQ Helpers extracted from AliRoot\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Add wanning options (not included for AliZMQhelpers since that code isn't under our control)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Variable should be plural to support both ROOT build methods...\n",
        "Line" : 19,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Also include AliRoot includes if needed\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add AliRoot include directory explicitly (it is added implicitly by FindAliRoot.cmake)\n",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Link against the util library to get AliOptionParser\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Include our local copy\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    }
  },
  "FileTypes" : {
    "CMAKE" : 5,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 1056
}