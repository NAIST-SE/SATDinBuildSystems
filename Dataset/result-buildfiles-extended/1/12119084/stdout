{
  "Repository" : "12119084",
  "Revision" : "HEAD",
  "ObjectId" : "8c496152dd1beae95cd21f7e1cd668733c18e1e1",
  "CommitTime" : "2019-04-10T03:18:29Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "4d833c686c67839b5c81fd031b17795d84241ea9",
      "LastModified" : "2019-02-26T13:00:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Cmake modules/macros are in a subdirectory to keep this file cleaner\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Release comes with -O3 by default\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "######################################################################\n\n# compiler tests\n\n# these need ot be done early (before further tests).\n\n#####################################################################\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#...without compiler extensions like gnu++11\n",
        "Line" : 33,
        "CharPositionInLine" : 30
      },
      "4" : {
        "Text" : "########################################################################\n\n# User input options                                                   #\n\n########################################################################\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# this has to be the include specification!\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "########################################################################\n\n#Find external packages\n\n########################################################################\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#we use TXT2TAGS_FOUND conditionals in other CMakeLists.txt\n\n#so that TXT2TAGS is never required\n",
        "Line" : 66,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "########################################################################\n\n# Basic system tests (standard libraries, headers, functions, types)   #\n\n########################################################################\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "######################################\n\n# Include the following subdirectory # \n\n######################################\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "CMakeModules/CheckCXXLibraryExists.cmake" : {
      "ObjectId" : "d84aea77a825dfed358f0835bdbdd5210d45df2f",
      "LastModified" : "2016-02-02T20:56:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# CheckCXXLibraryExists\n\n# ------------------\n\n#\n\n# Check if the CXX function exists.\n\n#\n\n# CHECK_CXX_LIBRARY_EXISTS (LIBRARY FUNCTION LOCATION VARIABLE)\n\n#\n\n# ::\n\n#\n\n#   LIBRARY  - the name of the library you are looking for\n\n#   FUNCTION - the name of the function\n\n#   LOCATION - location where the library should be found\n\n#   VARIABLE - variable to store the result\n\n#              Will be created as an internal cache variable.\n\n#\n\n#\n\n#\n\n# The following variables may be set before calling this macro to modify\n\n# the way the check is run:\n\n#\n\n# ::\n\n#\n\n#   CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n#   CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n#   CMAKE_REQUIRED_LIBRARIES = list of libraries to link\n\n#   CMAKE_REQUIRED_QUIET = execute quietly without messages\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2002-2009 Kitware, Inc.\n\n# Copyright 2015 The VOTCA Development Team (http://www.votca.org)\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMakeModules/FindEigen3.cmake" : {
      "ObjectId" : "4d9bc1a5252bbc9075e4dcb95c28b387a382fe0c",
      "LastModified" : "2018-10-25T12:05:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Eigen3 lib\n\n#\n\n# This module supports requiring a minimum version, e.g. you can do\n\n#   find_package(Eigen3 3.1.2)\n\n# to require version 3.1.2 or newer of Eigen3.\n\n#\n\n# Once done this will define\n\n#\n\n#  EIGEN3_FOUND - system has eigen lib with correct version\n\n#  EIGEN3_INCLUDE_DIR - the eigen include directory\n\n#  EIGEN3_VERSION - eigen version\n\n#\n\n# and the following imported target:\n\n#\n\n#  Eigen3::Eigen - The header-only Eigen library\n\n#\n\n# This module reads hints about search locations from \n\n# the following environment variables:\n\n#\n\n# EIGEN3_ROOT\n\n# EIGEN3_ROOT_DIR\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Copyright (c) 2009 Benoit Jacob <jacob.benoit.1@gmail.com>\n\n# Redistribution and use is allowed according to the terms of the 2-clause BSD license.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# search first if an Eigen3Config.cmake is available in the system,\n\n# if successful this would set EIGEN3_INCLUDE_DIR and the rest of\n\n# the script will work as usual\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "CMakeModules/FindGROMACS.cmake" : {
      "ObjectId" : "535bdb740964a7ccd294d048a40ece0de6caf5f2",
      "LastModified" : "2019-04-01T11:01:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Finds parts of gromacs\n\n# Find the native gromacs compents headers and libraries.\n\n#\n\n#  GROMACS_INCLUDE_DIRS - where to find gromacs headers.\n\n#  GROMACS_LIBRARIES    - List of libraries when used by gromacs.\n\n#  GROMACS_FOUND        - True if all gromacs componets were found.\n\n#  GROMACS_DEFINITIONS  - Extra definies needed by gromacs\n\n#  GROMACS_VERSION      - Gromacs lib interface version\n\n#\n\n# Copyright 2009-2018 The VOTCA Development Team (http://www.votca.org)\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set GROMACS_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMakeModules/FindMKL.cmake" : {
      "ObjectId" : "8805bb69c64f39a08cb011ca018d252945308732",
      "LastModified" : "2018-10-25T12:05:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake script to detect Intel(R) Math Kernel Library (MKL)\n\n#\n\n# This will try to find Intel MKL libraries, and include path by automatic\n\n# search through typical install locations and if failed it will\n\n# examine MKLROOT environment variable.\n\n# Note, MKLROOT is not set by IPP installer, it should be set manually.\n\n#\n\n# Usage example:\n\n#   set(MKL_USE_STATIC_LIBS ON)\n\n#   find_package(MKL)\n\n#   if (MKL_FOUND)\n\n#      include_directories(${MKL_INCLUDE_DIRS})\n\n#      add_executable(foo foo.cc)\n\n#      target_link_libraries(foo ${MKL_LIBRARIES})\n\n#   endif()\n\n#\n\n# Variables used by this module, they can change the default behaviour and\n\n# need to be set before calling find_package:\n\n#\n\n#   MKL_ADDITIONAL_VERSIONS      A list of version numbers to use for searching\n\n#                                the MKL include directory.\n\n#\n\n#   MKL_USE_STATIC_LIBS          Can be set to ON to force the use of the static\n\n#                                boost libraries. Defaults to OFF.\n\n#\n\n#   MKL_FIND_DEBUG               Set this to TRUE to enable debugging output\n\n#                                of FindMKL.cmake if you are having problems.\n\n#\n\n# On return this will define:\n\n#   MKL_FOUND                   Indicates whether MKL was found (True/False)\n\n#   MKL_INCLUDE_DIRS            MKL include folder\n\n#   MKL_LIBRARY_DIRS            MKL libraries folder\n\n#   MKL_LIBRARIES               MKL libraries names\n\n#\n\n# NOTE: this script has only been tested with Intel(R) Parallel Studio XE 2011\n\n# and may need changes for compatibility with older versions.\n\n#\n\n# Adapted from OpenCV IPP detection script\n\n#   https://code.ros.org/trac/opencv/browser/trunk/opencv/OpenCVFindIPP.cmake\n\n# Many portions taken from FindBoost.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO:\n\n# - caller needs to link with libiomp5md.lib or /Qopenmp...\n\n# - runtime DLLs:\n\n#   <Composer XE directory> -> C:\\Program Files\\Intel\\ComposerXE-2011\n\n#     redist\\ia32\\mkl\n\n#     redist\\intel64\\mkl\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Versions should be listed is decreasing order of preference\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# alternative form: \"2011.xxx.y\"\n\n# (y is the release-update number and xxx is the package number)\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Use environment variables from Intel build scripts, if available\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Find MKL include directory\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Find MKL library directory\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Find MKL libraries\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Find OpenMP, pthread and math libraries\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# we could instead fallback to default library (via FindOpenMP.cmake)\n",
        "Line" : 250,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Optimized math library (optional)\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# linked by default with Intel compiler\n",
        "Line" : 264,
        "CharPositionInLine" : 20
      },
      "12" : {
        "Text" : "# assumes (/MD) otherwise libmmt.lib (for /MT)\n",
        "Line" : 267,
        "CharPositionInLine" : 40
      },
      "13" : {
        "Text" : "# we could instead fallback to default library (via FindOpenMP.cmake)\n",
        "Line" : 281,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Check all required libraries are available\n",
        "Line" : 294,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "CMakeModules/FindSQLITE3.cmake" : {
      "ObjectId" : "44fb24dead10ea21615c0d1380c0efd3862148c1",
      "LastModified" : "2018-10-25T12:05:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find libsqlite3\n\n# Find the native libsqlite3 headers and libraries.\n\n#\n\n#  SQLITE3_INCLUDE_DIRS - where to find sqlite3.h, etc\n\n#  SQLITE3_LIBRARIES    - List of libraries when using sqlite3.\n\n#  SQLITE3_FOUND        - True if sqlite3 found.\n\n#\n\n# Copyright 2009-2011 The VOTCA Development Team (http://www.votca.org)\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMakeModules/FindTXT2TAGS.cmake" : {
      "ObjectId" : "40188bff55ba830a22bf619d91101dc66607d622",
      "LastModified" : "2018-10-25T12:05:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2011 Votca Development Team\n\n#\n\n# This file was derived from FindGnuplot.cmake shipped with CMake 2.6.3.\n\n#\n\n# - this module looks for txt2tags\n\n#\n\n# Once done this will define\n\n#\n\n#  TXT2TAGS_FOUND - system has txt2tags\n\n#  TXT2TAGS_EXECUTABLE - the txt2tags executable\n\n#\n\n# Copyright 2009-2011 The VOTCA Development Team (http://www.votca.org)\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n\n#=============================================================================\n\n# Copyright 2002-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distributed this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set TXT2TAGS_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMakeModules/FindVOTCA_CSG.cmake" : {
      "ObjectId" : "4e57cec45faeffa4f6093a1c11353cfb6a0664fe",
      "LastModified" : "2018-10-25T12:05:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find libvotca_csg\n\n# Find the native libvotca_csg headers and libraries.\n\n#\n\n#  VOTCA_CSG_INCLUDE_DIRS - where to find votca/csg/version.h, etc.\n\n#  VOTCA_CSG_LIBRARIES    - List of libraries when using expat.\n\n#  VOTCA_CSG_FOUND        - True if expat found.\n\n#  VOTCA_CSG_HAS_SQLITE3  - True if votca csg was build with sqlite3 support\n\n#\n\n# Copyright 2009-2011 The VOTCA Development Team (http://www.votca.org)\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set VOTCA_CSG_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMakeModules/FindVOTCA_TOOLS.cmake" : {
      "ObjectId" : "3dda98d009cddddaad07bd8f62b5f49092d4904c",
      "LastModified" : "2018-10-25T12:05:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find libvotca_tools\n\n# Find the native libvotca_tools headers and libraries.\n\n#\n\n#  VOTCA_TOOLS_INCLUDE_DIRS - where to find votca/tools/version.h, etc.\n\n#  VOTCA_TOOLS_LIBRARIES    - List of libraries when using expat.\n\n#  VOTCA_TOOLS_FOUND        - True if expat found.\n\n#  VOTCA_TOOLS_HAS_SQLITE3  - True if votca tools was build with sqlite3 support\n\n#\n\n# Copyright 2009-2018 The VOTCA Development Team (http://www.votca.org)\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#due to include <sqlite3.h> in database.h\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set VOTCA_TOOLS_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "CMakeModules/gitscript.cmake" : {
      "ObjectId" : "6d753bd7ee73bde283244c098e3a5f5c3001527e",
      "LastModified" : "2018-10-25T12:05:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# refresh git index\n",
        "Line" : 2,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#later use git describe here\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "CMakeModules/gitversion.cmake" : {
      "ObjectId" : "22bfe27845594ba3386115be49abfbecbf7cff73",
      "LastModified" : "2018-10-25T12:05:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# refresh git index\n",
        "Line" : 2,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#later use git describe here\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "include/votca/csg/CMakeLists.txt" : {
      "ObjectId" : "1e29783af49f3142c0caf4257676e8581acf6823",
      "LastModified" : "2018-10-25T12:05:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "netbeans/csg_fmatch/Makefile" : {
      "ObjectId" : "acd23c3f20409bbeac1a0246d2b1e6a666366847",
      "LastModified" : "2018-10-25T12:05:18Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n#  There exist several targets which are by default empty and which can be \n\n#  used for execution of your targets. These targets are usually executed \n\n#  before and after some main targets. They are: \n\n#\n\n#     .build-pre:              called before 'build' target\n\n#     .build-post:             called after 'build' target\n\n#     .clean-pre:              called before 'clean' target\n\n#     .clean-post:             called after 'clean' target\n\n#     .clobber-pre:            called before 'clobber' target\n\n#     .clobber-post:           called after 'clobber' target\n\n#     .all-pre:                called before 'all' target\n\n#     .all-post:               called after 'all' target\n\n#     .help-pre:                called before 'help' target\n\n#     .help-post:               called after 'help' target\n\n#\n\n#  Targets beginning with '.' are not intended to be called on their own.\n\n#\n\n#  Main targets can be executed directly, and they are:\n\n#  \n\n#     build                    build a specific configuration\n\n#     clean                    remove built files from a configuration\n\n#     clobber                  remove all built files\n\n#     all                      build all configurations\n\n#     help                     print help mesage\n\n#  \n\n#  Targets .build-impl, .clean-impl, .clobber-impl, .all-impl, and\n\n#  .help-impl are implemented in nbproject/makefile-impl.mk.\n\n#\n\n# NOCDDL\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Environment \n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# build\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add your pre 'build' code here...\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add your post 'build' code here...\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# clean\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add your pre 'clean' code here...\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add your post 'clean' code here...\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# clobber\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Add your pre 'clobber' code here...\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Add your post 'clobber' code here...\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# all\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Add your pre 'all' code here...\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Add your post 'all' code here...\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# help\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Add your pre 'help' code here...\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Add your post 'help' code here...\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# include project implementation makefile\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "netbeans/csg_imcrepack/Makefile" : {
      "ObjectId" : "30bc678372c52e4a154b02a56d88ce0dbccbc61a",
      "LastModified" : "2018-10-25T12:05:18Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n#  There exist several targets which are by default empty and which can be \n\n#  used for execution of your targets. These targets are usually executed \n\n#  before and after some main targets. They are: \n\n#\n\n#     .build-pre:              called before 'build' target\n\n#     .build-post:             called after 'build' target\n\n#     .clean-pre:              called before 'clean' target\n\n#     .clean-post:             called after 'clean' target\n\n#     .clobber-pre:            called before 'clobber' target\n\n#     .clobber-post:           called after 'clobber' target\n\n#     .all-pre:                called before 'all' target\n\n#     .all-post:               called after 'all' target\n\n#     .help-pre:                called before 'help' target\n\n#     .help-post:               called after 'help' target\n\n#\n\n#  Targets beginning with '.' are not intended to be called on their own.\n\n#\n\n#  Main targets can be executed directly, and they are:\n\n#  \n\n#     build                    build a specific configuration\n\n#     clean                    remove built files from a configuration\n\n#     clobber                  remove all built files\n\n#     all                      build all configurations\n\n#     help                     print help mesage\n\n#  \n\n#  Targets .build-impl, .clean-impl, .clobber-impl, .all-impl, and\n\n#  .help-impl are implemented in nbproject/makefile-impl.mk.\n\n#\n\n# NOCDDL\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Environment \n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# build\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add your pre 'build' code here...\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add your post 'build' code here...\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# clean\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add your pre 'clean' code here...\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add your post 'clean' code here...\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# clobber\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Add your pre 'clobber' code here...\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Add your post 'clobber' code here...\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# all\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Add your pre 'all' code here...\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Add your post 'all' code here...\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# help\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Add your pre 'help' code here...\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Add your post 'help' code here...\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# include project implementation makefile\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "netbeans/csg_stat/Makefile" : {
      "ObjectId" : "acd23c3f20409bbeac1a0246d2b1e6a666366847",
      "LastModified" : "2018-10-25T12:05:18Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n#  There exist several targets which are by default empty and which can be \n\n#  used for execution of your targets. These targets are usually executed \n\n#  before and after some main targets. They are: \n\n#\n\n#     .build-pre:              called before 'build' target\n\n#     .build-post:             called after 'build' target\n\n#     .clean-pre:              called before 'clean' target\n\n#     .clean-post:             called after 'clean' target\n\n#     .clobber-pre:            called before 'clobber' target\n\n#     .clobber-post:           called after 'clobber' target\n\n#     .all-pre:                called before 'all' target\n\n#     .all-post:               called after 'all' target\n\n#     .help-pre:                called before 'help' target\n\n#     .help-post:               called after 'help' target\n\n#\n\n#  Targets beginning with '.' are not intended to be called on their own.\n\n#\n\n#  Main targets can be executed directly, and they are:\n\n#  \n\n#     build                    build a specific configuration\n\n#     clean                    remove built files from a configuration\n\n#     clobber                  remove all built files\n\n#     all                      build all configurations\n\n#     help                     print help mesage\n\n#  \n\n#  Targets .build-impl, .clean-impl, .clobber-impl, .all-impl, and\n\n#  .help-impl are implemented in nbproject/makefile-impl.mk.\n\n#\n\n# NOCDDL\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Environment \n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# build\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add your pre 'build' code here...\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add your post 'build' code here...\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# clean\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add your pre 'clean' code here...\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add your post 'clean' code here...\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# clobber\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Add your pre 'clobber' code here...\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Add your post 'clobber' code here...\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# all\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Add your pre 'all' code here...\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Add your post 'all' code here...\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# help\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Add your pre 'help' code here...\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Add your post 'help' code here...\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# include project implementation makefile\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "scripts/CMakeLists.txt" : {
      "ObjectId" : "bb234e1f480cfa911d1d18dd40af9df76f07ee96",
      "LastModified" : "2018-10-25T12:05:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "share/CMakeLists.txt" : {
      "ObjectId" : "e83df102b1bd6adbe05284527f7575a2922cb499",
      "LastModified" : "2018-10-25T12:05:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "share/doc/CMakeLists.txt" : {
      "ObjectId" : "ff954ca79c6ba0a7993a2522c19c07bfb4922c70",
      "LastModified" : "2018-10-25T12:05:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "share/man/CMakeLists.txt" : {
      "ObjectId" : "f9647889142d76d51d951816885c8336439b8c06",
      "LastModified" : "2018-10-25T12:05:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "share/scripts/inverse/CMakeLists.txt" : {
      "ObjectId" : "5811f1284872982a1c0d00f2590777d7529bfca1",
      "LastModified" : "2018-10-25T12:05:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "share/template/CMakeLists.txt" : {
      "ObjectId" : "d2834ed8cd4be35472e503c563e6ae2292595e68",
      "LastModified" : "2018-10-25T12:05:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# run tests for tools (for coverage) as well\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "share/xml/CMakeLists.txt" : {
      "ObjectId" : "af20266770f07bfc5e55e89eb524f1435517df70",
      "LastModified" : "2018-10-25T12:05:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "d2b8c6d382887b5cb8735ab0eb918fd33d24e14f",
      "LastModified" : "2018-10-25T12:05:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/csg_boltzmann/CMakeLists.txt" : {
      "ObjectId" : "84702f77cd4d75420ac0925a68cb8e98e1945232",
      "LastModified" : "2019-04-01T11:01:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/libcsg/CMakeLists.txt" : {
      "ObjectId" : "1ad67e70da927785df2130664524a13986a80ea4",
      "LastModified" : "2019-04-09T22:08:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#general to a gmx builds\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "src/tests/CMakeLists.txt" : {
      "ObjectId" : "c9e309dbf9c66fcdcf84afd396677f0dc70f4477",
      "LastModified" : "2019-04-01T11:01:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# run tests for csg (for coverage) as well\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "src/tools/CMakeLists.txt" : {
      "ObjectId" : "73f35caca285ce94359c4ef6c3a9618c76fe5397",
      "LastModified" : "2019-04-08T12:35:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# run tests for tools (for coverage) as well\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 24,
    "MAKEFILE" : 3
  },
  "ElapsedTime" : 1798
}