{
  "Repository" : "63183364",
  "Revision" : "HEAD",
  "ObjectId" : "3b6a4fe4cd0800b7078953d56156475f699751f1",
  "CommitTime" : "2019-04-18T20:14:30Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "f70f79c16b4ef405d4aa5560a64f213f584e2f39",
      "LastModified" : "2019-04-17T18:09:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# To see what patches have been applied to LLD in this repository:\n\n# git log -p -- deps/lld\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This goes first so that we find embedded LLD instead\n\n# of system LLD.\n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# No patches have been applied to SoftFloat-3e\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# CMake doesn't let us create an empty executable, so we hang on to this one separately.\n",
        "Line" : 410,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This is our shim which will be replaced by libuserland written in Zig.\n",
        "Line" : 413,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# These have to go before the -Wno- flags\n",
        "Line" : 6599,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/Findclang.cmake" : {
      "ObjectId" : "6747e489b4605282da080ac2c65e7b6236f31677",
      "LastModified" : "2019-02-28T14:19:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2016 Andrew Kelley\n\n# This file is MIT licensed.\n\n# See http://opensource.org/licenses/MIT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CLANG_FOUND\n\n# CLANG_INCLUDE_DIRS\n\n# CLANG_LIBRARIES\n\n# CLANG_LIBDIRS\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Findlld.cmake" : {
      "ObjectId" : "1895612eb960a1142d94ed67a336b234a51022ca",
      "LastModified" : "2018-12-23T22:04:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2017 Andrew Kelley\n\n# This file is MIT licensed.\n\n# See http://opensource.org/licenses/MIT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# LLD_FOUND\n\n# LLD_INCLUDE_DIRS\n\n# LLD_LIBRARIES\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Findllvm.cmake" : {
      "ObjectId" : "e13c1e741caa98dd81dbe5f57b9da776b0d35ae4",
      "LastModified" : "2019-02-09T23:57:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2014 Andrew Kelley\n\n# This file is MIT licensed.\n\n# See http://opensource.org/licenses/MIT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# LLVM_FOUND\n\n# LLVM_INCLUDE_DIRS\n\n# LLVM_LIBRARIES\n\n# LLVM_LIBDIRS\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/lld/CMakeLists.txt" : {
      "ObjectId" : "e2fbdbfbbb47f774cb62cd1ad438a75b76f55231",
      "LastModified" : "2018-01-17T22:29:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check if lld is built as a standalone project.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check prebuilt llvm/utils.\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Note: path not really used, except for checking if lit was found\n",
        "Line" : 79,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# Seek installed Lit.\n",
        "Line" : 94,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# Define the default arguments to use with 'lit', and an option for the user\n\n# to override.\n",
        "Line" : 102,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# On Win32 hosts, provide an option to specify the path to the GnuWin32 tools.\n",
        "Line" : 110,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# Compute the LLD version from the LLVM version.\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Determine LLD revision and repository.\n\n# TODO: Figure out a way to get the revision and the repository on windows.\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Replace newline characters with spaces\n",
        "Line" : 143,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Remove leading spaces\n",
        "Line" : 145,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Remove trailing spaces\n",
        "Line" : 147,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Replace newline characters with spaces\n",
        "Line" : 152,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Remove leading spaces\n",
        "Line" : 154,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Remove trailing spaces\n",
        "Line" : 156,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Configure the Version.inc file.\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Suppress 'warning C4530: C++ exception handler used, but unwind semantics are not enabled.'\n\n# Suppress 'warning C4062: enumerator X in switch of enum Y is not handled' from system header.\n",
        "Line" : 195,
        "CharPositionInLine" : 27
      },
      "CommentCount" : 16
    },
    "deps/lld/COFF/CMakeLists.txt" : {
      "ObjectId" : "bb241e788c19987a68dde31a7b8fe2c1847376d4",
      "LastModified" : "2018-09-19T16:57:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/lld/Common/CMakeLists.txt" : {
      "ObjectId" : "a45fe209f06f3df702b920e329c811634b347338",
      "LastModified" : "2018-09-19T16:57:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/lld/ELF/CMakeLists.txt" : {
      "ObjectId" : "a1c23b0d49ac7fb8a19fd7e6b50464da440ec1fe",
      "LastModified" : "2019-02-09T23:57:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/lld/MinGW/CMakeLists.txt" : {
      "ObjectId" : "bb0fe4a3887d7f6d6492e2f9c7e9beadc885cf78",
      "LastModified" : "2018-01-17T22:29:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/lld/cmake/modules/AddLLD.cmake" : {
      "ObjectId" : "fa48b428d26b7dd47d3530b23e558c163ad20cfe",
      "LastModified" : "2018-09-19T16:57:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Always generate install targets\n",
        "Line" : 71,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "deps/lld/cmake/modules/FindVTune.cmake" : {
      "ObjectId" : "bd0cbe9a38cbafaedc5c57159b84d71763d58805",
      "LastModified" : "2018-01-17T22:29:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find VTune ittnotify.\n\n# Defines:\n\n# VTune_FOUND\n\n# VTune_INCLUDE_DIRS\n\n# VTune_LIBRARIES\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/lld/docs/CMakeLists.txt" : {
      "ObjectId" : "112ce35e8cf460dd6aba167ad0ed7bfc304b6703",
      "LastModified" : "2018-01-17T22:29:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/lld/lib/CMakeLists.txt" : {
      "ObjectId" : "8884efcfe9ba9c105b84e52aaaf207bea7bea6fd",
      "LastModified" : "2018-01-17T22:29:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/lld/lib/Core/CMakeLists.txt" : {
      "ObjectId" : "2d4d9ded088626c7a702b1dbea8f3d35a1213dd2",
      "LastModified" : "2018-01-17T22:29:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/lld/lib/Driver/CMakeLists.txt" : {
      "ObjectId" : "ff67c282f47e351d4de3cba7e6e19ca17486b6cb",
      "LastModified" : "2018-09-19T16:57:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/lld/lib/ReaderWriter/CMakeLists.txt" : {
      "ObjectId" : "bedb836d2c1e48cbe5ba53b6ed09491fa28da833",
      "LastModified" : "2018-01-17T22:29:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Suppress 'warning C4062: Enumerator has no associated handler in a switch statement.'\n",
        "Line" : 5,
        "CharPositionInLine" : 27
      },
      "CommentCount" : 1
    },
    "deps/lld/lib/ReaderWriter/MachO/CMakeLists.txt" : {
      "ObjectId" : "37d1de432c0f1e494e032dd8c516ab6347e020cf",
      "LastModified" : "2018-09-19T16:57:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/lld/lib/ReaderWriter/YAML/CMakeLists.txt" : {
      "ObjectId" : "0e63574a63d21b5fbe9b00832090d2a87953c9b6",
      "LastModified" : "2018-01-17T22:29:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/lld/test/CMakeLists.txt" : {
      "ObjectId" : "1b908335c4a14c6d3fe70941ce5aff0c07334900",
      "LastModified" : "2019-02-09T23:57:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set HAVE_LIBZ according to recorded LLVM_ENABLE_ZLIB value. This\n\n# value is forced to 0 if zlib was not found, so it is fine to use it\n\n# instead of HAVE_LIBZ (not recorded).\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Add a legacy target spelling: lld-test\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/lld/tools/lld/CMakeLists.txt" : {
      "ObjectId" : "d8829493fc22bdfdcf655f8c5d081eb550028127",
      "LastModified" : "2018-01-17T22:29:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/lld/unittests/CMakeLists.txt" : {
      "ObjectId" : "84d35d43f4e877473651292d0bafe93d991df5bb",
      "LastModified" : "2018-01-17T22:29:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add_lld_unittest(test_dirname file1.cpp file2.cpp)\n\n#\n\n# Will compile the list of files together and link against lld\n\n# Produces a binary named 'basename(test_dirname)'.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/lld/unittests/DriverTests/CMakeLists.txt" : {
      "ObjectId" : "7137d69e1b60b9de5d1c3c4657d8df54227f2c8f",
      "LastModified" : "2018-01-17T22:29:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/lld/unittests/MachOTests/CMakeLists.txt" : {
      "ObjectId" : "b2b22fb089c341b7eb3b3e32d985bd4f23aeceeb",
      "LastModified" : "2018-01-17T22:29:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/lld/wasm/CMakeLists.txt" : {
      "ObjectId" : "1a9e09b38429c23e0607e9245fc8e426f3e7ea5d",
      "LastModified" : "2018-09-19T16:57:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libcxx/include/CMakeLists.txt" : {
      "ObjectId" : "73f7cfc4d8e3894abffa4e67ed08ef77a2da1fe2",
      "LastModified" : "2019-03-10T17:48:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Generate a custom __config header. The new header is created\n\n# by prepending __config_site to the current __config header.\n",
        "Line" : 190,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Add a target that executes the generation commands.\n",
        "Line" : 200,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Copy the generated header as __config into build directory.\n",
        "Line" : 226,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Install the generated header as __config.\n",
        "Line" : 253,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Stripping is a no-op for headers\n",
        "Line" : 267,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    }
  },
  "FileTypes" : {
    "CMAKE" : 25
  },
  "ElapsedTime" : 6069
}