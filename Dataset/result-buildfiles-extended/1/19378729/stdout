{
  "Repository" : "19378729",
  "Revision" : "HEAD",
  "ObjectId" : "383ef32bef0b9253b948a9f116de29bba86a1ddf",
  "CommitTime" : "2019-03-27T08:19:56Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "95029b4f1436064b596c9a0d62efeba1e8438b0e",
      "LastModified" : "2019-03-27T08:19:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Double colon in target name means ALIAS or IMPORTED target.\n\n# The ``project()`` command manages VERSION variables.\n",
        "Line" : 3,
        "CharPositionInLine" : 30
      },
      "1" : {
        "Text" : "# read version parts from version.h\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO: check that 'decltype' compiles\n\n# TODO: check that 'constexpr' compiles\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# MSVC doesn't provide a switch to turn C++11 on/off AFAIK\n",
        "Line" : 51,
        "CharPositionInLine" : 28
      },
      "4" : {
        "Text" : "# MSVC before 2012 has a broken std::vector::resize implementation. STL + Vc code will probably not compile.\n\n# UserWarning in VcMacros.cmake\n",
        "Line" : 78,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Disable warning \"C++ exception specification ignored except to indicate a function is not __declspec(nothrow)\"\n\n# MSVC emits the warning for the _UnitTest_Compare desctructor which needs the throw declaration so that it doesn't std::terminate\n",
        "Line" : 85,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "# per default icc is not IEEE compliant, but we need that for verification\n",
        "Line" : 96,
        "CharPositionInLine" : 3
      },
      "7" : {
        "Text" : "# ${CMAKE_CURRENT_SOURCE_DIR}/include)\n",
        "Line" : 104,
        "CharPositionInLine" : 49
      },
      "8" : {
        "Text" : "# -fstack-protector is the default of GCC, but at least Ubuntu changes the default to -fstack-protector-strong, which is crazy\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# TODO: document what this does and why it has no counterpart in the non-XCODE logic\n",
        "Line" : 135,
        "CharPositionInLine" : 3
      },
      "10" : {
        "Text" : "# On UNIX (Linux) the standard library used by default typically is libstdc++ (GCC).\n\n# To get the full clang deal we rather want to build against libc++. This requires\n\n# additionally the libc++abi and libsupc++ libraries in all linker invokations.\n",
        "Line" : 141,
        "CharPositionInLine" : 3
      },
      "11" : {
        "Text" : "# Generate and install CMake package and modules\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#Release# option(BUILD_TESTING \"Build the testing tree.\" OFF)\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Hide Vc_IMPL as it is only meant for users of Vc\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "CTestConfig.cmake" : {
      "ObjectId" : "d71d810dcae86867e0b382e2b396340feb433d4c",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CTestCustom.cmake" : {
      "ObjectId" : "5871429acb442864742bb4bb693fad1e2a04db44",
      "LastModified" : "2018-04-18T12:24:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# MSVC 2012 can't suppress this warning\n\n# MSVC 2012 can't suppress this warning\n",
        "Line" : 2,
        "CharPositionInLine" : 14
      },
      "1" : {
        "Text" : "# Not a helpful warning for the dashboard\n",
        "Line" : 5,
        "CharPositionInLine" : 84
      },
      "2" : {
        "Text" : "# Ignore output from cmake\n",
        "Line" : 7,
        "CharPositionInLine" : 11
      },
      "3" : {
        "Text" : "# This warning is meant for users not the dashboard\n",
        "Line" : 8,
        "CharPositionInLine" : 61
      },
      "4" : {
        "Text" : "# Ignore output from ctest\n",
        "Line" : 9,
        "CharPositionInLine" : 55
      },
      "5" : {
        "Text" : "# Ignore warning about incompatible libraries with ICC -m32 on 64-bit system\n",
        "Line" : 10,
        "CharPositionInLine" : 26
      },
      "6" : {
        "Text" : "# -Wuninitialized in QWeakPointer(X *ptr)\n",
        "Line" : 11,
        "CharPositionInLine" : 17
      },
      "7" : {
        "Text" : "# Notes are additional lines from errors (or warnings) that we don't want to count as additional warnings\n",
        "Line" : 12,
        "CharPositionInLine" : 13
      },
      "8" : {
        "Text" : "# a preprocessor warning for users of Vc, irrelevant for the dashboard\n",
        "Line" : 14,
        "CharPositionInLine" : 38
      },
      "CommentCount" : 9
    },
    "Makefile" : {
      "ObjectId" : "3f6062708fdda0107a58bde56c10b31dd5913ee6",
      "LastModified" : "2018-11-19T09:24:47Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# the following rule works around %:: grabbing the Makefile rule and thus stops it from running every time\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/AddCompilerFlag.cmake" : {
      "ObjectId" : "6684fa54a5ed5eec0ae2c569d4f56bc49724ec44",
      "LastModified" : "2018-11-19T09:24:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Add a given compiler flag to flags variables.\n\n# AddCompilerFlag(<flag> [<var>])\n\n# or\n\n# AddCompilerFlag(<flag> [C_FLAGS <var>] [CXX_FLAGS <var>] [C_RESULT <var>]\n\n#                        [CXX_RESULT <var>])\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2010-2015 Matthias Kretz <kretz@kde.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are\n\n# met:\n\n#\n\n#  * Redistributions of source code must retain the above copyright notice,\n\n#    this list of conditions and the following disclaimer.\n\n#\n\n#  * Redistributions in binary form must reproduce the above copyright notice,\n\n#    this list of conditions and the following disclaimer in the documentation\n\n#    and/or other materials provided with the distribution.\n\n#\n\n#  * Neither the names of contributing organizations nor the\n\n#    names of its contributors may be used to endorse or promote products\n\n#    derived from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND CONTRIBUTORS ``AS IS''\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n\n# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Compiling with FMA3 support may fail only at the assembler level.\n\n# In that case we need to have such an instruction in the test code\n",
        "Line" : 90,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# Compiling with libc++ not only requires a compiler that understands it, but also\n\n# the libc++ headers itself\n",
        "Line" : 97,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 4
    },
    "cmake/AddTargetProperty.cmake" : {
      "ObjectId" : "8e4faaafc181f879454ca97f20ad466b7152e64a",
      "LastModified" : "2015-11-24T13:39:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n# Copyright 2010-2015 Matthias Kretz <kretz@kde.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are\n\n# met:\n\n#\n\n#  * Redistributions of source code must retain the above copyright notice,\n\n#    this list of conditions and the following disclaimer.\n\n#  * Redistributions in binary form must reproduce the above copyright notice,\n\n#    this list of conditions and the following disclaimer in the documentation\n\n#    and/or other materials provided with the distribution.\n\n#  * Neither the names of contributing organizations nor the\n\n#    names of its contributors may be used to endorse or promote products\n\n#    derived from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND CONTRIBUTORS ``AS IS''\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n\n# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/CheckCCompilerFlag.cmake" : {
      "ObjectId" : "07ec156e02e3853a0db1c2c8ee7393efafa36b02",
      "LastModified" : "2018-11-19T09:24:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check whether the C compiler supports a given flag.\n\n# CHECK_C_COMPILER_FLAG(<flag> <var>)\n\n#  <flag> - the compiler flag\n\n#  <var>  - variable to store the result\n\n# This internally calls the check_c_source_compiles macro.\n\n# See help for CheckCSourceCompiles for a listing of variables\n\n# that can modify the build.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2006-2009 Kitware, Inc.\n\n# Copyright 2006 Alexander Neundorf <neundorf@kde.org>\n\n# Copyright 2011-2013 Matthias Kretz <kretz@kde.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are\n\n# met:\n\n#\n\n#  * Redistributions of source code must retain the above copyright notice,\n\n#    this list of conditions and the following disclaimer.\n\n#\n\n#  * Redistributions in binary form must reproduce the above copyright notice,\n\n#    this list of conditions and the following disclaimer in the documentation\n\n#    and/or other materials provided with the distribution.\n\n#\n\n#  * The names of Kitware, Inc., the Insight Consortium, or the names of\n\n#    any consortium members, or of any contributors, may not be used to\n\n#    endorse or promote products derived from this software without\n\n#    specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND CONTRIBUTORS ``AS IS''\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n\n# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Some compilers do not fail with a bad flag\n",
        "Line" : 53,
        "CharPositionInLine" : 5
      },
      "3" : {
        "Text" : "# GNU\n\n# clang\n\n# GNU\n\n# GNU\n\n# GNU\n\n# MSVC\n\n# MSVC\n\n# HP\n\n# SunPro\n\n# XL\n\n# Open64\n\n# ICC\n\n# ICC\n\n# ICC: File not found\n\n# ICC\n\n# ICC: option '-mfma' ignored, suggest using '-march=core-avx2'\n",
        "Line" : 54,
        "CharPositionInLine" : 60
      },
      "CommentCount" : 4
    },
    "cmake/CheckCXXCompilerFlag.cmake" : {
      "ObjectId" : "e3b0188a44b7ebb9261d580e2bcf6999ca857a29",
      "LastModified" : "2018-11-19T09:24:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check whether the CXX compiler supports a given flag.\n\n# CHECK_CXX_COMPILER_FLAG(<flag> <var>)\n\n#  <flag> - the compiler flag\n\n#  <var>  - variable to store the result\n\n# This internally calls the check_cxx_source_compiles macro.  See help\n\n# for CheckCXXSourceCompiles for a listing of variables that can\n\n# modify the build.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2006-2009 Kitware, Inc.\n\n# Copyright 2006 Alexander Neundorf <neundorf@kde.org>\n\n# Copyright 2011-2013 Matthias Kretz <kretz@kde.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are\n\n# met:\n\n#\n\n#  * Redistributions of source code must retain the above copyright notice,\n\n#    this list of conditions and the following disclaimer.\n\n#\n\n#  * Redistributions in binary form must reproduce the above copyright notice,\n\n#    this list of conditions and the following disclaimer in the documentation\n\n#    and/or other materials provided with the distribution.\n\n#\n\n#  * The names of Kitware, Inc., the Insight Consortium, or the names of\n\n#    any consortium members, or of any contributors, may not be used to\n\n#    endorse or promote products derived from this software without\n\n#    specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND CONTRIBUTORS ``AS IS''\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n\n# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Some compilers do not fail with a bad flag\n",
        "Line" : 53,
        "CharPositionInLine" : 5
      },
      "3" : {
        "Text" : "# GNU\n\n# clang\n\n# GNU\n\n# GNU\n\n# GNU\n\n# MSVC\n\n# MSVC\n\n# HP\n\n# SunPro\n\n# XL\n\n# Open64\n\n# ICC\n\n# ICC\n\n# ICC: File not found\n\n# ICC\n\n# ICC: option '-mfma' ignored, suggest using '-march=core-avx2'\n",
        "Line" : 54,
        "CharPositionInLine" : 60
      },
      "CommentCount" : 4
    },
    "cmake/FindVc.cmake" : {
      "ObjectId" : "ae5678cf9111fb7f2e8c1b5c096a705b57c6dffd",
      "LastModified" : "2015-11-24T13:39:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate the Vc template library. Vc can be found at https://github.com/VcDevel/Vc\n\n#\n\n# This file is meant to be copied into projects that want to use Vc. It will\n\n# search for VcConfig.cmake, which ships with Vc and will provide up-to-date\n\n# buildsystem changes. Thus there should not be any need to update FindVc.cmake\n\n# again after you integrated it into your project.\n\n#\n\n# This module defines the following variables:\n\n# Vc_FOUND\n\n# Vc_INCLUDE_DIR\n\n# Vc_LIBRARIES\n\n# Vc_DEFINITIONS\n\n# Vc_COMPILE_FLAGS\n\n# Vc_ARCHITECTURE_FLAGS\n\n# Vc_ALL_FLAGS (the union of the above three variables)\n\n# Vc_VERSION_MAJOR\n\n# Vc_VERSION_MINOR\n\n# Vc_VERSION_PATCH\n\n# Vc_VERSION\n\n# Vc_VERSION_STRING\n\n# Vc_INSTALL_DIR\n\n# Vc_LIB_DIR\n\n# Vc_CMAKE_MODULES_DIR\n\n#\n\n# The following two variables are set according to the compiler used. Feel free\n\n# to use them to skip whole compilation units.\n\n# Vc_SSE_INTRINSICS_BROKEN\n\n# Vc_AVX_INTRINSICS_BROKEN\n\n#\n\n#=============================================================================\n\n# Copyright 2009-2015   Matthias Kretz <kretz@kde.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are\n\n# met:\n\n#\n\n#  * Redistributions of source code must retain the above copyright notice,\n\n#    this list of conditions and the following disclaimer.\n\n#  * Redistributions in binary form must reproduce the above copyright notice,\n\n#    this list of conditions and the following disclaimer in the documentation\n\n#    and/or other materials provided with the distribution.\n\n#  * Neither the names of contributing organizations nor the\n\n#    names of its contributors may be used to endorse or promote products\n\n#    derived from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND CONTRIBUTORS ``AS IS''\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n\n# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/OptimizeForArchitecture.cmake" : {
      "ObjectId" : "075956c2eb456cbdc56a300a34742e490a433ce8",
      "LastModified" : "2018-11-19T09:24:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Determine the host CPU feature set and determine the best set of compiler\n\n# flags to enable all supported SIMD relevant features. Alternatively, the\n\n# target CPU can be explicitly selected (for generating more generic binaries\n\n# or for targeting a different system).\n\n# Compilers provide e.g. the -march=native flag to achieve a similar result.\n\n# This fails to address the need for building for a different microarchitecture\n\n# than the current host.\n\n# The script tries to deduce all settings from the model and family numbers of\n\n# the CPU instead of reading the CPUID flags from e.g. /proc/cpuinfo. This makes\n\n# the detection more independent from the CPUID code in the kernel (e.g. avx2 is\n\n# not listed on older kernels).\n\n#\n\n# Usage:\n\n# OptimizeForArchitecture()\n\n# If either of Vc_SSE_INTRINSICS_BROKEN, Vc_AVX_INTRINSICS_BROKEN,\n\n# Vc_AVX2_INTRINSICS_BROKEN is defined and set, the OptimizeForArchitecture\n\n# macro will consequently disable the relevant features via compiler flags.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2010-2016 Matthias Kretz <kretz@kde.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are\n\n# met:\n\n#\n\n#  * Redistributions of source code must retain the above copyright notice,\n\n#    this list of conditions and the following disclaimer.\n\n#  * Redistributions in binary form must reproduce the above copyright notice,\n\n#    this list of conditions and the following disclaimer in the documentation\n\n#    and/or other materials provided with the distribution.\n\n#  * Neither the names of contributing organizations nor the\n\n#    names of its contributors may be used to endorse or promote products\n\n#    derived from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND CONTRIBUTORS ``AS IS''\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n\n# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# taken from the Intel ORM\n\n# http://www.intel.com/content/www/us/en/processors/architectures-software-developer-manuals.html\n\n# CPUID Signature Values of Of Recent Intel Microarchitectures\n\n# 4E 5E       | Skylake microarchitecture\n\n# 3D 47 56    | Broadwell microarchitecture\n\n# 3C 45 46 3F | Haswell microarchitecture\n\n# 3A 3E       | Ivy Bridge microarchitecture\n\n# 2A 2D       | Sandy Bridge microarchitecture\n\n# 25 2C 2F    | Intel microarchitecture Westmere\n\n# 1A 1E 1F 2E | Intel microarchitecture Nehalem\n\n# 17 1D       | Enhanced Intel Core microarchitecture\n\n# 0F          | Intel Core microarchitecture\n\n#\n\n# Intel SDM Vol. 3C 35-1 / December 2016:\n\n# 57          | Xeon Phi 3200, 5200, 7200  [Knights Landing]\n\n# 85          | Future Xeon Phi\n\n# 8E 9E       | 7th gen. Core              [Kaby Lake]\n\n# 55          | Future Xeon                [Skylake w/ AVX512]\n\n# 4E 5E       | 6th gen. Core / E3 v5      [Skylake w/o AVX512]\n\n# 56          | Xeon D-1500                [Broadwell]\n\n# 4F          | Xeon E5 v4, E7 v4, i7-69xx [Broadwell]\n\n# 47          | 5th gen. Core / Xeon E3 v4 [Broadwell]\n\n# 3D          | M-5xxx / 5th gen.          [Broadwell]\n\n# 3F          | Xeon E5 v3, E7 v3, i7-59xx [Haswell-E]\n\n# 3C 45 46    | 4th gen. Core, Xeon E3 v3  [Haswell]\n\n# 3E          | Xeon E5 v2, E7 v2, i7-49xx [Ivy Bridge-E]\n\n# 3A          | 3rd gen. Core, Xeon E3 v2  [Ivy Bridge]\n\n# 2D          | Xeon E5, i7-39xx           [Sandy Bridge]\n\n# 2F          | Xeon E7\n\n# 2A          | Xeon E3, 2nd gen. Core     [Sandy Bridge]\n\n# 2E          | Xeon 7500, 6500 series\n\n# 25 2C       | Xeon 3600, 5600 series, Core i7, i5 and i3\n\n#\n\n# Values from the Intel SDE:\n\n# 5C | Goldmont\n\n# 5A | Silvermont\n\n# 57 | Knights Landing\n\n# 66 | Cannonlake\n\n# 55 | Skylake Server\n\n# 4E | Skylake Client\n\n# 3C | Broadwell (likely a bug in the SDE)\n\n# 3C | Haswell\n",
        "Line" : 91,
        "CharPositionInLine" : 9
      },
      "3" : {
        "Text" : "# 57\n",
        "Line" : 133,
        "CharPositionInLine" : 33
      },
      "4" : {
        "Text" : "# Knights Landing\n",
        "Line" : 134,
        "CharPositionInLine" : 44
      },
      "5" : {
        "Text" : "# 8E, 9E\n",
        "Line" : 141,
        "CharPositionInLine" : 62
      },
      "6" : {
        "Text" : "# 55\n",
        "Line" : 143,
        "CharPositionInLine" : 37
      },
      "7" : {
        "Text" : "# 4E, 5E\n",
        "Line" : 145,
        "CharPositionInLine" : 60
      },
      "8" : {
        "Text" : "# 3D, 47, 4F, 56\n",
        "Line" : 147,
        "CharPositionInLine" : 106
      },
      "9" : {
        "Text" : "# Itanium (not supported)\n",
        "Line" : 174,
        "CharPositionInLine" : 34
      },
      "10" : {
        "Text" : "# NetBurst\n",
        "Line" : 176,
        "CharPositionInLine" : 35
      },
      "11" : {
        "Text" : "# Not sure whether this must be 3 or even 4 instead\n",
        "Line" : 178,
        "CharPositionInLine" : 34
      },
      "12" : {
        "Text" : "# 16h\n",
        "Line" : 185,
        "CharPositionInLine" : 35
      },
      "13" : {
        "Text" : "# 15h\n",
        "Line" : 187,
        "CharPositionInLine" : 35
      },
      "14" : {
        "Text" : "# 14h\n",
        "Line" : 193,
        "CharPositionInLine" : 35
      },
      "15" : {
        "Text" : "# 12h\n\n# 10h\n",
        "Line" : 195,
        "CharPositionInLine" : 35
      },
      "16" : {
        "Text" : "# I don't know the right number to put here. This is just a guess from the hardware I have access to\n",
        "Line" : 200,
        "CharPositionInLine" : 35
      },
      "17" : {
        "Text" : "# add this clause to remove it from the else clause\n",
        "Line" : 404,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# MSVC on 32 bit can select /arch:SSE2 (since 2010 also /arch:AVX)\n\n# MSVC on 64 bit cannot select anything (should have changed with MSVC 2010)\n",
        "Line" : 477,
        "CharPositionInLine" : 9
      },
      "19" : {
        "Text" : "# ICC (on Linux)\n",
        "Line" : 500,
        "CharPositionInLine" : 56
      },
      "20" : {
        "Text" : "# This is the Intel compiler, so SSE2 is a very reasonable baseline.\n",
        "Line" : 524,
        "CharPositionInLine" : 12
      },
      "21" : {
        "Text" : "# not MSVC and not ICC => GCC, Clang, Open64\n",
        "Line" : 528,
        "CharPositionInLine" : 13
      },
      "CommentCount" : 22
    },
    "cmake/UserWarning.cmake" : {
      "ObjectId" : "0be6ad240d7fb29f603e364da5fe0e72951c4eac",
      "LastModified" : "2012-05-29T19:15:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# developer (non-dashboard) build\n",
        "Line" : 3,
        "CharPositionInLine" : 6
      },
      "1" : {
        "Text" : "# dashboard build\n",
        "Line" : 6,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 2
    },
    "cmake/VcMacros.cmake" : {
      "ObjectId" : "684b4ac9fc165b72d9ed8f41efb93f78e3651e6a",
      "LastModified" : "2018-11-19T09:24:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros for use with the Vc library. Vc can be found at http://code.compeng.uni-frankfurt.de/projects/vc\n\n#\n\n# The following macros are provided:\n\n# vc_determine_compiler\n\n# vc_set_preferred_compiler_flags\n\n#\n\n#=============================================================================\n\n# Copyright 2009-2015   Matthias Kretz <kretz@kde.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are\n\n# met:\n\n#\n\n#  * Redistributions of source code must retain the above copyright notice,\n\n#    this list of conditions and the following disclaimer.\n\n#  * Redistributions in binary form must reproduce the above copyright notice,\n\n#    this list of conditions and the following disclaimer in the documentation\n\n#    and/or other materials provided with the distribution.\n\n#  * Neither the names of contributing organizations nor the\n\n#    names of its contributors may be used to endorse or promote products\n\n#    derived from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND CONTRIBUTORS ``AS IS''\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n\n# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# break build with too old clang as early as possible.\n",
        "Line" : 55,
        "CharPositionInLine" : 9
      },
      "2" : {
        "Text" : "# break build with too old clang as early as possible.\n",
        "Line" : 68,
        "CharPositionInLine" : 9
      },
      "3" : {
        "Text" : "# some distributions patch their GCC to return nothing or only major and minor version on -dumpversion.\n\n# In that case we must extract the version number from --version.\n",
        "Line" : 83,
        "CharPositionInLine" : 9
      },
      "4" : {
        "Text" : "# some distributions patch their GCC to be API incompatible to what the FSF released. In\n\n# those cases we require a macro to identify the distribution version\n",
        "Line" : 91,
        "CharPositionInLine" : 9
      },
      "5" : {
        "Text" : "# break build with too old GCC as early as possible.\n",
        "Line" : 115,
        "CharPositionInLine" : 9
      },
      "6" : {
        "Text" : "# old assembler doesn't know the xgetbv instruction\n",
        "Line" : 160,
        "CharPositionInLine" : 64
      },
      "7" : {
        "Text" : "# Look for libmvec, which provides vectorized implementations of libm\n",
        "Line" : 175,
        "CharPositionInLine" : 3
      },
      "8" : {
        "Text" : "##################################################################################################\n\n#                                             Open64                                             #\n\n##################################################################################################\n",
        "Line" : 232,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# Open64 4.5.1 still doesn't ship immintrin.h\n",
        "Line" : 260,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "##################################################################################################\n\n#                                              GCC                                               #\n\n##################################################################################################\n",
        "Line" : 264,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# ABI version 4 is required to make __m128 and __m256 appear as different types. 0 should give us the latest version.\n",
        "Line" : 276,
        "CharPositionInLine" : 63
      },
      "12" : {
        "Text" : "# GCC 5 introduced this switch\n",
        "Line" : 277,
        "CharPositionInLine" : 70
      },
      "13" : {
        "Text" : "# and defaults it to 2 if -fabi-version is 0. But in that case the bug -fabi-version=0 is\n\n# supposed to fix resurfaces. For now just make sure that it compiles and links.\n\n# Bug report pending.\n",
        "Line" : 278,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# The GNU assembler (as) on Mac OS X is hopelessly outdated. The -q flag\n\n# to as tells it to use the clang assembler, though, which is fine.\n\n# -Wa,-q tells GCC to pass -q to as.\n",
        "Line" : 287,
        "CharPositionInLine" : 9
      },
      "15" : {
        "Text" : "# Apparently the MacOS clang assember doesn't understand XOP instructions.\n",
        "Line" : 291,
        "CharPositionInLine" : 9
      },
      "16" : {
        "Text" : "##################################################################################################\n\n#                                          Intel Compiler                                        #\n\n##################################################################################################\n",
        "Line" : 297,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# disable warning #2928: the __GXX_EXPERIMENTAL_CXX0X__ macro is disabled when using GNU version 4.6 with the c++0x option\n\n# this warning just adds noise about problems in the compiler - but I'm only interested in seeing problems in Vc\n",
        "Line" : 317,
        "CharPositionInLine" : 9
      },
      "18" : {
        "Text" : "# Intel doesn't implement the XOP or FMA4 intrinsics\n",
        "Line" : 322,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "##################################################################################################\n\n#                                      Microsoft Visual Studio                                   #\n\n##################################################################################################\n",
        "Line" : 326,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "# Disable warning \"forcing value to bool\"\n\n# Disable warning about strdup vs. _strdup\n\n# Disable warning \"conversion from 'unsigned int' to 'float', possible loss of data\"\n\n# Disable warning \"unary minus operator applied to unsigned type, result still unsigned\"\n\n# Disable warning \"anachronism used : qualifiers on reference are ignored\" (this is about 'restrict' usage on references, stupid MSVC)\n\n# Disable warning \"destructor never returns, potential memory leak\" (warns about ~_UnitTest_Global_Object which we don't care about)\n\n# Disable warning \"/GS can not protect parameters and local variables from local buffer overrun because optimizations are disabled in function\" (I don't get it)\n",
        "Line" : 331,
        "CharPositionInLine" : 36
      },
      "21" : {
        "Text" : "# default to __vectorcall\n",
        "Line" : 340,
        "CharPositionInLine" : 51
      },
      "22" : {
        "Text" : "##################################################################################################\n\n#                                              Clang                                             #\n\n##################################################################################################\n",
        "Line" : 346,
        "CharPositionInLine" : 6
      },
      "23" : {
        "Text" : "# disable these warnings because clang shows them for function overloads that were discarded via SFINAE\n",
        "Line" : 356,
        "CharPositionInLine" : 6
      },
      "24" : {
        "Text" : "# helper macro for vc_compile_for_all_implementations\n",
        "Line" : 381,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# disabled and enabled -> error\n",
        "Line" : 387,
        "CharPositionInLine" : 9
      },
      "26" : {
        "Text" : "# skip the rest and return\n",
        "Line" : 391,
        "CharPositionInLine" : 6
      },
      "27" : {
        "Text" : "# MSVC for 64bit does not recognize /arch:SSE2 anymore. Therefore we set override _ok if _impl\n\n# says SSE\n",
        "Line" : 417,
        "CharPositionInLine" : 9
      },
      "28" : {
        "Text" : "# Generate compile rules for the given C++ source file for all available implementations and return\n\n# the resulting list of object files in _obj\n\n# all remaining arguments are additional flags\n\n# Example:\n\n#   vc_compile_for_all_implementations(_objs src/trigonometric.cpp FLAGS -DCOMPILE_BLAH EXCLUDE Scalar)\n\n#   add_executable(executable main.cpp ${_objs})\n",
        "Line" : 443,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# The necessary list is not clear to me yet. At this point I'll only consider Intel CPUs, in\n\n# which case AVX2 implies the availability of FMA and BMI2\n\n#_vc_compile_one_implementation(${_srcs} AVX2  \"-mavx2\")\n\n#_vc_compile_one_implementation(${_srcs} AVX2+BMI2 \"-mavx2 -mbmi2\")\n",
        "Line" : 496,
        "CharPositionInLine" : 6
      },
      "30" : {
        "Text" : "#_vc_compile_one_implementation(${_srcs} AVX2+FMA \"-mavx2 -mfma\")\n",
        "Line" : 501,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 31
    },
    "cmake/toolchain-arm-linux-gnueabi-gcc.cmake" : {
      "ObjectId" : "bdf5fa6d894a90cb78428d2d3745616f153549c1",
      "LastModified" : "2018-11-19T09:24:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/toolchain-arm-linux.cmake" : {
      "ObjectId" : "bdf5fa6d894a90cb78428d2d3745616f153549c1",
      "LastModified" : "2018-11-19T09:24:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/CMakeLists.txt" : {
      "ObjectId" : "520bd98e688286f508e2c4e60c1730615764d990",
      "LastModified" : "2018-11-19T09:24:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/buddhabrot/CMakeLists.txt" : {
      "ObjectId" : "e38971b097f81c067dc4c55b7f7c224422bc507f",
      "LastModified" : "2018-11-19T09:24:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Special -DScalar target that uses fundamental types directly\n",
        "Line" : 6,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 1
    },
    "examples/cpuid/CMakeLists.txt" : {
      "ObjectId" : "d00b2880ea7949c53ef9f4072bfa4df66f49fe43",
      "LastModified" : "2018-11-19T09:24:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/finitediff/CMakeLists.txt" : {
      "ObjectId" : "75401d2e797beb85d7294aa0df9f36c2981ee5ba",
      "LastModified" : "2018-11-19T09:24:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/linear_find/CMakeLists.txt" : {
      "ObjectId" : "7a7121c0381f3e4b82eb63139a2a6eb0b9fc944b",
      "LastModified" : "2018-11-19T09:24:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/mandelbrot/CMakeLists.txt" : {
      "ObjectId" : "cf81a957ecb9d76232a851166c29832647150a7d",
      "LastModified" : "2018-11-19T09:24:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/matrix/CMakeLists.txt" : {
      "ObjectId" : "94b51d8f97ec03ac9af9eaaf6500590bb7fa3c5e",
      "LastModified" : "2018-11-19T09:24:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/polarcoord/CMakeLists.txt" : {
      "ObjectId" : "777bcb222047fd1df4e0f6cf809c11fd130cf064",
      "LastModified" : "2018-11-19T09:24:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/scaling/CMakeLists.txt" : {
      "ObjectId" : "2500ded1cbc427337871b693f185acd0cdd66d6d",
      "LastModified" : "2018-11-19T09:24:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/simdize/CMakeLists.txt" : {
      "ObjectId" : "0b39143b907eca9fed5de9a9bfec18a916c53981",
      "LastModified" : "2018-11-19T09:24:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/test_inside/CMakeLists.txt" : {
      "ObjectId" : "b0bd5915ccbd169fc2620bcc5785e64622cf3971",
      "LastModified" : "2018-11-19T09:24:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "print_target_architecture.cmake" : {
      "ObjectId" : "b4116fa7efa5092d7620c2ecdd406ad0dfd97d68",
      "LastModified" : "2018-11-19T09:24:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test.cmake" : {
      "ObjectId" : "511277dd737f603a0a94aa7cf3f4706d18def2c1",
      "LastModified" : "2018-11-19T09:24:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#!ctest -S\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#message(STATUS \"argument ${name}: '${${name}}'\")\n",
        "Line" : 14,
        "CharPositionInLine" : 3
      },
      "2" : {
        "Text" : "# Dashboard Model\n\n################################################################################\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set build variables from environment variables\n\n################################################################################\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set CMAKE_BUILD_TYPE from environment variable\n\n################################################################################\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# better make sure we get english output (this is vital for the implicit_type_conversion_failures tests)\n\n################################################################################\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# determine the git branch we're testing\n\n################################################################################\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# -> ref: refs/heads/user/foobar\n\n# -> user/foobar\n\n# an actual branch name, not a hash\n",
        "Line" : 60,
        "CharPositionInLine" : 65
      },
      "8" : {
        "Text" : "# read the associated hash\n",
        "Line" : 63,
        "CharPositionInLine" : 3
      },
      "9" : {
        "Text" : "# a long hash -> make it shorter\n",
        "Line" : 71,
        "CharPositionInLine" : 3
      },
      "10" : {
        "Text" : "# try harder to find a branch name\n",
        "Line" : 74,
        "CharPositionInLine" : 3
      },
      "11" : {
        "Text" : "#message(\"${git_branch_out}\")\n",
        "Line" : 84,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "#message(\"${git_branch_out}\")\n",
        "Line" : 86,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# still just a hash -> make it empty because the hash is communicated via git_hash\n",
        "Line" : 98,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# it's a feature branch referencing a GitHub issue number -> make it short\n",
        "Line" : 103,
        "CharPositionInLine" : 3
      },
      "15" : {
        "Text" : "# determine the (short) hostname of the build machine\n\n################################################################################\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# collect system information for the \"Build Name\" (and build setup, e.g. -j)\n\n################################################################################\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Determine the processor count (number_of_processors)\n\n################################################################################\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Determine the compiler version string\n\n################################################################################\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# e.g. \"Apple LLVM version 6.0 (clang-600.0.57) (based on LLVM 3.5svn)\"\n",
        "Line" : 206,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "# it's GCC but without \"GCC\" in the COMPILER_VERSION string - fix it up\n",
        "Line" : 215,
        "CharPositionInLine" : 6
      },
      "21" : {
        "Text" : "# Build the CTEST_BUILD_NAME string\n\n################################################################################\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# nightly builds shouldn't contain the git hash, since it makes expected builds impossible\n",
        "Line" : 287,
        "CharPositionInLine" : 3
      },
      "23" : {
        "Text" : "# instead make sure the hash is included in the notes\n",
        "Line" : 289,
        "CharPositionInLine" : 3
      },
      "24" : {
        "Text" : "# work around CDash limitations:\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Determine build directory\n\n################################################################################\n",
        "Line" : 304,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Give user feedback\n\n################################################################################\n\n#message(\"src:        ${CTEST_SOURCE_DIRECTORY}\")\n\n#message(\"obj:        ${CTEST_BINARY_DIRECTORY}\")\n",
        "Line" : 309,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# attach information on the OS\n\n################################################################################\n",
        "Line" : 321,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# cross-compiling, can't run the tests\n",
        "Line" : 379,
        "CharPositionInLine" : 25
      },
      "29" : {
        "Text" : "# On Continuous builds this string may change and thus must be inside go()\n",
        "Line" : 405,
        "CharPositionInLine" : 3
      },
      "30" : {
        "Text" : "# enter the following section for Continuous builds only if the CTEST_UPDATE above found changes\n",
        "Line" : 423,
        "CharPositionInLine" : 3
      },
      "31" : {
        "Text" : "#\"${CTEST_BINARY_DIRECTORY}/CMakeFiles/CMakeOutput.log\"\n",
        "Line" : 430,
        "CharPositionInLine" : 9
      },
      "32" : {
        "Text" : "# less clutter in ctest -V output\n",
        "Line" : 434,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 33
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "31b2e8effcf24bbd5ac8530615e7fbaf856109ef",
      "LastModified" : "2018-11-19T09:24:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ICC warns about code that produces reference values. Not useful.\n\n# warning #264: floating-point value does not fit in required floating-point type\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# warning #61: integer operation result is out of range\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# -DVC_CHECK_ALIGNMENT)\n",
        "Line" : 9,
        "CharPositionInLine" : 101
      },
      "3" : {
        "Text" : "# Disable warning \"conversion from 'size_t' to 'int', possible loss of data\"\n\n# Disable warning \"potential divide by 0\" (suppress doesn't work)\n\n# Disable warning \"decorated name length exceeded, name was truncated\"\n",
        "Line" : 11,
        "CharPositionInLine" : 30
      },
      "4" : {
        "Text" : "# 32-bit x86 requires SSE for fp math to produce comparable results.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Reset the ROOT default executable destination\n",
        "Line" : 41,
        "CharPositionInLine" : 43
      },
      "6" : {
        "Text" : "# don't warn about sanity checks:\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# GCC does not complain about the following flags until much later. Therefore\n\n# the AddCompilerFlag logic doesn't work as intended.\n",
        "Line" : 49,
        "CharPositionInLine" : 3
      },
      "8" : {
        "Text" : "# do nothing. This just clutters the solution explorer\n",
        "Line" : 77,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# nothing\n",
        "Line" : 247,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# Test ABI on 64-bit x86: Vector/Mask arguments and return values should pass via registers.\n\n# The 32 bit ABI only allows passing via the stack, so nothing useful to test there.\n",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# compile and link test for targets that need to link lots of stuff together\n",
        "Line" : 350,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "tests/abi.cmake" : {
      "ObjectId" : "8d0aa20d2cddd3b1c9bdf5d881f0a9b41de456f8",
      "LastModified" : "2018-11-19T09:24:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#######################################################################\n\n# test Vector<T> ABI\n\n#######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#######################################################################\n\n# test Mask<T> ABI\n\n#######################################################################\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "CMAKE" : 28,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 3885
}