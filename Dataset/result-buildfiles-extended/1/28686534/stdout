{
  "Repository" : "28686534",
  "Revision" : "HEAD",
  "ObjectId" : "7a72f3bd684c95afb0124e34c4ece03c336a43ff",
  "CommitTime" : "2019-02-25T13:02:01Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "7a90c303c0b3866d6451159942a325251421f878",
      "LastModified" : "2019-02-24T01:03:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##################################################################\r\n\n# IQ-TREE cmake build definition\r\n\n# Copyright (c) 2012-2015 Bui Quang Minh, Lam-Tung Nguyen\r\n\n##################################################################\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Windows example usages:\r\n\n#------------------------\r\n\n# cmake -G \"Visual Studio 12\" <source_dir>\t\t\t(32-bit version, compiled with MSVC)\r\n\n# cmake -G \"Visual Studio 12 Win64\" <source_dir>\t(64-bit version, compiled with MSVC)\r\n\n# cmake -G \"Visual Studio 12 Win64\" -T \"Intel C++ Compiler XE 15.0\" <source_dir>\t\t(64-bit version, compiled with ICC)\r\n\n# cmake -G \"MinGW Makefiles\" <source_dir> (TDM-GCC)\r\n\n# cmake -G \"Unix Makefiles\" -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_MAKE_PROGRAM=mingw32-make <source_dir> (TDM-GCC and clang)\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Linux example usages:\r\n\n#----------------------\r\n\n# cmake <source_dir>\t\t\t\t\t\t   (sequential version)\r\n\n# cmake <source_dir>      (OpenMP version)\r\n\n# cmake -DIQTREE_FLAGS=\"m32-single\" <source_dir>      (32-bit sequential version)\r\n\n# cmake -DIQTREE_FLAGS=\"m32\" <source_dir>  (32-bit OpenMP version)\r\n\n#\r\n\n# To compile with CLANG on Linux:\r\n\n# export CC=/usr/bin/clang\r\n\n# export CXX=/usr/bin/clang++\r\n\n# Best practices for setting up CMAKE for diffrent compiler can be found here:\r\n\n# http://stackoverflow.com/questions/7031126/switching-between-gcc-and-clang-llvm-using-cmake\r\n\n#\r\n\n# Mac OSX example usages:\r\n\n#------------------------\r\n\n#\r\n\n# To build OpenMP version one needs to download Clang version 3.7 or later (as of November 2015)\r\n\n# Then assuming clang3.7 and clang++3.7 are the newly built compilers, then:\r\n\n# cmake -DCMAKE_C_COMPILER=clang3.7 -DCMAKE_CXX_COMPILER=clang++3.7 <source_dir>   (OpenMP version)\r\n\n#\r\n\n# cmake -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DIQTREE_FLAGS=single <source_dir>   (sequential version)\r\n\n#\r\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Compile OpenMP version: cmake ....\r\n\n# Compile 32-bit version: cmake -DIQTREE_FLAGS=m32 ....\r\n\n# Compile static version: cmake -DIQTREE_FLAGS=static ....\r\n\n# Compile static OpenMP version: cmake -DIQTREE_FLAGS=\"static\" ....\r\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#NOTE: Static linking with clang windows: make a symlink libgcc_eh.a to libgcc.a (administrator required)\r\n\n# C:\\TDM-GCC-64\\lib\\gcc\\x86_64-w64-mingw32\\5.1.0>mklink libgcc_eh.a libgcc.a\r\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The version number.\r\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "##################################################################\r\n\n# Detect target platforms\r\n\n##################################################################\r\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# build as static binary to run on most machines\r\n",
        "Line" : 84,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# to be compatible back to Mac OS X 10.7\r\n",
        "Line" : 92,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# build as static binary to run on most machines\r\n",
        "Line" : 103,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# Note that IQ-TREE has NOT been tested on other platforms\r\n",
        "Line" : 110,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "##################################################################\r\n\n# Setup compiler, currently supported GCC, CLANG, MSVC, and ICC\r\n\n##################################################################\r\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#  GNU compiler\r\n\n# Clang compiler\r\n\n# Intel compiler\r\n\n# MS Visual C Compiler, note that it is different from MSVC variable\r\n",
        "Line" : 118,
        "CharPositionInLine" : 19
      },
      "13" : {
        "Text" : "# using C++11 standard\r\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#\tset(COMBINED_FLAGS \"-Wall -Wno-unused-function -Wno-sign-compare -pedantic -D_GNU_SOURCE -fms-extensions -Wno-deprecated\")\r\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# require at least gcc 4.8\r\n",
        "Line" : 136,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# disable AVX on Windows due to memory alignment\r\n",
        "Line" : 141,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "#\tset(COMBINED_FLAGS \"-Wall -Wno-unused-function -Wno-sign-compare -pedantic -D_GNU_SOURCE -Wno-nested-anon-types\")\r\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# use libc++ per default in MacOS\r\n",
        "Line" : 157,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "#remove -rdynamic for Clang under Linux\r\n",
        "Line" : 163,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "#set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} /Qstd=c99\")\r\n",
        "Line" : 173,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# MS Visual Studio environment\r\n",
        "Line" : 181,
        "CharPositionInLine" : 1
      },
      "22" : {
        "Text" : "# enable multi-processor compilation\r\n",
        "Line" : 183,
        "CharPositionInLine" : 22
      },
      "23" : {
        "Text" : "#add_definitions(/O3)\r\n",
        "Line" : 189,
        "CharPositionInLine" : 12
      },
      "24" : {
        "Text" : "# enable link time optimization\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#if (CLANG)\r\n\n#    set(COMBINED_FLAGS \"${COMBINED_FLAGS} -flto=thin\")\r\n\n#else()\r\n",
        "Line" : 197,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "#endif()\r\n",
        "Line" : 201,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "##################################################################\r\n\n# configure MPI compilation\r\n\n##################################################################\r\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# if not using the MPI compiler wrapper, set own options manually \r\n",
        "Line" : 211,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : "##################################################################\r\n\n# Configure PLL build\r\n\n##################################################################\r\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "##################################################################\r\n\n# detect 32 or 64 bit binary\r\n\n##################################################################\r\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#SET(EXE_SUFFIX \"${EXE_SUFFIX}32\")\r\n",
        "Line" : 241,
        "CharPositionInLine" : 1
      },
      "32" : {
        "Text" : "##################################################################\r\n\n# configure OpenMP/PThreads compilation\r\n\n# change the executable name if compiled for OpenMP parallel version\r\n\n##################################################################\r\n",
        "Line" : 254,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#SET(EXE_SUFFIX \"${EXE_SUFFIX}-omp\")\r\n",
        "Line" : 260,
        "CharPositionInLine" : 1
      },
      "34" : {
        "Text" : "# for PThreads headers\r\n",
        "Line" : 268,
        "CharPositionInLine" : 53
      },
      "35" : {
        "Text" : "# for PThreads headers\r\n",
        "Line" : 272,
        "CharPositionInLine" : 54
      },
      "36" : {
        "Text" : "##################################################################\r\n\n# configure SSE/AVX/FMA instructions\r\n\n##################################################################\r\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#set(AVX512_FLAGS \"${AVX512_FLAGS} /arch:AVX512\")\r\n",
        "Line" : 346,
        "CharPositionInLine" : 1
      },
      "38" : {
        "Text" : "# further flag to improve performance\r\n",
        "Line" : 360,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# AVX+FMA instruction set\r\n",
        "Line" : 362,
        "CharPositionInLine" : 32
      },
      "40" : {
        "Text" : "# define both SSE3 and AVX directive\r\n",
        "Line" : 364,
        "CharPositionInLine" : 35
      },
      "41" : {
        "Text" : "#SET(EXE_SUFFIX \"${EXE_SUFFIX}-fma\")\r\n",
        "Line" : 366,
        "CharPositionInLine" : 1
      },
      "42" : {
        "Text" : "# AVX instruction set\r\n",
        "Line" : 367,
        "CharPositionInLine" : 36
      },
      "43" : {
        "Text" : "# define both SSE3 and AVX directive\r\n",
        "Line" : 369,
        "CharPositionInLine" : 35
      },
      "44" : {
        "Text" : "#SET(EXE_SUFFIX \"${EXE_SUFFIX}-avx\")\r\n",
        "Line" : 371,
        "CharPositionInLine" : 1
      },
      "45" : {
        "Text" : "#SSE intruction set\r\n",
        "Line" : 372,
        "CharPositionInLine" : 42
      },
      "46" : {
        "Text" : "#add_definitions(-D__SSE3)\r\n",
        "Line" : 379,
        "CharPositionInLine" : 1
      },
      "47" : {
        "Text" : "#set(COMBINED_FLAGS \"${COMBINED_FLAGS} ${SSE_FLAGS}\")\r\n",
        "Line" : 380,
        "CharPositionInLine" : 4
      },
      "48" : {
        "Text" : "##################################################################\r\n\n# Setup compiler flags\r\n\n##################################################################\r\n",
        "Line" : 384,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "##################################################################\r\n\n# check existence of a few basic functions\r\n\n##################################################################\r\n",
        "Line" : 432,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# configure a header file to pass some of the CMake settings\r\n\n# to the source code\r\n",
        "Line" : 444,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# add the binary tree to the search path for include files\r\n\n# so that we will find iqtree_config.h\r\n",
        "Line" : 451,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "#zlib will be detected for appearance\r\n\n#include_directories(\"${PROJECT_BINARY_DIR}/zlib-1.2.7\")\r\n",
        "Line" : 455,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "##################################################################\r\n\n# subdirectories containing necessary libraries for the build\r\n\n##################################################################\r\n",
        "Line" : 472,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "#add_subdirectory(zlib-1.2.7)\r\n",
        "Line" : 483,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "##################################################################\r\n\n# the main executable\r\n\n##################################################################\r\n",
        "Line" : 498,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "##################################################################\r\n\n# setup linking flags\r\n\n##################################################################\r\n",
        "Line" : 551,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# link special lib for WIN32\r\n",
        "Line" : 555,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "#        set(THREAD_LIB \"ompstatic\")\r\n",
        "Line" : 585,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# basic linking librararies\r\n",
        "Line" : 594,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# MPI libraries\r\n",
        "Line" : 601,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# SSE, AVX etc. libraries\r\n",
        "Line" : 608,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# setup the executable name\r\n\n##################################################################\r\n",
        "Line" : 616,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# strip the release build\r\n",
        "Line" : 620,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# strip is not necessary for MSVC\r\n",
        "Line" : 621,
        "CharPositionInLine" : 113
      },
      "65" : {
        "Text" : "##############################################################\r\n\n# add the install targets\r\n\n##############################################################\r\n",
        "Line" : 643,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "#\t\tinstall(FILES  \"${PROJECT_SOURCE_DIR}/lib/pthreadGC2.dll\" DESTINATION bin)\r\n\n#\t\tinstall(FILES  \"${PROJECT_SOURCE_DIR}/lib/pthreadGC2_64.dll\" DESTINATION bin)\r\n",
        "Line" : 662,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "##############################################################\r\n\n# build a CPack driven installer package\r\n\n##############################################################\r\n",
        "Line" : 676,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "#set(CPACK_SOURCE_PACKAGE_FILE_NAME\r\n\n#  \"${CMAKE_PROJECT_NAME}-${CPACK_PACKAGE_VERSION_MAJOR}.${CPACK_PACKAGE_VERSION_MINOR}\")\r\n",
        "Line" : 693,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "#add_custom_target(dist COMMAND ${CMAKE_MAKE_PROGRAM} package_source)\r\n",
        "Line" : 724,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 70
    },
    "FindEigen3.cmake" : {
      "ObjectId" : "9c546a05d859b18c49554d7ee7221cc486b7760e",
      "LastModified" : "2015-09-30T09:15:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Eigen3 lib\n\n#\n\n# This module supports requiring a minimum version, e.g. you can do\n\n#   find_package(Eigen3 3.1.2)\n\n# to require version 3.1.2 or newer of Eigen3.\n\n#\n\n# Once done this will define\n\n#\n\n#  EIGEN3_FOUND - system has eigen lib with correct version\n\n#  EIGEN3_INCLUDE_DIR - the eigen include directory\n\n#  EIGEN3_VERSION - eigen version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Copyright (c) 2009 Benoit Jacob <jacob.benoit.1@gmail.com>\n\n# Redistribution and use is allowed according to the terms of the 2-clause BSD license.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "alignment/CMakeLists.txt" : {
      "ObjectId" : "2efbfa40c32e5520469cbd0f0583c0af7805d019",
      "LastModified" : "2017-05-08T09:59:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "gsl/CMakeLists.txt" : {
      "ObjectId" : "06a9cef8406b0ede1e2445157566be12bbf84f86",
      "LastModified" : "2017-05-08T09:59:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lbfgsb/CMakeLists.txt" : {
      "ObjectId" : "f6ac99309cedc233380ca629f3c8361c801f56f2",
      "LastModified" : "2017-05-08T09:59:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "model/CMakeLists.txt" : {
      "ObjectId" : "ded00eec0e2b0c5e35c0c062c4be0e17dfabaa0b",
      "LastModified" : "2017-05-08T09:59:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ncl/CMakeLists.txt" : {
      "ObjectId" : "ee601abd32b09c2eb7071270527be5e2c71816fe",
      "LastModified" : "2017-05-08T09:59:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "nclextra/CMakeLists.txt" : {
      "ObjectId" : "df50181f8b0a34c694d92028b419fa6ca1c65f8d",
      "LastModified" : "2017-05-08T09:59:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pda/CMakeLists.txt" : {
      "ObjectId" : "ef60ce29caf04a35479dbd0901661057441a013b",
      "LastModified" : "2017-05-08T09:59:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pll/CMakeLists.txt" : {
      "ObjectId" : "a04837b0e4d1cc9847e86f0a3c8d593ee92d04db",
      "LastModified" : "2017-05-08T09:59:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set( CMAKE_C_FLAGS  \"${CMAKE_C_FLAGS} -Wall -msse3 -DRAXML_USE_LLALLOC -D_USE_PTHREADS -D_OPTIMIZED_FUNCTIONS -D__SIM_SSE3 -fno-builtin\" )\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#add_executable( raxml_light axml.c  optimizeModel.c trash.c searchAlgo.c topologies.c treeIO.c models.c evaluatePartialGenericSpecial.c evaluateGenericSpecial.c newviewGenericSpecial.c makenewzGenericSpecial.c bipartitionList.c restartHashTable.c fastDNAparsimony.c randomTree.c lockless_allocator/ll_alloc.c mem_alloc.c recom.c)\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#target_link_libraries( raxml_light m pthread )\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "sprng/CMakeLists.txt" : {
      "ObjectId" : "8481294d6d98fa925d2226aa985969e902682d61",
      "LastModified" : "2017-05-08T09:59:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tree/CMakeLists.txt" : {
      "ObjectId" : "e87249b92b7b31083c8bd2c77e022dbeb1ac3a10",
      "LastModified" : "2018-09-06T00:04:28Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "utils/CMakeLists.txt" : {
      "ObjectId" : "9029f78335f905e3795b8d511c5ea881a59a242d",
      "LastModified" : "2018-09-06T00:04:28Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vectorclass/CMakeLists.txt" : {
      "ObjectId" : "35d0d314bc96db5d66a4025414f80d4714d620bf",
      "LastModified" : "2017-05-08T09:59:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "whtest/CMakeLists.txt" : {
      "ObjectId" : "4b1992c23111e248e5d89b556794f703792a955d",
      "LastModified" : "2017-05-08T09:59:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#install (TARGETS whtest DESTINATION bin)\n\n#install (FILES  eigen.h  eigen_sym.h  random.h  tools.h  weisslambda_sub.h  whtest.h  whtest_sub.h DESTINATION include)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "zlib-1.2.7/CMakeLists.txt" : {
      "ObjectId" : "526c320404a3d39f2425b7aeb6de7c173cd06f00",
      "LastModified" : "2017-05-08T09:59:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Check to see if we have large file support\n\n#\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We add these other definitions here because CheckTypeSize.cmake\n\n# in CMake 2.4.x does not automatically do so and we want\n\n# compatibility with CMake 2.4.x.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# clear variable\n",
        "Line" : 44,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "#\n\n# Check for fseeko\n\n#\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Check for unistd.h\n\n#\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If we're doing an out of source build and the user has a zconf.h\n\n# in their source tree...\n",
        "Line" : 67,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#============================================================================\n\n# zlib\n\n#============================================================================\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Note from Tung: I add 'NOT CYGWIN' clause to prevent ZLIB to redefine the source folder\n\n# to win32/zlib1.rc if I compile under Cygwin. \n\n# This folder is for visual studio only and Cygwin does not understand it. \n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# If present will override custom build rule below.\n",
        "Line" : 127,
        "CharPositionInLine" : 23
      },
      "9" : {
        "Text" : "# parse the full version number from zlib.h and include in ZLIB_FULL_VERSION\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# This gets us DLL resource information when compiling on MinGW.\n",
        "Line" : 137,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "#add_library(zlib SHARED ${ZLIB_SRCS} ${ZLIB_PUBLIC_HDRS} ${ZLIB_PRIVATE_HDRS})\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#set_target_properties(zlib PROPERTIES DEFINE_SYMBOL ZLIB_DLL)\n\n#set_target_properties(zlib PROPERTIES SOVERSION 1)\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#if(NOT CYGWIN)\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# This property causes shared libraries on Linux to have the full version\n\n# encoded into their final filename.  We disable this on Cygwin because\n\n# it causes cygz-${ZLIB_FULL_VERSION}.dll to be created when cygz.dll\n\n# seems to be the default.\n\n#\n\n# This has no effect with MSVC, on that platform the version info for\n\n# the DLL comes from the resource file win32/zlib1.rc\n\n#set_target_properties(zlib PROPERTIES VERSION ${ZLIB_FULL_VERSION})\n",
        "Line" : 158,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "#endif()\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# On unix-like platforms the library is almost always called libz\n",
        "Line" : 169,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "#set_target_properties(zlib zlibstatic PROPERTIES OUTPUT_NAME z)\n\n#set_target_properties(zlib PROPERTIES LINK_FLAGS \"-Wl,--version-script,${CMAKE_CURRENT_SOURCE_DIR}/zlib.map\")\n",
        "Line" : 171,
        "CharPositionInLine" : 3
      },
      "18" : {
        "Text" : "# Creates zlib1.dll when building shared library version\n\n#set_target_properties(zlib PROPERTIES SUFFIX \"1.dll\")\n",
        "Line" : 174,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "#install(TARGETS zlib zlibstatic\n\n#    RUNTIME DESTINATION \"${INSTALL_BIN_DIR}\"\n\n#    ARCHIVE DESTINATION \"${INSTALL_LIB_DIR}\"\n\n#    LIBRARY DESTINATION \"${INSTALL_LIB_DIR}\" )\n",
        "Line" : 183,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "#if(NOT SKIP_INSTALL_HEADERS AND NOT SKIP_INSTALL_ALL )\n\n#    install(FILES ${ZLIB_PUBLIC_HDRS} DESTINATION \"${INSTALL_INC_DIR}\")\n\n#endif()\n\n#if(NOT SKIP_INSTALL_FILES AND NOT SKIP_INSTALL_ALL )\n\n#    install(FILES zlib.3 DESTINATION \"${INSTALL_MAN_DIR}/man3\")\n\n#endif()\n\n#if(NOT SKIP_INSTALL_FILES AND NOT SKIP_INSTALL_ALL )\n\n#    install(FILES ${ZLIB_PC} DESTINATION \"${INSTALL_PKGCONFIG_DIR}\")\n\n#endif()\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#============================================================================\n\n# Example binaries\n\n#============================================================================\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#add_executable(example test/example.c)\n\n#target_link_libraries(example zlib)\n\n#add_test(example example)\n\n#\n\n#add_executable(minigzip test/minigzip.c)\n\n#target_link_libraries(minigzip zlib)\n\n#\n\n#if(HAVE_OFF64_T)\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#add_executable(example64 test/example.c)\n\n#target_link_libraries(example64 zlib)\n\n#set_target_properties(example64 PROPERTIES COMPILE_FLAGS \"-D_FILE_OFFSET_BITS=64\")\n\n#add_test(example64 example64)\n",
        "Line" : 215,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "#add_executable(minigzip64 test/minigzip.c)\n\n#target_link_libraries(minigzip64 zlib)\n\n#set_target_properties(minigzip64 PROPERTIES COMPILE_FLAGS \"-D_FILE_OFFSET_BITS=64\")\n",
        "Line" : 220,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "#endif()\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 26
    },
    "zlib-1.2.7/Makefile" : {
      "ObjectId" : "6bba86c73fca2abda416baa1a7cf883b3494fb29",
      "LastModified" : "2017-05-08T09:59:27Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "zlib-1.2.7/contrib/blast/Makefile" : {
      "ObjectId" : "9be80bafe050eed57029ef2e690f36677a3003c0",
      "LastModified" : "2017-05-08T09:59:27Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "zlib-1.2.7/contrib/minizip/Makefile" : {
      "ObjectId" : "84eaad20d4fb19b00965268dd75d7e9b66c8cc21",
      "LastModified" : "2017-05-08T09:59:27Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "zlib-1.2.7/contrib/minizip/Makefile.am" : {
      "ObjectId" : "d343011ebc3b3fd78d2bc3a29801a083c038cf0c",
      "LastModified" : "2017-05-08T09:59:27Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "zlib-1.2.7/contrib/puff/Makefile" : {
      "ObjectId" : "0e2594c80885c0dbea13c6d22b2e60e9fb82b51f",
      "LastModified" : "2017-05-08T09:59:27Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# puff full coverage test (should say 100%)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "zlib-1.2.7/contrib/untgz/Makefile" : {
      "ObjectId" : "b54266fba20a167a1d83b7afd503dfd2f849ca57",
      "LastModified" : "2017-05-08T09:59:27Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "zlib-1.2.7/nintendods/Makefile" : {
      "ObjectId" : "21337d01ab2fe20743682125994666e20af6b7e7",
      "LastModified" : "2017-05-08T09:59:27Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# TARGET is the name of the output\n\n# BUILD is the directory where object files & intermediate files will be placed\n\n# SOURCES is a list of directories containing source code\n\n# DATA is a list of directories containing data files\n\n# INCLUDES is a list of directories containing header files\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# options for code generation\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# list of directories containing libraries, this must be the top level containing\n\n# include and lib\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# no real need to edit anything past this point unless you need to add additional\n\n# rules for different file extensions\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# use CXX for linking C++ projects, CC for standard C\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# main targets\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#---------------------------------------------------------------------------------------\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#---------------------------------------------------------------------------------------\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    }
  },
  "FileTypes" : {
    "CMAKE" : 16,
    "MAKEFILE" : 6,
    "AUTOMAKE" : 1
  },
  "ElapsedTime" : 1513
}