{
  "Repository" : "10520341",
  "Revision" : "HEAD",
  "ObjectId" : "bce89ed8ae7a6d10295b632892cf09aaf01729aa",
  "CommitTime" : "2019-01-15T21:25:00Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "617e4e2295cf7b03713d278b8e5967c6efe4fc8f",
      "LastModified" : "2019-01-14T19:05:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#       _________ __                 __\n\n#      /   _____//  |_____________ _/  |______     ____  __ __  ______\n\n#      \\_____  \\\\   __\\_  __ \\__  \\\\   __\\__  \\   / ___\\|  |  \\/  ___/\n\n#      /        \\|  |  |  | \\// __ \\|  |  / __ \\_/ /_/  >  |  /\\___ |\n\n#     /_______  /|__|  |__|  (____  /__| (____  /\\___  /|____//____  >\n\n#             \\/                  \\/          \\//_____/            \\/\n\n#  ______________________                           ______________________\n\n#                        T H E   W A R   B E G I N S\n\n#         Stratagus - A free fantasy real time strategy game engine\n\n#\n\n#    CMakeLists.txt\n\n#    Copyright (C) 2011-2019  Pali Roh√°r <pali.rohar@gmail.com>, cybermind <cybermindid@gmail.com> and Andrettin\n\n#\n\n#    This program is free software: you can redistribute it and/or modify\n\n#    it under the terms of the GNU General Public License as published by\n\n#    the Free Software Foundation, either version 2 of the License, or\n\n#    (at your option) any later version.\n\n#\n\n#    This program is distributed in the hope that it will be useful,\n\n#    but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n#    GNU General Public License for more details.\n\n#\n\n#    You should have received a copy of the GNU General Public License\n\n#    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#########################\n\n# Version configuration #\n\n#########################\n\n# Stratagus major version\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Stratagus minor version (maximum 99)\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Stratagus patch level (maximum 99)\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Stratagus patch level 2\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#########################\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Stratagus sources\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#Wyrmgus start\n",
        "Line" : 78,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "#Wyrmgus end\n",
        "Line" : 80,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "#\tsrc/guichan/opengl/opengl.cpp\n\n#\tsrc/guichan/opengl/openglgraphics.cpp\n\n#\tsrc/guichan/opengl/openglimageloader.cpp\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#Wyrmgus start\n",
        "Line" : 432,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "#Wyrmgus end\n",
        "Line" : 434,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "#Wyrmgus start\n",
        "Line" : 544,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "#Wyrmgus end\n",
        "Line" : 546,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# Configuration types\n",
        "Line" : 761,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Additional platform checks\n",
        "Line" : 764,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# use a default\n",
        "Line" : 775,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "# Find all libraries\n",
        "Line" : 779,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Windows RC compiler definitions\n",
        "Line" : 828,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Options for compiling\n",
        "Line" : 840,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Install paths\n",
        "Line" : 880,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Stratagus definitions\n",
        "Line" : 895,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Build embedded copy statically\n",
        "Line" : 962,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Readd '_d' suffix if added in the OAML build system (GH-85)\n",
        "Line" : 980,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Platform definitions\n",
        "Line" : 1029,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Stratagus needs to have char by default signed\n\n# No idea how to tell this to other compilers\n",
        "Line" : 1063,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# TODO: Add support for other compilers\n",
        "Line" : 1071,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#Wyrmgus start\n",
        "Line" : 1073,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# C++11 compilation flag is activated by default\n\n# Optimisation flags can be added if deemed useful\n",
        "Line" : 1077,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# MinGW supports CXX11 flag but do not compile with it. However, it works with gnu++11\n",
        "Line" : 1083,
        "CharPositionInLine" : 8
      },
      "30" : {
        "Text" : "#Wyrmgus end\n",
        "Line" : 1093,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# mingw-w64 does not have strcat_s in any include file, but function symbol in library exists\n\n# so rather check if we have strcat_s in string.h file\n",
        "Line" : 1102,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# TODO: Add support for other compilers\n",
        "Line" : 1142,
        "CharPositionInLine" : 1
      },
      "33" : {
        "Text" : "# Print compile info\n",
        "Line" : 1160,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Compile Stratagus\n",
        "Line" : 1295,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "########### next target ###############\n",
        "Line" : 1325,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "########### next target ###############\n",
        "Line" : 1366,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "########### next target ###############\n",
        "Line" : 1374,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "########### next target ###############\n",
        "Line" : 1400,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "########### next target ###############\n",
        "Line" : 1421,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# also ship lua51.dll\n",
        "Line" : 1431,
        "CharPositionInLine" : 1
      },
      "41" : {
        "Text" : "# ship SDL.dll\n",
        "Line" : 1435,
        "CharPositionInLine" : 1
      },
      "42" : {
        "Text" : "########### install files ###############\n",
        "Line" : 1448,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "########### clean files ###############\n",
        "Line" : 1478,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 44
    },
    "cmake/modules/FindFluidSynth.cmake" : {
      "ObjectId" : "d2cb859f3146580f481d5eae473e30d5f24b33fd",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the FluidSynth library\n\n# Once done this will define\n\n#\n\n#  FLUIDSYNTH_FOUND - system has FluidSynth\n\n#  FLUIDSYNTH_INCLUDE_DIR - the FLUIDSYNTH include directory\n\n#  FLUIDSYNTH_LIBRARY - The FLUIDSYNTH library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2014, cybermind <cybermindid@gmail.com>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindLua51.cmake" : {
      "ObjectId" : "38aa3ef51f4a7ef2cce10fcadee8ca52b532d9fa",
      "LastModified" : "2015-05-19T15:37:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindLua51\n\n# ---------\n\n#\n\n#\n\n#\n\n# Locate Lua library This module defines\n\n#\n\n# ::\n\n#\n\n#   LUA51_FOUND, if false, do not try to link to Lua\n\n#   LUA_LIBRARIES\n\n#   LUA_INCLUDE_DIR, where to find lua.h\n\n#   LUA_VERSION_STRING, the version of Lua found (since CMake 2.8.8)\n\n#\n\n#\n\n#\n\n# Note that the expected include convention is\n\n#\n\n# ::\n\n#\n\n#   #include \"lua.h\"\n\n#\n\n# and not\n\n#\n\n# ::\n\n#\n\n#   #include <lua/lua.h>\n\n#\n\n# This is because, the lua location is not standardized and may exist in\n\n# locations other than lua/\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2007-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fink\n",
        "Line" : 53,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 54,
        "CharPositionInLine" : 13
      },
      "4" : {
        "Text" : "# Blastwave\n",
        "Line" : 55,
        "CharPositionInLine" : 11
      },
      "5" : {
        "Text" : "# include the math library for Unix\n",
        "Line" : 74,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# For Windows and Mac, don't need to explicitly include the math library\n",
        "Line" : 78,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LUA_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake/modules/FindMNG.cmake" : {
      "ObjectId" : "3bbd7a843b1fe53c7c2d77d9bfb9dc2ef27a72cb",
      "LastModified" : "2016-05-23T12:24:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the MNG library\n\n# Once done this will define\n\n#\n\n#  MNG_FOUND - system has Mikmod\n\n#  MNG_INCLUDE_DIR - the Mikmod include directory\n\n#  MNG_LIBRARY - The Mikmod library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2011, Pali Roh√°r <pali.rohar@gmail.com>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindMakeNSIS.cmake" : {
      "ObjectId" : "ffa1e5a72224bead9d1cc469388f2b1fd1918a3f",
      "LastModified" : "2016-05-23T12:24:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the MakeNSIS\n\n# Once done this will define\n\n#\n\n#  MAKENSIS_FOUND - system has MakeNSIS\n\n#  MAKENSIS - the MakeNSIS program\n\n#  MAKENSIS_FLAGS - the MakeNSIS flags\n\n#  MAKENSIS_SUFFIX - the MakeNSIS output file suffix\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2011, Pali Roh√°r <pali.rohar@gmail.com>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\t\tmessage(FATAL_ERROR \"Could not find program MakeNSIS\") # TODO: This fail if REQUIRED is not used too!\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/modules/FindMikmod.cmake" : {
      "ObjectId" : "12c46325c921156e4a9526f5551b3c62da8db233",
      "LastModified" : "2015-05-19T15:37:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the Mikmod library\n\n# Once done this will define\n\n#\n\n#  MIKMOD_FOUND - system has Mikmod\n\n#  MIKMOD_INCLUDE_DIR - the Mikmod include directory\n\n#  MIKMOD_LIBRARY - The Mikmod library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2011, Pali Roh√°r <pali.rohar@gmail.com>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindOAML.cmake" : {
      "ObjectId" : "21d06ce72f0ef8576387ada588eb88d362876d29",
      "LastModified" : "2017-04-09T17:36:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindOAML\n\n# -------\n\n#\n\n# Find the native OAML includes and library\n\n#\n\n# It defines the following variables\n\n#\n\n# ``OAML_INCLUDE_DIRS``\n\n#   where to find oaml.h\n\n# ``OAML_LIBRARIES_SHARED``\n\n#   the libraries to link against to use OAML.\n\n# ``OAML_LIBRARIES_STATIC``\n\n#   the libraries to link against to use OAML.\n\n# ``OAML_FOUND``\n\n#   If false, do not try to use OAML.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Shared library named changed right after v1.2\n",
        "Line" : 28,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Shared library named changed right after v1.2\n",
        "Line" : 34,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 3
    },
    "cmake/modules/FindOggVorbis.cmake" : {
      "ObjectId" : "6ce106ba4356ad53619240dba23af55fdb430bde",
      "LastModified" : "2016-05-23T12:24:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the OggVorbis libraries\n\n# Once done this will define\n\n#\n\n#  OGGVORBIS_FOUND - system has OggVorbis\n\n#  OGGVORBIS_VERSION - set either to 1 or 2\n\n#  OGGVORBIS_INCLUDE_DIR - the OggVorbis include directory\n\n#  OGGVORBIS_LIBRARIES - The libraries needed to use OggVorbis\n\n#  OGG_LIBRARY         - The Ogg library\n\n#  VORBIS_LIBRARY      - The Vorbis library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, Richard Laerkaeng, <richard@goteborg.utfors.se>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#check_include_files(vorbis/vorbisfile.h HAVE_VORBISFILE_H)\n\n#check_library_exists(ogg ogg_page_version \"\" HAVE_LIBOGG)\n\n#check_library_exists(vorbis vorbis_info_init \"\" HAVE_LIBVORBIS)\n\n#check_library_exists(vorbisfile ov_open \"\" HAVE_LIBVORBISFILE)\n\n#check_library_exists(vorbisenc vorbis_info_clear \"\" HAVE_LIBVORBISENC)\n\n#check_library_exists(vorbis vorbis_bitrate_addblock \"\" HAVE_LIBVORBISENC2)\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#if (HAVE_LIBOGG AND HAVE_VORBISFILE_H AND HAVE_LIBVORBIS AND HAVE_LIBVORBISFILE AND HAVE_LIBVORBISENC)\n\n#    message(STATUS \"Ogg/Vorbis found\")\n\n#    set (VORBIS_LIBS \"-lvorbis -logg\")\n\n#    set (VORBISFILE_LIBS \"-lvorbisfile\")\n\n#    set (VORBISENC_LIBS \"-lvorbisenc\")\n\n#    set (OGGVORBIS_FOUND TRUE)\n\n#    if (HAVE_LIBVORBISENC2)\n\n#        set (HAVE_VORBIS 2)\n\n#    else (HAVE_LIBVORBISENC2)\n\n#        set (HAVE_VORBIS 1)\n\n#    endif (HAVE_LIBVORBISENC2)\n\n#else (HAVE_LIBOGG AND HAVE_VORBISFILE_H AND HAVE_LIBVORBIS AND HAVE_LIBVORBISFILE AND HAVE_LIBVORBISENC)\n\n#    message(STATUS \"Ogg/Vorbis not found\")\n\n#endif (HAVE_LIBOGG AND HAVE_VORBISFILE_H AND HAVE_LIBVORBIS AND HAVE_LIBVORBISFILE AND HAVE_LIBVORBISENC)\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/modules/FindOpenGLES.cmake" : {
      "ObjectId" : "b9f4ff216a65eba8c35ae7b28dea651d8aceac0e",
      "LastModified" : "2015-05-19T15:37:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2011, Pali Roh√°r <pali.rohar@gmail.com>\n\n#  Modified:\n\n#   * Search for EGL library\n\n#   * Show staus message\n\n#   * Cleaned code\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# - Try to find OpenGLES\n\n# Once done this will define\n\n#  \n\n#  OPENGLES_FOUND        - system has OpenGLES\n\n#  OPENGLES_INCLUDE_DIR  - the GL include directory\n\n#  OPENGLES_LIBRARIES    - Link these to use OpenGLES\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TODO: EGL\n",
        "Line" : 35,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# MS compiler - todo - fix the following line:\n",
        "Line" : 37,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "# TODO: EGL\n",
        "Line" : 39,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "# TODO: EGL\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# TODO: EGL\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# On Unix OpenGL most certainly always requires X11.\n\n# Feel free to tighten up these conditions if you don't \n\n# think this is always true.\n",
        "Line" : 81,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 9
    },
    "cmake/modules/FindSDL_gles.cmake" : {
      "ObjectId" : "21387bd166ef309d5a434b99195d93495c39a9f4",
      "LastModified" : "2016-05-23T12:24:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to detect some SDL gles support\n\n# Once done this will define\n\n#\n\n#  SDLGLES_FOUND - system has gles support in SDL\n\n#  SDLGLES_TYPE - Native or EGL\n\n#  SDLGLES_INCLUDE_DIR - include directory for SDL gles (can be empty)\n\n#  SDLGLES_LIBRARY - library for SDL gles (can be empty)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Types:\n\n#  Native - support is in SDL, program only needs to add SDL_OPENGLES flag to SDL_SetVideoMode\n\n#  EGL - support using directly EGL library, see http://pandorawiki.org/Combining_OpenGL_ES_1.1_and_SDL_to_create_a_window_on_the_Pandora\n\n#        program needs to initialize EGL and GLES manually\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Copyright (c) 2011-2013, Pali Roh√°r <pali.rohar@gmail.com>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Check for Native support\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Check for EGL support\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "cmake/modules/FindSqlite.cmake" : {
      "ObjectId" : "2fa763301be04e444551c2bf59ee961f72c9b346",
      "LastModified" : "2015-05-19T15:37:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Sqlite\n\n# Once done this will define\n\n#\n\n#  SQLITE_FOUND - system has Sqlite\n\n#  SQLITE_INCLUDE_DIR - the Sqlite include directory\n\n#  SQLITE_LIBRARIES - Link these to use Sqlite\n\n#  SQLITE_DEFINITIONS - Compiler switches required for using Sqlite\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2008, Gilles Caulier, <caulier.gilles@gmail.com>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 19,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# show the SQLITE_INCLUDE_DIR and SQLITE_LIBRARIES variables only in the advanced view\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/modules/FindStackTrace.cmake" : {
      "ObjectId" : "55b822e8ee4d041eb08d3a6965595f5702753b79",
      "LastModified" : "2015-05-19T15:37:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the StackTrace library\n\n# Once done this will define\n\n#\n\n#  STACKTRACE_FOUND - system has StackTrace\n\n#  STACKTRACE_PROJECT_DIR - the StackTrace project directory\n\n#  STACKTRACE_LIBRARY - The StackTrace library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2015, cybermind <cybermindid@gmail.com>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindTheora.cmake" : {
      "ObjectId" : "18eb65dba41fd9f04fa7e50109e84eae06a824fe",
      "LastModified" : "2016-05-23T12:24:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Option for build or not Theora\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006,2007 Laurent Montel, <montel@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 10,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 3
    },
    "cmake/modules/FindTolua++.cmake" : {
      "ObjectId" : "413fff499f718fef7492a9e3995bd2506e483d9e",
      "LastModified" : "2016-05-23T12:24:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the tolua++\n\n# Once done this will define\n\n#\n\n#  TOLUA++_FOUND - system has tolua++\n\n#  TOLUA++_APP - the tolua++ program\n\n#  TOLUA++_INLUDE_DIR - the tolua++ include directory\n\n#  TOLUA++_LIBRARY - the tolua++ library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2011, Pali Roh√°r <pali.rohar@gmail.com>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindVorbisFile.cmake" : {
      "ObjectId" : "4102c0a6cc383e091b00ae9241ddbe9c2f59d404",
      "LastModified" : "2016-05-23T12:24:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate VorbisFile\n\n# This module defines\n\n# VORBISFILE_LIBRARIES\n\n# VORBISFILE_FOUND, if false, do not try to link to VorbisFile\n\n# VORBISFILE_INCLUDE_DIRS, where to find the headers\n\n#\n\n# $VORBISDIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$VORBISDIR\n\n# used in building Vorbis.\n\n#\n\n# Created by Sukender (Benoit Neil). Based on FindOpenAL.cmake module.\n\n# TODO Add hints for linux and Mac\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Fink\n",
        "Line" : 25,
        "CharPositionInLine" : 5
      },
      "2" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 26,
        "CharPositionInLine" : 12
      },
      "3" : {
        "Text" : "# Blastwave\n",
        "Line" : 27,
        "CharPositionInLine" : 10
      },
      "CommentCount" : 4
    }
  },
  "FileTypes" : {
    "CMAKE" : 15
  },
  "ElapsedTime" : 2538
}