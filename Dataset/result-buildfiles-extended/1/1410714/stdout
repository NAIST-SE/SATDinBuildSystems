{
  "Repository" : "1410714",
  "Revision" : "HEAD",
  "ObjectId" : "6b8a65dc711013ff00543222ddf3ed99d9734ab8",
  "CommitTime" : "2019-03-01T12:38:06Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "df76546720bc7e984d4227219eb0bdb5b18ec1ff",
      "LastModified" : "2018-05-08T08:49:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# visibility. since 3.3\n",
        "Line" : 14,
        "CharPositionInLine" : 19
      },
      "1" : {
        "Text" : "#use with -fdata-sections -ffunction-sections to reduce target size\n",
        "Line" : 20,
        "CharPositionInLine" : 40
      },
      "2" : {
        "Text" : "# visibility. since 3.3\n",
        "Line" : 63,
        "CharPositionInLine" : 19
      },
      "3" : {
        "Text" : "#use with -fdata-sections -ffunction-sections to reduce target size\n",
        "Line" : 66,
        "CharPositionInLine" : 40
      },
      "4" : {
        "Text" : "# Find includes in corresponding build directories\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# for .moc\n",
        "Line" : 70,
        "CharPositionInLine" : 34
      },
      "6" : {
        "Text" : "# Instruct CMake to run moc automatically when needed.\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#set(CMAKE_DEBUG_POSTFIX d)\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "QtAV.pro" : {
      "ObjectId" : "8da5e56d31cb48c00e672797d9181f581d806799",
      "LastModified" : "2016-04-10T10:59:57Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#TODO: enable widgets based examples\n",
        "Line" : 11,
        "CharPositionInLine" : 37
      },
      "1" : {
        "Text" : "# qtHaveModule does not exist in Qt5.0\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#OTHER_FILES += config.test/mktest.sh\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# QtOpenGL module. In Qt5 we can disable it and still have opengl support\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## sse2 sse4_1 may be defined in Qt5 qmodule.pri but is not included. Qt4 defines sse and sse2\n\n#configure.prf always use simulator\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# no-xxx can set in $$PWD/user.conf\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#FIXME: ios openal header not found in qtCompileTest but fine if manually make\n",
        "Line" : 55,
        "CharPositionInLine" : 48
      },
      "7" : {
        "Text" : "#packageSet($$QTAV_VERSION, QtAV)\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake/FindQtAV.cmake" : {
      "ObjectId" : "0c4f3a5b5f5820fa75535ffad52024091bfe98c4",
      "LastModified" : "2017-03-10T15:24:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the QtAV library\n\n#\n\n# Once done this will define\n\n#\n\n#  QTAV_FOUND        - system has libqtav\n\n#  QTAV_INCLUDE_DIRS - the libqtav include directory\n\n#  QTAV_LIBRARIES    - Link these to use libqtav\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "common.pri" : {
      "ObjectId" : "cc509ad6f05cba13f3fc305bfca0d83e5a2bedd9",
      "LastModified" : "2017-06-21T01:47:15Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# qmake common template pri file\n\n# Copyright (C) 2011-2016 Wang Bin <wbsecg1@gmail.com>\n\n# Shanghai, China.\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 2 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You should have received a copy of the GNU General Public License along\n\n# with this program; if not, write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\n#\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#begin COMMON_PRI_INCLUDED\n",
        "Line" : 20,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "#why android is empty?\n",
        "Line" : 27,
        "CharPositionInLine" : 37
      },
      "4" : {
        "Text" : "#profiling, -pg is not supported for msvc\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#$$[TARGET_PLATFORM]\n\n#$$[QT_ARCH] #windows symbian windowsce arm\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# QMAKE_RPATHDIR will be ignored if QMAKE_LFLAGS_RPATH is not defined. e.g. qt4.8 unsupported/macx-clang-libc++\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#true for wince\n",
        "Line" : 72,
        "CharPositionInLine" : 15
      },
      "8" : {
        "Text" : "#*arm*: _ARCH = $${_ARCH}_arm\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#*msvc*:\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#Don't warn about sprintf, fopen etc being 'unsafe'\n",
        "Line" : 84,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "#################################functions#########################################\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#e.g. qtAtLeast(4), qtAtLeast(5, 2), qtAtLeast(5, 4, 2)\n",
        "Line" : 89,
        "CharPositionInLine" : 24
      },
      "13" : {
        "Text" : "#win32 always call windows command\n",
        "Line" : 103,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "#system always call win32 cmd\n",
        "Line" : 105,
        "CharPositionInLine" : 45
      },
      "15" : {
        "Text" : "#Acts like qtLibraryTarget. From qtcreator.pri\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#TEMPLATE += fakelib\n\n#LIB_FULLNAME = $$qtLibraryTarget($$1)\n\n#TEMPLATE -= fakelib\n",
        "Line" : 129,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "#qt5.4.2 add qt5LibraryTarget to fix qtLibraryTarget break\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# insert the major version of Qt in the library name\n\n# unless it's a framework build\n",
        "Line" : 140,
        "CharPositionInLine" : 11
      },
      "19" : {
        "Text" : "#isEqual(VERSION_EXT, 0):unset(VERSION_EXT)\n",
        "Line" : 152,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "#fakelib\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# static lib does not have major version flag at the end\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#default_post.prf\n",
        "Line" : 174,
        "CharPositionInLine" : 97
      },
      "23" : {
        "Text" : "#\"type NUL >filename\" can create an empty file in windows, see http://stackoverflow.com/questions/210201/how-to-create-empty-text-file-from-a-batch-file\n\n# 'echo. >file' or 'echo >file' will insert a new line, so use stderr\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#if sh is after win's echo, then \"echo >$$1\" fails because win's echo is used\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#TODO: QMAKE_CFLAGS_XXX, QT_CPU_FEATURES\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#mac, linux\n",
        "Line" : 202,
        "CharPositionInLine" : 15
      },
      "27" : {
        "Text" : "# all x64 processors supports sse2. unknown option for vc\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#!isEqual(QT_ARCH, x86_64)|!x86_64 {\n",
        "Line" : 207,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "#}\n",
        "Line" : 210,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "#mac: simd will load qt_build_config and the result is soname will prefixed with QT_INSTALL_LIBS and link flag will append soname after QMAKE_LFLAGS_SONAME\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#from qt5 simd.prf\n",
        "Line" : 217,
        "CharPositionInLine" : 30
      },
      "32" : {
        "Text" : "# config_$$1 is defined by config.tests (tests/arch)\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Default compiler settings include this feature, so just add to SOURCES\n",
        "Line" : 227,
        "CharPositionInLine" : 12
      },
      "34" : {
        "Text" : "#qt4 always need eval() if var is not const\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# We need special compiler flags\n",
        "Line" : 232,
        "CharPositionInLine" : 12
      },
      "36" : {
        "Text" : "# We always need an assembler (need to run the C compiler and without precompiled headers)\n",
        "Line" : 253,
        "CharPositionInLine" : 8
      },
      "37" : {
        "Text" : "# Don't know how to run MSVC's assembler...\n",
        "Line" : 255,
        "CharPositionInLine" : 12
      },
      "38" : {
        "Text" : "# This is just for the IDE\n",
        "Line" : 258,
        "CharPositionInLine" : 12
      },
      "39" : {
        "Text" : "#config_simd\n",
        "Line" : 297,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "##TODO: add defineReplace(getValue): parameter is varname\n",
        "Line" : 299,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "#log(\"write_file($$1, $$2, $$3)\")\n",
        "Line" : 311,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "##TODO: 1.how to replace old value\n",
        "Line" : 313,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "##getting the ref value requires a function whose parameter has var name and return a string. join() is the only function\n\n## var name is $$2.\n\n## echo a string with \"\\n\" will fail, so we can not use join\n",
        "Line" : 314,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "#val = $$join($$2, $$escape_expand(\\\\n))$$escape_expand(\\\\n)\n",
        "Line" : 317,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "#system(\"$$QMAKE_DEL_FILE $$1\") #for win commad \"del\", path format used in qmake such as D:/myfile is not supported, \"/\" will be treated as an otpion for \"del\"\n",
        "Line" : 319,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#defineTest(cache) {\n\n#    !isEmpty(4): error(\"cache(var, [set|add|sub] [transient] [super], [srcvar]) requires one to three arguments.\")\n\n#}\n",
        "Line" : 328,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#make sure BUILD_DIR and SOURCE_ROOT is already defined. otherwise return the input path\n\n#only operate on string, seperator is always \"/\"\n",
        "Line" : 345,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# QMAKE_DIR_SEP: \\ for win cmd and / for sh\n",
        "Line" : 356,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Chars that should be quoted (TM).\n\n# - control chars & space\n\n# - the windows shell meta chars \"&()<>^|\n\n# - the potential separators ,;=\n\n#TODO: how to deal with  \"^\", \"|\"? every char are separated by \"|\"?\n\n#how to avoid replacing \"^\" again for the second time\n",
        "Line" : 363,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "#for qmake \\\\\n    #1 ~= s,\\\\),^\\),g\n",
        "Line" : 374,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "#1 ~= s,\\\\(,^\\(,g\n",
        "Line" : 376,
        "CharPositionInLine" : 4
      },
      "52" : {
        "Text" : "# - unix shell:  0-32 \\'\"$`<>|;&(){}*?#!~[]\n\n#TODO: how to deal with \"#\" \"|\" and \"^\"?\n\n#how to avoid replacing \"^\" again for the second time\n\n# \\$ is eol\n",
        "Line" : 381,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "##TODO: see qmake/library/ioutils.cpp\n",
        "Line" : 391,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "##TODO: see qmake/library/ioutils.cpp\n",
        "Line" : 397,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "#qmake \\\\=>put \\\\=>real \\?\n",
        "Line" : 406,
        "CharPositionInLine" : 22
      },
      "56" : {
        "Text" : "##why is \\\\\\\\. real \\=>we read \\\\=>qmake \\\\\\\\?\n",
        "Line" : 408,
        "CharPositionInLine" : 25
      },
      "57" : {
        "Text" : "#lessThan(QT_MAJOR_VERSION, 5)\n",
        "Line" : 412,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# set default rpath and add user defined rpaths\n",
        "Line" : 414,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "#see doc\n",
        "Line" : 417,
        "CharPositionInLine" : 20
      },
      "60" : {
        "Text" : "# $$[QT_INSTALL_LIBS] and $$DESTDIR and pro dir will be auto added to QMAKE_RPATHDIR if QMAKE_RPATHDIR is not empty\n\n# Current (sub)project dir is auto added to the first value as prefix. e.g. QMAKE_RPATHDIR = .. ==> -Wl,-rpath,ROOT/..\n\n# Executable dir search: ld -z origin, g++ -Wl,-R,'$ORIGIN', in makefile -Wl,-R,'$$ORIGIN'\n\n# Working dir search: \".\"\n\n# mac: install_name @rpath will search paths set in rpath link flags\n\n# QMAKE_RPATHDIR: lflags maybe wrong, paths are modified\n",
        "Line" : 419,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "#!cross_compile: RPATHDIR *= $$PROJECT_LIBDIR\n",
        "Line" : 425,
        "CharPositionInLine" : 2
      },
      "62" : {
        "Text" : "# $$PROJECT_LIBDIR only for host == target. But QMAKE_TARGET.arch is only available on windows. QT_ARCH is bad, e.g. QT_ARCH=i386 while QMAKE_HOST.arch=i686\n\n# https://bugreports.qt-project.org/browse/QTBUG-30263\n",
        "Line" : 431,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "#\\'-Wl,-rpath,$$join(RPATHDIR, \":\")\\'\n",
        "Line" : 433,
        "CharPositionInLine" : 34
      },
      "64" : {
        "Text" : "#  QMAKE_RPATHDIR *= $$RPATHDIR\n\n#export(QMAKE_RPATHDIR)\n",
        "Line" : 438,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "#argument 1 is default dir if not defined\n",
        "Line" : 445,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "#build_cache = $$PROJECTROOT/.build.cache #use root project's cache for subdir projects\n\n#!exists($$build_cache):build_cache = $$PWD/.build.cache #common.pri is in the root dir of a sub project\n\n#exists($$build_cache):include($$build_cache)\n",
        "Line" : 451,
        "CharPositionInLine" : 12
      },
      "67" : {
        "Text" : "#message(BUILD_DIR=$$BUILD_DIR)\n",
        "Line" : 468,
        "CharPositionInLine" : 4
      },
      "68" : {
        "Text" : "##############################paths####################################\n\n#for Qt2, Qt3 which does not have QT_VERSION. Qt4: $$[QT_VERSION]\n",
        "Line" : 472,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "#obj is platform dependent\n",
        "Line" : 479,
        "CharPositionInLine" : 4
      },
      "70" : {
        "Text" : "#before target name changed\n",
        "Line" : 481,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "#\tTARGET = $$qtLongName($$TARGET)\n",
        "Line" : 484,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "#.exe in win\n",
        "Line" : 487,
        "CharPositionInLine" : 143
      },
      "73" : {
        "Text" : "#export vars outside this function\n",
        "Line" : 496,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "#export(TARGET)\n",
        "Line" : 502,
        "CharPositionInLine" : 4
      },
      "75" : {
        "Text" : "#end COMMON_PRI_INCLUDED\n",
        "Line" : 507,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 76
    },
    "config.tests/avcodec/avcodec.pro" : {
      "ObjectId" : "224310a6bd28603a2433f70ff4fb3541167d30a5",
      "LastModified" : "2014-06-19T14:06:43Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#link FFmpeg and portaudio which are built by gcc need /SAFESEH:NO\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "config.tests/avdevice/avdevice.pro" : {
      "ObjectId" : "4842447d9cf6041af5d3a482abc438fbf43f34ca",
      "LastModified" : "2014-10-13T06:40:57Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#link FFmpeg and portaudio which are built by gcc need /SAFESEH:NO\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "config.tests/avfilter/avfilter.pro" : {
      "ObjectId" : "768c77df7ad2c3ab399b8394699115a7008651a0",
      "LastModified" : "2014-10-13T06:40:57Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#link FFmpeg and portaudio which are built by gcc need /SAFESEH:NO\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "config.tests/avformat/avformat.pro" : {
      "ObjectId" : "46a60e8c16b5951559d305a397109eadd77bd4ac",
      "LastModified" : "2014-10-13T06:40:57Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#link FFmpeg and portaudio which are built by gcc need /SAFESEH:NO\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "config.tests/avresample/avresample.pro" : {
      "ObjectId" : "56970b2820e6b91a38e1607a7f1abad13cba4f5e",
      "LastModified" : "2014-10-13T06:40:57Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#link FFmpeg and portaudio which are built by gcc need /SAFESEH:NO\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "config.tests/avutil/avutil.pro" : {
      "ObjectId" : "0aefc1f45c4dfde041baabe8594af439b02d65bc",
      "LastModified" : "2014-10-13T06:40:57Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#link FFmpeg and portaudio which are built by gcc need /SAFESEH:NO\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "config.tests/d3d11va/d3d11va.pro" : {
      "ObjectId" : "021f524f4c1a4952f99f44c20c43128490149c41",
      "LastModified" : "2016-04-10T10:59:57Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "config.tests/direct2d/direct2d.pro" : {
      "ObjectId" : "8ea68cf5036f02673ac16f368a09ffe37faeb740",
      "LastModified" : "2016-04-10T10:59:57Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#dynamic load\n\n#LIBS += -ld2d1\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "config.tests/dsound/dsound.pro" : {
      "ObjectId" : "f67465cbfc253a1ea158b458ee024f08eb438d68",
      "LastModified" : "2016-04-10T10:59:57Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "config.tests/dx/dx.pro" : {
      "ObjectId" : "8467859c4c197fd0c5b009d00edccfe60e096506",
      "LastModified" : "2016-04-10T10:59:57Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "config.tests/dxva/dxva.pro" : {
      "ObjectId" : "a3a618f9548b6895b724b22196ac500e740d2e6b",
      "LastModified" : "2016-04-10T10:59:57Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "config.tests/gdiplus/gdiplus.pro" : {
      "ObjectId" : "2c050be01ad968c0bf2bbeb31fcb9700b6ca8785",
      "LastModified" : "2016-04-10T10:59:57Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "config.tests/gl/gl.pro" : {
      "ObjectId" : "e084b4d9721acfff66dcaef03673641d39124809",
      "LastModified" : "2016-04-10T10:59:57Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "config.tests/libass/libass.pro" : {
      "ObjectId" : "f1e021d77e1f412596f57ceec274f3220508ccc5",
      "LastModified" : "2016-04-10T10:59:57Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "config.tests/libcedarv/libcedardrv.pro" : {
      "ObjectId" : "90217e09450443cfc39156ffe9f975b7fabd2061",
      "LastModified" : "2016-04-10T10:59:57Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "config.tests/openal/openal.pro" : {
      "ObjectId" : "80fb5993777111bbe5b03749667cb922e138eb11",
      "LastModified" : "2016-04-10T10:59:57Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "config.tests/paths.pri" : {
      "ObjectId" : "84d01c7f64f41fdc0f167e76f53fe81a7804285c",
      "LastModified" : "2016-04-10T10:59:57Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# can not create exe for some platforms (winrt, ios). If check header only, staticlib is fine\n",
        "Line" : 1,
        "CharPositionInLine" : 15
      },
      "1" : {
        "Text" : "# not static lib because sometimes we need to check link flags. if qt is static build, this chek may fail. we don't test link for static build because it's impossible to add all dependencies to link flags\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "config.tests/portaudio/portaudio.pro" : {
      "ObjectId" : "93ec20af8e7f20820919fecafe3952dd76246ee3",
      "LastModified" : "2016-04-10T10:59:57Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#link FFmpeg and portaudio which are built by gcc need /SAFESEH:NO\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "config.tests/pulseaudio/pulseaudio.pro" : {
      "ObjectId" : "c39846d7e69cacbce1a3f03835cb98295eec2e67",
      "LastModified" : "2016-04-10T10:59:57Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "config.tests/sse4_1/sse4_1.pro" : {
      "ObjectId" : "73432bc8d43ba9666b3d889a156ae56a3df26d42",
      "LastModified" : "2016-04-10T10:59:57Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#SSE4_1_SOURCES = sse4_1.cpp\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# for Qt4. we can only detect sse2 in Qt4\n\n#qt5 only has gcc, qcc, vc, linux icc.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#mac, linux\n",
        "Line" : 10,
        "CharPositionInLine" : 15
      },
      "CommentCount" : 3
    },
    "config.tests/swresample/swresample.pro" : {
      "ObjectId" : "44cff63e7b2799eeb446f12b83dba6481534adc3",
      "LastModified" : "2016-04-10T10:59:57Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#link FFmpeg and portaudio which are built by gcc need /SAFESEH:NO\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "config.tests/swscale/swscale.pro" : {
      "ObjectId" : "1fd7b28581162e6c86bdf05eedf125ca9eaa9961",
      "LastModified" : "2016-04-10T10:59:57Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#link FFmpeg and portaudio which are built by gcc need /SAFESEH:NO\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "config.tests/uchardet/uchardet.pro" : {
      "ObjectId" : "174b749a20ee81f185ec54f6bd9b89c44cb7c825",
      "LastModified" : "2016-04-10T10:59:57Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "config.tests/vaapi/vaapi.pro" : {
      "ObjectId" : "3b7e02233a1f688ea3fa1296b0fb3648af5840e6",
      "LastModified" : "2016-04-10T10:59:57Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "config.tests/videotoolbox/videotoolbox.pro" : {
      "ObjectId" : "5d09cc47cbdfbfa8a2e5a96ca7b713d769af3641",
      "LastModified" : "2016-04-10T10:59:57Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "config.tests/x11/x11.pro" : {
      "ObjectId" : "ae53fcb16fa10ac0c2042d05c8bff6d41ab54e6f",
      "LastModified" : "2016-04-10T10:59:57Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "config.tests/xaudio2/xaudio2.pro" : {
      "ObjectId" : "8552f9441b2f04fe1219785283d323f17c166c34",
      "LastModified" : "2016-04-10T10:59:57Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "config.tests/xv/xv.pro" : {
      "ObjectId" : "7b57f35802b949bc63c2ff5aa766c8c2ae2103c2",
      "LastModified" : "2016-04-10T10:59:57Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "configure.pri" : {
      "ObjectId" : "05290403e7915fa298894fd96f77f731ac01bf44",
      "LastModified" : "2016-04-10T10:59:57Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#Designed by Wang Bin(Lucas Wang). 2013 <wbsecg1@gmail.com>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### ONLY FOR Qt4. common.pri must be included before it so that write_file() can be used#######\n\n### .qmake.cache MUST be created before it!\n\n####ASSUME compile tests and .qmake.cache is in project out root dir\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Ensure that a cache is present. If none was found on startup, this will create\n\n# one in the build directory of the project which loads this feature.\n\n#cache()\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##TODO: how to use white space?\n",
        "Line" : 26,
        "CharPositionInLine" : 56
      },
      "4" : {
        "Text" : "#We need the ref value, so the function's parameter must be a var name. join() is!\n",
        "Line" : 30,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "##TODO: how to use white space?\n",
        "Line" : 31,
        "CharPositionInLine" : 56
      },
      "6" : {
        "Text" : "##TODO: how to use white space?\n",
        "Line" : 33,
        "CharPositionInLine" : 39
      },
      "7" : {
        "Text" : "##TODO: erase existing VAR in cache\n",
        "Line" : 37,
        "CharPositionInLine" : 12
      },
      "8" : {
        "Text" : "#log(\"varstr: $$varstr\")\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "##TODO: remove existing lines contain $$srcvar\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#because write_file() will write 1 line for each value(separated by space), so the value must be closed with \"\", then it's 1 value, not list\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "#erase the existing var and value pair\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#:isEmpty(QMAKE_SH) { #windows sucks. can not access the cache\n",
        "Line" : 47,
        "CharPositionInLine" : 11
      },
      "13" : {
        "Text" : "#use sed for unix or msys\n\n#convert '/' to '\\/' for sed\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#for sed regexp. '+' in qmake is '\\+' ?\n",
        "Line" : 53,
        "CharPositionInLine" : 32
      },
      "15" : {
        "Text" : "#Qt4\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# We were called recursively. Use the right make, as MAKEFLAGS may be set as well.\n",
        "Line" : 61,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# error: the reset qmake will not work and displays nothing in qtc\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#|error(\"write file failed\") #for debug\n",
        "Line" : 78,
        "CharPositionInLine" : 47
      },
      "19" : {
        "Text" : "# Try to build the test project in $$QMAKE_CONFIG_TESTS_DIR/$$1\n\n# ($$_PRO_FILE_PWD_/config.tests/$$1 by default).\n\n#\n\n# If the test passes, config_$$1 will be added to CONFIG.\n\n# The result is automatically cached. Use of cached results\n\n# can be suppressed by passing CONFIG+=recheck to qmake.\n\n#\n\n# Returns: true iff the test passes\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#system always call win32 cmd in windows, so we need \"cd /d\" to ensure success cd to a different partition\n",
        "Line" : 105,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# On WinRT we need to change the entry point as we cannot create windows applications\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Disable qmake features which are typically counterproductive for tests\n",
        "Line" : 113,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# Clean up after previous run\n",
        "Line" : 117,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "#|error(\"Aborting.\") #mkpath currently return false, do not know why\n",
        "Line" : 120,
        "CharPositionInLine" : 26
      },
      "CommentCount" : 25
    },
    "contrib/uchardet.pri" : {
      "ObjectId" : "6a529ac6a1e0d751ff8760e95df05ea401f7be37",
      "LastModified" : "2016-04-10T10:59:57Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deploy.pri" : {
      "ObjectId" : "3abbde999b0b2a0d465225d026ef68564a2eb381",
      "LastModified" : "2016-04-10T10:59:57Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#debian.files = $$PROJECTROOT/qtc_packaging/harmattan/control\n",
        "Line" : 18,
        "CharPositionInLine" : 3
      },
      "1" : {
        "Text" : "#debian.files = $$PROJECTROOT/qtc_packaging/fremantle/control\n",
        "Line" : 25,
        "CharPositionInLine" : 3
      },
      "2" : {
        "Text" : "#debian.files = $$PROJECTROOT/qtc_packaging/generic/control\n",
        "Line" : 31,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "#debian.path = /DEBIAN\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "examples/CMakeLists.txt" : {
      "ObjectId" : "2f7ad26a203711bdaa83f19a3a3fddb92fedee8b",
      "LastModified" : "2017-07-25T10:36:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(EXE_TYPE MACOSX_BUNDLE)\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# add HEADERS for moc\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/QMLPlayer/QMLPlayer.pro" : {
      "ObjectId" : "5f84a29a36c3c2ad5e4db7bfc98d5c81b8ca474f",
      "LastModified" : "2017-06-21T01:47:15Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# vc: will create exp and lib, result in static build error\n",
        "Line" : 1,
        "CharPositionInLine" : 33
      },
      "1" : {
        "Text" : "# Add more folders to ship with the application, here\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#will copy to target path\n\n#DEPLOYMENTFOLDERS = folder_01\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Additional import path used to resolve QML modules in Creator's code model\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# If your application uses the Qt Mobility libraries, uncomment the following\n\n# lines and add the respective components to the MOBILITY variable.\n\n# CONFIG += mobility\n\n# MOBILITY +=\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The .cpp file which was generated for your project. Feel free to hack it.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Installation path\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Please do not modify the following two lines. Required for deployment.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#!*msvc*: QMAKE_LFLAGS += -u __link_hack\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#in qt_preprocess.mk, rule name is relative path while dependency name is absolute path\n",
        "Line" : 48,
        "CharPositionInLine" : 12
      },
      "10" : {
        "Text" : "#ubuntu14.04 use qt5.2, remove incompatible code in qmlplayer\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "examples/QMLPlayer/QMLPlayer_sdk.pro" : {
      "ObjectId" : "cf528c4769ee6a7f5be1327a0ddcc2ff2c546d6e",
      "LastModified" : "2017-06-21T01:47:15Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add more folders to ship with the application, here\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#will copy to target path\n\n#DEPLOYMENTFOLDERS = folder_01\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Additional import path used to resolve QML modules in Creator's code model\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If your application uses the Qt Mobility libraries, uncomment the following\n\n# lines and add the respective components to the MOBILITY variable.\n\n# CONFIG += mobility\n\n# MOBILITY +=\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The .cpp file which was generated for your project. Feel free to hack it.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Installation path\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Please do not modify the following two lines. Required for deployment.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#QMAKE_BUNDLE_DATA += videos\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#SystemParametersInfo\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#SOURCE is ok\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#-framework ScreenSaver\n",
        "Line" : 88,
        "CharPositionInLine" : 36
      },
      "11" : {
        "Text" : "#user can put fonts in android/assets/fonts\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# vs project: qmake -tp vc \"CONFIG+=windeployqt\"\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#qtav is build with opengl module\n",
        "Line" : 107,
        "CharPositionInLine" : 15
      },
      "14" : {
        "Text" : "# will be listed in \"Distribution Files\" in vs but not deployed. not sure what's the usage\n",
        "Line" : 110,
        "CharPositionInLine" : 16
      },
      "15" : {
        "Text" : "# If a file does not exist, it will not be added to vs project\n\n# If not using vs, edit AppxManifest.map for Qt5.5\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#depend_dll.path = $$OUT_PWD\n",
        "Line" : 123,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "#vs2015update1 error about multiple qt5core.dll(in both build dir and qtbin dir), we can remove them in `Deployment Files`\n",
        "Line" : 124,
        "CharPositionInLine" : 32
      },
      "18" : {
        "Text" : "# WINRT_MANIFEST file: \"=>\\\"\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#isEqual(VCPROJ_ARCH, ARM): VCLibsSuffix = .Phone\n",
        "Line" : 131,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "#for qmake generated manifest\n",
        "Line" : 137,
        "CharPositionInLine" : 35
      },
      "CommentCount" : 21
    },
    "examples/QMLPlayer/qtquick2applicationviewer/qtquick2applicationviewer.pri" : {
      "ObjectId" : "e5f7990f6ffe110658e32092467aff7e0d73415e",
      "LastModified" : "2016-04-10T10:59:57Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# checksum 0x7b0d version 0x90005\n\n# This file was generated by the Qt Quick 2 Application wizard of Qt Creator.\n\n# The code below adds the QtQuick2ApplicationViewer to the project and handles\n\n# the activation of QML debugging.\n\n# It is recommended not to modify this file, since newer versions of Qt Creator\n\n# may offer an updated version of it.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This file was generated by an application wizard of Qt Creator.\n\n# The code below handles deployment to Android and Maemo, aswell as copying\n\n# of the application data to shadow build directories on desktop.\n\n# It is recommended not to modify this file, since newer versions of Qt Creator\n\n# may offer an updated version of it.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Assumed to be a Desktop Unix\n",
        "Line" : 115,
        "CharPositionInLine" : 13
      },
      "CommentCount" : 3
    },
    "examples/audiopipeline/audiopipeline.pro" : {
      "ObjectId" : "2185d57de75d5e0ff62b35dc1f8ca78a54190762",
      "LastModified" : "2016-04-10T10:59:57Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "examples/audiopipeline/src.pri" : {
      "ObjectId" : "6aa8dbe53b723e6e1ceb58d3f3aefd9a52226368",
      "LastModified" : "2016-04-10T10:59:57Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "examples/common/common.pro" : {
      "ObjectId" : "a3b6872292f442720676169c4412a31e51c2ff0e",
      "LastModified" : "2017-06-21T01:47:15Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2014-01-03T11:07:23\n\n#\n\n#-------------------------------------------------\n\n# Qt4 need QDesktopServices\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#var with '_' can not pass to pri?\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# android apk hack\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#QML app does not link to libQtAV but we need it. why no QmlAV plugin if remove this?\n",
        "Line" : 28,
        "CharPositionInLine" : 19
      },
      "4" : {
        "Text" : "#include($$PROJECTROOT/libQtAV.pri)\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#QMAKE_LFLAGS += -u _link_hack\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#SystemParametersInfo\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#SOURCE is ok\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#-framework ScreenSaver\n",
        "Line" : 56,
        "CharPositionInLine" : 36
      },
      "9" : {
        "Text" : "# don't install. was set in libcommon.pri\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "examples/common/libcommon.pri" : {
      "ObjectId" : "60b767ed63d0657fe7dfae823c05edc751086455",
      "LastModified" : "2017-06-21T01:47:15Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# qmake library building template pri file\n\n# Copyright (C) 2011-2015 Wang Bin <wbsecg1@gmail.com>\n\n# Shanghai, China.\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 2 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You should have received a copy of the GNU General Public License along\n\n# with this program; if not, write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\n#\n\n############################## HOW TO ##################################\n\n# Suppose the library name is XX\n\n# Usually what you need to change are: staticlink, LIB_VERSION, NAME and DLLDESTDIR.\n\n# And rename xx-buildlib and LIBXX_PRI_INCLUDED\n\n# the contents of libXX.pro is:\n\n#    TEMPLATE = lib\n\n#    QT -= gui\n\n#    CONFIG *= xx-buildlib\n\n#    STATICLINK = 1 #optional. default is 0, i.e. dynamically link\n\n#    PROJECTROOT = $$PWD/..\n\n#    include(libXX.pri)\n\n#    preparePaths($$OUT_PWD/../out)\n\n#    HEADERS = ...\n\n#    SOURCES = ...\n\n#    ...\n\n# the content of other pro using this library is:\n\n#    TEMPLATE = app\n\n#    PROJECTROOT = $$PWD/..\n\n#    STATICLINK = 1 #or 0\n\n#    include(dir_of_XX/libXX.pri)\n\n#    preparePaths($$OUT_PWD/../out)\n\n#    HEADERS = ...\n\n#    SOURCES = ...\n\n#\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#0.x.y may be wrong for dll\n",
        "Line" : 51,
        "CharPositionInLine" : 29
      },
      "3" : {
        "Text" : "# If user haven't supplied STATICLINK, then auto-detect\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Override for ios. Dynamic link is only supported\n\n# in iOS 8.1.\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#?\n",
        "Line" : 72,
        "CharPositionInLine" : 29
      },
      "6" : {
        "Text" : "#QMAKE_LFLAGS_RPATH += #will append to rpath dir\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#eval() ?\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#The following may not need to change\n",
        "Line" : 82,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#mac_framework {\n",
        "Line" : 84,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# LIBS += -F$$PROJECT_LIBDIR -framework $$PROJECT_TARGETNAME\n",
        "Line" : 85,
        "CharPositionInLine" : 5
      },
      "11" : {
        "Text" : "#} else {\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "#}\n",
        "Line" : 97,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "#Add your additional configuration first. e.g.\n",
        "Line" : 99,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "#\twin32: LIBS += -lUser32\n\n# The following may not need to change\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#TEMPLATE = lib\n",
        "Line" : 103,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "##I commented out this before, why?\n",
        "Line" : 107,
        "CharPositionInLine" : 38
      },
      "17" : {
        "Text" : "#\n",
        "Line" : 108,
        "CharPositionInLine" : 29
      },
      "18" : {
        "Text" : "#win32-msvc*\n",
        "Line" : 109,
        "CharPositionInLine" : 45
      },
      "19" : {
        "Text" : "##otherwise the following shared is true, why?\n",
        "Line" : 111,
        "CharPositionInLine" : 23
      },
      "20" : {
        "Text" : "#shared includes dll\n",
        "Line" : 114,
        "CharPositionInLine" : 19
      },
      "21" : {
        "Text" : "#copy shared lib there\n",
        "Line" : 119,
        "CharPositionInLine" : 77
      },
      "22" : {
        "Text" : "#copy from the pro creator creates.\n",
        "Line" : 122,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 23
    },
    "examples/examples.pro" : {
      "ObjectId" : "4a11c79ad4034ec20dc0e67d922d5087ecf5156b",
      "LastModified" : "2017-06-21T01:47:15Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# qtHaveModule does not exist in Qt5.0\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "examples/filters/filters.pro" : {
      "ObjectId" : "43d2d65432ae362ddbeed7c57928dbfdb025eabb",
      "LastModified" : "2016-04-10T10:59:57Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "examples/framereader/framereader.pro" : {
      "ObjectId" : "9b1b95ad760f9f7265ff8276b104dcc91f702bbe",
      "LastModified" : "2017-06-21T01:47:15Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "examples/glslfilter/glslfilter.pro" : {
      "ObjectId" : "42c737f62e6a3ca4448d1114e74aaa2882f7cbe3",
      "LastModified" : "2017-06-21T01:47:15Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "examples/player/player.pro" : {
      "ObjectId" : "61a1ed7d2989f4f7abb234ff7a03d01fe7f7af6a",
      "LastModified" : "2017-06-21T01:47:15Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# vc: will create exp and lib, result in static build error\n",
        "Line" : 7,
        "CharPositionInLine" : 33
      },
      "1" : {
        "Text" : "#debian\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#BIN_INSTALLS += tv\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "examples/player/player_sdk.pro" : {
      "ObjectId" : "c42ba8cb942b1e8c1257b9364b6e133bcd04bdaf",
      "LastModified" : "2017-06-21T01:47:15Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "########## template for QtAV app project BEGIN ################\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#rpath for osx qt4\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "########## template for QtAV app project END ################\n\n################# Add your own code below ###################\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#SystemParametersInfo\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#SOURCE is ok\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#-framework ScreenSaver\n",
        "Line" : 63,
        "CharPositionInLine" : 36
      },
      "CommentCount" : 6
    },
    "examples/player/src.pri" : {
      "ObjectId" : "12173ad085785f02b8d4acc94c51495ea8b592a4",
      "LastModified" : "2017-06-21T01:47:15Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "examples/qmlvumeter/qmlvumeter.pro" : {
      "ObjectId" : "f9d0f8e361029abaa325f4ccfad08d943d652f95",
      "LastModified" : "2017-07-25T10:36:42Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Additional import path used to resolve QML modules in Qt Creator's code model\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Additional import path used to resolve QML modules just for Qt Quick Designer\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The following define makes your compiler emit warnings if you use\n\n# any feature of Qt which as been marked deprecated (the exact warnings\n\n# depend on your compiler). Please consult the documentation of the\n\n# deprecated API in order to know how to port your code away from it.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# You can also make your code fail to compile if you use deprecated APIs.\n\n# In order to do so, uncomment the following line.\n\n# You can also select to disable deprecated APIs only up to a certain version of Qt.\n\n#DEFINES += QT_DISABLE_DEPRECATED_BEFORE=0x060000    # disables all the APIs deprecated before Qt 6.0.0\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Default rules for deployment.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "examples/shader/shader.pro" : {
      "ObjectId" : "42c737f62e6a3ca4448d1114e74aaa2882f7cbe3",
      "LastModified" : "2017-07-25T10:36:42Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "examples/sharedoutput/sharedoutput.pro" : {
      "ObjectId" : "d541d30ef6e3c3a6a26b39922239aedf06ce0aab",
      "LastModified" : "2017-07-25T10:36:42Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2013-01-20T13:10:48\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/simpleplayer/CMakeLists.txt" : {
      "ObjectId" : "2e024d7c5df8631fe9baa71401ffca6d2e08b675",
      "LastModified" : "2017-07-25T10:36:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/simpleplayer/simpleplayer.pro" : {
      "ObjectId" : "c30f99c6b87618e143cb8cbfc9d613a571235b8d",
      "LastModified" : "2017-07-25T10:36:42Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "examples/simpleplayer/simpleplayer_sdk.pro" : {
      "ObjectId" : "acd62408a74719505938746bd41f4eb153ef2bf3",
      "LastModified" : "2017-07-25T10:36:42Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "########## template for QtAV app project BEGIN ################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#rpath for osx qt4\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "########## template for QtAV app project END ################\n\n################# Add your own code below ###################\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "examples/simpleplayer/src.pri" : {
      "ObjectId" : "5314e0c6e53a75e3da6fd18f83cc31e3beeabfa0",
      "LastModified" : "2017-07-25T10:36:42Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "examples/simpletranscode/simpletranscode.pro" : {
      "ObjectId" : "4d2b560fe570944bfe1b0ff4e08057e245dcc1ee",
      "LastModified" : "2017-07-25T10:36:42Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "examples/videocapture/videocapture.pro" : {
      "ObjectId" : "7f6a712c14754e4d3ba16685bb977703ea056854",
      "LastModified" : "2017-07-25T10:36:42Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "examples/videographicsitem/videographicsitem.pro" : {
      "ObjectId" : "84e79ae10b7bb2041a56c36615779d258e5183b3",
      "LastModified" : "2017-07-25T10:36:42Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "examples/videogroup/videogroup.pro" : {
      "ObjectId" : "ccba76e6baa1f4519d2774e12dec89682bad8154",
      "LastModified" : "2017-07-25T10:36:42Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "examples/videowall/videowall.pro" : {
      "ObjectId" : "2f418911885434a91124dd785972ba8fd9593a36",
      "LastModified" : "2017-07-25T10:36:42Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "examples/window/window.pro" : {
      "ObjectId" : "e148cf681f9c0e0510400efadbacc6d38ab13e6f",
      "LastModified" : "2017-07-25T10:36:42Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "pack.pri" : {
      "ObjectId" : "ea14281509eda571e56283b1f037ed07e002a2a3",
      "LastModified" : "2017-07-25T10:36:42Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#Designed by Wang Bin(Lucas Wang). 2013 <wbsecg1@gmail.com>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##TODO: Why use function to add makefile target failed\n\n#defineTest(packageSet) {\n\n#\tisEmpty(1): warning(\"packageSet(version [, name]\")\n\n#\tPACKAGE_VERSION = $$1\n\n#\tisEmpty(2): PACKAGE_NAME = $$basename(_PRO_FILE_PWD_)\n\n#\telse: PACKAGE_NAME = $$2\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TARGET.CAPABILITY += \n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#export(OTHER_FILES)\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add files and directories to ship with the application\n\n# by adapting the examples below.\n\n# file1.source = myfile\n\n# dir1.source = mydir\n\n#lang.files = i18n\n\n#DEPLOYMENTFOLDERS = lang# file1 dir1\n\n#include(deployment.pri)\n\n#qtcAddDeployment()\n\n#TODO: add other platform packaging\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#armMEEGO_VERSION_MAJORel\n",
        "Line" : 49,
        "CharPositionInLine" : 52
      },
      "6" : {
        "Text" : "#ARCH = $$QT_ARCH  #what about harmattan?\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "##control dir must be 755\n",
        "Line" : 60,
        "CharPositionInLine" : 53
      },
      "8" : {
        "Text" : "#message(\"deb.commands: $$deb.commands\")\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#export(QMAKE_EXTRA_TARGETS)\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#makeDeb($$PACKAGE_VERSION, $$PACKAGE_NAME)\n",
        "Line" : 77,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "#} #packageSet\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "qml/CMakeLists.txt" : {
      "ObjectId" : "8a976888ae7a882ec7769927831cfaa4702d0782",
      "LastModified" : "2017-07-25T10:36:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#URI = QtAV #uri used in QtAVQmlPlugin::registerTypes(uri)\n\n#qtAtLeast(5, 3): QMAKE_MOC_OPTIONS += -Muri=$$URI # not sure what moc does\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add HEADERS for moc\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#LINK_SEARCH_START_STATIC 1\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#http://stackoverflow.com/questions/19866424/cmake-and-qt5-automoc-error\n\n#http://doc.qt.io/qt-5/cmake-manual.html\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# for .moc\n",
        "Line" : 54,
        "CharPositionInLine" : 34
      },
      "CommentCount" : 5
    },
    "qml/libQmlAV.pri" : {
      "ObjectId" : "6d2be72afcf79680fd419fff2af95419950ae262",
      "LastModified" : "2017-07-25T10:36:42Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# qmake library building template pri file\n\n# Copyright (C) 2011-2015 Wang Bin <wbsecg1@gmail.com>\n\n# Shanghai, China.\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 2 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You should have received a copy of the GNU General Public License along\n\n# with this program; if not, write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\n#\n\n############################## HOW TO ##################################\n\n# Suppose the library name is XX\n\n# Usually what you need to change are: staticlink, LIB_VERSION, NAME and DLLDESTDIR.\n\n# And rename xx-buildlib and LIBXX_PRI_INCLUDED\n\n# the contents of libXX.pro is:\n\n#    TEMPLATE = lib\n\n#    QT -= gui\n\n#    CONFIG *= xx-buildlib\n\n#    STATICLINK = 1 #optional. default is 0, i.e. dynamically link\n\n#    PROJECTROOT = $$PWD/..\n\n#    include(libXX.pri)\n\n#    preparePaths($$OUT_PWD/../out)\n\n#    HEADERS = ...\n\n#    SOURCES = ...\n\n#    ...\n\n# the content of other pro using this library is:\n\n#    TEMPLATE = app\n\n#    PROJECTROOT = $$PWD/..\n\n#    STATICLINK = 1 #or 0\n\n#    include(dir_of_XX/libXX.pri)\n\n#    preparePaths($$OUT_PWD/../out)\n\n#    HEADERS = ...\n\n#    SOURCES = ...\n\n#\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#0.x.y may be wrong for dll\n",
        "Line" : 51,
        "CharPositionInLine" : 29
      },
      "3" : {
        "Text" : "# If user haven't supplied STATICLINK, then auto-detect\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Override for ios. Dynamic link is only supported\n\n# in iOS 8.1.\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#?\n",
        "Line" : 72,
        "CharPositionInLine" : 29
      },
      "6" : {
        "Text" : "#QMAKE_LFLAGS_RPATH += #will append to rpath dir\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#eval() ?\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#The following may not need to change\n",
        "Line" : 82,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#Add your additional configuration first. e.g.\n",
        "Line" : 96,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "#\twin32: LIBS += -lUser32\n\n# The following may not need to change\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#TEMPLATE = lib\n",
        "Line" : 100,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "##I commented out this before, why?\n",
        "Line" : 104,
        "CharPositionInLine" : 38
      },
      "13" : {
        "Text" : "#\n",
        "Line" : 105,
        "CharPositionInLine" : 29
      },
      "14" : {
        "Text" : "#win32-msvc*\n",
        "Line" : 106,
        "CharPositionInLine" : 45
      },
      "15" : {
        "Text" : "##otherwise the following shared is true, why?\n",
        "Line" : 108,
        "CharPositionInLine" : 23
      },
      "16" : {
        "Text" : "#shared includes dll\n",
        "Line" : 111,
        "CharPositionInLine" : 19
      },
      "17" : {
        "Text" : "#copy shared lib there\n",
        "Line" : 116,
        "CharPositionInLine" : 77
      },
      "18" : {
        "Text" : "#QMAKE_POST_LINK+=: just append as a string to previous QMAKE_POST_LINK\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#copy from the pro creator creates.\n",
        "Line" : 120,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 20
    },
    "qml/libQmlAV.pro" : {
      "ObjectId" : "6026d7588389799875774871845ddb012065aa12",
      "LastModified" : "2018-05-08T08:49:50Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#QMAKE_RPATHLINKDIR\n\n#CONFIG *= qml_module relative_qt_rpath\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#var with '_' can not pass to pri?\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#https://github.com/wang-bin/QtAV/issues/368#issuecomment-73246253\n\n#http://qt-project.org/forums/viewthread/38438\n\n# mkspecs/features/qml_plugin.prf mkspecs/features/qml_module.prf\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#static lib copy error before ranlib. copy only in sdk_install\n",
        "Line" : 28,
        "CharPositionInLine" : 10
      },
      "4" : {
        "Text" : "#plugin.depends = #makefile target\n\n#windows: copy /y file1+file2+... dir. need '+'. $(COPY_FILE) is exists in makefile, not in vc projects (MAKEFILE_GENERATOR is MSBUILD or MSVC.NET)\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#makefile. or -\\$\\(COPY_FILE\\)\n",
        "Line" : 38,
        "CharPositionInLine" : 27
      },
      "6" : {
        "Text" : "#join values separated by space. so quote is needed\n\n#plugin.commands = $$join(plugin.commands,$$escape_expand(\\\\n\\\\t))\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#just append as a string to $$QMAKE_POST_LINK\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#QMAKE_EXTRA_TARGETS = plugin\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#POST_TARGETDEPS = plugin #vs, xcode does not support\n\n#no write permision. do it in makefile\n\n#mkpath($$[QT_INSTALL_QML]/QtAV)\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#http://stackoverflow.com/questions/14260542/qmake-extra-compilers-processing-steps\n\n#http://danny-pope.com/?p=86\n\n#custom compiler: auto update if source is newer\n\n# sa mkspecs/features/qml_plugin.prf\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# QMAKE_COPY_FILE, QMAKE_MKDIR_CMD ?\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#extra_copy.depends = $$EXTRA_COPY_FILES #.input is already the depends\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#\n",
        "Line" : 67,
        "CharPositionInLine" : 36
      },
      "14" : {
        "Text" : "# CAN NOT put $$TARGET here otherwise may result in circular dependency.\n\n# update EXTRA_COPY_FILES will result in target relink\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#debian\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "root.pri" : {
      "ObjectId" : "3a577c0a0fdfae5dca06b3d5f917e77b88f922c4",
      "LastModified" : "2017-07-25T10:36:42Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#Designed by Wang Bin(Lucas Wang). 2013 <wbsecg1@gmail.com>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## TODO: put in .qmake.conf for Qt5?\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##TODO: BUILD_DIR=>BUILD_ROOT\n\n#if not empty, it means the parent project may already set it\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#avoid warning for '\\'. qmake knows how to deal with '/'\n",
        "Line" : 9,
        "CharPositionInLine" : 22
      },
      "4" : {
        "Text" : "#avoid warning for '\\'. qmake knows how to deal with '/'\n",
        "Line" : 11,
        "CharPositionInLine" : 26
      },
      "5" : {
        "Text" : "#recheck:write_file($$BUILD_DIR/.qmake.cache) #FIXME: empty_file result in no qtCompileTest result in cache\n\n#load(configure) # why MAKEFILE_GENERATOR is detected as XCODE in qtc before running qmake?\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#_QMAKE_CACHE_QT4_ is built in and always not empty\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#workaround for android on windows. I don't know how qt deal with it\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#configure.prf error if makefile generator is not supported and no display in qtcreator\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#FIXME: ios can not set CONFIG+=iphoneos\n",
        "Line" : 34,
        "CharPositionInLine" : 20
      },
      "10" : {
        "Text" : "#recheck:write_file($$BUILD_DIR/.qmake.cache) #FIXME: empty_file result in no qtCompileTest result in cache\n\n#use the following lines when building as a sub-project, write cache to this project src dir.\n\n#if build this project alone and do not have sub-project depends on this lib, those lines are not necessary\n\n####ASSUME compile tests and .qmake.cache is in project out root dir\n\n#vars in .qmake.cache will affect all projects in subdirs, even if qmake's working dir is not in .qmake.cache dir\n\n#write_file($$BUILD_DIR/.qmake.cache) ##TODO: erase the existing lines!!\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "#clear config.log iff reconfigure is required\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#cache() is available after include configure.pri\n\n#load(configure.pri) #what's the difference?\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "#avoid warning for '\\'. qmake knows how to deal with '/'\n",
        "Line" : 49,
        "CharPositionInLine" : 28
      },
      "14" : {
        "Text" : "#win32 always call windows command\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "#QMAKE_HOST.os?\n",
        "Line" : 53,
        "CharPositionInLine" : 12
      },
      "16" : {
        "Text" : "#system always call win32 cmd\n",
        "Line" : 54,
        "CharPositionInLine" : 45
      },
      "17" : {
        "Text" : "#mkpath. but common.pri may not included\n",
        "Line" : 73,
        "CharPositionInLine" : 69
      },
      "18" : {
        "Text" : "# Disable qmake features which are typically counterproductive for tests\n",
        "Line" : 76,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Clean up after previous run\n",
        "Line" : 80,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "#message(\"$$test_cmd_base $$system_quote($$system_path($$QMAKE_QMAKE)) $$SPEC $$qmake_configs $$system_path($$test_dir)\")\n",
        "Line" : 85,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# \"ARCH=x86\". can not evalate with \". why \\\" may fail? eval(\"expr\")\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#cached values will not affect current pro. subdir pro will be affected\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#cache mkspecs. compare mkspec with cached one. if not equal, remove old cache to run new compile tests\n\n#Qt5 does not have QMAKE_MKSPECS, use QMAKE_SPEC, QMAKE_XSPEC\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#cache(BUILD_ROOT, set, BUILD_DIR)\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# no-framework can be defined in user.conf. default is the same as QT_CONFIG\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#config.tests\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#   CONFIG -= recheck\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 28
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "db84dbf894a7fe6d25d90ce5eb0f4fe6c5c683e3",
      "LastModified" : "2017-07-25T10:36:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO: translations, rpath, uchardet, x11extras, android\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set qt dirs first so we can find depends in qt install dir\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#TODO: remove. use external/include\n",
        "Line" : 12,
        "CharPositionInLine" : 38
      },
      "3" : {
        "Text" : "#set_xcode_property(myioslib IPHONEOS_DEPLOYMENT_TARGET \"8.0\")\n",
        "Line" : 19,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "#macOS only\n",
        "Line" : 21,
        "CharPositionInLine" : 52
      },
      "5" : {
        "Text" : "# TODO: only files use capi.h\n",
        "Line" : 27,
        "CharPositionInLine" : 63
      },
      "6" : {
        "Text" : "# check ffmpeg headers. assume libs exist. lib order matters if they are static\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# avdevice avfilter avresample swscale)\n",
        "Line" : 32,
        "CharPositionInLine" : 47
      },
      "8" : {
        "Text" : "# CMAKE_FIND_ROOT_PATH_BOTH: ensure find_file can search from given paths for cross compiling, may be set to ONLY in toolchain file\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#check_include_file(lib${av}/${av}.h HAVE_${AV}) # -D__STDC_CONSTANT_MACROS is required!\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# dynamic load\n",
        "Line" : 70,
        "CharPositionInLine" : 16
      },
      "11" : {
        "Text" : "# link to ass\n",
        "Line" : 76,
        "CharPositionInLine" : 19
      },
      "12" : {
        "Text" : "#TODO: option(LINK_OPENAL...)\n",
        "Line" : 106,
        "CharPositionInLine" : 18
      },
      "13" : {
        "Text" : "# DYNAMIC_OPENAL is set by user\n",
        "Line" : 108,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# blackberry\n",
        "Line" : 115,
        "CharPositionInLine" : 67
      },
      "15" : {
        "Text" : "# original is \"-iframework\", lots of build errors\n",
        "Line" : 140,
        "CharPositionInLine" : 52
      },
      "16" : {
        "Text" : "#desktop opengl only\n\n#glesv2 only\n",
        "Line" : 190,
        "CharPositionInLine" : 18
      },
      "17" : {
        "Text" : "# qt with opengl enabled. 1 of DYNAMIC_GL, OPENGL and OPENGLES is true\n",
        "Line" : 192,
        "CharPositionInLine" : 19
      },
      "18" : {
        "Text" : "#get_target_property(QtGui_location Qt5::Gui LOCATION) #dll path\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# windows always set to GL\n",
        "Line" : 195,
        "CharPositionInLine" : 45
      },
      "20" : {
        "Text" : "# assume Qt5Gui_OPENGL_IMPLEMENTATION is not GL if build with ANGLE only\n",
        "Line" : 197,
        "CharPositionInLine" : 22
      },
      "21" : {
        "Text" : "# x11?\n",
        "Line" : 204,
        "CharPositionInLine" : 35
      },
      "22" : {
        "Text" : "# msys2\n",
        "Line" : 217,
        "CharPositionInLine" : 48
      },
      "23" : {
        "Text" : "# TODO: X11Extras\n",
        "Line" : 312,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# ANGLE\n",
        "Line" : 313,
        "CharPositionInLine" : 38
      },
      "25" : {
        "Text" : "#list(APPEND EXTRA_DEFS -DQTAV_HAVE_QT_EGL=1)\n",
        "Line" : 315,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# TODO: lib dir\n",
        "Line" : 341,
        "CharPositionInLine" : 68
      },
      "27" : {
        "Text" : "# https://crascit.com/2015/03/28/enabling-cxx11-in-cmake/ (global and specified target)\n",
        "Line" : 360,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# dynamic gl or desktop\n",
        "Line" : 372,
        "CharPositionInLine" : 37
      },
      "29" : {
        "Text" : "#only for xbox or >=win8\n",
        "Line" : 379,
        "CharPositionInLine" : 14
      },
      "30" : {
        "Text" : "#ole32: CoInitializeEx for vs2008, but can not find the symbol at runtime\n",
        "Line" : 386,
        "CharPositionInLine" : 41
      },
      "31" : {
        "Text" : "# TODO: rc template\n",
        "Line" : 469,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# add HEADERS for moc\n",
        "Line" : 478,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# qt5_use_modules(since 2.8.9) is deprecated since cmake 2.8.11\n",
        "Line" : 482,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# will add include dirs, macros etc.\n",
        "Line" : 485,
        "CharPositionInLine" : 33
      },
      "35" : {
        "Text" : "#  MACOSX_FRAMEWORK_INFO_PLIST qtav-Info.plist\n\n#PUBLIC_HEADER ${SDK_HEADERS}\n\n#PRIVATE_HEADER ${SDK_PRIVATE_HEADERS}\n",
        "Line" : 490,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "#LINK_SEARCH_START_STATIC 1\n",
        "Line" : 499,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "#http://stackoverflow.com/questions/19866424/cmake-and-qt5-automoc-error\n\n#http://doc.qt.io/qt-5/cmake-manual.html\n",
        "Line" : 503,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# for .moc\n",
        "Line" : 505,
        "CharPositionInLine" : 34
      },
      "39" : {
        "Text" : "#PUBLIC_HEADER DESTINATION ${QTAV_INSTALL_HEADERS}/${MODULE} # list is too long\n\n#PRIVATE_HEADER DESTINATION ${QTAV_INSTALL_HEADERS}/${MODULE}/private\n",
        "Line" : 525,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# FIXME: why QTAV_INCLUDE_DIRS is empty?\n",
        "Line" : 533,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 41
    },
    "src/io/tst_avinput.pro" : {
      "ObjectId" : "67fa485ddd695cdda0af67f9c41600c866ab9122",
      "LastModified" : "2017-07-25T10:36:42Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "src/io/tst_qiodevinput.pro" : {
      "ObjectId" : "73b40d6f22c84224c829d7782575bdc74726d878",
      "LastModified" : "2017-07-25T10:36:42Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "src/libQtAV.pri" : {
      "ObjectId" : "8aad0395f8b0cd037de4928ad6129d3a8c673eba",
      "LastModified" : "2017-07-25T10:36:42Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# qmake library building template pri file\n\n# Copyright (C) 2011-2016 Wang Bin <wbsecg1@gmail.com>\n\n# Shanghai, China.\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 2 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You should have received a copy of the GNU General Public License along\n\n# with this program; if not, write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\n#\n\n############################## HOW TO ##################################\n\n# Suppose the library name is XX\n\n# Usually what you need to change are: LIB_VERSION, NAME and DLLDESTDIR.\n\n# And rename xx-buildlib and LIBXX_PRI_INCLUDED\n\n# the contents of libXX.pro is:\n\n#    TEMPLATE = lib\n\n#    QT -= gui\n\n#    CONFIG *= xx-buildlib\n\n#    STATICLINK = 1 #optional. default is detected by staticlib in CONFIG\n\n#    PROJECTROOT = $$PWD/..\n\n#    include(libXX.pri)\n\n#    preparePaths($$OUT_PWD/../out)\n\n#    HEADERS = ...\n\n#    SOURCES = ...\n\n#    ...\n\n# the content of other pro using this library is:\n\n#    TEMPLATE = app\n\n#    PROJECTROOT = $$PWD/..\n\n#    STATICLINK = 1 #optional. default is detected by staticlib in CONFIG\n\n#    include(dir_of_XX/libXX.pri)\n\n#    preparePaths($$OUT_PWD/../out)\n\n#    HEADERS = ...\n\n#    SOURCES = ...\n\n#\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#0.x.y may be wrong for dll\n",
        "Line" : 51,
        "CharPositionInLine" : 29
      },
      "3" : {
        "Text" : "# If user haven't supplied STATICLINK, then auto-detect\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Override for ios. Dynamic link is only supported\n\n# in iOS 8.1.\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#?\n",
        "Line" : 72,
        "CharPositionInLine" : 29
      },
      "6" : {
        "Text" : "#QMAKE_LFLAGS_RPATH += #will append to rpath dir\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#eval() ?\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#The following may not need to change\n",
        "Line" : 83,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#Add your additional configuration first. e.g.\n",
        "Line" : 100,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "#\twin32: LIBS += -lUser32\n\n# The following may not need to change\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#TEMPLATE = lib\n",
        "Line" : 104,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "##I commented out this before, why?\n",
        "Line" : 108,
        "CharPositionInLine" : 38
      },
      "13" : {
        "Text" : "#\n",
        "Line" : 109,
        "CharPositionInLine" : 29
      },
      "14" : {
        "Text" : "#win32-msvc*\n",
        "Line" : 110,
        "CharPositionInLine" : 45
      },
      "15" : {
        "Text" : "##otherwise the following shared is true, why?\n",
        "Line" : 112,
        "CharPositionInLine" : 37
      },
      "16" : {
        "Text" : "#shared includes dll\n",
        "Line" : 115,
        "CharPositionInLine" : 19
      },
      "17" : {
        "Text" : "#copy shared lib there\n",
        "Line" : 120,
        "CharPositionInLine" : 77
      },
      "18" : {
        "Text" : "#copy from the pro creator creates.\n",
        "Line" : 123,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 19
    },
    "src/libQtAV.pro" : {
      "ObjectId" : "41851dabc6f5e52401af162e270612ab25ae40a5",
      "LastModified" : "2018-05-08T08:49:50Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# for mac framework. also used in install_sdk.pro\n",
        "Line" : 2,
        "CharPositionInLine" : 22
      },
      "1" : {
        "Text" : "#CONFIG *= ltcg\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO: ffmpeg dir\n",
        "Line" : 18,
        "CharPositionInLine" : 38
      },
      "3" : {
        "Text" : "#mac: simd.prf will load qt_build_config and the result is soname will prefixed with QT_INSTALL_LIBS and link flag will append soname after QMAKE_LFLAGS_SONAME\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#need by qt4 addSimdCompiler(). neon or config_neon is required because tests/arch can not detect neon\n",
        "Line" : 21,
        "CharPositionInLine" : 45
      },
      "5" : {
        "Text" : "## sse2 sse4_1 may be defined in Qt5 qmodule.pri but is not included. Qt4 defines sse and sse2\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#release: DEFINES += QT_NO_DEBUG_OUTPUT\n\n#var with '_' can not pass to pri?\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#no depends for rc file by default, even if rc includes a header. Makefile target use '/' as default, so not works iwth win cmd\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#rc obj depends on clean path target\n",
        "Line" : 61,
        "CharPositionInLine" : 40
      },
      "9" : {
        "Text" : "#why use multiple rule failed? i.e. add a rule without command\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#change file time\n",
        "Line" : 65,
        "CharPositionInLine" : 59
      },
      "11" : {
        "Text" : "#change file time\n",
        "Line" : 67,
        "CharPositionInLine" : 39
      },
      "12" : {
        "Text" : "#only sse4.1 is checked. sse2 now can be disabled if sse4.1 is disabled\n",
        "Line" : 76,
        "CharPositionInLine" : 17
      },
      "13" : {
        "Text" : "# cross build, old vc etc.\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#link FFmpeg and portaudio which are built by gcc need /SAFESEH:NO\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#workaround for CoInitializeEx() and other symbols not found at runtime\n",
        "Line" : 94,
        "CharPositionInLine" : 27
      },
      "16" : {
        "Text" : "# vs2012 only has stdint.h\n",
        "Line" : 95,
        "CharPositionInLine" : 31
      },
      "17" : {
        "Text" : "#CXXFLAGS debug: /MTd\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#for msbuild vs2013\n",
        "Line" : 99,
        "CharPositionInLine" : 79
      },
      "19" : {
        "Text" : "#required by capi_egl.*\n",
        "Line" : 105,
        "CharPositionInLine" : 36
      },
      "20" : {
        "Text" : "#UINT64_C: C99 math features, need -D__STDC_CONSTANT_MACROS in CXXFLAGS\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#qt5.2 has QAndroidJniObject\n",
        "Line" : 122,
        "CharPositionInLine" : 32
      },
      "22" : {
        "Text" : "#QPlatformNativeInterface get \"QtActivity\"\n",
        "Line" : 123,
        "CharPositionInLine" : 24
      },
      "23" : {
        "Text" : "#may depends on avfilter\n",
        "Line" : 147,
        "CharPositionInLine" : 18
      },
      "24" : {
        "Text" : "#shlwapi: desktop >= xp only\n",
        "Line" : 152,
        "CharPositionInLine" : 45
      },
      "25" : {
        "Text" : "#-lX11 -lxcb -lxcb-shm -lxcb-xfixes -lxcb-render -lxcb-shape\n",
        "Line" : 154,
        "CharPositionInLine" : 21
      },
      "26" : {
        "Text" : "# static ffmpeg\n",
        "Line" : 155,
        "CharPositionInLine" : 19
      },
      "27" : {
        "Text" : "# assume avdevice targets to the same version as Qt and always >= 10.6\n",
        "Line" : 161,
        "CharPositionInLine" : 6
      },
      "28" : {
        "Text" : "#omp for static link. _t is multi-thread static link\n",
        "Line" : 185,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "#LIBS += -Wl,--exclude-libs,ALL\n",
        "Line" : 193,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "#only for xbox or >=win8\n",
        "Line" : 200,
        "CharPositionInLine" : 22
      },
      "31" : {
        "Text" : "#CoInitializeEx for vs2008, but can not find the symbol at runtime\n",
        "Line" : 202,
        "CharPositionInLine" : 20
      },
      "32" : {
        "Text" : "#win32: LIBS *= -lwinmm #-lksguid #-luuid\n",
        "Line" : 213,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# openal-soft AL_API dllimport error. mac's macro is AL_BUILD_LIBRARY\n",
        "Line" : 220,
        "CharPositionInLine" : 48
      },
      "34" : {
        "Text" : "#CONFIG += config_cuda_link\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#contains(QT_CONFIG, opengl) {\n",
        "Line" : 253,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "#}\n",
        "Line" : 256,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "#contains(QT_CONFIG, opengl) {\n",
        "Line" : 314,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "#}\n",
        "Line" : 317,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "#dynamic load va-glx va-x11 using dllapi. -lX11: used by tfp\n",
        "Line" : 318,
        "CharPositionInLine" : 23
      },
      "40" : {
        "Text" : "# Can not use NEON_SOURCE because it can not work with moc\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "#addSimdCompiler xxx_ASM\n",
        "Line" : 325,
        "CharPositionInLine" : 33
      },
      "42" : {
        "Text" : "#see qtbase/src/gui/painting/painting.pri. add -fno-integrated-as from simd.prf\n",
        "Line" : 326,
        "CharPositionInLine" : 37
      },
      "43" : {
        "Text" : "#from libvdpau-sunxi\n",
        "Line" : 327,
        "CharPositionInLine" : 40
      },
      "44" : {
        "Text" : "#CONFIG += config_vda\n\n#SOURCES *= codec/video/SurfaceInteropCVOpenGL.cpp\n",
        "Line" : 338,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "#if a platform plugin depends on egl (for example, eglfs), egl is defined\n",
        "Line" : 357,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#link against libass instead of dynamic load\n",
        "Line" : 399,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#-lfribidi -lfontconfig -lxml2 -lfreetype -lharfbuzz -lz\n",
        "Line" : 401,
        "CharPositionInLine" : 18
      },
      "48" : {
        "Text" : "# mac is -FQTDIR we need -LQTDIR\n",
        "Line" : 409,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "#dynamicgl: __impl__GetDC __impl_ReleaseDC __impl_GetDesktopWindow\n",
        "Line" : 414,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# compat with old system\n\n# use old libva.so to link against\n",
        "Line" : 421,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# do not use clock_gettime in libc, GLIBC_2.17 is not available on old system\n",
        "Line" : 423,
        "CharPositionInLine" : 37
      },
      "52" : {
        "Text" : "# libs needed by mac static ffmpeg. corefoundation: vda, avdevice. coca: vf_coreimage\n",
        "Line" : 425,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# -framework Cocoa Cocoa is not available on ios10\n",
        "Line" : 426,
        "CharPositionInLine" : 90
      },
      "54" : {
        "Text" : "#link to static lib, see http://ffmpeg.org/platform.html\n",
        "Line" : 430,
        "CharPositionInLine" : 35
      },
      "55" : {
        "Text" : "# QtAV/private/* may be used by developers to extend QtAV features without changing QtAV library\n\n# headers not in QtAV/ and it's subdirs are used only by QtAV internally\n",
        "Line" : 567,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# from mkspecs/features/qt_module.prf\n\n# OS X and iOS frameworks\n",
        "Line" : 595,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# from common.pri\n",
        "Line" : 597,
        "CharPositionInLine" : 16
      },
      "58" : {
        "Text" : "#QMAKE_FRAMEWORK_VERSION = 4.0\n",
        "Line" : 598,
        "CharPositionInLine" : 3
      },
      "59" : {
        "Text" : "#no need to install these as well\n",
        "Line" : 600,
        "CharPositionInLine" : 32
      },
      "60" : {
        "Text" : "# 5.4(beta) workaround for wrong include path\n\n# TODO: why <QtCore/qglobal.h> can be found?\n",
        "Line" : 605,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "#debian\n",
        "Line" : 627,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# we only build deb for qt5, so QT_HOST_DATA is fine. qt4 can use $$[QMAKE_MKSPECS]\n",
        "Line" : 636,
        "CharPositionInLine" : 37
      },
      "63" : {
        "Text" : "#Qt>=5\n\n#debian\n",
        "Line" : 655,
        "CharPositionInLine" : 2
      },
      "64" : {
        "Text" : "#use Qt version. limited by qmake\n\n# windows: Qt5AV.dll, not Qt1AV.dll\n",
        "Line" : 660,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 65
    },
    "tests/ao/ao.pro" : {
      "ObjectId" : "7187d100219faf2adc617fd82ae2e9ad5e6ffccb",
      "LastModified" : "2017-07-25T10:36:42Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "tests/arch/arch.pro" : {
      "ObjectId" : "a91c62e485c3c745b908ee8a6ddb9a374b04712a",
      "LastModified" : "2017-07-25T10:36:42Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#AVX\n",
        "Line" : 7,
        "CharPositionInLine" : 33
      },
      "1" : {
        "Text" : "## gcc like. can not add here otherwise other archs can not be detected\n\n#  QMAKE_CXXFLAGS *= -msse4.1\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#for gnu make\n\n#TODO: win path. shell_path()?\n",
        "Line" : 16,
        "CharPositionInLine" : 36
      },
      "CommentCount" : 3
    },
    "tests/decoder/decoder.pro" : {
      "ObjectId" : "943284e5e6c61c54ab521272cc280e9f321e8b15",
      "LastModified" : "2017-07-25T10:36:42Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "tests/extract/extract.pro" : {
      "ObjectId" : "a22cfaef7144b50ad7ebd7d0f213aa57053bd7d9",
      "LastModified" : "2017-07-25T10:36:42Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "tests/playerthread/playerthread.pro" : {
      "ObjectId" : "7cbefee9454a4914a192a694a1ef4fbea3dcf551",
      "LastModified" : "2017-07-25T10:36:42Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2014-01-28T10:24:19\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/qiodevice/qiodevice.pro" : {
      "ObjectId" : "fa2983f58b5ef464a7d252193a18cb8d8a6ad6cf",
      "LastModified" : "2017-07-25T10:36:42Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2014-01-28T10:24:19\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/qrc/qrc.pro" : {
      "ObjectId" : "c8e5c94b053d74a6d4333b9df53d716feab885bc",
      "LastModified" : "2017-07-25T10:36:42Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "tests/subtitle/subtitle.pro" : {
      "ObjectId" : "ac6cd612940c241caffdec769f51fff25d196ed3",
      "LastModified" : "2017-07-25T10:36:42Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2014-08-05T17:12:03\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/tests.pro" : {
      "ObjectId" : "fa80c09acbed51f6fd4d7adb66826f6a67c6d183",
      "LastModified" : "2017-07-25T10:36:42Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "tests/transcode/transcode.pro" : {
      "ObjectId" : "173fa546a0d7210b19fafaae62acb388b205a3cc",
      "LastModified" : "2017-07-25T10:36:42Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "tools/install_sdk/install_sdk.pro" : {
      "ObjectId" : "33a2f97d83499a9fae0fba7e594f55d71ed09c3b",
      "LastModified" : "2017-07-25T10:36:42Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#load(qt_build_config)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#MODULE_VERSION = $${QT_MAJOR_VERSION}.$${QT_MINOR_VERSION}.$${QT_PATCH_VERSION}\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#load(qt_module)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# windows: Qt5AV.dll, not Qt1AV.dll\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# copy files to a dir need '/' at the end\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#AV_PRF_CONT += \"QMAKE_LFLAGS += -lavutil -lavcodec -lavformat -lswscale\"\n\n#config_avresample: AV_PRF_CONT += \"QMAKE_LFLAGS += -lavresample\"\n\n#config_swresample: AV_PRF_CONT += \"QMAKE_LFLAGS += -lswresample\"\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# mac module with config 'lib_bundle' only include Headers dir. see qtAddModule in qt_functions.prf\n\n# but will add Qt.$${MODULE}.config to CONFIG\n\n# $$eval(QT.$${MODULE}.libs) for Qt5\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## the following is from mkspecs/features/qt_module_pris.prf\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Create a module .pri file\n",
        "Line" : 168,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# assume sufficient quoting\n",
        "Line" : 237,
        "CharPositionInLine" : 56
      },
      "10" : {
        "Text" : "# Same name as base module\n",
        "Line" : 249,
        "CharPositionInLine" : 68
      },
      "11" : {
        "Text" : "# Create a forwarding module .pri file\n",
        "Line" : 265,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# This is needed for the direct include() below. Mirrors qt_config.prf\n",
        "Line" : 285,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# Then, inject the new module into the current cache state\n",
        "Line" : 297,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# before the actual include()!\n",
        "Line" : 298,
        "CharPositionInLine" : 62
      },
      "15" : {
        "Text" : "# !build_pass\n",
        "Line" : 310,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Schedule the regular .pri file for installation\n",
        "Line" : 313,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#Qt5\n",
        "Line" : 315,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# export is required, otherwise INSTALLS is not valid\n",
        "Line" : 324,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#createForModule\n",
        "Line" : 332,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "#headers\n",
        "Line" : 344,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#qml\n",
        "Line" : 362,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# qtHaveModule does not exist in Qt5.0\n",
        "Line" : 364,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "#static qml plugin is not copied to bin/QtAV. copy it and prl\n",
        "Line" : 372,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24
    },
    "tools/qtav_app_template.pro" : {
      "ObjectId" : "5a648c96b0223ee4063eb83206b5f5ffe834c43e",
      "LastModified" : "2017-07-25T10:36:42Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# \"avwidgets\" module is required only for qwidget apps. QML apps only need \"av\" module\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#rpath for apple\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tools/tools.pro" : {
      "ObjectId" : "ddc2f8f78a5f97a330de796cd27c86aa7f06ad77",
      "LastModified" : "2017-07-25T10:36:42Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "widgets/CMakeLists.txt" : {
      "ObjectId" : "2cbe0518cb77eba4b671959803a19808063415fb",
      "LastModified" : "2017-07-25T10:36:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO: Qt5Gui_OPENGL_IMPLEMENTATION?\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add HEADERS for moc\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#LINK_SEARCH_START_STATIC 1\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#http://stackoverflow.com/questions/19866424/cmake-and-qt5-automoc-error\n\n#http://doc.qt.io/qt-5/cmake-manual.html\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# for .moc\n",
        "Line" : 71,
        "CharPositionInLine" : 34
      },
      "5" : {
        "Text" : "#PUBLIC_HEADER DESTINATION ${QTAV_INSTALL_HEADERS}/${MODULE}\n\n#PRIVATE_HEADER DESTINATION ${QTAV_INSTALL_HEADERS}/${MODULE}/private\n",
        "Line" : 92,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "widgets/libQtAVWidgets.pri" : {
      "ObjectId" : "407f553558526063c1714a856163304acde0ceea",
      "LastModified" : "2017-07-25T10:36:42Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# qmake library building template pri file\n\n# Copyright (C) 2011-2015 Wang Bin <wbsecg1@gmail.com>\n\n# Shanghai, China.\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 2 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You should have received a copy of the GNU General Public License along\n\n# with this program; if not, write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\n#\n\n############################## HOW TO ##################################\n\n# Suppose the library name is XX\n\n# Usually what you need to change are: staticlink, LIB_VERSION, NAME and DLLDESTDIR.\n\n# And rename xx-buildlib and LIBXX_PRI_INCLUDED\n\n# the contents of libXX.pro is:\n\n#    TEMPLATE = lib\n\n#    QT -= gui\n\n#    CONFIG *= xx-buildlib\n\n#    STATICLINK = 1 #optional. default is 0, i.e. dynamically link\n\n#    PROJECTROOT = $$PWD/..\n\n#    include(libXX.pri)\n\n#    preparePaths($$OUT_PWD/../out)\n\n#    HEADERS = ...\n\n#    SOURCES = ...\n\n#    ...\n\n# the content of other pro using this library is:\n\n#    TEMPLATE = app\n\n#    PROJECTROOT = $$PWD/..\n\n#    STATICLINK = 1 #or 0\n\n#    include(dir_of_XX/libXX.pri)\n\n#    preparePaths($$OUT_PWD/../out)\n\n#    HEADERS = ...\n\n#    SOURCES = ...\n\n#\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#0.x.y may be wrong for dll\n",
        "Line" : 51,
        "CharPositionInLine" : 29
      },
      "3" : {
        "Text" : "# If user haven't supplied STATICLINK, then auto-detect\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Override for ios. Dynamic link is only supported\n\n# in iOS 8.1.\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#?\n",
        "Line" : 72,
        "CharPositionInLine" : 29
      },
      "6" : {
        "Text" : "#QMAKE_LFLAGS_RPATH += #will append to rpath dir\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#eval() ?\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#The following may not need to change\n",
        "Line" : 83,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#Add your additional configuration first. e.g.\n",
        "Line" : 100,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "#\twin32: LIBS += -lUser32\n\n# The following may not need to change\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#TEMPLATE = lib\n",
        "Line" : 104,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "##I commented out this before, why?\n",
        "Line" : 108,
        "CharPositionInLine" : 38
      },
      "13" : {
        "Text" : "#\n",
        "Line" : 109,
        "CharPositionInLine" : 29
      },
      "14" : {
        "Text" : "#win32-msvc*\n",
        "Line" : 110,
        "CharPositionInLine" : 45
      },
      "15" : {
        "Text" : "##otherwise the following shared is true, why?\n",
        "Line" : 112,
        "CharPositionInLine" : 23
      },
      "16" : {
        "Text" : "#shared includes dll\n",
        "Line" : 115,
        "CharPositionInLine" : 19
      },
      "17" : {
        "Text" : "#copy shared lib there\n",
        "Line" : 120,
        "CharPositionInLine" : 77
      },
      "18" : {
        "Text" : "#copy from the pro creator creates.\n",
        "Line" : 123,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 19
    },
    "widgets/libQtAVWidgets.pro" : {
      "ObjectId" : "7c60148e9485767118411fc7cd42118b002cb418",
      "LastModified" : "2017-07-25T10:36:42Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# for mac framework. also used in install_sdk.pro\n",
        "Line" : 2,
        "CharPositionInLine" : 29
      },
      "1" : {
        "Text" : "# qtHaveModule does not exist in Qt5.0\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#release: DEFINES += QT_NO_DEBUG_OUTPUT\n\n#var with '_' can not pass to pri?\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#no depends for rc file by default, even if rc includes a header. Makefile target use '/' as default, so not works iwth win cmd\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#rc obj depends on clean path target\n",
        "Line" : 34,
        "CharPositionInLine" : 40
      },
      "5" : {
        "Text" : "#why use multiple rule failed? i.e. add a rule without command\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#change file time\n",
        "Line" : 38,
        "CharPositionInLine" : 59
      },
      "7" : {
        "Text" : "#change file time\n",
        "Line" : 40,
        "CharPositionInLine" : 39
      },
      "8" : {
        "Text" : "#dynamicgl: __impl__GetDC __impl_ReleaseDC\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#dynamicgl does not support old gl1 functions which used in GLWidgetRenderer\n",
        "Line" : 81,
        "CharPositionInLine" : 36
      },
      "10" : {
        "Text" : "#GLWidgetRenderer depends on internal functions of QtAV\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#DEFINES *= QTAV_HAVE_GL1\n\n#SOURCES += GLWidgetRenderer.cpp\n\n#SDK_HEADERS += QtAVWidgets/GLWidgetRenderer.h\n",
        "Line" : 83,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "#LIBS += -lD2d1\n",
        "Line" : 97,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# QtAV/private/* may be used by developers to extend QtAV features without changing QtAV library\n\n# headers not in QtAV/ and it's subdirs are used only by QtAV internally\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# from mkspecs/features/qt_module.prf\n\n# OS X and iOS frameworks\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# from common.pri\n",
        "Line" : 117,
        "CharPositionInLine" : 16
      },
      "16" : {
        "Text" : "#QMAKE_FRAMEWORK_VERSION = 4.0\n",
        "Line" : 118,
        "CharPositionInLine" : 3
      },
      "17" : {
        "Text" : "#no need to install these as well\n",
        "Line" : 120,
        "CharPositionInLine" : 32
      },
      "18" : {
        "Text" : "# 5.4(beta) workaround for wrong include path\n\n# TODO: why <QtCore/qglobal.h> can be found?\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#debian\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#like qtmultimedia5-dev, contains widgets headers\n",
        "Line" : 155,
        "CharPositionInLine" : 42
      },
      "21" : {
        "Text" : "#like qtmultimedia5-dev, contains widgets .so\n",
        "Line" : 161,
        "CharPositionInLine" : 48
      },
      "22" : {
        "Text" : "#Qt>=5\n\n#debian\n",
        "Line" : 165,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "#use Qt version. limited by qmake\n\n# windows: Qt5AV.dll, not Qt1AV.dll\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24
    }
  },
  "FileTypes" : {
    "CMAKE" : 7,
    "QMAKE" : 82
  },
  "ElapsedTime" : 7171
}