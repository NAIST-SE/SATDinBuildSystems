{
  "Repository" : "8246028",
  "Revision" : "HEAD",
  "ObjectId" : "b023b818c742cee0bc75460235c9d1088c0b495d",
  "CommitTime" : "2019-04-18T19:15:28Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "4df101f23a3c65b20403f8d48000b12b72e77aad",
      "LastModified" : "2019-03-27T19:18:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set minimum version\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# use our own version of FindBoost.cmake and other Find* scripts\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# function to remove a flag from a variable\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Options\n\n#\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Adhere to GNU filesystem layout conventions\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Path options\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#Game options\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#server options\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#build options\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# set what std version to use\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\tfind_package(OpenGL REQUIRED)\n\n#\tfind_package(GLEW REQUIRED)\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# no, gettext executables are not required when NLS is deactivated\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# needed to get some SDL2 defines in... (as of rev31694 -D_GNU_SOURCE=1 is required!)\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Use the safer `mkstemp' instead of `tmpnam' on POSIX systems.\n",
        "Line" : 91,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "#check for some compiler/arch specific things and export defines accordingly...\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# if no build type is specified, it can happen that the game is built without\n\n# optimization (c.f. bug #23445), work around this by enforcing \"release\" type\n\n# if nothing was selected\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Test whether the code is used in a repository if not autorevision will\n\n# fail and should be disabled by default. If inside a repository enable\n\n# the display of revision numbers by default.\n",
        "Line" : 106,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "# The use of shared libraries makes compilation debug versions faster but\n\n# results in extra shared libraries. For installation this is not practical\n\n# since the libraries need to be given SONAMES and kept in sync. Therefore\n\n# installation is not supported for this option and will probably fail.\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#\n\n# Handle options (set paths/definitions/etc...)\n\n#\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "### Set the environment compiler flags.\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# The CONFIGURED flag was replaced when trunk `was' 1.11, before the release of 1.11.0\n",
        "Line" : 178,
        "CharPositionInLine" : 1
      },
      "21" : {
        "Text" : "### Set strict compiler flags.\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "### Set pedantic compiler flags.\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# check for sanitizer options\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# manually disable some optimizations to get better stacktraces if sanitizers are used\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "### Set the final compiler flags.\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# #\n\n# Determine optimization level\n\n# #\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# check for hardening options\n",
        "Line" : 281,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Assume the compiler is the clang compiler.\n",
        "Line" : 298,
        "CharPositionInLine" : 1
      },
      "29" : {
        "Text" : "# -DNDEBUG is automatically added to all release build types, so manually remove this define from the related variables\n",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# -rdynamic is automatically added, but we don't need it, and it increases the executable size\n",
        "Line" : 318,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# #\n\n# Start determining options for Release build\n\n# #\n",
        "Line" : 322,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# reset the base Release build option\n",
        "Line" : 326,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# set the arch to use for Release build if provided\n",
        "Line" : 331,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# add pentiumpro arch for windows builds with -O3 if no other arch provided, otherwise resulting executable may not work\n",
        "Line" : 337,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# PGO and LTO for GCC\n",
        "Line" : 344,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# PGO and LTO for Clang\n",
        "Line" : 373,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# set CMAKE_AR and CMAKE_RANLIB to use LTO-enabled variants if LTO is enabled\n",
        "Line" : 397,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# add in extra flags\n",
        "Line" : 413,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# clean the pgo data\n",
        "Line" : 416,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# #\n\n# End determining options for Release build\n\n# Start setting options for Debug build\n\n# #\n",
        "Line" : 419,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# replace the default Debug flag of -g with -O0 -DDEBUG -ggdb3\n\n# this matches the flags of scons' debug build\n",
        "Line" : 424,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# adds GLIBCXX_DEBUG definitions\n",
        "Line" : 431,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# #\n\n# End setting options for Debug build\n\n# Start setting options for Profile build\n\n# #\n",
        "Line" : 438,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# #\n\n# End setting options for Profile build\n\n# #\n",
        "Line" : 471,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# When the path starts with a / on a Unix system it's an absolute path.\n\n# This means that on Windows the path used is always relative.\n",
        "Line" : 475,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#\n\n# Libraries that are only required by some targets\n\n#\n",
        "Line" : 504,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# get languages\n",
        "Line" : 564,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "#\n\n# Include subdirectories\n\n#\n",
        "Line" : 571,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "#\n\n# Install files\n\n#\n",
        "Line" : 583,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# install file for add-ons server\n",
        "Line" : 590,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "#\n\n# Install desktop file so wesnoth appears in the application start menu with an icon\n\n#\n",
        "Line" : 595,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# Index for checking states of localized images at runtime.\n",
        "Line" : 614,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "#\n\n# uninstall\n\n#\n",
        "Line" : 619,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "#\n\n# Packaging stuff\n\n#\n",
        "Line" : 633,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 55
    },
    "cmake/FindCrypto.cmake" : {
      "ObjectId" : "ff7ad6ed4e10af85b6bfb7267de6455b7b7c2969",
      "LastModified" : "2018-10-07T03:19:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# OpenSSL crypto library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set XXX_FOUND to TRUE if all listed variables are TRUE\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindGLEW.cmake" : {
      "ObjectId" : "11e872446783729cf0fe5982f265eb044f756d86",
      "LastModified" : "2018-10-07T03:20:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindGLEW\n\n# --------\n\n#\n\n# Find the OpenGL Extension Wrangler Library (GLEW)\n\n#\n\n# IMPORTED Targets\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the :prop_tgt:`IMPORTED` target ``GLEW::GLEW``,\n\n# if GLEW has been found.\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the following variables:\n\n#\n\n# ::\n\n#\n\n#   GLEW_INCLUDE_DIRS - include directories for GLEW\n\n#   GLEW_LIBRARIES - libraries to link against GLEW\n\n#   GLEW_FOUND - true if GLEW has been found and can be used\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindHistory.cmake" : {
      "ObjectId" : "7bf99f25ac3334a74ef620a41685a4d975fd777c",
      "LastModified" : "2018-10-07T03:20:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locale GNU history library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set XXX_FOUND to TRUE if all listed variables are TRUE\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindOpenGL.cmake" : {
      "ObjectId" : "906349273a4d73aa9b49484ec5ed5665e1126255",
      "LastModified" : "2018-10-07T03:20:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindOpenGL\n\n# ----------\n\n#\n\n# FindModule for OpenGL and GLU.\n\n#\n\n# Optional COMPONENTS\n\n# ^^^^^^^^^^^^^^^^^^^\n\n#\n\n# This module respects several optional COMPONENTS: ``EGL``, ``GLX``, and\n\n# ``OpenGL``.  There are corresponding import targets for each of these flags.\n\n#\n\n# IMPORTED Targets\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the :prop_tgt:`IMPORTED` targets:\n\n#\n\n# ``OpenGL::GL``\n\n#  Defined to the platform-specific OpenGL libraries if the system has OpenGL.\n\n# ``OpenGL::OpenGL``\n\n#  Defined to libOpenGL if the system is GLVND-based.\n\n#  ``OpenGL::GL``\n\n# ``OpenGL::GLU``\n\n#  Defined if the system has GLU.\n\n# ``OpenGL::GLX``\n\n#  Defined if the system has GLX.\n\n# ``OpenGL::EGL``\n\n#  Defined if the system has EGL.\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module sets the following variables:\n\n#\n\n# ``OPENGL_FOUND``\n\n#  True, if the system has OpenGL and all components are found.\n\n# ``OPENGL_XMESA_FOUND``\n\n#  True, if the system has XMESA.\n\n# ``OPENGL_GLU_FOUND``\n\n#  True, if the system has GLU.\n\n# ``OpenGL_OpenGL_FOUND``\n\n#  True, if the system has an OpenGL library.\n\n# ``OpenGL_GLX_FOUND``\n\n#  True, if the system has GLX.\n\n# ``OpenGL_EGL_FOUND``\n\n#  True, if the system has EGL.\n\n# ``OPENGL_INCLUDE_DIR``\n\n#  Path to the OpenGL include directory.\n\n# ``OPENGL_EGL_INCLUDE_DIRS``\n\n#  Path to the EGL include directory.\n\n# ``OPENGL_LIBRARIES``\n\n#  Paths to the OpenGL library, windowing system libraries, and GLU libraries.\n\n#  On Linux, this assumes GLX and is never correct for EGL-based targets.\n\n#  Clients are encouraged to use the ``OpenGL::*`` import targets instead.\n\n#\n\n# Cache variables\n\n# ^^^^^^^^^^^^^^^\n\n#\n\n# The following cache variables may also be set:\n\n#\n\n# ``OPENGL_egl_LIBRARY``\n\n#  Path to the EGL library.\n\n# ``OPENGL_glu_LIBRARY``\n\n#  Path to the GLU library.\n\n# ``OPENGL_glx_LIBRARY``\n\n#  Path to the GLVND 'GLX' library.\n\n# ``OPENGL_opengl_LIBRARY``\n\n#  Path to the GLVND 'OpenGL' library\n\n# ``OPENGL_gl_LIBRARY``\n\n#  Path to the OpenGL library.  New code should prefer the ``OpenGL::*`` import\n\n#  targets.\n\n#\n\n# Linux-specific\n\n# ^^^^^^^^^^^^^^\n\n#\n\n# Some Linux systems utilize GLVND as a new ABI for OpenGL.  GLVND separates\n\n# context libraries from OpenGL itself; OpenGL lives in \"libOpenGL\", and\n\n# contexts are defined in \"libGLX\" or \"libEGL\".  GLVND is currently the only way\n\n# to get OpenGL 3+ functionality via EGL in a manner portable across vendors.\n\n# Projects may use GLVND explicitly with target ``OpenGL::OpenGL`` and either\n\n# ``OpenGL::GLX`` or ``OpenGL::EGL``.\n\n#\n\n# Projects may use the ``OpenGL::GL`` target (or ``OPENGL_LIBRARIES`` variable)\n\n# to use legacy GL interfaces.  These will use the legacy GL library located\n\n# by ``OPENGL_gl_LIBRARY``, if available.  If ``OPENGL_gl_LIBRARY`` is empty or\n\n# not found and GLVND is available, the ``OpenGL::GL`` target will use GLVND\n\n# ``OpenGL::OpenGL`` and ``OpenGL::GLX`` (and the ``OPENGL_LIBRARIES``\n\n# variable will use the corresponding libraries).  Thus, for non-EGL-based\n\n# Linux targets, the ``OpenGL::GL`` target is most portable.\n\n#\n\n# A ``OpenGL_GL_PREFERENCE`` variable may be set to specify the preferred way\n\n# to provide legacy GL interfaces in case multiple choices are available.\n\n# The value may be one of:\n\n#\n\n# ``GLVND``\n\n#  If the GLVND OpenGL and GLX libraries are available, prefer them.\n\n#  This forces ``OPENGL_gl_LIBRARY`` to be empty.\n\n#  This is the default if components were requested (since components\n\n#  correspond to GLVND libraries).\n\n#\n\n# ``LEGACY``\n\n#  Prefer to use the legacy libGL library, if available.\n\n#  This is the default if no components were requested.\n\n#\n\n# For EGL targets the client must rely on GLVND support on the user's system.\n\n# Linking should use the ``OpenGL::OpenGL OpenGL::EGL`` targets.  Using GLES*\n\n# libraries is theoretically possible in place of ``OpenGL::OpenGL``, but this\n\n# module does not currently support that; contributions welcome.\n\n#\n\n# ``OPENGL_egl_LIBRARY`` and ``OPENGL_EGL_INCLUDE_DIRS`` are defined in the case of\n\n# GLVND.  For non-GLVND Linux and other systems these are left undefined.\n\n#\n\n# macOS-Specific\n\n# ^^^^^^^^^^^^^^\n\n#\n\n# On OSX FindOpenGL defaults to using the framework version of OpenGL. People\n\n# will have to change the cache values of OPENGL_glu_LIBRARY and\n\n# OPENGL_gl_LIBRARY to use OpenGL with X11 on OSX.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Provide OPENGL_USE_<C> variables for each component.\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The OpenGL.framework provides both gl and glu\n",
        "Line" : 149,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Handle HP-UX cases where we only want to find OpenGL in either hpux64\n\n# or hpux32 depending on if we're doing a 64 bit build.\n",
        "Line" : 158,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# The first line below is to make sure that the proper headers\n\n# are used on a Linux machine with the NVidia drivers installed.\n\n# They replace Mesa with NVidia's own library but normally do not\n\n# install headers and that causes the linking to\n\n# fail since the compiler finds the Mesa headers but NVidia's library.\n\n# Make sure the NVIDIA directory comes BEFORE the others.\n\n#  - Atanas Georgiev <atanas@cs.columbia.edu>\n",
        "Line" : 175,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Search for the GLVND libraries.  We do this regardless of COMPONENTS; we'll\n\n# take into account the COMPONENTS logic later.\n",
        "Line" : 196,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# A preference has been explicitly specified.\n",
        "Line" : 227,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# No preference was explicitly specified, but the caller did request\n\n# at least one GLVND component.  Prefer GLVND for legacy GL.\n",
        "Line" : 235,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# No preference was explicitly specified and no GLVND components were\n\n# requested.  Prefer libGL for legacy GL.\n",
        "Line" : 239,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# We can provide legacy GL using GLVND libraries.\n\n# Do not use any legacy GL library.\n",
        "Line" : 245,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# We cannot provide legacy GL using GLVND libraries.\n\n# Search for the legacy GL library.\n",
        "Line" : 249,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# FPHSA cannot handle \"this OR that is required\", so we conditionally set what\n\n# it must look for.  First clear any previous config we might have done:\n",
        "Line" : 260,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# now we append the libraries as appropriate.  The complicated logic\n\n# basically comes down to \"use libOpenGL when we can, and add in specific\n\n# context mechanisms when requested, or we need them to preserve the previous\n\n# default where glx is always available.\"\n",
        "Line" : 264,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# GLVND GLX library.  Preferred when available.\n",
        "Line" : 282,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# GLVND EGL library.\n",
        "Line" : 299,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Old-style \"libGL\" library: used as a fallback when GLVND isn't available.\n",
        "Line" : 304,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# We always need the 'gl.h' include dir.\n",
        "Line" : 315,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# OpenGL_OpenGL_FOUND is a bit unique in that it is okay if /either/ libOpenGL\n\n# or libGL is found.\n\n# Using libGL with libEGL is never okay, though; we handle that case later.\n",
        "Line" : 342,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# User-visible names should be plural.\n",
        "Line" : 363,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# OpenGL:: targets\n",
        "Line" : 373,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# ::OpenGL is a GLVND library, and thus Linux-only: we don't bother checking\n\n# for a framework version of this library.\n",
        "Line" : 375,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# ::GLX is a GLVND library, and thus Linux-only: we don't bother checking\n\n# for a framework version of this library.\n",
        "Line" : 391,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# A legacy GL library is available, so use it for the legacy GL target.\n",
        "Line" : 410,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# A legacy GL library is not available, but we can provide the legacy GL\n\n# target using GLVND OpenGL+GLX.\n",
        "Line" : 432,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# ::EGL is a GLVND library, and thus Linux-only: we don't bother checking\n\n# for a framework version of this library.\n\n# Note we test for OpenGL::OpenGL as a target.  When this module is updated to\n\n# support GLES, we would additionally want to check for the hypothetical GLES\n\n# target and enable EGL if either ::GLES or ::OpenGL is created.\n",
        "Line" : 443,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Note that EGL's include directory is different from OpenGL/GLX's!\n",
        "Line" : 460,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# OPENGL_LIBRARIES mirrors OpenGL::GL's logic ...\n",
        "Line" : 488,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# ... and also includes GLU, if available.\n",
        "Line" : 496,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# This deprecated setting is for backward compatibility with CMake1.4\n",
        "Line" : 502,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# This deprecated setting is for backward compatibility with CMake1.4\n",
        "Line" : 504,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 31
    },
    "cmake/FindPackageHandleStandardArgs.cmake" : {
      "ObjectId" : "67f6bd6f2bcd1a0313078a28a07cc584df7b885b",
      "LastModified" : "2018-10-07T03:20:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[=======================================================================[.rst:\nFindPackageHandleStandardArgs\n-----------------------------\n\nThis module provides a function intended to be used in :ref:`Find Modules`\nimplementing :command:`find_package(<PackageName>)` calls.  It handles the\n``REQUIRED``, ``QUIET`` and version-related arguments of ``find_package``.\nIt also sets the ``<PackageName>_FOUND`` variable.  The package is\nconsidered found if all variables listed contain valid results, e.g.\nvalid filepaths.\n\n.. command:: find_package_handle_standard_args\n\n  There are two signatures::\n\n    find_package_handle_standard_args(<PackageName>\n      (DEFAULT_MSG|<custom-failure-message>)\n      <required-var>...\n      )\n\n    find_package_handle_standard_args(<PackageName>\n      [FOUND_VAR <result-var>]\n      [REQUIRED_VARS <required-var>...]\n      [VERSION_VAR <version-var>]\n      [HANDLE_COMPONENTS]\n      [CONFIG_MODE]\n      [FAIL_MESSAGE <custom-failure-message>]\n      )\n\n  The ``<PackageName>_FOUND`` variable will be set to ``TRUE`` if all\n  the variables ``<required-var>...`` are valid and any optional\n  constraints are satisfied, and ``FALSE`` otherwise.  A success or\n  failure message may be displayed based on the results and on\n  whether the ``REQUIRED`` and/or ``QUIET`` option was given to\n  the :command:`find_package` call.\n\n  The options are:\n\n  ``(DEFAULT_MSG|<custom-failure-message>)``\n    In the simple signature this specifies the failure message.\n    Use ``DEFAULT_MSG`` to ask for a default message to be computed\n    (recommended).  Not valid in the full signature.\n\n  ``FOUND_VAR <result-var>``\n    Obsolete.  Specifies either ``<PackageName>_FOUND`` or\n    ``<PACKAGENAME>_FOUND`` as the result variable.  This exists only\n    for compatibility with older versions of CMake and is now ignored.\n    Result variables of both names are always set for compatibility.\n\n  ``REQUIRED_VARS <required-var>...``\n    Specify the variables which are required for this package.\n    These may be named in the generated failure message asking the\n    user to set the missing variable values.  Therefore these should\n    typically be cache entries such as ``FOO_LIBRARY`` and not output\n    variables like ``FOO_LIBRARIES``.\n\n  ``VERSION_VAR <version-var>``\n    Specify the name of a variable that holds the version of the package\n    that has been found.  This version will be checked against the\n    (potentially) specified required version given to the\n    :command:`find_package` call, including its ``EXACT`` option.\n    The default messages include information about the required\n    version and the version which has been actually found, both\n    if the version is ok or not.\n\n  ``HANDLE_COMPONENTS``\n    Enable handling of package components.  In this case, the command\n    will report which components have been found and which are missing,\n    and the ``<PackageName>_FOUND`` variable will be set to ``FALSE``\n    if any of the required components (i.e. not the ones listed after\n    the ``OPTIONAL_COMPONENTS`` option of :command:`find_package`) are\n    missing.\n\n  ``CONFIG_MODE``\n    Specify that the calling find module is a wrapper around a\n    call to ``find_package(<PackageName> NO_MODULE)``.  This implies\n    a ``VERSION_VAR`` value of ``<PackageName>_VERSION``.  The command\n    will automatically check whether the package configuration file\n    was found.\n\n  ``FAIL_MESSAGE <custom-failure-message>``\n    Specify a custom failure message instead of using the default\n    generated message.  Not recommended.\n\nExample for the simple signature:\n\n.. code-block:: cmake\n\n  find_package_handle_standard_args(LibXml2 DEFAULT_MSG\n    LIBXML2_LIBRARY LIBXML2_INCLUDE_DIR)\n\nThe ``LibXml2`` package is considered to be found if both\n``LIBXML2_LIBRARY`` and ``LIBXML2_INCLUDE_DIR`` are valid.\nThen also ``LibXml2_FOUND`` is set to ``TRUE``.  If it is not found\nand ``REQUIRED`` was used, it fails with a\n:command:`message(FATAL_ERROR)`, independent whether ``QUIET`` was\nused or not.  If it is found, success will be reported, including\nthe content of the first ``<required-var>``.  On repeated CMake runs,\nthe same message will not be printed again.\n\nExample for the full signature:\n\n.. code-block:: cmake\n\n  find_package_handle_standard_args(LibArchive\n    REQUIRED_VARS LibArchive_LIBRARY LibArchive_INCLUDE_DIR\n    VERSION_VAR LibArchive_VERSION)\n\nIn this case, the ``LibArchive`` package is considered to be found if\nboth ``LibArchive_LIBRARY`` and ``LibArchive_INCLUDE_DIR`` are valid.\nAlso the version of ``LibArchive`` will be checked by using the version\ncontained in ``LibArchive_VERSION``.  Since no ``FAIL_MESSAGE`` is given,\nthe default messages will be printed.\n\nAnother example for the full signature:\n\n.. code-block:: cmake\n\n  find_package(Automoc4 QUIET NO_MODULE HINTS /opt/automoc4)\n  find_package_handle_standard_args(Automoc4  CONFIG_MODE)\n\nIn this case, a ``FindAutmoc4.cmake`` module wraps a call to\n``find_package(Automoc4 NO_MODULE)`` and adds an additional search\ndirectory for ``automoc4``.  Then the call to\n``find_package_handle_standard_args`` produces a proper success/failure\nmessage.\n#]=======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# internal helper macro\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# internal helper macro to generate the failure message when used in CONFIG_MODE:\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# <name>_CONFIG is set, but FOUND is false, this means that some other of the REQUIRED_VARS was not found:\n",
        "Line" : 148,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# If _CONSIDERED_CONFIGS is set, the config-file has been found, but no suitable version.\n\n# List them all in the error message:\n",
        "Line" : 152,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Simple case: No Config-file was found at all:\n",
        "Line" : 169,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# Set up the arguments for `cmake_parse_arguments`.\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Check whether we are in 'simple' or 'extended' mode:\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# In config-mode, we rely on the variable <package>_CONFIG, which is set by find_package()\n\n# when it successfully found the config-file, including version checking:\n",
        "Line" : 202,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# now that we collected all arguments, process them\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# collect all variables which were not found, so they can be printed, so the\n\n# user knows better what went wrong (#6375)\n",
        "Line" : 236,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# check if all passed variables are valid\n",
        "Line" : 240,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# component handling\n",
        "Line" : 258,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# version handling:\n",
        "Line" : 289,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# check with DEFINED here as the requested or found version may be \"0\"\n",
        "Line" : 293,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# exact version required\n",
        "Line" : 298,
        "CharPositionInLine" : 44
      },
      "17" : {
        "Text" : "# count the dots in the version string\n",
        "Line" : 299,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# add one dot because there is one dot more than there are components\n",
        "Line" : 301,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# Because of the C++ implementation of find_package() ${_NAME}_FIND_VERSION_COUNT\n\n# is at most 4 here. Therefore a simple lookup table is used.\n",
        "Line" : 304,
        "CharPositionInLine" : 10
      },
      "20" : {
        "Text" : "# minimum version specified:\n",
        "Line" : 334,
        "CharPositionInLine" : 17
      },
      "21" : {
        "Text" : "# if the package was not found, but a version was given, add that to the output:\n",
        "Line" : 345,
        "CharPositionInLine" : 6
      },
      "22" : {
        "Text" : "# Check with DEFINED as the found version may be 0.\n",
        "Line" : 354,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# print the result:\n",
        "Line" : 367,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 24
    },
    "cmake/FindPackageMessage.cmake" : {
      "ObjectId" : "6821cee4f77a9d84c74f2c140870a2163ae5a5f0",
      "LastModified" : "2018-10-07T03:20:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindPackageMessage\n\n# ------------------\n\n#\n\n#\n\n#\n\n# FIND_PACKAGE_MESSAGE(<name> \"message for user\" \"find result details\")\n\n#\n\n# This macro is intended to be used in FindXXX.cmake modules files.  It\n\n# will print a message once for each unique find result.  This is useful\n\n# for telling the user where a package was found.  The first argument\n\n# specifies the name (XXX) of the package.  The second argument\n\n# specifies the message to display.  The third argument lists details\n\n# about the find result so that if they change the message will be\n\n# displayed again.  The macro also obeys the QUIET argument to the\n\n# find_package command.\n\n#\n\n# Example:\n\n#\n\n# ::\n\n#\n\n#   if(X11_FOUND)\n\n#     FIND_PACKAGE_MESSAGE(X11 \"Found X11: ${X11_X11_LIB}\"\n\n#       \"[${X11_X11_LIB}][${X11_INCLUDE_DIR}]\")\n\n#   else()\n\n#    ...\n\n#   endif()\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Avoid printing a message repeatedly for the same find result.\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# The message has not yet been printed.\n",
        "Line" : 38,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# Save the find details in the cache to avoid printing the same\n\n# message again.\n",
        "Line" : 41,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 5
    },
    "cmake/FindSDL2.cmake" : {
      "ObjectId" : "a1e70fed57b8630be3ba0c763d12a4a48b80ece3",
      "LastModified" : "2018-10-07T03:20:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindSDL2\n\n# -------\n\n#\n\n# Locate SDL2 library\n\n#\n\n# This module defines\n\n#\n\n# ::\n\n#\n\n#   SDL2_LIBRARY, the name of the library to link against\n\n#   SDL2_FOUND, if false, do not try to link to SDL2\n\n#   SDL2_INCLUDE_DIR, where to find SDL2.h\n\n#   SDL2_VERSION_STRING, human-readable string containing the version of SDL2\n\n#\n\n#\n\n#\n\n# This module responds to the flag:\n\n#\n\n# ::\n\n#\n\n#   SDL2_BUILDING_LIBRARY\n\n#     If this is defined, then no SDL2_main will be linked in because\n\n#     only applications need main().\n\n#     Otherwise, it is assumed you are building an application and this\n\n#     module will attempt to locate and set the proper link flags\n\n#     as part of the returned SDL2_LIBRARY variable.\n\n#\n\n#\n\n#\n\n# Don't forget to include SDL2main.h and SDL2main.m your project for the\n\n# OS X framework based version.  (Other versions link to -lSDL2main which\n\n# this module will try to find on your behalf.) Also for OS X, this\n\n# module will automatically add the -framework Cocoa on your behalf.\n\n#\n\n#\n\n#\n\n# Additional Note: If you see an empty SDL2_LIBRARY_TEMP in your\n\n# configuration and no SDL2_LIBRARY, it means CMake did not find your SDL2\n\n# library (SDL2.dll, libsdl.so, SDL2.framework, etc).  Set\n\n# SDL2_LIBRARY_TEMP to point to your SDL2 library, and configure again.\n\n# Similarly, if you see an empty SDL2MAIN_LIBRARY, you should set this\n\n# value as appropriate.  These values are used to generate the final\n\n# SDL2_LIBRARY variable, but when these values are unset, SDL2_LIBRARY\n\n# does not get created.\n\n#\n\n#\n\n#\n\n# $SDL2DIR is an environment variable that would correspond to the\n\n# ./configure --prefix=$SDL2DIR used in building SDL2.  l.e.galup 9-20-02\n\n#\n\n# Modified by Eric Wing.  Added code to assist with automated building\n\n# by using environmental variables and providing a more\n\n# controlled/consistent search behavior.  Added new modifications to\n\n# recognize OS X frameworks and additional Unix paths (FreeBSD, etc).\n\n# Also corrected the header search path to follow \"proper\" SDL2\n\n# guidelines.  Added a search for SDL2main which is needed by some\n\n# platforms.  Added a search for threads which is needed by some\n\n# platforms.  Added needed compile switches for MinGW.\n\n#\n\n# On OSX, this will prefer the Framework version (if found) over others.\n\n# People will have to manually change the cache values of SDL2_LIBRARY to\n\n# override this selection or set the CMake environment\n\n# CMAKE_INCLUDE_PATH to modify the search paths.\n\n#\n\n# Note that the header path has changed from SDL2/SDL.h to just SDL.h\n\n# This needed to change because \"proper\" SDL convention is #include\n\n# \"SDL.h\", not <SDL2/SDL.h>.  This is done for portability reasons\n\n# because not all systems place things in SDL/ (see FreeBSD).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2003-2009 Kitware, Inc.\n\n# Copyright 2012 Benjamin Eikel\n\n# Copyright 2015 Andreas Löf\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n#\n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n#=============================================================================\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# path suffixes to search inside ENV{SDLDIR}\n",
        "Line" : 111,
        "CharPositionInLine" : 16
      },
      "3" : {
        "Text" : "# Non-OS X framework versions expect you to also dynamically link to\n\n# SDLmain. This is mainly for Windows and OS X. Other (Unix) platforms\n\n# seem to provide SDLmain for compatibility even though they don't\n\n# necessarily need it.\n",
        "Line" : 130,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# SDL2 may require threads on your system.\n\n# The Apple build may not need an explicit flag because one of the\n\n# frameworks may already provide it.\n\n# But for non-OSX systems, I will use the CMake Threads package.\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# MinGW needs an additional library, mwindows\n\n# It's total link flags should look like -lmingw32 -lSDL2main -lSDL2 -lmwindows\n\n# (Actually on second look, I think it only needs one of the m* libraries.)\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# For SDL2main\n",
        "Line" : 164,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# For OS X, SDL2 uses Cocoa as a backend so it must link to Cocoa.\n\n# CMake doesn't display the -framework Cocoa string in the UI even\n\n# though it actually is there if I modify a pre-used variable.\n\n# I think it has something to do with the CACHE STRING.\n\n# So I use a temporary variable until the end so I can set the\n\n# \"real\" variable in one-shot.\n",
        "Line" : 173,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# For threads, as mentioned Apple doesn't need this.\n\n# In fact, there seems to be a problem if I used the Threads package\n\n# and try using this line, so I'm just skipping it entirely for OS X.\n",
        "Line" : 183,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# For MinGW library\n",
        "Line" : 190,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Set the final string here so the GUI reflects the final state.\n",
        "Line" : 195,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Set the temp variable to INTERNAL so it is not seen in the CMake GUI\n",
        "Line" : 197,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 12
    },
    "cmake/FindSDL2_image.cmake" : {
      "ObjectId" : "ea4767b4097b208237ceaf4aefe09c6eff112dfe",
      "LastModified" : "2018-10-07T03:20:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindSDL2_image\n\n# -------------\n\n#\n\n# Locate SDL2_image library\n\n#\n\n# This module defines:\n\n#\n\n# ::\n\n#\n\n#   SDL2_IMAGE_LIBRARIES, the name of the library to link against\n\n#   SDL2_IMAGE_INCLUDE_DIRS, where to find the headers\n\n#   SDL2_IMAGE_FOUND, if false, do not try to link against\n\n#   SDL2_IMAGE_VERSION_STRING - human-readable string containing the\n\n#                              version of SDL2_image\n\n#\n\n#\n\n#\n\n# For backward compatiblity the following variables are also set:\n\n#\n\n# ::\n\n#\n\n#   SDL2IMAGE_LIBRARY (same value as SDL2_IMAGE_LIBRARIES)\n\n#   SDL2IMAGE_INCLUDE_DIR (same value as SDL2_IMAGE_INCLUDE_DIRS)\n\n#   SDL2IMAGE_FOUND (same value as SDL2_IMAGE_FOUND)\n\n#\n\n#\n\n#\n\n# $SDL2DIR is an environment variable that would correspond to the\n\n# ./configure --prefix=$SDL2DIR used in building SDL2.\n\n#\n\n# Created by Andreas Löf.  This was influenced by the FindSDL_image.cmake\n\n# module, but with modifications to use SDL2.\n\n#\n\n#=============================================================================\n\n# Copyright 2005-2009 Kitware, Inc.\n\n# Copyright 2012 Benjamin Eikel\n\n# Copyright 2015 Andreas Löf\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n#\n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# path suffixes to search inside ENV{SDL2DIR}\n",
        "Line" : 79,
        "CharPositionInLine" : 16
      },
      "2" : {
        "Text" : "# for backward compatiblity\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/FindSDL2_mixer.cmake" : {
      "ObjectId" : "2a3d6c5879c849adb6bb1c4303021644585ad322",
      "LastModified" : "2018-10-07T03:20:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindSDL2_mixer\n\n# -------------\n\n#\n\n# Locate SDL2_mixer library\n\n#\n\n# This module defines:\n\n#\n\n# ::\n\n#\n\n#   SDL2_MIXER_LIBRARIES, the name of the library to link against\n\n#   SDL2_MIXER_INCLUDE_DIRS, where to find the headers\n\n#   SDL2_MIXER_FOUND, if false, do not try to link against\n\n#   SDL2_MIXER_VERSION_STRING - human-readable string containing the\n\n#                              version of SDL2_mixer\n\n#\n\n#\n\n#\n\n# For backward compatiblity the following variables are also set:\n\n#\n\n# ::\n\n#\n\n#   SDL2MIXER_LIBRARY (same value as SDL2_MIXER_LIBRARIES)\n\n#   SDL2MIXER_INCLUDE_DIR (same value as SDL2_MIXER_INCLUDE_DIRS)\n\n#   SDL2MIXER_FOUND (same value as SDL2_MIXER_FOUND)\n\n#\n\n#\n\n#\n\n# $SDL2DIR is an environment variable that would correspond to the\n\n# ./configure --prefix=$SDL2DIR used in building SDL2.\n\n#\n\n# Created by Andreas Löf.  This was influenced by the FindSDL_mixer.cmake\n\n# module, but with modifications to use SDL2.\n\n#\n\n#=============================================================================\n\n# Copyright 2005-2009 Kitware, Inc.\n\n# Copyright 2012 Benjamin Eikel\n\n# Copyright 2015 Andreas Löf\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n#\n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# path suffixes to search inside ENV{SDL2DIR}\n",
        "Line" : 79,
        "CharPositionInLine" : 16
      },
      "2" : {
        "Text" : "# for backward compatiblity\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/FindSDL2_ttf.cmake" : {
      "ObjectId" : "ef05d61185713d44a40a8a1a9d408ae4334a63cc",
      "LastModified" : "2018-10-07T03:20:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindSDL2_ttf\n\n# -----------\n\n#\n\n# Locate SDL2_ttf library\n\n#\n\n# This module defines:\n\n#\n\n# ::\n\n#\n\n#   SDL2_TTF_LIBRARIES, the name of the library to link against\n\n#   SDL2_TTF_INCLUDE_DIRS, where to find the headers\n\n#   SDL2_TTF_FOUND, if false, do not try to link against\n\n#   SDL2_TTF_VERSION_STRING - human-readable string containing the version of SDL2_ttf\n\n#\n\n#\n\n#\n\n# For backward compatiblity the following variables are also set:\n\n#\n\n# ::\n\n#\n\n#   SDL2TTF_LIBRARY (same value as SDL2_TTF_LIBRARIES)\n\n#   SDL2TTF_INCLUDE_DIR (same value as SDL2_TTF_INCLUDE_DIRS)\n\n#   SDL2TTF_FOUND (same value as SDL2_TTF_FOUND)\n\n#\n\n#\n\n#\n\n# $SDL2DIR is an environment variable that would correspond to the\n\n# ./configure --prefix=$SDL2DIR used in building SDL2.\n\n#\n\n# Created by Andreas Löf.  This was influenced by the FindSDL_ttf.cmake\n\n# module, but with modifications to use SDL2.\n\n#\n\n#=============================================================================\n\n# Copyright 2005-2009 Kitware, Inc.\n\n# Copyright 2012 Benjamin Eikel\n\n# Copyright 2015 Andreas Löf\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n#\n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# path suffixes to search inside ENV{SDL2DIR}\n",
        "Line" : 78,
        "CharPositionInLine" : 16
      },
      "2" : {
        "Text" : "# for backward compatiblity\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/FindTranslationTools.cmake" : {
      "ObjectId" : "d37139a6d2c35855e51fae4700dada2f1babc68a",
      "LastModified" : "2018-10-07T03:23:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find the tools needed for updating the potfiles and translations\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindVorbisFile.cmake" : {
      "ObjectId" : "a666d1747ebee7bca975c54bb79b1fb85bdb1d87",
      "LastModified" : "2018-10-07T03:20:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate VorbisFile\n\n# This module defines XXX_FOUND, XXX_INCLUDE_DIRS and XXX_LIBRARIES standard variables\n\n#\n\n# $VORBISDIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$VORBISDIR\n\n# used in building Vorbis.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copied from\n\n# http://code.google.com/p/osgaudio/source/browse/trunk/CMakeModules/FindVorbisFile.cmake\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fink\n",
        "Line" : 16,
        "CharPositionInLine" : 5
      },
      "3" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 17,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "# Blastwave\n",
        "Line" : 18,
        "CharPositionInLine" : 10
      },
      "5" : {
        "Text" : "# >= 1600\n",
        "Line" : 23,
        "CharPositionInLine" : 32
      },
      "6" : {
        "Text" : "# >= 1500\n",
        "Line" : 25,
        "CharPositionInLine" : 34
      },
      "7" : {
        "Text" : "# >= 1400\n",
        "Line" : 27,
        "CharPositionInLine" : 34
      },
      "8" : {
        "Text" : "# >= 1300\n",
        "Line" : 29,
        "CharPositionInLine" : 34
      },
      "9" : {
        "Text" : "# >= 1200\n",
        "Line" : 31,
        "CharPositionInLine" : 34
      },
      "10" : {
        "Text" : "# First search for d-suffixed libs\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Then search for non suffixed libs if necessary, but only in debug dirs\n",
        "Line" : 70,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# Could add \"general\" keyword, but it is optional\n",
        "Line" : 88,
        "CharPositionInLine" : 53
      },
      "13" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set XXX_FOUND to TRUE if all listed variables are TRUE\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "cmake/SearchForStuff.cmake" : {
      "ObjectId" : "e17d0a129ead7a5687710c3f80b4357115bf14b8",
      "LastModified" : "2018-10-07T03:20:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#check for some platform specific things and export defines accordingly...\n\n#done basically the same was as AC_CHECK_HEADERS and AC_CHECK_FUNCS in configure.ac\n\n#the file is basically built upon the info available at\n\n#http://www.vtk.org/Wiki/CMake_HowToDoPlatformChecks\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#the two includes below seem to not be required, those headers are checked for\n\n#anyway, including them here, too...\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#sendfile should be in one of the headers checked for here, so first check if\n\n#one of the headers is available and then check for 'sendfile'\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#in configure.ac it is not explicitly tested, if it is in 'm', instead the first\n\n#test is if \"floor\" is available in m and later on it is checked if round,\n\n#sendfile and others do exist (with the 'm' lib linked), regarding our sources\n\n#we *only* want round from 'm'\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#use config.h.cmake to create a list of #defines comparable to the one configure\n\n#does, this file is created in the dir where cmake is run from\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#to make the compiler actually use the generated config.h\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/SelectLibraryConfigurations.cmake" : {
      "ObjectId" : "532daaa69987c390ffa90a2019a43cc7a1cf8ead",
      "LastModified" : "2018-10-07T03:20:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# SelectLibraryConfigurations\n\n# ---------------------------\n\n#\n\n#\n\n#\n\n# select_library_configurations( basename )\n\n#\n\n# This macro takes a library base name as an argument, and will choose\n\n# good values for basename_LIBRARY, basename_LIBRARIES,\n\n# basename_LIBRARY_DEBUG, and basename_LIBRARY_RELEASE depending on what\n\n# has been found and set.  If only basename_LIBRARY_RELEASE is defined,\n\n# basename_LIBRARY will be set to the release value, and\n\n# basename_LIBRARY_DEBUG will be set to basename_LIBRARY_DEBUG-NOTFOUND.\n\n# If only basename_LIBRARY_DEBUG is defined, then basename_LIBRARY will\n\n# take the debug value, and basename_LIBRARY_RELEASE will be set to\n\n# basename_LIBRARY_RELEASE-NOTFOUND.\n\n#\n\n# If the generator supports configuration types, then basename_LIBRARY\n\n# and basename_LIBRARIES will be set with debug and optimized flags\n\n# specifying the library to be used for the given configuration.  If no\n\n# build type has been set or the generator in use does not support\n\n# configuration types, then basename_LIBRARY and basename_LIBRARIES will\n\n# take only the release value, or the debug value if the release one is\n\n# not set.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This macro was adapted from the FindQt4 CMake module and is maintained by Will\n\n# Dicharry <wdicharry@stellarscience.com>.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# if the generator is multi-config or if CMAKE_BUILD_TYPE is set for\n\n# single-config generators, set optimized and debug libraries\n",
        "Line" : 45,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 4
    },
    "cmake/UseLATEX.cmake" : {
      "ObjectId" : "52f8858952223d3fb4bff7f7e48a7f4a4ae9b679",
      "LastModified" : "2018-10-07T03:20:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# File: UseLATEX.cmake\n\n# CMAKE commands to actually use the LaTeX compiler\n\n# Version: 1.7.3\n\n# Author: Kenneth Moreland (kmorel at sandia dot gov)\n\n#\n\n# Copyright 2004 Sandia Corporation.\n\n# Under the terms of Contract DE-AC04-94AL85000, there is a non-exclusive\n\n# license for use of this work by or on behalf of the\n\n# U.S. Government. Redistribution and use in source and binary forms, with\n\n# or without modification, are permitted provided that this Notice and any\n\n# statement of authorship are reproduced on all copies.\n\n#\n\n# The following MACROS are defined:\n\n#\n\n# ADD_LATEX_DOCUMENT(<tex_file>\n\n#                       [BIBFILES <bib_files>]\n\n#                       [INPUTS <input_tex_files>]\n\n#                       [IMAGE_DIRS] <image_directories>\n\n#                       [IMAGES] <image_files>\n\n#                       [CONFIGURE] <tex_files>\n\n#                       [DEPENDS] <tex_files>\n\n#                       [USE_INDEX] [USE_GLOSSARY]\n\n#                       [DEFAULT_PDF] [MANGLE_TARGET_NAMES])\n\n#       Adds targets that compile <tex_file>.  The latex output is placed\n\n#       in LATEX_OUTPUT_PATH or CMAKE_CURRENT_BINARY_DIR if the former is\n\n#       not set.  The latex program is picky about where files are located,\n\n#       so all input files are copied from the source directory to the\n\n#       output directory.  This includes the target tex file, any tex file\n\n#       listed with the INPUTS option, the bibliography files listed with\n\n#       the BIBFILES option, and any .cls, .bst, and .clo files found in\n\n#       the current source directory.  Images found in the IMAGE_DIRS\n\n#       directories or listed by IMAGES are also copied to the output\n\n#       directory and coverted to an appropriate format if necessary.  Any\n\n#       tex files also listed with the CONFIGURE option are also processed\n\n#       with the CMake CONFIGURE_FILE command (with the @ONLY flag.  Any\n\n#       file listed in CONFIGURE but not the target tex file or listed with\n\n#       INPUTS has no effect. DEPENDS can be used to specify generated files\n\n#       that are needed to compile the latex target.\n\n#\n\n#       The following targets are made:\n\n#               dvi: Makes <name>.dvi\n\n#               pdf: Makes <name>.pdf using pdflatex.\n\n#               safepdf: Makes <name>.pdf using ps2pdf.  If using the default\n\n#                       program arguments, this will ensure all fonts are\n\n#                       embedded and no lossy compression has been performed\n\n#                       on images.\n\n#               ps: Makes <name>.ps\n\n#               html: Makes <name>.html\n\n#               auxclean: Deletes <name>.aux.  This is sometimes necessary\n\n#                       if a LaTeX error occurs and writes a bad aux file.\n\n#\n\n#       The dvi target is added to the ALL.  That is, it will be the target\n\n#       built by default.  If the DEFAULT_PDF argument is given, then the\n\n#       pdf target will be the default instead of dvi.\n\n#\n\n#       If the argument MANGLE_TARGET_NAMES is given, then each of the\n\n#       target names above will be mangled with the <tex_file> name.  This\n\n#       is to make the targets unique if ADD_LATEX_DOCUMENT is called for\n\n#       multiple documents.  If the argument USE_INDEX is given, then\n\n#       commands to build an index are made.  If the argument USE_GLOSSARY\n\n#       is given, then commands to build a glossary are made.\n\n#\n\n# History:\n\n#\n\n# 1.7.3 Fix some issues with interactions between makeglossaries and bibtex\n\n#       (thanks to Mark de Wever).\n\n#\n\n# 1.7.2 Use ps2pdf to convert eps to pdf to get around the problem with\n\n#       ImageMagick dropping the bounding box (thanks to Lukasz Lis).\n\n#\n\n# 1.7.1 Fixed some dependency issues.\n\n#\n\n# 1.7.0 Added DEPENDS options (thanks to Theodore Papadopoulo).\n\n#\n\n# 1.6.1 Ported the makeglossaries command to CMake and embedded the port\n\n#       into UseLATEX.cmake.\n\n#\n\n# 1.6.0 Allow the use of the makeglossaries command.  Thanks to Oystein\n\n#       S. Haaland for the patch.\n\n#\n\n# 1.5.0 Allow any type of file in the INPUTS lists, not just tex file\n\n#       (suggested by Eric Noulard).  As a consequence, the ability to\n\n#       specify tex files without the .tex extension is removed.  The removed\n\n#       function is of dubious value anyway.\n\n#\n\n#       When copying input files, skip over any file that exists in the\n\n#       binary directory but does not exist in the source directory with the\n\n#       assumption that these files were added by some other mechanism.  I\n\n#       find this useful when creating large documents with multiple\n\n#       chapters that I want to build separately (for speed) as I work on\n\n#       them.  I use the same boilerplate as the starting point for all\n\n#       and just copy it with different configurations.  This was what the\n\n#       separate ADD_LATEX_DOCUMENT method was supposed to originally be for.\n\n#       Since its external use is pretty much deprecated, I removed that\n\n#       documentation.\n\n#\n\n# 1.4.1 Copy .sty files along with the other class and package files.\n\n#\n\n# 1.4.0 Added a MANGLE_TARGET_NAMES option that will mangle the target names.\n\n#\n\n#       Fixed problem with copying bib files that became apparent with\n\n#       CMake 2.4.\n\n#\n\n# 1.3.0 Added a LATEX_OUTPUT_PATH variable that allows you or the user to\n\n#       specify where the built latex documents to go.  This is especially\n\n#       handy if you want to do in-source builds.\n\n#\n\n#       Removed the ADD_LATEX_IMAGES macro and absorbed the functionality\n\n#       into ADD_LATEX_DOCUMENT.  The old interface was always kind of\n\n#       clunky anyway since you had to specify the image directory in both\n\n#       places.  It also made supporting LATEX_OUTPUT_PATH problematic.\n\n#\n\n#       Added support for jpeg files.\n\n#\n\n# 1.2.0 Changed the configuration options yet again.  Removed the NO_CONFIGURE\n\n#       Replaced it with a CONFIGURE option that lists input files for which\n\n#       configure should be run.\n\n#\n\n#       The pdf target no longer depends on the dvi target.  This allows you\n\n#       to build latex documents that require pdflatex.  Also added an option\n\n#       to make the pdf target the default one.\n\n#\n\n# 1.1.1 Added the NO_CONFIGURE option.  The @ character can be used when\n\n#       specifying table column separators.  If two or more are used, then\n\n#       will incorrectly substitute them.\n\n#\n\n# 1.1.0 Added ability include multiple bib files.  Added ability to do copy\n\n#       sub-tex files for multipart tex files.\n\n#\n\n# 1.0.0 If both ps and pdf type images exist, just copy the one that\n\n#       matches the current render mode.  Replaced a bunch of STRING\n\n#       commands with GET_FILENAME_COMPONENT commands that were made to do\n\n#       the desired function.\n\n#\n\n# 0.4.0 First version posted to CMake Wiki.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#############################################################################\n\n# Find the location of myself while originally executing.  If you do this\n\n# inside of a macro, it will recode where the macro was invoked.\n\n#############################################################################\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#############################################################################\n\n# Generic helper macros\n\n#############################################################################\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Helpful list macros.\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Parse macro arguments.\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Match the contents of a file to a regular expression.\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The FILE STRINGS command would be a bit better, but it's not supported on\n\n# older versions of CMake.\n",
        "Line" : 199,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#############################################################################\n\n# Macros that perform processing during a LaTeX build.\n\n#############################################################################\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#############################################################################\n\n# Helper macros for establishing LaTeX build.\n\n#############################################################################\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Just holds extensions for known image types.  They should all be lower case.\n",
        "Line" : 360,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# ImageMagick has broken eps to pdf conversion\n\n# use ps2pdf instead\n",
        "Line" : 394,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Makes custom commands to convert a file to a particular type.\n",
        "Line" : 414,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# As a shortcut, we can just copy the file.\n",
        "Line" : 433,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# Check to see if there is another input file of the appropriate type.\n",
        "Line" : 443,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# If we still need to convert, do it.\n",
        "Line" : 453,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Adds custom commands to process the given files for dvi and pdf builds.\n\n# Adds the output files to the given variables (does not replace).\n",
        "Line" : 463,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Check to see if we need to downsample the image.\n",
        "Line" : 472,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# Make sure the output directory exists.\n",
        "Line" : 482,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# Do conversions for dvi.\n",
        "Line" : 486,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "# Do conversions for pdf.\n",
        "Line" : 490,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "# Special case: output exists but input does not.  Assume that it was\n\n# created elsewhere and skip the input file copy.\n",
        "Line" : 543,
        "CharPositionInLine" : 6
      },
      "21" : {
        "Text" : "#############################################################################\n\n# Commands provided by the UseLATEX.cmake \"package\"\n\n#############################################################################\n",
        "Line" : 551,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Parses arguments to ADD_LATEX_DOCUMENT and ADD_LATEX_TARGETS and sets the\n\n# variables LATEX_TARGET, LATEX_IMAGE_DIR, LATEX_BIBFILES, LATEX_DEPENDS, and\n\n# LATEX_INPUTS.\n",
        "Line" : 561,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# The first argument is the target latex file.\n",
        "Line" : 572,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Backward compatibility between 1.6.0 and 1.6.1.\n",
        "Line" : 585,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Set up target names.\n",
        "Line" : 595,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# For each directory in LATEX_IMAGE_DIRS, glob all the image files and\n\n# place them in LATEX_IMAGES.\n",
        "Line" : 612,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Repeat these commands twice.\n",
        "Line" : 643,
        "CharPositionInLine" : 25
      },
      "28" : {
        "Text" : "# Add commands and targets for building dvi outputs.\n",
        "Line" : 706,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# Add commands and targets for building pdf outputs (with pdflatex).\n",
        "Line" : 719,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# Since both the pdf and safepdf targets have the same output, we\n\n# cannot properly do the dependencies for both.  When selecting safepdf,\n\n# simply force a recompile every time.\n",
        "Line" : 742,
        "CharPositionInLine" : 6
      },
      "31" : {
        "Text" : "#############################################################################\n\n# Actually do stuff\n\n#############################################################################\n",
        "Line" : 797,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Must be part of the actual configure (included from CMakeLists.txt).\n",
        "Line" : 814,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 33
    },
    "cmake/po4a-man.cmake" : {
      "ObjectId" : "e8fc9277ef548676674c8b8f1a207199a26ab7e0",
      "LastModified" : "2018-10-07T03:20:50Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/po4a-manual.cmake" : {
      "ObjectId" : "ef11257e37301ea28b2d4e0ced9017079ba9c3e1",
      "LastModified" : "2018-10-07T03:20:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Small helper to execute code see doc/manual/CMakeLists.txt\n\n# for more information\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/update_pot_source_dependencies.cmake" : {
      "ObjectId" : "03c2bef4d3ace2f51cc1dca3d71aceeedca3c814",
      "LastModified" : "2018-10-07T03:20:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Update the source file dependencies of the pot file.\n\n#\n\n# This globs all files cpp in the src directory and looks for the text domain\n\n# definition in that file and outputs these dependencies in POTFILES.in.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Remove the old input file.\n\n# Dummy target with a non existing (and not created file) is always executed.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# remove the old file.\n",
        "Line" : 10,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# Recreate the input file.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# For the default text domain.\n",
        "Line" : 19,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Create an empty new one, to be sure it will exist.\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Find all cpp files which are not in a .git directory.\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# If the file doesn't contain a GETTEXT_DOMAIN\n\n# definition it should be added to the default domain.\n",
        "Line" : 31,
        "CharPositionInLine" : 5
      },
      "8" : {
        "Text" : "# For the other text domains.\n",
        "Line" : 49,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# Create an empty new one, to be sure it will exist.\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Find all cpp files which are not in a .git directory.\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# If the file contains a GETTEXT_DOMAIN definition for\n\n# the current domain add it to the domain.\n",
        "Line" : 61,
        "CharPositionInLine" : 5
      },
      "CommentCount" : 12
    },
    "config.h.cmake" : {
      "ObjectId" : "a88303e38f25ae106110311131dc02543eb03746",
      "LastModified" : "2018-10-07T03:20:50Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/*this file is used to automatically set some defines and is used in the CMake recipe*/",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "data/core/terrain-graphics/Makefile" : {
      "ObjectId" : "3f27c1bafdc969da68cced3ce20d05e1521ef683",
      "LastModified" : "2018-10-07T03:20:50Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Many of the macros in these files are generated from template meta-macros using the\n\n# expand-terrain-macros.py tool.  Here's a canned invocation that will rebuild all.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "data/tools/Makefile" : {
      "ObjectId" : "e8415b33a76a274f16030180bddb74a6b643cbd2",
      "LastModified" : "2018-10-07T03:20:50Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Recipes for various sanity checks.\n\n#\n\n# Hack DATA if our location in the Wesnoth source tree changes.\n\n# It needs to point to the top-level data directory.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# The MAINLINE definition should expand to all directories considered\n\n# to be part of the mainline distribution.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Define UMC to point to a local copy of user-made content to run checks on.\n\n# Note, this needs to expand to a list with one subdirectory per UMC campaign,\n\n# otherwise the visibility checks aren't going to work right.\n\n#UMC = ../../../../wesnoth-umc-dev/trunk/*\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Check for obsolete WML, broken references, consistency.\n",
        "Line" : 19,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# Check WML for meaning and references.\n\n# No UMC testing until $$(UMC) is fixed\n",
        "Line" : 35,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "#-u $(UMC)\n",
        "Line" : 37,
        "CharPositionInLine" : 27
      },
      "6" : {
        "Text" : "# Check GUI WML for meaning and references.\n",
        "Line" : 40,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# Beware of removing images listed in this report unless you know\n\n# UMC is not relying on them!\n\n#\n\n# References to terrain graphics go through so many layers of nasty\n\n# opaque macros that trying to reference-check them is hopeless.\n\n# So suppress reporting them unused even if they seem to have\n\n# no references.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Report a list of symbols and resources defined in mainline.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Generate a reference page for the utility macros.\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Report on unchecked macro calls\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Reindent the mainline content\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Extract a table of editor keybindings from the editor theme definition\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Look at the difficulty-rank order of the campaigns\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# For performing test lifts of mainline\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "data/tools/emacs_mode/Makefile" : {
      "ObjectId" : "d2ba2a8127f1299d81f1189d9892cff66871dd9c",
      "LastModified" : "2018-10-07T03:20:50Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "doc/CMakeLists.txt" : {
      "ObjectId" : "77cca475c1e6032fea7c66ce7b72ca15b5cffb6c",
      "LastModified" : "2018-10-07T03:20:50Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/design/CMakeLists.txt" : {
      "ObjectId" : "4860a562177bb9f57ef30805a627870f917d5870",
      "LastModified" : "2018-10-07T03:20:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Generates the documents using pdflatex.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Abort compilation on errors.\n\n# Failing to do so might lead to infinite loops and hard to diagnose\n\n# problems.\n",
        "Line" : 7,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "#\n\n# LaTeX files\n\n#\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#\n\n# Source files.\n\n#\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#\n\n# LaTeX files\n\n#\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "doc/man/CMakeLists.txt" : {
      "ObjectId" : "bf46745130b890b0f03f9a0c0fd4a06137ddd608",
      "LastModified" : "2018-10-07T03:20:50Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/manual/CMakeLists.txt" : {
      "ObjectId" : "20dfb79ef18666ef4946b9b568b2e2a750e53ec4",
      "LastModified" : "2018-10-07T03:20:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create the .xml file if enough strings are translated.\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Only create a .html if there is an .xml file. Since it's not\n\n# possible to only execute cmake code if the file exists directly,\n\n# build the command here. Then send it to a small script that only\n\n# executes if the .html file exists.\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "po/CMakeLists.txt" : {
      "ObjectId" : "3187d216d1512197f48feba64e40461f97be60fd",
      "LastModified" : "2019-03-30T12:40:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############ Settings. ###########\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The normal domains use cpp and cfg files.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# All available domains.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If a source file has not GETTEXT_DOMAIN it belongs to this domain.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "############ pot update. ###########\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Update the source file dependencies.\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Generate pot file for c++ data.\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# misses bug address\n",
        "Line" : 58,
        "CharPositionInLine" : 3
      },
      "8" : {
        "Text" : "# create the pot file make sure we always get output.\n",
        "Line" : 60,
        "CharPositionInLine" : 3
      },
      "9" : {
        "Text" : "# replace the chartype\n",
        "Line" : 64,
        "CharPositionInLine" : 3
      },
      "10" : {
        "Text" : "# Remove some header info - Need to test whether needed.\n",
        "Line" : 68,
        "CharPositionInLine" : 3
      },
      "11" : {
        "Text" : "# Generate pot file for wml data.\n",
        "Line" : 74,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Merge both pot files\n",
        "Line" : 89,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# The old function checked for differences in the time in the header see\n\n# what we need to do with it.\n",
        "Line" : 91,
        "CharPositionInLine" : 3
      },
      "14" : {
        "Text" : "# Update / generate the po files for all languages\n",
        "Line" : 112,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "### Generate new po file.\n",
        "Line" : 115,
        "CharPositionInLine" : 3
      },
      "16" : {
        "Text" : "# For some reason CMake is rather happy to delete the po file in\n\n# some cases. Too avoid that problem only generate the init rule\n\n# if the po file doesn't exist. The case where a po file used to\n\n# exist and no longer exists should never occur\n",
        "Line" : 117,
        "CharPositionInLine" : 3
      },
      "17" : {
        "Text" : "### Update existing po file.\n",
        "Line" : 138,
        "CharPositionInLine" : 3
      },
      "18" : {
        "Text" : "# The pot-update depends on a dummy file which we promise to\n\n# make. We don't make this dummy file but the pot-update\n\n# still works.\n",
        "Line" : 140,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Add to target list\n",
        "Line" : 160,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# should depend on languages\n",
        "Line" : 163,
        "CharPositionInLine" : 52
      },
      "21" : {
        "Text" : "# Same idea with a dummy file as in pot-update: we never make it, and run the command each time.\n",
        "Line" : 169,
        "CharPositionInLine" : 3
      },
      "22" : {
        "Text" : "# The target to call\n",
        "Line" : 180,
        "CharPositionInLine" : 1
      },
      "23" : {
        "Text" : "##### po update per language #####\n",
        "Line" : 187,
        "CharPositionInLine" : 1
      },
      "24" : {
        "Text" : "# The pot-update depends on a dummy file which we promise to\n\n# make. We don't make this dummy file but the pot-update\n\n# still works.\n",
        "Line" : 191,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# After the po file is updated it might look not entirely as\n\n# wanted, for example poedit reorders the file. Use msgattrib\n\n# to reformat the file, use a helper file to do so.\n",
        "Line" : 195,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# Now merge with the pot file.\n",
        "Line" : 206,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# Only set the verbose flag for maintainers.\n",
        "Line" : 235,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# The target to call\n",
        "Line" : 287,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 29
    },
    "po/wesnoth-manpages/Makefile" : {
      "ObjectId" : "ff579b5fa0d194d210cbc8fe1e36ff28508b03c3",
      "LastModified" : "2018-10-07T03:20:50Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# This makefile was created with the sole purpose of emulating the \n\n# makefiles of the rest of domains (and thus make updates easily\n\n# scriptable).\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# this dummy rule only displays the statistics, there is no need to\n\n# generate .gmo files for po4a manpages\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "po/wesnoth-manual/Makefile" : {
      "ObjectId" : "42f033c45ff334a86b3f479b9213df68d0d445c7",
      "LastModified" : "2018-10-07T03:20:50Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# This makefile was created with the sole purpose of emulating the \n\n# makefiles of the rest of domains (and thus make updates easily\n\n# scriptable).\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# this dummy rule only displays the statistics, there is no need to\n\n# generate .gmo files for po4a manpages\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "cbd96d49f937b7923d203bedba61591998c53a1b",
      "LastModified" : "2019-03-30T12:40:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# store the specified sources list in the specified variable\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## some includes ##\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#include_directories(SYSTEM ${GLEW_INCLUDE_DIRS})\n\n#include_directories(SYSTEM ${OPENGL_INCLUDE_DIR})\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#optional dependencies\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# needed to get include paths in the subfolders correct\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# needed to have the generated config.h used, too\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\t${OPENGL_LIBRARIES}\n\n#\t${GLEW_LIBRARIES}\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "########### Set Library mode ###############\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "########### libwesnoth-core ###############\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# a 'lib' is automatically set in front when creating the library (as in the filename)\n\n# internal reference is the name given here\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Depending on the flag create a real file or an empty dummy.\n\n#\n\n# Since the code is executed every build run of Wesnoth we need to make sure\n\n# that no modifications don't turn into a rebuild. Therefore a the dummy is\n\n# created and the second target only copies the file if modified.\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "########### lua ###############\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# We explicitly want lua compiled as C++ version, so this line is required:\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Inject a header into the Lua sources for Wesnoth-specific changes\n\n# makedepend won't see it so we have to specifically add it as a dependency.\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# silence a Clang specific warning due to extra parenthesis in if statements when comparing instead\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# a 'lib' is automatically set in front when creating the library (as in the filename)\n\n# internal reference is the name given here\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "########### Old style cast flags ###############\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Disable the setting of -Wold-style-cast and Wuseless-cast on some targets.\n\n# old style casts are not wanted by our coding style but some C based code\n\n# uses it. Force the flag off for these files.\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "########### Helper libraries ###############\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "########### Wesnoth main source files ###############\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# create libwesnoth-client.a if building the client or the boost unit tests\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "########### libwesnoth-game ###############\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# On windows only, these files need to be linked, as their headers are included #ifdef win32.\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# On apple only\n",
        "Line" : 269,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# For libdbus (essentially just for linux), this file needs to be linked, as its header is included #ifdef HAVE_LIBDBUS\n",
        "Line" : 279,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# a 'lib' is automatically set in front when creating the library (as in the filename)\n\n# internal reference is the name given here\n",
        "Line" : 287,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "########### Wesnoth ###############\n",
        "Line" : 291,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "########### Wesnothd Server ###############\n",
        "Line" : 329,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "########### Campaign Server ###############\n",
        "Line" : 352,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "########### Unit tests ###############\n",
        "Line" : 375,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 30
    },
    "utils/umc_dev/Makefile" : {
      "ObjectId" : "46676e01c1ac8867990501e02ddc0b02a494a609",
      "LastModified" : "2018-10-07T03:20:50Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# developer manual\n",
        "Line" : 8,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# user manual\n",
        "Line" : 10,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# cleanup non-needed files\n",
        "Line" : 12,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 3
    },
    "utils/umc_dev/build/build.xml" : {
      "ObjectId" : "3d9c9717175961eed45ccd119f81be8eb835b58a",
      "LastModified" : "2018-10-07T03:20:50Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " Check that we have a deltapack ",
        "Line" : 10,
        "CharPositionInLine" : 48
      },
      "1" : {
        "Text" : " clear previous builds ",
        "Line" : 19,
        "CharPositionInLine" : 39
      },
      "2" : {
        "Text" : " remove non-wesnoth plugins ",
        "Line" : 43,
        "CharPositionInLine" : 44
      },
      "CommentCount" : 3
    },
    "utils/umc_dev/org.wesnoth/templates/build.xml" : {
      "ObjectId" : "cef62784271af8b53217bd13c09f801ae33c1d90",
      "LastModified" : "2018-10-07T03:20:50Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " <property file=\"build.properties\"/> ",
        "Line" : 3,
        "CharPositionInLine" : 46
      },
      "1" : {
        "Text" : " <exclude name=\".project\"/> ",
        "Line" : 7,
        "CharPositionInLine" : 40
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "CMAKE" : 25,
    "CMAKESOURCE" : 1,
    "MAKEFILE" : 6,
    "ANT" : 2
  },
  "ElapsedTime" : 27207
}