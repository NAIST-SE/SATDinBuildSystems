{
  "Repository" : "3137291",
  "Revision" : "HEAD",
  "ObjectId" : "8f21d486dffa9109d63c9054bba75b1c8df09a51",
  "CommitTime" : "2018-05-01T01:46:57Z",
  "Files" : {
    "src_main/CMakeLists.txt" : {
      "ObjectId" : "978b6af33dffa0ac7f3e57958d7c25b7137d4470",
      "LastModified" : "2018-04-13T02:58:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set our module path and install prefix\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# grab our git info\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# set the USE_FOLDERS global property, this puts the targets into a CMakePredefinedTargets folder\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# output some status messages\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# custom output macro\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# set directory names for the game and utils\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# Options\n\n#\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# Compiler settings\n\n#\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Windows specific settings\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# compiler settings\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# GCC and Clang settings\n",
        "Line" : 93,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# If we're building with gcc for i386 let's define -ffloat-store.\n\n# This helps the old and crappy x87 FPU to produce correct values.\n\n# Would be nice if Clang had something comparable.\n",
        "Line" : 100,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# -MMD to generate header dependencies. (They cannot be\n\n#  generated if building universal binaries on OSX)\n",
        "Line" : 109,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# the warnings are used for every profile anyway, so put them in a variable\n",
        "Line" : 115,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# append clang-specific settings for warnings (the second one make sure clang doesn't complain\n\n# about unknown -W flags, like -Wno-unused-but-set-variable)\n",
        "Line" : 119,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# MSVC settings\n",
        "Line" : 147,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "# for MSVC 2015+, if we want UWP support\n",
        "Line" : 149,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "# we have to force the WindowsApp lib instead of the usual Win32 ones\n",
        "Line" : 156,
        "CharPositionInLine" : 3
      },
      "18" : {
        "Text" : "# force the runtime MSVC DLLs to be used\n",
        "Line" : 160,
        "CharPositionInLine" : 3
      },
      "19" : {
        "Text" : "# set special UWP linker flags\n",
        "Line" : 171,
        "CharPositionInLine" : 3
      },
      "20" : {
        "Text" : "# define the standard link libraries\n",
        "Line" : 181,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# define standard static MSVC runtime\n",
        "Line" : 185,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# for MSVC 2013+, without /SAFESEH:NO, we can't link against older libraries\n",
        "Line" : 207,
        "CharPositionInLine" : 1
      },
      "23" : {
        "Text" : "#\n\n# add projects\n\n#\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24
    },
    "src_main/cmake/FindGit.cmake" : {
      "ObjectId" : "852f919b624809fea9918e9c4f7644d1709c0c26",
      "LastModified" : "2018-04-13T02:58:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindGit\n\n# -------\n\n#\n\n#\n\n#\n\n# The module defines the following variables:\n\n#\n\n# ::\n\n#\n\n#    GIT_EXECUTABLE - path to git command line client\n\n#    GIT_FOUND - true if the command line client was found\n\n#    GIT_VERSION_STRING - the version of git found (since CMake 2.8.8)\n\n#\n\n# Example usage:\n\n#\n\n# ::\n\n#\n\n#    find_package(Git)\n\n#    if(GIT_FOUND)\n\n#      message(\"git found: ${GIT_EXECUTABLE}\")\n\n#    endif()\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2010 Kitware, Inc.\n\n# Copyright 2012 Rolf Eike Beer <eike@sf-mail.de>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see below.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# \n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# \n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n# \n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n# \n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look for 'git' or 'eg' (easy git)\n\n#\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Prefer .cmd variants on Windows unless running in a Makefile\n\n# in the MSYS shell.\n\n#\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# GitHub search path for Windows\n",
        "Line" : 75,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# SourceTree search path for Windows\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set GIT_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "src_main/cmake/FindOGG.cmake" : {
      "ObjectId" : "aab85dcdf6ef6884ecb123eaaa9ec2d9ef848a98",
      "LastModified" : "2018-04-13T02:58:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate OGG\n\n# This module defines\n\n# OGG_LIBRARIES\n\n# OGG_FOUND, if false, do not try to link to OGG \n\n# OGG_INCLUDE_DIRS, where to find the headers\n\n#\n\n# $OGGDIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$OGGDIR\n\n# used in building OGG.\n\n#\n\n# Created by Sukender (Benoit Neil). Based on FindOGG.cmake module.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Fink\n",
        "Line" : 25,
        "CharPositionInLine" : 5
      },
      "2" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 26,
        "CharPositionInLine" : 12
      },
      "3" : {
        "Text" : "# Blastwave\n",
        "Line" : 27,
        "CharPositionInLine" : 10
      },
      "CommentCount" : 4
    },
    "src_main/cmake/FindSDL2.cmake" : {
      "ObjectId" : "7cf954243e902f91a844990709c71921259e859d",
      "LastModified" : "2018-04-13T02:58:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate SDL2 library\n\n# This module defines\n\n# SDL2_LIBRARY, the name of the library to link against\n\n# SDL2_FOUND, if false, do not try to link to SDL2\n\n# SDL2_INCLUDE_DIR, where to find SDL.h\n\n#\n\n# This module responds to the the flag:\n\n# SDL2_BUILDING_LIBRARY\n\n# If this is defined, then no SDL2main will be linked in because\n\n# only applications need main().\n\n# Otherwise, it is assumed you are building an application and this\n\n# module will attempt to locate and set the the proper link flags\n\n# as part of the returned SDL2_LIBRARY variable.\n\n#\n\n# Don't forget to include SDLmain.h and SDLmain.m your project for the\n\n# OS X framework based version. (Other versions link to -lSDL2main which\n\n# this module will try to find on your behalf.) Also for OS X, this\n\n# module will automatically add the -framework Cocoa on your behalf.\n\n#\n\n#\n\n# Additional Note: If you see an empty SDL2_LIBRARY_TEMP in your configuration\n\n# and no SDL2_LIBRARY, it means CMake did not find your SDL2 library\n\n# (SDL2.dll, libsdl2.so, SDL2.framework, etc).\n\n# Set SDL2_LIBRARY_TEMP to point to your SDL2 library, and configure again.\n\n# Similarly, if you see an empty SDL2MAIN_LIBRARY, you should set this value\n\n# as appropriate. These values are used to generate the final SDL2_LIBRARY\n\n# variable, but when these values are unset, SDL2_LIBRARY does not get created.\n\n#\n\n#\n\n# $SDL2DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$SDL2DIR\n\n# used in building SDL2.\n\n# l.e.galup  9-20-02\n\n#\n\n# Modified by Eric Wing.\n\n# Added code to assist with automated building by using environmental variables\n\n# and providing a more controlled/consistent search behavior.\n\n# Added new modifications to recognize OS X frameworks and\n\n# additional Unix paths (FreeBSD, etc).\n\n# Also corrected the header search path to follow \"proper\" SDL guidelines.\n\n# Added a search for SDL2main which is needed by some platforms.\n\n# Added a search for threads which is needed by some platforms.\n\n# Added needed compile switches for MinGW.\n\n#\n\n# On OSX, this will prefer the Framework version (if found) over others.\n\n# People will have to manually change the cache values of\n\n# SDL2_LIBRARY to override this selection or set the CMake environment\n\n# CMAKE_INCLUDE_PATH to modify the search paths.\n\n#\n\n# Note that the header path has changed from SDL2/SDL.h to just SDL.h\n\n# This needed to change because \"proper\" SDL convention\n\n# is #include \"SDL.h\", not <SDL2/SDL.h>. This is done for portability\n\n# reasons because not all systems place things in SDL2/ (see FreeBSD).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2003-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fink\n",
        "Line" : 73,
        "CharPositionInLine" : 5
      },
      "3" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 74,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "# Blastwave\n",
        "Line" : 75,
        "CharPositionInLine" : 10
      },
      "5" : {
        "Text" : "# Lookup the 64 bit libs on x64\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# On 32bit build find the 32bit libs\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Non-OS X framework versions expect you to also dynamically link to\n\n# SDL2main. This is mainly for Windows and OS X. Other (Unix) platforms\n\n# seem to provide SDL2main for compatibility even though they don't\n\n# necessarily need it.\n",
        "Line" : 109,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Lookup the 64 bit libs on x64\n",
        "Line" : 114,
        "CharPositionInLine" : 3
      },
      "9" : {
        "Text" : "# On 32bit build find the 32bit libs\n",
        "Line" : 123,
        "CharPositionInLine" : 3
      },
      "10" : {
        "Text" : "# SDL2 may require threads on your system.\n\n# The Apple build may not need an explicit flag because one of the\n\n# frameworks may already provide it.\n\n# But for non-OSX systems, I will use the CMake Threads package.\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# MinGW needs an additional library, mwindows\n\n# It's total link flags should look like -lmingw32 -lSDL2main -lSDL2 -lmwindows\n\n# (Actually on second look, I think it only needs one of the m* libraries.)\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# For SDL2main\n",
        "Line" : 151,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# For OS X, SDL2 uses Cocoa as a backend so it must link to Cocoa.\n\n# CMake doesn't display the -framework Cocoa string in the UI even\n\n# though it actually is there if I modify a pre-used variable.\n\n# I think it has something to do with the CACHE STRING.\n\n# So I use a temporary variable until the end so I can set the\n\n# \"real\" variable in one-shot.\n",
        "Line" : 158,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# For threads, as mentioned Apple doesn't need this.\n\n# In fact, there seems to be a problem if I used the Threads package\n\n# and try using this line, so I'm just skipping it entirely for OS X.\n",
        "Line" : 168,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# For MinGW library\n",
        "Line" : 175,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "# Set the final string here so the GUI reflects the final state.\n",
        "Line" : 180,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "# Set the temp variable to INTERNAL so it is not seen in the CMake GUI\n",
        "Line" : 182,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 18
    },
    "src_main/cmake/FindVorbis.cmake" : {
      "ObjectId" : "566e9c2dea6613db7da41aaf63853d7dc59b2687",
      "LastModified" : "2018-04-13T02:58:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find vorbis library\n\n# Find the native Vorbis headers and libraries.\n\n#\n\n#  VORBIS_INCLUDE_DIRS   - where to find vorbis/vorbisfile.h, etc\n\n#  VORBIS_LIBRARIES      - List of libraries when using libvorbis\n\n#  VORBIS_FOUND          - True if vorbis is found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Look for the vorbisfile header file.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look for the vorbisfile library.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Look for the vorbis library.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set VORBISFILE_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src_main/cmake/GetGitRevisionDescription.cmake" : {
      "ObjectId" : "ccc05215a08bbfcce881c7c4f1245bb9909e193b",
      "LastModified" : "2018-04-13T02:58:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Returns a version string from Git\n\n#\n\n# These functions force a re-configure on each git commit so that you can\n\n# trust the values of the variables in your build system.\n\n#\n\n#  get_git_head_revision(<refspecvar> <hashvar> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the refspec and sha hash of the current head revision\n\n#\n\n#  git_describe(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe on the source tree, and adjusting\n\n# the output so that it tests false if an error occurs.\n\n#\n\n#  git_get_exact_tag(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe --exact-match on the source tree,\n\n# and adjusting the output so that it tests false if there was no exact\n\n# matching tag.\n\n#\n\n#  git_local_changes(<var>)\n\n#\n\n# Returns either \"CLEAN\" or \"DIRTY\" with respect to uncommitted changes.\n\n# Uses the return code of \"git diff-index --quiet HEAD --\".\n\n# Does not regard untracked files.\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We must run the following at \"include\" time, not at function call time,\n\n# to find the path to this module rather than the path to a calling list file\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# .git dir not found, search parent directories\n",
        "Line" : 51,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "# We have reached the root directory, we are not in git\n",
        "Line" : 55,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# check if this is a submodule\n",
        "Line" : 62,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# TODO sanitize\n\n#if((${ARGN}\" MATCHES \"&&\") OR\n\n#\t(ARGN MATCHES \"||\") OR\n\n#\t(ARGN MATCHES \"\\\\;\"))\n\n#\tmessage(\"Please report the following error to the project!\")\n\n#\tmessage(FATAL_ERROR \"Looks like someone's doing something nefarious with git_describe! Passed arguments ${ARGN}\")\n\n#endif()\n",
        "Line" : 103,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "#message(STATUS \"Arguments to execute_process: ${ARGN}\")\n",
        "Line" : 111,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 7
    },
    "src_main/engine/CMakeLists.txt" : {
      "ObjectId" : "7bffecc6c619ab77f6934d10fa1dd4d00ea5b2ca",
      "LastModified" : "2018-04-29T14:54:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add dedicated server project\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# base engine\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Options\n\n#\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Libraries\n\n#\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# sdl2\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# openal\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# libogg & libvorbis\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# freetype\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# libcurl\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# zlib\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# gamespy library\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# stb headers\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# minizip headers\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#\n\n# Source groups\n\n#\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# engine side code\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# git info\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# shared code\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# game dll code\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# windows resources\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# libs\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# libcurl\n",
        "Line" : 279,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# libogg and libvorbis\n",
        "Line" : 293,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# zlib\n",
        "Line" : 320,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# minizip\n",
        "Line" : 331,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# gamespy library\n",
        "Line" : 337,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#\n\n# Engine Executable\n\n#\n",
        "Line" : 343,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# main engine executable includes and source list\n",
        "Line" : 347,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# set manifest names and guid\n",
        "Line" : 393,
        "CharPositionInLine" : 1
      },
      "28" : {
        "Text" : "# setup application manifest\n",
        "Line" : 399,
        "CharPositionInLine" : 1
      },
      "29" : {
        "Text" : "# sources\n",
        "Line" : 406,
        "CharPositionInLine" : 1
      },
      "30" : {
        "Text" : "# resources\n",
        "Line" : 412,
        "CharPositionInLine" : 1
      },
      "31" : {
        "Text" : "# append source and resources\n",
        "Line" : 433,
        "CharPositionInLine" : 1
      },
      "32" : {
        "Text" : "# set include directories\n",
        "Line" : 437,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# build it\n",
        "Line" : 444,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# build the engine\n",
        "Line" : 450,
        "CharPositionInLine" : 1
      },
      "35" : {
        "Text" : "# build the engine\n",
        "Line" : 499,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 36
    },
    "src_main/engine/dedicated/CMakeLists.txt" : {
      "ObjectId" : "bd7b34e3d8e4bc1ca87ab2dc8350d948f0159d39",
      "LastModified" : "2018-04-25T12:47:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Options\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Libraries\n\n#\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# sdl2\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# zlib\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# minizip headers\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# Source groups\n\n#\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# engine side code\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# shared code\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# game dll code\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# windows code and resources\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# posix code\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# zlib\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# minizip\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#\n\n# Engine Executable\n\n#\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# main engine executable includes and source list\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# set include directories\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# build it\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# build the engine\n",
        "Line" : 204,
        "CharPositionInLine" : 1
      },
      "18" : {
        "Text" : "# build the engine\n",
        "Line" : 225,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 19
    },
    "src_main/game/CMakeLists.txt" : {
      "ObjectId" : "7fa7c415710fc9684d7bf5c87b58ed43a6fae18f",
      "LastModified" : "2018-04-25T02:12:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# shared code\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# game dll code\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# set include directories\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# build the game dll\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src_main/libs/SDL2/include/SDL_config.h.cmake" : {
      "ObjectId" : "c57266c413081c253f3e5526e025e3cb8d1bf53c",
      "LastModified" : "2018-04-13T02:58:15Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/*\n  Simple DirectMedia Layer\n  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>\n\n  This software is provided 'as-is', without any express or implied\n  warranty.  In no event will the authors be held liable for any damages\n  arising from the use of this software.\n\n  Permission is granted to anyone to use this software for any purpose,\n  including commercial applications, and to alter it and redistribute it\n  freely, subject to the following restrictions:\n\n  1. The origin of this software must not be misrepresented; you must not\n     claim that you wrote the original software. If you use this software\n     in a product, an acknowledgment in the product documentation would be\n     appreciated but is not required.\n  2. Altered source versions must be plainly marked as such, and must not be\n     misrepresented as being the original software.\n  3. This notice may not be removed or altered from any source distribution.\n*/",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/**\n *  \\file SDL_config.h.in\n *\n *  This is a set of defines to configure the SDL features\n */",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/* General platform specific identifiers */",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* C language features */",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* C datatypes */\n/* Define SIZEOF_VOIDP for 64/32 architectures */",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* Comment this if you want to build without any C library requirements */",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/* Useful headers */",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/* C library functions */",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "/* We may need some replacement for stdarg.h here */",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "/* SDL internal assertion support */",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "/* Allow disabling of core subsystems */",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "/* Enable various audio drivers */",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "/* Enable various input drivers */",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "/* Enable various shared object loading systems */",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "/* Enable various threading systems */",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "/* Enable various timer systems */",
        "Line" : 282,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "/* Enable various video drivers */",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "/* Enable OpenGL support */",
        "Line" : 345,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "/* Enable Vulkan support */",
        "Line" : 357,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "/* Enable system power support */",
        "Line" : 360,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "/* Enable system filesystem support */",
        "Line" : 369,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "/* Enable assembly routines */",
        "Line" : 378,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "/* Enable dynamic libsamplerate support */",
        "Line" : 382,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "/* Platform specific definitions */",
        "Line" : 385,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "/* Older Visual C++ headers don't have the Win64-compatible typedefs... */",
        "Line" : 420,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "src_main/libs/directx/Cache-mingw32.cmake" : {
      "ObjectId" : "e336081962b30d4fb72054385b21d8acc3abab51",
      "LastModified" : "2018-04-13T02:58:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src_main/libs/directx/Cache-mingw64.cmake" : {
      "ObjectId" : "fb4840fa4764ea44b2b7e239b5568d1a2700727d",
      "LastModified" : "2018-04-13T02:58:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src_main/libs/directx/Cache-msvc32.cmake" : {
      "ObjectId" : "947d81d10daf88a23aba01bf58c69565a517004e",
      "LastModified" : "2018-04-13T02:58:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# DirectX 7\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# DirectX 8\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src_main/libs/directx/Cache-msvc64.cmake" : {
      "ObjectId" : "7fe57d8667470bd5c05a62872b7a4f6a3f56e2bb",
      "LastModified" : "2018-04-13T02:58:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# DirectX 7\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src_main/libs/directx/Lib/Makefile" : {
      "ObjectId" : "814b03f22005c8e2fe7f8830861872b2c2f39fba",
      "LastModified" : "2018-04-13T02:58:15Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src_main/libs/directx/Lib/x64/Makefile" : {
      "ObjectId" : "9c836642fde92e27169bb8d672260bd23e30efea",
      "LastModified" : "2018-04-13T02:58:15Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src_main/libs/directx/Lib/x86/Makefile" : {
      "ObjectId" : "39109d55bfbbc789cc08f670f397ffd5711bfddc",
      "LastModified" : "2018-04-13T02:58:15Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src_main/refresh/CMakeLists.txt" : {
      "ObjectId" : "472f9c188184decb9a7d2b8867756befd57a68f9",
      "LastModified" : "2018-04-29T14:54:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# freetype\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# sdl\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# renderer sources\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# OpenGL backend sources\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Refresh library\n\n#\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# set include directories\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# because client.h includes curl.h\n",
        "Line" : 118,
        "CharPositionInLine" : 27
      },
      "7" : {
        "Text" : "# build the renderer library\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "src_main/utils/CMakeLists.txt" : {
      "ObjectId" : "e843e4ded9ccbf81e7145b3dd78e3f6946747740",
      "LastModified" : "2018-05-01T01:46:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src_main/utils/bake/CMakeLists.txt" : {
      "ObjectId" : "28f577e233aca0fb825b48f83f0e3a7e48e852a6",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# libogg & libvorbis\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# sources\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# BAKE tool\n\n#\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# set include directories\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# build it\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src_main/utils/extractfunctions/CMakeLists.txt" : {
      "ObjectId" : "ad4ea10f2a84c7b8ce11eed4f17780ebb6d8b118",
      "LastModified" : "2018-04-13T02:58:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# sources\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# extractfuncts save game table generator tool\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# set include directories\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# build it\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src_main/utils/master/CMakeLists.txt" : {
      "ObjectId" : "8ff42346f9dce452325b62479ccb7c79fe4ccfbc",
      "LastModified" : "2018-04-13T02:58:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# libcurl\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# libcurl sources\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# master sources\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# multiplayer master server tool\n\n#\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# set include directories\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# build it\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src_main/utils/q2map/CMakeLists.txt" : {
      "ObjectId" : "44215801e1b0a85489c4b98477b73e0a1a83ad46",
      "LastModified" : "2018-04-29T14:54:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Libraries\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# sdl2\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# common sources\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# main source\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# shared source\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# bsp source\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# rad source\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# vis sources\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n# q2map generation tool\n\n#\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# set include directories\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# build it\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "src_main/utils/texpaint/CMakeLists.txt" : {
      "ObjectId" : "e0c894b5e8688fe789081fa8742a05f69de24a98",
      "LastModified" : "2018-04-29T14:54:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# sources\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# TexPaint tool\n\n#\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# set include directories\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# windows resources\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# build it\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src_radiant/CMakeLists.txt" : {
      "ObjectId" : "37c9785783400c8f6db3bf1bf0ffead1bf35947f",
      "LastModified" : "2018-04-30T20:33:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# output some status messages\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------\n\n# Version\n\n#-----------------------------------------------------------------------\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------\n\n# Language standard\n\n#-----------------------------------------------------------------------\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-----------------------------------------------------------------------\n\n# Flags\n\n#-----------------------------------------------------------------------\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# define the standard link libraries\n",
        "Line" : 87,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# define standard static MSVC runtime\n",
        "Line" : 91,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# for MSVC 2013+, without /SAFESEH:NO, we can't link against older libraries\n",
        "Line" : 102,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "#-----------------------------------------------------------------------\n\n# Defs\n\n#-----------------------------------------------------------------------\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#if (NOT CMAKE_BUILD_TYPE MATCHES Release)\n\n#    add_definitions(-D_DEBUG=1)\n\n#endif ()\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#-----------------------------------------------------------------------\n\n# Libraries\n\n#-----------------------------------------------------------------------\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#-----------------------------------------------------------------------\n\n# Plugins\n\n#-----------------------------------------------------------------------\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#-----------------------------------------------------------------------\n\n# Modules\n\n#-----------------------------------------------------------------------\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#-----------------------------------------------------------------------\n\n# Radiant\n\n#-----------------------------------------------------------------------\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#-----------------------------------------------------------------------\n\n# Install\n\n#-----------------------------------------------------------------------\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "src_radiant/cmake/FindGLIB.cmake" : {
      "ObjectId" : "57dc949aa7cf1918568e6bea3546226db7f22701",
      "LastModified" : "2018-04-30T03:30:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Glib and its components (gio, gobject etc)\n\n# Once done, this will define\n\n#\n\n#  GLIB_FOUND - system has Glib\n\n#  GLIB_INCLUDE_DIRS - the Glib include directories\n\n#  GLIB_LIBRARIES - link these to use Glib\n\n#\n\n# Optionally, the COMPONENTS keyword can be passed to FIND_PACKAGE()\n\n# and Glib components can be looked for.  Currently, the following\n\n# components can be used, and they define the following variables if\n\n# found:\n\n#\n\n#  gio:             GLIB_GIO_LIBRARIES\n\n#  gobject:         GLIB_GOBJECT_LIBRARIES\n\n#  gmodule:         GLIB_GMODULE_LIBRARIES\n\n#  gthread:         GLIB_GTHREAD_LIBRARIES\n\n#\n\n# Note that the respective _INCLUDE_DIR variables are not set, since\n\n# all headers are in the same directory as GLIB_INCLUDE_DIRS.\n\n#\n\n# Copyright (C) 2012 Raphael Kubo da Costa <rakuco@webkit.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# 1.  Redistributions of source code must retain the above copyright\n\n#     notice, this list of conditions and the following disclaimer.\n\n# 2.  Redistributions in binary form must reproduce the above copyright\n\n#     notice, this list of conditions and the following disclaimer in the\n\n#     documentation and/or other materials provided with the distribution.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND ITS CONTRIBUTORS ``AS\n\n# IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n\n# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\n# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR ITS\n\n# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\n# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\n# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;\n\n# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n\n# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n\n# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n\n# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Files in glib's main include path may include glibconfig.h, which,\n\n# for some odd reason, is normally in $LIBDIR/glib-2.0/include.\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Version detection\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Additional Glib components.  We only look for libraries, as not all of them\n\n# have corresponding headers and all headers are installed alongside the main\n\n# glib ones.\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src_radiant/cmake/FindGTK2.cmake" : {
      "ObjectId" : "4b517c8add37e100958ed4fc64e57799da07481b",
      "LastModified" : "2018-04-30T16:15:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindGTK2\n\n# --------\n\n#\n\n# FindGTK2.cmake\n\n#\n\n# This module can find the GTK2 widget libraries and several of its\n\n# other optional components like gtkmm, glade, and glademm.\n\n#\n\n# NOTE: If you intend to use version checking, CMake 2.6.2 or later is\n\n#\n\n# ::\n\n#\n\n#        required.\n\n#\n\n#\n\n#\n\n# Specify one or more of the following components as you call this find\n\n# module.  See example below.\n\n#\n\n# ::\n\n#\n\n#    gtk\n\n#    gtkmm\n\n#    glade\n\n#    glademm\n\n#\n\n#\n\n#\n\n# The following variables will be defined for your use\n\n#\n\n# ::\n\n#\n\n#    GTK2_FOUND - Were all of your specified components found?\n\n#    GTK2_INCLUDE_DIRS - All include directories\n\n#    GTK2_LIBRARIES - All libraries\n\n#    GTK2_DEFINITIONS - Additional compiler flags\n\n#    GTK2_DLL_DIR - (Windows) Path to required GTK2 DLLS\n\n#    GTK2_DLLS - (Windows) List of required GTK2 DLLS\n\n#    GTK2_ETC_DIR - (Windows) Path to GTK2 configuration files\n\n#    GTK2_LIB_DIR - (Windows) Path to additional GTK2 library files\n\n#    GTK2_ENGINES_DLL_DIR - (Windows) Path to required GTK2 theme engine DLLS\n\n#    GTK2_ENGINES_DLLS - (Windows) List of required GTK2 theme engine DLLS\n\n#    GTK2_THEMES_DIR - (Windows) Path to GTK2 theme files\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#    GTK2_VERSION - The version of GTK2 found (x.y.z)\n\n#    GTK2_MAJOR_VERSION - The major version of GTK2\n\n#    GTK2_MINOR_VERSION - The minor version of GTK2\n\n#    GTK2_PATCH_VERSION - The patch version of GTK2\n\n#\n\n#\n\n#\n\n# Optional variables you can define prior to calling this module:\n\n#\n\n# ::\n\n#\n\n#    GTK2_DEBUG - Enables verbose debugging of the module\n\n#    GTK2_ADDITIONAL_SUFFIXES - Allows defining additional directories to\n\n#                               search for include files\n\n#\n\n#\n\n#\n\n# ================= Example Usage:\n\n#\n\n# ::\n\n#\n\n#    Call find_package() once, here are some examples to pick from:\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#    Require GTK 2.6 or later\n\n#        find_package(GTK2 2.6 REQUIRED gtk)\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#    Require GTK 2.10 or later and Glade\n\n#        find_package(GTK2 2.10 REQUIRED gtk glade)\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#    Search for GTK/GTKMM 2.8 or later\n\n#        find_package(GTK2 2.8 COMPONENTS gtk gtkmm)\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#    if(GTK2_FOUND)\n\n#       include_directories(${GTK2_INCLUDE_DIRS})\n\n#       add_executable(mygui mygui.cc)\n\n#       target_link_libraries(mygui ${GTK2_LIBRARIES})\n\n#    endif()\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2009 Kitware, Inc.\n\n# Copyright 2008-2012 Philip Lowman <philip@yhbt.com>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Version 1.6 (CMake 3.0)\n\n#   * Create targets for each library\n\n#   * Do not link libfreetype\n\n# Version 1.5 (CMake 2.8.12)\n\n#   * 14236: Detect gthread library\n\n#            Detect pangocairo on windows\n\n#            Detect pangocairo with gtk module instead of with gtkmm\n\n#   * 14259: Use vc100 libraries with MSVC11\n\n#   * 14260: Export a GTK2_DEFINITIONS variable to set /vd2 when appropriate\n\n#            (i.e. MSVC)\n\n#   * Use the optimized/debug syntax for _LIBRARY and _LIBRARIES variables when\n\n#     appropriate. A new set of _RELEASE variables was also added.\n\n#   * Remove GTK2_SKIP_MARK_AS_ADVANCED option, as now the variables are\n\n#     marked as advanced by SelectLibraryConfigurations\n\n#   * Detect gmodule, pangoft2 and pangoxft libraries\n\n# Version 1.4 (10/4/2012) (CMake 2.8.10)\n\n#   * 12596: Missing paths for FindGTK2 on NetBSD\n\n#   * 12049: Fixed detection of GTK include files in the lib folder on\n\n#            multiarch systems.\n\n# Version 1.3 (11/9/2010) (CMake 2.8.4)\n\n#   * 11429: Add support for detecting GTK2 built with Visual Studio 10.\n\n#            Thanks to Vincent Levesque for the patch.\n\n# Version 1.2 (8/30/2010) (CMake 2.8.3)\n\n#   * Merge patch for detecting gdk-pixbuf library (split off\n\n#     from core GTK in 2.21).  Thanks to Vincent Untz for the patch\n\n#     and Ricardo Cruz for the heads up.\n\n# Version 1.1 (8/19/2010) (CMake 2.8.3)\n\n#   * Add support for detecting GTK2 under macports (thanks to Gary Kramlich)\n\n# Version 1.0 (8/12/2010) (CMake 2.8.3)\n\n#   * Add support for detecting new pangommconfig.h header file\n\n#     (Thanks to Sune Vuorela & the Debian Project for the patch)\n\n#   * Add support for detecting fontconfig.h header\n\n#   * Call find_package(Freetype) since it's required\n\n#   * Add support for allowing users to add additional library directories\n\n#     via the GTK2_ADDITIONAL_SUFFIXES variable (kind of a future-kludge in\n\n#     case the GTK developers change versions on any of the directories in the\n\n#     future).\n\n# Version 0.8 (1/4/2010)\n\n#   * Get module working under MacOSX fink by adding /sw/include, /sw/lib\n\n#     to PATHS and the gobject library\n\n# Version 0.7 (3/22/09)\n\n#   * Checked into CMake CVS\n\n#   * Added versioning support\n\n#   * Module now defaults to searching for GTK if COMPONENTS not specified.\n\n#   * Added HKCU prior to HKLM registry key and GTKMM specific environment\n\n#      variable as per mailing list discussion.\n\n#   * Added lib64 to include search path and a few other search paths where GTK\n\n#      may be installed on Unix systems.\n\n#   * Switched to lowercase CMake commands\n\n#   * Prefaced internal variables with _GTK2 to prevent collision\n\n#   * Changed internal macros to functions\n\n#   * Enhanced documentation\n\n# Version 0.6 (1/8/08)\n\n#   Added GTK2_SKIP_MARK_AS_ADVANCED option\n\n# Version 0.5 (12/19/08)\n\n#   Second release to cmake mailing list\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#=============================================================\n\n# _GTK2_GET_VERSION\n\n# Internal function to parse the version number in gtkversion.h\n\n#   _OUT_major = Major version number\n\n#   _OUT_minor = Minor version number\n\n#   _OUT_micro = Micro version number\n\n#   _gtkversion_hdr = Header file to parse\n\n#=============================================================\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#=============================================================\n\n# _GTK2_FIND_INCLUDE_DIR\n\n# Internal function to find the GTK include directories\n\n#   _var = variable to set (_INCLUDE_DIR is appended)\n\n#   _hdr = header file to look for\n\n#=============================================================\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If these ever change, things will break.\n",
        "Line" : 226,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "#\n\n# NOTE: The following suffixes cause searching for header files in both of\n\n# these directories:\n\n#         /usr/include/<pkg>\n\n#         /usr/lib/<pkg>/include\n\n#\n",
        "Line" : 246,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# for /usr/lib/gtk-2.0/include\n",
        "Line" : 256,
        "CharPositionInLine" : 45
      },
      "8" : {
        "Text" : "#=============================================================\n\n# _GTK2_FIND_LIBRARY\n\n# Internal function to find libraries packaged with GTK2\n\n#   _var = library variable to create (_LIBRARY is appended)\n\n#=============================================================\n",
        "Line" : 311,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Not GTK versions per se but the versions encoded into Windows\n\n# import libraries (GtkMM 2.14.1 has a gtkmm-vc80-2_4.lib for example)\n\n# Also the MSVC libraries use _ for . (this is handled below)\n",
        "Line" : 323,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Add vc80/vc90/vc100 midfixes\n",
        "Line" : 337,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# Up to gtkmm-win 2.22.0-2 there are no vc110 libraries but vc100 can be used\n",
        "Line" : 345,
        "CharPositionInLine" : 12
      },
      "12" : {
        "Text" : "# For some silly reason the MSVC libraries use _ instead of .\n\n# in the version fields\n",
        "Line" : 373,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# And for debug\n",
        "Line" : 382,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Copy list back to original names\n",
        "Line" : 389,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "#=============================================================\n\n# _GTK2_ADD_TARGET\n\n# Internal function to create targets for GTK2\n\n#   _var = target to create\n\n#=============================================================\n",
        "Line" : 509,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Do not create the target if dependencies are missing\n",
        "Line" : 525,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "#=============================================================\n",
        "Line" : 577,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#\n\n# main()\n\n#\n",
        "Line" : 579,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Assume they only want GTK\n",
        "Line" : 589,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "#\n\n# If specified, enforce version number\n\n#\n",
        "Line" : 593,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# If we can't find the GTK include dir, we can't do version checking\n",
        "Line" : 621,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# If the version check fails, exit out of the module here\n",
        "Line" : 637,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "#\n\n# On MSVC, according to https://wiki.gnome.org/gtkmm/MSWindows, the /vd2 flag needs to be\n\n# passed to the compiler in order to use gtkmm\n\n#\n",
        "Line" : 642,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\n\n# Find all components\n\n#\n",
        "Line" : 656,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Left for compatibility with previous versions.\n",
        "Line" : 667,
        "CharPositionInLine" : 8
      },
      "26" : {
        "Text" : "#\n\n# Solve for the GTK2 version if we haven't already\n\n#\n",
        "Line" : 831,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#\n\n# Try to enforce components\n\n#\n",
        "Line" : 842,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# This gets set to GTK2_FOUND\n",
        "Line" : 846,
        "CharPositionInLine" : 40
      },
      "29" : {
        "Text" : "# Unset our variables.\n",
        "Line" : 949,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 30
    },
    "src_radiant/cmake/FindGit.cmake" : {
      "ObjectId" : "852f919b624809fea9918e9c4f7644d1709c0c26",
      "LastModified" : "2018-04-30T16:15:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindGit\n\n# -------\n\n#\n\n#\n\n#\n\n# The module defines the following variables:\n\n#\n\n# ::\n\n#\n\n#    GIT_EXECUTABLE - path to git command line client\n\n#    GIT_FOUND - true if the command line client was found\n\n#    GIT_VERSION_STRING - the version of git found (since CMake 2.8.8)\n\n#\n\n# Example usage:\n\n#\n\n# ::\n\n#\n\n#    find_package(Git)\n\n#    if(GIT_FOUND)\n\n#      message(\"git found: ${GIT_EXECUTABLE}\")\n\n#    endif()\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2010 Kitware, Inc.\n\n# Copyright 2012 Rolf Eike Beer <eike@sf-mail.de>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see below.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# \n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# \n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n# \n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n# \n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look for 'git' or 'eg' (easy git)\n\n#\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Prefer .cmd variants on Windows unless running in a Makefile\n\n# in the MSYS shell.\n\n#\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# GitHub search path for Windows\n",
        "Line" : 75,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# SourceTree search path for Windows\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set GIT_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "src_radiant/cmake/FindGtkGLExt.cmake" : {
      "ObjectId" : "d4e76d32090fe017e7dd969d72ea046a7009fb7c",
      "LastModified" : "2018-04-30T16:15:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Files in gtkglext's main include path may include gdkglext-config.h, which,\n\n# for some odd reason, is normally in $LIBDIR/gtkglext-1.0/include.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src_radiant/cmake/scipts/package.cmake" : {
      "ObjectId" : "ec96bf963913bfbd6c8c793a78bb5c3e0abc0d92",
      "LastModified" : "2018-04-30T16:15:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# binary: --target package\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# source: --target package_source\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# configure\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src_radiant/contrib/CMakeLists.txt" : {
      "ObjectId" : "3698e73b6806c8f3182d226321a6d1e993197cfa",
      "LastModified" : "2018-04-30T16:15:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_subdirectory(camera)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src_radiant/contrib/bobtoolz/CMakeLists.txt" : {
      "ObjectId" : "37b8689905f2caf433d14661bd6512451bae77d9",
      "LastModified" : "2018-04-30T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src_radiant/contrib/brushexport/CMakeLists.txt" : {
      "ObjectId" : "c8a1adf5344efe1c56b4a23825f62eb39fb16284",
      "LastModified" : "2018-04-30T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src_radiant/contrib/camera/CMakeLists.txt" : {
      "ObjectId" : "a42e05a46d00452e32c7cb35062b7c2cee61f593",
      "LastModified" : "2018-04-30T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src_radiant/contrib/prtview/CMakeLists.txt" : {
      "ObjectId" : "cbfba132c75e808670c2578c845d3248a605218c",
      "LastModified" : "2018-04-30T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src_radiant/contrib/shaderplug/CMakeLists.txt" : {
      "ObjectId" : "673a74abae5184bd83a1a56d5b951a9b9d9fc2cc",
      "LastModified" : "2018-04-30T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src_radiant/contrib/sunplug/CMakeLists.txt" : {
      "ObjectId" : "dd3b2556cf3fcb79a717cfaff0eca764ee5def09",
      "LastModified" : "2018-04-30T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src_radiant/contrib/ufoaiplug/CMakeLists.txt" : {
      "ObjectId" : "6b928839f100d6d6d77653276dc0821dc98c24a3",
      "LastModified" : "2018-04-30T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src_radiant/include/CMakeLists.txt" : {
      "ObjectId" : "4f30433e31d0fdebb86cdf1553c8e103e1bf3f8d",
      "LastModified" : "2018-04-30T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src_radiant/libs/CMakeLists.txt" : {
      "ObjectId" : "10b56c34119f493be8b27b156f2b520c04f91964",
      "LastModified" : "2018-04-30T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src_radiant/libs/cmdlib/CMakeLists.txt" : {
      "ObjectId" : "63272ae6fecbba2de45f81cf7b3e464d2ab80cad",
      "LastModified" : "2018-04-30T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src_radiant/libs/container/CMakeLists.txt" : {
      "ObjectId" : "bbcfe550b0f07225b1b7d60642630ede06dad775",
      "LastModified" : "2018-04-30T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src_radiant/libs/ddslib/CMakeLists.txt" : {
      "ObjectId" : "40d32f0e180687c2e68111319b06a45508bbeb0b",
      "LastModified" : "2018-04-30T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src_radiant/libs/debugging/CMakeLists.txt" : {
      "ObjectId" : "cc216ea6f38562b4ca1bda64c8e78061bbc02c08",
      "LastModified" : "2018-04-30T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src_radiant/libs/generic/CMakeLists.txt" : {
      "ObjectId" : "e3970f304fca864d4e4b9878ca6eb0cd46043baa",
      "LastModified" : "2018-04-30T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src_radiant/libs/gtkutil/CMakeLists.txt" : {
      "ObjectId" : "96ab3061bf0ee3b3bd5e82b26220f920ff40c383",
      "LastModified" : "2018-04-30T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src_radiant/libs/l_net/CMakeLists.txt" : {
      "ObjectId" : "d355b251925417101e02f9285b4c70b36d868534",
      "LastModified" : "2018-04-30T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src_radiant/libs/math/CMakeLists.txt" : {
      "ObjectId" : "d198f3c5ef496e7d7b3aaa225ea6bd21d77867f4",
      "LastModified" : "2018-04-30T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src_radiant/libs/mathlib/CMakeLists.txt" : {
      "ObjectId" : "a545214d3397fabd8af171a58817e055169aec75",
      "LastModified" : "2018-04-30T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src_radiant/libs/memory/CMakeLists.txt" : {
      "ObjectId" : "31ee7e93670bdc22808f5ef54b98a47d5142c321",
      "LastModified" : "2018-04-30T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src_radiant/libs/modulesystem/CMakeLists.txt" : {
      "ObjectId" : "a14ec6ea0a4bb6ef1f8d005c24014154927a5be8",
      "LastModified" : "2018-04-30T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src_radiant/libs/os/CMakeLists.txt" : {
      "ObjectId" : "7843385ee8c976da3dc00cdcde18f70e4e42f8b4",
      "LastModified" : "2018-04-30T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src_radiant/libs/picomodel/CMakeLists.txt" : {
      "ObjectId" : "c2d4803088a4158f4a5eaa0d67529208f29843b5",
      "LastModified" : "2018-04-30T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src_radiant/libs/profile/CMakeLists.txt" : {
      "ObjectId" : "219216886669f2a1489cc3e6525a61f6166631b2",
      "LastModified" : "2018-04-30T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src_radiant/libs/script/CMakeLists.txt" : {
      "ObjectId" : "9923035fe286ec6b03713eb89afc18173e3f8743",
      "LastModified" : "2018-04-30T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src_radiant/libs/signal/CMakeLists.txt" : {
      "ObjectId" : "878c874ee85c9a1fae36995fb8edbce5a5d752db",
      "LastModified" : "2018-04-30T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src_radiant/libs/splines/CMakeLists.txt" : {
      "ObjectId" : "cf6e820784a0116413df06bdd8937c9fe222cc63",
      "LastModified" : "2018-04-30T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src_radiant/libs/stream/CMakeLists.txt" : {
      "ObjectId" : "b86e2b7efdf542b0ef63a6a30484830dfcbcc456",
      "LastModified" : "2018-04-30T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src_radiant/libs/string/CMakeLists.txt" : {
      "ObjectId" : "e86f457ef3dc470bd23e359728b90e32e9bf1693",
      "LastModified" : "2018-04-30T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src_radiant/libs/uilib/CMakeLists.txt" : {
      "ObjectId" : "62e1d6851d0556825fa75f8fa20ca414c1bf2779",
      "LastModified" : "2018-04-30T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src_radiant/libs/xml/CMakeLists.txt" : {
      "ObjectId" : "bff946bdfe93965932811b5bd8ee3d78d7d1716b",
      "LastModified" : "2018-04-30T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src_radiant/plugins/CMakeLists.txt" : {
      "ObjectId" : "9d133f3abe53e2aab113e8ce16ef0361a922407d",
      "LastModified" : "2018-04-30T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src_radiant/plugins/archivepak/CMakeLists.txt" : {
      "ObjectId" : "5413c83a0e95f360cf3f34a862c60df318867f71",
      "LastModified" : "2018-04-30T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src_radiant/plugins/archivewad/CMakeLists.txt" : {
      "ObjectId" : "bc0d0bd6d9b84c565cbd23797b23bfa3da020520",
      "LastModified" : "2018-04-30T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src_radiant/plugins/archivezip/CMakeLists.txt" : {
      "ObjectId" : "d2f97135c7ede5149b777eb5b60a6d17f360b830",
      "LastModified" : "2018-04-30T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src_radiant/plugins/entity/CMakeLists.txt" : {
      "ObjectId" : "d2e84588105af83f0c18273ab7113caa1c38e6af",
      "LastModified" : "2018-04-30T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src_radiant/plugins/image/CMakeLists.txt" : {
      "ObjectId" : "15013be31e6c5be85a4429d17e67393851469873",
      "LastModified" : "2018-04-30T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src_radiant/plugins/imagehl/CMakeLists.txt" : {
      "ObjectId" : "b04bb20d01ca89b788f9ec740aa7ffd208f51eaa",
      "LastModified" : "2018-04-30T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src_radiant/plugins/imagepng/CMakeLists.txt" : {
      "ObjectId" : "611f1c0b7c8ec2accdf1fcdb51336faa8b36198f",
      "LastModified" : "2018-04-30T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src_radiant/plugins/imageq2/CMakeLists.txt" : {
      "ObjectId" : "2df432553b5927a608ddf8c1b4ef5d5a0f66d99f",
      "LastModified" : "2018-04-30T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src_radiant/plugins/mapq3/CMakeLists.txt" : {
      "ObjectId" : "34382913abb143b64cbc9ecddf01fb41489c07e0",
      "LastModified" : "2018-04-30T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src_radiant/plugins/mapxml/CMakeLists.txt" : {
      "ObjectId" : "aa717601c52062fd3c3469c72ff4d9b05869c526",
      "LastModified" : "2018-04-30T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src_radiant/plugins/md3model/CMakeLists.txt" : {
      "ObjectId" : "06fb6d5a6f4601f83304d6d9f5cc7a1379a1f588",
      "LastModified" : "2018-04-30T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src_radiant/plugins/model/CMakeLists.txt" : {
      "ObjectId" : "213ee7122a2cf12d59509f384c9f891e936d525f",
      "LastModified" : "2018-04-30T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src_radiant/plugins/shaders/CMakeLists.txt" : {
      "ObjectId" : "43659b808d75250f548dd62d8f11784efc0591cd",
      "LastModified" : "2018-04-30T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src_radiant/plugins/vfspk3/CMakeLists.txt" : {
      "ObjectId" : "d14f84048f0fad09e91ca3d5e54106a55686f310",
      "LastModified" : "2018-04-30T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src_radiant/radiant/CMakeLists.txt" : {
      "ObjectId" : "f847436012e908e2a33f990e1fb8e4c1456fce01",
      "LastModified" : "2018-04-30T16:15:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 73,
    "CMAKESOURCE" : 1,
    "MAKEFILE" : 3
  },
  "ElapsedTime" : 2435
}