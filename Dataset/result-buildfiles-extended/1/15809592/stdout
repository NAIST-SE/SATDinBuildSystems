{
  "Repository" : "15809592",
  "Revision" : "HEAD",
  "ObjectId" : "25377b4533d7ff9266beae6f59d125795c1bf419",
  "CommitTime" : "2019-04-16T14:07:10Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "ad022d95401be744ea0ca025b9c79fb2c20a81ba",
      "LastModified" : "2019-03-31T16:32:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Destinition bitness of the build\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Prevent \"directory not exists\" warnings when building XCode as project\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Don't store built executables into \"Debug\" and \"Release\" folders\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Shared deploymend on Windows platforms\n",
        "Line" : 70,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Unix2Dos utility to converyt and install text files for Windows platform\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Version of complete toolchain\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Dependent libraries\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Build dependent libraries only. Workaround for Ninja\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Build if Qt support enabled\n",
        "Line" : 141,
        "CharPositionInLine" : 18
      },
      "9" : {
        "Text" : "# Append changelog file\n",
        "Line" : 148,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Append license files\n",
        "Line" : 150,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Append changelog file\n",
        "Line" : 183,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# Deployment list\n",
        "Line" : 185,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# Append changelog file\n",
        "Line" : 198,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Deployment list\n",
        "Line" : 200,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# Shared deployment on Windows\n",
        "Line" : 210,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Also deploy tools\n",
        "Line" : 303,
        "CharPositionInLine" : 13
      },
      "17" : {
        "Text" : "# Append Project License file\n",
        "Line" : 320,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Process UNIX2DOS if needed\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# =============== Deployment stuff ===============\n",
        "Line" : 326,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Deployment for UNIX-like operating system except macOS\n",
        "Line" : 363,
        "CharPositionInLine" : 23
      },
      "21" : {
        "Text" : "# Deployment for Windows\n",
        "Line" : 389,
        "CharPositionInLine" : 10
      },
      "CommentCount" : 22
    },
    "Editor/CMakeLists.txt" : {
      "ObjectId" : "4967166c63029a19e72ac52d8b0b33d49fc52b6e",
      "LastModified" : "2019-03-31T00:19:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Automoc\n",
        "Line" : 4,
        "CharPositionInLine" : 19
      },
      "1" : {
        "Text" : "# Tell CMake to run moc when necessary:\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# As moc files are generated in the binary dir, tell CMake\n\n# to always look for includes there:\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Version\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Default GIT version\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Common building properties and optimization flags\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build properties for executable projects\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Find extra libraries to link when using static Qt (use ${QT_EXTRA_LIBS}!)\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Find the SDL Mixer X library and it's dependencies\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# include shared code modules\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# =============== Translations ===============\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# ===========================================\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Executables fail to build with Qt 5 in the default configuration\n\n# without -fPIE. We add that here.\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# TODO: Create external executable API\n\n# which will allow usage of LunaTester on the Wine with\n\n# Linux/Mac native builds or from 64-bit editor builds\n",
        "Line" : 447,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Workaround for MOC\n",
        "Line" : 456,
        "CharPositionInLine" : 33
      },
      "15" : {
        "Text" : "# We need add -DQT_WIDGETS_LIB when using QtWidgets in Qt 5.\n",
        "Line" : 482,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Editor themes\n",
        "Line" : 662,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Standalone help\n",
        "Line" : 671,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "Editor/languages.cmake" : {
      "ObjectId" : "2184032241947e9da7bc8b39601c8b88d9527931",
      "LastModified" : "2018-09-02T20:26:04Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Editor/version.cmake" : {
      "ObjectId" : "9889460ac63ab2060d81f6397c97c8a84b9469d5",
      "LastModified" : "2018-11-12T00:22:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Major\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Minor\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Revision\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Patch\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Type of version: \"-alpha\",\"-beta\",\"-dev\", or \"\" aka \"release\"\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Engine/CMakeLists.txt" : {
      "ObjectId" : "d19a6bd6d67fe01803449774bcc6cf5e95d8f356",
      "LastModified" : "2019-03-31T00:19:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Version\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Default GIT version\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Common building properties and optimization flags\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Build properties for executable projects\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Find the SDL Mixer X library and it's dependencies\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# include shared code modules\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# message(\"-- Compiling locale ${LangSrcFile} into ${LangBaseFile}.qm\")\n",
        "Line" : 76,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "#foreach(LangBinFile ${PGE_LANG_BIN_FILES})\n\n#    message(\"-- locale ${LangBinFile} will be installed\")\n\n#endforeach()\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# -DIS_CXX -s USE_PTHREADS=1\n",
        "Line" : 315,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -s EMTERPRETIFY=1 -s EMTERPRETIFY_ASYNC=1  -s 'EMTERPRETIFY_FILE=\\\"pge_engine.binary\\\"'\")\n\n#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -s ASSERTIONS=1\")\n\n# -s \\\"EMTERPRETIFY_WHITELIST=['_main']\\\"\n",
        "Line" : 317,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# set(LINK_FLAGS \"${LINK_FLAGS} -DIS_LINK -s USE_PTHREADS=1 -s FORCE_FILESYSTEM=1 --embed-file '${CMAKE_CURRENT_SOURCE_DIR}/@languages'\")\n",
        "Line" : 326,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# add \"USE_LUA_JIT\" when use LuaJIT or don't add when using PUC-Rio Lua\n",
        "Line" : 370,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Required to link on 64-bit macOS\n\n# See: http://luajit.org/install.html\n",
        "Line" : 496,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 13
    },
    "Engine/android-project/moondust/proguard-rules.pro" : {
      "ObjectId" : "eaf0e916cdf0b2a92e4ad3c261f620b2f0f50dbb",
      "LastModified" : "2019-02-10T18:22:28Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# By default, the flags in this file are appended to flags specified\n\n# in [sdk]/tools/proguard/proguard-android.txt\n\n# You can edit the include path and order by changing the proguardFiles\n\n# directive in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add any project specific keep options here:\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Engine/version.cmake" : {
      "ObjectId" : "09a7b074869ebf405ec051bbd4d35d005cb381e4",
      "LastModified" : "2019-02-10T18:22:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Major\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Minor\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Revision\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Patch\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Type of version: \"-alpha\",\"-beta\",\"-dev\", or \"\" aka \"release\"\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "GIFs2PNG/CMakeLists.txt" : {
      "ObjectId" : "646f618e6deefec728a0e78d26c2e4478e521a31",
      "LastModified" : "2019-03-31T00:19:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Version\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Default GIT version\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Common building properties and optimization flags\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Build properties for executable projects\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "GIFs2PNG/version.cmake" : {
      "ObjectId" : "fac1e13e30d8110bf21fec2d0cac4da59bb22764",
      "LastModified" : "2019-02-10T18:22:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Major\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Minor\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Revision\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Patch\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Type of version: \"-alpha\",\"-beta\",\"-dev\", or \"\" aka \"release\"\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "LazyFixTool/CMakeLists.txt" : {
      "ObjectId" : "a64e736c10e613ece2ae76a0beb04ba41c240a10",
      "LastModified" : "2019-03-31T00:19:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Version\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Default GIT version\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Common building properties and optimization flags\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Build properties for executable projects\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "LazyFixTool/version.cmake" : {
      "ObjectId" : "b180fa5ee46c1197ac20c754c1ba5a9e649d66d1",
      "LastModified" : "2019-02-10T18:22:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Major\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Minor\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Revision\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Patch\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Type of version: \"-alpha\",\"-beta\",\"-dev\", or \"\" aka \"release\"\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Maintainer/CMakeLists.txt" : {
      "ObjectId" : "6e2ffaae6bec37d7c5c61589910a8aec01ee9bb4",
      "LastModified" : "2019-03-21T20:27:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Automoc\n",
        "Line" : 4,
        "CharPositionInLine" : 19
      },
      "1" : {
        "Text" : "# Tell CMake to run moc when necessary:\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# As moc files are generated in the binary dir, tell CMake\n\n# to always look for includes there:\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Version\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Default GIT version\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Common building properties and optimization flags\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build properties for executable projects\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Find extra libraries to link when using static Qt (use ${QT_EXTRA_LIBS}!)\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Executables fail to build with Qt 5 in the default configuration\n\n# without -fPIE. We add that here.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Workaround for MOC\n",
        "Line" : 79,
        "CharPositionInLine" : 33
      },
      "10" : {
        "Text" : "# The Qt5Widgets_INCLUDES also includes the include directories for\n\n# dependencies QtCore and QtGui\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# We need add -DQT_WIDGETS_LIB when using QtWidgets in Qt 5.\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "Maintainer/version.cmake" : {
      "ObjectId" : "26b9e9d0a60d1faae549a4a2ebfbd4e269da8b9d",
      "LastModified" : "2019-02-10T18:22:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Major\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Minor\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Revision\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Patch\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Type of version: \"-alpha\",\"-beta\",\"-dev\", or \"\" aka \"release\"\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "MusicPlayer/CMakeLists.txt" : {
      "ObjectId" : "3dd09c0be05d72bfc617495df4299c1f2b7101b1",
      "LastModified" : "2019-03-21T20:27:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Automoc\n",
        "Line" : 4,
        "CharPositionInLine" : 19
      },
      "1" : {
        "Text" : "# Tell CMake to run moc when necessary:\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# As moc files are generated in the binary dir, tell CMake\n\n# to always look for includes there:\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Version\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Default GIT version\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Common building properties and optimization flags\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build properties for executable projects\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Find extra libraries to link when using static Qt (use ${QT_EXTRA_LIBS}!)\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Find the SDL Mixer X library and it's dependencies\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# WORKAROUND: Avoid ImpLib file creation on a non-library project\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Prune --out-implib from executables. It doesn't make sense even\n\n# with --export-all-symbols.\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Executables fail to build with Qt 5 in the default configuration\n\n# without -fPIE. We add that here.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Workaround for MOC\n",
        "Line" : 98,
        "CharPositionInLine" : 33
      },
      "13" : {
        "Text" : "# The Qt5Widgets_INCLUDES also includes the include directories for\n\n# dependencies QtCore and QtGui\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# We need add -DQT_WIDGETS_LIB when using QtWidgets in Qt 5.\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "MusicPlayer/version.cmake" : {
      "ObjectId" : "3786a69e9b09f06e6bf7fd13069945734c4f0109",
      "LastModified" : "2019-03-21T20:27:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Major\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Minor\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Revision\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Patch\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Type of version: \"-alpha\",\"-beta\",\"-dev\", or \"\" aka \"release\"\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "PNG2GIFs/CMakeLists.txt" : {
      "ObjectId" : "468c7e20e3e06b50198be7b669016f94d5f38b81",
      "LastModified" : "2019-03-31T00:19:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Version\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Default GIT version\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Common building properties and optimization flags\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Build properties for executable projects\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "PNG2GIFs/version.cmake" : {
      "ObjectId" : "b54221d198d66c33bf6fa42e2c97065530299c87",
      "LastModified" : "2019-02-10T18:22:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Major\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Minor\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Revision\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Patch\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Type of version: \"-alpha\",\"-beta\",\"-dev\", or \"\" aka \"release\"\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "PlayableCalibrator/CMakeLists.txt" : {
      "ObjectId" : "92992738024ccba0f19d40d2b4cb3434ae1f5714",
      "LastModified" : "2019-03-31T00:19:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Automoc\n",
        "Line" : 4,
        "CharPositionInLine" : 19
      },
      "1" : {
        "Text" : "# Tell CMake to run moc when necessary:\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# As moc files are generated in the binary dir, tell CMake\n\n# to always look for includes there:\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Version\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Default GIT version\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Common building properties and optimization flags\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build properties for executable projects\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Find extra libraries to link when using static Qt (use ${QT_EXTRA_LIBS}!)\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Workaround for MOC\n",
        "Line" : 83,
        "CharPositionInLine" : 33
      },
      "9" : {
        "Text" : "# We need add -DQT_WIDGETS_LIB when using QtWidgets in Qt 5.\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Calibrator's default properties\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Calibrator's stuff\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "PlayableCalibrator/version.cmake" : {
      "ObjectId" : "af9448cdf86c8c17c83bfb9ebe76e439f4cc9108",
      "LastModified" : "2019-02-10T18:22:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Major\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Minor\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Revision\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Patch\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Type of version: \"-alpha\",\"-beta\",\"-dev\", or \"\" aka \"release\"\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "ServerLib/ServerAPI/ServerAPI.pro" : {
      "ObjectId" : "708bb36f28cbcf6bdda6935d3f60b891b2f30be3",
      "LastModified" : "2019-02-10T18:22:28Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2015-04-12T18:04:18\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ServerLib/ServerApp/ServerApp.pro" : {
      "ObjectId" : "566021e22d9eb7563c0e9af3b69aa280297fbafb",
      "LastModified" : "2019-02-10T18:22:28Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2015-04-18T11:22:48\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ServerLib/ServerAppV2/ServerAppV2.pro" : {
      "ObjectId" : "aecf5c324a99fee4405a12b226e0b2769a6d5e3c",
      "LastModified" : "2019-02-10T18:22:28Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2015-06-24T22:05:14\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ServerLib/ServerAppV2ClientSide/ServerAppV2ClientSide.pro" : {
      "ObjectId" : "f998a227afdfe6e86331b4032917db0835f9bc51",
      "LastModified" : "2019-02-10T18:22:28Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2015-06-25T18:09:41\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ServerLib/ServerApp_Asio/ServerAsio/ServerAsio.pro" : {
      "ObjectId" : "58ffc37506743c87acd144787af4999f079198dc",
      "LastModified" : "2019-02-10T18:22:28Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2015-06-27T08:04:05\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "TestProxies/LunaTester/CMakeLists.txt" : {
      "ObjectId" : "8ed6fdeacf90242d7312cd1ed9f97df95ddaf731",
      "LastModified" : "2019-02-10T18:22:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# =============================================================================\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Strip garbage\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Global optimization flags\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Disable bogus MSVC warnings\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# =============================================================================\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "_Libs/Unix2Dos/CMakeLists.txt" : {
      "ObjectId" : "363c82bfff331dfaa7104fb8398c803fa4a7eddf",
      "LastModified" : "2019-02-10T18:22:28Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "_Libs/luabind/CMakeLists.txt" : {
      "ObjectId" : "a2e7a1250cb47a1ef1051a4e63a3fc46af8f197a",
      "LastModified" : "2019-02-10T18:22:28Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "_Libs/luabind/build_props.cmake" : {
      "ObjectId" : "153a1b97c0d848f18904f6c17f1fef92771fab54",
      "LastModified" : "2019-03-21T20:27:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If platform is Emscripten\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Strip garbage\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Global optimization flags\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Force to always compile with W4\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Update if necessary\n",
        "Line" : 53,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Disable bogus MSVC warnings\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# -fPIC thing\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "_Libs/oolua/project/oolua.pro" : {
      "ObjectId" : "d3ab5daf0021f57fcac52605bab88171b92ea332",
      "LastModified" : "2019-02-10T18:22:28Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2015-03-06T14:10:07\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "_Misc/DummyDraw/DummyDraw.pro" : {
      "ObjectId" : "a5b6a58a0b596f4fccfea54b7cbd493dafae80ce",
      "LastModified" : "2019-02-10T18:22:28Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2015-09-26T11:07:43\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "_Misc/DummyJSTest/DummyJSTest.pro" : {
      "ObjectId" : "33e6ce136699db73ddfd776a4cba3ff17711afb7",
      "LastModified" : "2019-02-10T18:22:28Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2016-06-28T23:02:52\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "_Misc/FileCollecting_Benchmark/FileCollecting_Benchmark.pro" : {
      "ObjectId" : "da1c233bea2dcd12f0b1fceaca6b6f2d4f1df799",
      "LastModified" : "2019-02-10T18:22:28Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "_Misc/H_Generators/H_Generators.pro" : {
      "ObjectId" : "e7ed8d3f2814344d2e8b3e96eb188ae680b73eda",
      "LastModified" : "2019-02-10T18:22:28Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "_Misc/PGEFilelib_QT_test/PGEFilelib_QT_test.pro" : {
      "ObjectId" : "e14e7d3e80abe96268900ca6d0153cd17a352943",
      "LastModified" : "2019-02-10T18:22:28Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "_Misc/PGEFilelib_STL_test/PGEFilelib_STL_test.pro" : {
      "ObjectId" : "3efcaa03aab503b62e648bdbb0eb880f86786847",
      "LastModified" : "2019-02-10T18:22:28Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "_Misc/SMBX64-Calculator/SMBX64-Calculator.pro" : {
      "ObjectId" : "c70e570e57183bc1c72d40b483bdac1dfbf2f56b",
      "LastModified" : "2019-02-10T18:22:28Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2016-09-01T13:33:43\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "_common/ConfigPackManager/PGE_ConfigPackManager.cmake" : {
      "ObjectId" : "5803185dfdcffe38d9df7f845e05e43d64666b56",
      "LastModified" : "2019-02-10T18:22:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# message(\"Path to ConfigPackManager is [${CMAKE_CURRENT_LIST_DIR}]\")\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "_common/DirManager/dirman.cmake" : {
      "ObjectId" : "0e76e9973b5b90ed8f72b88cebeeb78e5d5fc5c3",
      "LastModified" : "2019-02-10T18:22:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# message(\"Path to DirManager is [${CMAKE_CURRENT_LIST_DIR}]\")\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "_common/FileMapper/FileMapper.cmake" : {
      "ObjectId" : "cdd91fa0bf0f54895ab7e4bdeb7fb6d14cad2e1a",
      "LastModified" : "2019-02-10T18:22:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# message(\"Path to FileMapper is [${CMAKE_CURRENT_LIST_DIR}]\")\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "_common/IniProcessor/IniProcessor.cmake" : {
      "ObjectId" : "99f53fcbe6aaae940de891b31e6dd5e84a32e710",
      "LastModified" : "2019-02-10T18:22:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# message(\"Path to IniProcessor is [${CMAKE_CURRENT_LIST_DIR}]\")\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "_common/StackWalker/StackWalker.cmake" : {
      "ObjectId" : "9a54dbba24f447c2c3516fb4920257609b947fa0",
      "LastModified" : "2019-02-10T18:22:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# message(\"Path to StackWalker is [${CMAKE_CURRENT_LIST_DIR}]\")\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "_common/Utf8Main/utf8main.cmake" : {
      "ObjectId" : "1dcac78a88ee2dbe751b73590aece0307ded55e5",
      "LastModified" : "2019-02-10T18:22:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# message(\"Path to UTF8-Main is [${CMAKE_CURRENT_LIST_DIR}]\")\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "_common/Utils/Utils.cmake" : {
      "ObjectId" : "85793bfa52ba55b30e46049a7c8fdc02eb292ca2",
      "LastModified" : "2019-02-10T18:22:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# message(\"Path to Utils is [${CMAKE_CURRENT_LIST_DIR}]\")\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "_common/Utils/UtilsSDL.cmake" : {
      "ObjectId" : "55ffc1e8036f39445768839049de99a79163ed10",
      "LastModified" : "2019-02-10T18:22:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# message(\"Path to UtilsSDL is [${CMAKE_CURRENT_LIST_DIR}]\")\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "_common/Utils/openUrl.cmake" : {
      "ObjectId" : "dc1617468892b7e490ae1aea6686fbf81b67be8d",
      "LastModified" : "2019-02-10T18:22:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# message(\"Path to openUrl is [${CMAKE_CURRENT_LIST_DIR}]\")\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "_common/WinDeployQt.cmake" : {
      "ObjectId" : "569bfef50e359293606bf1e31cb7455f1489b5de",
      "LastModified" : "2019-02-10T18:22:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# CMake wrapper to call windeployqt in Windows\n\n#\n\n# The files are placed in windeployqt folder in the toplevel\n\n# build directory\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "_common/build_env.cmake" : {
      "ObjectId" : "0aa7331612e0dc656225bf164b719a91c1f0156c",
      "LastModified" : "2019-03-31T16:32:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Global environment variables and features\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# let macOS Sierra to be a minimal supported platform (as Qt 5.12 does)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Dependencies\n",
        "Line" : 17,
        "CharPositionInLine" : 19
      },
      "3" : {
        "Text" : "# Allow install into space-containing paths\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "_common/build_props.cmake" : {
      "ObjectId" : "65791c3613ad0b50349bec157971f3693c955c78",
      "LastModified" : "2019-03-31T16:32:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If platform is Emscripten\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Strip garbage\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# macOS El Capitan\n",
        "Line" : 15,
        "CharPositionInLine" : 45
      },
      "3" : {
        "Text" : "# Global optimization flags\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Force to always compile with W4\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Update if necessary\n",
        "Line" : 65,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Disable bogus MSVC warnings\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# -fPIC thing\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "_common/executable_build_props.cmake" : {
      "ObjectId" : "83175f569548333e28f1b58775e374ba10069c91",
      "LastModified" : "2019-03-31T16:32:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# WORKAROUND: Avoid ImpLib file creation on a non-library project\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Prune --out-implib from executables. It doesn't make sense even\n\n# with --export-all-symbols.\n",
        "Line" : 3,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "_common/find_linguist.cmake" : {
      "ObjectId" : "5ce968c301a1de17fe0c9b37e9cd35afa47e88c0",
      "LastModified" : "2019-03-31T16:32:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIXME: Remove this ugly workaround when implement proper recursive search per Qt directory\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "_common/find_sdl_mixer_x.cmake" : {
      "ObjectId" : "d965e7c55717c2cd07cb0f57a13157be180cbeed",
      "LastModified" : "2019-03-31T16:32:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Search and link SDL Mixer X and it's dependencies\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# message(\"Search ${LibToFind} but found ${${LibToFind}_DEST_LIBRARY}...\")\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# message(\"Append To List ${ListToAppend}...\")\n",
        "Line" : 10,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# message(\"XXX FOUND LIBS: ${FOUND_LIBS} XXX\")\n",
        "Line" : 114,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# message(\"XXX FOUND LIBS: ${FOUND_LIBS} XXX\")\n",
        "Line" : 233,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "_common/fmt/CMakeLists.txt" : {
      "ObjectId" : "d99babdb418cfc267bc40d17782ab33cc24779db",
      "LastModified" : "2019-03-31T16:32:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Version variables\n",
        "Line" : 5,
        "CharPositionInLine" : 20
      },
      "1" : {
        "Text" : "# Visibility\n",
        "Line" : 9,
        "CharPositionInLine" : 20
      },
      "2" : {
        "Text" : "# Determine if fmt is built as a subproject (using add_subdirectory)\n\n# or if it is the master project.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Joins arguments and places the results in ${result_var}.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set the default CMAKE_BUILD_TYPE to Release.\n\n# This should be done before the project command since the latter can set\n\n# CMAKE_BUILD_TYPE itself (it does so for nmake).\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Options that control generation of various targets.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Starting with cmake 3.0 VERSION is part of the project command.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Use math to skip leading zeros if any.\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# If Microsoft SDK is installed create script run-msbuild.bat that\n\n# calls SetEnv.cmd to set up build environment and runs msbuild.\n\n# It is useful when building Visual Studio projects with the SDK\n\n# toolchain rather than Visual Studio.\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Set FrameworkPathOverride to get rid of MSB3644 warnings.\n",
        "Line" : 83,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Get the list of ignored files from .gitignore.\n",
        "Line" : 110,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 11
    },
    "_common/fmt/fmt.cmake" : {
      "ObjectId" : "162213d4da6a71f1fc84ebcdc35cdfa7fbb98621",
      "LastModified" : "2019-03-31T16:32:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# message(\"Path to FMT is [${CMAKE_CURRENT_LIST_DIR}]\")\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "_common/fmt/orig/CMakeLists.txt" : {
      "ObjectId" : "3259d78882d5b9cf1b4efe1542cff93c2a3c2e24",
      "LastModified" : "2019-03-31T16:32:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the fmt library, its includes and the needed defines.\n\n# *.cc are added to FMT_HEADERS for the header-only configuration.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Starting with cmake 3.1 the CXX_STANDARD property can be used instead.\n\n# Note: Don't make -std=c++11 public or interface, since it breaks projects\n\n# that use C++14.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fix rpmlint warning:\n\n# unused-direct-shlib-dependency /usr/lib/libformat.so.1.1.0 /lib/libm.so.6.\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# additionally define a header only library when cmake is new enough\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Install targets.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Generate the version, config and target files into the build directory.\n",
        "Line" : 71,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Install version, config and target files.\n",
        "Line" : 83,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Install the library and headers.\n",
        "Line" : 90,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "_common/git_info.cmake" : {
      "ObjectId" : "4ce95e14b0a46894f3c4e73e10a7b2565f9add7c",
      "LastModified" : "2019-03-31T16:32:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Get the current working branch\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Identify the Pull-Request\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Get the latest abbreviated commit hash of the working branch\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "_common/git_version.cmake" : {
      "ObjectId" : "e8f78ece1ef2f2212d796ca3a449273b56cd5b96",
      "LastModified" : "2019-03-31T16:32:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "_common/library_AudioCodecs.cmake" : {
      "ObjectId" : "abc772fee98976a4914605494f34aeaf2654e57a",
      "LastModified" : "2019-03-31T16:32:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# A collection of audio codecs libraries, dependency of SDL Mixer X\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "_common/library_FreeImage.cmake" : {
      "ObjectId" : "c065af1c6e8d4e44ba9d23e739c380471fe44dac",
      "LastModified" : "2019-03-31T16:32:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FreeImage is an image management library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "_common/library_FreeType.cmake" : {
      "ObjectId" : "039cb9d5519119da467f1e8bf483f3dc80aee62b",
      "LastModified" : "2019-03-31T16:32:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FreeType to render TTF fonts\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "_common/library_QtPropertyBrowser.cmake" : {
      "ObjectId" : "bcdf2dbbbfb09e6f581b504c5418781d9bd0b510",
      "LastModified" : "2019-03-31T16:32:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Qt Property Browser\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build if Qt support enabled\n",
        "Line" : 4,
        "CharPositionInLine" : 18
      },
      "CommentCount" : 2
    },
    "_common/library_SDL2.cmake" : {
      "ObjectId" : "13633378425e4d90478ed4b3a5924294d612acbc",
      "LastModified" : "2019-03-31T16:32:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Not needed for now\n\n#if(NOT WIN32)\n\n#    set(PATCH_CMD \"patch\")\n\n#else()\n\n#    # Use one from Git Bash toolchain, otherwise one from MinGW toolchain will crash\n\n#    set(PATCH_CMD \"C:/Program Files/Git/usr/bin/patch.exe\")\n\n#endif()\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# list(APPEND FOUND_LIBS \"${_mixerx_SEARCH_PATHS}/libSDL2_mixer_ext-static${MIX_DEBUG_SUFFIX}.a\")\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Simple Direct-Media Layer library, dependency of AudioCodecs and SDL Mixer X\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# NDK_OUT=${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/../..\n",
        "Line" : 46,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# NDK_LIBS_OUT=${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/..\n",
        "Line" : 48,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# COMMAND ${CMAKE_COMMAND} -E copy \"${DEPENDENCIES_INSTALL_DIR}/lib-ndk-out/local/${ANDROID_ABI}/libSDL2.a\" \"${CMAKE_BINARY_DIR}/lib/libSDL2${SDL2_DEBUG_SUFFIX}.a\"\n",
        "Line" : 61,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# ============================================================\n\n# Autotools build of SDL2 on platforms where CMake build is incomplete or not supported\n\n# ============================================================\n",
        "Line" : 87,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# ============================================================\n\n# CMake build of SDL2 is a best choice for most of platforms\n\n# ============================================================\n",
        "Line" : 113,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# This issue has been fixed. Kept commented as example for future neccerity to patch futher SDL2 updates\n\n# PATCH_COMMAND ${PATCH_CMD} -p1 \"<\" \"${CMAKE_SOURCE_DIR}/_Libs/_sources/patches/SDL2_remove_lib_prefix_on_windows.patch\"\n",
        "Line" : 121,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# $<$<BOOL:WIN32>:-DWASAPI=OFF>  #For some experiment, enable WASAPI support\n",
        "Line" : 129,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 10
    },
    "_common/library_SDLMixerX.cmake" : {
      "ObjectId" : "28107712b7ed0e0766e40c036402add1637b0f17",
      "LastModified" : "2019-03-31T16:32:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Note: You must also include \"library_AudioCodecs.cmake\" too!\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# list(APPEND FOUND_LIBS \"${_mixerx_SEARCH_PATHS}/libSDL2_mixer_ext-static${MIX_DEBUG_SUFFIX}.a\")\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# SDL Mixer X - an audio library, fork of SDL Mixer\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Append licenses of libraries\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "_common/library_libpng.cmake" : {
      "ObjectId" : "7a2d62606d7a125173ef5ece64934186df999199",
      "LastModified" : "2019-04-16T11:29:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# libPNG is a PNG format library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use that built with separately\n",
        "Line" : 21,
        "CharPositionInLine" : 11
      },
      "CommentCount" : 2
    },
    "_common/library_luabind.cmake" : {
      "ObjectId" : "47216bf28012b8ddf56345dad1be6b88c912cde4",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Note: You must also include \"library_luajit.cmake\" too!\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# LuaBind is a powerful lua binding library for C++\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "_common/library_luajit.cmake" : {
      "ObjectId" : "df57bce2aa34fefe3b4421cf43d6bd346419689e",
      "LastModified" : "2019-03-31T16:32:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Disable LuaJIT for unsupported platforms\n",
        "Line" : 4,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "#NOT WIN32\n",
        "Line" : 106,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 2
    },
    "_common/library_sqlite.cmake" : {
      "ObjectId" : "2b5a8be2d2217371d4ccc3d824a7b7cc422dde67",
      "LastModified" : "2019-03-31T16:32:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# SQLite a small database system\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "_common/res_generator/CMakeLists.txt" : {
      "ObjectId" : "2d639a7ae28b1a20d3cc08c24c01de21edc06490",
      "LastModified" : "2019-03-31T16:32:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "_common/static_qt.cmake" : {
      "ObjectId" : "3d95f4f5fad6e149f5dfe07a1e0b75300129ed68",
      "LastModified" : "2019-03-31T16:32:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO: Make more accurate detection of Static Qt build than\n\n# based on detection of Qt-side built third-part libraries\n\n# are may appear in any Qt build (static or shared)\n\n# if a target platform has no those libraries\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Manually turn on static Qt deployment\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# message(\"==Qt-LibPNG detected! (${QT_PRCE2})==\")\n",
        "Line" : 17,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# message(\"==Qt-HarfBuzz detected! (${QT_HARFBUZZ})==\")\n",
        "Line" : 24,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# message(\"==Qt-LibPNG detected! (${QT_PNG})==\")\n",
        "Line" : 37,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "#if(QT_PTHREAD)\n\n#     message(\"==pthread detected! (${QT_PTHREAD})==\")\n\n#     set(PGE_QT_STATIC_DETECTED TRUE)\n\n#endif()\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# message(\"Plugins:\\n\\n${QT_IMPORT_PLUGINS_MODULE}\\n\\n\\n\")\n",
        "Line" : 95,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "#message(\"Lib: ${LIB}\")\n\n#message(\"Found Lib: ${FOUND_LIB_${LIB}}\")\n",
        "Line" : 142,
        "CharPositionInLine" : 20
      },
      "8" : {
        "Text" : "# find_library(QT_EGLEMU  qeglfs-emu-integration PATHS ${CMAKE_PREFIX_PATH}/plugins/egldeviceintegrations)\n\n# list(APPEND QT_FOUND_EXTRA_LIBS_PRE ${QT_EGLEMU})\n",
        "Line" : 154,
        "CharPositionInLine" : 12
      },
      "9" : {
        "Text" : "# GTK3\n",
        "Line" : 168,
        "CharPositionInLine" : 12
      },
      "10" : {
        "Text" : "# message(\"==GLib detected! (${QT_GLIB})==\")\n",
        "Line" : 224,
        "CharPositionInLine" : 16
      },
      "11" : {
        "Text" : "#                foreach(xxlib Xext Xrender Xi Xau Xdmcp SM ICE X11)\n\n#                    unset(QT_XXLIB)\n\n#                    find_library(QT_${xxlib} ${xxlib})\n\n#                    if(QT_${xxlib})\n\n#                        message(\"-- Found ${QT_${xxlib}}!\")\n\n#                        list(APPEND QT_FOUND_EXTRA_LIBS ${QT_${xxlib}})\n\n#                    endif()\n\n#                endforeach()\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#     find_library(QT_freetype freetype)\n",
        "Line" : 263,
        "CharPositionInLine" : 12
      },
      "13" : {
        "Text" : "# message(\"==DL detected! (${QT_DL})==\")\n",
        "Line" : 287,
        "CharPositionInLine" : 16
      },
      "14" : {
        "Text" : "# message(\"==Full list of libs: ${QT_FOUND_EXTRA_LIBS}==\")\n",
        "Line" : 291,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "#PGE_ENABLE_STATIC_QT\n",
        "Line" : 297,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 16
    },
    "_common/tclap/tclap.cmake" : {
      "ObjectId" : "db22d8c5e726f42c00cd93a20670d37d4448d6ae",
      "LastModified" : "2019-03-31T16:32:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# message(\"Path to TClap is [${CMAKE_CURRENT_LIST_DIR}], has no sources: only includes\")\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "_common/tool_unix2dos.cmake" : {
      "ObjectId" : "ca8b9b500797f0b15a2d0eaee6a9ae3a9659862e",
      "LastModified" : "2019-03-31T16:32:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# UNIX to DOS text format converter utility. Is used to deploy text files on Windows.\n",
        "Line" : 3,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "_common/travis-ci/version_gen/CMakeLists.txt" : {
      "ObjectId" : "6dc691aebd3edb137c2c814454bab3568d4414ed",
      "LastModified" : "2019-03-31T16:32:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ========= Editor version =========\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ========= Engine version =========\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "_common/unix2dos_copy.cmake" : {
      "ObjectId" : "22fa8c4de76a692bac3a79b795f501b036547bd1",
      "LastModified" : "2019-03-31T16:32:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# A small function to pass text files through UNIX2DOS utiltiy on Windows or install them by the regular way\n\n# Requires a custom build of UNIX2DOS utility!\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add next elements as first element is already added\n",
        "Line" : 19,
        "CharPositionInLine" : 12
      },
      "2" : {
        "Text" : "# Add first element to avoid empty element in begin\n",
        "Line" : 22,
        "CharPositionInLine" : 12
      },
      "3" : {
        "Text" : "# Put this function into end of config without any arguments.\n\n# Thus function initializes the installer script which will be ran on install step\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# message(\"== UNIX2DOS List is ${UNIX2DOS_LIST}\")\n",
        "Line" : 34,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 5
    },
    "version.cmake" : {
      "ObjectId" : "a5a9e6046e377c92cf755847d801207d65c03a8c",
      "LastModified" : "2019-03-31T16:32:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Major\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Minor\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Revision\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Patch\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Config pack API version\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Type of version: \"-alpha\",\"-beta\",\"-dev\", or \"\" aka \"release\"\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    }
  },
  "FileTypes" : {
    "CMAKE" : 59,
    "QMAKE" : 14
  },
  "ElapsedTime" : 13859
}