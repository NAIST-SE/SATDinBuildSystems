{
  "Repository" : "8772086",
  "Revision" : "HEAD",
  "ObjectId" : "41d2c16009df612ffe1dad4c177b4f8a3191c61a",
  "CommitTime" : "2019-04-08T07:39:09Z",
  "Files" : {
    "javamelody-collector-server/pom.xml" : {
      "ObjectId" : "141369381fac81b499025f221699e3cdc02533f1",
      "LastModified" : "2019-02-24T00:18:23Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " mêmes dépendances que dans build.xml, même si le war produit par le packaging maven\n\t\tn'est pas exactement le même que le vrai war produit par build.xml ",
        "Line" : 41,
        "CharPositionInLine" : 73
      },
      "1" : {
        "Text" : " AWS CloudWatch dependencies to send metrics to CloudWatch (about 4.5 MB) ",
        "Line" : 76,
        "CharPositionInLine" : 84
      },
      "2" : {
        "Text" : " Main-Class to launch as \"java -jar javamelody-xxx.war\" with Winstone ",
        "Line" : 103,
        "CharPositionInLine" : 86
      },
      "3" : {
        "Text" : " Main-Class to launch as \"java -jar javamelody-xxx.war\" with Winstone ",
        "Line" : 125,
        "CharPositionInLine" : 85
      },
      "4" : {
        "Text" : " Override user.name in Built-By ",
        "Line" : 127,
        "CharPositionInLine" : 47
      },
      "5" : {
        "Text" : " Use \"mvn jetty:run-exploded\" ",
        "Line" : 134,
        "CharPositionInLine" : 42
      },
      "CommentCount" : 6
    },
    "javamelody-core/build.xml" : {
      "ObjectId" : "d146ae7feb495dd43f3eb995259f5f5fcdacc3ca",
      "LastModified" : "2019-02-23T22:12:35Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n * Copyright 2008-2017 by Emeric Vernat\n *\n *     This file is part of Java Melody.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : " Auteur: Emeric Vernat ",
        "Line" : 20,
        "CharPositionInLine" : 31
      },
      "2" : {
        "Text" : " Initialisation des tâches ",
        "Line" : 22,
        "CharPositionInLine" : 36
      },
      "3" : {
        "Text" : " Compilation ",
        "Line" : 87,
        "CharPositionInLine" : 22
      },
      "4" : {
        "Text" : " -XDignore.symbol.file pour éviter warning sur sun.nio.ch.DirectBuffer dans RrdNioBackend ",
        "Line" : 93,
        "CharPositionInLine" : 101
      },
      "5" : {
        "Text" : " Compilation du Quartz2Adapter vers src/main/resources (nécessite une version différente de quartz) ",
        "Line" : 97,
        "CharPositionInLine" : 110
      },
      "6" : {
        "Text" : " Nettoyage du répertoire de compilation, de documentation, du jar et du war ",
        "Line" : 112,
        "CharPositionInLine" : 85
      },
      "7" : {
        "Text" : " Construction du jar ",
        "Line" : 122,
        "CharPositionInLine" : 30
      },
      "8" : {
        "Text" : " override user.name ",
        "Line" : 132,
        "CharPositionInLine" : 32
      },
      "9" : {
        "Text" : " Construction du war ",
        "Line" : 144,
        "CharPositionInLine" : 30
      },
      "10" : {
        "Text" : " classes de la webapp ",
        "Line" : 149,
        "CharPositionInLine" : 33
      },
      "11" : {
        "Text" : " Main-Class et dépendances pour \"java -jar javamelody.war\" ",
        "Line" : 151,
        "CharPositionInLine" : 70
      },
      "12" : {
        "Text" : " ressources de la webapp ",
        "Line" : 154,
        "CharPositionInLine" : 36
      },
      "13" : {
        "Text" : " dépendances de la webapp ",
        "Line" : 157,
        "CharPositionInLine" : 37
      },
      "14" : {
        "Text" : " slf4j pour issue 102 avec IBM's JVM ",
        "Line" : 162,
        "CharPositionInLine" : 49
      },
      "15" : {
        "Text" : " web.xml ",
        "Line" : 168,
        "CharPositionInLine" : 20
      },
      "16" : {
        "Text" : " override user.name ",
        "Line" : 174,
        "CharPositionInLine" : 32
      },
      "17" : {
        "Text" : " Construction du jar javamelody-objectfactory pour GlassFish v3 ",
        "Line" : 187,
        "CharPositionInLine" : 73
      },
      "18" : {
        "Text" : " Construction de la javadoc (api public) ",
        "Line" : 211,
        "CharPositionInLine" : 50
      },
      "19" : {
        "Text" : " Compilation et exécution des tests unitaires ",
        "Line" : 240,
        "CharPositionInLine" : 55
      },
      "20" : {
        "Text" : " Doit être exécuté avec un jdk et non un jre pour TestHtmlHeapHistogramReport ",
        "Line" : 242,
        "CharPositionInLine" : 88
      },
      "21" : {
        "Text" : " -XDignore.symbol.file pour éviter warning sur sun.misc.BASE64Encoder dans le test unitaire TestBase64Coder ",
        "Line" : 256,
        "CharPositionInLine" : 119
      },
      "22" : {
        "Text" : " Construction du war de test ",
        "Line" : 294,
        "CharPositionInLine" : 38
      },
      "23" : {
        "Text" : " Doit être exécuté avec un jdk et non un jre pour TestHtmlHeapHistogramReport ",
        "Line" : 297,
        "CharPositionInLine" : 88
      },
      "24" : {
        "Text" : " -XDignore.symbol.file pour éviter warning sur sun.misc.BASE64Encoder dans le test unitaire TestBase64Coder ",
        "Line" : 311,
        "CharPositionInLine" : 119
      },
      "25" : {
        "Text" : " classes de la webapp ",
        "Line" : 316,
        "CharPositionInLine" : 33
      },
      "26" : {
        "Text" : " ressources de la webapp ",
        "Line" : 318,
        "CharPositionInLine" : 36
      },
      "27" : {
        "Text" : " dépendance javamelody ",
        "Line" : 320,
        "CharPositionInLine" : 34
      },
      "28" : {
        "Text" : " fichiers jsp, xml et dépendances de la webapp ",
        "Line" : 322,
        "CharPositionInLine" : 58
      },
      "29" : {
        "Text" : " Construction du zip ",
        "Line" : 327,
        "CharPositionInLine" : 30
      },
      "30" : {
        "Text" : " On ne prend surtout pas le gros répertoire .repository dans l'intégration continue Jenkins ",
        "Line" : 332,
        "CharPositionInLine" : 103
      },
      "31" : {
        "Text" : " jar jrobin copié selon indication du user_guide ",
        "Line" : 334,
        "CharPositionInLine" : 60
      },
      "32" : {
        "Text" : " Tout (zip, clean) ",
        "Line" : 339,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 33
    },
    "javamelody-core/pom.xml" : {
      "ObjectId" : "560e0167537b60adce3b7228da2c8de25da23b5c",
      "LastModified" : "2019-04-08T07:39:03Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "\n\t\t<dependency>\n\t\t\t<groupId>org.quartz-scheduler</groupId>\n\t\t\t<artifactId>quartz</artifactId>\n\t\t\t<version>2.1.2</version>\n\t\t\t<optional>true</optional>\n\t\t\t<exclusions>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<artifactId>c3p0</artifactId>\n\t\t\t\t\t<groupId>c3p0</groupId>\n\t\t\t\t</exclusion>\n\t\t\t</exclusions>\n\t\t</dependency>\n\t\t",
        "Line" : 164,
        "CharPositionInLine" : 6
      },
      "1" : {
        "Text" : " Dépendance optionnelle spring web (qui inclus spring core, spring \n\t\t\tbeans, spring aop, spring context et commons-logging) ",
        "Line" : 202,
        "CharPositionInLine" : 61
      },
      "2" : {
        "Text" : " Dépendance optionnelle google guice (aop) ",
        "Line" : 215,
        "CharPositionInLine" : 53
      },
      "3" : {
        "Text" : " Dépendance optionnelle xwork pour interceptor struts 2 ",
        "Line" : 222,
        "CharPositionInLine" : 66
      },
      "4" : {
        "Text" : " Dépendance optionnelle mongodb-driver ",
        "Line" : 229,
        "CharPositionInLine" : 49
      },
      "5" : {
        "Text" : " Dépendance optionnelle AWS Java SDK ",
        "Line" : 236,
        "CharPositionInLine" : 47
      },
      "6" : {
        "Text" : " Dépendance JUnit ",
        "Line" : 249,
        "CharPositionInLine" : 28
      },
      "7" : {
        "Text" : " Utilisée uniquement pour l'exécution des tests unitaires ",
        "Line" : 254,
        "CharPositionInLine" : 69
      },
      "8" : {
        "Text" : " Dépendance H2 ",
        "Line" : 257,
        "CharPositionInLine" : 25
      },
      "9" : {
        "Text" : " Utilisée uniquement pour l'exécution des tests unitaires ",
        "Line" : 262,
        "CharPositionInLine" : 69
      },
      "10" : {
        "Text" : " Dépendance EasyMock ",
        "Line" : 265,
        "CharPositionInLine" : 31
      },
      "11" : {
        "Text" : " Utilisée uniquement pour l'exécution des tests unitaires ",
        "Line" : 270,
        "CharPositionInLine" : 69
      },
      "12" : {
        "Text" : " Dépendance OpenJpa ",
        "Line" : 273,
        "CharPositionInLine" : 30
      },
      "13" : {
        "Text" : " Utilisée uniquement pour l'exécution des tests unitaires ",
        "Line" : 278,
        "CharPositionInLine" : 69
      },
      "14" : {
        "Text" : " prevent accidental deployment of SNAPSHOTS to repository ",
        "Line" : 290,
        "CharPositionInLine" : 69
      },
      "15" : {
        "Text" : " uniquement pour inclure les fichiers de licence et user_guide dans\n\t\t\t\tle jar produit par maven (celui qui contient pom.properties et pom.xml avec\n\t\t\t\tla version) ",
        "Line" : 307,
        "CharPositionInLine" : 20
      },
      "16" : {
        "Text" : " Configuration compilation ",
        "Line" : 317,
        "CharPositionInLine" : 38
      },
      "17" : {
        "Text" : " pour éviter warning dans Maven sur sun.nio.ch.DirectBuffer dans RrdNioBackend ",
        "Line" : 325,
        "CharPositionInLine" : 92
      },
      "18" : {
        "Text" : " pour éviter warning dans Maven sur sun.misc.BASE64Encoder dans le test unitaire TestBase64Coder ",
        "Line" : 328,
        "CharPositionInLine" : 110
      },
      "19" : {
        "Text" : " pour produire un jar lors du goal package comme celui produit par\n\t\t\t\tant mais avec pom.properties et pom.xml pour publication dans un repository ",
        "Line" : 333,
        "CharPositionInLine" : 84
      },
      "20" : {
        "Text" : " Override user.name in Built-By ",
        "Line" : 346,
        "CharPositionInLine" : 47
      },
      "21" : {
        "Text" : " en commentaire pour éviter warning du plugin maven dans eclipse\n\t\t\t<plugin>\n\t\t\t\t<artifactId>maven-enforcer-plugin</artifactId>\n\t\t\t\t<executions>\n\t\t\t\t\t<execution>\n\t\t\t\t\t\t<id>enforce-versions</id>\n\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t<goal>enforce</goal>\n\t\t\t\t\t\t</goals>\n\t\t\t\t\t\t<configuration>\n\t\t\t\t\t\t\t<rules>\n\t\t\t\t\t\t\t\t<requireJavaVersion>\n\t\t\t\t\t\t\t\t\t<version>1.6</version>\n\t\t\t\t\t\t\t\t</requireJavaVersion>\n\t\t\t\t\t\t\t</rules>\n\t\t\t\t\t\t</configuration>\n\t\t\t\t\t</execution>\n\t\t\t\t</executions>\n\t\t\t</plugin>\n\t\t\t",
        "Line" : 371,
        "CharPositionInLine" : 7
      },
      "22" : {
        "Text" : " écrit la version du pom dans JAVAMELODY-VERSION.properties ",
        "Line" : 380,
        "CharPositionInLine" : 76
      },
      "23" : {
        "Text" : " avec antrun 1.7, CR ne peut être écrit en même temps que LF ",
        "Line" : 383,
        "CharPositionInLine" : 77
      },
      "24" : {
        "Text" : " appel de Ant et copie du résultat dans le site ",
        "Line" : 388,
        "CharPositionInLine" : 64
      },
      "25" : {
        "Text" : " On n'appelle plus Ant pour mettre les artefacts dans le site\n\t\t\t\t\t\t\t\t<ant antfile=\"build.xml\" target=\"zip\" />\n\t\t\t\t\t\t\t\t<copy file=\"javamelody.zip\" tofile=\"target/site/javamelody.zip\" />\n\t\t\t\t\t\t\t\t<copy file=\"javamelody.jar\" tofile=\"target/site/javamelody.jar\" />\n\t\t\t\t\t\t\t\t<copy file=\"javamelody.war\" tofile=\"target/site/javamelody.war\" />\n\t\t\t\t\t\t\t\t<copy file=\"jira-javamelody.jar\" tofile=\"target/site/jira-javamelody.jar\" />\n\t\t\t\t\t\t\t\t<ant antfile=\"build.xml\" target=\"clean\" />\n\t\t\t\t\t\t\t\t",
        "Line" : 396,
        "CharPositionInLine" : 12
      },
      "26" : {
        "Text" : " nécessaire car maven définit java_home avec le jre pour ant ! ",
        "Line" : 406,
        "CharPositionInLine" : 77
      },
      "27" : {
        "Text" : " Configuration exécution des tests unitaires ",
        "Line" : 416,
        "CharPositionInLine" : 56
      },
      "28" : {
        "Text" : " Ce paramètre permet aussi de tester l'appel à RuntimeMXBean.getInputArguments() ",
        "Line" : 422,
        "CharPositionInLine" : 94
      },
      "29" : {
        "Text" : " Configuration Couverture des tests unitaires ",
        "Line" : 427,
        "CharPositionInLine" : 57
      },
      "30" : {
        "Text" : " la version 2.6 ne donne pas la bonne couverture de code  ",
        "Line" : 431,
        "CharPositionInLine" : 70
      },
      "31" : {
        "Text" : " Site ",
        "Line" : 469,
        "CharPositionInLine" : 17
      },
      "32" : {
        "Text" : " Javadoc ",
        "Line" : 475,
        "CharPositionInLine" : 23
      },
      "33" : {
        "Text" : " Références croisées ",
        "Line" : 493,
        "CharPositionInLine" : 35
      },
      "34" : {
        "Text" : " Vérification des règles de codage ",
        "Line" : 501,
        "CharPositionInLine" : 49
      },
      "35" : {
        "Text" : " Métriques ",
        "Line" : 535,
        "CharPositionInLine" : 25
      },
      "36" : {
        "Text" : " Rapport d'exécution des tests unitaires ",
        "Line" : 546,
        "CharPositionInLine" : 55
      },
      "37" : {
        "Text" : " http://jira.codehaus.org/browse/SUREFIRE-257 ",
        "Line" : 550,
        "CharPositionInLine" : 61
      },
      "38" : {
        "Text" : " Couverture de tests ",
        "Line" : 559,
        "CharPositionInLine" : 35
      },
      "39" : {
        "Text" : " Agrégation des rapport ",
        "Line" : 571,
        "CharPositionInLine" : 38
      },
      "40" : {
        "Text" : " Information sur le projet ",
        "Line" : 581,
        "CharPositionInLine" : 41
      },
      "41" : {
        "Text" : " Références croisées ",
        "Line" : 607,
        "CharPositionInLine" : 32
      },
      "42" : {
        "Text" : " section reporting Temporaire : https://jira.codehaus.org/browse/MCHECKSTYLE-150 et autres ",
        "Line" : 608,
        "CharPositionInLine" : 102
      },
      "CommentCount" : 43
    },
    "javamelody-core/src/test/resources/pom.xml" : {
      "ObjectId" : "2d9f882e1ee8f4de5585c3569b751906b75d92e4",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "\n\t\t\tDépendance optionnelle spring aop (qui inclus spring core, spring\n\t\t\tbeans, aop alliance et commons-logging)\n\t\t",
        "Line" : 41,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 1
    },
    "javamelody-demo-webapp/build.xml" : {
      "ObjectId" : "9d4d8a42cfdfc207342124a0b3d472ffa5dd359a",
      "LastModified" : "2017-05-12T21:06:29Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n * Copyright 2008-2014 by Emeric Vernat\n *\n *     This file is part of Java Melody.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : " Auteur: Emeric Vernat ",
        "Line" : 20,
        "CharPositionInLine" : 31
      },
      "2" : {
        "Text" : " Initialisation des tâches ",
        "Line" : 22,
        "CharPositionInLine" : 36
      },
      "3" : {
        "Text" : " Nettoyage du répertoire de compilation et du war ",
        "Line" : 36,
        "CharPositionInLine" : 59
      },
      "4" : {
        "Text" : " Construction du war ",
        "Line" : 52,
        "CharPositionInLine" : 30
      },
      "CommentCount" : 5
    },
    "javamelody-for-spring-boot/pom.xml" : {
      "ObjectId" : "7db58fe04e786946cf6a8d6ff5ff19dbce1db770",
      "LastModified" : "2019-02-23T22:12:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Adapt this to a version found on http://central.maven.org/maven2/net/bull/javamelody/javamelody-spring-boot-starter/ ",
        "Line" : 27,
        "CharPositionInLine" : 128
      },
      "1" : {
        "Text" : " JavaMelody Spring Boot Starter ",
        "Line" : 32,
        "CharPositionInLine" : 42
      },
      "2" : {
        "Text" : " Optional: iText dependency for PDF exports in JavaMelody ",
        "Line" : 39,
        "CharPositionInLine" : 68
      },
      "3" : {
        "Text" : " Spring Boot Web Starter ",
        "Line" : 60,
        "CharPositionInLine" : 35
      },
      "4" : {
        "Text" : " \"mvn tomcat7:run-war\" can be used, to test with a war deployed in Tomcat, instead of spring-boot:run ",
        "Line" : 74,
        "CharPositionInLine" : 113
      },
      "CommentCount" : 5
    },
    "javamelody-for-standalone/pom.xml" : {
      "ObjectId" : "c2d365b626915a83486274737529d0d58063323a",
      "LastModified" : "2019-02-23T22:12:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Adapt this to a version found on http://central.maven.org/maven2/org/eclipse/jetty/jetty-maven-plugin/ ",
        "Line" : 17,
        "CharPositionInLine" : 114
      },
      "1" : {
        "Text" : " (9.2.21 is the last version supporting Java 7) ",
        "Line" : 18,
        "CharPositionInLine" : 58
      },
      "2" : {
        "Text" : " Adapt this to a version found on http://central.maven.org/maven2/net/bull/javamelody/javamelody-core/ ",
        "Line" : 20,
        "CharPositionInLine" : 113
      },
      "3" : {
        "Text" : " iText dependency for PDF exports (optional) ",
        "Line" : 38,
        "CharPositionInLine" : 55
      },
      "4" : {
        "Text" : " Use \"mvn exec:java\" ",
        "Line" : 63,
        "CharPositionInLine" : 33
      },
      "5" : {
        "Text" : " Configuration compilation ",
        "Line" : 78,
        "CharPositionInLine" : 38
      },
      "CommentCount" : 6
    },
    "javamelody-offline-viewer/pom.xml" : {
      "ObjectId" : "fa8d004ff9de468043640977576bd1b3b7b6179c",
      "LastModified" : "2019-02-23T22:12:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Adapt this to a version found on http://central.maven.org/maven2/org/eclipse/jetty/jetty-maven-plugin/ ",
        "Line" : 14,
        "CharPositionInLine" : 114
      },
      "1" : {
        "Text" : " (9.2.21 is the last version supporting Java 7) ",
        "Line" : 15,
        "CharPositionInLine" : 58
      },
      "2" : {
        "Text" : " Adapt this to a version found on http://central.maven.org/maven2/net/bull/javamelody/javamelody-core/ ",
        "Line" : 17,
        "CharPositionInLine" : 113
      },
      "3" : {
        "Text" : " iText dependency for PDF exports (optional) ",
        "Line" : 35,
        "CharPositionInLine" : 55
      },
      "4" : {
        "Text" : " Use \"mvn package\" then \"java -Djavamelody.storage-directory=... -jar target/javamelody-viewer.jar\" ",
        "Line" : 60,
        "CharPositionInLine" : 112
      },
      "5" : {
        "Text" : " this is used for inheritance merges ",
        "Line" : 77,
        "CharPositionInLine" : 74
      },
      "6" : {
        "Text" : " bind to the packaging phase ",
        "Line" : 78,
        "CharPositionInLine" : 66
      },
      "7" : {
        "Text" : " Or use \"mvn compile exec:java -Djavamelody.storage-directory=...\" ",
        "Line" : 86,
        "CharPositionInLine" : 79
      },
      "8" : {
        "Text" : " Configuration compilation ",
        "Line" : 101,
        "CharPositionInLine" : 38
      },
      "CommentCount" : 9
    },
    "javamelody-spring-boot-starter/pom.xml" : {
      "ObjectId" : "4885187fc03181a1edf9065d7a0c8ab9dab225a0",
      "LastModified" : "2019-02-23T22:12:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Import dependency management from Spring Boot ",
        "Line" : 58,
        "CharPositionInLine" : 59
      },
      "1" : {
        "Text" : " Override user.name in Built-By ",
        "Line" : 125,
        "CharPositionInLine" : 47
      },
      "2" : {
        "Text" : " doclint:none for Java 8 ",
        "Line" : 147,
        "CharPositionInLine" : 38
      },
      "CommentCount" : 3
    },
    "javamelody-swing/build.xml" : {
      "ObjectId" : "a83d12798bd87691ee963c1166da37a97d40ada4",
      "LastModified" : "2019-02-23T22:12:35Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n * Copyright 2008-2017 by Emeric Vernat\n *\n *     This file is part of Java Melody.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : " Auteur: Emeric Vernat ",
        "Line" : 20,
        "CharPositionInLine" : 31
      },
      "2" : {
        "Text" : " Initialisation des tâches ",
        "Line" : 22,
        "CharPositionInLine" : 36
      },
      "3" : {
        "Text" : " Compilation ",
        "Line" : 47,
        "CharPositionInLine" : 22
      },
      "4" : {
        "Text" : " Nettoyage du répertoire de compilation, de documentation et du jar ",
        "Line" : 57,
        "CharPositionInLine" : 77
      },
      "5" : {
        "Text" : " Construction du jar ",
        "Line" : 65,
        "CharPositionInLine" : 30
      },
      "6" : {
        "Text" : " <include name=\"xpp3_min-1.1.4c.jar\" /> ",
        "Line" : 79,
        "CharPositionInLine" : 52
      },
      "7" : {
        "Text" : " attributes related to Java Web Start ",
        "Line" : 97,
        "CharPositionInLine" : 50
      },
      "8" : {
        "Text" : " see http://docs.oracle.com/javase/8/docs/technotes/guides/jweb/security/manifest.html ",
        "Line" : 98,
        "CharPositionInLine" : 99
      },
      "9" : {
        "Text" : " Signature du jar ",
        "Line" : 107,
        "CharPositionInLine" : 27
      },
      "10" : {
        "Text" : " Construction de la javadoc (api public) ",
        "Line" : 112,
        "CharPositionInLine" : 50
      },
      "11" : {
        "Text" : " Construction du zip ",
        "Line" : 141,
        "CharPositionInLine" : 30
      },
      "12" : {
        "Text" : " On ne prend surtout pas le gros répertoire .repository dans l'intégration continue Jenkins ",
        "Line" : 146,
        "CharPositionInLine" : 103
      },
      "13" : {
        "Text" : " Tout (zip, clean) ",
        "Line" : 151,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 14
    },
    "javamelody-swing/pom.xml" : {
      "ObjectId" : "eca0581d87d87ba828518585bb7ea766210924fa",
      "LastModified" : "2019-02-24T00:18:23Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Dépendance iText pour exports PDF ",
        "Line" : 53,
        "CharPositionInLine" : 45
      },
      "1" : {
        "Text" : " Dépendance iText-RTF pour exports RTF ",
        "Line" : 73,
        "CharPositionInLine" : 49
      },
      "2" : {
        "Text" : " Dépendances ehcache et quartz ",
        "Line" : 93,
        "CharPositionInLine" : 41
      },
      "3" : {
        "Text" : " Dépendance XStream pour exports XML et JSON ",
        "Line" : 105,
        "CharPositionInLine" : 55
      },
      "4" : {
        "Text" : " \"mvn release:prepare release:perform\" veut -SNAPSHOT et cherche svn, \n\t\t\tmais si tout est ok et sans -SNAPSHOT alors \"mvn clean deploy\" suffit, https://maven2-repository.dev.java.net/ \n\t\t\thttp://wiki.jenkins-ci.org/display/JENKINS/Hosting+Plugins ",
        "Line" : 116,
        "CharPositionInLine" : 66
      },
      "5" : {
        "Text" : " prevent accidental deployment of SNAPSHOTS to repository ",
        "Line" : 123,
        "CharPositionInLine" : 69
      },
      "6" : {
        "Text" : " /!\\ Maven >= 3.0 : http://docs.codehaus.org/display/MAVENUSER/POM+Element+for+Source+File+Encoding \n\t\t\t<sourceEncoding>UTF-8</sourceEncoding> ",
        "Line" : 135,
        "CharPositionInLine" : 46
      },
      "7" : {
        "Text" : " Configuration compilation ",
        "Line" : 137,
        "CharPositionInLine" : 38
      },
      "8" : {
        "Text" : " appel de Ant et copie du résultat dans le site ",
        "Line" : 156,
        "CharPositionInLine" : 64
      },
      "9" : {
        "Text" : " nécessaire car maven définit java_home avec le jre pour ant ! ",
        "Line" : 170,
        "CharPositionInLine" : 77
      },
      "10" : {
        "Text" : " Site ",
        "Line" : 180,
        "CharPositionInLine" : 17
      },
      "11" : {
        "Text" : " Javadoc ",
        "Line" : 186,
        "CharPositionInLine" : 23
      },
      "12" : {
        "Text" : " Références croisées ",
        "Line" : 198,
        "CharPositionInLine" : 35
      },
      "13" : {
        "Text" : " Vérification des règles de codage ",
        "Line" : 206,
        "CharPositionInLine" : 49
      },
      "14" : {
        "Text" : " Métriques ",
        "Line" : 239,
        "CharPositionInLine" : 25
      },
      "15" : {
        "Text" : " Information sur le projet ",
        "Line" : 250,
        "CharPositionInLine" : 41
      },
      "16" : {
        "Text" : " Références croisées ",
        "Line" : 276,
        "CharPositionInLine" : 32
      },
      "17" : {
        "Text" : " section reporting Temporaire : https://jira.codehaus.org/browse/MCHECKSTYLE-150 et autres ",
        "Line" : 277,
        "CharPositionInLine" : 102
      },
      "CommentCount" : 18
    },
    "javamelody-test-webapp/pom.xml" : {
      "ObjectId" : "eb48a6640b7565e630b3de8ce27621b6abdb87e6",
      "LastModified" : "2019-02-23T22:12:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Dépendance H2 ",
        "Line" : 21,
        "CharPositionInLine" : 25
      },
      "1" : {
        "Text" : " Dépendance Mysql ",
        "Line" : 28,
        "CharPositionInLine" : 28
      },
      "2" : {
        "Text" : " Presque les mêmes dépendances que javamelody-core ",
        "Line" : 34,
        "CharPositionInLine" : 61
      },
      "3" : {
        "Text" : "\n\t\t<dependency>\n\t\t\t<groupId>org.quartz-scheduler</groupId>\n\t\t\t<artifactId>quartz</artifactId>\n\t\t\t<version>2.1.2</version>\n\t\t\t<optional>true</optional>\n\t\t\t<exclusions>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<artifactId>c3p0</artifactId>\n\t\t\t\t\t<groupId>c3p0</groupId>\n\t\t\t\t</exclusion>\n\t\t\t</exclusions>\n\t\t</dependency>\n\t\t",
        "Line" : 140,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : " Dépendance optionnelle spring aop (qui inclus spring core, spring \n\t\t\tbeans, aop alliance et commons-logging) ",
        "Line" : 178,
        "CharPositionInLine" : 47
      },
      "5" : {
        "Text" : " Dépendance optionnelle google guice (aop) ",
        "Line" : 197,
        "CharPositionInLine" : 53
      },
      "6" : {
        "Text" : " Dépendance optionnelle xwork pour interceptor struts 2 ",
        "Line" : 204,
        "CharPositionInLine" : 66
      },
      "7" : {
        "Text" : " Dépendance optionnelle hibernate ",
        "Line" : 211,
        "CharPositionInLine" : 44
      },
      "8" : {
        "Text" : " Dépendance optionnelle mongodb-driver ",
        "Line" : 218,
        "CharPositionInLine" : 49
      },
      "9" : {
        "Text" : " Dépendance optionnelle AWS Java SDK ",
        "Line" : 225,
        "CharPositionInLine" : 47
      },
      "10" : {
        "Text" : " Dépendance JUnit ",
        "Line" : 237,
        "CharPositionInLine" : 28
      },
      "11" : {
        "Text" : " Dépendance EasyMock ",
        "Line" : 244,
        "CharPositionInLine" : 31
      },
      "12" : {
        "Text" : " Dépendance OpenJpa ",
        "Line" : 251,
        "CharPositionInLine" : 30
      },
      "13" : {
        "Text" : " JRobin is already included with the javamelody dependency ",
        "Line" : 283,
        "CharPositionInLine" : 75
      },
      "14" : {
        "Text" : " Use \"mvn jetty:run-exploded\" ",
        "Line" : 291,
        "CharPositionInLine" : 42
      },
      "15" : {
        "Text" : " Use \"mvn tomcat7:run-war\" ",
        "Line" : 307,
        "CharPositionInLine" : 38
      },
      "CommentCount" : 16
    },
    "pom.xml" : {
      "ObjectId" : "ed37da77e013325ae099374340aa9d75e58ccf2d",
      "LastModified" : "2019-02-23T22:12:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "ANT" : 3,
    "MAVEN" : 10
  },
  "ElapsedTime" : 3856
}