{
  "Repository" : "6616819",
  "Revision" : "HEAD",
  "ObjectId" : "7c2997bd19685339af614d42342437e381a48ee6",
  "CommitTime" : "2019-04-16T06:07:37Z",
  "Files" : {
    "llvmbisect/docs/Makefile" : {
      "ObjectId" : "0e34902d4e51e64ef4514a75ed089d117d8dfcd7",
      "LastModified" : "2015-10-08T21:52:50Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# User-friendly check for sphinx-build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Internal variables.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "llvmlab/docs/Makefile" : {
      "ObjectId" : "95396c0e4b65578c07e93f175cfe3a56beafa9b4",
      "LastModified" : "2015-10-08T21:52:50Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Internal variables.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tasks/cmake/caches/global-isel.cmake" : {
      "ObjectId" : "1dabcd2ed09b4b210abf0b2ce9add0de176e712d",
      "LastModified" : "2017-11-07T03:18:31Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tasks/cmake/caches/opt-O0-g.cmake" : {
      "ObjectId" : "cff9f55fcff4c090422fc9ead5a4e95b834be51a",
      "LastModified" : "2017-11-07T03:18:31Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tasks/cmake/caches/opt-O3-flto.cmake" : {
      "ObjectId" : "79296f63638b6c754af8958d33a0bb65bf7b162a",
      "LastModified" : "2017-11-07T03:18:31Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tasks/cmake/caches/opt-O3.cmake" : {
      "ObjectId" : "cadd70c71865f33d1d57339a4f01ba1393d478e9",
      "LastModified" : "2017-11-07T03:18:31Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tasks/cmake/caches/opt-Os-flto.cmake" : {
      "ObjectId" : "770f24122038f44e3562336851039052292247f0",
      "LastModified" : "2017-11-07T03:18:31Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tasks/cmake/caches/opt-Os.cmake" : {
      "ObjectId" : "174d89e25de0030ed4ea97b5d2ea438b65dec243",
      "LastModified" : "2017-11-07T03:18:31Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tasks/cmake/caches/opt-Oz.cmake" : {
      "ObjectId" : "3b3aa0e2151e57ef7bdf79a811095c24f987134d",
      "LastModified" : "2017-11-07T03:18:31Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tasks/cmake/caches/target-arm64-iphoneos.cmake" : {
      "ObjectId" : "ea307f10c63b29a00772716fa3988b3284b7412e",
      "LastModified" : "2017-11-07T03:18:31Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tasks/cmake/caches/target-x86_64-macos.cmake" : {
      "ObjectId" : "d039886f8a6d1a8fe1620c5a2407d8d4b8ba383b",
      "LastModified" : "2017-11-07T03:18:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tasks/cmake/caches/target-x86_64h-macos.cmake" : {
      "ObjectId" : "13b14da39ed7008d57d0711dd86fcc9f924739ad",
      "LastModified" : "2017-11-07T03:18:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tasks/cmake/caches/util/arch_flags_toolchain.cmake" : {
      "ObjectId" : "3b2905a2862391603799bcb0cac752ede8f14fe9",
      "LastModified" : "2017-11-07T03:18:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Hack to get target flags into try_compile. See xcode_sdk.cmake for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tasks/cmake/caches/util/xcode_sdk.cmake" : {
      "ObjectId" : "56a96e580c9648c14cbe9e6299fad59d234ec17b",
      "LastModified" : "2018-02-22T00:43:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The user manually specified a compiler which is usually different than\n\n# the one coming with the SDK.\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Construct shim for ranlib, ar, etc.\n\n# This is necessary because the ranlib coming with the xcode sdk looks for\n\n# ../lib/libLTO.dylib and will therefor pick up libLTO.dylib coming with the\n\n# SDK. However for correct behavior it has to pick up libLTO.dylib coming\n\n# the clang compiler used.\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Skip linking in cmake compiler tests, as the cmake won't pass the -B flags\n\n# required to pick up the correct linker to the early compiler tests. However\n\n# it does have an option to not link in the early tests.\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Some benchmarks check for the function re_comp by using\n\n# check_function_exists. This function is not available in any Xcode SDK, and\n\n# the check returns YES with custom built compilers when we cross-compile,\n\n# because of \"CMAKE_TRY_COMPILE_TARGET_TYPE STATIC_LIBRARY\" explained just\n\n# above. We work around that by forcing it to NO.\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Search and use compiler coming with the SDK.\n\n# Note that we do not search CMAKE_CXX_COMPILER here. cmake will try\n\n# `${CMAKE_C_COMPILER}++` and use that if available.\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Append -B so clang picks up the linker coming with the SDK instead of the\n\n# one in $PATH.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The problem with TEST_SUITE_ARCH_FLAGS is that they will not be used when\n\n# cmake is testing for features with try_compile().\n\n#\n\n# This is a work around for this: try_compile() does honor toolchain files which\n\n# can chane CMAKE_C_FLAGS.\n\n#\n\n# Note that CMAKE_TRY_COMPILE_PLATFORM_VARIABLES used by this is only available\n\n# in cmake >=3.6\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "tasks/cmake/caches/verify-machineinstrs.cmake" : {
      "ObjectId" : "de2394b7fe9abae4fd840261fc00c4432ddac9cd",
      "LastModified" : "2017-11-07T03:18:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 13,
    "MAKEFILE" : 2
  },
  "ElapsedTime" : 1565
}