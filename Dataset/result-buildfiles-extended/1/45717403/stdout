{
  "Repository" : "45717403",
  "Revision" : "HEAD",
  "ObjectId" : "926fcdf5ff1a09c3495b8f6d19fd41d153cd9d84",
  "CommitTime" : "2019-04-18T18:59:42Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "290403df1ac97fa31798d7d5700eccfb78b0adf6",
      "LastModified" : "2018-08-16T22:30:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Amanzi \n\n#       Root CMakeLists.txt file\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Require cmake version same as the version used to buildg TPLs \n\n#(see SuperBuild/CMakeLists.txt)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#set(CMAKE_CXX_EXTENSIONS OFF)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable testing, ctest needs this\n\n# all add_test commands are ignored unless this is called!\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Define the project name\n\n# This command will define\n\n#     AMANZI_SOURCE_DIR\n\n#     AMANZI_BINARY_DIR\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Useful variables pointing to directories in the source tree\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Set the module search path so find_package and include commands\n\n# can locate files in <root source tree>/tools/cmake\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Code version defined\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Addtional build options\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Find required Amanzi TPL\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# The following line allows us to link third-party libraries not explicitly \n\n# found by the logic in AmanziTPL.cmake.\n\n#\n\n# ETC: this is wrong, should point to TPLs, but not necessarily installed here, meaning that lots of ld warnings show up.\n\n#link_directories(${CMAKE_INSTALL_PREFIX}/tpls/lib)\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# shared libraries tweaks: enforcing absolute path\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Check the mesh framework choice\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# A property for accumulating the a global amanzi link line.\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# A property for accumulating amanzi library targets\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# A filename to write link-line to.\n",
        "Line" : 89,
        "CharPositionInLine" : 61
      },
      "17" : {
        "Text" : "# Source files for all binaries and libraries found under src\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Examples added as tests\n\n# add_subdirectory(examples) \n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Adding verification tests\n\n# EIB - uncommenting this will include the verification/benchmarking tests\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Python modules\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Define a list of all enabled TPLs. Must do this AFTER all the \n\n# CMakelist.txt files have been processed!\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Make the exports only _after_ doing the build\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\n\n#  Create source package\n\n# \n\n#  - use the TGZ generator\n\n#  - use our existing CMake / Mercurial hooks to get version information\n\n#  - include the generated amanzi_version.hh in the package\n\n#\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Copy over extra files: stash them first and then they are copied as part of \"make package_source\"\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "CTestConfig.cmake" : {
      "ObjectId" : "c2a2a73128d266707f2b0018e015b07f37712e2e",
      "LastModified" : "2014-12-01T23:14:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## This file should be placed in the root directory of your project.\n\n## Then modify the CMakeLists.txt file in the root directory of your\n\n## project to incorporate the testing dashboard.\n\n## # The following are required to uses Dart and the Cdash dashboard\n\n##   ENABLE_TESTING()\n\n##   INCLUDE(CTest)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "config/SuperBuild/CMakeLists.txt" : {
      "ObjectId" : "ca2c99d74d7f0ad982730dad4fdb37a6c899796b",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Amanzi SuperBuild\n\n#       Amanzi TPL Build Targets\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Set minimum required version of CMake\n\n# NB: Must go before project() call.\n\n# KL: Version used to build Amanzi must be the same!\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Language standard\n\n# NB: Seems like a good idea to have this before project() call.\n\n#\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ############################################################################ #\n\n# Define project name (SuperBuild_SOURCE_DIR and SuperBuild_BINARY_DIR)\n\n# ############################################################################ #\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ############################################################################ #\n\n# Shared Libraries Definitions\n\n# ############################################################################ #\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ############################################################################ #\n\n# Static Libraries Definitions\n\n# ############################################################################ #\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# ############################################################################ #\n\n# Compiler Definition Warnings\n\n# ############################################################################ #\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#if (NOT SPACK_BINARY)\n\n#  message(WARNING \"Spack binary not defined. Disabling spack builds.\")\n\n#endif()\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ############################################################################ #\n\n# Define Amanzi directories \n\n# ############################################################################ #\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ############################################################################ #\n\n# Update the CMake module path\n\n# ############################################################################ #\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# ############################################################################ #\n\n# Location of the Build_* files and template files\n\n# ############################################################################ #\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# ############################################################################ #\n\n# Compiler checks\n\n# ############################################################################ #\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# MPI_WRAPPERS_IN_USE is FALSE if any of the compilers fail to compile an MPI app\n",
        "Line" : 121,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Include the TPL version information\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# prepare the version numbers file\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# ############################################################################ #\n\n# Build options\n\n# ############################################################################ #\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Download directory TPL_DOWNLOAD_DIR\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Disable external web downloads\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# TPL install location\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# also set the CMAKE_INSTALL_PREFIX accordingly\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Amanzi structured AMR mesh API and tools\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Amanzi unstructured mesh API and frameworks\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Amanzi output formats\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# OpenMP Search - ENABLED ONLY WHEN STRUCTURED IS ON BECAUSE\n\n# WE SUSPECT THAT IT MAY NOT BE WORKING WELL WITH HYPRE ON\n\n# THE UNSTRUCTURED SIDE\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# option(ENABLE_OpenMP \"Add OpenMP directives to the build\" TRUE)\n",
        "Line" : 190,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# If unstructured is not enabled, there is no reason to have these mesh frameworks\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Amanzi Test Suite\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# xSDK Libraries\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Use Spack package manager\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# ############################################################################ #\n\n# MPI Configuration \n\n# ############################################################################ #\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# --- The FindMPI package for CMake for versions 2.8.6> use compiler wrappers\n\n#     to determine include paths, link flags and libraries for each language.\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# --- This package find call will set\n\n#     MPI_<lang>_FOUND\n\n#     MPI_<lang>_COMPILE_FLAGS\n\n#     MPI_<lang>_INCLUDE_PATH\n\n#     MPI_<lang>_LINK_FLAGS\n\n#     MPI_<lang>_LIBRARIES\n\n#\n\n#     MPIEXEC\n\n#     MPIEXEC_NUMPROC_FLAG\n\n#     MPIEXEC_PREFLAGS\n\n#     MPIEXEC_POSTFLAGS\n",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# The FindMPI package uses FindPackageHandleStandardArgs\n\n# to MPI_<lang>_FOUND. For consistency, I set MPI_FORTRAN_FOUND\n\n# to MPI_Fortran_FOUND\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Warn the user if MPI information is not found\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Fail configuration if any MPI_*_FOUND == FALSE\n",
        "Line" : 291,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Add the include paths, link flags and libraries if using a \n\n# user requested MPI but not the wrappers from this MPI installation.\n",
        "Line" : 307,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Build MPI compile flags\n",
        "Line" : 311,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# --- Amanzi uses MPI_EXEC* not MPIEXEC* variables. This allows the user to \n\n#     override the find package results.\n",
        "Line" : 347,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# - MPI execute binary\n",
        "Line" : 350,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# - Number of MPI ranks flag\n",
        "Line" : 362,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# - Maximum number of processors. This is a limit for the test suite\n\n#   Some tests require too many processors and it increases the execution time\n\n#   considerably. \n",
        "Line" : 372,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# - Set the pre and post flags\n\n#   Usage:\n\n#   ${MPI_EXEC} ${MPI_EXEC_NUMPROCS_FLAG} PROCS ${MPI_EXEC_PREFLAGS} EXECUTABLE ${MPI_EXEC_POSTFLAGS}\n",
        "Line" : 387,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# ############################################################################ #\n\n# LAPACK/BLAS Configuration \n\n# ############################################################################ #\n",
        "Line" : 403,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Search for BLAS (Basic Linear Algebra Subprograms) http://www.netlib.org/blas\n",
        "Line" : 407,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Search for LAPACK (Linear Algebra PACKage) http://www/netlib.org/lapack\n",
        "Line" : 411,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# ############################################################################ #\n\n# Set common build compiler flags, build types and directories\n\n# ############################################################################ #\n",
        "Line" : 416,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# CMake compiler settings for any package built with CMake\n",
        "Line" : 420,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# C language flags\n",
        "Line" : 422,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# C++ language flags \n",
        "Line" : 430,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Fortran language flags    \n",
        "Line" : 438,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Link flags\n",
        "Line" : 446,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# Common compiler flags to ensure a uniform build in projects that do not use CMake\n",
        "Line" : 453,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# Common link flags for projects that do not use CMake\n",
        "Line" : 464,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# ############################################################################ #\n\n# Begin TPL builds \n\n# ############################################################################ #\n",
        "Line" : 476,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# --- Add .NOTPARALLEL target in order to force the top level make to \n\n#     execute serially\n",
        "Line" : 480,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# --- Initalize and set the TPL build files\n",
        "Line" : 485,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# Create configure, build, install and test targets for each TPL\n",
        "Line" : 487,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# Include the CMake module ExternalProject\n",
        "Line" : 491,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# Include the macro that defines uniform build, install and Add_ExternalProject args\n",
        "Line" : 494,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# Set of CMake configure arguments to pass to Amanzi once the TPLs are built\n",
        "Line" : 497,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# --- Begin the build definitions\n\n#if (BUILD_SPACK)\n\n#  include(${SuperBuild_BUILD_FILES_DIR}/Build_Spack.cmake)\n\n#endif()\n",
        "Line" : 500,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# ZLIB\n",
        "Line" : 512,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# UnitTest\n",
        "Line" : 523,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# CCSE\n",
        "Line" : 531,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# Boost\n",
        "Line" : 546,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# HDF5  \n",
        "Line" : 565,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# ASCEM-IO  \n",
        "Line" : 583,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# XERCES\n",
        "Line" : 588,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# NetCDF\n",
        "Line" : 593,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# NetCDF Fortran\n\n# As of 10/13/2017, NetCDF Fortran is not part of the xSDK suite\n",
        "Line" : 613,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# MOAB\n",
        "Line" : 619,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# METIS -- needs to go before PETSc because PETSc needs it.\n",
        "Line" : 627,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# ParMetis -- needs to go before PETSc because PETSc needs it.\n",
        "Line" : 640,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# SuperLU -- needs to go before HYPRE and PETSc because they needs it\n",
        "Line" : 651,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# SuperLUDist\n",
        "Line" : 656,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# HYPRE\n",
        "Line" : 661,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# PETSc\n",
        "Line" : 684,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# SEACAS\n",
        "Line" : 697,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# Trilinos  \n",
        "Line" : 700,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# MSTK\n",
        "Line" : 716,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# Silo\n",
        "Line" : 725,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "# Alquimia and chemical engines (PFloTran and CrunchTope)\n",
        "Line" : 734,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# Alqumia depends on PFloTran\n",
        "Line" : 741,
        "CharPositionInLine" : 2
      },
      "84" : {
        "Text" : "# pflotran\n",
        "Line" : 770,
        "CharPositionInLine" : 2
      },
      "85" : {
        "Text" : "# crunchtope\n",
        "Line" : 777,
        "CharPositionInLine" : 2
      },
      "86" : {
        "Text" : "#include(${SuperBuild_BUILD_FILES_DIR}/Build_PETSc.cmake)\n",
        "Line" : 781,
        "CharPositionInLine" : 6
      },
      "87" : {
        "Text" : "# alquimia\n",
        "Line" : 789,
        "CharPositionInLine" : 2
      },
      "88" : {
        "Text" : "# Nanoflann is used by MSTK only\n",
        "Line" : 799,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# ############################################################################ #\n\n#  Final steps\n\n# ############################################################################ #\n",
        "Line" : 807,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "#  --- Create a CMake cache script\n",
        "Line" : 811,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "# --- Create a Exodus split mesh script and add to the install target     \n",
        "Line" : 819,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "#  --- Build the docs\n",
        "Line" : 827,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 93
    },
    "config/SuperBuild/TPLVersions.cmake" : {
      "ObjectId" : "4d83dd168ef6cda4246237a69a17054bb494d784",
      "LastModified" : "2019-03-01T19:16:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# TPLVersions\n\n#\n\n#    Define the versions, approved download locations for each TPL\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# TPL: Amanzi Collection of TPLs\n\n#\n\n#   Define a \"version number\" for the collection of TPLs listed here.\n\n#   It's not clear this is the best way to include this information, \n\n#   but it's a reasonable place to start.\n\n#   \n\n#   Upgrade History:\n\n#\n\n#   0.90.6       - first version reference used in installations\n\n#   0.90.7       - updated MSTK to version 2.01\n\n#                - added NETCDF - fortran version 4.2 (interface library)\n\n#   0.90.8       - added Xerces-C++ version 3.1.1 (XML support)\n\n#   0.90.9       - update MSTK to version 2.02\n\n#\n\n#   0.91.0       - added PFLOTRAN and Alquimia (updates from Jeff Johnson's work on state-branch)\n\n#   0.91.1       - updated CCSE to version 1.1.7 (and added patch)\n\n#   0.91.2       - turned on patch for IfPack support of noncontiguous global ids with HYPRE\n\n#   0.91.3       - updated Xerces-C++ build/find to use OSX CoreServices framework\n\n#   0.91.4       - updated CCSE to version 1.1.8\n\n#   0.91.5       - updated CCSE to version 1.2.1\n\n#   0.91.6       - updated CCSE to version 1.2.3\n\n#   0.91.7       - updated MSTK to version 2.10rc3\n\n#   0.91.8       - updated Alquimia to licensed version 0.1\n\n#   0.91.9       - updated CCSE to version 1.2.4\n\n#   0.91.10      - updated MSTK to version 2.10rc5\n\n#   0.91.11      - updated PFlotran to commit 1afe88d.\n\n#   0.91.12      - updated MSTK to version 2.10\n\n#   0.91.12a     - updated METIS to 5.1.0, ParMetis to 4.0.3a, SuperLU to 4.3, SuperLUDist to 3.3 and PETSc to 3.4.3\n\n#   0.91.12b     - updated Trilinos to 10.6.1 and MSTK to 2.11rc2\n\n#   0.91.12c     - updated CCSE to version 1.2.5\n\n#   0.91.13      - updated MSTK to version 2.11rc3\n\n#   0.91.14      - updated MSTK to version 2.11rc4 (fixes memory leaks)\n\n#   0.91.15      - updated MSTK to version 2.11rc5 (fixes memory leaks)\n\n#\n\n#   0.92.0       - Merge lib updates through 0.91.15\n\n#   0.92.1       - update MSTK to version 2.12 (fixes debug version linking)\n\n#   0.92.2       - update CCSE to version 1.2.7 (adds f90 utility for plotting)\n\n#   0.92.3       - update CURL to version 7.37.0 (builds correctly on Mac OS X 10.9)\n\n#   0.92.4       - update NetCDF to version 4.3.2 (builds correctly on Mac OS X 10.9)\n\n#   0.92.5       - Patched Alquimia to build properly with GFortran 4.9.x\n\n#   0.92.6       - update Boost to version 1.56.0 \n\n#   0.92.7       - update CCSE to version 1.2.8 \n\n#   0.92.8       - update ExodussII 5.22 -> 6.06\n\n#   0.92.9       - update MSTK to v 2.21 (incompatible -DWITH_MSTK_2_21rc1_OR_NEWER=TRUE)\n\n#   0.92.10      - update MSTK to v 2.22rc1\n\n#   0.92.11      - update MSTK to v 2.22rc3 (fixed parallel mesh partitioning bug)\n\n#   0.92.12      - update PETSc to 3.5.2, Alquimia to 0.2, and PFlotran to commit 611092f80ddb.\n\n#   0.92.13      - update MSTK to v2.22, includes installation of mesh utilities\n\n#   0.92.14      - update Hypre to v2.10.0b (and added patch for to ensure tol>0)\n\n#   0.92.15      - updated Alquimia to v0.2 (backward compatible)\n\n#   0.92.16      - update CCSE to version 1.3.0 \n\n#   0.92.17      - update MSTK to version 2.23 (adds element set capabilities)\n\n#   0.92.18      - update Boost to version 1.58.0 \n\n#   0.92.19      - update CCSE to version 1.3.2\n\n#   0.92.20      - update CCSE to version 1.3.4 (fix issue with fsnapshot)\n\n#   0.92.21      - update Alquimia to version 0.3.1 (CrunchFlow integration)\n\n#   0.92.22      - added optional Silo package\n\n#   0.92.23      - Patched ASCEM-IO to allocate space for sprintf() correctly.\n\n#   0.92.24      - update MSTK to version 2.25 (updates to meshconvert, exoatt)\n\n#   0.92.25      - update MSTK to version 2.26rc2 (adds fixes for pinchouts)\n\n#\n\n#   0.93.0       - defaulted to C++11, update Trilinos to 12.6.1\n\n#   0.93.1       - update Boost to version 1.61.0\n\n#   0.93.2       - update Alquimia to version 1.0.3\n\n#   0.93.3       - update Alquimia to version 1.0.4\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#   0.94.1       - updates several TPLs, new versions are:\n\n#                - Trilinos 12.10.1\n\n#                - zlib 1.2.11\n\n#                - hdf5 1.8.12\n\n#                - netcdf 4.4.1.1\n\n#                - netcdf-fortran 4.4.4\n\n#                - boost 1.6.3\n\n#   0.94.2       - update MTSK to version 2.28rc1\n\n#   0.94.3       - update MSTK to version 3.00 (incompatible - need to update #defines)\n\n#   0.94.4       - update MSTK to version 3.01\n\n#   0.94.5       - restored Alquimia to version 1.0.4\n\n#   0.94.6       - Added CrunchTope package, hash version c31ecb9\n\n#   0.94.7       - update UnitTest++ to version 2.0.0\n\n#                - update Hypre to version 2.11.2    \n\n#   0.94.8       - removed ExodusII as independent TPL  \n\n#   0.94.9       - update PFloTran to version dev-c8df814cb6fa\n\n#                - update PETSc to xsdk-0.2.0 (native 3.7.5)\n\n#                - update SuperLU to 5.2.1\n\n#                - update SuperLU_dist to xsdk-0.2.0 (native 5.1.3)\n\n#                - update Alquimia to xsdk-0.2.0 (native 1.0.4)\n\n#                - update Hypre to xsdk-0.2.0 (native 2.11.2)\n\n#   0.94.10      - update Alquimia to 1.0.5 (critical bug fixes)\n\n#   0.94.11      - update MSTK to 3.0.3 (critical bug fixes)\n\n#                - update NetCDF to 4.5.0\n\n#\t         - update NetCDF-Fortran to 4.4.4\n\n#\t         - update curl to 7.56.1\n\n#   0.94.12      - update xerces-c to 3.2.0 (CMake build)\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#   0.95.0       - update Trilinos 12.12.1\n\n#                - update Hypre 2.12.1  \n\n#                - note alquimia 1.0.5 == xsdk-0.3.0\n\n#                - pflotran release/xsdk-0.3.0\n\n#                - update PETSc 3.8.2\n\n#   0.95.1       - update OpenMPI to 3.0.1\n\n#   0.95.2       - added Amesos2 to list of built Trilinos packages\n\n#                - update MSTK to 3.0.4\n\n#   0.95.3       - removed CURL\n\n#                - update HYPRE to 2.14.0\n\n#                - update OpenMPI to 3.0.2\n\n#   0.95.4       - update Boost to version 1.67.0\n\n#   0.95.5       - update NetCDF to version 4.6.1\n\n#                - update OpenMPI to 3.1.1\n\n#   0.95.6       - added new package nanoflann 1.3.0\n\n#   0.95.7       - update MSTK to 3.1.0\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# this macro appends version number defines to the tpl_versions.h include file\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# TPLs and XSDK versions \n\n#\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Not sure how to create a meaningful hash key for the collection\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n# Default location on GitHub\n\n#\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\n\n# TPL: Xerces\n\n#\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\n\n# TPL: OpenMPI\n\n#\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\n\n# TPL: MPICH\n\n#\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#\n\n# TPL: zlib\n\n#\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#\n\n# TPL: METIS\n\n#\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#\n\n# TPL: CCSE\n\n#\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#\n\n# TPL: UnitTest\n\n#\n",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#\n\n# TPL: Boost\n\n#\n",
        "Line" : 269,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#\n\n# TPL: HDF5\n\n#\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#\n\n# TPL: NetCDF\n\n#\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#\n\n# TPL: NetCDF Fortran\n\n#\n",
        "Line" : 309,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#\n\n# ASCEM-IO\n\n#\n",
        "Line" : 322,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#\n\n# TPL: MSTK\n\n#\n",
        "Line" : 333,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#\n\n# TPL: MOAB\n\n#\n",
        "Line" : 345,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\n\n# TPL: HYPRE\n\n#\n",
        "Line" : 357,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\n\n# TPL: ParMetis\n\n#\n",
        "Line" : 369,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#\n\n# TPL: SuperLU (Built by PETSc!)\n\n#\n",
        "Line" : 381,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#\n\n# TPL: SuperLU Distrib (Built by PETSc!)\n\n#\n",
        "Line" : 393,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#\n\n# TPL: Sowing (Built by PETSc!)\n\n#\n",
        "Line" : 405,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#\n\n# TPL: PETSc\n\n#\n",
        "Line" : 417,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#\n\n# TPL: Trilinos\n\n#\n",
        "Line" : 430,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#\n\n# TPL: SEACAS\n\n#\n",
        "Line" : 442,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#\n\n# TPL: PFlotran\n\n#\n",
        "Line" : 454,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\n\n# TPL: Alquimia\n\n#\n",
        "Line" : 466,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\n\n# TPL: Silo\n\n#\n",
        "Line" : 478,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#\n\n# TPL: CrunchTope\n\n#\n",
        "Line" : 490,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#\n\n# TPL: Nanoflann\n\n#\n",
        "Line" : 502,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 36
    },
    "config/SuperBuild/cmake/BuildLibraryName.cmake" : {
      "ObjectId" : "74084e421512dc641389b42ab4880d4b6dc7c797",
      "LastModified" : "2014-12-01T23:14:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# BUILD_LIBRARY_NAME\n\n#\n\n# Usage:\n\n# BUILD_LIBRARY_NAME(library output_name [SHARED|STATIC])\n\n#\n\n# Given a library target name, return the full filename\n\n# of the library with correct suffix and prefix.\n\n# If STATIC or SHARED IS NOT set then the then suffix\n\n# and prefix are defined by BUILD_SHARED_LIBS flag.\n\n# Default is static.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set teh suffix and prefix\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "config/SuperBuild/cmake/CheckDownload.cmake" : {
      "ObjectId" : "5c04125081f009aba7d2435798f727a57f7c376c",
      "LastModified" : "2017-09-25T16:21:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# CHECK_DOWNLOAD\n\n#\n\n# USAGE:\n\n#  CHECK_DOWNLOAD(TEST_URL web-address\n\n#                 TEST_FILE file\n\n#                 TIMEOUT seconds)\n\n#\n\n# Attempt to download file from web-address using the system curl binary.\n\n# Default TIMEOUT for this command is 60 seconds. If download fails, throws\n\n# fatal error. \n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Parse the arguments\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Default timeout is 60 seconds\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Need a URL AND FILE name\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "config/SuperBuild/cmake/DefineExternalProjectArgs.cmake" : {
      "ObjectId" : "b0bcf8edb8c40d705ea04f665505d1f212c5716f",
      "LastModified" : "2017-09-25T16:21:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ############################################################################ #\n\n#                                                                              #\n\n#  DEFINE_EXTERNAL_PROJECT_ARGS(<PACK_NAME>                                    # \n\n#                                [ TARGET target-name ]                        #\n\n#                                [ BUILD_IN_SOURCE ]                           #\n\n#                                [ DEPENDS pack1 pack2 pack3 ]                 #\n\n#                              )                                               #\n\n#                                                                              #\n\n#  A macro that defines common arguments for the AddExternalProject function   #\n\n#  This macro provides an organized build structure.                           #\n\n#                                                                              #\n\n# ############################################################################ #\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --- Parse the arguments\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# --- Define the build target name\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# --  Define the directories for download, build, install and timestamps\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Will use lower case for directory names\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Default is to build out of source, but some packages can not do that\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Download from the web unless DISABLE_EXTERNAL_DOWNLOADS is TRUE\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# --- Set additional arguments\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Log all steps, this keeps the STDOUT/STDERR tidy.\n",
        "Line" : 66,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Define the package dependencies \t\t\t\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Set the build in source flag\n",
        "Line" : 86,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 11
    },
    "config/SuperBuild/cmake/FindSpackInstallLocation.cmake" : {
      "ObjectId" : "f3277ce09278d511e6c4a9eec15ce2633bfbea8c",
      "LastModified" : "2018-02-22T21:59:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# FIND_SPACK_INSTALL_LOCATION\n\n#\n\n# Usage:\n\n# FIND_SPACK_INSTALL_LOCATION(pkg_name output_name)\n\n#\n\n# Given a package target name, return the full path of the\n\n# installation prefix.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#  ${SPACK_BINARY} find -ld ${pkg_name} | sed -r \"s/\\x1B\\[([0-9]{1,2}(;[0-9]{1,2})?)?[mGK]//g\" | awk '/^[a-z]/{print $1}' | xargs -n1 ${SPACK_BINARY} find -p / | awk '/^[^-]/{print $2\";\"}' | tr -d '\\n'\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#set(${output_name} ${SPACK_BINARY} find -ld ${pkg_name} | sed -r \"s/\\\\x1B\\[\\([0-9]{1,2}\\(;[0-9]{1,2}\\)?\\)?[mGK]//g\" | awk '/^[a-z]/{print $1}' | xargs -n1 ${SPACK_BINARY} find -p / | awk '/^[^-]/{print $2\";\"}' | tr -d '\\n' PARENT_SCOPE )\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#execute_process( COMMAND ${SPACK_BINARY} find -ld ${pkg_name} | sed -r \"s/\\\\x1B\\[\\([0-9]{1,2}\\(;[0-9]{1,2}\\)?\\)?[mGK]//g\" | awk '/^[a-z]/{print $1}' | xargs -n1 ${SPACK_BINARY} find -p / | awk '/^[^-]/{print $2\";\"}' | tr -d '\\n'\n\n#    OUTPUT_VARIABLE temp\n\n#)\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#/^[^-]/{print $2\\\";\\\"}\"\n\n#COMMAND ${SPACK_BINARY} find -ld ${pkg_name}\n\n#                  COMMAND sed -r \"s/\\\\x1B\\[([0-9]{1,2}(;[0-9]{1,2})?)?[mGK]//g\"\n\n#\t\t  COMMAND awk '/^[a-z]/{print $1}' \n\n#\t\t  COMMAND xargs -n1 ${SPACK_BINARY} find -p / \n\n#\t\t  COMMAND awk '/^[^-]/{print $2\";\"}' \n\n#        \t  COMMAND tr -d '\\n'\n\n#\t\t  OUTPUT_VARIABLE temp\n\n#\t\t  )\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "config/SuperBuild/doc/CMakeLists.txt" : {
      "ObjectId" : "4bc76f711336a39845e82ee386a54b24317295e5",
      "LastModified" : "2018-02-22T21:59:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Amanzi SuperBuild\n\n#       Amanzi TPL Build Targets\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Build the docs\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "config/SuperBuild/include/Build_ASCEMIO.cmake" : {
      "ObjectId" : "3461004873904da83497cd3db674ffffbdf7792b",
      "LastModified" : "2018-02-22T21:59:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Build TPL: ASCEMIO \n\n#  \n\n# --- Define all the directories and common external project flags\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add ASCEMIO version to the autogenerated tpl_versions.h file\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# --- Patch the original code\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# configure the CMake patch step\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# set the patch command\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# --- Define the arguments passed to CMake.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# --- Add external project build and tie to the ZLIB build target\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Package dependency target\n\n# Temporary files directory\n\n# Timestamp and log directory\n",
        "Line" : 39,
        "CharPositionInLine" : 66
      },
      "9" : {
        "Text" : "# -- Download and URL definitions\n",
        "Line" : 42,
        "CharPositionInLine" : 20
      },
      "10" : {
        "Text" : "# Download directory\n\n# URL may be a web site OR a local file\n\n# md5sum of the archive file\n",
        "Line" : 43,
        "CharPositionInLine" : 66
      },
      "11" : {
        "Text" : "# -- Patch \n",
        "Line" : 46,
        "CharPositionInLine" : 20
      },
      "12" : {
        "Text" : "# -- Configure\n",
        "Line" : 48,
        "CharPositionInLine" : 20
      },
      "13" : {
        "Text" : "# CMAKE_CACHE_ARGS or CMAKE_ARGS => CMake configure\n",
        "Line" : 50,
        "CharPositionInLine" : 66
      },
      "14" : {
        "Text" : "# Ensure uniform build\n",
        "Line" : 52,
        "CharPositionInLine" : 81
      },
      "15" : {
        "Text" : "# -- Build\n",
        "Line" : 54,
        "CharPositionInLine" : 20
      },
      "16" : {
        "Text" : "# Build directory \n",
        "Line" : 55,
        "CharPositionInLine" : 66
      },
      "17" : {
        "Text" : "# Flag for in source builds\n",
        "Line" : 57,
        "CharPositionInLine" : 66
      },
      "18" : {
        "Text" : "# -- Install\n",
        "Line" : 58,
        "CharPositionInLine" : 20
      },
      "19" : {
        "Text" : "# Install directory\n",
        "Line" : 59,
        "CharPositionInLine" : 66
      },
      "20" : {
        "Text" : "# -- Output control\n",
        "Line" : 61,
        "CharPositionInLine" : 20
      },
      "CommentCount" : 21
    },
    "config/SuperBuild/include/Build_Alquimia.cmake" : {
      "ObjectId" : "a905494bc04e26ac79105fb217b3734874937ebf",
      "LastModified" : "2018-03-01T00:52:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Build TPL:  ALQUIMIA \n\n#   \n\n# --- Define all the directories and common external project flags\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add version to the autogenerated tpl_versions.h file\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# --- Patch the original code\n\n# Alquimia and Amanzi disagree about how to find PETSc, so we override \n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# configure the CMake patch step\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# set the patch command\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# --- Define the arguments passed to CMake.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# --- Add external project build and tie to the ALQUIMIA build target\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Package dependency target\n\n# Temporary files directory\n\n# Timestamp and log directory\n",
        "Line" : 61,
        "CharPositionInLine" : 66
      },
      "9" : {
        "Text" : "# -- Download and URL definitions\n",
        "Line" : 64,
        "CharPositionInLine" : 20
      },
      "10" : {
        "Text" : "# Download directory\n\n# URL may be a web site OR a local file\n\n# md5sum of the archive file\n\n# file name to store (if not end of URL)\n\n# Mods to source\n",
        "Line" : 65,
        "CharPositionInLine" : 66
      },
      "11" : {
        "Text" : "# -- Configure\n",
        "Line" : 70,
        "CharPositionInLine" : 20
      },
      "12" : {
        "Text" : "# Source directory\n\n# Global definitions from root CMakeList\n",
        "Line" : 71,
        "CharPositionInLine" : 66
      },
      "13" : {
        "Text" : "# Ensure uniform build\n",
        "Line" : 74,
        "CharPositionInLine" : 82
      },
      "14" : {
        "Text" : "# -- Build\n",
        "Line" : 78,
        "CharPositionInLine" : 20
      },
      "15" : {
        "Text" : "# Build directory \n",
        "Line" : 79,
        "CharPositionInLine" : 66
      },
      "16" : {
        "Text" : "# -- Install\n",
        "Line" : 81,
        "CharPositionInLine" : 20
      },
      "17" : {
        "Text" : "# Install directory\n",
        "Line" : 82,
        "CharPositionInLine" : 66
      },
      "18" : {
        "Text" : "# -- Output control\n\n# -- Output control\n",
        "Line" : 84,
        "CharPositionInLine" : 20
      },
      "CommentCount" : 19
    },
    "config/SuperBuild/include/Build_Boost.cmake" : {
      "ObjectId" : "49344e20f38caa92c438ae43bc1b587b76697e11",
      "LastModified" : "2018-06-08T18:17:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Build TPL: Boost \n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# --- Define all the directories and common external project flags\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add Boost version to the autogenerated tpl_versions.h file\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# -- Define build definitions\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# We only build what we need, this is NOT a full Boost install\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# --- Define the configure command\n\n# bjam args escape spaces not quote them\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# determin link type\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# determine toolset type\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# CMAKE_SYSTEM of the form Darwin-12.5.0\n\n# CMAKE_SYSTEM_VERSION is 12.5.0 corresponds to OSX 10.8.5\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# some extra hints.\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# On Mac OS 10.9, Clang has switched from using libstdc++ to libc++, so \n\n# we need to tell it to do the opposite.\n",
        "Line" : 56,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# OSX 10.9.x -> Darwin-13.x.y\n",
        "Line" : 58,
        "CharPositionInLine" : 40
      },
      "13" : {
        "Text" : "# On Mac OS 10.10, we don't know what to do yet\n",
        "Line" : 67,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# OSX 10.9.x -> Darwin-13.x.y\n",
        "Line" : 68,
        "CharPositionInLine" : 42
      },
      "15" : {
        "Text" : "# Check if it looks like an mpi wrapper\n",
        "Line" : 69,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# Extract the name of the compiler\n",
        "Line" : 76,
        "CharPositionInLine" : 10
      },
      "17" : {
        "Text" : "# Extract the version of the compiler\n",
        "Line" : 88,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# Test to see if it is macports or clang\n",
        "Line" : 96,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "#set(shared_special \"hardcode-dll-paths=true dll-path=${TPL_INSTALL_PREFIX}/lib\")\n",
        "Line" : 102,
        "CharPositionInLine" : 12
      },
      "20" : {
        "Text" : "# --- Define the build command\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# --- Add external project build and tie to the ZLIB build target\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Package dependency target\n\n# Temporary files directory\n\n# Timestamp and log directory\n",
        "Line" : 153,
        "CharPositionInLine" : 67
      },
      "23" : {
        "Text" : "# -- Download and URL definitions\n",
        "Line" : 156,
        "CharPositionInLine" : 20
      },
      "24" : {
        "Text" : "# Download directory\n",
        "Line" : 157,
        "CharPositionInLine" : 66
      },
      "25" : {
        "Text" : "# URL may be a web site OR a local file\n\n# md5sum of the archive file\n",
        "Line" : 158,
        "CharPositionInLine" : 67
      },
      "26" : {
        "Text" : "# -- Configure\n",
        "Line" : 160,
        "CharPositionInLine" : 20
      },
      "27" : {
        "Text" : "# Source directory\n",
        "Line" : 161,
        "CharPositionInLine" : 67
      },
      "28" : {
        "Text" : "# -- Build\n",
        "Line" : 163,
        "CharPositionInLine" : 20
      },
      "29" : {
        "Text" : "# Build directory \n\n# $(MAKE) enables parallel builds through make\n\n# Flag for in source builds\n",
        "Line" : 164,
        "CharPositionInLine" : 67
      },
      "30" : {
        "Text" : "# -- Install\n",
        "Line" : 167,
        "CharPositionInLine" : 20
      },
      "31" : {
        "Text" : "# Install directory\n",
        "Line" : 168,
        "CharPositionInLine" : 66
      },
      "32" : {
        "Text" : "# -- Output control\n",
        "Line" : 170,
        "CharPositionInLine" : 20
      },
      "33" : {
        "Text" : "# --- Useful variables for other packages that depend on Boost\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 34
    },
    "config/SuperBuild/include/Build_CCSE.cmake" : {
      "ObjectId" : "90a5c652c2dffd776c1b96fee1c2e7483b9002ec",
      "LastModified" : "2019-04-08T23:00:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Build TPL:  CCSE \n\n#  \n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# --- Define all the directories and common external project flags\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add CCSE version to the autogenerated tpl_versions.h file\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# --- Define the CMake configure parameters\n\n# Note:\n\n#      CMAKE_CACHE_ARGS requires -DVAR:<TYPE>=VALUE syntax\n\n#      CMAKE_ARGS -DVAR=VALUE OK\n\n# NO WHITESPACE between -D and VAR. Parser blows up otherwise.\n\n#\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#convert BOOLSs to INTs, as reqd\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# --- Set the name of the patch\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# --- Configure the bash patch script\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# --- Configure the CMake patch step\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# --- Set the patch command\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# --- Add external project build and tie to the CCSE build target\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Package dependency target\n\n# Temporary files directory\n\n# Timestamp and log directory\n",
        "Line" : 75,
        "CharPositionInLine" : 66
      },
      "12" : {
        "Text" : "# -- Download and URL definitions\n",
        "Line" : 78,
        "CharPositionInLine" : 20
      },
      "13" : {
        "Text" : "# Download directory\n\n# URL may be a web site OR a local file\n\n# md5sum of the archive file\n",
        "Line" : 79,
        "CharPositionInLine" : 66
      },
      "14" : {
        "Text" : "# -- Configure\n",
        "Line" : 83,
        "CharPositionInLine" : 20
      },
      "15" : {
        "Text" : "# Source directory\n",
        "Line" : 84,
        "CharPositionInLine" : 66
      },
      "16" : {
        "Text" : "# Global definitions from root CMakeList\n",
        "Line" : 85,
        "CharPositionInLine" : 52
      },
      "17" : {
        "Text" : "# -- Build\n",
        "Line" : 87,
        "CharPositionInLine" : 20
      },
      "18" : {
        "Text" : "# Build directory \n\n# $(MAKE) enables parallel builds through make\n\n# Flag for in source builds\n",
        "Line" : 88,
        "CharPositionInLine" : 66
      },
      "19" : {
        "Text" : "# -- Install\n",
        "Line" : 91,
        "CharPositionInLine" : 20
      },
      "20" : {
        "Text" : "# Install directory\n",
        "Line" : 92,
        "CharPositionInLine" : 66
      },
      "21" : {
        "Text" : "# -- Output control\n",
        "Line" : 93,
        "CharPositionInLine" : 20
      },
      "22" : {
        "Text" : "# --- This custom command builds fsnapshot.so, which is a Python module used \n\n# --- to extract Amanzi-S plot data. It executes after the CCSE library is \n\n# --- built, builds the module, and copies it into place.\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Extract the name of the compiler\n",
        "Line" : 109,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# Extract the name of the compiler\n",
        "Line" : 129,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# Extract the name of the compiler\n",
        "Line" : 148,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# --- This guy right here builds AMRDeriveTecplot, an executable program for \n\n# --- producing Tecplot/ASCII output from CCSE's native AMR output.\n\n# --- Like the fsnapshot.so command above, it executes after the CCSE library \n\n# --- is built, builds the module, and copies it into place.\n\n#if (${CMAKE_SYSTEM_NAME} STREQUAL \"Linux\")\n\n#  # We need to link against libquadmath on Linux, it seems.\n\n#  set(AMRDERIVETECPLOT_ARGS \"LDFLAGS=\\\"-lquadmath\\\"\")\n\n#endif()\n\n#if (APPLE)\n\n#  set(AMRDERIVETECPLOT_ARGS \"LDFLAGS=\\\"-lgfortran\\\"\")\n\n#endif()\n\n#add_custom_command(TARGET ${CCSE_BUILD_TARGET}\n\n#                   POST_BUILD\n\n#                   COMMAND $(MAKE) BOXLIB_HOME=${CCSE_source_dir} ${AMRDERIVETECPLOT_ARGS}\n\n#                   COMMAND cp AmrDeriveTecplot*.ex ${TPL_INSTALL_PREFIX}/bin\n\n#                   DEPENDS ${CCSE_BUILD_TARGET}\n\n#                   WORKING_DIRECTORY ${CCSE_source_dir}/Tools/C_util/AmrDeriveTecplot)\n",
        "Line" : 167,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 27
    },
    "config/SuperBuild/include/Build_CrunchTope.cmake" : {
      "ObjectId" : "d0bffc6312d989626bf515b8c95cba8d3539eef9",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Build TPL:  CRUNCHTOPE\n\n#   \n\n# --- Define all the directories and common external project flags\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add version version to the autogenerated tpl_versions.h file\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# --- Patch the original code\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# configure the CMake patch step\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# set the patch command\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# --- Define the arguments passed to CMake.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# --- Add external project build and tie to the CRUNCHTOPE build target\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Package dependency target\n\n# Temporary files directory\n\n# Timestamp and log directory\n",
        "Line" : 53,
        "CharPositionInLine" : 70
      },
      "9" : {
        "Text" : "# -- Download and URL definitions\n",
        "Line" : 56,
        "CharPositionInLine" : 20
      },
      "10" : {
        "Text" : "# Download directory\n\n# URL may be a web site OR a local file\n\n# md5sum of the archive file\n",
        "Line" : 57,
        "CharPositionInLine" : 70
      },
      "11" : {
        "Text" : "# -- Patch \n",
        "Line" : 60,
        "CharPositionInLine" : 20
      },
      "12" : {
        "Text" : "# Mods to source\n",
        "Line" : 61,
        "CharPositionInLine" : 70
      },
      "13" : {
        "Text" : "# -- Configure\n",
        "Line" : 62,
        "CharPositionInLine" : 20
      },
      "14" : {
        "Text" : "# Source directory\n\n# CMAKE_CACHE_ARGS or CMAKE_ARGS => CMake configure\n",
        "Line" : 63,
        "CharPositionInLine" : 70
      },
      "15" : {
        "Text" : "# Ensure uniform build\n",
        "Line" : 65,
        "CharPositionInLine" : 82
      },
      "16" : {
        "Text" : "# -- Build\n",
        "Line" : 69,
        "CharPositionInLine" : 20
      },
      "17" : {
        "Text" : "# Build directory \n",
        "Line" : 70,
        "CharPositionInLine" : 70
      },
      "18" : {
        "Text" : "# -- Install\n",
        "Line" : 72,
        "CharPositionInLine" : 20
      },
      "19" : {
        "Text" : "# Install directory\n",
        "Line" : 73,
        "CharPositionInLine" : 70
      },
      "20" : {
        "Text" : "# -- Output control\n",
        "Line" : 75,
        "CharPositionInLine" : 20
      },
      "CommentCount" : 21
    },
    "config/SuperBuild/include/Build_HDF5.cmake" : {
      "ObjectId" : "f4a8ed44b4294db3c06d6d6c513f2e0028ef15ea",
      "LastModified" : "2018-02-22T21:59:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Build TPL:  HDF5 \n\n#    \n\n# --- Define all the directories and common external project flags\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add HDF5 version to the autogenerated tpl_versions.h file\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# --- Patch the original code\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# configure the CMake patch step\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# set the patch command\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# --- Define configure parameters\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#-D ZLIB_INCLUDE_DIR=${ZLIB_install_dir}/include\n\n#-D ZLIB_LIBRARY=${ZLIB_install_dir}/lib/libz.a\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# --- Add external project build and tie to the HDF5 build target\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Package dependency target\n\n# Temporary files directory\n\n# Timestamp and log directory\n",
        "Line" : 47,
        "CharPositionInLine" : 66
      },
      "10" : {
        "Text" : "# -- Download and URL definitions\n",
        "Line" : 50,
        "CharPositionInLine" : 20
      },
      "11" : {
        "Text" : "# Download directory\n\n# URL may be a web site OR a local file\n\n# md5sum of the archive file\n",
        "Line" : 51,
        "CharPositionInLine" : 66
      },
      "12" : {
        "Text" : "# -- Patch \n\n# PATCH_COMMAND ${HDF5_PATCH_COMMAND}\n",
        "Line" : 54,
        "CharPositionInLine" : 20
      },
      "13" : {
        "Text" : "# -- Configure\n",
        "Line" : 57,
        "CharPositionInLine" : 20
      },
      "14" : {
        "Text" : "# Global definitions from root CMakeList\n",
        "Line" : 59,
        "CharPositionInLine" : 49
      },
      "15" : {
        "Text" : "# Ensure uniform build\n",
        "Line" : 61,
        "CharPositionInLine" : 82
      },
      "16" : {
        "Text" : "# -- Build\n",
        "Line" : 65,
        "CharPositionInLine" : 20
      },
      "17" : {
        "Text" : "# Build directory \n\n# $(MAKE) enables parallel builds through make\n\n# Flag for in source builds\n",
        "Line" : 66,
        "CharPositionInLine" : 66
      },
      "18" : {
        "Text" : "# -- Install\n",
        "Line" : 69,
        "CharPositionInLine" : 20
      },
      "19" : {
        "Text" : "# Install directory\n",
        "Line" : 70,
        "CharPositionInLine" : 66
      },
      "20" : {
        "Text" : "# -- Output control\n",
        "Line" : 71,
        "CharPositionInLine" : 20
      },
      "21" : {
        "Text" : "# --- Useful variables for packages that depend on HDF5 (NetCDF)\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 22
    },
    "config/SuperBuild/include/Build_HDF5Cmake.cmake" : {
      "ObjectId" : "03d06f77f5eb10c7385e2d031ead34ab8177a5e9",
      "LastModified" : "2018-02-22T21:59:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Build TPL:  HDF5 \n\n#    \n\n# --- Define all the directories and common external project flags\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add HDF5 version to the autogenerated tpl_versions.h file\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# --- Patch the original code\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# configure the CMake patch step\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# set the patch command\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# --- Define configure parameters\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#-D ZLIB_INCLUDE_DIR=${ZLIB_install_dir}/include\n\n#-D ZLIB_LIBRARY=${ZLIB_install_dir}/lib/libz.a\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# --- Add external project build and tie to the HDF5 build target\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Package dependency target\n\n# Temporary files directory\n\n# Timestamp and log directory\n",
        "Line" : 45,
        "CharPositionInLine" : 66
      },
      "10" : {
        "Text" : "# -- Download and URL definitions\n",
        "Line" : 48,
        "CharPositionInLine" : 20
      },
      "11" : {
        "Text" : "# Download directory\n\n# URL may be a web site OR a local file\n\n# md5sum of the archive file\n",
        "Line" : 49,
        "CharPositionInLine" : 66
      },
      "12" : {
        "Text" : "# -- Patch \n\n# PATCH_COMMAND ${HDF5_PATCH_COMMAND}\n",
        "Line" : 52,
        "CharPositionInLine" : 20
      },
      "13" : {
        "Text" : "# -- Configure\n",
        "Line" : 55,
        "CharPositionInLine" : 20
      },
      "14" : {
        "Text" : "# Global definitions from root CMakeList\n",
        "Line" : 57,
        "CharPositionInLine" : 49
      },
      "15" : {
        "Text" : "# Ensure uniform build\n",
        "Line" : 59,
        "CharPositionInLine" : 82
      },
      "16" : {
        "Text" : "# -- Build\n",
        "Line" : 63,
        "CharPositionInLine" : 20
      },
      "17" : {
        "Text" : "# Build directory \n\n# $(MAKE) enables parallel builds through make\n\n# Flag for in source builds\n",
        "Line" : 64,
        "CharPositionInLine" : 66
      },
      "18" : {
        "Text" : "# -- Install\n",
        "Line" : 67,
        "CharPositionInLine" : 20
      },
      "19" : {
        "Text" : "# Install directory\n",
        "Line" : 68,
        "CharPositionInLine" : 66
      },
      "20" : {
        "Text" : "# -- Output control\n",
        "Line" : 69,
        "CharPositionInLine" : 20
      },
      "21" : {
        "Text" : "# --- Useful variables for packages that depend on HDF5 (NetCDF)\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 22
    },
    "config/SuperBuild/include/Build_HYPRE.cmake" : {
      "ObjectId" : "a0174c771067736510e4dd3810eadd2c455b038c",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Build TPL:  HYPRE \n\n#    \n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# --- Define all the directories and common external project flags\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add version version to the autogenerated tpl_versions.h file\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# --- Define configure parameters\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Disable OpenMP with HYPRE for now\n\n# Is OpenMP available\n\n# if (ENABLE_OpenMP)\n\n#   find_package(OpenMP)\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# if (OPENMP_FOUND)\n\n#   set(hypre_openmp_opt \"-DHYPRE_USING_OPENMP:BOOL=TRUE\")\n\n# endif()\n\n#else()\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#endif()\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Locate LAPACK and BLAS\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# set(hypre_fortran_opt -\"--disable-fortran)\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Locate SuperLU and SuperLUDist\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# shared/static libraries (shared FEI is broken in HYPRE)\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# --- Set the name of the patch\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# --- Configure the bash patch script\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# --- Configure the CMake patch step\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# --- Set the patch command\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# --- Add external project build and tie to the ZLIB build target\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Package dependency target\n\n# Temporary files directory\n\n# Timestamp and log directory\n",
        "Line" : 82,
        "CharPositionInLine" : 63
      },
      "18" : {
        "Text" : "# -- Download and URL definitions\n",
        "Line" : 85,
        "CharPositionInLine" : 20
      },
      "19" : {
        "Text" : "# URL may be a web site OR a local file\n\n# md5sum of the archive file\n\n# file name to store (if not end of URL)\n",
        "Line" : 87,
        "CharPositionInLine" : 63
      },
      "20" : {
        "Text" : "# -- Patch \n",
        "Line" : 90,
        "CharPositionInLine" : 20
      },
      "21" : {
        "Text" : "# -- Configure\n",
        "Line" : 92,
        "CharPositionInLine" : 20
      },
      "22" : {
        "Text" : "# SOURCE_SUBDIR src   # cmake 3.7+ feature \n",
        "Line" : 94,
        "CharPositionInLine" : 20
      },
      "23" : {
        "Text" : "# Global definitions from root CMakeList\n",
        "Line" : 95,
        "CharPositionInLine" : 49
      },
      "24" : {
        "Text" : "# Ensure uniform build\n",
        "Line" : 100,
        "CharPositionInLine" : 82
      },
      "25" : {
        "Text" : "# -- Build\n",
        "Line" : 107,
        "CharPositionInLine" : 20
      },
      "26" : {
        "Text" : "# Build directory \n",
        "Line" : 108,
        "CharPositionInLine" : 63
      },
      "27" : {
        "Text" : "# -- Install\n",
        "Line" : 110,
        "CharPositionInLine" : 20
      },
      "28" : {
        "Text" : "# Install directory\n",
        "Line" : 111,
        "CharPositionInLine" : 63
      },
      "29" : {
        "Text" : "# -- Output control\n",
        "Line" : 113,
        "CharPositionInLine" : 20
      },
      "30" : {
        "Text" : "# --- Useful variables that depend on HYPRE\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 31
    },
    "config/SuperBuild/include/Build_METIS.cmake" : {
      "ObjectId" : "a0b09df5259dacb1992d934e3a8518030c23cdcc",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Build TPL:  METIS\n\n#\n\n# --- Define all the directories and common external project flags\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add version version to the autogenerated tpl_versions.h file\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# --- Define the CMake configure parameters\n\n# Note:\n\n#      CMAKE_CACHE_ARGS requires -DVAR:<TYPE>=VALUE syntax\n\n#      CMAKE_ARGS -DVAR=VALUE OK\n\n# NO WHITESPCE between -D and VAR. Parser blows up otherwise.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# --- Add external project build and tie to the METIS build target\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Package dependency target\n\n# Temporary files directory\n\n# Timestamp and log directory\n",
        "Line" : 33,
        "CharPositionInLine" : 66
      },
      "6" : {
        "Text" : "# -- Download and URL definitions\n",
        "Line" : 36,
        "CharPositionInLine" : 20
      },
      "7" : {
        "Text" : "# Download directory\n\n# URL may be a web site OR a local file\n\n# md5sum of the archive file\n",
        "Line" : 37,
        "CharPositionInLine" : 66
      },
      "8" : {
        "Text" : "# -- Configure\n",
        "Line" : 40,
        "CharPositionInLine" : 20
      },
      "9" : {
        "Text" : "# Source directory\n\n# Global definitions from root CMakeList\n",
        "Line" : 41,
        "CharPositionInLine" : 66
      },
      "10" : {
        "Text" : "# Ensure uniform build\n",
        "Line" : 44,
        "CharPositionInLine" : 81
      },
      "11" : {
        "Text" : "# -- Build\n",
        "Line" : 46,
        "CharPositionInLine" : 20
      },
      "12" : {
        "Text" : "# Build directory\n\n# $(MAKE) enables parallel builds through make\n\n# Flag for in source builds\n",
        "Line" : 47,
        "CharPositionInLine" : 66
      },
      "13" : {
        "Text" : "# -- Install\n",
        "Line" : 50,
        "CharPositionInLine" : 20
      },
      "14" : {
        "Text" : "# Install directory\n",
        "Line" : 51,
        "CharPositionInLine" : 66
      },
      "15" : {
        "Text" : "# -- Output control\n",
        "Line" : 53,
        "CharPositionInLine" : 20
      },
      "16" : {
        "Text" : "# --- Build variables needed outside this file\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# --- set cache (global) variables\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "config/SuperBuild/include/Build_MOAB.cmake" : {
      "ObjectId" : "16062940beae5643d24b598233ebfeaa0d1a7230",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Build TPL: MOAB \n\n# \n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# --- Define all the directories and common external project flags\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add version version to the autogenerated tpl_versions.h file\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# --- Build common compiler and link flags\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Build compiler flag strings for C\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build the LDFLAGS string      \n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# --- Add external project and tie to the MOAB build target\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Package dependency target\n\n# Temporary files directory\n\n# Timestamp and log directory\n",
        "Line" : 48,
        "CharPositionInLine" : 57
      },
      "9" : {
        "Text" : "# -- Download and URL definitions\n",
        "Line" : 51,
        "CharPositionInLine" : 20
      },
      "10" : {
        "Text" : "# URL may be a web site OR a local file\n\n# md5sum of the archive file\n",
        "Line" : 53,
        "CharPositionInLine" : 57
      },
      "11" : {
        "Text" : "# -- Configure\n",
        "Line" : 55,
        "CharPositionInLine" : 20
      },
      "12" : {
        "Text" : "# Source directory\n",
        "Line" : 56,
        "CharPositionInLine" : 57
      },
      "13" : {
        "Text" : "# -- Build\n",
        "Line" : 71,
        "CharPositionInLine" : 20
      },
      "14" : {
        "Text" : "# Build directory \n\n# $(MAKE) enables parallel builds through make\n\n# Flag for in source builds\n",
        "Line" : 72,
        "CharPositionInLine" : 63
      },
      "15" : {
        "Text" : "# -- Install\n",
        "Line" : 75,
        "CharPositionInLine" : 20
      },
      "16" : {
        "Text" : "# Install directory\n",
        "Line" : 76,
        "CharPositionInLine" : 63
      },
      "17" : {
        "Text" : "# -- Output control\n",
        "Line" : 77,
        "CharPositionInLine" : 20
      },
      "CommentCount" : 18
    },
    "config/SuperBuild/include/Build_MOABCmake.cmake" : {
      "ObjectId" : "666c701bdd709f03c13604344298fc1ee83f5c25",
      "LastModified" : "2018-02-22T21:59:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Build TPL: MOAB \n\n# \n\n# --- Define all the directories and common external project flags\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add version version to the autogenerated tpl_versions.h file\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# --- Configure the package\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#list(APPEND MOAB_CMAKE_CACHE_ARGS \"-DENABLE_ZOLTAN:BOOL=TRUE\")\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# location of package\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#list(APPEND MOAB_CMAKE_CACHE_ARGS \"-DZOLTAN_DIR:PATH=${Zoltan_INSTALL_PREFIX}\")\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# --- Add external project build and tie to the ZLIB build target\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Package dependency target\n\n# Temporary files directory\n\n# Timestamp and log directory\n",
        "Line" : 34,
        "CharPositionInLine" : 59
      },
      "9" : {
        "Text" : "# -- Download and URL definitions\n",
        "Line" : 37,
        "CharPositionInLine" : 20
      },
      "10" : {
        "Text" : "# URL may be a web site OR a local file\n\n# md5sum of the archive file\n",
        "Line" : 39,
        "CharPositionInLine" : 59
      },
      "11" : {
        "Text" : "# -- Configure\n",
        "Line" : 41,
        "CharPositionInLine" : 20
      },
      "12" : {
        "Text" : "# Source directory\n",
        "Line" : 42,
        "CharPositionInLine" : 59
      },
      "13" : {
        "Text" : "# Global definitions from root CMakeList\n",
        "Line" : 43,
        "CharPositionInLine" : 66
      },
      "14" : {
        "Text" : "# Ensure uniform build\n",
        "Line" : 45,
        "CharPositionInLine" : 85
      },
      "15" : {
        "Text" : "# -- Build\n",
        "Line" : 49,
        "CharPositionInLine" : 20
      },
      "16" : {
        "Text" : "# Build directory \n\n# $(MAKE) enables parallel builds through make\n\n# Flag for in source builds\n",
        "Line" : 50,
        "CharPositionInLine" : 66
      },
      "17" : {
        "Text" : "# -- Install\n",
        "Line" : 53,
        "CharPositionInLine" : 20
      },
      "18" : {
        "Text" : "# Install directory\n",
        "Line" : 54,
        "CharPositionInLine" : 66
      },
      "19" : {
        "Text" : "# -- Output control\n",
        "Line" : 55,
        "CharPositionInLine" : 20
      },
      "CommentCount" : 20
    },
    "config/SuperBuild/include/Build_MSTK.cmake" : {
      "ObjectId" : "15d779733f68c367fb6e8b9c6b4946237796d962",
      "LastModified" : "2019-03-01T19:16:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Build TPL: MSTK \n\n#    \n\n# --- Define all the directories and common external project flags\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add version version to the autogenerated tpl_versions.h file\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# --- Patch the original code\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# configure the CMake patch step\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# set the patch command\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# --- Define the configure parameters\n\n# compile flags\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# --- Add external project build and tie to the MSTK build target\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Package dependency target\n\n# Temporary files directory\n\n# Timestamp and log directory\n",
        "Line" : 85,
        "CharPositionInLine" : 66
      },
      "9" : {
        "Text" : "# -- Download and URL definitions\n",
        "Line" : 88,
        "CharPositionInLine" : 20
      },
      "10" : {
        "Text" : "# Download directory\n\n# URL may be a web site OR a local file\n\n# md5sum of the archive file\n\n# file name to store (if not end of URL)\n",
        "Line" : 89,
        "CharPositionInLine" : 66
      },
      "11" : {
        "Text" : "# -- Patch \n",
        "Line" : 93,
        "CharPositionInLine" : 20
      },
      "12" : {
        "Text" : "# -- Configure\n",
        "Line" : 95,
        "CharPositionInLine" : 20
      },
      "13" : {
        "Text" : "# Source directory\n",
        "Line" : 96,
        "CharPositionInLine" : 66
      },
      "14" : {
        "Text" : "# Global definitions from root CMakeList\n",
        "Line" : 98,
        "CharPositionInLine" : 66
      },
      "15" : {
        "Text" : "# -- Build\n",
        "Line" : 100,
        "CharPositionInLine" : 20
      },
      "16" : {
        "Text" : "# Build directory \n\n# $(MAKE) enables parallel builds through make\n\n# Flag for in source builds\n",
        "Line" : 101,
        "CharPositionInLine" : 66
      },
      "17" : {
        "Text" : "# -- Install\n",
        "Line" : 104,
        "CharPositionInLine" : 20
      },
      "18" : {
        "Text" : "# Install directory\n",
        "Line" : 105,
        "CharPositionInLine" : 66
      },
      "19" : {
        "Text" : "# -- Output control\n",
        "Line" : 106,
        "CharPositionInLine" : 20
      },
      "20" : {
        "Text" : "# --- set cache (global) variables\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "config/SuperBuild/include/Build_Nanoflann.cmake" : {
      "ObjectId" : "831459cf6279caaa375275d47bf33876c0719a19",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Build TPL: Nanoflann \n\n# \n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# --- Define all the directories and common external project flags\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add version version to the autogenerated tpl_versions.h file\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# --- Define the install directory\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# --- Add external project and tie to the Nanoflann build target\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Temporary files directory\n\n# Timestamp and log directory\n",
        "Line" : 21,
        "CharPositionInLine" : 59
      },
      "7" : {
        "Text" : "# -- Download and URL definitions\n",
        "Line" : 23,
        "CharPositionInLine" : 20
      },
      "8" : {
        "Text" : "# URL may be a web site OR a local file\n\n# md5sum of the archive file\n",
        "Line" : 25,
        "CharPositionInLine" : 59
      },
      "9" : {
        "Text" : "# -- Configure\n",
        "Line" : 27,
        "CharPositionInLine" : 20
      },
      "10" : {
        "Text" : "# Source directory\n",
        "Line" : 28,
        "CharPositionInLine" : 59
      },
      "11" : {
        "Text" : "# Ensure uniform build\n",
        "Line" : 29,
        "CharPositionInLine" : 81
      },
      "12" : {
        "Text" : "# -- Build\n",
        "Line" : 34,
        "CharPositionInLine" : 20
      },
      "13" : {
        "Text" : "# Build directory \n",
        "Line" : 35,
        "CharPositionInLine" : 59
      },
      "14" : {
        "Text" : "# -- Install\n",
        "Line" : 36,
        "CharPositionInLine" : 20
      },
      "15" : {
        "Text" : "# -- Output control\n",
        "Line" : 38,
        "CharPositionInLine" : 20
      },
      "CommentCount" : 16
    },
    "config/SuperBuild/include/Build_NetCDF.cmake" : {
      "ObjectId" : "656f012a43f47a37445e682a4ea6e211218e68e0",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Build TPL: NetCDF \n\n# \n\n# --- Define all the directories and common external project flags\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add version version to the autogenerated tpl_versions.h file\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# --- Patch the original code\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# configure the CMake patch step\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# configure the CMake command file\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# --- Define the configure command\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# specify preferable search path \n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Default is to build with NetCDF4 which depends on HDF5\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# share libraries -- disabled by default\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# --- Add external project build \n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Package dependency target\n\n# Temporary files directory\n\n# Timestamp and log directory\n",
        "Line" : 63,
        "CharPositionInLine" : 58
      },
      "12" : {
        "Text" : "# -- Download and URL definitions\n",
        "Line" : 66,
        "CharPositionInLine" : 20
      },
      "13" : {
        "Text" : "# Download directory\n\n# URL may be a web site OR a local file\n\n# md5sum of the archive file\n\n# file name to store (if not end of URL)\n",
        "Line" : 67,
        "CharPositionInLine" : 58
      },
      "14" : {
        "Text" : "# -- Patch \n",
        "Line" : 71,
        "CharPositionInLine" : 20
      },
      "15" : {
        "Text" : "# -- Configure\n",
        "Line" : 73,
        "CharPositionInLine" : 20
      },
      "16" : {
        "Text" : "# Global definitions from root CMakeList\n",
        "Line" : 75,
        "CharPositionInLine" : 65
      },
      "17" : {
        "Text" : "# Ensure uniform build\n",
        "Line" : 77,
        "CharPositionInLine" : 85
      },
      "18" : {
        "Text" : "# -- Build\n",
        "Line" : 81,
        "CharPositionInLine" : 20
      },
      "19" : {
        "Text" : "# Build directory \n\n# $(MAKE) enables parallel builds through make\n\n# Flag for in source builds\n",
        "Line" : 82,
        "CharPositionInLine" : 64
      },
      "20" : {
        "Text" : "# -- Install\n",
        "Line" : 85,
        "CharPositionInLine" : 20
      },
      "21" : {
        "Text" : "# -- Output control\n",
        "Line" : 87,
        "CharPositionInLine" : 20
      },
      "22" : {
        "Text" : "# --- Useful variables for packages that depend on NetCDF (Trilinos)\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "config/SuperBuild/include/Build_NetCDF_Fortran.cmake" : {
      "ObjectId" : "4d504e9abcc981011a660cade00199480473da17",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Build TPL: NetCDF-Fortran\n\n# \n\n# --- Define all the directories and common external project flags\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add version version to the autogenerated tpl_versions.h file\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# --- Patch original code\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# configure the CMake patch step\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# --- Define the configure command\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# shared/static libraries\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# --- Add external project build \n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Package dependency target\n\n# Temporary files directory\n\n# Timestamp and log directory\n",
        "Line" : 50,
        "CharPositionInLine" : 62
      },
      "9" : {
        "Text" : "# -- Downloads\n",
        "Line" : 53,
        "CharPositionInLine" : 20
      },
      "10" : {
        "Text" : "# URL may be a web site OR a local file\n\n# md5sum of the archive file\n",
        "Line" : 55,
        "CharPositionInLine" : 62
      },
      "11" : {
        "Text" : "# file name to store\n",
        "Line" : 57,
        "CharPositionInLine" : 65
      },
      "12" : {
        "Text" : "# -- Configure\n",
        "Line" : 59,
        "CharPositionInLine" : 20
      },
      "13" : {
        "Text" : "# Global definitions from root CMakeList\n",
        "Line" : 61,
        "CharPositionInLine" : 66
      },
      "14" : {
        "Text" : "# Ensure uniform build\n",
        "Line" : 63,
        "CharPositionInLine" : 85
      },
      "15" : {
        "Text" : "# -- Build\n",
        "Line" : 70,
        "CharPositionInLine" : 20
      },
      "16" : {
        "Text" : "# enables parallel builds through make\n",
        "Line" : 72,
        "CharPositionInLine" : 66
      },
      "17" : {
        "Text" : "# -- Install\n",
        "Line" : 74,
        "CharPositionInLine" : 20
      },
      "18" : {
        "Text" : "# -- Output control\n",
        "Line" : 76,
        "CharPositionInLine" : 20
      },
      "19" : {
        "Text" : "# --- Useful variables for packages that depend on NetCDF (Trilinos)\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "config/SuperBuild/include/Build_PETSc.cmake" : {
      "ObjectId" : "5322eed9aee28480e228a29754cab51a1c334d1f",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Build TPL:  PETSc \n\n#    \n\n# --- Define all the directories and common external project flags\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add PETSc version to the autogenerated tpl_versions.h file\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# --- Download packages PETSc needs\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# --- Define configure parameters\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Use the common cflags, cxxflags\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set PETSc debug flag\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# BLAS options\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# LAPACK options\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Macs are different.\n",
        "Line" : 94,
        "CharPositionInLine" : 17
      },
      "10" : {
        "Text" : "# Point PETSc to the metis build\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# PETSc SuperLU, Metis, ParMetis and SuperLU_dist flags\n\n# For now we allow PETSc to download and build SuperLU and SuperLUDist\n\n# Perhaps they should be a separate TPLs. Error with the download or\n\n# building of these packages will appear to be an error in the\n\n# petsc-configure target. See the log files for more detailed\n\n# information.\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# PETSc install directory\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# --- Set the name of the patch\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# --- Configure the bash patch script\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# --- Configure the CMake patch step\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# --- Set the patch command\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# --- Add external project build \n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Package dependency target\n\n# Temporary files directory\n\n# Timestamp and log directory\n",
        "Line" : 166,
        "CharPositionInLine" : 59
      },
      "19" : {
        "Text" : "# -- Download and URL definitions\n",
        "Line" : 169,
        "CharPositionInLine" : 20
      },
      "20" : {
        "Text" : "# URL may be a web site OR a local file\n\n# md5sum of the archive file\n\n# file name to store (if not end of URL)\n",
        "Line" : 171,
        "CharPositionInLine" : 60
      },
      "21" : {
        "Text" : "# -- Patch \n",
        "Line" : 174,
        "CharPositionInLine" : 20
      },
      "22" : {
        "Text" : "# -- Configure\n",
        "Line" : 176,
        "CharPositionInLine" : 20
      },
      "23" : {
        "Text" : "# Source directory\n",
        "Line" : 177,
        "CharPositionInLine" : 60
      },
      "24" : {
        "Text" : "# -- Build\n",
        "Line" : 190,
        "CharPositionInLine" : 20
      },
      "25" : {
        "Text" : "# Build directory \n",
        "Line" : 191,
        "CharPositionInLine" : 66
      },
      "26" : {
        "Text" : "# Run the CMake script to build\n",
        "Line" : 192,
        "CharPositionInLine" : 80
      },
      "27" : {
        "Text" : "# Flag for in source builds\n",
        "Line" : 193,
        "CharPositionInLine" : 66
      },
      "28" : {
        "Text" : "# -- Install\n",
        "Line" : 194,
        "CharPositionInLine" : 20
      },
      "29" : {
        "Text" : "# Install directory, NOT in the usual directory\n",
        "Line" : 195,
        "CharPositionInLine" : 66
      },
      "30" : {
        "Text" : "# -- Output control\n",
        "Line" : 197,
        "CharPositionInLine" : 20
      },
      "31" : {
        "Text" : "# --- Useful variables for other packages that depend on PETSc\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 32
    },
    "config/SuperBuild/include/Build_PFloTran.cmake" : {
      "ObjectId" : "b9d37f715c63b08891cf1474103e49c6784b0311",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Build TPL:  PFLOTRAN \n\n# This builds the chemistry component of PFlotran: pflotranchem.\n\n#   \n\n# --- Define all the directories and common external project flags\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add version to the autogenerated tpl_versions.h file\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# PFloTran needs PETSc.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# --- Patch the original code\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# configure the CMake patch step\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# set the patch command\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# --- Define the CMake configure parameters\n\n# Note:\n\n#      CMAKE_CACHE_ARGS requires -DVAR:<TYPE>=VALUE syntax\n\n#      CMAKE_ARGS -DVAR=VALUE OK\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# --- Define the build command\n\n# Build the build script\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Configure the CMake command file\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# --- Define the install command\n\n# Build the install script\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Configure the CMake command file\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# --- Add external project build and tie to the PFLOTRAN build target\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Package dependency target\n\n# Temporary files directory\n\n# Timestamp and log directory\n",
        "Line" : 74,
        "CharPositionInLine" : 65
      },
      "14" : {
        "Text" : "# -- Download and URL definitions\n",
        "Line" : 77,
        "CharPositionInLine" : 20
      },
      "15" : {
        "Text" : "# URL may be a web site OR a local file\n\n# md5sum of the archive file\n\n# file name to store (if not end of URL)\n",
        "Line" : 79,
        "CharPositionInLine" : 65
      },
      "16" : {
        "Text" : "# -- Patch \n",
        "Line" : 82,
        "CharPositionInLine" : 20
      },
      "17" : {
        "Text" : "# -- Configure\n",
        "Line" : 84,
        "CharPositionInLine" : 20
      },
      "18" : {
        "Text" : "# Source directory\n",
        "Line" : 85,
        "CharPositionInLine" : 65
      },
      "19" : {
        "Text" : "# CMAKE_CACHE_ARGS or CMAKE_ARGS => CMake configure\n",
        "Line" : 87,
        "CharPositionInLine" : 65
      },
      "20" : {
        "Text" : "# Ensure uniform build\n",
        "Line" : 88,
        "CharPositionInLine" : 82
      },
      "21" : {
        "Text" : "# -- Build\n\n# BINARY_DIR     ${PFLOTRAN_build_dir}       # Build directory \n",
        "Line" : 91,
        "CharPositionInLine" : 20
      },
      "22" : {
        "Text" : "# $(MAKE) enables parallel builds through make\n\n# Flag for in source builds\n",
        "Line" : 93,
        "CharPositionInLine" : 65
      },
      "23" : {
        "Text" : "# -- Install\n",
        "Line" : 95,
        "CharPositionInLine" : 20
      },
      "24" : {
        "Text" : "# Install directory\n",
        "Line" : 96,
        "CharPositionInLine" : 65
      },
      "25" : {
        "Text" : "# -- Output control\n",
        "Line" : 98,
        "CharPositionInLine" : 20
      },
      "CommentCount" : 26
    },
    "config/SuperBuild/include/Build_ParMetis.cmake" : {
      "ObjectId" : "4a63c88b6154cc14b149308f008341d8fdeb1a37",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Build TPL:  ParMetis \n\n#\n\n# --- Define all the directories and common external project flags\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add version version to the autogenerated tpl_versions.h file\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# --- Define the CMake configure parameters\n\n# Note:\n\n#      CMAKE_CACHE_ARGS requires -DVAR:<TYPE>=VALUE syntax\n\n#      CMAKE_ARGS -DVAR=VALUE OK\n\n# NO WHITESPACE between -D and VAR. Parser blows up otherwise.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# --- Add external project build and tie to the ParMetis build target\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Package dependency target\n\n# Temporary files directory\n\n# Timestamp and log directory\n",
        "Line" : 32,
        "CharPositionInLine" : 70
      },
      "6" : {
        "Text" : "# -- Download and URL definitions\n",
        "Line" : 35,
        "CharPositionInLine" : 20
      },
      "7" : {
        "Text" : "# URL may be a web site OR a local file\n\n# md5sum of the archive file\n",
        "Line" : 37,
        "CharPositionInLine" : 70
      },
      "8" : {
        "Text" : "# -- Configure\n",
        "Line" : 39,
        "CharPositionInLine" : 20
      },
      "9" : {
        "Text" : "# Source directory\n\n# Global definitions from root CMakeList\n",
        "Line" : 40,
        "CharPositionInLine" : 70
      },
      "10" : {
        "Text" : "# Ensure uniform build\n",
        "Line" : 43,
        "CharPositionInLine" : 85
      },
      "11" : {
        "Text" : "# -- Build\n",
        "Line" : 45,
        "CharPositionInLine" : 20
      },
      "12" : {
        "Text" : "# Build directory \n\n# $(MAKE) enables parallel builds through make\n\n# Flag for in source builds\n",
        "Line" : 46,
        "CharPositionInLine" : 69
      },
      "13" : {
        "Text" : "# -- Install\n",
        "Line" : 49,
        "CharPositionInLine" : 20
      },
      "14" : {
        "Text" : "# -- Output control\n",
        "Line" : 51,
        "CharPositionInLine" : 20
      },
      "15" : {
        "Text" : "# --- Useful variables that depend on ZlIB (HDF5, NetCDF)\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# --- set cache (global) variables\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "config/SuperBuild/include/Build_SEACAS.cmake" : {
      "ObjectId" : "da009b19e5d2e9f4db49ea35427fe80cf6b221cd",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Build TPL: SEACAS \n\n#    \n\n# --- Define all the directories and common external project flags\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# SEACAS does not call MPI directly, however HDF5 requires\n\n# MPI and to resolve links we need MPI compile wrappers.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add version version to the autogenerated tpl_versions.h file\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# --- Define the configure parameters\n\n# Compile flags\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# determine library type\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build the NetCDF libraries string\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# --- Define the SEACAS patch step - mainly for nem_slice to be able\n\n# --- to handle columns\n\n#\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# --- Configure the package\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# --- Add external project build and tie to the SEACAS build target\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Package dependency target\n\n# Temporary files directory\n\n# Timestamp and log directory\n",
        "Line" : 129,
        "CharPositionInLine" : 68
      },
      "11" : {
        "Text" : "# -- Download and URL definitions\n",
        "Line" : 132,
        "CharPositionInLine" : 20
      },
      "12" : {
        "Text" : "# Download directory\n\n# URL may be a web site OR a local file\n\n# md5sum of the archive file\n",
        "Line" : 133,
        "CharPositionInLine" : 68
      },
      "13" : {
        "Text" : "# -- Patch\n",
        "Line" : 136,
        "CharPositionInLine" : 20
      },
      "14" : {
        "Text" : "# -- Configure\n",
        "Line" : 138,
        "CharPositionInLine" : 20
      },
      "15" : {
        "Text" : "# Source directory\n",
        "Line" : 139,
        "CharPositionInLine" : 68
      },
      "16" : {
        "Text" : "# Ensure uniform build\n",
        "Line" : 141,
        "CharPositionInLine" : 85
      },
      "17" : {
        "Text" : "# -- Build\n",
        "Line" : 147,
        "CharPositionInLine" : 20
      },
      "18" : {
        "Text" : "# Build directory \n\n# $(MAKE) enables parallel builds through make\n\n# Flag for in source builds\n",
        "Line" : 148,
        "CharPositionInLine" : 67
      },
      "19" : {
        "Text" : "# -- Install\n",
        "Line" : 151,
        "CharPositionInLine" : 20
      },
      "20" : {
        "Text" : "# Install directory, NOT in the usual place!\n",
        "Line" : 152,
        "CharPositionInLine" : 67
      },
      "21" : {
        "Text" : "# -- Output control\n",
        "Line" : 153,
        "CharPositionInLine" : 20
      },
      "22" : {
        "Text" : "# --- Useful variables for other packages that depend on SEACAS\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "config/SuperBuild/include/Build_Silo.cmake" : {
      "ObjectId" : "1af8d73713583d2b26ce05250113b82697ab9851",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Build TPL:  Silo\n\n#    \n\n# --- Define all the directories and common external project flags\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add Silo version to the autogenerated tpl_versions.h file\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# --- Define configure parameters\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Use the common cflags, cxxflags\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Silo install directory\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Silo shared libraries\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Force executables to built with all static libs.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Silo CMAKE_BUILD_TYPE=(Debug|Release)i\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# --- Set the name of the patch \n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# --- Configure the CMake patch step\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# --- Set the patch command\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# --- Add external project build \n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Package dependency target\n\n# Temporary files directory\n\n# Timestamp and log directory\n",
        "Line" : 81,
        "CharPositionInLine" : 59
      },
      "14" : {
        "Text" : "# -- Download and URL definitions\n",
        "Line" : 84,
        "CharPositionInLine" : 20
      },
      "15" : {
        "Text" : "# URL may be a web site OR a local file\n\n# md5sum of the archive file\n",
        "Line" : 86,
        "CharPositionInLine" : 59
      },
      "16" : {
        "Text" : "# -- Patch \n",
        "Line" : 88,
        "CharPositionInLine" : 20
      },
      "17" : {
        "Text" : "# -- Configure\n",
        "Line" : 90,
        "CharPositionInLine" : 20
      },
      "18" : {
        "Text" : "# Source directory\n",
        "Line" : 91,
        "CharPositionInLine" : 59
      },
      "19" : {
        "Text" : "# -- Build\n",
        "Line" : 106,
        "CharPositionInLine" : 20
      },
      "20" : {
        "Text" : "# Build directory \n",
        "Line" : 107,
        "CharPositionInLine" : 66
      },
      "21" : {
        "Text" : "# Run the CMake script to build\n",
        "Line" : 108,
        "CharPositionInLine" : 79
      },
      "22" : {
        "Text" : "# Flag for in source builds\n",
        "Line" : 109,
        "CharPositionInLine" : 66
      },
      "23" : {
        "Text" : "# -- Install\n",
        "Line" : 110,
        "CharPositionInLine" : 20
      },
      "24" : {
        "Text" : "# Install directory, NOT in the usual directory\n",
        "Line" : 111,
        "CharPositionInLine" : 59
      },
      "25" : {
        "Text" : "# Install directory, NOT in the usual directory\n",
        "Line" : 112,
        "CharPositionInLine" : 82
      },
      "26" : {
        "Text" : "# -- Output control\n",
        "Line" : 113,
        "CharPositionInLine" : 20
      },
      "27" : {
        "Text" : "# --- Useful variables for other packages that depend on Silo\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 28
    },
    "config/SuperBuild/include/Build_Spack.cmake" : {
      "ObjectId" : "f82962280f007fa4d9c62629449fa5f1b8eec0c3",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  -*- mode: cmake -*-\n\n#\n\n# Build tool as a TPL: Spack\n\n#  \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --- Define all the directories and common external project flags\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#DOWNLOAD_DIR ${TPL_INSTALL_PREFIX}\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#BINARY_DIR ${TPL_INSTALL_PREFIX}/spack\n",
        "Line" : 27,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#INSTALL_DIR ${TPL_INSTALL_PREFIX}/spack\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#ExternalProject_add_step(Spack CLONE_CD\n\n#                         COMMAND cd ${TPL_INSTALL_PREFIX}\n\n#\t\t\t DEPENDERS download\n\n#)\n\n#ExternalProject_add_step(Spack CHECKOUT_CD\n\n#                         COMMAND cd ${TPL_INSTALL_PREFIX}/spack\n\n#\t\t\t DEPENDERS build\n\n#)\n\n#ExternalProject_add_step(Spack PULL_CD\n\n#                         COMMAND cd ${TPL_INSTALL_PREFIX}/spack\n\n#\t\t\t DEPENDERS install\n\n#)\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#set (SPACK_BINARY ${TPL_INSTALL_PREFIX}/spack/bin/spack)\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# clone the repo\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# checkout the correct branch\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# do a git pull\n",
        "Line" : 91,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 10
    },
    "config/SuperBuild/include/Build_SuperLU.cmake" : {
      "ObjectId" : "b3bbedee3253943ca485e8ce40742badb5478eac",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Build TPL:  SuperLU\n\n#   \n\n# --- Define all the directories and common external project flags\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add version version to the autogenerated tpl_versions.h file\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# --- Patch the original code\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# configure the CMake patch step\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# set the patch command\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# --- Define the arguments passed to CMake.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# --- Add external project build and tie to the SuperLU build target\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Package dependency target\n\n# Temporary files directory\n\n# Timestamp and log directory\n",
        "Line" : 37,
        "CharPositionInLine" : 63
      },
      "8" : {
        "Text" : "# -- Download and URL definitions\n",
        "Line" : 40,
        "CharPositionInLine" : 20
      },
      "9" : {
        "Text" : "# Download directory\n\n# URL may be a web site OR a local file\n\n# md5sum of the archive file\n\n# file name to store (if not end of URL)\n",
        "Line" : 41,
        "CharPositionInLine" : 63
      },
      "10" : {
        "Text" : "# -- Patch \n",
        "Line" : 45,
        "CharPositionInLine" : 20
      },
      "11" : {
        "Text" : "# Mods to source\n",
        "Line" : 46,
        "CharPositionInLine" : 63
      },
      "12" : {
        "Text" : "# -- Configure\n",
        "Line" : 47,
        "CharPositionInLine" : 20
      },
      "13" : {
        "Text" : "# Source directory\n\n# CMAKE_CACHE_ARGS or CMAKE_ARGS => CMake configure\n",
        "Line" : 48,
        "CharPositionInLine" : 63
      },
      "14" : {
        "Text" : "# Ensure uniform build\n",
        "Line" : 50,
        "CharPositionInLine" : 82
      },
      "15" : {
        "Text" : "# -- Build\n",
        "Line" : 54,
        "CharPositionInLine" : 20
      },
      "16" : {
        "Text" : "# Build directory \n",
        "Line" : 55,
        "CharPositionInLine" : 63
      },
      "17" : {
        "Text" : "# -- Install\n",
        "Line" : 57,
        "CharPositionInLine" : 20
      },
      "18" : {
        "Text" : "# Install directory\n",
        "Line" : 58,
        "CharPositionInLine" : 63
      },
      "19" : {
        "Text" : "# -- Output control\n",
        "Line" : 60,
        "CharPositionInLine" : 20
      },
      "20" : {
        "Text" : "# --- set cache (global) variables\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "config/SuperBuild/include/Build_SuperLUDist.cmake" : {
      "ObjectId" : "86f68ce6513dc78260af44fe6656fb72e60fb906",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Build TPL:  SuperLUDist\n\n#   \n\n# --- Define all the directories and common external project flags\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add version version to the autogenerated tpl_versions.h file\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# --- Patch the original code\n\n#set(SuperLUDist_patch_file superludist-missingpatch)\n\n#set(SuperLUDist_sh_patch ${SuperLUDist_prefix_dir}/superluidist-patch-step.sh)\n\n#configure_file(${SuperBuild_TEMPLATE_FILES_DIR}/superludist-patch-step.sh.in\n\n#               ${SuperLUDist_sh_patch}\n\n#               @ONLY)\n\n# configure the CMake patch step\n\n#set(SuperLUDist_cmake_patch ${SuperLUDist_prefix_dir}/superluidist-patch-step.cmake)\n\n#configure_file(${SuperBuild_TEMPLATE_FILES_DIR}/superludist-patch-step.cmake.in\n\n#               ${SuperLUDist_cmake_patch}\n\n#               @ONLY)\n\n# set the patch command\n\n#set(SuperLUDist_PATCH_COMMAND ${CMAKE_COMMAND} -P ${SuperLUDist_cmake_patch})\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# --- Define the arguments passed to CMake.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# --- Location of TPLs\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# --- Add external project build and tie to the SuperLU build target\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Package dependency target\n\n# Temporary files directory\n\n# Timestamp and log directory\n",
        "Line" : 44,
        "CharPositionInLine" : 63
      },
      "7" : {
        "Text" : "# -- Download and URL definitions\n",
        "Line" : 47,
        "CharPositionInLine" : 20
      },
      "8" : {
        "Text" : "# Download directory\n\n# URL may be a web site OR a local file\n\n# md5sum of the archive file\n\n# file name to store (if not end of URL)\n",
        "Line" : 48,
        "CharPositionInLine" : 63
      },
      "9" : {
        "Text" : "# -- Patch\n\n# PATCH_COMMAND ${SuperLUDist_PATCH_COMMAND}  # Mods to source\n\n# -- Configure\n",
        "Line" : 52,
        "CharPositionInLine" : 20
      },
      "10" : {
        "Text" : "# Use the alternate list separator\n\n# Source directory\n\n# CMAKE_CACHE_ARGS or CMAKE_ARGS => CMake configure\n",
        "Line" : 55,
        "CharPositionInLine" : 63
      },
      "11" : {
        "Text" : "# Ensure uniform build\n",
        "Line" : 59,
        "CharPositionInLine" : 82
      },
      "12" : {
        "Text" : "# Workaround to avoid OpenMP\n",
        "Line" : 66,
        "CharPositionInLine" : 82
      },
      "13" : {
        "Text" : "# -- Build\n",
        "Line" : 69,
        "CharPositionInLine" : 20
      },
      "14" : {
        "Text" : "# Build directory \n",
        "Line" : 70,
        "CharPositionInLine" : 63
      },
      "15" : {
        "Text" : "# -- Install\n",
        "Line" : 72,
        "CharPositionInLine" : 20
      },
      "16" : {
        "Text" : "# Install directory\n",
        "Line" : 73,
        "CharPositionInLine" : 63
      },
      "17" : {
        "Text" : "# -- Output control\n",
        "Line" : 75,
        "CharPositionInLine" : 20
      },
      "18" : {
        "Text" : "# --- set cache (global) variables\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "config/SuperBuild/include/Build_Trilinos.cmake" : {
      "ObjectId" : "1fdad7386ad83fb2d52c78029a7a1508fbefad5d",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Build TPL: Trilinos\n\n#    \n\n# --- Define all the directories and common external project flags\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add version version to the autogenerated tpl_versions.h file\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# --- Define the configuration parameters   \n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#  - Trilinos Package Configuration\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#if(Trilinos_Build_Config_File)\n\n#  message(STATUS \"Including Trilinos build configuration file ${Trilinos_Build_Config_File}\")\n\n#  if ( NOT EXISTS ${Trilinos_Build_Config_File} )\n\n#    message(FATAL_ERROR \"File ${Trilinos_Build_Config_File} does not exist.\")\n\n#  endif()\n\n#  include(${Trilinos_Build_Config_File})\n\n#endif()\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# List of packages enabled in the Trilinos build\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Generate the Trilinos Package CMake Arguments\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add support of parallel LU solvers\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Build PyTrilinos if shared\n\n# if (BUILD_SHARED_LIBS)\n\n#   list(APPEND Trilinos_CMAKE_PACKAGE_ARGS \"-DTrilinos_ENABLE_PyTrilinos:BOOL=ON\")\n\n#endif()\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Trilinos 11.0.3 has some C++ compile errors in it that we can sidestep by \n\n# defining HAVE_TEUCHOS_ARRAY_BOUNDSCHECK.\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Disable Pamgen ( doesn't compile with gnu++14 standard )\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#  - Trilinos TPL Configuration\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# MPI\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Pass the following MPI arguments to Trilinos if they are set \n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# BLAS\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# LAPACK\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Boost\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# NetCDF\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# HYPRE\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#  - Addtional Trilinos CMake Arguments\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#message(DEBUG \": Trilinos_CMAKE_EXTRA_ARGS = ${Trilinos_CMAKE_EXTRA_ARGS}\")\n",
        "Line" : 150,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "#message(DEBUG \": Trilinos_CMAKE_EXTRA_ARGS = ${Trilinos_CMAKE_EXTRA_ARGS}\")\n",
        "Line" : 156,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "#  - Add CMake configuration file\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#  - Final Trilinos CMake Arguments \n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#  --- Define the Trilinos patch step\n\n#\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Trilinos patches\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Trilinos needs a patch for GNU versions > 4.6\n\n#LPRITCHif ( CMAKE_CXX_COMPILER_VERSION )\n\n#LPRITCH  if ( ${CMAKE_CXX_COMPILER_ID} STREQUAL \"GNU\" )\n\n#LPRITCH    if ( ${CMAKE_CXX_COMPILER_VERSION} VERSION_LESS \"4.6\" )\n\n#LPRITCH      set(ENABLE_Trilinos_Patch OFF)\n\n#LPRITCH    else()\n\n#LPRITCH      message(STATUS \"Trilinos requires a patch when using\"\n\n#LPRITCH                     \" GNU ${CMAKE_CXX_COMPILER_VERSION}\")\n\n#LPRITCH      set(ENABLE_Trilinos_Patch ON)\n\n#LPRITCH    endif()\n\n#LPRITCH  endif()\n\n#LPRITCHendif()  \n\n#LPRITCH\n\n#LPRITCHset(Trilinos_PATCH_COMMAND)\n\n#LPRITCHif (ENABLE_Trilinos_Patch)\n\n#LPRITCH    set(Trilinos_patch_file)\n\n#LPRITCH    # Set the patch file name\n\n#LPRITCH    if(CMAKE_CXX_COMPILER_VERSION)\n\n#LPRITCH      if(\"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"GNU\")\n\n#LPRITCH        if ( \"${CMAKE_CXX_COMPILER_VERSION}\" VERSION_LESS \"4.6\" )\n\n#LPRITCH          message(FATAL_ERROR \"ENABLE_Trilinos_Patch is ON, however no patch file exists\"\n\n#LPRITCH                              \" for version ${CMAKE_CXX_COMPILER_VERSION}.\")\n\n#LPRITCH        elseif( \"${CMAKE_CXX_COMPILER_VERSION}\" VERSION_LESS \"4.7\" )\n\n#LPRITCH          set(Trilinos_patch_file trilinos-${Trilinos_VERSION}-gcc46.patch)\n\n#LPRITCH        elseif ( \"${CMAKE_CXX_COMPILER_VERSION}\" VERSION_LESS \"4.8\" )\n\n#LPRITCH          set(Trilinos_patch_file trilinos-${Trilinos_VERSION}-gcc47.patch)\n\n#LPRITCH        else()\n\n#LPRITCH          message(FATAL_ERROR \"ENABLE_Trilinos_Patch is ON, however no patch file exists\"\n\n#LPRITCH                             \" for version ${CMAKE_CXX_COMPILER_VERSION}.\")\n\n#LPRITCH        endif()\n\n#LPRITCH      endif()\n\n#LPRITCH    endif()\n\n#LPRITCH\n\n#LPRITCH    #print_variable(Trilinos_patch_file)\n\n#LPRITCH    if(Trilinos_patch_file)\n\n#LPRITCH       configure_file(${SuperBuild_TEMPLATE_FILES_DIR}/trilinos-patch-step.sh.in\n\n#LPRITCH                      ${Trilinos_prefix_dir}/trilinos-patch-step.sh\n\n#LPRITCH                      @ONLY)\n\n#LPRITCH       set(Trilinos_PATCH_COMMAND sh ${Trilinos_prefix_dir}/trilinos-patch-step.sh)\n\n#LPRITCH    else()\n\n#LPRITCH       message(WARNING \"ENABLE_Trilinos_Patch is ON but no patch file found for \"\n\n#LPRITCH                       \"${CMAKE_CXX_COMPILER_ID} ${CMAKE_CXX_COMPILER_VERSION} \"\n\n#LPRITCH                       \"Will not patch Trilinos.\")\n\n#LPRITCH    endif()                   \n\n#LPRITCH                      \n\n#LPRITCHendif()  \n\n#print_variable(Trilinos_PATCH_COMMAND)\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# --- Define the Trilinos location\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# --- Add external project build and tie to the Trilinos build target\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Package dependency target\n\n# Temporary files directory\n\n# Timestamp and log directory\n",
        "Line" : 247,
        "CharPositionInLine" : 70
      },
      "31" : {
        "Text" : "# -- Download and URL definitions\n",
        "Line" : 250,
        "CharPositionInLine" : 20
      },
      "32" : {
        "Text" : "# Download directory\n\n# URL may be a web site OR a local file\n\n# md5sum of the archive file\n",
        "Line" : 251,
        "CharPositionInLine" : 70
      },
      "33" : {
        "Text" : "# -- Patch\n",
        "Line" : 254,
        "CharPositionInLine" : 20
      },
      "34" : {
        "Text" : "# -- Configure\n",
        "Line" : 256,
        "CharPositionInLine" : 20
      },
      "35" : {
        "Text" : "# Source directory\n",
        "Line" : 257,
        "CharPositionInLine" : 67
      },
      "36" : {
        "Text" : "# Ensure uniform build\n",
        "Line" : 260,
        "CharPositionInLine" : 86
      },
      "37" : {
        "Text" : "# -- Build\n",
        "Line" : 271,
        "CharPositionInLine" : 20
      },
      "38" : {
        "Text" : "# Build directory \n\n# $(MAKE) enables parallel builds through make\n\n# Flag for in source builds\n",
        "Line" : 272,
        "CharPositionInLine" : 66
      },
      "39" : {
        "Text" : "# -- Install\n",
        "Line" : 275,
        "CharPositionInLine" : 20
      },
      "40" : {
        "Text" : "# Install directory\n",
        "Line" : 276,
        "CharPositionInLine" : 66
      },
      "41" : {
        "Text" : "# -- Output control\n",
        "Line" : 277,
        "CharPositionInLine" : 20
      },
      "42" : {
        "Text" : "# --- Useful variables for packages that depends on Trilinos\n",
        "Line" : 281,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 43
    },
    "config/SuperBuild/include/Build_UnitTest.cmake" : {
      "ObjectId" : "d4518b00e00969ac8e27e0b3babf75cc8fe95adb",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Build TPL: UnitTest\n\n# \n\n# --- Define all the directories and common external project flags\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add version version to the autogenerated tpl_versions.h file\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# --- define the configuration parameters\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Pass the following MPI arguments to unittest\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# build type\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#  - Add CMake configuration file\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# --- Patch the original code\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# configure the CMake patch step\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# set the patch command\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# --- Add external project build \n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Package dependency target\n\n# Temporary files directory\n\n# Timestamp and log directory\n",
        "Line" : 72,
        "CharPositionInLine" : 67
      },
      "12" : {
        "Text" : "# -- Download and URL definitions\n",
        "Line" : 75,
        "CharPositionInLine" : 20
      },
      "13" : {
        "Text" : "# URL may be a web site OR a local file\n\n# md5sum of the archive file\n\n# Mods to source\n",
        "Line" : 77,
        "CharPositionInLine" : 67
      },
      "14" : {
        "Text" : "# -- Configure\n",
        "Line" : 80,
        "CharPositionInLine" : 20
      },
      "15" : {
        "Text" : "# Defining forces CMake to mkdir SOURCE_DIR\n",
        "Line" : 81,
        "CharPositionInLine" : 67
      },
      "16" : {
        "Text" : "# Global definitions from root CMakeList\n",
        "Line" : 83,
        "CharPositionInLine" : 67
      },
      "17" : {
        "Text" : "# Ensure uniform build\n",
        "Line" : 87,
        "CharPositionInLine" : 85
      },
      "18" : {
        "Text" : "# -- Build\n",
        "Line" : 93,
        "CharPositionInLine" : 20
      },
      "19" : {
        "Text" : "# Run make in build directory $(MAKE) enables parallel build\n\n# Define the build directory\n\n# Flag in/out source build\n",
        "Line" : 94,
        "CharPositionInLine" : 68
      },
      "20" : {
        "Text" : "# -- Install\n",
        "Line" : 97,
        "CharPositionInLine" : 20
      },
      "21" : {
        "Text" : "# Install directory\n",
        "Line" : 98,
        "CharPositionInLine" : 68
      },
      "22" : {
        "Text" : "# -- Output control\n",
        "Line" : 99,
        "CharPositionInLine" : 20
      },
      "CommentCount" : 23
    },
    "config/SuperBuild/include/Build_XERCES.cmake" : {
      "ObjectId" : "18dda8d47b0212732266763a8cb08444c9a1885a",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  -*- mode: cmake -*-\n\n#\n\n# Build TPL: XERCES \n\n#  \n\n# --- Define all the directories and common external project flags\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add version version to the autogenerated tpl_versions.h file\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# --- Patch original code\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# configure the CMake patch step\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# -- Set Xerces configuration options\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Force OSX to use its CoreServices Framework\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# --- Add external project build and tie to the ZLIB build target\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Package dependency target\n\n# Temporary files directory\n\n# Timestamp and log directory\n",
        "Line" : 44,
        "CharPositionInLine" : 63
      },
      "8" : {
        "Text" : "# -- Download and URL definitions\n",
        "Line" : 47,
        "CharPositionInLine" : 20
      },
      "9" : {
        "Text" : "# URL may be a web site OR a local file\n\n# md5sum of the archive file\n",
        "Line" : 49,
        "CharPositionInLine" : 63
      },
      "10" : {
        "Text" : "# -- Configure\n",
        "Line" : 52,
        "CharPositionInLine" : 20
      },
      "11" : {
        "Text" : "# Source directory\n\n# CMAKE_CACHE_ARGS or CMAKE_ARGS => CMake configure\n",
        "Line" : 53,
        "CharPositionInLine" : 63
      },
      "12" : {
        "Text" : "# Ensure uniform build\n",
        "Line" : 56,
        "CharPositionInLine" : 81
      },
      "13" : {
        "Text" : "# -- Build\n",
        "Line" : 60,
        "CharPositionInLine" : 20
      },
      "14" : {
        "Text" : "# Build directory \n",
        "Line" : 61,
        "CharPositionInLine" : 63
      },
      "15" : {
        "Text" : "# Flag for in source builds\n",
        "Line" : 63,
        "CharPositionInLine" : 63
      },
      "16" : {
        "Text" : "# -- Install\n",
        "Line" : 64,
        "CharPositionInLine" : 20
      },
      "17" : {
        "Text" : "# Install directory\n",
        "Line" : 65,
        "CharPositionInLine" : 63
      },
      "18" : {
        "Text" : "# -- Output control\n",
        "Line" : 66,
        "CharPositionInLine" : 20
      },
      "CommentCount" : 19
    },
    "config/SuperBuild/include/Build_XERCES_Spack.cmake" : {
      "ObjectId" : "25850c5f655e8906d32b278a2c7320bbc3eefa4c",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  -*- mode: cmake -*-\n\n#\n\n# Build TPL: XERCES using Spack\n\n#  \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -- Define all the directories and common external project flags\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Xerces\n",
        "Line" : 9,
        "CharPositionInLine" : 43
      },
      "3" : {
        "Text" : "# The following 2 lines are only here because CMake will not allow\n\n# a build without at least the first three variables defined.\n\n# However, they serve no real purpose for this particular build.\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "config/SuperBuild/include/Build_xSDK.cmake" : {
      "ObjectId" : "8feb2b6bad6774c006dca900c2772fd6e74014a0",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  -*- mode: cmake -*-\n\n#\n\n# Build TPL: XSDK using Spack\n\n#  \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --- Define all the directories and common external project flags\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add version version to the autogenerated tpl_versions.h file\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The following 2 lines are only here because CMake will not allow\n\n# a build without at least these two variables defined (and BUILD_COMMAND).\n\n# However, they serve no real purpose for this particular build.\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Should clone spack probably put spack in list of TPLs?\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "config/SuperBuild/include/Build_zlib.cmake" : {
      "ObjectId" : "25179bfe5a29c7ea799adb093d30cc0b14889147",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Build TPL:  ZLIB \n\n#   \n\n# --- Define all the directories and common external project flags\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add version version to the autogenerated tpl_versions.h file\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# --- Define the CMake configure parameters\n\n# Note:\n\n#      CMAKE_CACHE_ARGS requires -DVAR:<TYPE>=VALUE syntax\n\n#      CMAKE_ARGS -DVAR=VALUE OK\n\n# NO WHITESPACE between -D and VAR. Parser blows up otherwise.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# --- Add external project build and tie to the ZLIB build target\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Package dependency target\n\n# Temporary files directory\n\n# Timestamp and log directory\n",
        "Line" : 28,
        "CharPositionInLine" : 66
      },
      "6" : {
        "Text" : "# -- Download and URL definitions\n",
        "Line" : 31,
        "CharPositionInLine" : 20
      },
      "7" : {
        "Text" : "# Download directory\n\n# URL may be a web site OR a local file\n\n# md5sum of the archive file\n",
        "Line" : 32,
        "CharPositionInLine" : 66
      },
      "8" : {
        "Text" : "# -- Configure\n",
        "Line" : 35,
        "CharPositionInLine" : 20
      },
      "9" : {
        "Text" : "# Global definitions from root CMakeList\n",
        "Line" : 37,
        "CharPositionInLine" : 66
      },
      "10" : {
        "Text" : "# Ensure uniform build\n",
        "Line" : 39,
        "CharPositionInLine" : 85
      },
      "11" : {
        "Text" : "# -- Build\n",
        "Line" : 41,
        "CharPositionInLine" : 20
      },
      "12" : {
        "Text" : "# Build directory \n\n# $(MAKE) enables parallel builds through make\n\n# Flag for in source builds\n",
        "Line" : 42,
        "CharPositionInLine" : 66
      },
      "13" : {
        "Text" : "# -- Install\n",
        "Line" : 45,
        "CharPositionInLine" : 20
      },
      "14" : {
        "Text" : "# Install directory\n",
        "Line" : 46,
        "CharPositionInLine" : 66
      },
      "15" : {
        "Text" : "# -- Output control\n",
        "Line" : 47,
        "CharPositionInLine" : 20
      },
      "16" : {
        "Text" : "# --- Useful variables that depend on ZlIB (HDF5, NetCDF)\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "config/SuperBuild/include/trilinos-blas-libsci-gnu.cmake" : {
      "ObjectId" : "049f83fe9f99a72c0e1071c049f634cf1a19c42d",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ############################################################################ #\n\n#                                                                              #\n\n# Trilinos Build Configuration File                                            #\n\n#                                                                              #\n\n# Defining the LAPACK/BLAS libraries from LibSCI                               #\n\n#                                                                              #\n\n# ############################################################################ #\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "config/SuperBuild/include/trilinos-blas-libsci-intel.cmake" : {
      "ObjectId" : "005f20d78e4185ab888a270ce9ca65fa772ac5db",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ############################################################################ #\n\n#                                                                              #\n\n# Trilinos Build Configuration File                                            #\n\n#                                                                              #\n\n# Defining the LAPACK/BLAS libraries from LibSCI                               #\n\n#                                                                              #\n\n# ############################################################################ #\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "config/ToolsBuild/CMakeLists.txt" : {
      "ObjectId" : "9e6ecb469c1478b8b90f9648acca646ed78fe01b",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Optional ToolsBuild\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Set minimum required version of CMake\n\n# NB: Must go before project() call.\n\n#\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Language standard\n\n# NB: Seems like a good idea to have this before project() call.\n\n#\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ############################################################################ #\n\n# Define project name (ToolsBuild_SOURCE_DIR and ToolsBuild_BINARY_DIR)\n\n# ############################################################################ #\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ############################################################################ #\n\n# Compiler Definition Warnings\n\n# ############################################################################ #\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#if (NOT SPACK_BINARY)\n\n#  message(WARNING \"Spack binary not defined. Disabling spack builds.\")\n\n#endif()\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ############################################################################ #\n\n# Define Amanzi directories \n\n# ############################################################################ #\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# ############################################################################ #\n\n# Update the CMake module path\n\n# ############################################################################ #\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# ############################################################################ #\n\n# Location of the Build_* files and template files\n\n# ############################################################################ #\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ############################################################################ #\n\n# Compiler checks\n\n# ############################################################################ #\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ############################################################################ #\n\n# Build options\n\n# ############################################################################ #\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Download directory \n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Disable external web downloads\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Tools install location\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# also set the CMAKE_INSTALL_PREFIX accordingly\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# ############################################################################ #\n\n# Set common build compiler flags, build types and directories\n\n# ############################################################################ #\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# CMake compiler settings for any package built with CMake\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C language flags\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ language flags \n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Fortran language flags    \n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Link flags\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Common compiler flags to ensure a uniform build in projects that do not use CMake\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Common link flags for projects that do not use CMake\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# ############################################################################ #\n\n# Begin MPI builds \n\n# ############################################################################ #\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# --- Add .NOTPARALLEL target in order to force the top level make to \n\n#     execute serially\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Create configure, build, install and test targets for each tool\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Include the CMake module ExternalProject\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Include the macro that defines uniform build, install and Add_ExternalProject args\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# MPI \n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ############################################################################ #\n\n#  Final steps\n\n# ############################################################################ #\n\n#  --- Create a CMake cache script\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 30
    },
    "config/ToolsBuild/cmake/CheckDownload.cmake" : {
      "ObjectId" : "5c04125081f009aba7d2435798f727a57f7c376c",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# CHECK_DOWNLOAD\n\n#\n\n# USAGE:\n\n#  CHECK_DOWNLOAD(TEST_URL web-address\n\n#                 TEST_FILE file\n\n#                 TIMEOUT seconds)\n\n#\n\n# Attempt to download file from web-address using the system curl binary.\n\n# Default TIMEOUT for this command is 60 seconds. If download fails, throws\n\n# fatal error. \n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Parse the arguments\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Default timeout is 60 seconds\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Need a URL AND FILE name\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "config/ToolsBuild/cmake/DefineExternalProjectArgs.cmake" : {
      "ObjectId" : "57f21f372f747c8d18a0754a0946477562a37f12",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ############################################################################ #\n\n#                                                                              #\n\n#  DEFINE_EXTERNAL_PROJECT_ARGS(<PACK_NAME>                                    # \n\n#                                [ TARGET target-name ]                        #\n\n#                                [ BUILD_IN_SOURCE ]                           #\n\n#                                [ DEPENDS pack1 pack2 pack3 ]                 #\n\n#                              )                                               #\n\n#                                                                              #\n\n#  A macro that defines common arguments for the AddExternalProject function   #\n\n#  This macro provides an organized build structure.                           #\n\n#                                                                              #\n\n# ############################################################################ #\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --- Parse the arguments\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# --- Define the build target name\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# --  Define the directories for download, build, install and timestamps\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Will use lower case for directory names\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Default is to build out of source, but some packages can not do that\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Download from the web unless DISABLE_EXTERNAL_DOWNLOADS is TRUE\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# --- Set additional arguments\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Log all steps, this keeps the STDOUT/STDERR tidy.\n",
        "Line" : 66,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Define the package dependencies \t\t\t\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Set the build in source flag\n",
        "Line" : 86,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 11
    },
    "config/ToolsBuild/include/Build_MPICH.cmake" : {
      "ObjectId" : "a0cfc1f5baa35fa97337019f688a82336b968ae1",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Build TPL: MPICH \n\n# \n\n# --- Define all the directories and common external project flags\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Build compiler *FLAGS strings. Pick up the CMAKE_BUILD_TYPE flags\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# --- Add RPATH to the link flags for the compiler wrappers\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# --- Add external project build and tie to the OpenMPI build target\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Package dependency target\n\n# Temporary files directory\n\n# Timestamp and log directory\n",
        "Line" : 27,
        "CharPositionInLine" : 59
      },
      "6" : {
        "Text" : "# -- Download and URL definitions\n",
        "Line" : 30,
        "CharPositionInLine" : 20
      },
      "7" : {
        "Text" : "# URL may be a web site OR a local file\n\n# md5sum of the archive file\n",
        "Line" : 32,
        "CharPositionInLine" : 59
      },
      "8" : {
        "Text" : "# -- Configure\n",
        "Line" : 34,
        "CharPositionInLine" : 20
      },
      "9" : {
        "Text" : "# -- Build\n",
        "Line" : 47,
        "CharPositionInLine" : 20
      },
      "10" : {
        "Text" : "# Build directory \n",
        "Line" : 48,
        "CharPositionInLine" : 63
      },
      "11" : {
        "Text" : "# $(MAKE) enables parallel builds through make\n",
        "Line" : 49,
        "CharPositionInLine" : 69
      },
      "12" : {
        "Text" : "# Flag for in source builds\n",
        "Line" : 50,
        "CharPositionInLine" : 63
      },
      "13" : {
        "Text" : "# -- Install\n",
        "Line" : 51,
        "CharPositionInLine" : 20
      },
      "14" : {
        "Text" : "# -- Output control\n",
        "Line" : 53,
        "CharPositionInLine" : 20
      },
      "15" : {
        "Text" : "# --- Define variables pointing to compiler wrappers and parallel run commond\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "config/ToolsBuild/include/Build_OpenMPI.cmake" : {
      "ObjectId" : "8f43fea426aadb9c406243c6c84ad9c255e9587a",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Build TPL: OpenMPI \n\n# \n\n# --- Define all the directories and common external project flags\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Build compiler *FLAGS strings. Pick up the CMAKE_BUILD_TYPE flags\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# --- Add RPATH to the link flags for the compiler wrappers\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# --- Add external project build and tie to the OpenMPI build target\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Package dependency target\n\n# Temporary files directory\n\n# Timestamp and log directory\n",
        "Line" : 22,
        "CharPositionInLine" : 61
      },
      "6" : {
        "Text" : "# -- Download and URL definitions\n",
        "Line" : 25,
        "CharPositionInLine" : 20
      },
      "7" : {
        "Text" : "# URL may be a web site OR a local file\n\n# md5sum of the archive file\n",
        "Line" : 27,
        "CharPositionInLine" : 61
      },
      "8" : {
        "Text" : "# -- Configure\n",
        "Line" : 29,
        "CharPositionInLine" : 20
      },
      "9" : {
        "Text" : "# -- Build\n",
        "Line" : 44,
        "CharPositionInLine" : 20
      },
      "10" : {
        "Text" : "# Build directory \n",
        "Line" : 45,
        "CharPositionInLine" : 65
      },
      "11" : {
        "Text" : "# $(MAKE) enables parallel builds through make\n",
        "Line" : 46,
        "CharPositionInLine" : 69
      },
      "12" : {
        "Text" : "# Flag for in source builds\n",
        "Line" : 47,
        "CharPositionInLine" : 65
      },
      "13" : {
        "Text" : "# -- Install\n",
        "Line" : 48,
        "CharPositionInLine" : 20
      },
      "14" : {
        "Text" : "# -- Output control\n",
        "Line" : 50,
        "CharPositionInLine" : 20
      },
      "15" : {
        "Text" : "# --- Define variables pointing to compiler wrappers and parallel run commond\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "config/examples/conejo-atlas-config.cmake" : {
      "ObjectId" : "d88f629379d74c6f87ab498f82fd9ed5e8c27e6a",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ############################################################################ #\n\n#\n\n# Third Party Library (TPL Build)\n\n#  CMake configuration file\n\n#\n\n# Machine: Conejo (LANL)\n\n# OS: Linux Red Hat EL5 x86_64\n\n# Compiler: Intel 11.1\n\n# MPI: OpenMPI 1.4.3\n\n#\n\n# Usage:\n\n#   (1) Load the default Intel, OpenMPI and ATLAS modules\n\n#        module load intel openmpi-intel atlas\n\n#   (2) Configure \n\n#       cmake -C <root path>/conejo-config.cmake <root directory amanzi>/amanzi/config/SuperBuild\n\n# \n\n# ############################################################################ #\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --- Machine specific directories\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# --- Set the build type Release == minimal -O3 optimization\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# --- Set the compilers\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# --- Set test suite behavior\n\n# Like many clusters, parallel runs are not allowed on login/compiler nodes.\n\n# So we explicitly define the MPI executable and prevent the test suite from\n\n# searching and finding the incorrect binary.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# --- Download behavior\n\n# Conejo does not allow external downloads\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# --- LAPACK/BLAS Definitions\n\n# The LANL support recommends the following link flags when linking against ATLAS\n\n# -L/usr/lib64 -lgfortran -L${ATLAS_ROOT}/lib -llapack -lf77blas -lcblas -latlas\n\n# Since the gfortran library is shared, I left the -L,-l flags in the library string.\n\n# The remaining libraries are all static, so I used full paths there. \n\n# Need the gfotran library to link to the BLAS libraries.\n\n# We use the LAPACK built with ATLAS, thus we need the cblas library\n\n# to link correctly to lapack. The ';' is the list delimiter in CMake. \n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# --- Mesh Capabilities\n\n# Structured mesh code does not compile with Intel Fortran \n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# --- TPL Installation location\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "config/examples/conejo-gnu-acml-int32-config.cmake" : {
      "ObjectId" : "42a39dbbcbe3ce73b3f6278e4d5652c91aa866da",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ############################################################################ #\n\n#\n\n# Third Party Library (TPL Build)\n\n#  CMake configuration file\n\n#\n\n# Machine: Conejo (LANL)\n\n# OS: Linux Red Hat EL5 x86_64\n\n# Compiler: GCC 4.5.2 with ACML 32 bit ints\n\n# MPI: OpenMPI 1.4.3\n\n#\n\n# Usage:\n\n#   (1) Load the default GNU, OpenMPI and ACML modules\n\n#        module load gcc openmpi-gcc acml-gcc\n\n#   (2) Configure \n\n#       cmake -C <root path>/conejo-gnu-acml-int32-config.cmake <root directory amanzi>/amanzi/config/SuperBuild\n\n# \n\n# ############################################################################ #\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --- Machine specific directories\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#set(AMCL_ROOT \"/opt/ACML/acml-4.3.0/ifort64/lib\" CACHE PATH \"ACML installation location\")\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# --- Set the build type Release == minimal -O3 optimization\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# --- Set the compilers\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# --- Set test suite behavior\n\n# Like many clusters, parallel runs are not allowed on login/compiler nodes.\n\n# So we explicitly define the MPI executable and prevent the test suite from\n\n# searching and finding the incorrect binary.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# --- Download behavior\n\n# Conejo does not allow external downloads\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# --- LAPACK/BLAS Definitions\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# --- Solver Capabilities\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# --- Mesh Capabilities\n\n# Structured mesh code does not compile with Intel Fortran \n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# --- TPL Installation location\n\n#set(TPL_INSTALL_PREFIX \"${ASCEM_PROJECT_DIR}/tpls/installs/intel/acml/state-dev\" CACHE PATH \"ASCEM TPL installation location\")\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "config/examples/conejo-intel-acml-int32-config.cmake" : {
      "ObjectId" : "ae7655ebb21393e8109a956c89f2d1778eef567b",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ############################################################################ #\n\n#\n\n# Third Party Library (TPL Build)\n\n#  CMake configuration file\n\n#\n\n# Machine: Conejo (LANL)\n\n# OS: Linux Red Hat EL5 x86_64\n\n# Compiler: Intel 12.1.5 with ACML 32 bit ints\n\n# MPI: OpenMPI 1.4.3\n\n#\n\n# Usage:\n\n#   (1) Load the default Intel, OpenMPI module and ACML (not default) modules\n\n#        module load intel openmpi acml-intel\n\n#   (2) Configure \n\n#       cmake -C <root path>/conejo-acml-int32-config.cmake <root directory amanzi>/amanzi/config/SuperBuild\n\n# \n\n# ############################################################################ #\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --- Machine specific directories\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#set(AMCL_ROOT \"/opt/ACML/acml-4.3.0/ifort64/lib\" CACHE PATH \"ACML installation location\")\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# --- Set the build type Release == minimal -O3 optimization\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# --- Set the compilers\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# --- Set test suite behavior\n\n# Like many clusters, parallel runs are not allowed on login/compiler nodes.\n\n# So we explicitly define the MPI executable and prevent the test suite from\n\n# searching and finding the incorrect binary.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# --- Download behavior\n\n# Conejo does not allow external downloads\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# --- LAPACK/BLAS Definitions\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# --- Solver Capabilities\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# --- Mesh Capabilities\n\n# Structured mesh code does not compile with Intel Fortran \n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# --- TPL Installation location\n\n#set(TPL_INSTALL_PREFIX \"${ASCEM_PROJECT_DIR}/tpls/installs/intel/acml/state-dev\" CACHE PATH \"ASCEM TPL installation location\")\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "config/examples/conejo-mkl-config.cmake" : {
      "ObjectId" : "6b71e1e7118013252d0958e5b9752a8a09755cf7",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ############################################################################ #\n\n#\n\n# Third Party Library (TPL Build)\n\n#  CMake configuration file\n\n#\n\n# Machine: Conejo (LANL)\n\n# OS: Linux Red Hat EL5 x86_64\n\n# Compiler: Intel 11.1 with MKL 10.3 (arch=intel64, 4-byte ints) libraries\n\n# MPI: OpenMPI 1.4.3\n\n#\n\n# Usage:\n\n#   (1) Load the default Intel, OpenMPI and  MKL modules\n\n#        module load intel openmpi-intel mkl/10.3\n\n#   (2) Configure \n\n#       cmake -C <root path>/conejo-config.cmake <root directory amanzi>/amanzi/config/SuperBuild\n\n# \n\n# ############################################################################ #\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --- Machine specific directories\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# --- Set the build type Release == minimal -O3 optimization\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# --- Set the compilers\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# --- Set test suite behavior\n\n# Like many clusters, parallel runs are not allowed on login/compiler nodes.\n\n# So we explicitly define the MPI executable and prevent the test suite from\n\n# searching and finding the incorrect binary.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# --- Download behavior\n\n# Conejo does not allow external downloads\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# --- LAPACK/BLAS Definitions\n\n# I used the online tool http://software.intel.com/en-us/articles/intel-mkl-link-line-advisor\n\n# to define the link line options. I selected the options: intel64(arch), 32bit ints, multi-threaded libraries\n\n# and static link. \n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# --- Mesh Capabilities\n\n# Structured mesh code does not compile with Intel Fortran \n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# --- Solver Capabilities\n\n#\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# --- TPL Installation location\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "config/examples/conejo-mkl64-config.cmake" : {
      "ObjectId" : "3fd8c9412ab75e735ee1a635b82f7232ef6b2f32",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ############################################################################ #\n\n#\n\n# Third Party Library (TPL Build)\n\n#  CMake configuration file\n\n#\n\n# Machine: Conejo (LANL)\n\n# OS: Linux Red Hat EL5 x86_64\n\n# Compiler: Intel 11.1 with MKL 10.3 libraries\n\n# MPI: OpenMPI 1.4.3\n\n#\n\n# Usage:\n\n#   (1) Load the default Intel, OpenMPI and  MKL modules\n\n#        module load intel openmpi-intel mkl/10.3\n\n#   (2) Configure \n\n#       cmake -C <root path>/conejo-config.cmake <root directory amanzi>/amanzi/config/SuperBuild\n\n# \n\n# ############################################################################ #\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --- Machine specific directories\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# --- Set the build type Release == minimal -O3 optimization\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# --- Set the compilers\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# --- Set test suite behavior\n\n# Like many clusters, parallel runs are not allowed on login/compiler nodes.\n\n# So we explicitly define the MPI executable and prevent the test suite from\n\n# searching and finding the incorrect binary.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# --- Download behavior\n\n# Conejo does not allow external downloads\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# --- LAPACK/BLAS Definitions\n\n# Vendor string Intel10_64lp 64-bit MKL libraries. ONLY vendor string that found correct libraries.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# --- Mesh Capabilities\n\n# Structured mesh code does not compile with Intel Fortran \n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# --- Solver Capabilities\n\n#\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# --- TPL Installation location\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "config/examples/eureka-atlas-config.cmake" : {
      "ObjectId" : "0b989ec29f6d3c09f1685bff60e898578d6bb73a",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ############################################################################ #\n\n#\n\n# Third Party Library (TPL Build)\n\n#  CMake configuration file\n\n#\n\n# Machine: Eureka (NSCEE)\n\n# OS: Linux Red Hat EL5 x86_64\n\n# Compiler: GCC 4.1.2\n\n# MPI: OpenMPI 1.4.?\n\n#\n\n# Usage:\n\n#   (1) Load the modules: cmake/cmake-2.8.8 PMPI/mdulefile mpi/openmpi-interconnects-gnu \n\n#        module load intel openmpi-intel atlas\n\n#   (2) Configure \n\n#       cmake -C <root path>/eureka-atlas-config.cmake <root directory amanzi>/amanzi/config/SuperBuild\n\n# \n\n# ############################################################################ #\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --- Machine specific directories\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# --- Set the build type Release == minimal -O3 optimization\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# --- Set the compilers\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# --- Set test suite behavior\n\n# Like many clusters, parallel runs are not allowed on login/compiler nodes.\n\n# So we explicitly define the MPI executable and prevent the test suite from\n\n# searching and finding the incorrect binary.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# --- LAPACK/BLAS Definitions\n\n# The LANL support recommends the following link flags when linking against ATLAS\n\n# -L/usr/lib64 -lgfortran -L${ATLAS_ROOT}/lib -llapack -lf77blas -lcblas -latlas\n\n# I used the same flags here because this machine has a similar OS.\n\n# Since the gfortran library is shared, I left the -L,-l flags in the library string.\n\n# The remaining libraries are all static; I used full paths for those library names. \n\n# Need the gfotran library to link to the BLAS libraries.\n\n# We use the LAPACK built with ATLAS, thus we need the cblas library\n\n# to link correctly to lapack. The ';' is the list delimiter in CMake. \n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# --- Solver Capabilities\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# --- Mesh Capabilities\n\n# CCSE can not compile with GCC 4.1.2\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# --- TPL Installation location\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "config/examples/eureka-generic-config.cmake" : {
      "ObjectId" : "a66d6c500f584033543aa4ebdb6a02c4d3ee817d",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ############################################################################ #\n\n#\n\n# Third Party Library (TPL Build)\n\n#  CMake configuration file\n\n#\n\n# Machine: Eureka (NSCEE)\n\n# OS: Linux Red Hat EL5 x86_64\n\n# Compiler: GCC 4.6.3\n\n# MPI: PMPI (HP-MPI)\n\n#\n\n# Usage:\n\n#   (1) Load the modules: cmake/cmake-2.8.8 PMPI/mdulefile gnu/gcc-4.6.3 \n\n#        module load intel openmpi-intel atlas\n\n#   (2) Configure \n\n#       cmake -C <root path>/eureka-atlas-config.cmake <root directory amanzi>/amanzi/config/SuperBuild\n\n# \n\n# ############################################################################ #\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --- Machine specific directories\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# --- Set the build type Release == minimal -O3 optimization\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# --- Set the compilers\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# --- Set test suite behavior\n\n# Like many clusters, parallel runs are not allowed on login/compiler nodes.\n\n# So we explicitly define the MPI executable and prevent the test suite from\n\n# searching and finding the incorrect binary.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# --- LAPACK/BLAS Definitions\n\n# Use the system lapack blas. Need static libs because the shared ones are broken.\n\n# See symbol look up errors at run time. \n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# --- Solver Capabilities\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# --- Mesh Capabilities\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# --- TPL Installation location\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "config/examples/eureka-intel-config.cmake" : {
      "ObjectId" : "c5ace4df06f59f1a2de8b7cffaca43c164e8870f",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ############################################################################ #\n\n#\n\n# Third Party Library (TPL Build)\n\n#  CMake configuration file\n\n#\n\n# Machine: Eureka (NSCEE)\n\n# OS: Linux Red Hat EL5 x86_64\n\n# Compiler: Intel 12.X with MKL (arch=intel64, 4-byte ints)\n\n# MPI: MPICH\n\n#\n\n# Usage:\n\n#   (1) Load the modules: cmake/cmake-2.8.8 intel/inteli-12-impi \n\n#   (2) Configure \n\n#       cmake -C <root path>/eureka-intel-config.cmake <root directory amanzi>/amanzi/config/SuperBuild\n\n#\n\n# To build Amanzi against this installation you will need to add the MPI library path\n\n# under the INTEL MPI to LD_LIBRARY_PATH\n\n# export LD_LIBRARY_PATH=${I_MPI_ROOT}/intel64/lib:${LD_LIBRARY_PATH}\n\n# or\n\n# setenv LD_LIBRARY_PATH ${I_MPI_ROOT}/intel64/lib:${LD_LIBRARY_PATH}\n\n# \n\n# ############################################################################ #\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --- Machine specific directories\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# --- Set the build type Release == minimal -O3 optimization\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# --- Set the compilers\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# --- Set test suite behavior\n\n# Like many clusters, parallel runs are not allowed on login/compiler nodes.\n\n# So we explicitly define the MPI executable and prevent the test suite from\n\n# searching and finding the incorrect binary.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# --- LAPACK/BLAS Definitions\n\n# I used the online tool http://software.intel.com/en-us/articles/intel-mkl-link-line-advisor\n\n# to define the link options. I selected the options: intel64(arch), 32bit ints, multi-threaded libraries\n\n# and dynamic linking against a single file. The static linking broke with undefined links\n\n# that *should be found in libmkl_intel_thread.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# --- Solver Capabilities\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# --- Mesh Capabilities\n\n# CCSE can not compile with GCC 4.1.2\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# --- Compiler flag options\n\n# The MPICH_IGNORE_CXX_SEEK is required to avoid an MPICH SEEK_SET name clash with stdio.h\n\n# The other flags are from the -fast documentation. Use all flags from -fast that do not require \n\n# static linking or ip0, which requires a special AR definition and the SuperBuild is not currently\n\n# designed to handle that.\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#set(CMAKE_AR \"/shared/local/opt/intel/composer_xe_2011_sp1.6.233/bin/intel64/xiar\" CACHE FILEPATH \"Intel AR\")\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# --- TPL Installation location\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "config/examples/eureka-mkl64-config.cmake" : {
      "ObjectId" : "348bda76c1a1ee9c0fed7aacb73cb371ee8da461",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ############################################################################ #\n\n#\n\n# Third Party Library (TPL Build)\n\n#  CMake configuration file\n\n#\n\n# Machine: Eureka\n\n# OS: Linux Red Hat EL6 x86_64\n\n# Compiler: Intel 12 with MKL 10.3 libraries\n\n# MPI: \n\n#\n\n# Usage:\n\n#   (1) Load modules\n\n#        module load cmake intel/intel-12 PMPI/modulefile\n\n#   (2) Configure \n\n#       cmake -C <root path>/eureka-mkl64-config.cmake <root directory amanzi>/amanzi/config/SuperBuild\n\n# \n\n# ############################################################################ #\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --- Machine specific directories\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# --- Set the build type Release == minimal -O3 optimization\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# --- Set the compilers\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# --- Set test suite behavior\n\n# Like many clusters, parallel runs are not allowed on login/compiler nodes.\n\n# So we explicitly define the MPI executable and prevent the test suite from\n\n# searching and finding the incorrect binary.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# --- Download behavior\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# --- LAPACK/BLAS Definitions\n\n# Vendor string Intel10_64lp 64-bit MKL libraries. Will work if MKL_ROOT/lib is in\n\n# LD_LIBRARY_PATH\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# --- Mesh Capabilities\n\n# Structured mesh code does not compile with Intel Fortran \n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# --- Solver Capabilities\n\n#\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# --- TPL Installation location\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "config/examples/macosx-mports-config.cmake" : {
      "ObjectId" : "133bf730f8ed82cd81983ed79210be7c0bdafc88",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ############################################################################ #\n\n#\n\n# Third Party Library (TPL Build)\n\n#  CMake configuration file\n\n#\n\n# Machine: Laptop\n\n# OS: MacOSX 10.6.8\n\n# Compiler: GCC 4.6 installed through MacPorts\n\n# MPI: OpenMPI 1.4.4 installed from source\n\n#\n\n# Usage:\n\n#   Configure \n\n#       cmake -C <root path>/macosx-nas-config.cmake <root directory amanzi>/amanzi/config/SuperBuild\n\n# \n\n# ############################################################################ #\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --- Machine specific directories\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# --- Set the build type Release == minimal -O3 optimization\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# --- Set the compilers\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# --- Set test suite behavior\n\n# Like many clusters, parallel runs are not allowed on login/compiler nodes.\n\n# So we explicitly define the MPI executable and prevent the test suite from\n\n# searching and finding the incorrect binary.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# --- LAPACK/BLAS Definitions\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# If no BLA_VENDOR is set MacOS X defaults to the Accelerate libraries\n\n#set(BLA_VENDOR \"Apple\" CACHE STRING \"Search for the Apple Accelerate libraries\")\n\n#set(BLA_VENDOR \"NAS\" CACHE STRING \"Search for the Apple vecLib libraries\")\n\n#set(BLA_VENDOR \"Generic\" CACHE STRING \"Search for the blas/lapack libraries\")\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# --- Solver Capabilities\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# --- Mesh Capabilities\n\n# Structured mesh code does not compile with Intel Fortran \n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# --- TPL Installation location\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "config/examples/macosx-nas-config.cmake" : {
      "ObjectId" : "e3424ae880118f6456f17a0e8e8ec74824f8653c",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ############################################################################ #\n\n#\n\n# Third Party Library (TPL Build)\n\n#  CMake configuration file\n\n#\n\n# Machine: Laptop\n\n# OS: MacOSX 10.6.8\n\n# Compiler: GCC 4.6 installed through MacPorts\n\n# MPI: OpenMPI 1.4.4 installed from source\n\n#\n\n# Usage:\n\n#   Configure \n\n#       cmake -C <root path>/macosx-nas-config.cmake <root directory amanzi>/amanzi/config/SuperBuild\n\n# \n\n# ############################################################################ #\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --- Machine specific directories\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# --- Set the build type Release == minimal -O3 optimization\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# --- Set the compilers\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# --- Set test suite behavior\n\n# Like many clusters, parallel runs are not allowed on login/compiler nodes.\n\n# So we explicitly define the MPI executable and prevent the test suite from\n\n# searching and finding the incorrect binary.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# --- LAPACK/BLAS Definitions\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# --- Solver Capabilities\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# --- Mesh Capabilities\n\n# Structured mesh code does not compile with Intel Fortran \n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# --- TPL Installation location\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "demos/phase2/CMakeLists.txt" : {
      "ObjectId" : "d6dc47a1846a50833c4f0e0f474d01da9f6e8b06",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "demos/phase2/chemistry/CMakeLists.txt" : {
      "ObjectId" : "c4107d1627c24290ac420becc6b266da3ee2edca",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add_subdirectory(farea)\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "demos/phase2/dvz/3_layer_1d-u-ssflow/CMakeLists.txt" : {
      "ObjectId" : "586750d0e896c7de0bb768e6f57322c0eff30a13",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copy test directory files if an out of source build\n",
        "Line" : 3,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "demos/phase2/dvz/3_layer_2d-u/CMakeLists.txt" : {
      "ObjectId" : "2cdbdcdb4f0863dd3f4f343ef6a47ddc946361ff",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copy test directory files if an out of source build\n",
        "Line" : 3,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "demos/phase2/dvz/8_layer-u/CMakeLists.txt" : {
      "ObjectId" : "17fe4cad7f50aca7be3e3889edd38d35d07f4116",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copy test directory files if an out of source build\n",
        "Line" : 3,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "demos/phase2/dvz/CMakeLists.txt" : {
      "ObjectId" : "045ceadc1a8516776b6908e2fc14d44247afcfba",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/developer_guide/Makefile" : {
      "ObjectId" : "a9024b6f04cd3ff686705369fc80c38b7f4ba390",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#BIBFILE=$(FILE).bib\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# texfile dependencies\n\n#\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#BIBFILES=$(shell find ./bib -name \"*\\.bib\" | sort -n )\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "doc/input_spec/Makefile" : {
      "ObjectId" : "991bc63d37894a9ec0716db4597519410c026c9d",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n#  Makefile: generating HTML and PDF from RST\n\n#\n\n#  NB: not a good solution, just an initial hack.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# generic rules for targets\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "doc/required_software/Makefile" : {
      "ObjectId" : "c6bf1b87755338f60b1464b811bb1f15b80c191a",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "doc/theory_guide/Makefile" : {
      "ObjectId" : "e5c381282f45ff100c1a8de08b5765fee7efdd09",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#BIBFILE=$(FILE).bib\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# texfile dependencies\n\n#\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#BIBFILES=$(shell find ./bib -name \"*\\.bib\" | sort -n )\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "doc/user_guide/Makefile" : {
      "ObjectId" : "d112e44a3831c2dde37e5286dc61b9135a886a77",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Internal variables.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "doc/web_front/Makefile" : {
      "ObjectId" : "6e40654f32600c09ff3c0437c72c3cc3f9b8a54a",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Internal variables.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "31b8146fdac881cbe41327256494029fcef26cba",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Global definitions of standards\n\n# add_definitions(-DBOOST_NO_CXX11_VARIADIC_TEMPLATES)\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Standard utilities\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Functions\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Geometry\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Grid-option agnostic chemistry and interfaces\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Use Alquimia as a chemistry engine.\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Mesh\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Debug helpers\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Discretization\n",
        "Line" : 32,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Data structures\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Mesh functions\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Output\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Solvers\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Time integration\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Operators\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Build State\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Multiprocess coordinator\n",
        "Line" : 63,
        "CharPositionInLine" : 5
      },
      "18" : {
        "Text" : "# unstructured grid simulation driver, and Amanzi binaries\n",
        "Line" : 66,
        "CharPositionInLine" : 5
      },
      "19" : {
        "Text" : "# structured grid\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# standalone driver (produces mesh-independent executable)\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "src/common/alquimia/CMakeLists.txt" : {
      "ObjectId" : "a2de657502e13aec8050000ef6ad559e54429b6e",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#  Amanzi\n\n#    Common geochemistry machinery\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Define a project name\n\n# After this command the following variables are defined\n\n#   GEOCHEM_SOURCE_DIR\n\n#   GEOCHEM_BINARY_DIR\n\n# Other projects (subdirectories) can reference this directory\n\n# through these variables.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We use Alquimia for chemistry instead of Amanzi's built-in thing, \n\n# so we augment whatever existing GEOCHEM_LIBS property exists.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Amanzi include directories\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# External (TPL) include directories\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/common/chemistry/CMakeLists.txt" : {
      "ObjectId" : "ab181a47b156a816f229bb3c4ad32e58b5a1b6c9",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#  Amanzi\n\n#    Chemistry\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Amanzi module, include files found in AMANZI_MODULE_PATH\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Define a project name\n\n# After this command the following varaibles are defined\n\n#   CHEM_SOURCE_DIR\n\n#   CHEM_BINARY_DIR\n\n# Other projects (subdirectories) can reference this directory\n\n# through these variables.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Amanzi include directories\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# External (TPL) include directories\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Chemistry includes directory\n\n# The set will define the variable in the chemistry scope\n\n# The global property will allow other directories (MPC) to\n\n# access this directory name through a variable.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# Install targets\n\n#\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "src/common/chemistry/base_chemistry/CMakeLists.txt" : {
      "ObjectId" : "596f62c9ea4363db4d0e9dd864c82ee7965597e3",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#  Amanzi\n\n#    Chemistry Base\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/common/chemistry/reactions/CMakeLists.txt" : {
      "ObjectId" : "3efbf1453b142d6607c3ed40caa3c5983a1cc587",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#  Amanzi\n\n#    Chemistry Reactions\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Chemistry includes\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# library\n\n#\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/common/chemistry/solvers/CMakeLists.txt" : {
      "ObjectId" : "05ca5d8751d1820c9d7cda4f54e4956017e2920f",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#  Amanzi\n\n#    Chemistry Reactions\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Chemistry includes\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/common/chemistry/tests_regression/CMakeLists.txt" : {
      "ObjectId" : "677f4086e3be996fb4f92f734a34c7d57c466cf0",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#  Amanzi\n\n#    Chemistry Test Drivers\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Chemistry includes\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# batch chemistry drivers and test program\n\n#\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#add_amanzi_test(chemistry-regression ${BATCH_EXE_NAME} KIND REG) \n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# OpenMP test program\n\n#\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/common/chemistry/tests_regression/crunch/Makefile" : {
      "ObjectId" : "52037e6f62ff3d7bc1cbd3049512e90b8250c259",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# tests\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# clean - Clean up the directory.\n\n#\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# clobber - Really clean up the directory.\n\n#\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# FORCE - Null rule to force things to happen.\n\n#\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/common/chemistry/tests_regression/pflotran/Makefile" : {
      "ObjectId" : "8fcf0d009c9371925d1ad21f14f3b7dc98a63452",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# tests\n\n#\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# clean - Clean up the directory.\n\n#\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# clobber - Really clean up the directory.\n\n#\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# FORCE - Null rule to force things to happen.\n\n#\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/common/chemistry/tests_unit/CMakeLists.txt" : {
      "ObjectId" : "bea5b2502504a84d7dc5ab3804a3d0b7a9d217f4",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#  Amanzi\n\n#    Chemistry\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Amanzi module, include files found in AMANZI_MODULE_PATH\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Chemistry includes\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add the UnitTest includes\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# Install targets\n\n#\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/common/chemistry/utility/CMakeLists.txt" : {
      "ObjectId" : "0678e19eb329c5aaa672ee15f62405cf6acaab97",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#  Amanzi\n\n#    Chemistry Utilities\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Chemistry includes\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# set_target_properties(geochemutil PROPERTIES PUBLIC_HEADER ${geochemutil_inc_files})\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/common/interface_platform/CMakeLists.txt" : {
      "ObjectId" : "8cfc87015752a369c28ace429420c2650b42cafe",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#  Amanzi\n\n#    Interface Platform\n\n#\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Amanzi module, include files found in AMANZI_MODULE_PATH\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Define a project name\n\n# After this command the following varaibles are defined\n\n#   PLATFORM_INTERFACE_SOURCE_DIR\n\n#   PLATFORM_INTERFACE_BINARY_DIR\n\n# Other projects (subdirectories) can reference this directory\n\n# through these variables.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Amanzi include directories\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# External (TPL) include directories\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# interface library\n\n#\n\n# file(GLOB _hh_inc_files \"*.hh\")\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add UnitTest include directoy\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Copy test directory files if an out of source build\n",
        "Line" : 76,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Test: transient Darcy flow \n",
        "Line" : 84,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Test: translate Amanzi-S input\n",
        "Line" : 92,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 11
    },
    "src/common/standalone_simulation_coordinator/CMakeLists.txt" : {
      "ObjectId" : "835904b61498d47894bedd98f356428f904394d2",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n\n#\n\n# Define a project name\n\n# After this command the following varaibles are defined\n\n#   SSC_SOURCE_DIR\n\n#   SSC_BINARY_DIR\n\n# Other projects (subdirectories) can reference this directory\n\n# through these variables.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# required to pick up amanzi_version.hh\n",
        "Line" : 22,
        "CharPositionInLine" : 42
      },
      "2" : {
        "Text" : "#\n\n# The structured grid pieces\n\n#\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# The common pieces\n\n#\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# The unstructured grid pieces\n\n#\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The mesh frameworks\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# External (TPL) include directories\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# More unstructured grid pieces\n\n#\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n# Binary: amanzi-demo-driver\n\n#\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# \n\n# Main: Amanzi\n\n#\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Copy test directory files if an out of source build\n",
        "Line" : 139,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# add_amanzi_test(ssc-structured-transport-0 amanzi \"--xml_file=test/t0-structured-isv2.xml\" KIND unit)\n",
        "Line" : 146,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 12
    },
    "src/data_structures/CMakeLists.txt" : {
      "ObjectId" : "7c2fd2686ad5a615840b30c7c06a9b0de23987ce",
      "LastModified" : "2019-03-19T21:04:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#  Amanzi\n\n#    Data Structures\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Amanzi module, include files found in AMANZI_MODULE_PATH\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Define a project name\n\n# After this command the following varaibles are defined\n\n#   DATA_STRUCTURES_SOURCE_DIR\n\n#   DATA_STRUCTURES_BINARY_DIR\n\n# Other projects (subdirectories) can reference this directory\n\n# through these variables.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Amanzi include directories\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# External (TPL) include directories\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Need this define. Errors from MSTK include files \n\n# about MPI_COMM_WORLD. --lpritch\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Library: data_structures\n\n#\n\n#file(GLOB data_structures_src_files \"*.cc\")\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n# Install Target\n\n#\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Add UnitTest includes\n",
        "Line" : 73,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Add Data_structures include directory.\n",
        "Line" : 76,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Copy test subdirectory for out of source builds\n",
        "Line" : 84,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# test/test_thyra_wrappers.cc\n",
        "Line" : 100,
        "CharPositionInLine" : 27
      },
      "13" : {
        "Text" : "# Test: tests for FE graph and matrices\n",
        "Line" : 103,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# add_amanzi_test(matrix_fe_test_speed matrix_fe_test_speed\n\n#                 KIND unit\n\n# \t              SOURCE test/Main.cc test/matrix_fe_test_speed.cc\n\n# \t              LINK_LIBS ${amanzi_libs} ${UnitTest_LIBRARIES})\n",
        "Line" : 129,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# add_amanzi_test(test_access test_access_times\n\n#                 KIND int\n\n#\t\t      SOURCE test/Main.cc test/test_cv_access.cc\n\n#\t\t      LINK_LIBS data_structures mesh\n\n#\t                        geometry mesh_factory\n\n#                           simple_mesh\n\n#\t                        ${UnitTest_LIBRARIES})\n",
        "Line" : 134,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 16
    },
    "src/debug/CMakeLists.txt" : {
      "ObjectId" : "95f7b012d43f2f7379d8056e9590796a4cd72296",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#  classes that help with debugging (DBG)\n\n#\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Amanzi module, include files found in AMANZI_MODULE_PATH\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Define a project name\n\n# After this command the following varaibles are defined\n\n#   DBG_SOURCE_DIR\n\n#   DBG_BINARY_DIR\n\n# Other projects (subdirectories) can reference this directory\n\n# through these variables.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add UnitTest include directoy\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Copy test directory files if an out of source build\n",
        "Line" : 37,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# file(GLOB DataFiles \"${DBG_SOURCE_DIR}/test/*.xml\")\n\n# file(COPY ${DataFiles} DESTINATION ${DBG_BINARY_DIR}/test/)\n",
        "Line" : 39,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# Add the utils directory to the include paths\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "src/error_handling/CMakeLists.txt" : {
      "ObjectId" : "3c1ce04981769a60bd1b493d8ce0e501f63c0b5f",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#  Amanzi\n\n#    Error Handling A.K.A Design by contract (DBC), Throw, Catch, etc.\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Amanzi module, include files found in AMANZI_MODULE_PATH\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Define a project name\n\n# After this command the following varaibles are defined\n\n#   DBC_SOURCE_DIR\n\n#   DBC_BINARY_DIR\n\n# Other projects (subdirectories) can reference this directory\n\n# through these variables.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Library Target: error_handling\n\n#\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Get the UnitTest libraries\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Add UnitTest include directory\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Create the error test suite\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "src/executables/CMakeLists.txt" : {
      "ObjectId" : "623c81d92f0f441bc103b1ef5f8746e3c6232b9d",
      "LastModified" : "2019-03-19T21:04:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#  Amanzi\n\n#    Amanzi executables\n\n#    Directory contains the source code to produce stand-alone\n\n#    binaries.\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Amanzi module, include files found in AMANZI_MODULE_PATH\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Define a project name\n\n# After this command the following varaibles are defined\n\n#   EXEC_SOURCE_DIR\n\n#   EXEC_BINARY_DIR\n\n# Other projects (subdirectories) can reference this directory\n\n# through these variables.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Amanzi include directories\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Chemistry includes directory\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The mesh frameworks\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# External (TPL) include directories\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Copy input files to build directory if out of source build\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\n\n# Binary: verify_mesh\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\n\n# Binary: verify_hex\n\n# verify_hex uses deprecated boost::filesystem\n\n# methods needs to pass version information to the\n\n# prepoccessor\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\n\n# Binary: verify_deform\n\n#\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#\n\n# Binary: concat\n\n#\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#\n\n#\n\n#\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#\n\n# Install include files\n\n#\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "src/functions/CMakeLists.txt" : {
      "ObjectId" : "bc0ade7f32439d6650626331c63afa2aee69fc7c",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#  Amanzi\n\n#    Functions\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Amanzi module, include files found in AMANZI_MODULE_PATH\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#include(RegistryManager)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Define a project name\n\n# After this command the following variables are defined\n\n#   XXX_SOURCE_DIR\n\n#   XXX_BINARY_DIR\n\n# Other projects (subdirectories) can reference this directory\n\n# through these variables.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Define include directories to build any binary or library\n\n# in this directory. \n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Amanzi include directories\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# External (TPL) include directories\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Need to move this up to the root -- lpritch\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\n\n# Library: functions\n\n#\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Define all tests at the of the file. BUILD_TESTS gates test building.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Add UnitTest includes\n",
        "Line" : 52,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Add include directory. Need to remove this required path. -- lpritch\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Copy test subdirectory for out of source builds\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 14
    },
    "src/geometry/CMakeLists.txt" : {
      "ObjectId" : "eac4f9e6e9d7497da48d014613d521cccbe1ec43",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#  Amanzi\n\n#    Mesh \n\n#\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Amanzi module, include files found in AMANZI_MODULE_PATH\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Define a project name\n\n# After this command the following varaibles are defined\n\n#   GEOMETRY_SOURCE_DIR\n\n#   GEOMETRY_BINARY_DIR\n\n# Other projects (subdirectories) can reference this directory\n\n# through these variables.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Amanzi include directories\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# External (TPL) include directories\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# geometry library\n\n#\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# Unit tests\n\n#\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Copy test directory files if an out of source build\n",
        "Line" : 44,
        "CharPositionInLine" : 3
      },
      "9" : {
        "Text" : "# Test: test point creation and deletion\n",
        "Line" : 52,
        "CharPositionInLine" : 3
      },
      "10" : {
        "Text" : "# Test: test geometric operators\n",
        "Line" : 58,
        "CharPositionInLine" : 3
      },
      "11" : {
        "Text" : "# Test: test region creation\n",
        "Line" : 67,
        "CharPositionInLine" : 3
      },
      "12" : {
        "Text" : "# Test: test geometric model creation\n",
        "Line" : 81,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 13
    },
    "src/mesh/CMakeLists.txt" : {
      "ObjectId" : "28e0605f37742e0f2307e9337db033a43c194752",
      "LastModified" : "2019-04-08T23:00:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#  Amanzi\n\n#    Mesh \n\n#\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Amanzi module, include files found in AMANZI_MODULE_PATH\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Define a project name\n\n# After this command the following varaibles are defined\n\n#   MESH_SOURCE_DIR\n\n#   MESH_BINARY_DIR\n\n# Other projects (subdirectories) can reference this directory\n\n# through these variables.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Amanzi include directories\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# External (TPL) directories\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# Library: mesh\n\n#\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# Library: mesh_audit\n\n#\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n# Install Header files\n\n#\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Derived and support classes\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Mesh Frameworks\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# STK (Trilinos Package)\n\n#if (ENABLE_STK_Mesh)\n\n#  add_subdirectory(mesh_stk)\n\n#endif(ENABLE_STK_Mesh)    \n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# MOAB Mesh framework\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# MSTK Mesh framework\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Factory class\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Include dirs for test\n",
        "Line" : 78,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Need to copy files for the tests \n",
        "Line" : 85,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# file(GLOB DataFiles \"${MESH_SOURCE_DIR}/test/*.xml\")\n\n# file(COPY ${DataFiles} DESTINATION ${MESH_BINARY_DIR}/test/)\n",
        "Line" : 87,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# Test link libraries\n",
        "Line" : 91,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# STK (Trilinos Package)\n",
        "Line" : 94,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# MOAB Mesh framework\n",
        "Line" : 99,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# MSTK Mesh framework\n",
        "Line" : 104,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Test: mesh geometry\n",
        "Line" : 109,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# Test: mesh deformation\n",
        "Line" : 115,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# Test: mesh columns\n",
        "Line" : 121,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# Test: mesh KD search\n",
        "Line" : 127,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 26
    },
    "src/mesh/mesh_factory/CMakeLists.txt" : {
      "ObjectId" : "db51bc7cc2194e884bb3ddd2bb5f3e276ce7ed2e",
      "LastModified" : "2019-04-08T23:00:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-------------------------------------------\n\n# file: CMakeLists.txt\n\n#\n\n# Amanzi\n\n#   Mesh Factory\n\n# -------------------------------------------------------------\n\n# -------------------------------------------------------------\n\n# Created March 11, 2011 by William A. Perkins\n\n# Last Change: Wed Sep 28 09:07:13 2011 by William A. Perkins <d3g096@PE10900.pnl.gov>\n\n# -------------------------------------------------------------\n\n# Amanzi module, include files found in AMANZI_MODULE_PATH\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Define a project name\n\n# After this command the following varaibles are defined\n\n#   MESH_FACTORY_SOURCE_DIR\n\n#   MESH_FACTORY_BINARY_DIR\n\n# Other projects (subdirectories) can reference this directory\n\n# through these variables.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# External (TPL) include directories\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Amanzi include directories\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Library: mesh_factory\n\n#\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Need to copy files for the tests \n",
        "Line" : 74,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Add UnitTest include directories\n",
        "Line" : 84,
        "CharPositionInLine" : 3
      },
      "7" : {
        "Text" : "# Test: test_mesh_factory\n",
        "Line" : 87,
        "CharPositionInLine" : 3
      },
      "8" : {
        "Text" : "# Do not call add_amanzi_test again with SOURCE and LINK_LIBS since the\n\n# previous call carries instructions to build the executable\n",
        "Line" : 101,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 9
    },
    "src/mesh/mesh_logical/CMakeLists.txt" : {
      "ObjectId" : "f900cec514bb0ad531b80b3a1b96fb4c663d44fa",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#  Amanzi\n\n#    Mesh \n\n#\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Amanzi module, include files found in AMANZI_MODULE_PATH\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Define a project name\n\n# After this command the following varaibles are defined\n\n#   MESH_SOURCE_DIR\n\n#   MESH_BINARY_DIR\n\n# Other projects (subdirectories) can reference this directory\n\n# through these variables.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Amanzi include directories\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# External (TPL) directories\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# Library: mesh\n\n#\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# Install Header files\n\n#\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Copy test directory files if an out of source build\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Include dirs for test\n",
        "Line" : 67,
        "CharPositionInLine" : 3
      },
      "10" : {
        "Text" : "# Add UnitTest include directories\n",
        "Line" : 74,
        "CharPositionInLine" : 3
      },
      "11" : {
        "Text" : "# Test link libraries\n",
        "Line" : 77,
        "CharPositionInLine" : 3
      },
      "12" : {
        "Text" : "# Test: init\n",
        "Line" : 80,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 13
    },
    "src/mesh/mesh_moab/CMakeLists.txt" : {
      "ObjectId" : "fd7591d7be0e30b5d95ca6d02432e99a239a9a4a",
      "LastModified" : "2019-03-19T21:04:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#  Amanzi\n\n#    MOAB Mesh frameworks\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Amanzi module, include files found in AMANZI_MODULE_PATH\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Define a project name\n\n# After this command the following varaibles are defined\n\n#   MOAB_SOURCE_DIR\n\n#   MOAB_BINARY_DIR\n\n# Other projects (subdirectories) can reference this directory\n\n# through these variables.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Amanzi include directories\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# External (TPL) include directories\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Need this define. Errors from MOAB include files \n\n# about MPI_COOM_WORLD. --lpritch\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# Library: moab_mesh\n\n#\n\n# The MOAB_LIBRARIES variable does not have HDF5\n\n# libraries listed. Ticket #335\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add UnitTest include\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Need to copy files for the tests \n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Test: serial\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Test: parallel\n",
        "Line" : 68,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 12
    },
    "src/mesh/mesh_mstk/CMakeLists.txt" : {
      "ObjectId" : "a6c3f61c071aac1cfc8cd107f38af041b317009c",
      "LastModified" : "2019-03-19T21:04:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#  Amanzi\n\n#    MSTK Mesh frameworks\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Amanzi module, include files found in AMANZI_MODULE_PATH\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Define a project name\n\n# After this command the following varaibles are defined\n\n#   MSTK_SOURCE_DIR\n\n#   MSTK_BINARY_DIR\n\n# Other projects (subdirectories) can reference this directory\n\n# through these variables.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# External (TPL) include directories\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Reverse the items in MSTK_INCLUDE_DIRS because when we ask the\n\n# include_directories command to prepend a set of directories using\n\n# the BEFORE keyword, it prepends each item in the MSTK_INCLUDE_DIRS\n\n# list, thereby effectively reversing the order of the\n\n# directories. For example, if we had MYDIRS=a;b;c and we specified\n\n# MYDIRS in the include_directories command, then the\n\n# INCLUDE_DIRECTORIES property for will end up with\n\n# c;b;a;whatever_existed_before\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Amanzi include directories\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Need this define. Errors from MSTK include files \n\n# about MPI_COMM_WORLD. --lpritch\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n# Library: mstk_mesh\n\n#\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Need to copy files for the tests \n",
        "Line" : 75,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "#Test: eliminate degeneracies for serial mesh\n",
        "Line" : 84,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "#Test: eliminate degeneracies in parallel mesh created from inline partitioning\n",
        "Line" : 90,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "#Test: eliminate degeneracies in pre-partitioned parallel mesh\n",
        "Line" : 97,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Test: mstk_mesh\n",
        "Line" : 104,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Test: mstk_mesh_parallel\n",
        "Line" : 121,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Test: column_mesh\n",
        "Line" : 138,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Test: extracted surface from column_mesh\n",
        "Line" : 145,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 17
    },
    "src/mesh/mesh_simple/CMakeLists.txt" : {
      "ObjectId" : "3565bc4d11332601223a6be9e66dc79cf8431cef",
      "LastModified" : "2019-03-19T21:04:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#  Amanzi\n\n#    Mesh Base Class\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Amanzi module, include files found in AMANZI_MODULE_PATH\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Define a project name\n\n# After this command the following varaibles are defined\n\n#   MESH_SIMPLE_SOURCE_DIR\n\n#   MESH_SIMPLE_BINARY_DIR\n\n# Other projects (subdirectories) can reference this directory\n\n# through these variables.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Amanzi include directories\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# External (TPL) include directories\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Library: simple_mesh\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add UnitTest include directories\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Test uses Epetra\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Need to copy files for the tests \n",
        "Line" : 45,
        "CharPositionInLine" : 3
      },
      "10" : {
        "Text" : "# Test: simple_mesh\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 11
    },
    "src/mesh_functions/CMakeLists.txt" : {
      "ObjectId" : "05720beb68e99367c7674eb3dd113c8a799b1a5d",
      "LastModified" : "2019-03-19T21:04:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#  Amanzi\n\n#    Mesh functions\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Amanzi module, include files found in AMANZI_MODULE_PATH\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Define a project name\n\n# After this command the following variables are defined\n\n#   XXX_SOURCE_DIR\n\n#   XXX_BINARY_DIR\n\n# Other projects (subdirectories) can reference this directory\n\n# through these variables.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Define include directories to build any binary or library\n\n# in this directory. \n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Amanzi include directories\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# External (TPL) include directories\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# Library: mesh_functions\n\n#\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Define all tests at the of the file. BUILD_TESTS gates test building.\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Add UnitTest includes\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Add include directory. Need to remove this required path. -- lpritch\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Copy test subdirectory for out of source builds\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# file(GLOB DataFiles \"${MFUNCS_SOURCE_DIR}/test/*.xml\")\n\n# file(COPY ${DataFiles} DESTINATION ${MFUNCS_BINARY_DIR}/test/)\n",
        "Line" : 69,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# these are currently broken\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "src/mpc/CMakeLists.txt" : {
      "ObjectId" : "348c799504315acc772ce31a7003cf4abbe4e2fc",
      "LastModified" : "2019-03-19T21:04:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#  Amanzi\n\n#    Mulitprocess Coordinator (MPC)\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Amanzi module, include files found in AMANZI_MODULE_PATH\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Define a project name\n\n# After this command the following varaibles are defined\n\n#   MPC_SOURCE_DIR\n\n#   MPC_BINARY_DIR\n\n# Other projects (subdirectories) can reference this directory\n\n# through these variables.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Amanzi include directories\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Chemistry includes directory\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# External (TPL) include directories\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# Library: mpc\n\n#\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Concerned about command line length! --lpritch\n",
        "Line" : 69,
        "CharPositionInLine" : 37
      },
      "9" : {
        "Text" : "# Add UnitTest includes\n",
        "Line" : 98,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Add MPC include directory. Need to remove this required path. -- lpritch\n",
        "Line" : 100,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Copy test subdirectory for out of source builds\n",
        "Line" : 103,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Test: mpc driver for flow\n",
        "Line" : 117,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Test: mpc driver for transport\n",
        "Line" : 124,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Test: mpc driver for reactive transport\n",
        "Line" : 130,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Test: mpc driver for thermal richards\n",
        "Line" : 137,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Test: mpc-new driver richards reactive transport\n",
        "Line" : 143,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Test: mpc driver for coupled matrix-fracture flow and transport\n",
        "Line" : 150,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Test: mpc driver for coupled matrix-fracture flow and transport: benchmarks\n",
        "Line" : 161,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Test: mpc-new driver dummy\n",
        "Line" : 167,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Test: observable_line_segment\n",
        "Line" : 173,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Test: walkabout\n",
        "Line" : 179,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 22
    },
    "src/operators/CMakeLists.txt" : {
      "ObjectId" : "402a71a609650ca04849067d9ced33e5097337de",
      "LastModified" : "2019-03-19T21:04:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#  Amanzi\n\n#   Operator library\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Amanzi module, include files found in AMANZI_MODULE_PATH\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Define a project name\n\n# After this command the following varaibles are defined\n\n#   OPERATORS_SOURCE_DIR\n\n#   OPERATORS_BINARY_DIR\n\n# Other projects (subdirectories) can reference this directory\n\n# through these variables.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# External (TPL) include directories\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Amanzi include directories\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Need this define. Errors from MSTK include files \n\n# about MPI_COMM_WORLD. --lpritch\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# Library: operators\n\n#\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add UnitTest includes\n",
        "Line" : 163,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Copy test directory files if an out of source build\n",
        "Line" : 167,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Tests: diffusion\n",
        "Line" : 176,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# # Test: tpfa\n\n# add_amanzi_test(operators_diffusion_tpfa operators_diffusion_tpfa\n\n#                 KIND unit\n\n#                 SOURCE test/Main.cc test/operator_diffusion_tpfa.cc\n\n#                 LINK_LIBS ${amanzi_libs} ${UnitTest_LIBRARIES})\n",
        "Line" : 253,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Test: advection-diffusion \n",
        "Line" : 259,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Test: matrices for surface\n",
        "Line" : 265,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Test: electromagnetics \n",
        "Line" : 272,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Test: utils\n",
        "Line" : 280,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# stability analysis\n",
        "Line" : 288,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# convergence rates\n",
        "Line" : 296,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Test: diffusion with gravity\n",
        "Line" : 308,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Test: elasticity methods\n",
        "Line" : 314,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# reconstruction tests\n",
        "Line" : 325,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# remap tests\n",
        "Line" : 342,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# high-order diffusion test\n",
        "Line" : 354,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# DG advection test\n",
        "Line" : 360,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# Test: mini PDEs\n",
        "Line" : 368,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 25
    },
    "src/output/CMakeLists.txt" : {
      "ObjectId" : "c58b5b171c5d81c8c4674901a5b79c888f835a57",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#  Amanzi\n\n#    MOAB Mesh frameworks\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Amanzi module, include files found in AMANZI_MODULE_PATH\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Define a project name\n\n# After this command the following varaibles are defined\n\n#   OUTPUT_SOURCE_DIR\n\n#   OUTPUT_BINARY_DIR\n\n# Other projects (subdirectories) can reference this directory\n\n# through these variables.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Amanzi include directories\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# External (TPL) include directories\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# Library: output\n\n#\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# GMV is always built\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# HDF5 serial test, HDF5 now required so always enables\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#print_variable(lib)\n\n# message(STATUS \"DEBUG: lib=$lib\")\n",
        "Line" : 73,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#\n\n# Binaries\n\n#\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\n\n# Tests\n\n#\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Add UnitTest\n",
        "Line" : 100,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Copy test directory files if an out of source build\n",
        "Line" : 103,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Test: gmv_output\n",
        "Line" : 110,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Test: hdf5_output\n",
        "Line" : 116,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Test: hdf5_mpi_output\n",
        "Line" : 122,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Test: uses the Output interface\n",
        "Line" : 129,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Test: uses the Output interface\n",
        "Line" : 136,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 19
    },
    "src/pks/CMakeLists.txt" : {
      "ObjectId" : "b861dc717138773ebd98e048d33b90b01d7f9f21",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#  Amanzi\n\n#    PK class\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Define a project name\n\n# After this command the following varaibles are defined\n\n#   PKS_SOURCE_DIR\n\n#   PKS_BINARY_DIR\n\n# Other projects (subdirectories) can reference this directory\n\n# through these variables.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Amanzi include directories\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# External (TPL) include directories\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# Library: pks\n\n#\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# Install Targets\n\n#\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# No tests so far\n\n#\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# chemistry isn't REALLY physics...\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ok, transport is physics but oh well...\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "src/pks/chemistry/CMakeLists.txt" : {
      "ObjectId" : "bcc735b83b9deedce49cb6ca46cdeba7bb95938e",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#  Amanzi\n\n#    Chemistry Process Kernel\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Amanzi module, include files found in AMANZI_MODULE_PATH\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Define a project name\n\n# After this command the following varaibles are defined\n\n#   CHEMPK_SOURCE_DIR\n\n#   CHEMPK_BINARY_DIR\n\n# Other projects (subdirectories) can reference this directory\n\n# through these variables.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Chemistry stuff.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# External (TPL) include directories\n\n# Although it does not call HDF5 directly \n\n# it does need HDF5 for the Vis.hpp file \n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Amanzi include directories\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# Chemistry registrations\n\n#\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n# Install Targets\n\n#\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\n\n# Library: chemistry_pk\n\n#\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Add UnitTest include directory\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Add the chemistry directory to the include paths\n",
        "Line" : 99,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Copy test directory files if any out of source build\n",
        "Line" : 102,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# The following test is disabled in parallel environments. It has to be rewritten in order \n\n# to function properly there.\n",
        "Line" : 131,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 14
    },
    "src/pks/dummy/CMakeLists.txt" : {
      "ObjectId" : "074920a23750be5bf5b60fa3f1dfd4e3c25b4b0b",
      "LastModified" : "2019-03-19T21:04:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#  Amanzi\n\n#   Dummy process kernel\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Amanzi module, include files found in AMANZI_MODULE_PATH\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#include(LibraryManager)\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Define a project name\n\n# After this command the following varaibles are defined\n\n#   DUMMYPK_SOURCE_DIR\n\n#   DUMMYPK_BINARY_DIR\n\n# Other projects (subdirectories) can reference this directory\n\n# through these variables.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Amanzi include directories\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# External (TPL) include directories\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# Dummy registrations\n\n#\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n# Library: dummy\n\n#\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#set(flow_tpl_libs ${Teuchos_LIBRARIES} ${NOX_LIBRARIES} ${Epetra_LIBRARIES})\n\n#list(REVERSE flow_tpl_libs)\n\n#list(REMOVE_DUPLICATES flow_tpl_libs)\n\n#list(REVERSE flow_tpl_libs)\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\n\n# Install Targets\n\n#\n\n#file(GLOB flow_inc_files \"*.hh\")\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# if (BUILD_TESTS) \n\n# #if (0)\n\n#   include_directories(${MESH_FACTORY_SOURCE_DIR})\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#   # Add UnitTest includes\n\n#   include_directories(${UnitTest_INCLUDE_DIRS})\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#   # Add MPC include directory. Need to remove this required path. -- lpritch\n\n#   include_directories(${MPC_SOURCE_DIR})\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#     # Copy test directory files if an out of source build\n\n#     if (NOT (${DUMMYPK_SOURCE_DIR} EQUAL ${DUMMYPK_BINARY_DIR}) )\n\n#         execute_process(COMMAND ${CMAKE_COMMAND} -E \n\n#           copy_directory ${DUMMYPK_SOURCE_DIR}/test ${DUMMYPK_BINARY_DIR}/test) \n\n#     endif()\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#   set(amanzi_libs mpc flow state  mesh_factory operators \n\n#                     geometry mesh_functions functions dummy pks)\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#   # Test: dummy_pk \n\n# #  add_amanzi_test(multiphase_simple multiphase_simple\n\n# #                  KIND      int\n\n# #                  SOURCE    test/Main.cc test/flow_multiphase_simple.cc\n\n# #                  LINK_LIBS ${amanzi_libs} ${UnitTest_LIBRARIES})\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# endif()\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "src/pks/energy/CMakeLists.txt" : {
      "ObjectId" : "7eae4a357e3d7902b12db1b7e7e03245e35d9767",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#  Amanzi\n\n#   Energy process kernel\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Amanzi module, include files found in AMANZI_MODULE_PATH\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Define a project name\n\n# After this command the following varaibles are defined\n\n#   ENERGY_SOURCE_DIR\n\n#   ENERGY_BINARY_DIR\n\n# Other projects (subdirectories) can reference this directory\n\n# through these variables.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# External (TPL) include directories\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Amanzi include directories\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# Energy registrations\n\n#\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# Library: energy\n\n#\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n# Install Targets\n\n#\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Add UnitTest include directoy\n",
        "Line" : 154,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Copy test directory files if an out of source build\n",
        "Line" : 158,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Add the flow directory to the include paths\n",
        "Line" : 164,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Test: 1\n",
        "Line" : 169,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Test: 2\n",
        "Line" : 175,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Test: 3\n",
        "Line" : 181,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 15
    },
    "src/pks/eos/CMakeLists.txt" : {
      "ObjectId" : "e789efcab44c25509b16dab6f6ee0e21b1e341dd",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#  Amanzi\n\n#    Equations of state\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Define a project name\n\n# After this command the following varaibles are defined\n\n#   EOS_SOURCE_DIR\n\n#   EOS_BINARY_DIR\n\n# Other projects (subdirectories) can reference this directory\n\n# through these variables.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Amanzi include directories\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# EOS registrations\n\n#\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# Library: eos\n\n#\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# Install Targets\n\n#\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "src/pks/flow/CMakeLists.txt" : {
      "ObjectId" : "9b23fddc1a6c9e8bbbbce0e6e03684831486ad27",
      "LastModified" : "2019-03-19T21:04:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n#  Amanzi\n\n#   Flow process kernel\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Amanzi module, include files found in AMANZI_MODULE_PATH\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Define a project name\n\n# After this command the following varaibles are defined\n\n#   FLOW_SOURCE_DIR\n\n#   FLOW_BINARY_DIR\n\n# Other projects (subdirectories) can reference this directory\n\n# through these variables.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# External (TPL) include directories\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Amanzi include directories\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# Flow registrations\n\n#\n\n# -- pk registration\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# -- multiscale models registration\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# Library: flow\n\n#\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n# Install Targets\n\n#\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Add UnitTest include directory\n",
        "Line" : 149,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Copy test directory files if any out of source build\n",
        "Line" : 153,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# execute_process(COMMAND ${CMAKE_COMMAND} -E \n\n#   copy_directory ${FLOW_SOURCE_DIR}/test ${FLOW_BINARY_DIR}/test) \n",
        "Line" : 155,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# Add the flow directory to the include paths\n",
        "Line" : 163,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Test: transient Darcy flow \n",
        "Line" : 168,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Test: transient Darcy flow \n",
        "Line" : 175,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Test: transient Darcy flow with a source\n",
        "Line" : 181,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Test: convergence analysis\n",
        "Line" : 187,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Test: convergence analysis on random meshes\n",
        "Line" : 193,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Test: 2D Richards\n",
        "Line" : 199,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Test: 2D Richards TPFA discretization test seepage BC\n",
        "Line" : 215,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Test: pseudo-1D Richards\n",
        "Line" : 221,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Test: Newton\n",
        "Line" : 227,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Test: miscaleneous Darcy flow routines\n",
        "Line" : 233,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# Test: van Genuchten flow routines\n",
        "Line" : 242,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# Test: flow-bc-factory\n",
        "Line" : 248,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# Test: flow-boundary solver test\n",
        "Line" : 254,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# Test: 3D Richards\n",
        "Line" : 260,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# Test: Multiscale\n",
        "Line" : 273,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# Test: Fractures\n",
        "Line" : 279,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 29
    },
    "src/pks/mpc_pk/CMakeLists.txt" : {
      "ObjectId" : "c9a930c72e25254be668503b9bfdf85bef6d5445",
      "LastModified" : "2019-04-18T18:59:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#  Amanzi\n\n#   Energy process kernel\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Amanzi module, include files found in AMANZI_MODULE_PATH\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Define a project name\n\n# After this command the following varaibles are defined\n\n#   MPC_TREE_SOURCE_DIR\n\n#   MPC_TREE_BINARY_DIR\n\n# Other projects (subdirectories) can reference this directory\n\n# through these variables.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Get the includes directory for chemistry\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Amanzi include directories\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# External (TPL) include directories\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# Library: mpc_tree\n\n#\n\n#\n\n# Install Targets\n\n#\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add UnitTest include directoy\n",
        "Line" : 116,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# # Copy test directory files if an out of source build\n\n# if (NOT (${MPC_TREE_SOURCE_DIR} EQUAL ${MPC_TREE_BINARY_DIR}) )\n\n#     execute_process(COMMAND ${CMAKE_COMMAND} -E \n\n#       copy_directory ${MPC_TREE_SOURCE_DIR}/test ${MPC_TREE_BINARY_DIR}/test) \n\n# endif()\n",
        "Line" : 119,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Add the flow directory to the include paths\n",
        "Line" : 125,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Test: 1\n\n#if (ENABLE_Physics) \n\n#  add_amanzi_test(energy_test energy_test\n\n#                  KIND int\n\n#                  SOURCE test/Main.cc test/energy_test.cc\n\n#                  LINK_LIBS ${amanzi_libs} ${UnitTest_LIBRARIES})\n\n#endif()\n",
        "Line" : 130,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 12
    },
    "src/pks/navier_stokes/CMakeLists.txt" : {
      "ObjectId" : "67fc0d6c3e6fcc4e7c0107deda51407a4c907040",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#  Amanzi\n\n#   Viscous flow process kernel\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Amanzi module, include files found in AMANZI_MODULE_PATH\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Define a project name\n\n# After this command the following varaibles are defined\n\n#   NAVIER_STOKES_SOURCE_DIR\n\n#   NAVIER_STOKES_BINARY_DIR\n\n# Other projects (subdirectories) can reference this directory\n\n# through these variables.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# External (TPL) include directories\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Amanzi include directories\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# Navier-Stokes registrations\n\n#\n\n# -- pk registration\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# Library: navier_stokes\n\n#\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n# Install Targets\n\n#\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Add UnitTest include directory\n",
        "Line" : 82,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Copy test directory files if any out of source build\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# execute_process(COMMAND ${CMAKE_COMMAND} -E \n\n#   copy_directory ${NAVIER_STOKES_SOURCE_DIR}/test ${NAVIER_STOKES_BINARY_DIR}/test) \n",
        "Line" : 88,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# Add the flow directory to the include paths\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Test: transient 2D flow \n",
        "Line" : 100,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 14
    },
    "src/pks/transport/CMakeLists.txt" : {
      "ObjectId" : "b7ba50a185e7c019b949ee91a38a93ce7e98c484",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#  Amanzi\n\n#   Transport process kernel\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Amanzi module, include files found in AMANZI_MODULE_PATH\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Define a project name\n\n# After this command the following varaibles are defined\n\n#   TRANSPORT_SOURCE_DIR\n\n#   TRANSPORT_BINARY_DIR\n\n# Other projects (subdirectories) can reference this directory\n\n# through these variables.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Get the includes directory for chemistry (needed for BCs).\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# External (TPL) include directories\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Amanzi include directories\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# Transport registrations\n\n#\n\n# -- pk registration\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# -- mechamical dispersion models registration\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# -- multiscale models registration\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\n\n# Library: transport\n\n#\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Add UnitTest includes\n",
        "Line" : 157,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Copy test directory files if any out of source build\n",
        "Line" : 160,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# execute_process(COMMAND ${CMAKE_COMMAND} -E \n\n#   copy_directory ${TRANSPORT_SOURCE_DIR}/test ${TRANSPORT_BINARY_DIR}/test) \n",
        "Line" : 162,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Test: miscaleneous transport routines\n",
        "Line" : 176,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "#add_amanzi_test(transport_limiters transport_limiters\n\n#                KIND unit\n\n#                SOURCE test/Main.cc test/transport_limiters.cc\n\n#                LINK_LIBS ${amanzi_libs} ${UnitTest_LIBRARIES})\n",
        "Line" : 187,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# fractures\n",
        "Line" : 250,
        "CharPositionInLine" : 5
      },
      "CommentCount" : 17
    },
    "src/solvers/CMakeLists.txt" : {
      "ObjectId" : "96feed6816879aafda480ffa44a8c0c5e55d920d",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#  Amanzi\n\n#   Solvers\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Amanzi module, include files found in AMANZI_MODULE_PATH\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Define a project name\n\n# After this command the following varaibles are defined\n\n#   SOLVERS_SOURCE_DIR\n\n#   SOLVERS_BINARY_DIR\n\n# Other projects (subdirectories) can reference this directory\n\n# through these variables.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Amanzi include directories\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# -- below needed only by ResidualDebugger -- maybe this can be fixed?\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# External (TPL) include directories\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# Library: solvers\n\n#\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add UnitTest include directoy\n",
        "Line" : 78,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Copy test directory files if an out of source build\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# file(GLOB DataFiles \"${SOLVER_SOURCE_DIR}/test/*.xml\")\n\n# file(COPY ${DataFiles} DESTINATION ${SOLVER_BINARY_DIR}/test/)\n",
        "Line" : 83,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# Add the solvers directory to the include paths\n",
        "Line" : 87,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 12
    },
    "src/state/CMakeLists.txt" : {
      "ObjectId" : "2824b0793dc9dfa84a876fb8ef9b965410cfdba5",
      "LastModified" : "2019-03-19T21:04:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#  Amanzi\n\n#    State class\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Amanzi module, include files found in AMANZI_MODULE_PATH\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Define a project name\n\n# After this command the following varaibles are defined\n\n#   STATE_SOURCE_DIR\n\n#   STATE_BINARY_DIR\n\n# Other projects (subdirectories) can reference this directory\n\n# through these variables.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Amanzi include directories\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# External (TPL) include directories\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# This state library will move to a new location \n\n# once Markus has created the data manager.\n\n# I use global properties since all the PROJECT_NAME\n\n# variables in this directory are tied to the MPC.\n\n# These properties will be replaced with the appropriate\n\n# directory project name once it is moved.\n\n#\n\n# Library: state\n\n#\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# Install Target\n\n#\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add UnitTest includes\n",
        "Line" : 137,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Add State include directory. \n",
        "Line" : 140,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Mesh factory includes\n",
        "Line" : 143,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Copy test subdirectory for out of source builds\n",
        "Line" : 146,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 12
    },
    "src/structured_grid/CMakeLists.txt" : {
      "ObjectId" : "d3a36b3703268366a2c3fa2937a263b980c02bd5",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set locations for amr-related source files, make available outside this dir afterward\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/structured_grid/materials/CMakeLists.txt" : {
      "ObjectId" : "93123701d2cce2b5994d0b265a4e529d4b7797c0",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n\n#\n\n# Define a project name\n\n# After this command the following varaibles are defined\n\n#   SMATERIALS_SOURCE_DIR\n\n#   SMATERIALS_BINARY_DIR\n\n# Other projects (subdirectories) can reference this directory\n\n# through these variables.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The interfaces\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# required to pick up amanzi_version.hh\n",
        "Line" : 45,
        "CharPositionInLine" : 42
      },
      "3" : {
        "Text" : "#\n\n# The structured grid pieces\n\n#\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# The common pieces\n\n#\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# External (TPL) include directories\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Copy input files if an out of source build\n",
        "Line" : 158,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    },
    "src/structured_grid/mpc_pk/CMakeLists.txt" : {
      "ObjectId" : "83fc8f2c192750dda90a3b255058c2c6aefe0f98",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Define a project name\n\n# After this command the following varaibles are defined\n\n#   SAMR_SOURCE_DIR\n\n#   SAMR_BINARY_DIR\n\n# Other projects (subdirectories) can reference this directory\n\n# through these variables.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Get the includes directory for chemistry\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# External (TPL) include directories\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#add_amanzi_test(tRegion tRegion\n\n#                KIND unit\n\n#                SOURCE tRegion.cpp\n\n#                LINK_LIBS ${structured_grid_libs} ${common_libs} ${tpl_libs})\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "src/structured_grid/mpc_pk/chemistry/CMakeLists.txt" : {
      "ObjectId" : "440ebd8cd00a14b43fe4d1a5061376fba6fb163b",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n\n#\n\n# Define a project name\n\n# After this command the following varaibles are defined\n\n#   SCHEM_SOURCE_DIR\n\n#   SCHEM_BINARY_DIR\n\n# Other projects (subdirectories) can reference this directory\n\n# through these variables.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Get the includes directory for chemistry\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# External (TPL) include directories\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#  tests removed #\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "src/structured_grid/mpc_pk/flow/CMakeLists.txt" : {
      "ObjectId" : "1938ab31725b5b57d76c4bdc2115d3cdc7cbc24f",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n\n#\n\n# Define a project name\n\n# After this command the following varaibles are defined\n\n#   SFLOW_SOURCE_DIR\n\n#   SFLOW_BINARY_DIR\n\n# Other projects (subdirectories) can reference this directory\n\n# through these variables.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# External (TPL) include directories\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Note the following is rather icky...because of circular dependencies, these things have to be listed twice\n\n# This is similar to the main amanzi exec build, but worse.  Well....it works, for now.  Not sure what a better\n\n# long-term strategy is\n",
        "Line" : 63,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# (seems to require redundant lib listing to resolve everything....not sure why\n",
        "Line" : 106,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# (seems to require redundant lib listing to resolve everything....not sure why\n",
        "Line" : 119,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Copy input files if an out of source build\n",
        "Line" : 130,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "src/structured_grid/mpc_pk/transport/advection/CMakeLists.txt" : {
      "ObjectId" : "e6aa06e5d596056c969faa82851b729db1e6b12c",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n\n#\n\n# Define a project name\n\n# After this command the following varaibles are defined\n\n#   SADV_SOURCE_DIR\n\n#   SADV_BINARY_DIR\n\n# Other projects (subdirectories) can reference this directory\n\n# through these variables.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# External (TPL) include directories\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/structured_grid/mpc_pk/transport/diffusion/CMakeLists.txt" : {
      "ObjectId" : "55e553691ffe8ee0acecda7d98729f540d51b71f",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n\n#\n\n# Define a project name\n\n# After this command the following varaibles are defined\n\n#   STRANS_SOURCE_DIR\n\n#   STRANS_BINARY_DIR\n\n# Other projects (subdirectories) can reference this directory\n\n# through these variables.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# External (TPL) include directories\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/structured_grid/problem_setup/CMakeLists.txt" : {
      "ObjectId" : "7dc49286898e8a38a653624d92c84dcc816073bb",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-------------------------------------------\n\n#\n\n# Define a project name\n\n# After this command the following varaibles are defined\n\n#   SPROB_SOURCE_DIR\n\n#   SPROB_BINARY_DIR\n\n# Other projects (subdirectories) can reference this directory\n\n# through these variables.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/structured_grid/region/CMakeLists.txt" : {
      "ObjectId" : "e3b82569c55b6016321f22406a81840ca5633bc3",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Define a project name\n\n# After this command the following varaibles are defined\n\n#   SREGION_SOURCE_DIR\n\n#   SREGION_BINARY_DIR\n\n# Other projects (subdirectories) can reference this directory\n\n# through these variables.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# External (TPL) include directories\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Copy input files if an out of source build\n",
        "Line" : 73,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "src/structured_grid/simulation_driver/CMakeLists.txt" : {
      "ObjectId" : "7cce84b4bc3eccde21fba468add60cd28351b279",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n\n#\n\n# Define a project name\n\n# After this command the following varaibles are defined\n\n#   SDRIVER_SOURCE_DIR\n\n#   SDRIVER_BINARY_DIR\n\n# Other projects (subdirectories) can reference this directory\n\n# through these variables.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# havent yet visited these folders\n",
        "Line" : 20,
        "CharPositionInLine" : 54
      },
      "2" : {
        "Text" : "# External (TPL) include directories\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/structured_grid/utils/CMakeLists.txt" : {
      "ObjectId" : "cf54b1fcc691113b932112f6253eef161fe5282b",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n\n#\n\n# Define a project name\n\n# After this command the following varaibles are defined\n\n#   SUTILS_SOURCE_DIR\n\n#   SUTILS_BINARY_DIR\n\n# Other projects (subdirectories) can reference this directory\n\n# through these variables.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# we need to close all DSO objects\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# External (TPL) include directories\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This library depends on samr.\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/time_integration/CMakeLists.txt" : {
      "ObjectId" : "93c05f6e5ac620c9d351c459d8ab9aa1f27f7bc2",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#  Amanzi\n\n#    Time Integration class\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Amanzi module, include files found in AMANZI_MODULE_PATH\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Define a project name\n\n# After this command the following varaibles are defined\n\n#   TIME_INTEGRATION_SOURCE_DIR\n\n#   TIME_INTEGRATION_BINARY_DIR\n\n# Other projects (subdirectories) can reference this directory\n\n# through these variables.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Amanzi include directories\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# External (TPL) include directories\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# Library: time_integration\n\n#\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add UnitTest include directoy\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Copy test directory files if an out of source build\n",
        "Line" : 65,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# file(GLOB DataFiles \"${TIME_INTEGRATION_SOURCE_DIR}/test/*.xml\")\n\n# file(COPY ${DataFiles} DESTINATION ${TIME_INTEGRATION_BINARY_DIR}/test/)\n",
        "Line" : 67,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# Add the time_integration directory to the include paths\n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 11
    },
    "src/utils/CMakeLists.txt" : {
      "ObjectId" : "d3b141cb01fe88e440ccaad416b84c5c0ff0abe2",
      "LastModified" : "2019-03-19T21:04:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#  Amanzi Tool Kit (ATK)\n\n#    General utilities\n\n#    This directory has become a dumping ground for things that do not\n\n#    have a well-defined home. Will go away or get renamed. For now we\n\n#    need to keep it around.\n\n#\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Amanzi module, include files found in AMANZI_MODULE_PATH\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Define a project name\n\n# After this command the following varaibles are defined\n\n#   ATK_SOURCE_DIR\n\n#   ATK_BINARY_DIR\n\n# Other projects (subdirectories) can reference this directory\n\n# through these variables.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add UnitTest include directoy\n",
        "Line" : 69,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Copy test directory files if an out of source build\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# file(GLOB DataFiles \"${ATK_SOURCE_DIR}/test/*.xml\")\n\n# file(COPY ${DataFiles} DESTINATION ${ATK_BINARY_DIR}/test/)\n",
        "Line" : 74,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# Add the utils directory to the include paths\n",
        "Line" : 78,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "src/whetstone/CMakeLists.txt" : {
      "ObjectId" : "6e6cbc324ec408119bcff934f25ad7cf11279f60",
      "LastModified" : "2019-03-19T21:04:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#  Amanzi\n\n#   Discretization library\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Amanzi module, include files found in AMANZI_MODULE_PATH\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Define a project name\n\n# After this command the following varaibles are defined\n\n#   WHETSTONE_SOURCE_DIR\n\n#   WHETSTONE_BINARY_DIR\n\n# Other projects (subdirectories) can reference this directory\n\n# through these variables.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Amanzi include directories\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# External (TPL) include directories\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# Library: whetstone\n\n#\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add UnitTest includes\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Copy test directory files if an out of source build\n",
        "Line" : 99,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Test: matrices for diffusion\n",
        "Line" : 107,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Test: matrices for elasticity\n",
        "Line" : 113,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Test: matrices for electromagnetics\n",
        "Line" : 120,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Test: miscalleneous library tools\n",
        "Line" : 126,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Test: surface matrices for diffusion\n",
        "Line" : 134,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Test: various toolsets\n",
        "Line" : 140,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Test: matrices for DG methods\n",
        "Line" : 146,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Test: matrices for Derham complex\n",
        "Line" : 157,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 17
    },
    "test_suites/CMakeLists.txt" : {
      "ObjectId" : "f92488a3ae95e6ea667efacdaa9de737f052fdce",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test_suites/benchmarking/chemistry/farea_1d/CMakeLists.txt" : {
      "ObjectId" : "683018b0081522a11c80924992d263569b78ac4c",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copy test directory files if an out of source build\n",
        "Line" : 3,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "test_suites/benchmarking/chemistry/ion_exchange_1d/CMakeLists.txt" : {
      "ObjectId" : "5cad23d23646eae32fdc758bcc94383df60cd059",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copy test directory files if an out of source build\n",
        "Line" : 3,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "test_suites/benchmarking/chemistry/surface_complexation_1d/CMakeLists.txt" : {
      "ObjectId" : "dbdeb9804ca1c4718c9b31c6d612e457142e7c71",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copy test directory files if an out of source build\n",
        "Line" : 3,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "test_suites/benchmarking/chemistry/tracer_1d/CMakeLists.txt" : {
      "ObjectId" : "f2fa324a8f983d9119c2efc13f717db8672e606d",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copy test directory files if an out of source build\n",
        "Line" : 3,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "test_suites/benchmarking/chemistry/tritium_1d/CMakeLists.txt" : {
      "ObjectId" : "7ae47dc5c411cc243c3d895f5b4d00953d03d868",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copy test directory files if an out of source build\n",
        "Line" : 3,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "test_suites/verification/CMakeLists.txt" : {
      "ObjectId" : "7a655d8d8dbedcdefbd00ea84fdb16ec9b690438",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test_suites/verification/flow/CMakeLists.txt" : {
      "ObjectId" : "e3bb1d9d7a5d74591bff2e2cb7df702b976b6861",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test_suites/verification/flow/richards/CMakeLists.txt" : {
      "ObjectId" : "fab61a1b247a5f2128bc489b1116d4c9e53b13dd",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test_suites/verification/flow/richards/steady-state/CMakeLists.txt" : {
      "ObjectId" : "8a44262b58d297304c6dc65354bd81257ed3298d",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# EIB - skipped for now because it takes forever to run\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "test_suites/verification/flow/richards/steady-state/infiltration_clay_sand_1d/CMakeLists.txt" : {
      "ObjectId" : "3a89e80ae676c9a6e90ea6dc7f61db9d7dd3c2a1",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add_amanzi_comparison_test(infiltration_clay_sand_1d_s\n\n#                            INPUT amanzi_infiltration_clay_sand_1d-s.xml\n\n# \t\t\t     ABSOLUTE_TOLERANCE 1e-8\n\n# \t\t\t     OBSERVATION \"aqueous pressure\"\n\n# \t\t\t     REFERENCE observations.out\n\n# \t\t\t     NPROCS 1)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "test_suites/verification/flow/richards/steady-state/infiltration_loam_sand_1d/CMakeLists.txt" : {
      "ObjectId" : "86c2885a8927fd203a2c7ca118be1b54e5340e76",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add_amanzi_comparison_test(infiltration_loam_sand_1d_s\n\n#                            INPUT amanzi_infiltration_loam_sand_1d-s.xml\n\n# \t\t\t     ABSOLUTE_TOLERANCE 1e-8\n\n# \t\t\t     OBSERVATION \"aqueous pressure\"\n\n# \t\t\t     REFERENCE observations.out\n\n# \t\t\t     NPROCS 1)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "test_suites/verification/flow/richards/steady-state/infiltration_sand_loam_1d/CMakeLists.txt" : {
      "ObjectId" : "c7f948db61f3e0f2007ee37c8f384abc4b73aa0b",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add_amanzi_comparison_test(infiltration_sand_loam_1d_s\n\n#                            INPUT amanzi_infiltration_sand_loam_1d-s.xml\n\n# \t\t\t     ABSOLUTE_TOLERANCE 1e-8\n\n# \t\t\t     OBSERVATION \"aqueous pressure\"\n\n# \t\t\t     REFERENCE observations.out\n\n# \t\t\t     NPROCS 1)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "test_suites/verification/flow/richards/steady-state/unconfined_layered_2d/CMakeLists.txt" : {
      "ObjectId" : "b544ca9ff928e754673f3091dcc26da4f6871ba5",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test_suites/verification/flow/richards/steady-state/unconfined_no_recharge_1d/CMakeLists.txt" : {
      "ObjectId" : "ded90af9a350b08dae451a31e1670eae9d969b9d",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test_suites/verification/flow/richards/steady-state/unconfined_recharge_1d/CMakeLists.txt" : {
      "ObjectId" : "235c66320b5e41ad47584549818f27076d58f9f5",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test_suites/verification/flow/richards/steady-state/unconfined_seepage_1d/CMakeLists.txt" : {
      "ObjectId" : "bc5ace49e4e7c28859f73e74d8b5af82876cf32f",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test_suites/verification/flow/richards/transient/CMakeLists.txt" : {
      "ObjectId" : "3584d7a447f373345ab497061b0c36b42389effe",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test_suites/verification/flow/richards/transient/infiltration_dry_sand_1d/CMakeLists.txt" : {
      "ObjectId" : "e3e269e91e15283b6ae9666e41d32827f398852d",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#COMMAND ${HDF5_H5DIFF_BINARY} ${INFILTRATION_DRY_SAND_1d_BINARY_DIR}/${h5file}\n\n#                                  ${INFILTRATION_DRY_SAND_1d_SOURCE_DIR}/golden_output/${h5file} \n\n#\t\t\t\t\t   ${dataset}/${step}  ${dataset}/${step} )\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#set_tests_properties( compare_${test_name} PROPERTIES FAIL_REGULAR_EXPRSSION \"differences found\" )\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "test_suites/verification/flow/saturated/CMakeLists.txt" : {
      "ObjectId" : "09ae10191cd9340eb912372a7179264765300eb5",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test_suites/verification/flow/saturated/steady-state/CMakeLists.txt" : {
      "ObjectId" : "167dd9feafd74f7d0a564e223d74bf2d71e3e4db",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test_suites/verification/flow/saturated/steady-state/linear_flux_head_1d/CMakeLists.txt" : {
      "ObjectId" : "91d585e6436850202abaa726941e2806994f60b1",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test_suites/verification/flow/saturated/steady-state/linear_head_head_1d/CMakeLists.txt" : {
      "ObjectId" : "5839faf979bae73efc1a8e26249e37dba8d96c80",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test_suites/verification/flow/saturated/steady-state/linear_materials_parallel_1d/CMakeLists.txt" : {
      "ObjectId" : "236077aefbcbccb81f38ccce5ea45ddd9ef76ad9",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test_suites/verification/flow/saturated/steady-state/linear_materials_serial_1d/CMakeLists.txt" : {
      "ObjectId" : "fc5a6eaf8145893c441adbbc49ffb9cea2f22557",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test_suites/verification/flow/saturated/transient/CMakeLists.txt" : {
      "ObjectId" : "cd184c7cf9105dfb2a4c2f9bd24ecbe42acc2be8",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test_suites/verification/flow/saturated/transient/boundedDomain_2d/CMakeLists.txt" : {
      "ObjectId" : "4294d33683997a0b6eeb31f72e6781ebd2adf4fb",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test_suites/verification/flow/saturated/transient/butler_pod_2d/CMakeLists.txt" : {
      "ObjectId" : "69601ed6061f5e125d19c49d4ff84c0cab63fb59",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test_suites/verification/flow/saturated/transient/butler_strip_2d/CMakeLists.txt" : {
      "ObjectId" : "f7b413b06a07eac2abd86c63dd1c54492fb29573",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test_suites/verification/flow/saturated/transient/hantush_anisotropic_2d/CMakeLists.txt" : {
      "ObjectId" : "203dfdb15efe1c71a07f88967a7de397cbd95c06",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add_amanzi_comparison_test(hantush_anisotropic_2d\n\n#                            INPUT amanzi_hantush_anisotropic_2d-u.xml\n\n#                            FILES porflow4_6.exo\n\n#                            ABSOLUTE_TOLERANCE 2e-3\n\n#                            FIELD hydraulic_head.cell.0\n\n#                            REFERENCE ${HANTUSH_ANISOTROPIC_2D_SOURCE_DIR}/golden_output/plot_data.h5)\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "test_suites/verification/flow/saturated/transient/theis_isotropic_1d/CMakeLists.txt" : {
      "ObjectId" : "829c735e6d41e5e14c24c3ae6ffdcfd593abd90e",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test_suites/verification/transport/CMakeLists.txt" : {
      "ObjectId" : "e885314aa5d64a36a15ffb1aa157ce4983c58f42",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test_suites/verification/transport/saturated/CMakeLists.txt" : {
      "ObjectId" : "396bbd442571e8ca3948b2b049751cc6516cce30",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test_suites/verification/transport/saturated/steady-state/CMakeLists.txt" : {
      "ObjectId" : "c41a8b63e47ee237aac952859057f771ea29487f",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test_suites/verification/transport/saturated/steady-state/dispersion_45_point_2d/CMakeLists.txt" : {
      "ObjectId" : "82f310d76eed4ba5d2480ab24f339d5e8643e44e",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test_suites/verification/transport/saturated/steady-state/dispersion_aligned_point_2d/CMakeLists.txt" : {
      "ObjectId" : "89f289730ab8db481dda74bc9eccde8e0f039c27",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test_suites/verification/transport/saturated/transient/CMakeLists.txt" : {
      "ObjectId" : "de76cb774a3f82fa0246cbf8c123fe7976d485f1",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test_suites/verification/transport/saturated/transient/dual_porosity_1d/CMakeLists.txt" : {
      "ObjectId" : "fd16f3d9fd8f5793a588bc06e2484c4bd3a175b7",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/cmake/AmanziConfigReport.cmake" : {
      "ObjectId" : "04e33e94b023468276ca93124fe1fbad3dd55e55",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# #############################################################################\n\n#    \n\n# Amanzi Configuration Report\n\n#\n\n# #############################################################################\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Grab global information about enabled languages and packages\n\n# that have returned successfully from a find_package call\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Define the build timestamp\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Useful macros\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Create the log file\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Write System Information\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Build directory\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Write Compiler Information\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Write Package Information\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Write Mesh Framework Information\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Write CCSE configuration info\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Write install target information\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#print_enabled_features()\n\n#print_disabled_features()\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "tools/cmake/AmanziLinkLine.cmake" : {
      "ObjectId" : "1682f41e343fb30d00d1e0b117d8ec81e5b47867",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n\n#\n\n# Functions for building a link-line for linking to Amanzi.\n\n#\n\n# See the modified CMakeLists.txt files for usage. \n\n#\n\n# This functionality should be merged with InstallManager.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# From AmanziConfigReport.cmake:\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If it's a filename, add it as given.\n",
        "Line" : 72,
        "CharPositionInLine" : 40
      },
      "3" : {
        "Text" : "# Else, add it as a library to be looked up.\n",
        "Line" : 74,
        "CharPositionInLine" : 40
      },
      "4" : {
        "Text" : "# Grab the project name to find the dependent libraries\n",
        "Line" : 83,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Add the directory locations of libraries it depends on.\n",
        "Line" : 86,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# ${package}_LIBRARIES may contain debug and opt keywords, so parse the list into to_add:\n",
        "Line" : 90,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Add the accumulated contents of value_list to the link line property\n",
        "Line" : 95,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "tools/cmake/AmanziOptions.cmake" : {
      "ObjectId" : "6a04556608a4fc768ba560d4a5a7b4dcd24732a2",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n\n#\n\n#\n\n# Amanzi Build Options\n\n#\n\n#\n\n# This file is intended define build options\n\n# related to compile options, build types, etc.\n\n# Options related to Third Party Libraries (TPL)\n\n# can be found in AmanziTPL.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Standard CMake modules\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# No idea why we need this.\n\n# I think it was required for Franklin build. -- lpritch\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Prefer static libraries, but don't require that everything must be static. \n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# remove -Wl,-Bdynamic\n",
        "Line" : 30,
        "CharPositionInLine" : 46
      },
      "5" : {
        "Text" : "# remove -fPIC\n",
        "Line" : 32,
        "CharPositionInLine" : 46
      },
      "6" : {
        "Text" : "# remove -rdynamic\n",
        "Line" : 34,
        "CharPositionInLine" : 46
      },
      "7" : {
        "Text" : "#\n\n# Options\n\n# \n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# DBC - Design by contract\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Trilinos error checking is defined in macros\n\n# if ( ${CMAKE_BUILD_TYPE} STREQUAL \"Debug\" )\n\n#     add_definitions(\"-DHAVE_FATAL_MESSAGES:BOOL=TRUE\")\n\n# endif()\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Trilinos 12 kills STK?\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Testing\n\n# We do not have a consistent way to activate the unit and other tests\n\n# should have a single switch for this. -- lpritch\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Some platforms require all binaries linking to MPI\n\n# only run through the MPIEXEC binary\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Need this option if the PATH environment does not include '.'\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# This is needed to allow the consistent registration of evaluators with\n\n# their factory, see src/common/standalone_simulation_coordinator/CMakeLists.txt,\n\n# src/common/standalone_simulation_coordinator/Main.cc, \n\n# src/state/CMakeLists.txt, and src/0state/cell_volume_evaluator_reg.hh\n\n# for how to use this\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Two sets of maintained time integrators\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Turn off physics, just build the framework\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "tools/cmake/AmanziTPL.cmake" : {
      "ObjectId" : "ee4faf1a21c09c27ea89c7f726e10c7811faf998",
      "LastModified" : "2019-03-19T21:04:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n\n# \n\n# Amanzi Third Party Library (TPL) Definitions\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Standard CMake modules see CMAKE_ROOT/Modules\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# message(STATUS \"\\t >>>>>> Skipping ....\")\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# message(STATUS \"\\t >>>>>> ${AMANZI_TPLS_VERSION_MAJOR_SRC}\")\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# message(STATUS \"\\t >>>>>> ${AMANZI_TPLS_VERSION_MINOR_SRC}\")\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# message(STATUS \"\\t >>>>>> ${AMANZI_TPLS_VERSION_PATCH_SRC}\")\n",
        "Line" : 26,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Verify TPL compatibility\n\n# - should be able to report the path to the TPLs install, need to write it in cache.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Amanzi CMake modules see <root source>/tools/cmake\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\n\n# ------------------------ Required Libraries -------------------------------#\n\n##############################################################################\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "##############################################################################\n\n# MPI\n\n##############################################################################\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "##############################################################################\n\n# ZLIB\n\n##############################################################################\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\n\n# Boost\n\n##############################################################################\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# CMake 2.8.6 FindBoost stops at version 1.46\n\n# Add more versions to the search see cmake --help-module FindBoost for\n\n# more information.\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# The Boost filesystem library changed and deprecated some functions.\n\n# This define should be used when packages include boost/filesystem.hpp\n\n# and packages any of these new or deprecated functions.\n\n# The change from version 2 to 3 occurred with the 1.49 Boost release.\n\n# Please refer to the online documentation at www.boost.org.\n",
        "Line" : 110,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "##############################################################################\n\n# HDF5 - http://www.hdfgroup.org/HDF5/\n\n##############################################################################\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "##############################################################################\n\n# Trilinos http://trilinos.sandia.gov\n\n##############################################################################\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# This command alters Trilinos_DIR. If it finds the configuration file\n\n# Trilinos_DIR is set to the path the configuration file was found.\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Amanzi uses Epetra and Teuchos utils throughout the code. \n\n# This find_package call defines Epetra_* variables.\n\n# Amanzi developers should use these variables\n\n# for libraries that ONLY use Epetra/Teuchos and avoid\n\n# using the ALL POWERFUL(TM) Trilinos_LIBRARIES.\n\n# When/If we create wrappers, using this variable\n\n# will make that transition easier.\n",
        "Line" : 184,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Verify that the Trilinos found has all the required packages\n\n# Amanzi needs. This list changes for structured and unstructured\n\n# mesh capabilities.\n\n# List of required Trilinos packages\n\n# Teuchos - general purpose toolkit, used through the code\n\n# Epetra  - distributed data objects\n\n# NOX     - nonlinear solver (Unstructured ONLY)\n\n# ML      - multilevel preconditioner (Unstructured ONLY)\n",
        "Line" : 192,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Update the <PACKAGE>_INCLUDE_DIRS variable \n",
        "Line" : 217,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Now check optional Trilinos packages\n",
        "Line" : 223,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# STK - mesh \n",
        "Line" : 225,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Zoltan - required by MSTK mesh class \n",
        "Line" : 243,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Ifpack - preconditioner package that serves as a wrapper for HYPRE\n",
        "Line" : 266,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# Now update the Trilinos_LIBRARIES and INCLUDE_DIRS\n",
        "Line" : 296,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "##############################################################################\n\n# HYPRE and its dependencies\n\n##############################################################################\n",
        "Line" : 308,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "##############################################################################\n\n# NetCDF - http://www.unidata.ucar.edu/software/netcdf/\n\n##############################################################################\n",
        "Line" : 331,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "##############################################################################\n\n# XERCES-C - http://http://xerces.apache.org/xerces-c/\n\n##############################################################################\n",
        "Line" : 354,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "##############################################################################\n\n# SEACAS\n\n##############################################################################\n",
        "Line" : 374,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "##############################################################################\n\n# CCSE - http://ccse.lbl.gov/Software/ccse_core.html\n\n##############################################################################\n",
        "Line" : 396,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "##############################################################################\n\n############################ Option Processing ###############################\n\n##############################################################################\n",
        "Line" : 418,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "##############################################################################\n\n#---------------------------- Mesh Frameworks -------------------------------#\n\n##############################################################################\n",
        "Line" : 423,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Enable ALL possible mesh frameworks\n\n#option(ENABLE_ALL_Mesh \"Build all Amanzi mesh frameworks\" OFF)\n\n#if(ENABLE_ALL_Mesh)\n\n#   set(ENABLE_STK_Mesh ON)\n\n#   set(ENABLE_MOAB_Mesh ON)\n\n#   set(ENABLE_MSTK_Mesh ON)\n\n#endif()    \n\n#set_feature_info(ALL_Mesh\n\n#                 ENABLE_ALL_Mesh\n\n#                 \"Build all available mesh frameworks\"\n\n#                )    \n",
        "Line" : 427,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "##############################################################################\n\n# STK - Sierra Mesh Tool Kit part of Trilinos\n\n##############################################################################\n",
        "Line" : 440,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "##############################################################################\n\n# MOAB - svn co https://svn.mcs.anl.gov/repos/ITAPS/MOAB/trunk MOAB\n\n##############################################################################\n",
        "Line" : 460,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "##############################################################################\n\n# MSTK - https://software.lanl.gov/MeshTools/trac/raw-attachment/wiki/WikiStart/mstk-1.80.tar.gz\n\n##############################################################################\n",
        "Line" : 485,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "##############################################################################\n\n# Silo\n\n##############################################################################\n",
        "Line" : 510,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "##############################################################################\n\n#-------------------------- Optional Libraries ------------------------------#\n\n##############################################################################\n",
        "Line" : 529,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "##############################################################################\n\n# ASCEMIO - http://www.cgns.sourceforge.net/\n\n##############################################################################\n",
        "Line" : 534,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#if (ENABLE_ASCEMIO)\n",
        "Line" : 544,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "##############################################################################\n\n# UnitTest++ - http://unittest-cpp.sourceforge.net/\n\n##############################################################################\n",
        "Line" : 562,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "##############################################################################\n\n# OpenMP - http://openmp.org/\n\n#\n\n# comment out set_feature_info per\n\n# https://software.lanl.gov/ascem/trac/ticket/413#comment:1\n\n##############################################################################\n",
        "Line" : 586,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#set_feature_info(OpenMP\n\n#                 ENABLE_OpenMP\n\n#                 \"OpenMP, multi-platform shared-memory parallel programming\"\n\n#                 )\n",
        "Line" : 593,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "##############################################################################\n\n# PETSc - http://www.mcs.anl.gov/petsc\n\n##############################################################################\n\n#option(ENABLE_PETSC \"Enable PETSc APIs in the structured mesh\" FALSE)\n",
        "Line" : 603,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# FIXME: Sloppy.\n",
        "Line" : 608,
        "CharPositionInLine" : 58
      },
      "45" : {
        "Text" : "##############################################################################\n\n# ALQUIMIA / PFLOTRAN \n\n##############################################################################\n",
        "Line" : 625,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#  if (ENABLE_PFLOTRAN)\n",
        "Line" : 634,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#  endif()\n",
        "Line" : 646,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "#  if (ENABLE_CRUNCHTOPE)\n",
        "Line" : 648,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "#  endif()\n",
        "Line" : 660,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 50
    },
    "tools/cmake/AmanziVersion.cmake" : {
      "ObjectId" : "42048e7a92ffb5d88232cbe196688045e3e3b6f2",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Amanzi Version Information:\n\n# \n\n# Information about the current source is extracted from the git repository and used to \n\n# create the version string (AMANZI_VERSION).  \n\n#\n\n# NOTE: this information won't be accessible without the full repository.\n\n#       So for releases we need to extract this and set it as part of the tarball creation.\n\n#\n\n#   * if amanzi_version.hh does not exist create it\n\n#       * if git is found\n\n#            use git to create version strings \n\n#       * else\n\n#            use statically defined version strings\n\n#       * endif\n\n#   * endif\n\n#   install amanzi_version.hh\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Get the name of the current branch.\n",
        "Line" : 32,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# too noisy command...\n\n# message(STATUS \">>>> JDM: AMANZI_GIT_STATUS:      ${AMANZI_GIT_STATUS}\")\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Put the status in a list\n",
        "Line" : 52,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Extract the first entry - reuse the AMANZI_GIT_STATUS variable\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# For now just set branch to detached - we could add a lookup for tags later\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Extract the branch name\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Extract the lastest tag of the form amanzi-*\n",
        "Line" : 66,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Get the hash of the current version\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# message(STATUS \">>>> JDM: AMANZI_GIT_GLOBAL_HASH: ${AMANZI_GIT_GLOBAL_HASH}\")\n",
        "Line" : 83,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Get the latest amanzi-* version number tag\n",
        "Line" : 85,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Put the tags in a list\n",
        "Line" : 95,
        "CharPositionInLine" : 3
      },
      "13" : {
        "Text" : "# Extract the lastest tag of the form amanzi-*\n",
        "Line" : 97,
        "CharPositionInLine" : 3
      },
      "14" : {
        "Text" : "# message(STATUS \">>>> JDM: GIT_EXEC        = ${GIT_EXECUTABLE}\")\n\n# message(STATUS \">>>> JDM: GIT_ARGS        = ${GIT_ARGS}\")\n\n# message(STATUS \">>>> JDM: RESULT_VARIABLE = ${err_occurred}\")\n\n# message(STATUS \">>>> JDM: AMANZI_GIT_LATEST_TAG = ${AMANZI_GIT_LATEST_TAG}\")\n",
        "Line" : 112,
        "CharPositionInLine" : 3
      },
      "15" : {
        "Text" : "#\n\n# Amanzi version\n\n#\n",
        "Line" : 125,
        "CharPositionInLine" : 3
      },
      "16" : {
        "Text" : "#\n\n# For releases and snapshots, set static information before creating the tarball.\n\n#\n",
        "Line" : 144,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "#\n\n# Amanzi version\n\n#\n",
        "Line" : 155,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Write the version header file\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "tools/cmake/BinaryManager.cmake" : {
      "ObjectId" : "debe5e96bc5e07bc4e553b58efa0e5e3b89f968f",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Functions for building and managing binaries.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Usage:\n\n#\n\n# ADD_AMANZI_EXECUTABLE(<target name>\n\n#                       SOURCE file1 file2 ....\n\n#                       LINK_LIBS lib1 lib2 .....\n\n#                       OUPUT_NAME name\n\n#                       OUTPUT_DIRECTORY dir\n\n#                       NO_INSTALL)\n\n# \n\n#\n\n# Arguments:\n\n#\n\n#   target CMake target name defined for this binary\n\n#\n\n#   SOURCE List of source files to compile \n\n#\n\n#   LINK_LIBS Defines the list of link libraries required to build and link target\n\n#\n\n#   OUTPUT_NAME (Optional) Set the output name to OUTPUT_NAME, will use the CMake defaults\n\n#   if this is not set.\n\n#\n\n#   OUTPUT_DIRECTORY (Optional) Set the output directory, default is CMAKE_CURRENT_BINARY_DIR\n\n#\n\n#   NO_INSTALL (Optional) All binaries defined by this function will be added to the install\n\n#   target. Use this option to not install the binary.\n\n#\n\n# \n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# --- Parse the input\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# --- Check the input\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# --- Define the executable\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# --- Add link libraries\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# --- Add target to the install target\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# --- Change the output name and directory if requested\n",
        "Line" : 63,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "tools/cmake/BuildLibraryName.cmake" : {
      "ObjectId" : "0772dac9713f52fde0b74d7dd6de02eeb2009639",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# BUILD_LIBRARY_NAME\n\n#\n\n# Usage:\n\n# BUILD_LIBRARY_NAME(library output_name [SHARED|STATIC])\n\n#\n\n# Given a library target name, return the full filename\n\n# of the library with correct suffix and prefix.\n\n# If STATIC or SHARED IS NOT set then the then suffix\n\n# and prefix are defined by BUILD_SHARED_LIBS flag.\n\n# Default is static.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set teh suffix and prefix\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "tools/cmake/CCSEOptions.cmake" : {
      "ObjectId" : "64b60eb0024106356811e1384eebdeb07509b0d3",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n\n#\n\n# Set up defines necessary to build BoxLib-based code\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#message(STATUS \"BoxLib-specific compile settings:\")\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#    message(STATUS \"   Fortran name mangling scheme to UPPERCASE (upper case, no append underscore)\")\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#    message(STATUS \"   Fortran name mangling scheme to LOWERCASE (lower case, no append underscore)\")\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#    message(STATUS \"   Fortran name mangling scheme to UNDERSCORE (lower case, append underscore)\")\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#else()\n\n#    message(AUTHOR_WARNING \"Fortran to C mangling not backward compatible with older style BoxLib code\") \n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# bandre: I think the amanzi config requires that the mpi compilers\n\n# be set through the CC/CXX/FC environment variables before cmake is\n\n# called. This is overwriting those values and causing the incorrect\n\n# values to be used?\n\n#find_package(MPI REQUIRED)\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# This adds undesirable path to the top of the search list and leads to conflicts. \n\n#if (${APPLE})\n\n#  include_directories(/usr/local/include) # For Homebrew valgrind installs\n\n#endif()\n",
        "Line" : 79,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "tools/cmake/CMakeParseArguments.cmake" : {
      "ObjectId" : "23bfb805d37df508894f293d3272f9319fedfba4",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMAKE_PARSE_ARGUMENTS(<prefix> <options> <one_value_keywords> <multi_value_keywords> args...)\n\n#\n\n# CMAKE_PARSE_ARGUMENTS() is intended to be used in macros or functions for\n\n# parsing the arguments given to that macro or function.\n\n# It processes the arguments and defines a set of variables which hold the\n\n# values of the respective options.\n\n#\n\n# The <options> argument contains all options for the respective macro,\n\n# i.e. keywords which can be used when calling the macro without any value\n\n# following, like e.g. the OPTIONAL keyword of the install() command.\n\n#\n\n# The <one_value_keywords> argument contains all keywords for this macro\n\n# which are followed by one value, like e.g. DESTINATION keyword of the\n\n# install() command.\n\n#\n\n# The <multi_value_keywords> argument contains all keywords for this macro\n\n# which can be followed by more than one value, like e.g. the TARGETS or\n\n# FILES keywords of the install() command.\n\n#\n\n# When done, CMAKE_PARSE_ARGUMENTS() will have defined for each of the\n\n# keywords listed in <options>, <one_value_keywords> and\n\n# <multi_value_keywords> a variable composed of the given <prefix>\n\n# followed by \"_\" and the name of the respective keyword.\n\n# These variables will then hold the respective value from the argument list.\n\n# For the <options> keywords this will be TRUE or FALSE.\n\n#\n\n# All remaining arguments are collected in a variable\n\n# <prefix>_UNPARSED_ARGUMENTS, this can be checked afterwards to see whether\n\n# your macro was called with unrecognized parameters.\n\n#\n\n# As an example here a my_install() macro, which takes similar arguments as the\n\n# real install() command:\n\n#\n\n#   function(MY_INSTALL)\n\n#     set(options OPTIONAL FAST)\n\n#     set(oneValueArgs DESTINATION RENAME)\n\n#     set(multiValueArgs TARGETS CONFIGURATIONS)\n\n#     cmake_parse_arguments(MY_INSTALL \"${options}\" \"${oneValueArgs}\" \"${multiValueArgs}\" ${ARGN} )\n\n#     ...\n\n#\n\n# Assume my_install() has been called like this:\n\n#   my_install(TARGETS foo bar DESTINATION bin OPTIONAL blub)\n\n#\n\n# After the cmake_parse_arguments() call the macro will have set the following\n\n# variables:\n\n#   MY_INSTALL_OPTIONAL = TRUE\n\n#   MY_INSTALL_FAST = FALSE (this option was not used when calling my_install()\n\n#   MY_INSTALL_DESTINATION = \"bin\"\n\n#   MY_INSTALL_RENAME = \"\" (was not used)\n\n#   MY_INSTALL_TARGETS = \"foo;bar\"\n\n#   MY_INSTALL_CONFIGURATIONS = \"\" (was not used)\n\n#   MY_INSTALL_UNPARSED_ARGUMENTS = \"blub\" (no value expected after \"OPTIONAL\"\n\n#\n\n# You can the continue and process these variables.\n\n#\n\n# Keywords terminate lists of values, e.g. if directly after a one_value_keyword\n\n# another recognized keyword follows, this is interpreted as the beginning of\n\n# the new option.\n\n# E.g. my_install(TARGETS foo DESTINATION OPTIONAL) would result in\n\n# MY_INSTALL_DESTINATION set to \"OPTIONAL\", but MY_INSTALL_DESTINATION would\n\n# be empty and MY_INSTALL_OPTIONAL would be set to TRUE therefor.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2010 Alexander Neundorf <neundorf@kde.org>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# FULL CMake Copyright notice\n\n#Copyright 2000-2009 Kitware, Inc., Insight Software Consortium. All rights\n\n#reserved.\n\n#\n\n#Redistribution and use in source and binary forms, with or without\n\n#modification, are permitted provided that the following conditions are met:\n\n#\n\n#\n\n#Redistributions of source code must retain the above copyright notice, this \n\n#list of conditions and the following disclaimer.\n\n#\n\n#Redistributions in binary form must reproduce the above copyright notice, \n\n#this list of conditions and the following disclaimer in the documentation \n\n#and/or other materials provided with the distribution.\n\n#\n\n#Neither the names of Kitware, Inc., the Insight Software Consortium, nor \n\n#the names of their contributors may be used to endorse or promote products \n\n#derived from this software without specific prior written permission.\n\n#\n\n#THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" \n\n#AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE \n\n#IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE \n\n#ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE \n\n#LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR \n\n#CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF \n\n#SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS \n\n#INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN \n\n#CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) \n\n#ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE \n\n#POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# \n\n# This is a very useful macro that Amanzi build uses in several places.\n\n# This macro is part of the CMake 2.8.3 distribution. We include it in the\n\n# Amanzi module directory since the minimum cmake versio for Amanzi is 2.8. \n\n#\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# first set all result variables to empty/FALSE\n",
        "Line" : 120,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# now iterate over all arguments and fill the result variables\n",
        "Line" : 134,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# ... then this marks the end of the arguments belonging to this keyword\n",
        "Line" : 136,
        "CharPositionInLine" : 57
      },
      "6" : {
        "Text" : "# ... then this marks the end of the arguments belonging to this keyword\n",
        "Line" : 137,
        "CharPositionInLine" : 63
      },
      "7" : {
        "Text" : "# ... then this marks the end of the arguments belonging to this keyword\n",
        "Line" : 138,
        "CharPositionInLine" : 61
      },
      "8" : {
        "Text" : "# propagate the result variables to the caller:\n",
        "Line" : 168,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 9
    },
    "tools/cmake/InstallManager.cmake" : {
      "ObjectId" : "934a62a56ddda496aae6a35699565fac824ba3bf",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# # -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Functions for managing the install targets\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Usage: ADD_INSTALL_INCLUDE_FILE( file1 file2 file3 ... )\n\n#\n\n# Arguments:\n\n#  A list of files that will be installed in the AMANZI_INSTALL_INCLUDE_DIR\n\n#\n\n#\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Usage: ADD_INSTALL_LIBRARY( lib1 lib2 lib3 ... )\n\n#\n\n# Arguments:\n\n#  A list of libraries that will be installed in the AMANZI_INSTALL_LIB_DIR\n\n#\n\n#\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add the libraries to our global list\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Add dependency libaries as determined by the pacakge definition.\n",
        "Line" : 52,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#\n\n# Usage: ADD_INSTALL_SHELLSCRIPT( script1 script2 ... )\n\n#\n\n# Arguments:\n\n#  A list of shell scripts that will be installed in the AMANZI_INSTALL_BIN_DIR\n\n#\n\n#\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# Usage: ADD_INSTALL_BINARY( exe1 exe2 ... )\n\n#\n\n# Arguments:\n\n#  A list of executables that will be installed in the AMANZI_INSTALL_BIN_DIR\n\n#\n\n#\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n# Usage: create_tpl_export_file( <package list> | package1 package2 ... )\n\n#\n\n# Arguments: Semicolon deliminated list of TPL package names or\n\n#            individual package names\n\n#\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Print the usage\n",
        "Line" : 104,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Parse Arguments\n",
        "Line" : 109,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# BEGIN MACROS\n",
        "Line" : 126,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Write the header for the file\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Write a CMake set variable command\n",
        "Line" : 153,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Add package to the file\n",
        "Line" : 162,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "#\n\n#     Also include CMake configuration files for the packages so that \n\n#     any recursive dependencies are discovered for linking\n\n#\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#\tmessage(status \"${_package} config dir ------ ${${_package}_DIR}\")\n\n#\tmessage(status \"${_package} config file ------ ${${_package}_config_file}\")\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Begin MAIN\n",
        "Line" : 210,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Loop through each package and update the output file\n",
        "Line" : 216,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "#print_variable(_package)\n",
        "Line" : 218,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "#\n\n# Usage: makefile_include_dirs(CMAKE_INCLUDE_LIST in_list \n\n#                               MAKE_INCLUDE_LIST out_list)\n\n# \n\n# Arguments:\n\n#          CMAKE_INCLUDE_LIST List of include directories\n\n#          MAKE_INCLUDE_LIST  List include directories for make\n\n# \n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#print_variable(PARSE_ARGS_CMAKE_INCLUDE_LIST)\n\n#print_variable(PARSE_ARGS_MAKE_INCLUDE_LIST)\n",
        "Line" : 237,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "#\n\n# Usage: makefile_library_dirs(CMAKE_LIB_LIST in_list \n\n#                              MAKE_LIB_LIST out_list)\n\n# \n\n# Arguments:\n\n#          CMAKE_LIB_LIST List of library directories\n\n#          MAKE_LIB_LIST  List library directories for make\n\n# \n",
        "Line" : 254,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#print_variable(PARSE_ARGS_CMAKE_LIB_LIST)\n\n#print_variable(PARSE_ARGS_MAKE_LIB_LIST)\n",
        "Line" : 265,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "#\n\n# Usage: create_exports\n\n#\n\n# Arguments: None\n\n#\n\n#\n",
        "Line" : 284,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Template file located in the CMake module directory\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Find the packages found for Amanzi\n",
        "Line" : 294,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Define AMANZI_INCLUDE_DIRS and AMANZI_LIBRARY_DIRS\n",
        "Line" : 298,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Convert the link line to a space deliminated string\n",
        "Line" : 318,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Write and install the link-line file\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Write the imported target file\n",
        "Line" : 327,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Write the TPL file\n",
        "Line" : 332,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Write the export Makefile and add to the include install list\n",
        "Line" : 341,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Write the AmanziConfig.cmake file\n",
        "Line" : 351,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Write the AmanziConfigVersion.cmake file\n",
        "Line" : 357,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Write the CMake configuration target file\n",
        "Line" : 363,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# XML schema \n",
        "Line" : 370,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Python update scripts\n",
        "Line" : 373,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# If MSTK utilities were found (this processing is in FindMSTK.cmake), install them in bin\n",
        "Line" : 376,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Write the evaluator registration macro file\n",
        "Line" : 381,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 40
    },
    "tools/cmake/LibraryManager.cmake" : {
      "ObjectId" : "d4ce7b588765d81cec51f39609ec0557390f09c2",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Functions for building and managing binaries.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Usage:\n\n#\n\n# ADD_AMANZI_LIBRARY(<target name>\n\n#                    SOURCE file1 file2  .....\n\n#                    [HEADERS file1 file2 .....]\n\n#                    [LINK_LIBS lib1 lib2 [link_opt1] ]\n\n#                    [STATIC] [SHARED]\n\n#                    [NO_INSTALL] [NO_INSTALL_HEADERS] )\n\n# \n\n#\n\n# Arguments:\n\n#\n\n#   target CMake target name defined for this library\n\n#\n\n#   SOURCE List of source files to compile \n\n#\n\n#   HEADERS (Optional) List of heard files associated with this library\n\n#\n\n#   LINK_LIBS (Optional) Defines the list of link libraries required to build and link target\n\n#\n\n#   SHARED STATIC (Optional) Build a SHARED or STATIC library. If neither flag is set, then\n\n#   CMake builds the library based on the BUILD_SHARED_LIBS setting. These flags can be used\n\n#   to override BUILD_SHARED_LIBS.\n\n#\n\n#   NO_INSTALL (Optional) All libraries defined by this function will be added to the install\n\n#   target. Use this option to not install the library.\n\n#\n\n#   NO_INSTALL_HEADERS (Optional) Any file found in the HEADERS variable will be added to the\n\n#   install target. Use this option to not install the library.\n\n#\n\n# \n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# --- Parse the input\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# --- Check the input\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# --- Define the library\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# --- Add link libraries\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# --- Add target to the install target\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# --- Add header files to the install target\n",
        "Line" : 77,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "tools/cmake/Modules/FindASCEMIO.cmake" : {
      "ObjectId" : "97056eccfc993eeab13e7a0516feaa2b457779c5",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Amanzi ASCEMIO Find Module\n\n#\n\n# Usage:\n\n#    Control the search through ASCEMIO_DIR or setting environment variable\n\n#    ASCEMIO_ROOT to the ASCEMIO installation prefix.\n\n#\n\n#    This module does not search default paths! \n\n#\n\n#    Following variables are set:\n\n#    ASCEMIO_FOUND            (BOOL)       Flag indicating if ASCEMIO was found\n\n#    ASCEMIO_INCLUDE_DIR      (PATH)       Path to the ASCEMIO include file\n\n#    ASCEMIO_INCLUDE_DIRS     (LIST)       List of all required include files\n\n#    ASCEMIO_LIBRARY_DIR      (PATH)       Path to the ASCEMIO library\n\n#    ASCEMIO_LIBRARY          (FILE)       ASCEMIO library\n\n#    ASCEMIO_LIBRARIES        (LIST)       List of all required ASCEMIO libraries\n\n#\n\n# #############################################################################\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Standard CMake modules see CMAKE_ROOT/Modules\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Amanzi CMake functions see <root>/tools/cmake for source\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Do nothing. Variables are set. No need to search again\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Cache variables\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Search for include files\n\n# Search order preference:\n\n#  (1) ASCEMIO_INCLUDE_DIR - check existence of path AND if the include files exist\n\n#  (2) ASCEMIO_DIR/<include>\n\n#  (3) Default CMake paths See cmake --html-help=out.html file for more information.\n\n#\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Search for libraries \n\n# Search order preference:\n\n#  (1) ASCEMIO_LIBRARY_DIR - check existence of path AND if the include files exist\n\n#  (2) ASCEMIO_DIR/<lib,Lib>\n\n#  (3) Default CMake paths See cmake --html-help=out.html file for more information.\n\n#\n",
        "Line" : 104,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Define the LIBRARIES and INCLUDE_DORS\n",
        "Line" : 157,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#add_package_dependency(ASCEMIO DEPENDS_ON HDF5)\n",
        "Line" : 168,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Send useful message if everything is found\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# find_package)handle)standard_args should set ASCEMIO_FOUND but it does not!\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "tools/cmake/Modules/FindAlquimia.cmake" : {
      "ObjectId" : "64ae654a8da3794fa8d1f9427781337105848e23",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Amanzi ALQUIMIA Find Module\n\n#\n\n# Usage:\n\n#    Control the search through ALQUIMIA_DIR or setting environment variable\n\n#    ALQUIMIA_ROOT to the ALQUIMIA installation prefix.\n\n#\n\n#    This module does not search default paths! \n\n#\n\n#    Following variables are set:\n\n#    ALQUIMIA_FOUND            (BOOL)       Flag indicating if ALQUIMIA was found\n\n#    ALQUIMIA_INCLUDE_DIR      (PATH)       Path to the ALQUIMIA include file\n\n#    ALQUIMIA_INCLUDE_DIRS     (LIST)       List of all required include files\n\n#    ALQUIMIA_LIBRARY_DIR      (PATH)       Path to the ALQUIMIA library\n\n#    ALQUIMIA_LIBRARIES        (LIST)       List of all required ALQUIMIA libraries\n\n#\n\n# #############################################################################\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Standard CMake modules see CMAKE_ROOT/Modules\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Amanzi CMake functions see <root>/tools/cmake for source\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Do nothing. Variables are set. No need to search again\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Define the LIBRARIES and INCLUDE_DIRS\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Send useful message if everything is found\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# find_package)handle)standard_args should set ALQUIMIA_FOUND but it does not!\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "tools/cmake/Modules/FindBLAS.cmake" : {
      "ObjectId" : "010c4192cf9e7e7d4b75309968a8db48ae1331c6",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find BLAS library\n\n# This module finds an installed fortran library that implements the BLAS\n\n# linear-algebra interface (see http://www.netlib.org/blas/).\n\n# The list of libraries searched for is taken\n\n# from the autoconf macro file, acx_blas.m4 (distributed at\n\n# http://ac-archive.sourceforge.net/ac-archive/acx_blas.html).\n\n#\n\n# This module sets the following variables:\n\n#  BLAS_FOUND - set to true if a library implementing the BLAS interface\n\n#    is found\n\n#  BLAS_LINKER_FLAGS - uncached list of required linker flags (excluding -l\n\n#    and -L).\n\n#  BLAS_LIBRARIES - uncached list of libraries (using full path name) to\n\n#    link against to use BLAS\n\n#  BLAS95_LIBRARIES - uncached list of libraries (using full path name)\n\n#    to link against to use BLAS95 interface\n\n#  BLAS95_FOUND - set to true if a library implementing the BLAS f95 interface\n\n#    is found\n\n#  BLA_STATIC  if set on this determines what kind of linkage we do (static)\n\n#  BLA_VENDOR  if set checks only the specified vendor, if not set checks\n\n#     all the possibilities\n\n#  BLA_F95     if set on tries to find the f95 interfaces for BLAS/LAPACK\n\n##########\n\n### List of vendors (BLA_VENDOR) valid in this module\n\n##  Goto,ATLAS PhiPACK,CXML,DXML,SunPerf,SCSL,SGIMATH,IBMESSL,Intel10_32 (intel mkl v10 32 bit),Intel10_64lp (intel mkl v10 64 bit,lp thread model, lp64 model),\n\n##  Intel10_64lp_seq (intel mkl v10 64 bit,sequential code, lp64 model),\n\n##  Intel( older versions of mkl 32 and 64 bit), ACML,ACML_MP,ACML_GPU,Apple, NAS, Generic\n\n# C/CXX should be enabled to use Intel mkl\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2007-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# FULL CMAKE COPYRIGHT NOTICE:\n\n#CMake - Cross Platform Makefile Generator\n\n#Copyright 2000-2009 Kitware, Inc., Insight Software Consortium\n\n#All rights reserved.\n\n#\n\n#Redistribution and use in source and binary forms, with or without\n\n#modification, are permitted provided that the following conditions\n\n#are met:\n\n#\n\n#* Redistributions of source code must retain the above copyright\n\n#  notice, this list of conditions and the following disclaimer.\n\n#\n\n#* Redistributions in binary form must reproduce the above copyright\n\n#  notice, this list of conditions and the following disclaimer in the\n\n#  documentation and/or other materials provided with the distribution.\n\n#\n\n#* Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#  nor the names of their contributors may be used to endorse or promote\n\n#  products derived from this software without specific prior written\n\n#  permission.\n\n#\n\n#THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n#\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n#LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n#A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n#HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n#SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n#LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n#DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n#THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n#(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n#OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n#------------------------------------------------------------------------------\n\n#\n\n#The above copyright and license notice applies to distributions of\n\n#CMake in source and binary form.  Some source files contain additional\n\n#notices of original copyright by their contributors; see each source\n\n#for details.  Third-party software packages supplied with CMake under\n\n#compatible licenses provide their own copyright notices documented in\n\n#corresponding subdirectories.\n\n#\n\n#------------------------------------------------------------------------------\n\n#\n\n#CMake was initially developed by Kitware with the following sponsorship:\n\n#\n\n# * National Library of Medicine at the National Institutes of Health\n\n#   as part of the Insight Segmentation and Registration Toolkit (ITK).\n\n#\n\n# * US National Labs (Los Alamos, Livermore, Sandia) ASC Parallel\n\n#   Visualization Initiative.\n\n#\n\n# * National Alliance for Medical Image Computing (NAMIC) is funded by the\n\n#   National Institutes of Health through the NIH Roadmap for Medical Research,\n\n#   Grant U54 EB005149.\n\n#\n\n# * Kitware, Inc.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Check the language being used\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This macro checks for the existence of the combination of fortran libraries\n\n# given by _list.  If the combination is found, this macro checks (using the\n\n# Check_Fortran_Function_Exists macro) whether can link against that library\n\n# combination using the name of a routine given by _name using the linker\n\n# flags given by _flags.  If the combination of libraries is found and passes\n\n# the link test, LIBRARIES is set to the list of complete library paths that\n\n# have been found.  Otherwise, LIBRARIES is set to FALSE.\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# N.B. _prefix is the prefix applied to the names of all cached variables that\n\n# are generated internally and marked advanced by this macro.\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# for ubuntu's libblas3gf and liblapack3gf packages\n",
        "Line" : 163,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Test this combination of libraries.\n",
        "Line" : 177,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#message(\"DEBUG: CMAKE_REQUIRED_LIBRARIES = ${CMAKE_REQUIRED_LIBRARIES}\")\n",
        "Line" : 179,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#message(\"DEBUG: ${LIBRARIES} = ${${LIBRARIES}}\")\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# gotoblas (http://www.tacc.utexas.edu/tacc-projects/gotoblas2)\n",
        "Line" : 208,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# BLAS in ATLAS library? (http://math-atlas.sourceforge.net/)\n",
        "Line" : 222,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# BLAS in PhiPACK libraries? (requires generic BLAS lib, too)\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# BLAS in Alpha CXML library?\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# BLAS in Alpha DXML library? (now called CXML, see above)\n",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# BLAS in Sun Performance library?\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# BLAS in SCSL library?  (SGI/Cray Scientific Library)\n",
        "Line" : 293,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# BLAS in SGIMATH library?\n",
        "Line" : 307,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# BLAS in IBM ESSL library? (requires generic BLAS lib, too)\n",
        "Line" : 321,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#BLAS in acml library?\n",
        "Line" : 335,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# try to find acml in \"standard\" paths\n",
        "Line" : 341,
        "CharPositionInLine" : 3
      },
      "21" : {
        "Text" : "# 32 bit builds not supported on Open64 but for code simplicity\n\n# We'll just use the same directory twice\n",
        "Line" : 379,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "#if( CMAKE_Fortran_COMPILER_ID STREQUAL \"GNU\" )\n",
        "Line" : 386,
        "CharPositionInLine" : 10
      },
      "23" : {
        "Text" : "#if( _BLAS_VENDOR STREQUAL \"ACML\" )\n",
        "Line" : 395,
        "CharPositionInLine" : 10
      },
      "24" : {
        "Text" : "#if( _BLAS_VENDOR STREQUAL \"ACML\" )\n",
        "Line" : 429,
        "CharPositionInLine" : 8
      },
      "25" : {
        "Text" : "# Either acml or acml_mp should be in LD_LIBRARY_PATH but not both\n",
        "Line" : 443,
        "CharPositionInLine" : 1
      },
      "26" : {
        "Text" : "# ACML\n",
        "Line" : 474,
        "CharPositionInLine" : 9
      },
      "27" : {
        "Text" : "# Apple BLAS library?\n",
        "Line" : 476,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Generic BLAS library?\n",
        "Line" : 502,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#BLAS in intel mkl 10 library? (em64t 64bit)\n",
        "Line" : 516,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# old version\n",
        "Line" : 542,
        "CharPositionInLine" : 8
      },
      "31" : {
        "Text" : "# mkl >= 10.3\n",
        "Line" : 546,
        "CharPositionInLine" : 8
      },
      "32" : {
        "Text" : "# old version\n",
        "Line" : 574,
        "CharPositionInLine" : 8
      },
      "33" : {
        "Text" : "# mkl >= 10.3\n",
        "Line" : 578,
        "CharPositionInLine" : 8
      },
      "34" : {
        "Text" : "#older vesions of intel mkl libs\n",
        "Line" : 589,
        "CharPositionInLine" : 6
      },
      "35" : {
        "Text" : "# lpritch: The environment variables are based on cray-libsci\n\n# version 11.1.00. Tested against gnu, intel and pgi programming\n\n# environemts on hopper.ersc.gov. Will likely change in future\n\n# releases.\n",
        "Line" : 627,
        "CharPositionInLine" : 6
      },
      "36" : {
        "Text" : "# Cray installs these libraries by compiler name and version\n",
        "Line" : 632,
        "CharPositionInLine" : 6
      },
      "37" : {
        "Text" : "# Search for dgemm\n",
        "Line" : 652,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 38
    },
    "tools/cmake/Modules/FindBoost.cmake" : {
      "ObjectId" : "1771d1bc060519e23606e57e1a478ace55c120b8",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindBoost\n\n# ---------\n\n#\n\n# Find Boost include dirs and libraries\n\n#\n\n# Use this module by invoking find_package with the form::\n\n#\n\n#   find_package(Boost\n\n#     [version] [EXACT]      # Minimum or EXACT version e.g. 1.67.0\n\n#     [REQUIRED]             # Fail with error if Boost is not found\n\n#     [COMPONENTS <libs>...] # Boost libraries by their canonical name\n\n#                            # e.g. \"date_time\" for \"libboost_date_time\"\n\n#     [OPTIONAL_COMPONENTS <libs>...]\n\n#                            # Optional Boost libraries by their canonical name)\n\n#     )                      # e.g. \"date_time\" for \"libboost_date_time\"\n\n#\n\n# This module finds headers and requested component libraries OR a CMake\n\n# package configuration file provided by a \"Boost CMake\" build.  For the\n\n# latter case skip to the \"Boost CMake\" section below.  For the former\n\n# case results are reported in variables::\n\n#\n\n#   Boost_FOUND            - True if headers and requested libraries were found\n\n#   Boost_INCLUDE_DIRS     - Boost include directories\n\n#   Boost_LIBRARY_DIRS     - Link directories for Boost libraries\n\n#   Boost_LIBRARIES        - Boost component libraries to be linked\n\n#   Boost_<C>_FOUND        - True if component <C> was found (<C> is upper-case)\n\n#   Boost_<C>_LIBRARY      - Libraries to link for component <C> (may include\n\n#                            target_link_libraries debug/optimized keywords)\n\n#   Boost_VERSION          - BOOST_VERSION value from boost/version.hpp\n\n#   Boost_LIB_VERSION      - Version string appended to library filenames\n\n#   Boost_MAJOR_VERSION    - Boost major version number (X in X.y.z)\n\n#   Boost_MINOR_VERSION    - Boost minor version number (Y in x.Y.z)\n\n#   Boost_SUBMINOR_VERSION - Boost subminor version number (Z in x.y.Z)\n\n#   Boost_LIB_DIAGNOSTIC_DEFINITIONS (Windows)\n\n#                          - Pass to add_definitions() to have diagnostic\n\n#                            information about Boost's automatic linking\n\n#                            displayed during compilation\n\n#\n\n# Note that Boost Python components require a Python version suffix\n\n# (Boost 1.67 and later), e.g. ``python36`` or ``python27`` for the\n\n# versions built against Python 3.6 and 2.7, respectively.  This also\n\n# applies to additional components using Python including\n\n# ``mpi_python`` and ``numpy``.  Earlier Boost releases may use\n\n# distribution-specific suffixes such as ``2``, ``3`` or ``2.7``.\n\n# These may also be used as suffixes, but note that they are not\n\n# portable.\n\n#\n\n# This module reads hints about search locations from variables::\n\n#\n\n#   BOOST_ROOT             - Preferred installation prefix\n\n#    (or BOOSTROOT)\n\n#   BOOST_INCLUDEDIR       - Preferred include directory e.g. <prefix>/include\n\n#   BOOST_LIBRARYDIR       - Preferred library directory e.g. <prefix>/lib\n\n#   Boost_NO_SYSTEM_PATHS  - Set to ON to disable searching in locations not\n\n#                            specified by these hint variables. Default is OFF.\n\n#   Boost_ADDITIONAL_VERSIONS\n\n#                          - List of Boost versions not known to this module\n\n#                            (Boost install locations may contain the version)\n\n#\n\n# and saves search results persistently in CMake cache entries::\n\n#\n\n#   Boost_INCLUDE_DIR         - Directory containing Boost headers\n\n#   Boost_LIBRARY_DIR_RELEASE - Directory containing release Boost libraries\n\n#   Boost_LIBRARY_DIR_DEBUG   - Directory containing debug Boost libraries\n\n#   Boost_<C>_LIBRARY_DEBUG   - Component <C> library debug variant\n\n#   Boost_<C>_LIBRARY_RELEASE - Component <C> library release variant\n\n#\n\n# The following :prop_tgt:`IMPORTED` targets are also defined::\n\n#\n\n#   Boost::boost                  - Target for header-only dependencies\n\n#                                   (Boost include directory)\n\n#   Boost::<C>                    - Target for specific component dependency\n\n#                                   (shared or static library); <C> is lower-\n\n#                                   case\n\n#   Boost::diagnostic_definitions - interface target to enable diagnostic\n\n#                                   information about Boost's automatic linking\n\n#                                   during compilation (adds BOOST_LIB_DIAGNOSTIC)\n\n#   Boost::disable_autolinking    - interface target to disable automatic\n\n#                                   linking with MSVC (adds BOOST_ALL_NO_LIB)\n\n#   Boost::dynamic_linking        - interface target to enable dynamic linking\n\n#                                   linking with MSVC (adds BOOST_ALL_DYN_LINK)\n\n#\n\n# Implicit dependencies such as Boost::filesystem requiring\n\n# Boost::system will be automatically detected and satisfied, even\n\n# if system is not specified when using find_package and if\n\n# Boost::system is not added to target_link_libraries.  If using\n\n# Boost::thread, then Threads::Threads will also be added automatically.\n\n#\n\n# It is important to note that the imported targets behave differently\n\n# than variables created by this module: multiple calls to\n\n# find_package(Boost) in the same directory or sub-directories with\n\n# different options (e.g. static or shared) will not override the\n\n# values of the targets created by the first call.\n\n#\n\n# Users may set these hints or results as cache entries.  Projects\n\n# should not read these entries directly but instead use the above\n\n# result variables.  Note that some hint names start in upper-case\n\n# \"BOOST\".  One may specify these as environment variables if they are\n\n# not specified as CMake variables or cache entries.\n\n#\n\n# This module first searches for the Boost header files using the above\n\n# hint variables (excluding BOOST_LIBRARYDIR) and saves the result in\n\n# Boost_INCLUDE_DIR.  Then it searches for requested component libraries\n\n# using the above hints (excluding BOOST_INCLUDEDIR and\n\n# Boost_ADDITIONAL_VERSIONS), \"lib\" directories near Boost_INCLUDE_DIR,\n\n# and the library name configuration settings below.  It saves the\n\n# library directories in Boost_LIBRARY_DIR_DEBUG and\n\n# Boost_LIBRARY_DIR_RELEASE and individual library\n\n# locations in Boost_<C>_LIBRARY_DEBUG and Boost_<C>_LIBRARY_RELEASE.\n\n# When one changes settings used by previous searches in the same build\n\n# tree (excluding environment variables) this module discards previous\n\n# search results affected by the changes and searches again.\n\n#\n\n# Boost libraries come in many variants encoded in their file name.\n\n# Users or projects may tell this module which variant to find by\n\n# setting variables::\n\n#\n\n#   Boost_USE_DEBUG_LIBS     - Set to ON or OFF to specify whether to search\n\n#                              and use the debug libraries.  Default is ON.\n\n#   Boost_USE_RELEASE_LIBS   - Set to ON or OFF to specify whether to search\n\n#                              and use the release libraries.  Default is ON.\n\n#   Boost_USE_MULTITHREADED  - Set to OFF to use the non-multithreaded\n\n#                              libraries ('mt' tag).  Default is ON.\n\n#   Boost_USE_STATIC_LIBS    - Set to ON to force the use of the static\n\n#                              libraries.  Default is OFF.\n\n#   Boost_USE_STATIC_RUNTIME - Set to ON or OFF to specify whether to use\n\n#                              libraries linked statically to the C++ runtime\n\n#                              ('s' tag).  Default is platform dependent.\n\n#   Boost_USE_DEBUG_RUNTIME  - Set to ON or OFF to specify whether to use\n\n#                              libraries linked to the MS debug C++ runtime\n\n#                              ('g' tag).  Default is ON.\n\n#   Boost_USE_DEBUG_PYTHON   - Set to ON to use libraries compiled with a\n\n#                              debug Python build ('y' tag). Default is OFF.\n\n#   Boost_USE_STLPORT        - Set to ON to use libraries compiled with\n\n#                              STLPort ('p' tag).  Default is OFF.\n\n#   Boost_USE_STLPORT_DEPRECATED_NATIVE_IOSTREAMS\n\n#                            - Set to ON to use libraries compiled with\n\n#                              STLPort deprecated \"native iostreams\"\n\n#                              ('n' tag).  Default is OFF.\n\n#   Boost_COMPILER           - Set to the compiler-specific library suffix\n\n#                              (e.g. \"-gcc43\").  Default is auto-computed\n\n#                              for the C++ compiler in use.  A list may be\n\n#                              used if multiple compatible suffixes should\n\n#                              be tested for, in decreasing order of\n\n#                              preference.\n\n#   Boost_THREADAPI          - Suffix for \"thread\" component library name,\n\n#                              such as \"pthread\" or \"win32\".  Names with\n\n#                              and without this suffix will both be tried.\n\n#   Boost_NAMESPACE          - Alternate namespace used to build boost with\n\n#                              e.g. if set to \"myboost\", will search for\n\n#                              myboost_thread instead of boost_thread.\n\n#\n\n# Other variables one may set to control this module are::\n\n#\n\n#   Boost_DEBUG              - Set to ON to enable debug output from FindBoost.\n\n#                              Please enable this before filing any bug report.\n\n#   Boost_DETAILED_FAILURE_MSG\n\n#                            - Set to ON to add detailed information to the\n\n#                              failure message even when the REQUIRED option\n\n#                              is not given to the find_package call.\n\n#   Boost_REALPATH           - Set to ON to resolve symlinks for discovered\n\n#                              libraries to assist with packaging.  For example,\n\n#                              the \"system\" component library may be resolved to\n\n#                              \"/usr/lib/libboost_system.so.1.67.0\" instead of\n\n#                              \"/usr/lib/libboost_system.so\".  This does not\n\n#                              affect linking and should not be enabled unless\n\n#                              the user needs this information.\n\n#   Boost_LIBRARY_DIR        - Default value for Boost_LIBRARY_DIR_RELEASE and\n\n#                              Boost_LIBRARY_DIR_DEBUG.\n\n#\n\n# On Visual Studio and Borland compilers Boost headers request automatic\n\n# linking to corresponding libraries.  This requires matching libraries\n\n# to be linked explicitly or available in the link library search path.\n\n# In this case setting Boost_USE_STATIC_LIBS to OFF may not achieve\n\n# dynamic linking.  Boost automatic linking typically requests static\n\n# libraries with a few exceptions (such as Boost.Python).  Use::\n\n#\n\n#   add_definitions(${Boost_LIB_DIAGNOSTIC_DEFINITIONS})\n\n#\n\n# to ask Boost to report information about automatic linking requests.\n\n#\n\n# Example to find Boost headers only::\n\n#\n\n#   find_package(Boost 1.36.0)\n\n#   if(Boost_FOUND)\n\n#     include_directories(${Boost_INCLUDE_DIRS})\n\n#     add_executable(foo foo.cc)\n\n#   endif()\n\n#\n\n# Example to find Boost libraries and use imported targets::\n\n#\n\n#   find_package(Boost 1.56 REQUIRED COMPONENTS\n\n#                date_time filesystem iostreams)\n\n#   add_executable(foo foo.cc)\n\n#   target_link_libraries(foo Boost::date_time Boost::filesystem\n\n#                             Boost::iostreams)\n\n#\n\n# Example to find Boost Python 3.6 libraries and use imported targets::\n\n#\n\n#   find_package(Boost 1.67 REQUIRED COMPONENTS\n\n#                python36 numpy36)\n\n#   add_executable(foo foo.cc)\n\n#   target_link_libraries(foo Boost::python36 Boost::numpy36)\n\n#\n\n# Example to find Boost headers and some *static* (release only) libraries::\n\n#\n\n#   set(Boost_USE_STATIC_LIBS        ON)  # only find static libs\n\n#   set(Boost_USE_DEBUG_LIBS         OFF) # ignore debug libs and\n\n#   set(Boost_USE_RELEASE_LIBS       ON)  # only find release libs\n\n#   set(Boost_USE_MULTITHREADED      ON)\n\n#   set(Boost_USE_STATIC_RUNTIME    OFF)\n\n#   find_package(Boost 1.66.0 COMPONENTS date_time filesystem system ...)\n\n#   if(Boost_FOUND)\n\n#     include_directories(${Boost_INCLUDE_DIRS})\n\n#     add_executable(foo foo.cc)\n\n#     target_link_libraries(foo ${Boost_LIBRARIES})\n\n#   endif()\n\n#\n\n# Boost CMake\n\n# ^^^^^^^^^^^\n\n#\n\n# If Boost was built using the boost-cmake project it provides a package\n\n# configuration file for use with find_package's Config mode.  This\n\n# module looks for the package configuration file called\n\n# BoostConfig.cmake or boost-config.cmake and stores the result in cache\n\n# entry \"Boost_DIR\".  If found, the package configuration file is loaded\n\n# and this module returns with no further action.  See documentation of\n\n# the Boost CMake package configuration for details on what it provides.\n\n#\n\n# Set Boost_NO_BOOST_CMAKE to ON to disable the search for boost-cmake.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Save project's policies\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# if IN_LIST\n",
        "Line" : 238,
        "CharPositionInLine" : 30
      },
      "4" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# Before we go searching, check whether boost-cmake is available, unless the\n\n# user specifically asked NOT to search for boost-cmake.\n\n#\n\n# If Boost_DIR is set, this behaves as any find_package call would. If not,\n\n# it looks at BOOST_ROOT and BOOSTROOT to find Boost.\n\n#\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If Boost_DIR is not set, look for BOOSTROOT and BOOST_ROOT as alternatives,\n\n# since these are more conventional for Boost.\n",
        "Line" : 248,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Do the same find_package call but look specifically for the CMake version.\n\n# Note that args are passed in the Boost_FIND_xxxxx variables, so there is no\n\n# need to delegate them to this find_package call.\n",
        "Line" : 258,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# If we found boost-cmake, then we're done.  Print out what we found.\n\n# Otherwise let the rest of the module try to find it.\n",
        "Line" : 264,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Restore project's policies\n",
        "Line" : 271,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#  FindBoost functions & macros\n\n#\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "############################################\n\n#\n\n# Check the existence of the libraries.\n\n#\n\n############################################\n\n# This macro was taken directly from the FindQt4.cmake file that is included\n\n# with the CMake distribution. This is NOT my work. All work was done by the\n\n# original authors of the FindQt4.cmake file. Only minor modifications were\n\n# made to remove references to Qt and make this file more generally applicable\n\n# And ELSE/ENDIF pairs were removed for readability.\n\n#########################################################################\n",
        "Line" : 282,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# if the generator is multi-config or if CMAKE_BUILD_TYPE is set for\n\n# single-config generators, set optimized and debug libraries\n",
        "Line" : 297,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# For single-config generators where CMAKE_BUILD_TYPE has no value,\n\n# just use the release libraries\n",
        "Line" : 303,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# FIXME: This probably should be set for both cases\n",
        "Line" : 307,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# if only the release version was found, set the debug variable also to the release version\n",
        "Line" : 311,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# if only the debug version was found, set the release variable also to the debug version\n",
        "Line" : 318,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# If the debug & release library ends up being the same, omit the keywords\n",
        "Line" : 325,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Make variables changeable to the advanced user\n",
        "Line" : 340,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Detect changes in used variables.\n\n# Compares the current variable value with the last one.\n\n# In short form:\n\n# v != v_LAST                      -> CHANGED = 1\n\n# v is defined, v_LAST not         -> CHANGED = 1\n\n# v is not defined, but v_LAST is  -> CHANGED = 1\n\n# otherwise                        -> CHANGED = 0\n\n# CHANGED is returned in variable named ${changed_var}\n",
        "Line" : 347,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#\n\n# Find the given library (var).\n\n# Use 'build_type' to support different lib paths for RELEASE or DEBUG builds\n\n#\n",
        "Line" : 377,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# If this is the first library found then save Boost_LIBRARY_DIR_[RELEASE,DEBUG].\n",
        "Line" : 386,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Try component-specific hints but do not save Boost_LIBRARY_DIR_[RELEASE,DEBUG].\n",
        "Line" : 392,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# If Boost_LIBRARY_DIR_[RELEASE,DEBUG] is known then search only there.\n",
        "Line" : 396,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 407,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\n\n# Runs compiler with \"-dumpversion\" and parses major/minor\n\n# version with a regex.\n\n#\n",
        "Line" : 409,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#\n\n# Take a list of libraries with \"thread\" in it\n\n# and prepend duplicates with \"thread_${Boost_THREADAPI}\"\n\n# at the front of the list\n\n#\n",
        "Line" : 420,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#\n\n# If a library is found, replace its cache entry with its REALPATH\n\n#\n",
        "Line" : 431,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Guesses Boost's compiler prefix used in built library names\n\n# Returns the guess by setting the variable pointed to by _ret\n",
        "Line" : 449,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Good luck!\n",
        "Line" : 477,
        "CharPositionInLine" : 59
      },
      "29" : {
        "Text" : "# yes, this is correct\n",
        "Line" : 478,
        "CharPositionInLine" : 34
      },
      "30" : {
        "Text" : "# VS 6.0 Good luck!\n",
        "Line" : 479,
        "CharPositionInLine" : 11
      },
      "31" : {
        "Text" : "# yes, this is correct\n",
        "Line" : 480,
        "CharPositionInLine" : 34
      },
      "32" : {
        "Text" : "# no GCC version encoding prior to 1.34\n",
        "Line" : 490,
        "CharPositionInLine" : 36
      },
      "33" : {
        "Text" : "# no GCC version encoding prior to 1.34\n",
        "Line" : 498,
        "CharPositionInLine" : 36
      },
      "34" : {
        "Text" : "# Determine which version of GCC we have.\n",
        "Line" : 501,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : "# In Boost 1.36.0 and newer, the mangled compiler name used\n\n# on Mac OS X/Darwin is \"xgcc\".\n",
        "Line" : 505,
        "CharPositionInLine" : 14
      },
      "36" : {
        "Text" : "# In Boost <= 1.35.0, there is no mangled compiler name for\n\n# the Mac OS X/Darwin version of GCC.\n",
        "Line" : 509,
        "CharPositionInLine" : 14
      },
      "37" : {
        "Text" : "# We don't know the Boost version, so assume it's\n\n# pre-1.36.0.\n",
        "Line" : 514,
        "CharPositionInLine" : 12
      },
      "38" : {
        "Text" : "# TODO at least Boost_DEBUG here?\n",
        "Line" : 524,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "#\n\n# Get component dependencies.  Requires the dependencies to have been\n\n# defined for the Boost release version.\n\n#\n\n# component - the component to check\n\n# _ret - list of library dependencies\n\n#\n",
        "Line" : 530,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Note: to add a new Boost release, run\n\n#\n\n#   % cmake -DBOOST_DIR=/path/to/boost/source -P Utilities/Scripts/BoostScanDeps.cmake\n\n#\n\n# The output may be added in a new block below.  If it's the same as\n\n# the previous release, simply update the version range of the block\n\n# for the previous release.  Also check if any new components have\n\n# been added, and add any new components to\n\n# _Boost_COMPONENT_HEADERS.\n\n#\n\n# This information was originally generated by running\n\n# BoostScanDeps.cmake against every boost release to date supported\n\n# by FindBoost:\n\n#\n\n#   % for version in /path/to/boost/sources/*\n\n#     do\n\n#       cmake -DBOOST_DIR=$version -P Utilities/Scripts/BoostScanDeps.cmake\n\n#     done\n\n#\n\n# The output was then updated by search and replace with these regexes:\n\n#\n\n# - Strip message(STATUS) prefix dashes\n\n#   s;^-- ;;\n\n# - Indent\n\n#   s;^set(;    set(;;\n\n# - Add conditionals\n\n#   s;Scanning /path/to/boost/sources/boost_\\(.*\\)_\\(.*\\)_\\(.*);  elseif(NOT Boost_VERSION VERSION_LESS \\10\\20\\3 AND Boost_VERSION VERSION_LESS xxxx);\n\n#\n\n# This results in the logic seen below, but will require the xxxx\n\n# replacing with the following Boost release version (or the next\n\n# minor version to be released, e.g. 1.59 was the latest at the time\n\n# of writing, making 1.60 the next, so 106000 is the needed version\n\n# number).  Identical consecutive releases were then merged together\n\n# by updating the end range of the first block and removing the\n\n# following redundant blocks.\n\n#\n\n# Running the script against all historical releases should be\n\n# required only if the BoostScanDeps.cmake script logic is changed.\n\n# The addition of a new release should only require it to be run\n\n# against the new release.\n",
        "Line" : 538,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# Handle Python version suffixes\n",
        "Line" : 579,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# message(STATUS \"Dependencies for Boost::${component}: ${_boost_DEPS_STRING}\")\n",
        "Line" : 851,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "#\n\n# Get component headers.  This is the primary header (or headers) for\n\n# a given component, and is used to check that the headers are present\n\n# as well as the library itself as an extra sanity check of the build\n\n# environment.\n\n#\n\n# component - the component to check\n\n# _hdrs\n\n#\n",
        "Line" : 854,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Handle Python version suffixes\n",
        "Line" : 864,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "# Note: new boost components will require adding here.  The header\n\n# must be present in all versions of Boost providing a library.\n",
        "Line" : 870,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "# message(STATUS \"Headers for Boost::${component}: ${_boost_HDRS_STRING}\")\n",
        "Line" : 924,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "#\n\n# Determine if any missing dependencies require adding to the component list.\n\n#\n\n# Sets _Boost_${COMPONENT}_DEPENDENCIES for each required component,\n\n# plus _Boost_IMPORTED_TARGETS (TRUE if imported targets should be\n\n# defined; FALSE if dependency information is unavailable).\n\n#\n\n# componentvar - the component list variable name\n\n# extravar - the indirect dependency list variable name\n\n#\n\n#\n",
        "Line" : 927,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# _boost_unprocessed_components - list of components requiring processing\n\n# _boost_processed_components - components already processed (or currently being processed)\n\n# _boost_new_components - new components discovered for future processing\n\n#\n",
        "Line" : 939,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "#\n\n# Some boost libraries may require particular set of compler features.\n\n# The very first one was `boost::fiber` introduced in Boost 1.62.\n\n# One can check required compiler features of it in\n\n# `${Boost_ROOT}/libs/fiber/build/Jamfile.v2`.\n\n#\n",
        "Line" : 970,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Boost >= 1.62 and < 1.67\n",
        "Line" : 977,
        "CharPositionInLine" : 2
      },
      "51" : {
        "Text" : "#\n\n# Update library search directory hint variable with paths used by prebuilt boost binaries.\n\n#\n\n# Prebuilt windows binaries (https://sourceforge.net/projects/boost/files/boost-binaries/)\n\n# have library directories named using MSVC compiler version and architecture.\n\n# This function would append corresponding directories if MSVC is a current compiler,\n\n# so having `BOOST_ROOT` would be enough to specify to find everything.\n\n#\n",
        "Line" : 997,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "#\n\n# End functions/macros\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1032,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# main.\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1037,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# If the user sets Boost_LIBRARY_DIR, use it as the default for both\n\n# configurations.\n",
        "Line" : 1042,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# Check the version of Boost against the requested version.\n",
        "Line" : 1064,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# The version may appear in a directory with or without the patch\n\n# level, even when the patch level is non-zero.\n",
        "Line" : 1070,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "# The user has not requested an exact version.  Among known\n\n# versions, find those that are acceptable to the user request.\n\n#\n\n# Note: When adding a new Boost release, also update the dependency\n\n# information in _Boost_COMPONENT_DEPENDENCIES and\n\n# _Boost_COMPONENT_HEADERS.  See the instructions at the top of\n\n# _Boost_COMPONENT_DEPENDENCIES.\n",
        "Line" : 1076,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# Select acceptable versions.\n",
        "Line" : 1097,
        "CharPositionInLine" : 4
      },
      "59" : {
        "Text" : "# This version is high enough.\n",
        "Line" : 1100,
        "CharPositionInLine" : 8
      },
      "60" : {
        "Text" : "# This version is a short-form for the requested version with\n\n# the patch level dropped.\n",
        "Line" : 1103,
        "CharPositionInLine" : 8
      },
      "61" : {
        "Text" : "# Any version is acceptable.\n",
        "Line" : 1109,
        "CharPositionInLine" : 4
      },
      "62" : {
        "Text" : "# The reason that we failed to find Boost. This will be set to a\n\n# user-friendly message when we fail to find some necessary piece of\n\n# Boost.\n",
        "Line" : 1114,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# Output some of their choices\n",
        "Line" : 1120,
        "CharPositionInLine" : 2
      },
      "64" : {
        "Text" : "# Supply Boost_LIB_DIAGNOSTIC_DEFINITIONS as a convenience target. It\n\n# will only contain any interface definitions on WIN32, but is created\n\n# on all platforms to keep end user code free from platform dependent\n\n# code.  Also provide convenience targets to disable autolinking and\n\n# enable dynamic linking.\n",
        "Line" : 1135,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# In windows, automatic linking is performed, so you do not have\n\n# to specify the libraries.  If you are linking to a dynamic\n\n# runtime, then you can choose to link to either a static or a\n\n# dynamic Boost library, the default is to do a static link.  You\n\n# can alter this for a specific library \"whatever\" by defining\n\n# BOOST_WHATEVER_DYN_LINK to force Boost library \"whatever\" to be\n\n# linked dynamically.  Alternatively you can force all Boost\n\n# libraries to dynamic link by defining BOOST_ALL_DYN_LINK.\n",
        "Line" : 1146,
        "CharPositionInLine" : 2
      },
      "66" : {
        "Text" : "# This feature can be disabled for Boost library \"whatever\" by\n\n# defining BOOST_WHATEVER_NO_LIB, or for all of Boost by defining\n\n# BOOST_ALL_NO_LIB.\n",
        "Line" : 1155,
        "CharPositionInLine" : 2
      },
      "67" : {
        "Text" : "# If you want to observe which libraries are being linked against\n\n# then defining BOOST_LIB_DIAGNOSTIC will cause the auto-linking\n\n# code to emit a #pragma message each time a library is selected\n\n# for linking.\n",
        "Line" : 1159,
        "CharPositionInLine" : 2
      },
      "68" : {
        "Text" : "# Collect environment variable inputs as hints.  Do not consider changes.\n",
        "Line" : 1176,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# Collect inputs and cached results.  Detect changes since the last run.\n",
        "Line" : 1189,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Search for Boost include DIR\n\n# ------------------------------------------------------------------------\n",
        "Line" : 1211,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Clear Boost_INCLUDE_DIR if it did not change but other input affecting the\n\n# location did.  We will find a new one based on the new inputs.\n",
        "Line" : 1217,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# Try to find Boost by stepping backwards through the Boost versions\n\n# we know about.\n\n# Build a list of path suffixes for each version.\n",
        "Line" : 1253,
        "CharPositionInLine" : 2
      },
      "73" : {
        "Text" : "# Add in a path suffix, based on the required version, ideally\n\n# we could read this from version.hpp, but for that to work we'd\n\n# need to know the include dir already\n",
        "Line" : 1258,
        "CharPositionInLine" : 4
      },
      "74" : {
        "Text" : "# Transform 1.35 => 1_35 and 1.36.0 => 1_36_0\n",
        "Line" : 1263,
        "CharPositionInLine" : 4
      },
      "75" : {
        "Text" : "# Look for a standard boost header file.\n",
        "Line" : 1290,
        "CharPositionInLine" : 2
      },
      "76" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Extract version information from version.hpp\n\n# ------------------------------------------------------------------------\n",
        "Line" : 1298,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# Set Boost_FOUND based only on header location and version.\n\n# It will be updated below for component libraries.\n",
        "Line" : 1302,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# Extract Boost_VERSION and Boost_LIB_VERSION from version.hpp\n",
        "Line" : 1310,
        "CharPositionInLine" : 2
      },
      "79" : {
        "Text" : "# Set Boost_FOUND based on requested version.\n",
        "Line" : 1336,
        "CharPositionInLine" : 4
      },
      "80" : {
        "Text" : "# State that we found a version of Boost that is too new or too old.\n",
        "Line" : 1349,
        "CharPositionInLine" : 6
      },
      "81" : {
        "Text" : "# Caller will accept any Boost version.\n",
        "Line" : 1362,
        "CharPositionInLine" : 4
      },
      "82" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Prefix initialization\n\n# ------------------------------------------------------------------------\n",
        "Line" : 1371,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Suffix initialization and compiler suffix detection.\n\n# ------------------------------------------------------------------------\n",
        "Line" : 1385,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# Setting some more suffixes for the library\n",
        "Line" : 1402,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# Attempt to guess the compiler suffix\n\n# NOTE: this is not perfect yet, if you experience any issues\n\n# please report them and use the Boost_COMPILER variable\n\n# to work around the problems.\n",
        "Line" : 1410,
        "CharPositionInLine" : 2
      },
      "86" : {
        "Text" : "#======================\n\n# Systematically build up the Boost ABI tag for the 'tagged' and 'versioned' layouts\n\n# http://boost.org/doc/libs/1_66_0/more/getting_started/windows.html#library-naming\n\n# http://boost.org/doc/libs/1_66_0/boost/config/auto_link.hpp\n\n# http://boost.org/doc/libs/1_66_0/tools/build/src/tools/common.jam\n\n# http://boost.org/doc/libs/1_66_0/boostcpp.jam\n",
        "Line" : 1430,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# Key       Use this library when:\n\n#  s        linking statically to the C++ standard library and\n\n#           compiler runtime support libraries.\n",
        "Line" : 1438,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "#  g        using debug versions of the standard and runtime\n\n#           support libraries\n",
        "Line" : 1445,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "#  y        using special debug build of python\n",
        "Line" : 1454,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "#  d        using a debug version of your code\n",
        "Line" : 1458,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "#  p        using the STLport standard library rather than the\n\n#           default one supplied with your compiler\n",
        "Line" : 1460,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "#  n        using the STLport deprecated \"native iostreams\" feature\n\n#           removed from the documentation in 1.43.0 but still present in\n\n#           boost/config/auto_link.hpp\n",
        "Line" : 1466,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "#  -x86     Architecture and address model tag\n\n#           First character is the architecture, then word-size, either 32 or 64\n\n#           Only used in 'versioned' layout, added in Boost 1.66.0\n",
        "Line" : 1474,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "# {CMAKE_CXX_COMPILER_ARCHITECTURE_ID} is not currently set for all compilers\n",
        "Line" : 1478,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "# This needs to be kept in-sync with the section of CMakePlatformId.h.in\n\n# inside 'defined(_WIN32) && defined(_MSC_VER)'\n",
        "Line" : 1481,
        "CharPositionInLine" : 2
      },
      "96" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Begin finding boost libraries\n\n# ------------------------------------------------------------------------\n",
        "Line" : 1508,
        "CharPositionInLine" : 0
      },
      "97" : {
        "Text" : "# Clear Boost_LIBRARY_DIR_${c} if it did not change but other input affecting the\n\n# location did.  We will find a new one based on the new inputs.\n",
        "Line" : 1517,
        "CharPositionInLine" : 2
      },
      "98" : {
        "Text" : "# If Boost_LIBRARY_DIR_[RELEASE,DEBUG] is set, prefer its value.\n",
        "Line" : 1523,
        "CharPositionInLine" : 2
      },
      "99" : {
        "Text" : "# Support preference of static libs by adjusting CMAKE_FIND_LIBRARY_SUFFIXES\n",
        "Line" : 1572,
        "CharPositionInLine" : 0
      },
      "100" : {
        "Text" : "# We want to use the tag inline below without risking double dashes\n",
        "Line" : 1582,
        "CharPositionInLine" : 0
      },
      "101" : {
        "Text" : "# The previous behavior of FindBoost when Boost_USE_STATIC_LIBS was enabled\n\n# on WIN32 was to:\n\n#  1. Search for static libs compiled against a SHARED C++ standard runtime library (use if found)\n\n#  2. Search for static libs compiled against a STATIC C++ standard runtime library (use if found)\n\n# We maintain this behavior since changing it could break people's builds.\n\n# To disable the ambiguous behavior, the user need only\n\n# set Boost_USE_STATIC_RUNTIME either ON or OFF.\n",
        "Line" : 1594,
        "CharPositionInLine" : 0
      },
      "102" : {
        "Text" : "# On versions < 1.35, remove the System library from the considered list\n\n# since it wasn't added until 1.35.\n",
        "Line" : 1608,
        "CharPositionInLine" : 0
      },
      "103" : {
        "Text" : "# Additional components may be required via component dependencies.\n\n# Add any missing components to the list.\n",
        "Line" : 1616,
        "CharPositionInLine" : 0
      },
      "104" : {
        "Text" : "# If thread is required, get the thread libs as a dependency\n",
        "Line" : 1620,
        "CharPositionInLine" : 0
      },
      "105" : {
        "Text" : "# If the user changed any of our control inputs flush previous results.\n",
        "Line" : 1631,
        "CharPositionInLine" : 0
      },
      "106" : {
        "Text" : "# Compute component-specific hints.\n",
        "Line" : 1650,
        "CharPositionInLine" : 2
      },
      "107" : {
        "Text" : "# Handle Python version suffixes\n",
        "Line" : 1663,
        "CharPositionInLine" : 2
      },
      "108" : {
        "Text" : "# Boost >= 1.67\n",
        "Line" : 1677,
        "CharPositionInLine" : 4
      },
      "109" : {
        "Text" : "# Debian/Ubuntu (Some versions omit the 2 and/or 3 from the suffix)\n",
        "Line" : 1679,
        "CharPositionInLine" : 4
      },
      "110" : {
        "Text" : "# Gentoo\n",
        "Line" : 1682,
        "CharPositionInLine" : 4
      },
      "111" : {
        "Text" : "# RPMs\n",
        "Line" : 1684,
        "CharPositionInLine" : 4
      },
      "112" : {
        "Text" : "# Boost < 1.67\n",
        "Line" : 1688,
        "CharPositionInLine" : 4
      },
      "113" : {
        "Text" : "# Consolidate and report component-specific hints.\n",
        "Line" : 1692,
        "CharPositionInLine" : 2
      },
      "114" : {
        "Text" : "#\n\n# Find headers\n\n#\n",
        "Line" : 1710,
        "CharPositionInLine" : 2
      },
      "115" : {
        "Text" : "# Look for a standard boost header file.\n",
        "Line" : 1714,
        "CharPositionInLine" : 2
      },
      "116" : {
        "Text" : "#\n\n# Find RELEASE libraries\n\n#\n",
        "Line" : 1726,
        "CharPositionInLine" : 2
      },
      "117" : {
        "Text" : "# if Boost_LIBRARY_DIR_RELEASE is not defined,\n\n# but Boost_LIBRARY_DIR_DEBUG is, look there first for RELEASE libs\n",
        "Line" : 1760,
        "CharPositionInLine" : 2
      },
      "118" : {
        "Text" : "# Avoid passing backslashes to _Boost_FIND_LIBRARY due to macro re-parsing.\n",
        "Line" : 1766,
        "CharPositionInLine" : 2
      },
      "119" : {
        "Text" : "#\n\n# Find DEBUG libraries\n\n#\n",
        "Line" : 1778,
        "CharPositionInLine" : 2
      },
      "120" : {
        "Text" : "# if Boost_LIBRARY_DIR_DEBUG is not defined,\n\n# but Boost_LIBRARY_DIR_RELEASE is, look there first for DEBUG libs\n",
        "Line" : 1813,
        "CharPositionInLine" : 2
      },
      "121" : {
        "Text" : "# Avoid passing backslashes to _Boost_FIND_LIBRARY due to macro re-parsing.\n",
        "Line" : 1819,
        "CharPositionInLine" : 2
      },
      "122" : {
        "Text" : "# Check if component requires some compiler features\n",
        "Line" : 1838,
        "CharPositionInLine" : 2
      },
      "123" : {
        "Text" : "# Restore the original find library ordering\n",
        "Line" : 1843,
        "CharPositionInLine" : 0
      },
      "124" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  End finding boost libraries\n\n# ------------------------------------------------------------------------\n",
        "Line" : 1848,
        "CharPositionInLine" : 0
      },
      "125" : {
        "Text" : "# The above setting of Boost_FOUND was based only on the header files.\n\n# Update it for the requested component libraries.\n",
        "Line" : 1864,
        "CharPositionInLine" : 0
      },
      "126" : {
        "Text" : "# The headers were found.  Check for requested component libs.\n",
        "Line" : 1867,
        "CharPositionInLine" : 2
      },
      "127" : {
        "Text" : "# Optional indirect dependencies are not counted as missing.\n",
        "Line" : 1878,
        "CharPositionInLine" : 4
      },
      "128" : {
        "Text" : "# We were unable to find some libraries, so generate a sensible\n\n# error message that lists the libraries we were unable to find.\n",
        "Line" : 1888,
        "CharPositionInLine" : 4
      },
      "129" : {
        "Text" : "# Compatibility Code for backwards compatibility with CMake\n\n# 2.4's FindBoost module.\n",
        "Line" : 1915,
        "CharPositionInLine" : 4
      },
      "130" : {
        "Text" : "# Look for the boost library path.\n\n# Note that the user may not have installed any libraries\n\n# so it is quite possible the Boost_LIBRARY_DIRS may not exist.\n",
        "Line" : 1918,
        "CharPositionInLine" : 4
      },
      "131" : {
        "Text" : "# Strip off the trailing \"/include\" in the path.\n",
        "Line" : 1928,
        "CharPositionInLine" : 6
      },
      "132" : {
        "Text" : "# Boost headers were not found so no components were found.\n",
        "Line" : 1946,
        "CharPositionInLine" : 2
      },
      "133" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Add imported targets\n\n# ------------------------------------------------------------------------\n",
        "Line" : 1953,
        "CharPositionInLine" : 0
      },
      "134" : {
        "Text" : "# For header-only libraries\n",
        "Line" : 1958,
        "CharPositionInLine" : 2
      },
      "135" : {
        "Text" : "# Even if Boost_USE_STATIC_LIBS is OFF, we might have static\n\n# libraries as a result.\n",
        "Line" : 1974,
        "CharPositionInLine" : 10
      },
      "136" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Notification to end user about what was found\n\n# ------------------------------------------------------------------------\n",
        "Line" : 2021,
        "CharPositionInLine" : 0
      },
      "137" : {
        "Text" : "# we opt not to automatically output Boost_ERROR_REASON here as\n\n# it could be quite lengthy and somewhat imposing in its requests\n\n# Since Boost is not always a required dependency we'll leave this\n\n# up to the end-user.\n",
        "Line" : 2047,
        "CharPositionInLine" : 6
      },
      "138" : {
        "Text" : "# Configure display of cache entries in GUI.\n",
        "Line" : 2060,
        "CharPositionInLine" : 0
      },
      "139" : {
        "Text" : "# Record last used values of input variables so we can\n\n# detect on the next run if the user changed them.\n",
        "Line" : 2075,
        "CharPositionInLine" : 0
      },
      "140" : {
        "Text" : "# Maintain a persistent list of components requested anywhere since\n\n# the last flush.\n",
        "Line" : 2088,
        "CharPositionInLine" : 0
      },
      "141" : {
        "Text" : "# Restore project's policies\n",
        "Line" : 2097,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 142
    },
    "tools/cmake/Modules/FindCCSE.cmake" : {
      "ObjectId" : "1d95de14c303c15a15713c21ed8949646cbeb459",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n\n#\n\n# Amanzi CCSE Find Module\n\n#\n\n# Usage:\n\n#    Control the search through CCSE_DIR or setting environment variable\n\n#    CCSE_ROOT to the ccse installation prefix.\n\n#\n\n#    This module does not search default paths! \n\n#\n\n#    Following variables are set:\n\n#    CCSE_FOUND            (BOOL)       Flag indicating if CCSE was found\n\n#    CCSE_INCLUDE_DIR      (PATH)       Path to the CCSE include file\n\n#    CCSE_INCLUDE_DIRS     (LIST)       List of all required include files\n\n#    CCSE_LIBRARY_DIR      (PATH)       Path to the CCSE library\n\n#    CCSE_LIBRARIES        (LIST)       List of all required CCSE libraries\n\n#    CCSE_PERL_DIR         (PATH)       Path to CCSE Perl scripts\n\n#    CCSE_EXT_LIBRARIES    (LIST)\n\n#    CCSE_EXT_LIBRARY_DIRS (LIST)\n\n#\n\n# #############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Standard CMake modules see CMAKE_ROOT/Modules\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Amanzi CMake functions see <root>/tools/cmake for source\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Do nothing. Variables are set. No need to search again\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Cache variables\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Search for include files\n\n# Search order preference:\n\n#  (1) CCSE_INCLUDE_DIR - check existence of path AND if the include files exist\n\n#  (2) CCSE_DIR/include\n\n#  (3) Default CMake paths See cmake --html-help=out.html file for more information.\n\n#\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Search for libraries \n\n# Search order preference:\n\n#  (1) CCSE_LIBRARY_DIR - check existence of path AND if the include files exist\n\n#  (2) CCSE_DIR/<lib,Lib>\n\n#  (3) Default CMake paths See cmake --html-help=out.html file for more information.\n\n#\n",
        "Line" : 121,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Now, make sure the rest are in the same place\n",
        "Line" : 168,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Search for perl scripts\n\n# Search order preference:\n\n#  (1) CCSE_PERL_DIR - check existence of path AND if the perl script exist\n\n#  (2) CCSE_DIR/perl\n\n#  (3) Default CMake paths See cmake --html-help=out.html file for more information.\n\n#\n",
        "Line" : 185,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# NOTE: Not sure why we have to explicitly include X11 stuff, since FindX11 was supposed to do it...\n",
        "Line" : 236,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Send useful message if everything is found\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "tools/cmake/Modules/FindCrunchTope.cmake" : {
      "ObjectId" : "5b1ed0b8788eef6a47c1403b6047d8cb50af6db5",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Amanzi CRUNCHTOPE Find Module\n\n#\n\n# Usage:\n\n#    Control the search through CRUNCHTOPE_DIR installation prefix.\n\n#\n\n#    This module does not search default paths! \n\n#\n\n#    Following variables are set:\n\n#    CRUNCHTOPE_FOUND          (BOOL)    Flag indicating if CRUNCHTOPE was found\n\n#    CRUNCHTOPE_INCLUDE_DIR    (PATH)    Path to the CRUNCHTOPE include file\n\n#    CRUNCHTOPE_INCLUDE_DIRS   (LIST)    List of all required include files\n\n#    CRUNCHTOPE_LIBRARY_DIR    (PATH)    Path to the CRUNCHTOPE library\n\n#    CRUNCHTOPE_LIBRARIES      (LIST)    List of all required CRUNCHTOPE libraries\n\n#\n\n# #############################################################################\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Standard CMake modules see CMAKE_ROOT/Modules\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Amanzi CMake functions see <root>/tools/cmake for source\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Do nothing. Variables are set. No need to search again\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Define the LIBRARIES and INCLUDE_DIRS\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Send useful message if everything is found\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# find_package should set CRUNCHTOPE_FOUND but it does not!\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "tools/cmake/Modules/FindHYPRE.cmake" : {
      "ObjectId" : "c6691b40034a9e0666c4365cd3f982ef6ebbf583",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Amanzi HYPRE Find Module\n\n#\n\n# Usage:\n\n#    Control the search through HYPRE_DIR or setting environment variable\n\n#    HYPRE_ROOT to the HYPRE installation prefix.\n\n#\n\n#    This module does not search default paths! \n\n#\n\n#    Following variables are set:\n\n#    HYPRE_FOUND            (BOOL)       Flag indicating if HYPRE was found\n\n#    HYPRE_INCLUDE_DIR      (PATH)       Path to the HYPRE include file\n\n#    HYPRE_INCLUDE_DIRS     (LIST)       List of all required include files\n\n#    HYPRE_LIBRARY_DIR      (PATH)       Path to the HYPRE library\n\n#    HYPRE_LIBRARY          (FILE)       HYPRE library\n\n#    HYPRE_LIBRARIES        (LIST)       List of all required HYPRE libraries\n\n#\n\n# #############################################################################\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Standard CMake modules see CMAKE_ROOT/Modules\n\n#include(FindPackageHandleStandardArgs)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Amanzi CMake functions see <root>/tools/cmake for source\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Do nothing. Variables are set. No need to search again\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Cache variables\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Search for include files in provided HYPRE_INCLUDE_DIR\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Search for include files in HYPRE_DIR/include\n",
        "Line" : 69,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Search for include files in default path\n",
        "Line" : 87,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# Search for libraries \n",
        "Line" : 99,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Search for library files in provided HYPRE_LIBRARY_DIR\n",
        "Line" : 102,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Search for library files in HYPRE_DIR/lib\n",
        "Line" : 116,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Search for library files in default path\n",
        "Line" : 134,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# Create the target\n",
        "Line" : 142,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Update the INCLUDE_DIRS and LIBRARIES variables\n",
        "Line" : 154,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Define the dependent libraries\n",
        "Line" : 158,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# -- SuperLU \n",
        "Line" : 161,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# -- SuperLUDist\n",
        "Line" : 172,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# -- ParMetis\n",
        "Line" : 183,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# -- METIS\n",
        "Line" : 194,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# set target properties   \n",
        "Line" : 200,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Send useful message if everything is found\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 22
    },
    "tools/cmake/Modules/FindLAPACK.cmake" : {
      "ObjectId" : "7f53fbd19c6487402fcd8730c13b446586044e76",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find LAPACK library\n\n# This module finds an installed fortran library that implements the LAPACK\n\n# linear-algebra interface (see http://www.netlib.org/lapack/).\n\n#\n\n# The approach follows that taken for the autoconf macro file, acx_lapack.m4\n\n# (distributed at http://ac-archive.sourceforge.net/ac-archive/acx_lapack.html).\n\n#\n\n# This module sets the following variables:\n\n#  LAPACK_FOUND - set to true if a library implementing the LAPACK interface\n\n#    is found\n\n#  LAPACK_LINKER_FLAGS - uncached list of required linker flags (excluding -l\n\n#    and -L).\n\n#  LAPACK_LIBRARIES - uncached list of libraries (using full path name) to\n\n#    link against to use LAPACK\n\n#  LAPACK95_LIBRARIES - uncached list of libraries (using full path name) to\n\n#    link against to use LAPACK95\n\n#  LAPACK95_FOUND - set to true if a library implementing the LAPACK f95\n\n#    interface is found\n\n#  BLA_STATIC  if set on this determines what kind of linkage we do (static)\n\n#  BLA_VENDOR  if set checks only the specified vendor, if not set checks\n\n#     all the possibilities\n\n#  BLA_F95     if set on tries to find the f95 interfaces for BLAS/LAPACK\n\n### List of vendors (BLA_VENDOR) valid in this module\n\n##  Intel(mkl), ACML,Apple, NAS, Generic\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2007-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# FULL CMAKE COPYRIGHT NOTICE:\n\n#CMake - Cross Platform Makefile Generator\n\n#Copyright 2000-2009 Kitware, Inc., Insight Software Consortium\n\n#All rights reserved.\n\n#\n\n#Redistribution and use in source and binary forms, with or without\n\n#modification, are permitted provided that the following conditions\n\n#are met:\n\n#\n\n#* Redistributions of source code must retain the above copyright\n\n#  notice, this list of conditions and the following disclaimer.\n\n#\n\n#* Redistributions in binary form must reproduce the above copyright\n\n#  notice, this list of conditions and the following disclaimer in the\n\n#  documentation and/or other materials provided with the distribution.\n\n#\n\n#* Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#  nor the names of their contributors may be used to endorse or promote\n\n#  products derived from this software without specific prior written\n\n#  permission.\n\n#\n\n#THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n#\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n#LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n#A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n#HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n#SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n#LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n#DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n#THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n#(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n#OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n#------------------------------------------------------------------------------\n\n#\n\n#The above copyright and license notice applies to distributions of\n\n#CMake in source and binary form.  Some source files contain additional\n\n#notices of original copyright by their contributors; see each source\n\n#for details.  Third-party software packages supplied with CMake under\n\n#compatible licenses provide their own copyright notices documented in\n\n#corresponding subdirectories.\n\n#\n\n#------------------------------------------------------------------------------\n\n#\n\n#CMake was initially developed by Kitware with the following sponsorship:\n\n#\n\n# * National Library of Medicine at the National Institutes of Health\n\n#   as part of the Insight Segmentation and Registration Toolkit (ITK).\n\n#\n\n# * US National Labs (Los Alamos, Livermore, Sandia) ASC Parallel\n\n#   Visualization Initiative.\n\n#\n\n# * National Alliance for Medical Image Computing (NAMIC) is funded by the\n\n#   National Institutes of Health through the NIH Roadmap for Medical Research,\n\n#   Grant U54 EB005149.\n\n#\n\n# * Kitware, Inc.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TODO: move this stuff to separate module\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This macro checks for the existence of the combination of fortran libraries\n\n# given by _list.  If the combination is found, this macro checks (using the\n\n# Check_Fortran_Function_Exists macro) whether can link against that library\n\n# combination using the name of a routine given by _name using the linker\n\n# flags given by _flags.  If the combination of libraries is found and passes\n\n# the link test, LIBRARIES is set to the list of complete library paths that\n\n# have been found.  Otherwise, LIBRARIES is set to FALSE.\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# N.B. _prefix is the prefix applied to the names of all cached variables that\n\n# are generated internally and marked advanced by this macro.\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# for ubuntu's libblas3gf and liblapack3gf packages\n",
        "Line" : 152,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Test this combination of libraries.\n",
        "Line" : 169,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#  message(\"DEBUG: CMAKE_REQUIRED_LIBRARIES = ${CMAKE_REQUIRED_LIBRARIES}\")\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#message(\"DEBUG: ${LIBRARIES} = ${${LIBRARIES}}\")\n",
        "Line" : 184,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#acml lapack\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Apple LAPACK library?\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Generic LAPACK library?\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#intel lapack\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# old\n",
        "Line" : 296,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# new >= 10.3\n",
        "Line" : 308,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# old\n",
        "Line" : 321,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# new >= 10.3\n",
        "Line" : 333,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# lpritch: The environment variables are based on cray-libsci\n\n# version 11.1.00. Tested against gnu, intel and pgi programming\n\n# environemts on hopper.ersc.gov. Will likely change in future\n\n# releases.\n",
        "Line" : 352,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Cray installs these libraries by compiler name and version\n",
        "Line" : 357,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Search for cheev\n",
        "Line" : 377,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 21
    },
    "tools/cmake/Modules/FindMETIS.cmake" : {
      "ObjectId" : "e7ea0ef0e46184398026fc33c06a54612bb7d2e6",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Amanzi METIS Find Module\n\n#\n\n# Usage:\n\n#    Control the search through METIS_DIR or setting environment variable\n\n#    METIS_ROOT to the METIS installation prefix.\n\n#\n\n#    This module does not search default paths! \n\n#\n\n#    Following variables are set:\n\n#    METIS_FOUND            (BOOL)       Flag indicating if METIS was found\n\n#    METIS_INCLUDE_DIR      (PATH)       Path to the METIS include file\n\n#    METIS_INCLUDE_DIRS     (LIST)       List of all required include files\n\n#    METIS_LIBRARY_DIR      (PATH)       Path to the METIS library\n\n#    METIS_LIBRARY          (FILE)       METIS library\n\n#    METIS_LIBRARIES        (LIST)       List of all required METIS libraries\n\n#\n\n# #############################################################################\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Standard CMake modules see CMAKE_ROOT/Modules\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Amanzi CMake functions see <root>/tools/cmake for source\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Do nothing. Variables are set. No need to search again\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Cache variables\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Search for include files\n\n# Search order preference:\n\n#  (1) METIS_INCLUDE_DIR - check existence of path AND if the include files exist\n\n#  (2) METIS_DIR/<include>\n\n#  (3) Default CMake paths See cmake --html-help=out.html file for more information.\n\n#\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Search for libraries \n\n# Search order preference:\n\n#  (1) METIS_LIBRARY_DIR - check existence of path AND if the library file exists\n\n#  (2) METIS_DIR/<lib,Lib>\n\n#  (3) Default CMake paths See cmake --html-help=out.html file for more information.\n\n#\n",
        "Line" : 101,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Define prerequisite packages\n",
        "Line" : 150,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Send useful message if everything is found\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# find_package_handle_standard_args should set METIS_FOUND but it does not!\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define the version\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "tools/cmake/Modules/FindMOAB.cmake" : {
      "ObjectId" : "70c4ffa34cbbbd75b9c466a6b7aa2ffbab8cdd2e",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Amanzi MOAB Find Module\n\n#\n\n# Usage:\n\n#    Control the search through MOAB_DIR or setting environment variable\n\n#    MOAB_ROOT to the MOAB installation prefix.\n\n#\n\n#    This module does not search default paths! \n\n#\n\n#    Following variables are set:\n\n#    MOAB_FOUND            (BOOL)       Flag indicating if MOAB was found\n\n#    MOAB_INCLUDE_DIR      (PATH)       Path to the MOAB include file\n\n#    MOAB_INCLUDE_DIRS     (LIST)       List of all required include files\n\n#    MOAB_LIBRARY_DIR      (PATH)       Path to the MOAB library\n\n#    MOAB_LIBRARY          (FILE)       MOAB library\n\n#    MOAB_LIBRARIES        (LIST)       List of all required MOAB libraries\n\n#\n\n# #############################################################################\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Standard CMake modules see CMAKE_ROOT/Modules\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Amanzi CMake functions see <root>/tools/cmake for source\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Do nothing. Variables are set. No need to search again\n",
        "Line" : 32,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Cache variables\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Search for include files\n\n# Search order preference:\n\n#  (1) MOAB_INCLUDE_DIR - check existence of path AND if the include files exist\n\n#  (2) MOAB_DIR/<include>\n\n#  (3) Default CMake paths See cmake --html-help=out.html file for more information.\n\n#\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Search for libraries \n\n# Search order preference:\n\n#  (1) MOAB_LIBRARY_DIR - check existence of path AND if the library file exists\n\n#  (2) MOAB_DIR/<lib,Lib>\n\n#  (3) Default CMake paths See cmake --html-help=out.html file for more information.\n\n#\n",
        "Line" : 105,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Create the target\n",
        "Line" : 150,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Update the INCLUDE_DIRS and LIBRARIES variables\n",
        "Line" : 160,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Define the dependent libs\n",
        "Line" : 164,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# HDF5\n",
        "Line" : 167,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# NetCDF (This should come with the HDF5)\n",
        "Line" : 172,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Send useful message if everything is found\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Define the version\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "tools/cmake/Modules/FindMPI.cmake" : {
      "ObjectId" : "473df066ecfa53d283526afd939b9718226221eb",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find a Message Passing Interface (MPI) implementation\n\n# The Message Passing Interface (MPI) is a library used to write\n\n# high-performance distributed-memory parallel applications, and\n\n# is typically deployed on a cluster. MPI is a standard interface\n\n# (defined by the MPI forum) for which many implementations are\n\n# available. All of them have somewhat different include paths,\n\n# libraries to link against, etc., and this module tries to smooth\n\n# out those differences.\n\n#\n\n# === Variables ===\n\n#\n\n# This module will set the following variables per language in your project,\n\n# where <lang> is one of C, CXX, or Fortran:\n\n#   MPI_<lang>_FOUND           TRUE if FindMPI found MPI flags for <lang>\n\n#   MPI_<lang>_COMPILER        MPI Compiler wrapper for <lang>\n\n#   MPI_<lang>_COMPILE_FLAGS   Compilation flags for MPI programs\n\n#   MPI_<lang>_INCLUDE_PATH    Include path(s) for MPI header\n\n#   MPI_<lang>_LINK_FLAGS      Linking flags for MPI programs\n\n#   MPI_<lang>_LIBRARIES       All libraries to link MPI programs against\n\n# Additionally, FindMPI sets the following variables for running MPI\n\n# programs from the command line:\n\n#   MPIEXEC                    Executable for running MPI programs\n\n#   MPIEXEC_NUMPROC_FLAG       Flag to pass to MPIEXEC before giving\n\n#                              it the number of processors to run on\n\n#   MPIEXEC_PREFLAGS           Flags to pass to MPIEXEC directly\n\n#                              before the executable to run.\n\n#   MPIEXEC_POSTFLAGS          Flags to pass to MPIEXEC after other flags\n\n# === Usage ===\n\n#\n\n# To use this module, simply call FindMPI from a CMakeLists.txt file, or\n\n# run find_package(MPI), then run CMake.  If you are happy with the auto-\n\n# detected configuration for your language, then you're done.  If not, you\n\n# have two options:\n\n#   1. Set MPI_<lang>_COMPILER to the MPI wrapper (mpicc, etc.) of your\n\n#      choice and reconfigure.  FindMPI will attempt to determine all the\n\n#      necessary variables using THAT compiler's compile and link flags.\n\n#   2. If this fails, or if your MPI implementation does not come with\n\n#      a compiler wrapper, then set both MPI_<lang>_LIBRARIES and\n\n#      MPI_<lang>_INCLUDE_PATH.  You may also set any other variables\n\n#      listed above, but these two are required.  This will circumvent\n\n#      autodetection entirely.\n\n# When configuration is successful, MPI_<lang>_COMPILER will be set to the\n\n# compiler wrapper for <lang>, if it was found.  MPI_<lang>_FOUND and other\n\n# variables above will be set if any MPI implementation was found for <lang>,\n\n# regardless of whether a compiler was found.\n\n#\n\n# When using MPIEXEC to execute MPI applications, you should typically use\n\n# all of the MPIEXEC flags as follows:\n\n#   ${MPIEXEC} ${MPIEXEC_NUMPROC_FLAG} PROCS\n\n#     ${MPIEXEC_PREFLAGS} EXECUTABLE ${MPIEXEC_POSTFLAGS} ARGS\n\n# where PROCS is the number of processors on which to execute the program,\n\n# EXECUTABLE is the MPI program, and ARGS are the arguments to pass to the\n\n# MPI program.\n\n#\n\n# === Backward Compatibility ===\n\n#\n\n# For backward compatibility with older versions of FindMPI, these\n\n# variables are set, but deprecated:\n\n#   MPI_FOUND           MPI_COMPILER        MPI_LIBRARY\n\n#   MPI_COMPILE_FLAGS   MPI_INCLUDE_PATH    MPI_EXTRA_LIBRARY\n\n#   MPI_LINK_FLAGS      MPI_LIBRARIES\n\n# In new projects, please use the MPI_<lang>_XXX equivalents.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2001-2011 Kitware, Inc.\n\n# Copyright 2010-2011 Todd Gamblin tgamblin@llnl.gov\n\n# Copyright 2001-2009 Dave Partyka\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n\n#\n\n# Orignial file from the CMake 2.8.9 distribution\n\n# \n\n# Full Copyright.txt notice here\n\n#cmake version 2.8.9\n\n#Copyright 2000-2009 Kitware, Inc., Insight Software Consortium.  All rights\n\n#reserved.\n\n#Redistribution and use in source and binary forms, with or without\n\n#modification, are permitted provided that the following conditions are met:\n\n#Redistributions of source code must retain the above copyright notice, this\n\n#list of conditions and the following disclaimer.\n\n#Redistributions in binary form must reproduce the above copyright notice,\n\n#this list of conditions and the following disclaimer in the documentation\n\n#and/or other materials provided with the distribution.\n\n#Neither the names of Kitware, Inc., the Insight Software Consortium, nor the\n\n#names of their contributors may be used to endorse or promote products\n\n#derived from this software without specific prior written permission.\n\n#THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n#AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n#IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n#ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n\n#LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n#CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n#SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n#INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n#CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n#ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n#POSSIBILITY OF SUCH DAMAGE.\n\n#\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# include this to handle the QUIETLY and REQUIRED arguments\n\n#include(${CMAKE_CURRENT_LIST_DIR}/FindPackageHandleStandardArgs.cmake)\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# This part detects MPI compilers, attempting to wade through the mess of compiler names in\n\n# a sensible way.\n\n#\n\n# The compilers are detected in this order:\n\n#\n\n# 1. Try to find the most generic availble MPI compiler, as this is usually set up by\n\n#    cluster admins.  e.g., if plain old mpicc is available, we'll use it and assume it's\n\n#    the right compiler.\n\n#\n\n# 2. If a generic mpicc is NOT found, then we attempt to find one that matches\n\n#    CMAKE_<lang>_COMPILER_ID. e.g. if you are using XL compilers, we'll try to find mpixlc\n\n#    and company, but not mpiicc.  This hopefully prevents toolchain mismatches.\n\n#\n\n# If you want to force a particular MPI compiler other than what we autodetect (e.g. if you\n\n# want to compile regular stuff with GNU and parallel stuff with Intel), you can always set\n\n# your favorite MPI_<lang>_COMPILER explicitly and this stuff will be ignored.\n\n#\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Start out with the generic MPI compiler names, as these are most commonly used.\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# GNU compiler names\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Intel MPI compiler names\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# PGI compiler names\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# XLC MPI Compiler names\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# append vendor-specific compilers to the list if we either don't know the compiler id,\n\n# or if we know it matches the regular compiler.\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# clean up the namespace here\n",
        "Line" : 173,
        "CharPositionInLine" : 48
      },
      "11" : {
        "Text" : "# Names to try for MPI exec\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Grab the path to MPI from the registry if we're on windows.\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Build a list of prefixes to search for MPI.\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#\n\n# interrogate_mpi_compiler(lang try_libs)\n\n#\n\n# Attempts to extract compiler and linker args from an MPI compiler. The arguments set\n\n# by this function are:\n\n#\n\n#   MPI_<lang>_INCLUDE_PATH    MPI_<lang>_LINK_FLAGS     MPI_<lang>_FOUND\n\n#   MPI_<lang>_COMPILE_FLAGS   MPI_<lang>_LIBRARIES\n\n#\n\n# MPI_<lang>_COMPILER must be set beforehand to the absolute path to an MPI compiler for\n\n# <lang>.  Additionally, MPI_<lang>_INCLUDE_PATH and MPI_<lang>_LIBRARIES may be set\n\n# to skip autodetection.\n\n#\n\n# If try_libs is TRUE, this will also attempt to find plain MPI libraries in the usual\n\n# way.  In general, this is not as effective as interrogating the compilers, as it\n\n# ignores language-specific flags and libraries.  However, some MPI implementations\n\n# (Windows implementations) do not have compiler wrappers, so this approach must be used.\n\n#\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# MPI_${lang}_NO_INTERROGATE will be set to a compiler name when the *regular* compiler was\n\n# discovered to be the MPI compiler.  This happens on machines like the Cray XE6 that use\n\n# modules to set cc, CC, and ftn to the MPI compilers.  If the user force-sets another MPI\n\n# compiler, MPI_${lang}_COMPILER won't be equal to MPI_${lang}_NO_INTERROGATE, and we'll\n\n# inspect that compiler anew.  This allows users to set new compilers w/o rm'ing cache.\n",
        "Line" : 218,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# If MPI is set already in the cache, don't bother with interrogating the compiler.\n",
        "Line" : 225,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Check whether the -showme:compile option works. This indicates that we have either OpenMPI\n\n# or a newer version of LAM-MPI, and implies that -showme:link will also work.\n",
        "Line" : 228,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# If we appear to have -showme:compile, then we should\n\n# also have -showme:link. Try it.\n",
        "Line" : 237,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# We probably have -showme:incdirs and -showme:libdirs as well,\n\n# so grab that while we're at it.\n",
        "Line" : 246,
        "CharPositionInLine" : 10
      },
      "20" : {
        "Text" : "# reset things here if something went wrong.\n",
        "Line" : 259,
        "CharPositionInLine" : 10
      },
      "21" : {
        "Text" : "# Older versions of LAM-MPI have \"-showme\". Try to find that.\n",
        "Line" : 265,
        "CharPositionInLine" : 6
      },
      "22" : {
        "Text" : "# MVAPICH uses -compile-info and -link-info.  Try them.\n",
        "Line" : 274,
        "CharPositionInLine" : 6
      },
      "23" : {
        "Text" : "# If we have compile-info, also have link-info.\n",
        "Line" : 282,
        "CharPositionInLine" : 8
      },
      "24" : {
        "Text" : "# make sure we got compile and link.  Reset vars if something's wrong.\n",
        "Line" : 291,
        "CharPositionInLine" : 8
      },
      "25" : {
        "Text" : "# MPICH just uses \"-show\". Try it.\n",
        "Line" : 298,
        "CharPositionInLine" : 6
      },
      "26" : {
        "Text" : "# We have our command lines, but we might need to copy MPI_COMPILE_CMDLINE\n\n# into MPI_LINK_CMDLINE, if we didn't find the link line.\n",
        "Line" : 308,
        "CharPositionInLine" : 8
      },
      "27" : {
        "Text" : "# Here, we're done with the interrogation part, and we'll try to extract args we care\n\n# about from what we learned from the compiler wrapper scripts.\n",
        "Line" : 319,
        "CharPositionInLine" : 6
      },
      "28" : {
        "Text" : "# If interrogation came back with something, extract our variable from the MPI command line\n",
        "Line" : 322,
        "CharPositionInLine" : 6
      },
      "29" : {
        "Text" : "# Extract compile flags from the compile command line.\n",
        "Line" : 324,
        "CharPositionInLine" : 8
      },
      "30" : {
        "Text" : "# Extract include paths from compile command line\n",
        "Line" : 336,
        "CharPositionInLine" : 8
      },
      "31" : {
        "Text" : "# try using showme:incdirs if extracting didn't work.\n",
        "Line" : 344,
        "CharPositionInLine" : 8
      },
      "32" : {
        "Text" : "# If all else fails, just search for mpi.h in the normal include paths.\n",
        "Line" : 350,
        "CharPositionInLine" : 8
      },
      "33" : {
        "Text" : "# Extract linker paths from the link command line\n",
        "Line" : 359,
        "CharPositionInLine" : 8
      },
      "34" : {
        "Text" : "# try using showme:libdirs if extracting didn't work.\n",
        "Line" : 368,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : "# Extract linker flags from the link command line\n",
        "Line" : 374,
        "CharPositionInLine" : 8
      },
      "36" : {
        "Text" : "# Extract the set of libraries to link against from the link command\n\n# line\n",
        "Line" : 385,
        "CharPositionInLine" : 8
      },
      "37" : {
        "Text" : "# add the compiler implicit directories because some compilers\n\n# such as the intel compiler have libraries that show up\n\n# in the showme list that can only be found in the implicit\n\n# link directories of the compiler. Do this for C++ and C\n\n# compilers if the implicit link directories are defined.\n",
        "Line" : 388,
        "CharPositionInLine" : 8
      },
      "38" : {
        "Text" : "# Determine full path names for all of the libraries that one needs\n\n# to link against in an MPI program\n",
        "Line" : 403,
        "CharPositionInLine" : 8
      },
      "39" : {
        "Text" : "# MPI_LIB is cached by find_library, but we don't want that.  Clear it first.\n",
        "Line" : 407,
        "CharPositionInLine" : 10
      },
      "40" : {
        "Text" : "# Sanity check MPI_LIBRARIES to make sure there are enough libraries\n",
        "Line" : 418,
        "CharPositionInLine" : 8
      },
      "41" : {
        "Text" : "# If we didn't have an MPI compiler script to interrogate, attempt to find everything\n\n# with plain old find functions.  This is nasty because MPI implementations have LOTS of\n\n# different library names, so this section isn't going to be very generic.  We need to\n\n# make sure it works for MS MPI, though, since there are no compiler wrappers for that.\n",
        "Line" : 427,
        "CharPositionInLine" : 6
      },
      "42" : {
        "Text" : "# Decide between 32-bit and 64-bit libraries for Microsoft's MPI\n",
        "Line" : 436,
        "CharPositionInLine" : 6
      },
      "43" : {
        "Text" : "# Right now, we only know about the extra libs for C++.\n\n# We could add Fortran here (as there is usually libfmpich, etc.), but\n\n# this really only has to work with MS MPI on Windows.\n\n# Assume that other MPI's are covered by the compiler wrappers.\n",
        "Line" : 450,
        "CharPositionInLine" : 6
      },
      "44" : {
        "Text" : "# If we found MPI, set up all of the appropriate cache entries\n",
        "Line" : 470,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "# clear out our temporary lib/header detectionv variable here.\n",
        "Line" : 477,
        "CharPositionInLine" : 4
      },
      "46" : {
        "Text" : "# finally set a found variable for each MPI language\n",
        "Line" : 482,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "# This function attempts to compile with the regular compiler, to see if MPI programs\n\n# work with it.  This is a last ditch attempt after we've tried interrogating mpicc and\n\n# friends, and after we've tried to find generic libraries.  Works on machines like\n\n# Cray XE6, where the modules environment changes what MPI version cc, CC, and ftn use.\n",
        "Line" : 491,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# End definitions, commence real work here.\n",
        "Line" : 532,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Most mpi distros have some form of mpiexec which gives us something we can reliably look for.\n",
        "Line" : 534,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# call get_filename_component twice to remove mpiexec and the directory it exists in (typically bin).\n\n# This gives us a fairly reliable base directory to search for /bin /lib and /include from.\n",
        "Line" : 547,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "#=============================================================================\n\n# Backward compatibility input hacks.  Propagate the FindMPI hints to C and\n\n# CXX if the respective new versions are not defined.  Translate the old\n\n# MPI_LIBRARY and MPI_EXTRA_LIBRARY to respective MPI_${lang}_LIBRARIES.\n\n#\n\n# Once we find the new variables, we translate them back into their old\n\n# equivalents below.\n",
        "Line" : 559,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# Old input variables.\n",
        "Line" : 567,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# Set new vars based on their old equivalents, if the new versions are not already set.\n",
        "Line" : 570,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# Special handling for MPI_LIBRARY and MPI_EXTRA_LIBRARY, which we nixed in the\n\n# new FindMPI.  These need to be merged into MPI_<lang>_LIBRARIES\n",
        "Line" : 577,
        "CharPositionInLine" : 2
      },
      "55" : {
        "Text" : "#=============================================================================\n",
        "Line" : 583,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# This loop finds the compilers and sends them off for interrogation.\n",
        "Line" : 586,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# If the user supplies a compiler *name* instead of an absolute path, assume that we need to find THAT compiler.\n",
        "Line" : 589,
        "CharPositionInLine" : 4
      },
      "58" : {
        "Text" : "# Get rid of our default list of names and just search for the name the user wants.\n",
        "Line" : 593,
        "CharPositionInLine" : 8
      },
      "59" : {
        "Text" : "# If the user specifies a compiler, we don't want to try to search libraries either.\n",
        "Line" : 596,
        "CharPositionInLine" : 8
      },
      "60" : {
        "Text" : "# last ditch try -- if nothing works so far, just try running the regular compiler and\n\n# see if we can create an MPI executable.\n",
        "Line" : 609,
        "CharPositionInLine" : 4
      },
      "61" : {
        "Text" : "#=============================================================================\n\n# More backward compatibility stuff\n\n#\n\n# Bare MPI sans ${lang} vars are set to CXX then C, depending on what was found.\n\n# This mimics the behavior of the old language-oblivious FindMPI.\n",
        "Line" : 625,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Note that we might still have found Fortran, but you'll need to use MPI_Fortran_FOUND\n",
        "Line" : 640,
        "CharPositionInLine" : 2
      },
      "63" : {
        "Text" : "# Chop MPI_LIBRARIES into the old-style MPI_LIBRARY and MPI_EXTRA_LIBRARY, and set them in cache.\n",
        "Line" : 644,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "#=============================================================================\n",
        "Line" : 660,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# unset these vars to cleanup namespace\n",
        "Line" : 662,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 66
    },
    "tools/cmake/Modules/FindMSTK.cmake" : {
      "ObjectId" : "041b169a277c60ed5316b545854181b167fd026d",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Amanzi MSTK Find Module\n\n#\n\n# Usage:\n\n#    Control the search through MSTK_DIR or setting environment variable\n\n#    MSTK_ROOT to the MSTK installation prefix.\n\n#\n\n#    This module does not search default paths! \n\n#\n\n#    Following variables are set:\n\n#    MSTK_FOUND            (BOOL)       Flag indicating if MSTK was found\n\n#    MSTK_INCLUDE_DIR      (PATH)       Path to the MSTK include file\n\n#    MSTK_INCLUDE_DIRS     (LIST)       List of all required include files\n\n#    MSTK_LIBRARY_DIR      (PATH)       Path to the MSTK library\n\n#    MSTK_LIBRARY          (FILE)       MSTK library\n\n#    MSTK_LIBRARIES        (LIST)       List of all required MSTK libraries\n\n#\n\n# #############################################################################\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Standard CMake modules see CMAKE_ROOT/Modules\n\n#include(FindPackageHandleStandardArgs)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Amanzi CMake functions see <root>/tools/cmake for source\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Do nothing. Variables are set. No need to search again\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Cache variables\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Search for include files\n\n# Search order preference:\n\n#  (1) MSTK_INCLUDE_DIR - check existence of path AND if the include files exist\n\n#  (2) MSTK_DIR/<include>\n\n#  (3) Default CMake paths See cmake --html-help=out.html file for more information.\n\n#\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Search for libraries \n\n# Search order preference:\n\n#  (1) MSTK_LIBRARY_DIR - check existence of path AND if the library file exists\n\n#  (2) MSTK_DIR/<lib,Lib>\n\n#  (3) Default CMake paths See cmake --html-help=out.html file for more information.\n\n#\n",
        "Line" : 102,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Create the target\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Update the INCLUDE_DIRS and LIBRARIES variables\n",
        "Line" : 157,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Define the dependent libs\n",
        "Line" : 161,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# MSTK depends on ExodusII provided by SEACAS\n",
        "Line" : 164,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# And METIS\n",
        "Line" : 170,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# And Zoltan\n",
        "Line" : 176,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Check MSTK Version to set interface compatibility\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Test if MSTK is older than 2.21rc1\n",
        "Line" : 189,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Test if MSTK is newer than 3.0.0\n",
        "Line" : 195,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Look for installed utilities\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Send useful message if everything is found\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# find_package_handle_standard_args should set MSTK_FOUND but it does not!\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Define the version\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "tools/cmake/Modules/FindNemesis.cmake" : {
      "ObjectId" : "7db6018f15f4aff1ef7c4e3db1b28ee94886d97b",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n\n#\n\n# Amanzi Nemesis Find Module\n\n#\n\n# Usage:\n\n#    Control the search through Nemesis_DIR or setting environment variable\n\n#    Nemesis_ROOT to the Nemesis installation prefix.\n\n#\n\n#    This module does not search default paths! \n\n#\n\n#    Following variables are set:\n\n#    Nemesis_FOUND            (BOOL)       Flag indicating if Nemesis was found\n\n#    Nemesis_INCLUDE_DIR      (PATH)       Path to the Nemesis include file\n\n#    Nemesis_INCLUDE_DIRS     (LIST)       List of all required include files\n\n#    Nemesis_LIBRARY_DIR      (PATH)       Path to the Nemesis library\n\n#    Nemesis_LIBRARY          (FILE)       Nemesis library\n\n#    Nemesis_LIBRARIES        (LIST)       List of all required Nemesis libraries\n\n#\n\n#    Additional variables\n\n#    Nemesis_VERSION          (STRING)     Nemesis Version string\n\n#\n\n# #############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Standard CMake modules see CMAKE_ROOT/Modules\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Amanzi CMake functions see <root>/tools/cmake for source\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Do nothing. Variables are set. No need to search again\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Cache variables\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Search for include files\n\n# Search order preference:\n\n#  (1) Nemesis_INCLUDE_DIR - check existence of path AND if the include files exist\n\n#  (2) Nemesis_DIR/<include>\n\n#  (3) Default CMake paths See cmake --html-help=out.html file for more information.\n\n#\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Search for libraries \n\n# Search order preference:\n\n#  (1) Nemesis_LIBRARY_DIR - check existence of path AND if the library file exists\n\n#  (2) Nemesis_DIR/<lib,Lib>\n\n#  (3) Default CMake paths See cmake --html-help=out.html file for more information.\n\n#\n",
        "Line" : 107,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Create the library target store the name in Nemesis_LIBRARY\n",
        "Line" : 153,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Define prerequisite packages\n",
        "Line" : 163,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Search for ExodusII\n",
        "Line" : 167,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Define the version\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#PRINT_VARIABLE(nemesis_version_string)\n\n#PRINT_VARIABLE(nemesis_version)\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Send useful message if everything is found\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# find_package)handle)standard_args should set Nemesis_FOUND but it does not!\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "tools/cmake/Modules/FindNetCDF.cmake" : {
      "ObjectId" : "8e7364826f211784b41e3941602ea1f0a8e66942",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Amanzi NetCDF Find Module\n\n#\n\n# Usage:\n\n#    Control the search through NetCDF_DIR or setting environment variable\n\n#    NetCDF_ROOT to the NetCDF installation prefix.\n\n#    By default only searches for C library. To search for the C++ library\n\n#    set 'CXX' in the COMPONENTS option in find_package(NetCDF) \n\n#\n\n#    This module does not search default paths! \n\n#\n\n#    Following variables are set:\n\n#    NetCDF_FOUND            (BOOL)       Flag indicating if NetCDF was found\n\n#    NetCDF_INCLUDE_DIR      (PATH)       Path to the NetCDF include file\n\n#    NetCDF_INCLUDE_DIRS     (LIST)       List of all required include files\n\n#    NetCDF_C_LIBRARIES      (LIST)       List of all required libraries to link to \n\n#                                          the NetCDF C library\n\n#    NetCDF_CXX_LIBRARIES    (LIST)       List of all required libraries to link to \n\n#                                          the NetCDF C++ library (If CXX is in COMPONENTS)\n\n#\n\n#    Additional variables set\n\n#    NetCDF_C_LIBRARY        (FILE)       NetCDF C library\n\n#    NetCDF_CXX_LIBRARY      (FILE)       NetCDF C++ library (If CXX is in the COMPONENTS)\n\n#    NetCDF_LARGE_DIMS       (BOOL)       Checks the header files for size of \n\n#                                          NC_MAX_DIMS, NC_MAX_VARS and NC_MAX_VARS_DIMS\n\n#                                          Returns TRUE if\n\n#                                          NC_MAX_DIMS >= 655363\n\n#                                          NC_MAX_VARS >= 524288\n\n#                                          NC_MAX_VAR_DIMS >= 8\n\n#\n\n# #############################################################################\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Standard CMake modules see CMAKE_ROOT/Modules\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Amanzi CMake functions see <root>/tools/cmake for source\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Macro to handle print out\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Search for the nc-config binary\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Do nothing. Variables are set. No need to search again\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Cache variables\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Search for include files\n\n# Search order preference:\n\n#  (1) NetCDF_INCLUDE_DIR - check existence of path AND if the include files exist\n\n#  (2) NetCDF_DIR/<include>\n\n#  (3) Default CMake paths See cmake --html-help=out.html file for more information.\n\n#\n",
        "Line" : 76,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Search for libraries \n\n# Search order preference:\n\n#  (1) NetCDF_LIBRARY_DIR - check existence of path AND if the include files exist\n\n#  (2) NetCDF_DIR/<lib,Lib>\n\n#  (3) Default CMake paths See cmake --html-help=out.html file for more information.\n\n#\n",
        "Line" : 135,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Define the NetCDF library targets\n",
        "Line" : 178,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# If NetCDF was built with HDF5 then add that to the target properties\n\n# NetCDF calls HDF5 HL routines and not all HDF5 installations will have \n\n# this library. Warn the user if HL is not detected. Use the \n\n# HDF5_C_LIBRARIES to define link needs since it will contain hdf5 and\n\n# hdf5_hl.\n",
        "Line" : 198,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# Now create the target 'netcdf'\n",
        "Line" : 216,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# Large dimension check here\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Determine the version\n",
        "Line" : 261,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Search for the C++ libraries if requested\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Send useful message if everything is found\n",
        "Line" : 332,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "tools/cmake/Modules/FindOpenMP_Fortran.cmake" : {
      "ObjectId" : "9eab2fc1d409967c7cb0611c90dbe1d552916acf",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Finds OpenMP support\n\n# This module can be used to detect OpenMP support in a compiler.\n\n# If the compiler supports OpenMP, the flags required to compile with\n\n# openmp support are set.\n\n#\n\n# This module was modified from the standard FindOpenMP module to find Fortran\n\n# flags.\n\n#\n\n# The following variables are set:\n\n# OpenMP_Fortran_FLAGS - flags to add to the Fortran compiler for OpenMP\n\n# support. In general, you must use these at both\n\n# compile- and link-time.\n\n# OMP_NUM_PROCS - the max number of processors available to OpenMP\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2009 Kitware, Inc.\n\n# Copyright 2008-2009 André Rigland Brodtkorb <Andre.Brodtkorb@ifi.uio.no>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n# License text for the above reference.)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Microsoft Visual Studio\n",
        "Line" : 32,
        "CharPositionInLine" : 5
      },
      "3" : {
        "Text" : "#Intel windows\n",
        "Line" : 34,
        "CharPositionInLine" : 5
      },
      "4" : {
        "Text" : "#Intel\n",
        "Line" : 36,
        "CharPositionInLine" : 5
      },
      "5" : {
        "Text" : "#Gnu\n",
        "Line" : 38,
        "CharPositionInLine" : 5
      },
      "6" : {
        "Text" : "#Empty, if compiler automatically accepts openmp\n",
        "Line" : 40,
        "CharPositionInLine" : 5
      },
      "7" : {
        "Text" : "#Sun\n",
        "Line" : 42,
        "CharPositionInLine" : 5
      },
      "8" : {
        "Text" : "#HP\n",
        "Line" : 44,
        "CharPositionInLine" : 5
      },
      "9" : {
        "Text" : "#IBM XL C/c++\n",
        "Line" : 46,
        "CharPositionInLine" : 5
      },
      "10" : {
        "Text" : "#Portland Group\n",
        "Line" : 48,
        "CharPositionInLine" : 5
      },
      "11" : {
        "Text" : "# check fortran compiler. also determine number of processors\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# handle the standard arguments for FIND_PACKAGE\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "tools/cmake/Modules/FindPETSc.cmake" : {
      "ObjectId" : "e08580faada5fef16b5e13904bf4187ae8ffd587",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Amanzi PETSC Find Module\n\n#\n\n# Usage:\n\n#    Control the search through PETSC_DIR or setting environment variable\n\n#    PETSC_ROOT to the PETSC installation prefix.\n\n#\n\n#    This module does not search default paths! \n\n#\n\n#    Following variables are set:\n\n#    PETSC_FOUND            (BOOL)       Flag indicating if PETSC was found\n\n#    PETSC_INCLUDE_DIR      (PATH)       Path to the PETSC include file\n\n#    PETSC_INCLUDE_DIRS     (LIST)       List of all required include files\n\n#    PETSC_LIBRARY_DIR      (PATH)       Path to the PETSC library\n\n#    PETSC_LIBRARY          (FILE)       PETSC library\n\n#    PETSC_LIBRARIES        (LIST)       List of all required PETSC libraries\n\n#\n\n#    Additional variables\n\n#    PETSC_VERSION          (STRING)     PETSC Version string\n\n#\n\n# #############################################################################\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Standard CMake modules see CMAKE_ROOT/Modules\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Amanzi CMake functions see <root>/tools/cmake for source\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Do nothing. Variables are set. No need to search again\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Cache variables\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Search for include files\n\n# Search order preference:\n\n#  (1) PETSC_INCLUDE_DIR - check existence of path AND if the include files exist\n\n#  (2) PETSC_DIR/<include>\n\n#  (3) Default CMake paths See cmake --html-help=out.html file for more information.\n\n#\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Search for libraries \n\n# Search order preference:\n\n#  (1) PETSC_LIBRARY_DIR - check existence of path AND if the library file exists\n\n#  (2) PETSC_DIR/<lib,Lib>\n\n#  (3) Default CMake paths See cmake --html-help=out.html file for more information.\n\n#\n",
        "Line" : 109,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Create the library target store the name in PETSC_LIBRARY\n",
        "Line" : 157,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Define prerequisite packages\n",
        "Line" : 166,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# PETSc generates a CMake configuration file that contains the\n\n# required TPLs. I use an include here instead of find_package\n\n# to prevent a recursive call.\n",
        "Line" : 170,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Include paths\n",
        "Line" : 178,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# TPL libraries, some of the items in this list are not defined!\n",
        "Line" : 184,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# set target properties   \n",
        "Line" : 193,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# Define the version\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Send useful message if everything is found\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "tools/cmake/Modules/FindPFLOTRAN.cmake" : {
      "ObjectId" : "4dd3bc952407f2510d896d430b12a1667a0d5f2c",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Amanzi PFLOTRAN Find Module\n\n#\n\n# Usage:\n\n#    Control the search through PFLOTRAN_DIR or setting environment variable\n\n#    PFLOTRAN_ROOT to the PFLOTRAN installation prefix.\n\n#\n\n#    This module does not search default paths! \n\n#\n\n#    Following variables are set:\n\n#    PFLOTRAN_FOUND            (BOOL)       Flag indicating if PFLOTRAN was found\n\n#    PFLOTRAN_INCLUDE_DIR      (PATH)       Path to the PFLOTRAN include file\n\n#    PFLOTRAN_INCLUDE_DIRS     (LIST)       List of all required include files\n\n#    PFLOTRAN_LIBRARY_DIR      (PATH)       Path to the PFLOTRAN library\n\n#    PFLOTRAN_LIBRARY          (FILE)       PFLOTRAN library\n\n#    PFLOTRAN_LIBRARIES        (LIST)       List of all required PFLOTRAN libraries\n\n#\n\n# #############################################################################\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Standard CMake modules see CMAKE_ROOT/Modules\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Amanzi CMake functions see <root>/tools/cmake for source\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Do nothing. Variables are set. No need to search again\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Cache variables\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#find_path(PFLOTRAN_LIBRARY_DIR NAMES libpflotranchem.a PATHS ${PFLOTRAN_DIR}/pflotran/src/pflotran)\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Search for libraries \n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Define the LIBRARIES and INCLUDE_DIRS\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Send useful message if everything is found\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# find_package_handle_standard_args should set PFLOTRAN_FOUND but it does not!\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "tools/cmake/Modules/FindPython.cmake" : {
      "ObjectId" : "f5087acde6b345225cfd35ac5e756226c6802eec",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ############################################################################ #\n\n#\n\n# CMake FindPython module\n\n#\n\n# ############################################################################ #\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Search for the Python executable\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Call PythonInterp to find the python executable\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Define the version\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Search for the PYTHON_INCLUDE_DIRS and PYTHON_LIBRARIES\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "tools/cmake/Modules/FindSEACAS.cmake" : {
      "ObjectId" : "b9f3758a7b167ef0879490a7cea15e729a3b18e1",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Amanzi SEACAS Find Module\n\n#\n\n# Usage:\n\n#    Control the search through SEACAS_DIR or setting environment variable\n\n#    SEACAS_ROOT to the SEACAS installation prefix.\n\n#\n\n#    This module does not search default paths! \n\n#\n\n#    Following variables are set:\n\n#    SEACAS_FOUND            (BOOL)       Flag indicating if SEACAS was found\n\n#    SEACAS_INCLUDE_DIR      (PATH)       Path to the SEACAS include file\n\n#    SEACAS_INCLUDE_DIRS     (LIST)       List of all required include files\n\n#    SEACAS_LIBRARY_DIR      (PATH)       Path to the SEACAS library\n\n#    SEACAS_LIBRARY          (FILE)       SEACAS library\n\n#    SEACAS_LIBRARIES        (LIST)       List of all required SEACAS libraries\n\n#\n\n# #############################################################################\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Standard CMake modules see CMAKE_ROOT/Modules\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Amanzi CMake functions see <root>/tools/cmake for source\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Do nothing. Variables are set. No need to search again\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Cache variables\n",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Search for ExodusII include files\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Search for libraries \n\n# set(exodus_lib_names \"exoIIv2c\" \"exodus\")\n",
        "Line" : 100,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Create the library target store the name in SEACAS_LIBRARY\n",
        "Line" : 157,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Define prerequisite packages\n",
        "Line" : 176,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Search for NetCDF\n",
        "Line" : 180,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Send useful message if everything is found\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# find_package should set SEACAS_FOUND but it does not!\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "tools/cmake/Modules/FindSilo.cmake" : {
      "ObjectId" : "8d32bb0bdc44239de2a9041bf30398ab4d83c108",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Amanzi Silo Find Module\n\n#\n\n# Usage:\n\n#    Control the search through Silo_DIR or setting environment variable\n\n#    Silo_ROOT to the Silo installation prefix.\n\n#\n\n#    This module does not search default paths! \n\n#\n\n#    Following variables are set:\n\n#    Silo_FOUND            (BOOL)       Flag indicating if Silo was found\n\n#    Silo_INCLUDE_DIR      (PATH)       Path to the Silo include file\n\n#    Silo_INCLUDE_DIRS     (LIST)       List of all required include files\n\n#    Silo_LIBRARY_DIR      (PATH)       Path to the Silo library\n\n#    Silo_LIBRARY          (FILE)       Silo library\n\n#    Silo_LIBRARIES        (LIST)       List of all required Silo libraries\n\n#\n\n# #############################################################################\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Standard CMake modules see CMAKE_ROOT/Modules\n\n#include(FindPackageHandleStandardArgs)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Amanzi CMake functions see <root>/tools/cmake for source\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Do nothing. Variables are set. No need to search again\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Cache variables\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Search for include files\n\n# Search order preference:\n\n#  (1) Silo_INCLUDE_DIR - check existence of path AND if the include files exist\n\n#  (2) Silo_DIR/<include>\n\n#  (3) Default CMake paths See cmake --html-help=out.html file for more information.\n\n#\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Search for libraries \n\n# Search order preference:\n\n#  (1) Silo_LIBRARY_DIR - check existence of path AND if the library file exists\n\n#  (2) Silo_DIR/<lib,Lib>\n\n#  (3) Default CMake paths See cmake --html-help=out.html file for more information.\n\n#\n",
        "Line" : 102,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Create the target\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Update the INCLUDE_DIRS and LIBRARIES variables\n",
        "Line" : 157,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Define the dependent libs\n",
        "Line" : 161,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Silo depends on HDF5\n",
        "Line" : 164,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# find_package_handle_standard_args should set Silo_FOUND but it does not!\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define the version\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "tools/cmake/Modules/FindUnitTest.cmake" : {
      "ObjectId" : "9f3d01d9249765d84d3ea4cbdd15575e40d169f7",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Amanzi UnitTest Find Module\n\n#\n\n# Usage:\n\n#    Control the search through UnitTest_DIR or setting environment variable\n\n#    UnitTest_ROOT to the UnitTest installation prefix.\n\n#\n\n#    This module does not search default paths! \n\n#\n\n#    Following variables are set:\n\n#    UnitTest_FOUND            (BOOL)       Flag indicating if UnitTest was found\n\n#    UnitTest_INCLUDE_DIR      (PATH)       Path to the UnitTest include file\n\n#    UnitTest_INCLUDE_DIRS     (LIST)       List of all required include files\n\n#    UnitTest_LIBRARY_DIR      (PATH)       Path to the UnitTest library\n\n#    UnitTest_LIBRARY          (FILE)       UnitTest library\n\n#    UnitTest_LIBRARIES        (LIST)       List of all required UnitTest libraries\n\n#\n\n# #############################################################################\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Standard CMake modules see CMAKE_ROOT/Modules\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Amanzi CMake functions see <root>/tools/cmake for source\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Do nothing. Variables are set. No need to search again\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Cache variables\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Search for include files\n\n# Search order preference:\n\n#  (1) UnitTest_INCLUDE_DIR - check existence of path AND if the include files exist\n\n#  (2) UnitTest_DIR/<include,include/UnitTest++,include/unittest++>\n\n#  (3) Default CMake paths See cmake --html-help=out.html file for more information.\n\n#\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Search for libraries \n\n# Search order preference:\n\n#  (1) UnitTest_LIBRARY_DIR - check existence of path AND if the include files exist\n\n#  (2) UnitTest_DIR/<lib,lib/UnitTest++,lib/unittest++>\n\n#  (3) Default CMake paths See cmake --html-help=out.html file for more information.\n\n#\n",
        "Line" : 106,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# UnitTest does not have any prerequisite libraries\n",
        "Line" : 158,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Send useful message if everything is found\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# find_package)handle)standard_args should set UnitTest_FOUND but it does not!\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "tools/cmake/Modules/FindXERCES.cmake" : {
      "ObjectId" : "a28d978f37a97aba1834ce3a6556f8afb0c6016b",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Amanzi XERCES Find Module\n\n#\n\n# Usage:\n\n#    Control the search through XERCES_DIR or setting environment variable\n\n#    XERCES_ROOT to the XERCES installation prefix.\n\n#\n\n#    This module does not search default paths! \n\n#\n\n#    Following variables are set:\n\n#    XERCES_FOUND            (BOOL)       Flag indicating if XERCES was found\n\n#    XERCES_INCLUDE_DIR      (PATH)       Path to the XERCES include file\n\n#    XERCES_INCLUDE_DIRS     (LIST)       List of all required include files\n\n#    XERCES_LIBRARY_DIR      (PATH)       Path to the XERCES library\n\n#    XERCES_LIBRARY          (FILE)       XERCES library\n\n#    XERCES_LIBRARIES        (LIST)       List of all required XERCES libraries\n\n#\n\n# #############################################################################\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Standard CMake modules see CMAKE_ROOT/Modules\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Amanzi CMake functions see <root>/tools/cmake for source\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Do nothing. Variables are set. No need to search again\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Cache variables\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Search for include files\n\n# Search order preference:\n\n#  (1) XERCES_INCLUDE_DIR - check existence of path AND if the include files exist\n\n#  (2) XERCES_DIR/<include>\n\n#  (3) Default CMake paths See cmake --html-help=out.html file for more information.\n\n#\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#set(xerces_inc_suffixes  \"xercesc\" )\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Search for libraries \n\n# Search order preference:\n\n#  (1) XERCES_LIBRARY_DIR - check existence of path AND if the include files exist\n\n#  (2) XERCES_DIR/<lib,Lib>\n\n#  (3) Default CMake paths See cmake --html-help=out.html file for more information.\n\n#\n",
        "Line" : 95,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Grab the library dependencies from the setting file xerces-c.pc\n",
        "Line" : 149,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# For now we don't recurse on *.la files\n",
        "Line" : 157,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Drop system libraries (-L/usr/*) because they should be in the system linker already\n\n# -- would be more robust to get ld search path, and then drop overlapping.\n",
        "Line" : 161,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Add dependency on frameworks for OSX (it doesn't appear in this list for some reason)\n",
        "Line" : 169,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Define the LIBRARIES and INCLUDE_DORS\n",
        "Line" : 174,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Send useful message if everything is found\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# find_package)handle)standard_args should set XERCES_FOUND but it does not!\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "tools/cmake/PreprocessBoxLibFortran.cmake" : {
      "ObjectId" : "cc996ed8c8c7c75f7305b9439535733e781a142c",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n\n# - Pass a list of Fortran files through a BoxLib-specific preprocessing \n\n#\n\n# PREPROCESS_BOXLIB_FORTRAN( OUTVAR source1 ... sourceN )\n\n#\n\n#  OUTVAR  A list containing all the output file names, suitable\n\n#          to be passed to add_executable or add_library.\n\n#\n\n# The output files are placed in the same relative location to\n\n# CMAKE_CURRENT_BINARY_DIR as they are to CMAKE_CURRENT_SOURCE_DIR.\n\n#\n\n# Example:\n\n#  preprocess_boxlib_fortran( SRCS src/test1.F src/test2.F )\n\n#  add_executable( test ${SRCS} )\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/cmake/RegisterEvaluators.cmake" : {
      "ObjectId" : "0f54d867ac69d5d000cb15ae287f93fcaf6693bc",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# This bit of code exists to autogenerate an include file\n\n# that contains the registration of evaluator factories.\n\n#\n\n# The autogenerated include file is only to be included in \n\n# the file that contains main, and not in any file that is \n\n# to be included in a library.\n\n#\n\n# How to use this...\n\n#\n\n# Use the macro\n\n#\n\n# register_evaluator_with_factory(HEADERFILE bla_reg.hh  LISTNAME REGISTER_FILE_LIST)\n\n#\n\n# to add the file bla_reg.hh to the list of files that is going\n\n# to be used to autogenerate an include file that is a concatenation\n\n# of all the _reg.hh files. This is where all specific evaluators \n\n# are registered with the factory. This concatentated include file\n\n# is created by calling the macro\n\n#\n\n# generate_evaluators_registration_header(HEADERFILE eval_reg.hh LISTNAME REGISTER_FILE_LIST  INSTALL True)\n\n#\n\n# It autogenerates the file eval_reg.hh, which must be included in the\n\n# .cc file that contains main. The argument INSTALL is optional\n\n# and if set to TRUE, True, or true, the concatenated header file\n\n# will be installed.\n\n#\n\n# The macro\n\n#\n\n# include_evaluators_directories(LISTNAME REGISTER_FILE_LIST_INCLUDES)\n\n#\n\n# must be used in the CMakeCache.txt file to add the necessary include_directories\n\n# calls. Note that the macro  generate_evaluators_registration_header  creates\n\n# a global list that contains all the necessary include directories, and names\n\n# this global list the list file name used in that macro with an appended _INCLUDES.\n\n# In the example above, the global list that stores the include directories is\n\n# called REGISTER_FILE_LIST_INCLUDES.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# prepare a temporary file to \"cat\" to:\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# remove stale files\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# concatenate the sources\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# copy the temporary file to the final location\n",
        "Line" : 78,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# install the header file \n",
        "Line" : 81,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#add_install_include_file(${LOCAL_HEADERFILE})\n",
        "Line" : 83,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# collect the necessary include directories into the list LISTNAME_INCLUDES\n",
        "Line" : 87,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "tools/cmake/SelectSearchPath.cmake" : {
      "ObjectId" : "88536c8902a05ffd42318a114dd8fe1e42eeee02",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# \n\n# Amanzi SelectSearchPath\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#PRINT_VARIABLE(pack_dir)\n\n#PRINT_VARIABLE(env_pack_root)\n\n#PRINT_VARIABLE(pack_root)\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#PRINT_VARIABLE(path_len)\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Print an error message\n",
        "Line" : 47,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 5
    },
    "tools/cmake/SpackFunctions.cmake" : {
      "ObjectId" : "c559bf68b6a07eb10781222631f7ad9b27d8f69c",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Amanzi Spack Information:\n\n# \n\n# Used for leveraging Spack functionality to install packages, find \n\n# install locations for Spack packages and their version information\n\n#\n\n# \n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#########################################################\n\n#\n\n# Install the package\n\n#\n\n#########################################################\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#########################################################\n\n#\n\n# Create symlinks between where spack installed the \n\n# package and where you actually want it installed\n\n# (i.e. the directory specified by TPL_INSTALL_PREFIX)\n\n#\n\n#########################################################\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#########################################################\n\n#\n\n# Alternatively, locate where Spack installed the package\n\n# instead of creating symlinks within the desired install\n\n# location...\n\n#\n\n# This sets the variable TMP_SPACK_INSTALL_DIR to the full\n\n# path of the install directory of the given package. \n\n# \n\n# Afterwards, variables of the form <package>_INSTALL_PREFIX\n\n# and <package>_INCLUDE_DIRS (and so on) can be set using \n\n# the info contained in this variable.\n\n#\n\n########################################################\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "########################################################\n\n#\n\n# Extract what version of the package was installed\n\n#\n\n# This sets the variable TMP_SPACK_VERSION to the version\n\n# of the package that was installed\n\n# \n\n# Afterwards, variables of the form <package>_VERSION_MAJOR\n\n# and <package>_VERSION_MINOR (and so on) can be set using\n\n# the info contained in this variable.\n\n#\n\n#########################################################\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "tools/cmake/TestManager.cmake" : {
      "ObjectId" : "ec61e61f25dcee489cd02fa6fcb8adf22196db0e",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Functions for managing tests.\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Usage:\n\n#\n\n# ADD_AMANZI_TEST(<test_name> <test_executable>\n\n#                  [arg1 ...]\n\n#                  KIND [unit | int | reg | AMANZI ]\n\n#                  [AMANZI_INPUT file.xml]\n\n#                  [SOURCE file1 file2  ...]\n\n#                  [LINK_LIBS lib1 lib2 ...]\n\n#                  [DEPENDS test1 test2 ...]\n\n#                  [PARALLEL] [EXPECTED_FAIL]\n\n#                  [NPROCS procs1 ... ]\n\n#                  [MPI_EXEC_ARGS arg1 ... ])\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Arguments:\n\n#  test_name: the name given to the resulting test in test reports\n\n#  test_executable: The test executable which performs the test. \n\n#                   Required if KIND is unit, int or reg\n\n#  arg1 ...: Additional arguments for the test executable\n\n#\n\n# Keyword KIND is required and should be one of unit, int, reg or AMANZI.\n\n#         AMANZI is a special case where the test executable is\n\n#         set to the main Amanzi binary.\n\n#\n\n# KEYWORD AMANZI_INPUT is required if keyword KIND is set to AMANZI. This\n\n#         keyword defines the Amanzi XML input file.\n\n#\n\n# Option PARALLEL signifies that this is a parallel job. This is also\n\n# implied by an NPROCS value > 1\n\n#\n\n# Optional NPROCS keyword starts a list of the number of processors to\n\n# run the test on. Defaults to 1.\n\n#\n\n# Optional MPI_EXEC_ARGS keyword denotes extra arguments to give to\n\n# mpi. It is ignored for serial tests.\n\n#\n\n# Optional SOURCE_FILES keyword that defines a list of source files\n\n# required to build test_executable. An add_executable call will be made\n\n# if this option is active.\n\n#\n\n# Optional LINK_LIBS keyword defines a list of link libraries or link options\n\n# to link test_executable. An target_link_libraries call will be made if\n\n# this option is active.\n\n#\n\n# Optional DEPENDS keyword defines a list of tests that should finish before\n\n# test_name\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# --- Initialize \n",
        "Line" : 88,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Check test_name\n",
        "Line" : 90,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Parse through the remaining options\n",
        "Line" : 95,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# --- Check options\n",
        "Line" : 101,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Require a KIND value\n",
        "Line" : 103,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Force each test to parallel run if mpiexec is required\n",
        "Line" : 108,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Force each PARALLEL TRUE if NPROCS set \n",
        "Line" : 113,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Default to nprocs=1 when running parallel\n",
        "Line" : 118,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Test the value of number of procs value\n",
        "Line" : 123,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# --- Define the test executable\n",
        "Line" : 138,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# In this case, we need the Amanzi target definition\n",
        "Line" : 142,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "#set(test_exec \"${dir}/${base}\")\n",
        "Line" : 149,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Do not set if this variable is empty\n",
        "Line" : 154,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Throw an error if test_exec is not defined\n",
        "Line" : 160,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Create the executable if SOURCE is defined\n",
        "Line" : 165,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Add link libraries if needed\n",
        "Line" : 171,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# --- Define the test arguments\n",
        "Line" : 178,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# In this case, we need an Amanzi input file\n",
        "Line" : 183,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# --- Add test\n",
        "Line" : 191,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Adjust the execuable name if NOT fullpath AND TESTS_REQUIRE_FULLPATH is set\n",
        "Line" : 193,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Construct the test execution command\n",
        "Line" : 201,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Call add_test\n",
        "Line" : 225,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# --- Add test properties\n",
        "Line" : 228,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Labels\n",
        "Line" : 230,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# Add test dependencies\n",
        "Line" : 242,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# Remaining properties are single valued. Building \n\n# test_properties as a list should get past the CMake parser.\n",
        "Line" : 248,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# Timeout\n",
        "Line" : 251,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# CTest needs to know how procs this test needs\n",
        "Line" : 256,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# Set expected failure flag\n",
        "Line" : 261,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# Usage:\n\n#\n\n# ADD_AMANZI_SMOKE_TEST(<test_name> \n\n#                       INPUT file.xml\n\n#                       [FILES file1;file2;...;fileN]\n\n#                       [PARALLEL] \n\n#                       [NPROCS procs1 ... ]\n\n#                       [MPI_EXEC_ARGS arg1 ... ])\n",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#\n\n# Arguments:\n\n#  test_name: the name given to the comparison test \n\n#\n\n# KEYWORD INPUT is required. This keyword defines the Amanzi XML input file or \n\n#         observation file.\n\n#\n\n# Option FILES lists any additional files that the test needs to run in its \n\n# directory/environment. These files will be copied from the source directory\n\n# to the run directory.\n\n#\n\n# Option PARALLEL signifies that this is a parallel job. This is also\n\n# implied by an NPROCS value > 1\n\n#\n\n# Optional NPROCS keyword starts a list of the number of processors to\n\n# run the test on. Defaults to 1.\n\n#\n\n# Optional MPI_EXEC_ARGS keyword denotes extra arguments to give to\n\n# mpi. It is ignored for serial tests.\n",
        "Line" : 281,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Check test_name\n",
        "Line" : 302,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# Parse through the remaining options\n",
        "Line" : 307,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# Set up the Amanzi input.\n",
        "Line" : 313,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# Assemble the arguments we will pass to add_amanzi_test.\n",
        "Line" : 318,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "# Copy input and files into place.\n",
        "Line" : 330,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# Call add_test\n",
        "Line" : 336,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# Usage:\n\n#\n\n# ADD_AMANZI_COMPARISON_TEST(<test_name> \n\n#                            INPUT file.xml\n\n#                            NORM L1 | L2 | Linf  <--- not supported yet.\n\n#                            REFERENCE reference\n\n#                            TOLERANCE tolerance\n\n#                            [FILES file1;file2;...;fileN]\n\n#                            [FIELD field_name]\n\n#                            [OBSERVATION obs_name] \n\n#                            [PARALLEL] \n\n#                            [NPROCS procs1 ... ]\n\n#                            [MPI_EXEC_ARGS arg1 ... ])\n",
        "Line" : 342,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#\n\n# Arguments:\n\n#  test_name: the name given to the comparison test \n\n#\n\n# One of keyword FIELD or OBSERVATION is required and should refer, respectively, to \n\n#         a field or observation in the given INPUT.\n\n#\n\n# KEYWORD INPUT is required. This keyword defines the Amanzi XML input file or \n\n#         observation file.\n\n#\n\n# KEYWORD REFERENCE The name of the file containing reference data to which \n\n#         the simulation output will be compared.\n",
        "Line" : 356,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# KEYWORD NORM The maximum L2 error norm that can be measured for a successful\n\n#         testing outcome.\n",
        "Line" : 369,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Option FILES lists any additional files that the test needs to run in its \n\n# directory/environment. These files will be copied from the source directory\n\n# to the run directory.\n\n#\n\n# Option PARALLEL signifies that this is a parallel job. This is also\n\n# implied by an NPROCS value > 1\n\n#\n\n# Optional NPROCS keyword starts a list of the number of processors to\n\n# run the test on. Defaults to 1.\n\n#\n\n# Optional MPI_EXEC_ARGS keyword denotes extra arguments to give to\n\n# mpi. It is ignored for serial tests.\n",
        "Line" : 372,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Check test_name\n",
        "Line" : 387,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "# Parse through the remaining options\n",
        "Line" : 392,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "# Set up the Amanzi input.\n",
        "Line" : 398,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "# Assemble the arguments we will pass to add_amanzi_test.\n",
        "Line" : 426,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "# Copy input and files into place.\n",
        "Line" : 438,
        "CharPositionInLine" : 2
      },
      "50" : {
        "Text" : "# Call add_test\n",
        "Line" : 444,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 51
    },
    "tools/cmake/TrilinosMacros.cmake" : {
      "ObjectId" : "09db694f530864314393dde95ab33615cc925c33",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ############################################################################ #\n\n#\n\n# Useful macros to be used with the Trilinos software package\n\n#\n\n# ############################################################################ #\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# This macro searches for a Trilnos package if\n\n# the ${package}_FOUND is not set. Loops through\n\n# the ${package}_TPL_LIST and creates \n\n# ${package}_ENABLE_<tpl> variables\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tools/cmake/Utils/AddImportedLibrary.cmake" : {
      "ObjectId" : "be4b6584a40890f50e450d5e73d44506eb202c9c",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# \n\n# Usage:\n\n#\n\n# ADD_IMPORTED_LIBRARY(name [SHARED | STATIC]\n\n#                      LOCATION <path>\n\n#                      [ LINK_LANGUAGES <lang1> <lang2> <lang3> ... ]\n\n#                      [ LINK_INTERFACE_LIBRARIES <lib1> <lib2> ... ]\n\n#                     )\n\n#                      \n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# --- Check what has been passed in\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# SHARED and STATIC can not be set at the same time\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Require a location\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Check to see if name already exists as a target\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# --- Set the library type\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# --- Add the library target \n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# --- Update the global property that tracks imported targets\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# --- Set the properties\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#\n\n# Useful macros\n\n#\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "tools/cmake/Utils/AddPackageDependency.cmake" : {
      "ObjectId" : "3da3442eb835fa5be07d38add97f6a3cd2c09816",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Amanzi \n\n#       ADD_PACKAGE_DEPENDENCY(<PACKNAME> DEPENDS_ON <req_pack>)\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CMake module\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Amanzi modules\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Macro: _print_usage\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Parse the arguments\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Define the target package name\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Define the required package\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Find required package\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Add the include paths \n",
        "Line" : 51,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Add the libraries....this can be tricky because some packages\n\n# *cough* HDF5 *cough* return a list with keywords debug, optimized\n\n# general in the list. These keywords are flags that are used when\n\n# CMAKE_BUILD_TYPE is set. Need to construct the LIBRARIES carefully\n\n# if these are present.\n",
        "Line" : 57,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# _save_lib_list tmp storage\n",
        "Line" : 74,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# Define the parsed lists if the orginal list did not contain keywords\n",
        "Line" : 78,
        "CharPositionInLine" : 12
      },
      "13" : {
        "Text" : "# Define each type and store in tmp lists removing duplicates\n",
        "Line" : 91,
        "CharPositionInLine" : 12
      },
      "14" : {
        "Text" : "#print_variable(_save_debug_list)\n",
        "Line" : 98,
        "CharPositionInLine" : 16
      },
      "15" : {
        "Text" : "#print_variable(_save_opt_list)\n",
        "Line" : 103,
        "CharPositionInLine" : 16
      },
      "16" : {
        "Text" : "#print_variable(_save_gen_list)\n",
        "Line" : 110,
        "CharPositionInLine" : 16
      },
      "17" : {
        "Text" : "# Now build the _save_lib_list with the keywords\n",
        "Line" : 113,
        "CharPositionInLine" : 12
      },
      "18" : {
        "Text" : "#  Neither list has keywords\n",
        "Line" : 131,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 19
    },
    "tools/cmake/Utils/BuildWhitespaceString.cmake" : {
      "ObjectId" : "b18514076aed5bab5f689b24a2b19500da15e6a4",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/cmake/Utils/CheckMPISourceCompiles.cmake" : {
      "ObjectId" : "22c4e417d605a2a300b99f3020277824169fcf65",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# CHECK_MPI_SOURCE_COMPILES\n\n#\n\n#  A function that verifies that the CMAKE_C_COMPILER, \n\n#  CMAKE_CXX_COMPILER and CMAKE_Fortran_COMPILER can compile and link \n\n#  a MPI test file. Since this function is a simple wrapper\n\n#  call to check_c{xx}_source_compiles macros, the following\n\n#  variables can be set before the this function to alter\n\n#  how the mocros behave:\n\n#         CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n#         CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n#         CMAKE_REQUIRED_INCLUDES = list of include directories\n\n#         CMAKE_REQUIRED_LIBRARIES = list of libraries to link\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CHECK_C_SOURCE_COMPILES is a MACRO not a function\n\n# check $VAR for compile status.\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# CHECK_C_SOURCE_COMPILES is a MACRO not a function\n\n# check $VAR for compile status.\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Check the Fortran compiler if enabled\n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# As of CMAKE 2.8.6 no CheckFortranSourceCompiles macro\n",
        "Line" : 75,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Now push up the flag to the parent namespace\n",
        "Line" : 103,
        "CharPositionInLine" : 5
      },
      "CommentCount" : 6
    },
    "tools/cmake/Utils/CreateImportedTargetFile.cmake" : {
      "ObjectId" : "47c1f2c848bc9ff4b775f2490a3bcf1a473a0be9",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# --- Macros for this function \n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# --- Begin function MAIN \n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# --- Loop through each library type\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "tools/cmake/Utils/DefineCompilerVersion.cmake" : {
      "ObjectId" : "1f737135ab9b52a719e19553fb6172fdcd53ddd7",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ############################################################################ #\n\n#\n\n# DefineCompilerVersion\n\n#  \n\n# ############################################################################ #\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define languages\n",
        "Line" : 11,
        "CharPositionInLine" : 3
      },
      "2" : {
        "Text" : "# Define the full path name of the compiler and the id\n\n# Default value for each language is NOTFOUND\n",
        "Line" : 15,
        "CharPositionInLine" : 7
      },
      "3" : {
        "Text" : "# Check only if the ID is set\n",
        "Line" : 23,
        "CharPositionInLine" : 7
      },
      "4" : {
        "Text" : "# For now, I assume the version option is the same for all languages in\n\n# a compiler group. This may need tweaking in the future.\n",
        "Line" : 29,
        "CharPositionInLine" : 9
      },
      "5" : {
        "Text" : "# Execute the command if the option was set\n",
        "Line" : 56,
        "CharPositionInLine" : 9
      },
      "6" : {
        "Text" : "# result > 0 indicates an error return \n",
        "Line" : 65,
        "CharPositionInLine" : 11
      },
      "7" : {
        "Text" : "# string(REGEX REPLACE \"([^\\n]+).*\" \"\\\\1\" first_line \"${output}\")\n",
        "Line" : 70,
        "CharPositionInLine" : 13
      },
      "8" : {
        "Text" : "# string(REGEX REPLACE \"${_regexp_pattern}\" \"\\\\1\" _version \"${first_line}\")\n",
        "Line" : 71,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# A fix for the PGI case because they use a '-' to separate the patch number. Annoying.\n",
        "Line" : 73,
        "CharPositionInLine" : 13
      },
      "10" : {
        "Text" : "# Message sent to indicate version definition\n",
        "Line" : 87,
        "CharPositionInLine" : 7
      },
      "11" : {
        "Text" : "# Push the definition back to the calling routine\n",
        "Line" : 90,
        "CharPositionInLine" : 7
      },
      "CommentCount" : 12
    },
    "tools/cmake/Utils/FindPackageHandleStandardArgs.cmake" : {
      "ObjectId" : "b864f34becaee0e4982f770f1200c6bb07eaeec7",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIND_PACKAGE_HANDLE_STANDARD_ARGS(<name> ... )\n\n#\n\n# This function is intended to be used in FindXXX.cmake modules files.\n\n# It handles the REQUIRED, QUIET and version-related arguments to FIND_PACKAGE().\n\n# It also sets the <UPPERCASED_NAME>_FOUND variable.\n\n# The package is considered found if all variables <var1>... listed contain\n\n# valid results, e.g. valid filepaths.\n\n#\n\n# There are two modes of this function. The first argument in both modes is\n\n# the name of the Find-module where it is called (in original casing).\n\n#\n\n# The first simple mode looks like this:\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(<name> (DEFAULT_MSG|\"Custom failure message\") <var1>...<varN> )\n\n# If the variables <var1> to <varN> are all valid, then <UPPERCASED_NAME>_FOUND\n\n# will be set to TRUE.\n\n# If DEFAULT_MSG is given as second argument, then the function will generate\n\n# itself useful success and error messages. You can also supply a custom error message\n\n# for the failure case. This is not recommended.\n\n#\n\n# The second mode is more powerful and also supports version checking:\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(NAME [REQUIRED_VARS <var1>...<varN>]\n\n#                                           [VERSION_VAR   <versionvar>]\n\n#                                           [HANDLE_COMPONENTS]\n\n#                                           [CONFIG_MODE]\n\n#                                           [FAIL_MESSAGE \"Custom failure message\"] )\n\n#\n\n# As above, if <var1> through <varN> are all valid, <UPPERCASED_NAME>_FOUND\n\n# will be set to TRUE.\n\n# After REQUIRED_VARS the variables which are required for this package are listed.\n\n# Following VERSION_VAR the name of the variable can be specified which holds\n\n# the version of the package which has been found. If this is done, this version\n\n# will be checked against the (potentially) specified required version used\n\n# in the find_package() call. The EXACT keyword is also handled. The default\n\n# messages include information about the required version and the version\n\n# which has been actually found, both if the version is ok or not.\n\n# If the package supports components, use the HANDLE_COMPONENTS option to enable\n\n# handling them. In this case, find_package_handle_standard_args() will report\n\n# which components have been found and which are missing, and the <NAME>_FOUND\n\n# variable will be set to FALSE if any of the required components (i.e. not the\n\n# ones listed after OPTIONAL_COMPONENTS) are missing.\n\n# Use the option CONFIG_MODE if your FindXXX.cmake module is a wrapper for\n\n# a find_package(... NO_MODULE) call.  In this case VERSION_VAR will be set\n\n# to <NAME>_VERSION and the macro will automatically check whether the\n\n# Config module was found.\n\n# Via FAIL_MESSAGE a custom failure message can be specified, if this is not\n\n# used, the default message will be displayed.\n\n#\n\n# Example for mode 1:\n\n#\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(LibXml2  DEFAULT_MSG  LIBXML2_LIBRARY LIBXML2_INCLUDE_DIR)\n\n#\n\n# LibXml2 is considered to be found, if both LIBXML2_LIBRARY and\n\n# LIBXML2_INCLUDE_DIR are valid. Then also LIBXML2_FOUND is set to TRUE.\n\n# If it is not found and REQUIRED was used, it fails with FATAL_ERROR,\n\n# independent whether QUIET was used or not.\n\n# If it is found, success will be reported, including the content of <var1>.\n\n# On repeated Cmake runs, the same message won't be printed again.\n\n#\n\n# Example for mode 2:\n\n#\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(BISON  REQUIRED_VARS BISON_EXECUTABLE\n\n#                                             VERSION_VAR BISON_VERSION)\n\n# In this case, BISON is considered to be found if the variable(s) listed\n\n# after REQUIRED_VAR are all valid, i.e. BISON_EXECUTABLE in this case.\n\n# Also the version of BISON will be checked by using the version contained\n\n# in BISON_VERSION.\n\n# Since no FAIL_MESSAGE is given, the default messages will be printed.\n\n#\n\n# Another example for mode 2:\n\n#\n\n#    FIND_PACKAGE(Automoc4 QUIET NO_MODULE HINTS /opt/automoc4)\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(Automoc4  CONFIG_MODE)\n\n# In this case, FindAutmoc4.cmake wraps a call to FIND_PACKAGE(Automoc4 NO_MODULE)\n\n# and adds an additional search directory for automoc4.\n\n# The following FIND_PACKAGE_HANDLE_STANDARD_ARGS() call produces a proper\n\n# success/error message.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2007-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# internal helper macro\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# internal helper macro to generate the failure message when used in CONFIG_MODE:\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# <name>_CONFIG is set, but FOUND is false, this means that some other of the REQUIRED_VARS was not found:\n",
        "Line" : 108,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# If _CONSIDERED_CONFIGS is set, the config-file has been found, but no suitable version.\n\n# List them all in the error message:\n",
        "Line" : 112,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Simple case: No Config-file was found at all:\n",
        "Line" : 126,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# set up the arguments for CMAKE_PARSE_ARGUMENTS and check whether we are in\n\n# new extended or in the \"old\" mode:\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# now that we collected all arguments, process them\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# In config-mode, we rely on the variable <package>_CONFIG, which is set by find_package()\n\n# when it successfully found the config-file, including version checking:\n",
        "Line" : 166,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# collect all variables which were not found, so they can be printed, so the\n\n# user knows better what went wrong (#6375)\n",
        "Line" : 183,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# check if all passed variables are valid\n",
        "Line" : 188,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# component handling\n",
        "Line" : 198,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# version handling:\n",
        "Line" : 229,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# exact version required\n",
        "Line" : 237,
        "CharPositionInLine" : 44
      },
      "15" : {
        "Text" : "# minimum version specified:\n",
        "Line" : 245,
        "CharPositionInLine" : 44
      },
      "16" : {
        "Text" : "# if the package was not found, but a version was given, add that to the output:\n",
        "Line" : 256,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# print the result:\n",
        "Line" : 277,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "#message(STATUS \"DEBUG: ${_NAME_UPPER}_FOUND=${${_NAME_UPPER}_FOUND}\")\n",
        "Line" : 294,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 19
    },
    "tools/cmake/Utils/ListJoin.cmake" : {
      "ObjectId" : "42af513b34d2aef23bcfbe0a7487bce8771e6640",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#function(LIST_JOIN VALUES GLUE OUTPUT)\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#print_variable(PARSE_VALUES)\n\n#print_variable(PARSE_GLUE)\n\n#print_variable(PARSE_OUTPUT)\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#fixes escaping\n",
        "Line" : 13,
        "CharPositionInLine" : 64
      },
      "CommentCount" : 3
    },
    "tools/cmake/Utils/ParseLibraryList.cmake" : {
      "ObjectId" : "ea42c0964766a6a9d8da21c98d4b7bfa52352bbe",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Amanzi \n\n#      \n\n#      PARSE_LIBRARY_LIST( <lib_list>\n\n#                         DEBUG   <out_debug_list>\n\n#                         OPT     <out_opt_list>\n\n#                         GENERAL <out_gen_list> )\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CMake module\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Amanzi modules\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Macro: _print_usage\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Read in args\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Now split the list\n",
        "Line" : 47,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Now set output vairables\n",
        "Line" : 69,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# If any of the lib lists are defined set flag to TRUE\n",
        "Line" : 74,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 9
    },
    "tools/cmake/Utils/PrintVariable.cmake" : {
      "ObjectId" : "904f7ba7de80a4ee3aa54bbd1656dcf114d3b285",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# \n\n# Amanzi Print variable\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tools/cmake/Utils/SetMacros.cmake" : {
      "ObjectId" : "3dbb9ba469a83bef0e305a31ccd727e73711f2bf",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# SetMacros\n\n#\n\n#  Collection of useful macros that append variables and \n\n#  define global variables.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# GLOBAL_SET(VAR_NAME ... )\n\n#  Set global variable VAR_NAME\n\n#\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# APPEND_SET(VAR item1 [item2] ...)\n\n#  Append item1 [item2] ... to variable VAR\n\n# \n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# PREPEND_SET(VAR item1 [item2] ...)\n\n#   Prepend item1 [item2] ... to variable VAR\n\n#\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# GLOBAL_APPEND_SET(VAR item1 [item2] ...)\n\n#  Append item1 [item2] ... to global variable VAR\n\n# \n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# GLOBAL_PREPEND_SET(VAR item1 [item2] ...) \n\n#  Prepend item1 [item2] ... to global variable VAR\n\n#\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "tools/cmake/Utils/SetupMPI.cmake" : {
      "ObjectId" : "cd1c7eab118093c2502b629c845faa7e066ded6e",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# SetupMPI.cmake\n\n#\n\n# This macro will set the following variables\n\n# \n\n#  MPI_WRAPPERS_IN_USE           TRUE if the CMAKE_<language>_COMPILER definitions are wrappers\n\n#  MPI_FOUND                     TRUE if MPI is located\n\n#  MPI_EXEC                      MPI parallel executable launcher\n\n#  MPI_EXEC_NUMPROC_FLAG         MPI_EXEC option that sets number of MPI ranks\n\n#  MPI_EXEC_PREFLAGS             MPI_EXEC \n\n#  MPI_EXEC_POSTFLAGS\n\n# \n\n#  If CMake VERSION is greater than 2.8.2 the following variables are also\n\n#  set. See cmake --help-module FindMPI for more information.\n\n#\n\n#  MPI_<lanuage>_COMPILER        MPI <language> compiler wrapper\n\n#  MPI_<language>_COMPILE_FLAGS  MPI <language> compile flags\n\n#  MPI_<language>_INCLUDE_PATH   MPI <language> include path\n\n#  MPI_<language>_LINK_FLAGS     MPI <language> link flags\n\n#  MPI_<language>_LIBRARIES      MPI <language libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# First check if the CMAKE_<lang>_COMPILER definitions are wrappers\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# The FindMPI changed to something useful after the 2.8.4 version\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Call FindMPI\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Although we are using wrappers we still need the MPIEXEC from FindMPI\n",
        "Line" : 35,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Set these so FindMPI works!\n",
        "Line" : 37,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# Quiet search since we know wrappers are active\n",
        "Line" : 42,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# WARN the user that links will fail since MPI is not included in most library defs\n",
        "Line" : 47,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# Attempt to locate compiler wrappers\n",
        "Line" : 53,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# Use MPI_PREFIX to set wrapper names\n",
        "Line" : 56,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# Located wrappers and now need to define include paths, and libraries\n\n# to the compile without error\n",
        "Line" : 67,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# Set the compile flags, build a list for include paths\n",
        "Line" : 71,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# The FindMPI module for versions less than 2.8.4 is worthless. Will not\n\n# attempt to adjust the compile or link flags if not using wrappers.\n",
        "Line" : 94,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# Search for MPI to define MPI_EXEC* variables\n\n# For later versions of FindMPI need to set MPI_COMPILER to search\n\n# in the correct location.\n",
        "Line" : 102,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# Now set MPIEXEC_* to the Amanzi MPI_EXEC values. We do not\n\n# want to override these values if alread set. See Cray XT\n",
        "Line" : 111,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 15
    },
    "tools/py_lib/CMakeLists.txt" : {
      "ObjectId" : "428c599bbedff38037bc72f05666210a503333b3",
      "LastModified" : "2018-10-16T04:33:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Amanzi \n\n#       Python CMakeLists.txt file\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Amanzi CMake modules\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Python\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Define the install location\n",
        "Line" : 19,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Define the Amanzi binary install location\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# List of scripts to install\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Configure files\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# List of directories to install\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Install the script in the python library for now\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Install the module directories\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 11
    }
  },
  "FileTypes" : {
    "CMAKE" : 204,
    "MAKEFILE" : 8
  },
  "ElapsedTime" : 11126
}