{
  "Repository" : "40964011",
  "Revision" : "HEAD",
  "ObjectId" : "a381038b2e8fbffd5fff08ac08020840455f1702",
  "CommitTime" : "2019-04-18T10:18:56Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "abb3544b0dfd5f80e4f2c87cc13ce508f275c5cd",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "appendix/Makefile" : {
      "ObjectId" : "586968e4bbcef57fe3cab52acd3afddf0449a7a4",
      "LastModified" : "2018-05-26T03:28:59Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "appendix/cg_event_set_flags/CMakeLists.txt" : {
      "ObjectId" : "e13ec9231723e4971c6aaf81047dac7fdb588dd2",
      "LastModified" : "2018-05-26T03:28:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "appendix/cg_event_set_flags/Makefile" : {
      "ObjectId" : "4612efecb11a33999ba07bf36bdeb256ed723ef3",
      "LastModified" : "2018-05-26T03:28:59Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "appendix/cg_post_event/CMakeLists.txt" : {
      "ObjectId" : "e13ec9231723e4971c6aaf81047dac7fdb588dd2",
      "LastModified" : "2018-05-26T03:28:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "appendix/cg_post_event/Makefile" : {
      "ObjectId" : "4612efecb11a33999ba07bf36bdeb256ed723ef3",
      "LastModified" : "2018-05-26T03:28:59Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "appendix/console_user_server_client/CMakeLists.txt" : {
      "ObjectId" : "632b8a446e28fdea33414478908d3d936bce8cbb",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "appendix/console_user_server_client/Makefile" : {
      "ObjectId" : "4612efecb11a33999ba07bf36bdeb256ed723ef3",
      "LastModified" : "2018-05-26T03:28:59Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "appendix/control_led/CMakeLists.txt" : {
      "ObjectId" : "7dc519fdfafb0798c8f6f227a4eee49abfd1bd91",
      "LastModified" : "2018-05-26T03:28:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "appendix/control_led/Makefile" : {
      "ObjectId" : "06ef10ff79b54f69bf61f37f5a749ec1d5631bb0",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "appendix/dump_constants/CMakeLists.txt" : {
      "ObjectId" : "e13ec9231723e4971c6aaf81047dac7fdb588dd2",
      "LastModified" : "2018-05-26T03:28:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "appendix/dump_constants/Makefile" : {
      "ObjectId" : "459a2cd5935196c05127eb002f47a52bd8840cd4",
      "LastModified" : "2018-05-26T03:28:59Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "appendix/dump_hid_value/CMakeLists.txt" : {
      "ObjectId" : "7dc519fdfafb0798c8f6f227a4eee49abfd1bd91",
      "LastModified" : "2018-05-26T03:28:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "appendix/dump_hid_value/Makefile" : {
      "ObjectId" : "4612efecb11a33999ba07bf36bdeb256ed723ef3",
      "LastModified" : "2018-05-26T03:28:59Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "appendix/dump_libkrbn/CMakeLists.txt" : {
      "ObjectId" : "fdd3daedf65149f2012901b8c1ff6b9d357f037e",
      "LastModified" : "2018-05-26T03:28:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "appendix/dump_libkrbn/Makefile" : {
      "ObjectId" : "a2b1d5c69f4391823721d654458c478cee63d952",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "appendix/event_tap_keyevents/CMakeLists.txt" : {
      "ObjectId" : "e13ec9231723e4971c6aaf81047dac7fdb588dd2",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "appendix/event_tap_keyevents/Makefile" : {
      "ObjectId" : "e9a1b7e5a60873a732064ba3ce1fd6ba71d4bc16",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "appendix/event_tap_monitor/CMakeLists.txt" : {
      "ObjectId" : "e13ec9231723e4971c6aaf81047dac7fdb588dd2",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "appendix/event_tap_monitor/Makefile" : {
      "ObjectId" : "4612efecb11a33999ba07bf36bdeb256ed723ef3",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "appendix/grabbable_state_manager/CMakeLists.txt" : {
      "ObjectId" : "7dc519fdfafb0798c8f6f227a4eee49abfd1bd91",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "appendix/grabbable_state_manager/Makefile" : {
      "ObjectId" : "4612efecb11a33999ba07bf36bdeb256ed723ef3",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "appendix/version_monitor/CMakeLists.txt" : {
      "ObjectId" : "af48238335b408eda45e0123f5b3af0f0db8d003",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "appendix/version_monitor/Makefile" : {
      "ObjectId" : "4612efecb11a33999ba07bf36bdeb256ed723ef3",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "appendix/virtual_device_client/CMakeLists.txt" : {
      "ObjectId" : "a210b82aeab5f0bc403c1716c179013ae6242f24",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "appendix/virtual_device_client/Makefile" : {
      "ObjectId" : "e9a1b7e5a60873a732064ba3ce1fd6ba71d4bc16",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "pkginfo/CMakeLists.txt" : {
      "ObjectId" : "7b9afb98cc7a11cb969208e806b64765ab4f5eed",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pkginfo/Makefile" : {
      "ObjectId" : "b9d9149e38527a98987721a48fe48929a2532bd5",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/Makefile" : {
      "ObjectId" : "9d28d73ed3c76c02a6a0304781eb2662b762f857",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/apps/EventViewer/CMakeLists.txt" : {
      "ObjectId" : "272d628c9846e80573218feca04e498a78eb13ab",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/apps/EventViewer/Makefile" : {
      "ObjectId" : "9952c064a73f5a027941f7bc4c81f36b1aeb8d17",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/apps/Menu/CMakeLists.txt" : {
      "ObjectId" : "36645e12c75d7bff055a088ac316b127198052ed",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/apps/Menu/Makefile" : {
      "ObjectId" : "996730a9a06c14623d35359384c16976e9a3e85b",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/apps/PreferencesWindow/CMakeLists.txt" : {
      "ObjectId" : "01f6b9aa54da09bebe4f082a5f0f5a0997d2282e",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/apps/PreferencesWindow/Makefile" : {
      "ObjectId" : "c10fc0a07f06bc2efc05a61eb20de67af9ffcf54",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/apps/Updater/CMakeLists.txt" : {
      "ObjectId" : "8049f234e667fded53cab8c84327104b95beae4a",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/apps/Updater/Makefile" : {
      "ObjectId" : "dde3b22b93059cb9c39276827b0abf014ad24ec3",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/apps/lib/KarabinerKit/CMakeLists.txt" : {
      "ObjectId" : "60256be03aa4144228ab2b99a8e3c98e23e3951a",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/apps/lib/KarabinerKit/Makefile" : {
      "ObjectId" : "72375ce4655d58fb46ea91d53a8e798a747c5061",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/bin/cli/CMakeLists.txt" : {
      "ObjectId" : "3c78aa014946fa02dec534d948f49c4d87c00f84",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/bin/cli/Makefile" : {
      "ObjectId" : "40dda6e453df460a6b27984800292bab1cad3640",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/common.cmake" : {
      "ObjectId" : "471466152b2d3e24e91b03125e731c549725a8a9",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Common configurations\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Version\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Variables to avoid string replacement in Info.plist\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/core/console_user_server/CMakeLists.txt" : {
      "ObjectId" : "f0c147326b0843b5f104c8482c6457dca62a5fe7",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/core/console_user_server/Makefile" : {
      "ObjectId" : "c227e4d2e41b774dc00a6d4c1c456b240afcc990",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/core/grabber/CMakeLists.txt" : {
      "ObjectId" : "66229d74ed97fd3866ed64c5c20f1644203bad32",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/core/grabber/Makefile" : {
      "ObjectId" : "947980f34a0456e608725807fc387c34f787f099",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/core/observer/CMakeLists.txt" : {
      "ObjectId" : "c7e3e2e320f1b5000f94b80fc034d28b7261e4e3",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/core/observer/Makefile" : {
      "ObjectId" : "6b49f69b6f1c79fcbc8d211967e13e11dd168966",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/lib/libkrbn/CMakeLists.txt" : {
      "ObjectId" : "bb7caba53eb7e950bd36071e7db911c68e03b623",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/lib/libkrbn/Makefile" : {
      "ObjectId" : "40dda6e453df460a6b27984800292bab1cad3640",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/vendor/Karabiner-VirtualHIDDevice/Makefile" : {
      "ObjectId" : "576e10141b17b1207e5d8bc12c694fb21b547ccd",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/vendor/Karabiner-VirtualHIDDevice/appendix/dump_hid_report/Makefile" : {
      "ObjectId" : "04f561e4025d9ec3759850b5ecf4049a4e7937fa",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/vendor/Karabiner-VirtualHIDDevice/example/Makefile" : {
      "ObjectId" : "8ff0ed29bed5c812dbe191ebea3a0848b422531e",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/vendor/Karabiner-VirtualHIDDevice/example/modifier_flag_manipulate_example/Makefile" : {
      "ObjectId" : "24285347ad6f7127c93af99536e4e460c4966627",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/vendor/Karabiner-VirtualHIDDevice/example/virtual_keyboard_example/Makefile" : {
      "ObjectId" : "18dd4b7a1ec9556d14d06d24ed338590cf3af897",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/vendor/Karabiner-VirtualHIDDevice/example/virtual_pointing_example/Makefile" : {
      "ObjectId" : "18dd4b7a1ec9556d14d06d24ed338590cf3af897",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/vendor/Karabiner-VirtualHIDDevice/src/Makefile" : {
      "ObjectId" : "269263cf436a023dd077de7b452ada6f8644fa77",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/vendor/Karabiner-VirtualHIDDevice/tests/Makefile" : {
      "ObjectId" : "ec496c27a479f31e17e7395ba73bd2028269db07",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/vendor/Karabiner-VirtualHIDDevice/tests/src/hid_report/Makefile" : {
      "ObjectId" : "7c5a344766d1b8f6fd2c621f59b5ba225be37a14",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/vendor/Karabiner-VirtualHIDDevice/util/format/Makefile" : {
      "ObjectId" : "7274c781b4d81888e28b9af16c2504233a6c0872",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/vendor/Karabiner-VirtualHIDDevice/util/lint/Makefile" : {
      "ObjectId" : "110d64a1e26db09bcc98b697c58bab03aea63abd",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/vendor/Makefile" : {
      "ObjectId" : "885575b3bcc9149ee7c8704acbe3527b122b4675",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/Makefile" : {
      "ObjectId" : "1a4f5c135d15902a3612ab58d907ca3015390edf",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/lib/test_runner/CMakeLists.txt" : {
      "ObjectId" : "6ce63a42687e0ac7ec74ba9cad2d7c6c2e9e2520",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/lib/test_runner/Makefile" : {
      "ObjectId" : "ca0b3c43c4285ce4a39f6f328b083e6859db3cc8",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/src/async_file_writer/CMakeLists.txt" : {
      "ObjectId" : "3a4729b412dca8f7f0597937088d04e93c8ba07f",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/src/async_file_writer/Makefile" : {
      "ObjectId" : "d8a508eed58fb2e60b531a3cf029f73acb152fd1",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/src/complex_modifications_assets/CMakeLists.txt" : {
      "ObjectId" : "7510b23390166c128034232351f8199978ac32ce",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/src/complex_modifications_assets/Makefile" : {
      "ObjectId" : "2940b8362fdfa987d2e543099c5c1d4a61aeeaea",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/src/configuration_monitor/CMakeLists.txt" : {
      "ObjectId" : "ce68e0be6d5eb84bbcdfc05c894c3587988c0153",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/src/configuration_monitor/Makefile" : {
      "ObjectId" : "546c9bdfd1877d0b502e4bf5214d5a5f47d08316",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/src/connected_devices/CMakeLists.txt" : {
      "ObjectId" : "430ee654705fdeea4cdc740eaaa1e613ff57e1c4",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/src/connected_devices/Makefile" : {
      "ObjectId" : "2940b8362fdfa987d2e543099c5c1d4a61aeeaea",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/src/connected_devices_monitor/CMakeLists.txt" : {
      "ObjectId" : "5ee2bfcb5f66d02d1f1f4e63a7c0fae1e1961f45",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/src/connected_devices_monitor/Makefile" : {
      "ObjectId" : "2940b8362fdfa987d2e543099c5c1d4a61aeeaea",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/src/core_configuration/CMakeLists.txt" : {
      "ObjectId" : "e61da8d7ee79d28bf8b6d45520b7a91bc2a1ef86",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/src/core_configuration/Makefile" : {
      "ObjectId" : "2940b8362fdfa987d2e543099c5c1d4a61aeeaea",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/src/device_properties/CMakeLists.txt" : {
      "ObjectId" : "4acf02309ff779bf86dfe7b795709a13fec838ce",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/src/device_properties/Makefile" : {
      "ObjectId" : "2940b8362fdfa987d2e543099c5c1d4a61aeeaea",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/src/device_properties_manager/CMakeLists.txt" : {
      "ObjectId" : "af09f89cdaf4890b01cc884c91302da09ad8e057",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/src/device_properties_manager/Makefile" : {
      "ObjectId" : "2940b8362fdfa987d2e543099c5c1d4a61aeeaea",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/src/event_queue/CMakeLists.txt" : {
      "ObjectId" : "52e18cca0ba3b9240e7dcbcc87f943c6c50376ac",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/src/event_queue/Makefile" : {
      "ObjectId" : "2940b8362fdfa987d2e543099c5c1d4a61aeeaea",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/src/event_tap_utility/CMakeLists.txt" : {
      "ObjectId" : "86c9691e6d403cb670f6c533d7ca995dc06cf55c",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/src/event_tap_utility/Makefile" : {
      "ObjectId" : "2940b8362fdfa987d2e543099c5c1d4a61aeeaea",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/src/grabbable_state/CMakeLists.txt" : {
      "ObjectId" : "dcf4b79c37016918dca99fe663474fc79bd011d6",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/src/grabbable_state/Makefile" : {
      "ObjectId" : "2940b8362fdfa987d2e543099c5c1d4a61aeeaea",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/src/grabber_alerts_manager/CMakeLists.txt" : {
      "ObjectId" : "4cb3ec45f40eaaf7317aafc1cb56c4a41d03d69b",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/src/grabber_alerts_manager/Makefile" : {
      "ObjectId" : "2940b8362fdfa987d2e543099c5c1d4a61aeeaea",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/src/grabber_alerts_monitor/CMakeLists.txt" : {
      "ObjectId" : "967885e467c8837a9345514834b7878df405e097",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/src/grabber_alerts_monitor/Makefile" : {
      "ObjectId" : "2940b8362fdfa987d2e543099c5c1d4a61aeeaea",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/src/json_utility/CMakeLists.txt" : {
      "ObjectId" : "c87eaf3c8759c21ec516b2f858d34d876854f4d4",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/src/json_utility/Makefile" : {
      "ObjectId" : "2940b8362fdfa987d2e543099c5c1d4a61aeeaea",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/src/keyboard_repeat_detector/CMakeLists.txt" : {
      "ObjectId" : "fc08c5e3c910933bb7a0484c0f8cb5d9a17df068",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/src/keyboard_repeat_detector/Makefile" : {
      "ObjectId" : "2940b8362fdfa987d2e543099c5c1d4a61aeeaea",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/src/manipulator/CMakeLists.txt" : {
      "ObjectId" : "c6cc45ea664185a7547c38b7d15714ebff086dbe",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/src/manipulator/Makefile" : {
      "ObjectId" : "cdb6cba47d09c5ea69a04a900413cdd8deb67d46",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/src/manipulator_basic/CMakeLists.txt" : {
      "ObjectId" : "048d3ce79993d59e65aea6d322c1ea9f52276aaa",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/src/manipulator_basic/Makefile" : {
      "ObjectId" : "2940b8362fdfa987d2e543099c5c1d4a61aeeaea",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/src/manipulator_conditions/CMakeLists.txt" : {
      "ObjectId" : "dcb5cc483c406cf39c93b0df06cfdcd833f87d64",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/src/manipulator_conditions/Makefile" : {
      "ObjectId" : "2940b8362fdfa987d2e543099c5c1d4a61aeeaea",
      "LastModified" : "2019-03-15T16:59:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/src/manipulator_mouse_motion_to_scroll/CMakeLists.txt" : {
      "ObjectId" : "8f210e1c27506c2d585b39d2e424bd87044b3982",
      "LastModified" : "2019-04-12T15:00:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/src/manipulator_mouse_motion_to_scroll/Makefile" : {
      "ObjectId" : "2940b8362fdfa987d2e543099c5c1d4a61aeeaea",
      "LastModified" : "2019-03-30T06:57:26Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/src/manipulator_types/CMakeLists.txt" : {
      "ObjectId" : "a4a7708f1d37e522789f9db4f62e9e32555b35c7",
      "LastModified" : "2019-03-30T06:57:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/src/manipulator_types/Makefile" : {
      "ObjectId" : "2940b8362fdfa987d2e543099c5c1d4a61aeeaea",
      "LastModified" : "2019-03-30T06:57:26Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/src/modifier_flag_manager/CMakeLists.txt" : {
      "ObjectId" : "5e99cfbdcb5198118c1a68110fc7e67b67676fc5",
      "LastModified" : "2019-03-30T06:57:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/src/modifier_flag_manager/Makefile" : {
      "ObjectId" : "2940b8362fdfa987d2e543099c5c1d4a61aeeaea",
      "LastModified" : "2019-03-30T06:57:26Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/src/pointing_button_manager/CMakeLists.txt" : {
      "ObjectId" : "fe94b1eb82ec9e6bd37d9a1e779b444613e0fa17",
      "LastModified" : "2019-03-30T06:57:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/src/pointing_button_manager/Makefile" : {
      "ObjectId" : "2940b8362fdfa987d2e543099c5c1d4a61aeeaea",
      "LastModified" : "2019-03-30T06:57:26Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/src/post_event_to_virtual_devices/CMakeLists.txt" : {
      "ObjectId" : "6a9a56f0e0eae9af86f7c98ae9cff507ef9b6f88",
      "LastModified" : "2019-03-30T06:57:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/src/post_event_to_virtual_devices/Makefile" : {
      "ObjectId" : "cdb6cba47d09c5ea69a04a900413cdd8deb67d46",
      "LastModified" : "2019-03-30T06:57:26Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/src/pressed_keys_manager/CMakeLists.txt" : {
      "ObjectId" : "be21b71ed9649fbf62df95c80bc196c7dbe91f87",
      "LastModified" : "2019-03-30T06:57:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/src/pressed_keys_manager/Makefile" : {
      "ObjectId" : "2940b8362fdfa987d2e543099c5c1d4a61aeeaea",
      "LastModified" : "2019-03-30T06:57:26Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/src/types/CMakeLists.txt" : {
      "ObjectId" : "b2e0a4f9cb1b7f3a94b6dcefbdb78a9277bdb803",
      "LastModified" : "2019-03-30T06:57:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/src/types/Makefile" : {
      "ObjectId" : "2940b8362fdfa987d2e543099c5c1d4a61aeeaea",
      "LastModified" : "2019-03-30T06:57:26Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/src/version_monitor/CMakeLists.txt" : {
      "ObjectId" : "2c06370cc9cdfb67e8d0ef5de6d0572db532b07d",
      "LastModified" : "2019-03-30T06:57:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/src/version_monitor/Makefile" : {
      "ObjectId" : "2940b8362fdfa987d2e543099c5c1d4a61aeeaea",
      "LastModified" : "2019-03-30T06:57:26Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/src/virtual_hid_device_utility/CMakeLists.txt" : {
      "ObjectId" : "2f5d4c82257c61a219d466bf96bd4ddb4a8c986a",
      "LastModified" : "2019-03-30T06:57:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/src/virtual_hid_device_utility/Makefile" : {
      "ObjectId" : "2940b8362fdfa987d2e543099c5c1d4a61aeeaea",
      "LastModified" : "2019-03-30T06:57:26Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/tests.cmake" : {
      "ObjectId" : "4b58da4472eccf922896bb50e94689647580ac65",
      "LastModified" : "2019-03-30T06:57:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/vendor/cget/pkg/catchorg__Catch2/install/lib/cmake/Catch2/Catch.cmake" : {
      "ObjectId" : "486e323318cb16a7a65bcf4e26244086d8497617",
      "LastModified" : "2019-03-30T06:57:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[=======================================================================[.rst:\nCatch\n-----\n\nThis module defines a function to help use the Catch test framework.\n\nThe :command:`catch_discover_tests` discovers tests by asking the compiled test\nexecutable to enumerate its tests.  This does not require CMake to be re-run\nwhen tests change.  However, it may not work in a cross-compiling environment,\nand setting test properties is less convenient.\n\nThis command is intended to replace use of :command:`add_test` to register\ntests, and will create a separate CTest test for each Catch test case.  Note\nthat this is in some cases less efficient, as common set-up and tear-down logic\ncannot be shared by multiple test cases executing in the same instance.\nHowever, it provides more fine-grained pass/fail information to CTest, which is\nusually considered as more beneficial.  By default, the CTest test name is the\nsame as the Catch name; see also ``TEST_PREFIX`` and ``TEST_SUFFIX``.\n\n.. command:: catch_discover_tests\n\n  Automatically add tests with CTest by querying the compiled test executable\n  for available tests::\n\n    catch_discover_tests(target\n                         [TEST_SPEC arg1...]\n                         [EXTRA_ARGS arg1...]\n                         [WORKING_DIRECTORY dir]\n                         [TEST_PREFIX prefix]\n                         [TEST_SUFFIX suffix]\n                         [PROPERTIES name1 value1...]\n                         [TEST_LIST var]\n    )\n\n  ``catch_discover_tests`` sets up a post-build command on the test executable\n  that generates the list of tests by parsing the output from running the test\n  with the ``--list-test-names-only`` argument.  This ensures that the full\n  list of tests is obtained.  Since test discovery occurs at build time, it is\n  not necessary to re-run CMake when the list of tests changes.\n  However, it requires that :prop_tgt:`CROSSCOMPILING_EMULATOR` is properly set\n  in order to function in a cross-compiling environment.\n\n  Additionally, setting properties on tests is somewhat less convenient, since\n  the tests are not available at CMake time.  Additional test properties may be\n  assigned to the set of tests as a whole using the ``PROPERTIES`` option.  If\n  more fine-grained test control is needed, custom content may be provided\n  through an external CTest script using the :prop_dir:`TEST_INCLUDE_FILES`\n  directory property.  The set of discovered tests is made accessible to such a\n  script via the ``<target>_TESTS`` variable.\n\n  The options are:\n\n  ``target``\n    Specifies the Catch executable, which must be a known CMake executable\n    target.  CMake will substitute the location of the built executable when\n    running the test.\n\n  ``TEST_SPEC arg1...``\n    Specifies test cases, wildcarded test cases, tags and tag expressions to\n    pass to the Catch executable with the ``--list-test-names-only`` argument.\n\n  ``EXTRA_ARGS arg1...``\n    Any extra arguments to pass on the command line to each test case.\n\n  ``WORKING_DIRECTORY dir``\n    Specifies the directory in which to run the discovered test cases.  If this\n    option is not provided, the current binary directory is used.\n\n  ``TEST_PREFIX prefix``\n    Specifies a ``prefix`` to be prepended to the name of each discovered test\n    case.  This can be useful when the same test executable is being used in\n    multiple calls to ``catch_discover_tests()`` but with different\n    ``TEST_SPEC`` or ``EXTRA_ARGS``.\n\n  ``TEST_SUFFIX suffix``\n    Similar to ``TEST_PREFIX`` except the ``suffix`` is appended to the name of\n    every discovered test case.  Both ``TEST_PREFIX`` and ``TEST_SUFFIX`` may\n    be specified.\n\n  ``PROPERTIES name1 value1...``\n    Specifies additional properties to be set on all tests discovered by this\n    invocation of ``catch_discover_tests``.\n\n  ``TEST_LIST var``\n    Make the list of tests available in the variable ``var``, rather than the\n    default ``<target>_TESTS``.  This can be useful when the same test\n    executable is being used in multiple calls to ``catch_discover_tests()``.\n    Note that this variable is only available in CTest.\n\n#]=======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#------------------------------------------------------------------------------\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Generate a unique name based on the extra arguments\n",
        "Line" : 112,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Define rule to generate test list for aforementioned test executable\n",
        "Line" : 116,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Add discovered tests to directory TEST_INCLUDE_FILES\n",
        "Line" : 151,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Add discovered tests as directory TEST_INCLUDE_FILE if possible\n",
        "Line" : 156,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "###############################################################################\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "tests/vendor/cget/pkg/catchorg__Catch2/install/lib/cmake/Catch2/Catch2Config.cmake" : {
      "ObjectId" : "162ffa8264501dd457ab42504bece8a175094c57",
      "LastModified" : "2019-03-30T06:57:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "####### Expanded from @PACKAGE_INIT@ by configure_package_config_file() #######\n\n####### Any changes to this file will be overwritten by the next CMake run ####\n\n####### The input file was Catch2Config.cmake.in                            ########\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "####################################################################################\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Avoid repeatedly including the targets\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Provide path for scripts\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "tests/vendor/cget/pkg/catchorg__Catch2/install/lib/cmake/Catch2/Catch2ConfigVersion.cmake" : {
      "ObjectId" : "1408a4f5bd80780c9f5c594bcb384628497ad37e",
      "LastModified" : "2019-03-30T06:57:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is a basic version file for the Config-mode of find_package().\n\n# It is used by write_basic_package_version_file() as input file for configure_file()\n\n# to create a version-file which can be installed along a config.cmake file.\n\n#\n\n# The created file sets PACKAGE_VERSION_EXACT if the current version string and\n\n# the requested version string are exactly the same and it sets\n\n# PACKAGE_VERSION_COMPATIBLE if the current version is >= requested version,\n\n# but only if the requested major version is the same as the current one.\n\n# The variable CVF_VERSION must be set before calling configure_file().\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# if the installed or the using project don't have CMAKE_SIZEOF_VOID_P set, ignore it:\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# check that the installed version has the same 32/64bit-ness as the one which is currently searching:\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tests/vendor/cget/pkg/catchorg__Catch2/install/lib/cmake/Catch2/Catch2Targets.cmake" : {
      "ObjectId" : "301098308e2ff0066341dea41bbc05c91ef33829",
      "LastModified" : "2019-03-30T06:57:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Generated by CMake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#----------------------------------------------------------------\n\n# Generated CMake target import file.\n\n#----------------------------------------------------------------\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Commands may need to know the format version.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Protect against multiple inclusion, which would fail when already imported targets are added once more.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Compute the installation prefix relative to this file.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Create imported target Catch2::Catch2\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Load information for each installed configuration.\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Cleanup temporary variables.\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Loop over all imported files and verify that they actually exist\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# This file does not depend on other imported targets which have\n\n# been exported from the same project but in a separate export set.\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Commands beyond this point should not need to know the version.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "tests/vendor/cget/pkg/catchorg__Catch2/install/lib/cmake/Catch2/CatchAddTests.cmake" : {
      "ObjectId" : "2220ce3ac6b987b1e8b1ae82466a3f715916687c",
      "LastModified" : "2019-03-30T06:57:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# form a bracket_argument\n",
        "Line" : 17,
        "CharPositionInLine" : 44
      },
      "2" : {
        "Text" : "# Run test executable to get list of available tests\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Catch --list-test-names-only reports the number of tests, so 0 is... surprising\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Parse output\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# use escape commas to handle properly test cases with commans inside the name\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# ...and add to script\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Create a list of all discovered tests, which users may use to e.g. set\n\n# properties on the tests\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Write CTest script\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "tests/vendor/cget/pkg/catchorg__Catch2/install/lib/cmake/Catch2/ParseAndAddCatchTests.cmake" : {
      "ObjectId" : "ff4fc66773172150eb78aa8a555b4009e1465b31",
      "LastModified" : "2019-03-30T06:57:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#==================================================================================================#\n\n#  supported macros                                                                                #\n\n#    - TEST_CASE,                                                                                  #\n\n#    - SCENARIO,                                                                                   #\n\n#    - TEST_CASE_METHOD,                                                                           #\n\n#    - CATCH_TEST_CASE,                                                                            #\n\n#    - CATCH_SCENARIO,                                                                             #\n\n#    - CATCH_TEST_CASE_METHOD.                                                                     #\n\n#                                                                                                  #\n\n#  Usage                                                                                           #\n\n# 1. make sure this module is in the path or add this otherwise:                                   #\n\n#    set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} \"${CMAKE_SOURCE_DIR}/cmake.modules/\")              #\n\n# 2. make sure that you've enabled testing option for the project by the call:                     #\n\n#    enable_testing()                                                                              #\n\n# 3. add the lines to the script for testing target (sample CMakeLists.txt):                       #\n\n#        project(testing_target)                                                                   #\n\n#        set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} \"${CMAKE_SOURCE_DIR}/cmake.modules/\")          #\n\n#        enable_testing()                                                                          #\n\n#                                                                                                  #\n\n#        find_path(CATCH_INCLUDE_DIR \"catch.hpp\")                                                  #\n\n#        include_directories(${INCLUDE_DIRECTORIES} ${CATCH_INCLUDE_DIR})                          #\n\n#                                                                                                  #\n\n#        file(GLOB SOURCE_FILES \"*.cpp\")                                                           #\n\n#        add_executable(${PROJECT_NAME} ${SOURCE_FILES})                                           #\n\n#                                                                                                  #\n\n#        include(ParseAndAddCatchTests)                                                            #\n\n#        ParseAndAddCatchTests(${PROJECT_NAME})                                                    #\n\n#                                                                                                  #\n\n# The following variables affect the behavior of the script:                                       #\n\n#                                                                                                  #\n\n#    PARSE_CATCH_TESTS_VERBOSE (Default OFF)                                                       #\n\n#    -- enables debug messages                                                                     #\n\n#    PARSE_CATCH_TESTS_NO_HIDDEN_TESTS (Default OFF)                                               #\n\n#    -- excludes tests marked with [!hide], [.] or [.foo] tags                                     #\n\n#    PARSE_CATCH_TESTS_ADD_FIXTURE_IN_TEST_NAME (Default ON)                                       #\n\n#    -- adds fixture class name to the test name                                                   #\n\n#    PARSE_CATCH_TESTS_ADD_TARGET_IN_TEST_NAME (Default ON)                                        #\n\n#    -- adds cmake target name to the test name                                                    #\n\n#    PARSE_CATCH_TESTS_ADD_TO_CONFIGURE_DEPENDS (Default OFF)                                      #\n\n#    -- causes CMake to rerun when file with tests changes so that new tests will be discovered    #\n\n#                                                                                                  #\n\n# One can also set (locally) the optional variable OptionalCatchTestLauncher to precise the way    #\n\n# a test should be run. For instance to use test MPI, one can write                                #\n\n#     set(OptionalCatchTestLauncher ${MPIEXEC} ${MPIEXEC_NUMPROC_FLAG} ${NUMPROC})                 #\n\n# just before calling this ParseAndAddCatchTests function                                          #\n\n#                                                                                                  #\n\n#==================================================================================================#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This removes the contents between\n\n#  - block comments (i.e. /* ... */)\n\n#  - full line comments (i.e. // ... )\n\n# contents have been read into '${CppCode}'.\n\n# !keep partial line comments\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Worker function\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# According to CMake docs EXISTS behavior is well-defined only for full paths.\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Remove block and fullline comments\n",
        "Line" : 90,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Find definition of test names\n",
        "Line" : 93,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Strip newlines\n",
        "Line" : 106,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Get test type and fixture if applicable\n",
        "Line" : 109,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# Get string parts of test definition\n",
        "Line" : 114,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Strip wrapping quotation marks\n",
        "Line" : 117,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Validate that a test name and tags have been provided\n",
        "Line" : 121,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# Assign name and tags\n",
        "Line" : 127,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# add target to labels to enable running all tests added from this target\n",
        "Line" : 140,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# remove target from labels if the test is hidden\n",
        "Line" : 145,
        "CharPositionInLine" : 12
      },
      "14" : {
        "Text" : "# unset tags variable from previous loop\n",
        "Line" : 152,
        "CharPositionInLine" : 10
      },
      "15" : {
        "Text" : "# Escape commas in the test spec\n",
        "Line" : 175,
        "CharPositionInLine" : 12
      },
      "16" : {
        "Text" : "# Add the test and set its properties\n",
        "Line" : 178,
        "CharPositionInLine" : 12
      },
      "17" : {
        "Text" : "# Old CMake versions do not document VERSION_GREATER_EQUAL, so we use VERSION_GREATER with 3.8 instead\n",
        "Line" : 180,
        "CharPositionInLine" : 12
      },
      "18" : {
        "Text" : "# entry point\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "tests/vendor/lib/cmake/Catch2/Catch.cmake" : {
      "ObjectId" : "8cf8c56d76106fa78528e2c94895c3fd17e2c549",
      "LastModified" : "2019-03-30T06:57:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/vendor/lib/cmake/Catch2/Catch2Config.cmake" : {
      "ObjectId" : "cd51090269fdb82f0c272001c1c7aedc669a4310",
      "LastModified" : "2019-03-30T06:57:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/vendor/lib/cmake/Catch2/Catch2ConfigVersion.cmake" : {
      "ObjectId" : "7979cce3941551f382a24b9d6f35e42d707faaae",
      "LastModified" : "2019-03-30T06:57:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/vendor/lib/cmake/Catch2/Catch2Targets.cmake" : {
      "ObjectId" : "f1bf848cf5897d94719506e682106d9ab9651c17",
      "LastModified" : "2019-03-30T06:57:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/vendor/lib/cmake/Catch2/CatchAddTests.cmake" : {
      "ObjectId" : "0d2cc5fdc4f1e8a44a45e6144494606d80997ed6",
      "LastModified" : "2019-03-30T06:57:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/vendor/lib/cmake/Catch2/ParseAndAddCatchTests.cmake" : {
      "ObjectId" : "8ef008efb342172b96fba16e1dccc522ac644a3d",
      "LastModified" : "2019-03-30T06:57:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 65,
    "MAKEFILE" : 67
  },
  "ElapsedTime" : 4881
}