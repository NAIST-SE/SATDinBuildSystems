{
  "Repository" : "12354258",
  "Revision" : "HEAD",
  "ObjectId" : "54d3c011a9aa10720a8ccd7780bc35013a1d64d9",
  "CommitTime" : "2018-11-05T08:08:40Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "670356653f041845853e05df95a1cab2850fdea4",
      "LastModified" : "2018-06-27T18:00:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# 1. GENERIC PACKAGE INFORMATION\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Force the selection of the NVCC host compiler to circumvent the\n\n# studid FindCUDA CMake module from resolving symlinks (*wink* ccache\n\n# *wink*).\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# pretty print build options\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# dumps selected build options to a config header\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# generic function to add user-configurable options. add_to_header may be used to propagate the option to a header file.\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# At the moment, CUDA doesn't support C++14, so we limt ourselves to\n\n# C++11 and hope for the best.\n",
        "Line" : 135,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# We need to back up previously set compiler flags so we can restore\n\n# them at the end of this file. Purpose: avoid pollution of\n\n# user-defined compiler flags. This is important since some compilers\n\n# will complain if certain options are given multiple times (e.g. nvcc\n\n# and -std=c++11).\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# 2. CONFIGURE INSTALLER\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# will be shown e.g. in windows' control center package info\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# 3. BUILD DESCRIPTION\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# restore compiler flags to original values:\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "CMakeModules/FindSilo.cmake" : {
      "ObjectId" : "47d603b33137e2abc2e547eabef226ebadae608a",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2008-2012 Sandia Corporation, Kitware Inc.\n\n# Copyright (c) 2014-2014 Andreas Schäfer\n\n#\n\n# Sandia National Laboratories, New Mexico\n\n# PO Box 5800\n\n# Albuquerque, NM 87185\n\n#\n\n# Kitware Inc.\n\n# 28 Corporate Drive\n\n# Clifton Park, NY 12065\n\n# USA\n\n#\n\n# Andreas Schäfer\n\n# Informatik 3\n\n# Martensstr. 3\n\n# 91058 Erlangen\n\n# Germany\n\n#\n\n# Under the terms of Contract DE-AC04-94AL85000, there is a\n\n# non-exclusive license for use of this work by or on behalf of the\n\n# U.S. Government.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are\n\n# met:\n\n#\n\n#  * Redistributions of source code must retain the above copyright\n\n#    notice, this list of conditions and the following disclaimer.\n\n#\n\n#  * Redistributions in binary form must reproduce the above copyright\n\n#    notice, this list of conditions and the following disclaimer in the\n\n#    documentation and/or other materials provided with the\n\n#    distribution.\n\n#\n\n#  * Neither the name of Kitware nor the names of any contributors may\n\n#    be used to endorse or promote products derived from this software\n\n#    without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHORS OR\n\n# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\n# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\n# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\n# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\n# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\n# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\n# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n# ========================================================================\n\n#\n\n# Try to find Silo library and headers. Define Silo_ROOT if Silo is\n\n# installed in a non-standard directory.\n\n#\n\n# This file sets the following variables:\n\n#\n\n# Silo_INCLUDE_DIR, where to find silo.h, etc.\n\n# Silo_LIBRARIES, the libraries to link against\n\n# Silo_FOUND, If false, do not try to use Silo.\n\n#\n\n# Also defined, but not for general use are:\n\n# Silo_LIBRARY, the full path to the silo library.\n\n# Silo_INCLUDE_PATH, for CMake backward compatibility\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set Silo_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/CMakeLists.txt" : {
      "ObjectId" : "ae49350f8080afdc73d1fc29944fcabca3373e25",
      "LastModified" : "2017-03-01T09:16:08Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/gauss/CMakeLists.txt" : {
      "ObjectId" : "3386422402d6c04aa083672ec90bfd561d827cf0",
      "LastModified" : "2017-03-01T09:16:08Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/jacobi/CMakeLists.txt" : {
      "ObjectId" : "961b874d57070287e99639269e56b7d39bdd7f60",
      "LastModified" : "2017-03-01T09:16:08Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/lbm/CMakeLists.txt" : {
      "ObjectId" : "5a1b95b5ef2351f13168d222046f6f1a818b9ab8",
      "LastModified" : "2017-03-01T09:16:08Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/performance_tests/CMakeLists.txt" : {
      "ObjectId" : "156da4fc93ef2bf186eef02a7fd3a352f7f364db",
      "LastModified" : "2017-03-01T09:16:08Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/smoothed_particle_hydrodynamics/CMakeLists.txt" : {
      "ObjectId" : "eefc4a29ffc134d48ef709454f93ee8298275591",
      "LastModified" : "2018-03-31T10:31:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "2c7612cab638e1a25abf036b395b4d31682078c3",
      "LastModified" : "2017-03-01T09:16:08Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 9
  },
  "ElapsedTime" : 686
}