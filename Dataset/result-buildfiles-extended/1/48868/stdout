{
  "Repository" : "48868",
  "Revision" : "HEAD",
  "ObjectId" : "9cc42adff67946175d2b7e25c6ae69cc374e98a0",
  "CommitTime" : "2018-08-26T17:21:06Z",
  "Files" : {
    "CMake/Packages/FindEigen3.cmake" : {
      "ObjectId" : "deab9ce7acc8dca2e77e7503d7cc398bc7f0cbb1",
      "LastModified" : "2013-07-11T08:47:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Eigen3 lib\n\n#\n\n# This module supports requiring a minimum version, e.g. you can do\n\n#   find_package(Eigen3 3.1.2)\n\n# to require version 3.1.2 or newer of Eigen3.\n\n#\n\n# Once done this will define\n\n#\n\n#  EIGEN3_FOUND - system has eigen lib with correct version\n\n#  EIGEN3_INCLUDE_DIR - the eigen include directory\n\n#  EIGEN3_VERSION - eigen version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Copyright (c) 2009 Benoit Jacob <jacob.benoit.1@gmail.com>\n\n# Redistribution and use is allowed according to the terms of the 2-clause BSD license.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "CMake/Packages/FindFreeImage.cmake" : {
      "ObjectId" : "c4176cd290079ea46a1842c7b1c470a1fa443925",
      "LastModified" : "2013-07-11T08:47:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#snapped from: https://bitbucket.org/sinbad/ogre/src/0bba4f7cdb95/CMake/Packages/FindFreeImage.cmake?at=default\n\n#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see httpwww.ogre3d.org\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Try to find FreeImage\n\n# Once done, this will define\n\n#\n\n#  FreeImage_FOUND - system has FreeImage\n\n#  FreeImage_INCLUDE_DIRS - the FreeImage include directories \n\n#  FreeImage_LIBRARIES - link these to use FreeImage\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Get path, convert backslashes as ${ENV_${var}}\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# construct search paths\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# redo search if prefix path changed\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "CMake/Packages/FindOpenGLES.cmake" : {
      "ObjectId" : "535cdb15a40956355d37b796cc9e1aeece03f771",
      "LastModified" : "2013-07-11T08:47:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#snapped from: https://bitbucket.org/sinbad/ogre/src/0bba4f7cdb95/CMake/Packages/FindOpenGLES.cmake?at=default\n\n#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Try to find OpenGLES\n\n# Once done this will define\n\n#  \n\n#  OPENGLES_FOUND        - system has OpenGLES\n\n#  OPENGLES_INCLUDE_DIR  - the GL include directory\n\n#  OPENGLES_LIBRARIES    - Link these to use OpenGLES\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#The user hast to provide this atm. GLES can be emulated via Desktop OpenGL\n\n#using the ANGLE project found at: http://code.google.com/p/angleproject/\n",
        "Line" : 28,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# On Unix OpenGL most certainly always requires X11.\n\n# Feel free to tighten up these conditions if you don't \n\n# think this is always true.\n",
        "Line" : 61,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "CMake/Packages/FindSDL2.cmake" : {
      "ObjectId" : "236d6b4b9ceea2f12bcc81ca6f66e3649f5460cf",
      "LastModified" : "2014-10-26T02:18:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate SDL2 library\n\n# This module defines\n\n# SDL2_LIBRARY, the name of the library to link against\n\n# SDL2_FOUND, if false, do not try to link to SDL2\n\n# SDL2_INCLUDE_DIR, where to find SDL.h\n\n#\n\n# This module responds to the the flag:\n\n# SDL2_BUILDING_LIBRARY\n\n# If this is defined, then no SDL2main will be linked in because\n\n# only applications need main().\n\n# Otherwise, it is assumed you are building an application and this\n\n# module will attempt to locate and set the the proper link flags\n\n# as part of the returned SDL2_LIBRARY variable.\n\n#\n\n# Don't forget to include SDLmain.h and SDLmain.m your project for the\n\n# OS X framework based version. (Other versions link to -lSDL2main which\n\n# this module will try to find on your behalf.) Also for OS X, this\n\n# module will automatically add the -framework Cocoa on your behalf.\n\n#\n\n#\n\n# Additional Note: If you see an empty SDL2_LIBRARY_TEMP in your configuration\n\n# and no SDL2_LIBRARY, it means CMake did not find your SDL2 library\n\n# (SDL2.dll, libsdl2.so, SDL2.framework, etc).\n\n# Set SDL2_LIBRARY_TEMP to point to your SDL2 library, and configure again.\n\n# Similarly, if you see an empty SDL2MAIN_LIBRARY, you should set this value\n\n# as appropriate. These values are used to generate the final SDL2_LIBRARY\n\n# variable, but when these values are unset, SDL2_LIBRARY does not get created.\n\n#\n\n#\n\n# $SDL2DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$SDL2DIR\n\n# used in building SDL2.\n\n# l.e.galup  9-20-02\n\n#\n\n# Modified by Eric Wing.\n\n# Added code to assist with automated building by using environmental variables\n\n# and providing a more controlled/consistent search behavior.\n\n# Added new modifications to recognize OS X frameworks and\n\n# additional Unix paths (FreeBSD, etc).\n\n# Also corrected the header search path to follow \"proper\" SDL guidelines.\n\n# Added a search for SDL2main which is needed by some platforms.\n\n# Added a search for threads which is needed by some platforms.\n\n# Added needed compile switches for MinGW.\n\n#\n\n# On OSX, this will prefer the Framework version (if found) over others.\n\n# People will have to manually change the cache values of\n\n# SDL2_LIBRARY to override this selection or set the CMake environment\n\n# CMAKE_INCLUDE_PATH to modify the search paths.\n\n#\n\n# Note that the header path has changed from SDL2/SDL.h to just SDL.h\n\n# This needed to change because \"proper\" SDL convention\n\n# is #include \"SDL.h\", not <SDL2/SDL.h>. This is done for portability\n\n# reasons because not all systems place things in SDL2/ (see FreeBSD).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2003-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fink\n",
        "Line" : 73,
        "CharPositionInLine" : 5
      },
      "3" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 74,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "# Blastwave\n",
        "Line" : 75,
        "CharPositionInLine" : 10
      },
      "5" : {
        "Text" : "# Non-OS X framework versions expect you to also dynamically link to\n\n# SDL2main. This is mainly for Windows and OS X. Other (Unix) platforms\n\n# seem to provide SDL2main for compatibility even though they don't\n\n# necessarily need it.\n",
        "Line" : 96,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# SDL2 may require threads on your system.\n\n# The Apple build may not need an explicit flag because one of the\n\n# frameworks may already provide it.\n\n# But for non-OSX systems, I will use the CMake Threads package.\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# MinGW needs an additional library, mwindows\n\n# It's total link flags should look like -lmingw32 -lSDL2main -lSDL2 -lmwindows\n\n# (Actually on second look, I think it only needs one of the m* libraries.)\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# For SDL2main\n",
        "Line" : 126,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# For OS X, SDL2 uses Cocoa as a backend so it must link to Cocoa.\n\n# CMake doesn't display the -framework Cocoa string in the UI even\n\n# though it actually is there if I modify a pre-used variable.\n\n# I think it has something to do with the CACHE STRING.\n\n# So I use a temporary variable until the end so I can set the\n\n# \"real\" variable in one-shot.\n",
        "Line" : 133,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# For threads, as mentioned Apple doesn't need this.\n\n# In fact, there seems to be a problem if I used the Threads package\n\n# and try using this line, so I'm just skipping it entirely for OS X.\n",
        "Line" : 143,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# For MinGW library\n",
        "Line" : 150,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# Set the final string here so the GUI reflects the final state.\n",
        "Line" : 155,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# Set the temp variable to INTERNAL so it is not seen in the CMake GUI\n",
        "Line" : 157,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 14
    },
    "CMake/Utils/FindPkgMacros.cmake" : {
      "ObjectId" : "a6f0aaae574b3ee7bb76b88cfcd884f16c4c1545",
      "LastModified" : "2014-10-26T02:18:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#snapped from: https://bitbucket.org/sinbad/ogre/src/0bba4f7cdb95/CMake/Utils/FindPkgMacros.cmake?at=default\n\n#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##################################################################\n\n# Provides some common functionality for the FindPackage modules\n\n##################################################################\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Begin processing of package\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Display a status message unless FIND_QUIETLY is set\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Get environment variable, define it as ENV_$var and make sure backslashes are converted to forward slashes\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# replace won't work if var is blank\n",
        "Line" : 32,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "# Construct search paths for includes and libraries from a PREFIX_PATH\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# clear cache variables if a certain variable changed\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# test against internal check variable\n\n# HACK: Apparently, adding a variable to the cache cleans up the list\n\n# a bit. We need to also remove any empty strings from the list, but\n\n# at the same time ensure that we are actually dealing with a list.\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Try to get some hints from pkg-config, if available\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Couple a set of release AND debug libraries (or frameworks)\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Generate debug names from given release names\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Add the parent dir from DIR to VAR \n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Do the final processing for the package find.\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# skip if already processed during this run\n",
        "Line" : 107,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Slightly customised framework finder\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# These could be arrays of paths, add each individually to the search paths\n",
        "Line" : 143,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 17
    },
    "CMakeLists.txt" : {
      "ObjectId" : "784c2d0ac08327fb8a265a3d84e92a98e56e4516",
      "LastModified" : "2015-01-11T01:04:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#add local find scripts to CMAKE path\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#set up OpenGL system variable\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#check if we're running on Raspberry Pi\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#check if we're running on olinuxino\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#finding necessary packages\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#add ALSA for Linux\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#set up compiler flags and excutable names\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#multi-processor compilation\n",
        "Line" : 69,
        "CharPositionInLine" : 50
      },
      "9" : {
        "Text" : "#multi-processor compilation\n",
        "Line" : 70,
        "CharPositionInLine" : 46
      },
      "10" : {
        "Text" : "#check for G++ 4.7+\n",
        "Line" : 74,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "#set up compiler flags for GCC\n",
        "Line" : 80,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "#support C++11 for std::, optimize\n",
        "Line" : 81,
        "CharPositionInLine" : 77
      },
      "13" : {
        "Text" : "#-s = strip binary\n",
        "Line" : 82,
        "CharPositionInLine" : 65
      },
      "14" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#add include directories\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#add ALSA for Linux\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#define libraries and directories\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#add ALSA for Linux\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# set up build directories\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# add each component\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "es-app/CMakeLists.txt" : {
      "ObjectId" : "ee7f82990923b9b19f81e14ed0ce7790697bfeda",
      "LastModified" : "2015-01-11T01:04:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# GuiComponents\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Guis\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Scrapers\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Views\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Animations\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# GuiComponents\n",
        "Line" : 61,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Guis\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Scrapers\n",
        "Line" : 76,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Views\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# define OS specific sources and headers\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# define target\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# special properties for Windows builds\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Always compile with the \"WINDOWS\" subsystem to avoid console window flashing at startup \n\n# when --debug is not set (see es-core/src/main.cpp for explanation).\n\n# The console will still be shown if launched with --debug.\n\n# Note that up to CMake 2.8.10 this feature is broken: http://public.kitware.com/Bug/view.php?id=12566\n",
        "Line" : 107,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# set up CPack install stuff so `make install` does something useful\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "es-core/CMakeLists.txt" : {
      "ObjectId" : "5a13b6e8df6df5decb0551623bd186b2a207ef92",
      "LastModified" : "2015-03-03T22:36:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Animations\n",
        "Line" : 21,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# GuiComponents\n",
        "Line" : 26,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Guis\n",
        "Line" : 46,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# Resources\n",
        "Line" : 52,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# Embedded assets (needed by ResourceManager)\n",
        "Line" : 58,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Animations\n",
        "Line" : 80,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# GuiComponents\n",
        "Line" : 83,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# Guis\n",
        "Line" : 100,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# Resources\n",
        "Line" : 106,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 9
    },
    "external/CMakeLists.txt" : {
      "ObjectId" : "9b09143ada855ea1f9b171f8d15abc726661c8a4",
      "LastModified" : "2014-10-26T02:18:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set up the external libraries that aren't popular enough to be found on most \n\n# package managers are included with the project (in the 'external' folder)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "external/nanosvg/CMakeLists.txt" : {
      "ObjectId" : "1a253872680ec858f8e84100f61765e8e2c727ec",
      "LastModified" : "2014-10-26T02:18:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external/pugixml/CMakeLists.txt" : {
      "ObjectId" : "fb01783b1219337a4efdcff077f3c28e9eb1c2d1",
      "LastModified" : "2014-10-26T02:18:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 11
  },
  "ElapsedTime" : 1105
}