{
  "Repository" : "3743536",
  "Revision" : "HEAD",
  "ObjectId" : "58aab220ac568faae17305f42936d222e0264af7",
  "CommitTime" : "2019-04-17T05:21:43Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "3e531de34f22c85e11fe961746e09319224d72b0",
      "LastModified" : "2019-04-10T12:40:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake; tab-width: 2; indent-tabs-mode: t; truncate-lines: t; compile-command: \"cmake -Wdev\" -*-\n\n# vim: set filetype=cmake autoindent tabstop=2 shiftwidth=2 noexpandtab softtabstop=2 nowrap:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###########################################################################\n\n#                                                                         #\n\n# Note: The bulk of the build system is located in the cmake/ directory.  #\n\n#       This file only contains the specializations for this particular   #\n\n#       project. Most likely you are interested in editing one of these   #\n\n#       files instead:                                                    #\n\n#                                                                         #\n\n#       dune.module                              Name and version number  #\n\n#       CMakeLists_files.cmake                   Path of source files     #\n\n#       cmake/Modules/${project}-prereqs.cmake   Dependencies             #\n\n#                                                                         #\n\n###########################################################################\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Mandatory call to project\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Use of OpenMP is considered experimental\n",
        "Line" : 23,
        "CharPositionInLine" : 30
      },
      "4" : {
        "Text" : "# guess the sibling dir\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#Try if <module-name>/<build-dir> is used\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# We are using build directories named <prefix><module-name><postfix>\n",
        "Line" : 42,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# All modules are in a common build dir\n",
        "Line" : 45,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# not the same location as most of the other projects? this hook overrides\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# project information is in dune.module. Read this file and set variables.\n\n# we cannot generate dune.module since it is read by dunecontrol before\n\n# the build starts, so it makes sense to keep the data there then.\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Look for the opm-tests repository; if found the variable\n\n# HAVE_OPM_TESTS will be set to true.\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# list of prerequisites for this particular project; this is in a\n\n# separate file (in cmake/Modules sub-directory) because it is shared\n\n# with the find module\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# read the list of components from this file (in the project directory);\n\n# it should set various lists with the names of the files to include\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# all setup common to the OPM library modules is done here\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# the production oriented general-purpose ECL simulator\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# the research oriented general-purpose ECL simulator (\"ebos\" == &ecl\n\n# &black-&oil &simulator)\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "CMakeLists_files.cmake" : {
      "ObjectId" : "638bf4fc82b090e2db23419b58cf61ac383f4349",
      "LastModified" : "2019-04-10T12:40:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file sets up five lists:\n\n# MAIN_SOURCE_FILES     List of compilation units which will be included in\n\n#                       the library. If it isn't on this list, it won't be\n\n#                       part of the library. Please try to keep it sorted to\n\n#                       maintain sanity.\n\n#\n\n# TEST_SOURCE_FILES     List of programs that will be run as unit tests.\n\n#\n\n# TEST_DATA_FILES       Files from the source three that should be made\n\n#                       available in the corresponding location in the build\n\n#                       tree in order to run tests there.\n\n#\n\n# EXAMPLE_SOURCE_FILES  Other programs that will be compiled as part of the\n\n#                       build, but which is not part of the library nor is\n\n#                       run as tests.\n\n#\n\n# PUBLIC_HEADER_FILES   List of public header files that should be\n\n#                       distributed together with the library. The source\n\n#                       files can of course include other files than these;\n\n#                       you should only add to this list if the *user* of\n\n#                       the library needs it.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# originally generated with the command:\n\n# find opm -name '*.c*' -printf '\\t%p\\n' | sort\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# originally generated with the command:\n\n# find tests -name '*.cpp' -a ! -wholename '*/not-unit/*' -printf '\\t%p\\n' | sort\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# originally generated with the command:\n\n# find opm -name '*.h*' -a ! -name '*-pch.hpp' -printf '\\t%p\\n' | sort\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "CTestConfig.cmake" : {
      "ObjectId" : "baef861728171c47eab7b8a226641b722f64e4d5",
      "LastModified" : "2015-11-11T15:50:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# this is included after opm-core_NAME is set\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "compareECLFiles.cmake" : {
      "ObjectId" : "25dfab4d850c837f9b3de5eb3fbf65daf25cd2ed",
      "LastModified" : "2019-02-14T09:22:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This script manages the addition of tests.\n\n# The tests are orchestrated by a shell script,\n\n# configured using opm_set_test_driver()\n\n# and then the appropriate helper macro is called to\n\n# register the ctest entry through the opm_add_test macro.\n\n# Information such as the binary to call and test tolerances\n\n# are passed from the build system to the driver script through\n\n# command line parameters. See the opm_add_test() documentation for\n\n# details on the parameters passed to the macro.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define some paths\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###########################################################################\n\n# TEST: compareECLFiles\n\n###########################################################################\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Input:\n\n#   - casename: basename (no extension)\n\n#\n\n# Details:\n\n#   - This test class compares output from a simulation to reference files.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###########################################################################\n\n# TEST: add_test_compare_restarted_simulation\n\n###########################################################################\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Input:\n\n#   - casename: basename (no extension)\n\n#\n\n# Details:\n\n#   - This test class compares the output from a restarted simulation\n\n#     to that of a non-restarted simulation.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "###########################################################################\n\n# TEST: add_test_compare_parallel_simulation\n\n###########################################################################\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Input:\n\n#   - casename: basename (no extension)\n\n#\n\n# Details:\n\n#   - This test class compares the output from a parallel simulation\n\n#     to the output from the serial instance of the same model.\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add test that runs flow_mpi and outputs the results to file\n",
        "Line" : 93,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "###########################################################################\n\n# TEST: add_test_compare_parallel_restarted_simulation\n\n###########################################################################\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Input:\n\n#   - casename: basename (no extension)\n\n#\n\n# Details:\n\n#   - This test class compares the output from a restarted parallel simulation\n\n#     to that of a non-restarted parallel simulation.\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Regression tests\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Set absolute tolerance to be used passed to the macros in the following tests\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Restart tests\n",
        "Line" : 303,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Cruder tolerances for the restarted tests\n",
        "Line" : 306,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# PORV test\n",
        "Line" : 320,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Init tests\n",
        "Line" : 330,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Parallel tests\n",
        "Line" : 341,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Different tolerances for these tests\n",
        "Line" : 353,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 19
    },
    "opm-simulators-prereqs.cmake" : {
      "ObjectId" : "d2bb1557ea4436669626c69861b99d7c7a3644f5",
      "LastModified" : "2018-11-16T14:17:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# defines that must be present in config.h for our headers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# dependencies\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Compile with C99 support if available\n",
        "Line" : 19,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Compile with C++0x/11 support if available\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Various runtime library enhancements\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# DUNE prerequisites\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# matrix library\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Look for MPI support\n",
        "Line" : 32,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Tim Davis' SuiteSparse archive\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# SuperLU direct solver\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# OPM dependency\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 11
    }
  },
  "FileTypes" : {
    "CMAKE" : 5
  },
  "ElapsedTime" : 3777
}