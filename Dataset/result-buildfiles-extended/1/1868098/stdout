{
  "Repository" : "1868098",
  "Revision" : "HEAD",
  "ObjectId" : "9a0a5a45f6417284348a90ea0612a0594d1800e7",
  "CommitTime" : "2019-01-30T05:36:56Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "1683f473f520b556b7f48b411b3c71ac4f256ef5",
      "LastModified" : "2017-01-02T00:38:00Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Another install method that might be better:\n\n#       sudo checkinstall python setup.py install\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/yujin_tools/cmake/config.cmake" : {
      "ObjectId" : "a43cfc0aa0ea3c5062aa7c6124a9c6262e2488a4",
      "LastModified" : "2015-05-10T17:22:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# Build Configuration\n\n###############################################################################\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###########################\n\n# Parameterised Variables\n\n###########################\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###########################\n\n# CMake\n\n###########################\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We use CMAKE_USER_MAKE_RULES_OVERRIDE to configure CMAKE_CXX_FLAGS_INIT ()\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###########################\n\n# Catkin\n\n###########################\n\n# Excluding or including packages\n\n#set(CATKIN_BLACKLIST_PACKAGES \"\" CACHE STRING \"List of ';' separated packages to exclude\")\n\n#set(CATKIN_WHITELIST_PACKAGES \"\" CACHE STRING \"List of ';' separated packages to build (must be a complete list)\")\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "###########################\n\n# Boost\n\n###########################\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/yujin_tools/cmake/overrides.cmake" : {
      "ObjectId" : "99fb2f8f1687352afd37de5d26ac5376c8c8e678",
      "LastModified" : "2013-03-27T09:09:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Cmake is a bastard.\n\n#\n\n# You can define neither CMAKE_CXX_FLAGS or CMAKE_CXX_FLAGS_INIT in the cache. They just\n\n# get emptied by the cmake platform and compiler modules. \n\n#\n\n# Workaround is to set CMAKE_USER_MAKE_RULES_OVERRIDE to an override file (this file) and\n\n# configure things from your own cached variables.\n\n#\n\n# We pick up anything residing in WINROS_CXX_FLAGS_INIT and append them.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/yujin_tools/platforms/arm/arm1176jzf-s-hardfp.cmake" : {
      "ObjectId" : "4dbe2e080c5536a0946c0df7d4155c6d889a8e40",
      "LastModified" : "2015-05-16T07:09:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# Family : arm\n\n# Platform : arm1176jzf-s with hardfp\n\n# Notes: use with armel compilers.\n\n###############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Some useful custom variables that uniquely define this platform module\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Flags\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Custom software settings\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Nanomsg - disable it's support for gcc builtins\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Disable opencv debugging on the dslam repo\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/yujin_tools/platforms/arm/arm1176jzf-s.cmake" : {
      "ObjectId" : "7e0185bfe6efd7a96f67913bc84a17da7834da34",
      "LastModified" : "2015-06-01T01:23:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# Family : arm\n\n# Platform : arm1176jzf-s\n\n# Notes: use with armel compilers.\n\n###############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Some useful custom variables that uniquely define this platform module\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Flags\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Custom software settings\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Nanomsg - disable it's support for gcc builtins\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Disable opencv debugging on the dslam repo\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/yujin_tools/platforms/arm/cortex-a7.cmake" : {
      "ObjectId" : "62e432f38ad384aab1922597911864fd4880e322",
      "LastModified" : "2015-06-01T02:10:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# Family : arm\n\n# Platform : arm1176jzf-s with hardfp\n\n# Notes: use with armel compilers.\n\n###############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Some useful custom variables that uniquely define this platform module\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Flags\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Custom software settings\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Nanomsg - disable it's support for gcc builtins\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/yujin_tools/platforms/default.cmake" : {
      "ObjectId" : "b2987b57307c30ebf40528433e993d40491c1bb2",
      "LastModified" : "2015-06-01T02:10:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# Family : generic\n\n# Platform : vanilla\n\n###############################################################################\n\n#\n\n# This is a special platform configuration in as much as its not special, just\n\n# represents empty defaults.\n\n#\n\n# Some useful custom variables that uniquely define this platform module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Flags\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/yujin_tools/platforms/generic/native.cmake" : {
      "ObjectId" : "4eac341d1c0fd0a9c0a1a4991d6b623a2c34c591",
      "LastModified" : "2015-06-01T02:10:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# Family : generic\n\n# Platform : native\n\n###############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Some useful custom variables that uniquely define this platform module\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Flags\n\n# See here http://en.gentoo-wiki.com/wiki/Safe_Cflags for cpu type.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/yujin_tools/platforms/intel/atom330.cmake" : {
      "ObjectId" : "e4654de03a41029fb151524b1961290b45e855ae",
      "LastModified" : "2015-06-01T02:10:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# Family : intel\n\n# Platform : atom330\n\n###############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Some useful custom variables that uniquely define this platform module\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Flags\n\n# Refer to http://en.gentoo-wiki.com/wiki/Safe_Cflags/Intel for cpu type.\n\n# Refer to http://en.gentoo-wiki.com/wiki/Safe_Cflags#General_Information_on_CFLAGS. \n\n# From gcc 4.5+ we can start using -march=atom -mtune=atom\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/yujin_tools/platforms/intel/atomn270.cmake" : {
      "ObjectId" : "3cf5e8f199eb9717ed78ba718a727ac24c10a202",
      "LastModified" : "2015-06-01T02:10:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# Family : intel\n\n# Platform : atomn270\n\n###############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Some useful custom variables that uniquely define this platform module\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Flags\n\n# Refer to http://en.gentoo-wiki.com/wiki/Safe_Cflags/Intel for cpu type.\n\n# Refer to http://en.gentoo-wiki.com/wiki/Safe_Cflags#General_Information_on_CFLAGS. \n\n# From gcc 4.5+ we can start using -march=atom -mtune=atom\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/yujin_tools/platforms/intel/i5.cmake" : {
      "ObjectId" : "60e5de63c2d437ad708b8528bd085c40d4cba0bc",
      "LastModified" : "2015-06-01T02:10:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# Family : intel\n\n# Platform : i5\n\n###############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Some useful custom variables that uniquely define this platform module\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Flags\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/yujin_tools/toolchains/buildroot/arm-buildroot-linux-gnueabi.cmake" : {
      "ObjectId" : "1285b040df8a92c953f5d5c82d10665ac377a8f7",
      "LastModified" : "2015-06-01T02:10:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# SET(CMAKE_C_COMPILER    ${TOOLCHAIN_ROOT}/bin/arm-generic-linux-gnueabi-gcc)\n\n# SET(CMAKE_CXX_COMPILER  ${TOOLCHAIN_ROOT}/bin/arm-generic-linux-gnueabi-g++)\n\n# SET(CMAKE_LINKER        ${TOOLCHAIN_ROOT}/bin/arm-generic-linux-gnueabi-ld)\n\n# SET(CMAKE_NM            ${TOOLCHAIN_ROOT}/bin/arm-generic-linux-gnueabi-nm)\n\n# SET(CMAKE_OBJCOPY       ${TOOLCHAIN_ROOT}/bin/arm-generic-linux-gnueabi-objcopy)\n\n# SET(CMAKE_OBJDUMP       ${TOOLCHAIN_ROOT}/bin/arm-generic-linux-gnueabi-objdump)\n\n# SET(CMAKE_RANLIB        ${TOOLCHAIN_ROOT}/bin/arm-generic-linux-gnueabi-ranlib)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################################\n\n# Family : buildroot\n\n# Tuple : arm-buildroot-linux-gnueabi\n\n# Sysroot : /opt/buildroot\n\n#               /toolchain\n\n#               /arm-buildroot-linux-gnueabi-4.8.3-glibc-2.18\n\n#               /arm-buildroot-linux-gnueabi\n\n#               /sysroot\n\n###############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Some useful custom variables that uniquely define this toolchain module\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#set(TOOLCHAIN_INSTALL_PREFIX \"${TOOLCHAIN_SYSROOT}/usr\" CACHE STRING \"Preferred install location when using the toolchain.\")\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Now the cmake variables\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Make sure these are in your PATH\n",
        "Line" : 31,
        "CharPositionInLine" : 70
      },
      "6" : {
        "Text" : "# Don't search for programs in sysroot\n\n# Headers and libs from sysroot only\n",
        "Line" : 34,
        "CharPositionInLine" : 45
      },
      "7" : {
        "Text" : "# Hide from cache's front page\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "src/yujin_tools/toolchains/buildroot/arm-buildroot-linux-gnueabihf.cmake" : {
      "ObjectId" : "5dbbeaab8925c60425f3309a5200212f94c23fd0",
      "LastModified" : "2015-06-01T02:10:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# SET(CMAKE_C_COMPILER    ${TOOLCHAIN_ROOT}/bin/arm-generic-linux-gnueabi-gcc)\n\n# SET(CMAKE_CXX_COMPILER  ${TOOLCHAIN_ROOT}/bin/arm-generic-linux-gnueabi-g++)\n\n# SET(CMAKE_LINKER        ${TOOLCHAIN_ROOT}/bin/arm-generic-linux-gnueabi-ld)\n\n# SET(CMAKE_NM            ${TOOLCHAIN_ROOT}/bin/arm-generic-linux-gnueabi-nm)\n\n# SET(CMAKE_OBJCOPY       ${TOOLCHAIN_ROOT}/bin/arm-generic-linux-gnueabi-objcopy)\n\n# SET(CMAKE_OBJDUMP       ${TOOLCHAIN_ROOT}/bin/arm-generic-linux-gnueabi-objdump)\n\n# SET(CMAKE_RANLIB        ${TOOLCHAIN_ROOT}/bin/arm-generic-linux-gnueabi-ranlib)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################################\n\n# Family : buildroot\n\n# Tuple : arm-buildroot-linux-gnueabihf\n\n# Sysroot : /opt/buildroot\n\n#               /toolchain\n\n#               /arm-buildroot-linux-gnueabihf-4.8.3-glibc-2.18\n\n#               /arm-buildroot-linux-gnueabihf\n\n#               /sysroot\n\n###############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Some useful custom variables that uniquely define this toolchain module\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#set(TOOLCHAIN_INSTALL_PREFIX \"${TOOLCHAIN_SYSROOT}/usr\" CACHE STRING \"Preferred install location when using the toolchain.\")\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Now the cmake variables\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Make sure these are in your PATH\n",
        "Line" : 31,
        "CharPositionInLine" : 70
      },
      "6" : {
        "Text" : "# Don't search for programs in sysroot\n\n# Headers and libs from sysroot only\n",
        "Line" : 34,
        "CharPositionInLine" : 45
      },
      "7" : {
        "Text" : "# Hide from cache's front page\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "src/yujin_tools/toolchains/buildroot/arm-cubie-linux-gnueabihf.cmake" : {
      "ObjectId" : "75df82a652e77ca064a1d1359a43f8bc39b416a4",
      "LastModified" : "2015-11-19T10:30:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# SET(CMAKE_C_COMPILER    ${TOOLCHAIN_ROOT}/bin/arm-generic-linux-gnueabi-gcc)\n\n# SET(CMAKE_CXX_COMPILER  ${TOOLCHAIN_ROOT}/bin/arm-generic-linux-gnueabi-g++)\n\n# SET(CMAKE_LINKER        ${TOOLCHAIN_ROOT}/bin/arm-generic-linux-gnueabi-ld)\n\n# SET(CMAKE_NM            ${TOOLCHAIN_ROOT}/bin/arm-generic-linux-gnueabi-nm)\n\n# SET(CMAKE_OBJCOPY       ${TOOLCHAIN_ROOT}/bin/arm-generic-linux-gnueabi-objcopy)\n\n# SET(CMAKE_OBJDUMP       ${TOOLCHAIN_ROOT}/bin/arm-generic-linux-gnueabi-objdump)\n\n# SET(CMAKE_RANLIB        ${TOOLCHAIN_ROOT}/bin/arm-generic-linux-gnueabi-ranlib)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################################\n\n# Family : buildroot\n\n# Tuple : arm-cubie-linux-gnueabihf\n\n# Sysroot : /opt/buildroot\n\n#               /toolchain\n\n#               /arm-cubie-linux-gnueabihf-4.8.3-glibc-2.19\n\n#               /arm-cubie-linux-gnueabihf\n\n#               /sysroot\n\n###############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Some useful custom variables that uniquely define this toolchain module\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#set(TOOLCHAIN_INSTALL_PREFIX \"${TOOLCHAIN_SYSROOT}/usr\" CACHE STRING \"Preferred install location when using the toolchain.\")\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Now the cmake variables\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Make sure these are in your PATH\n",
        "Line" : 31,
        "CharPositionInLine" : 70
      },
      "6" : {
        "Text" : "# Don't search for programs in sysroot\n\n# Headers and libs from sysroot only\n",
        "Line" : 34,
        "CharPositionInLine" : 45
      },
      "7" : {
        "Text" : "# Hide from cache's front page\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "src/yujin_tools/toolchains/code_sourcery/arm-none-linux-gnueabi.cmake" : {
      "ObjectId" : "c8ca3907b802d0fd88d5fdbabff1239f433e0ce4",
      "LastModified" : "2015-06-01T02:10:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# Family : code_sourcery\n\n# Tuple : arm-none-linux-gnueabi\n\n# Sysroot : /usr/arm-none-linux-gnueabi/libc\n\n###############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Some useful custom variables that uniquely define this toolchain module\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Now the cmake variables\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make sure these are in your PATH\n",
        "Line" : 16,
        "CharPositionInLine" : 47
      },
      "4" : {
        "Text" : "# Don't search for programs in sysroot\n\n# Headers and libs from sysroot only\n",
        "Line" : 19,
        "CharPositionInLine" : 45
      },
      "5" : {
        "Text" : "# Hide from cache's front page\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/yujin_tools/toolchains/nexell/arm-generic-linux-gnueabi.cmake" : {
      "ObjectId" : "8acd4d8c9e85dbdd5a4c5226fa18d1f0359d48ab",
      "LastModified" : "2015-06-01T02:10:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# SET(CMAKE_C_COMPILER    ${TOOLCHAIN_ROOT}/bin/arm-generic-linux-gnueabi-gcc)\n\n# SET(CMAKE_CXX_COMPILER  ${TOOLCHAIN_ROOT}/bin/arm-generic-linux-gnueabi-g++)\n\n# SET(CMAKE_LINKER        ${TOOLCHAIN_ROOT}/bin/arm-generic-linux-gnueabi-ld)\n\n# SET(CMAKE_NM            ${TOOLCHAIN_ROOT}/bin/arm-generic-linux-gnueabi-nm)\n\n# SET(CMAKE_OBJCOPY       ${TOOLCHAIN_ROOT}/bin/arm-generic-linux-gnueabi-objcopy)\n\n# SET(CMAKE_OBJDUMP       ${TOOLCHAIN_ROOT}/bin/arm-generic-linux-gnueabi-objdump)\n\n# SET(CMAKE_RANLIB        ${TOOLCHAIN_ROOT}/bin/arm-generic-linux-gnueabi-ranlib)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################################\n\n# Family : nexell\n\n# Tuple : arm-generic-linux-gnueabli\n\n# Sysroot : /usr/arm-none-linux-gnueabi/libc\n\n###############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Some useful custom variables that uniquely define this toolchain module\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#set(TOOLCHAIN_INSTALL_PREFIX \"${TOOLCHAIN_SYSROOT}/usr\" CACHE STRING \"Preferred install location when using the toolchain.\")\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Now the cmake variables\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Make sure these are in your PATH\n",
        "Line" : 27,
        "CharPositionInLine" : 70
      },
      "6" : {
        "Text" : "# Don't search for programs in sysroot\n\n# Headers and libs from sysroot only\n",
        "Line" : 30,
        "CharPositionInLine" : 45
      },
      "7" : {
        "Text" : "# Hide from cache's front page\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "src/yujin_tools/toolchains/ubuntu/arm-linux-gnueabi.cmake" : {
      "ObjectId" : "8ae87eb1ce73d3323cdd076409f6e2a11c5f8439",
      "LastModified" : "2015-06-01T02:10:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# Family : ubuntu\n\n# Tuple : arm-linux-gnueabi\n\n# Sysroot : /usr/arm-linux-gnueabi\n\n# Installation : sudo apt-get install g++-arm-linux-gnueabi\n\n###############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Some useful custom variables that uniquely define this toolchain module\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Now the cmake variables\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make sure these are in your PATH\n",
        "Line" : 17,
        "CharPositionInLine" : 47
      },
      "4" : {
        "Text" : "# Don't search for programs in sysroot\n\n# Headers and libs from sysroot only\n",
        "Line" : 20,
        "CharPositionInLine" : 45
      },
      "5" : {
        "Text" : "# Hide from cache's front page\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/yujin_tools/toolchains/ubuntu/arm-linux-gnueabihf.cmake" : {
      "ObjectId" : "23ddeec22200a3132994b93dfe490306c9c5c0d8",
      "LastModified" : "2015-06-01T02:10:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# Family : ubuntu\n\n# Tuple : arm-linux-gnueabihf\n\n# Sysroot : /usr/arm-linux-gnueabihf\n\n# Installation : sudo apt-get install g++-arm-linux-gnueabihf\n\n###############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Some useful custom variables that uniquely define this toolchain module\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Now the cmake variables\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make sure these are in your PATH\n",
        "Line" : 17,
        "CharPositionInLine" : 47
      },
      "4" : {
        "Text" : "# Don't search for programs in sysroot\n\n# Headers and libs from sysroot only\n",
        "Line" : 20,
        "CharPositionInLine" : 45
      },
      "5" : {
        "Text" : "# Hide from cache's front page\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/yujin_tools/toolchains/ubuntu/i586-mingw32msvc.cmake" : {
      "ObjectId" : "b6b1c2e78ff557db89b3f978873e051ff87a1934",
      "LastModified" : "2015-06-01T02:10:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# Family : ubuntu\n\n# Tuple : i586-mingw32msvc\n\n# Sysroot : /usr/i586-mingw32msvc\n\n###############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Some useful custom variables that uniquely define this toolchain module\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Now the cmake variables\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make sure these are in your PATH\n",
        "Line" : 15,
        "CharPositionInLine" : 47
      },
      "4" : {
        "Text" : "# Don't search for programs in sysroot\n\n# Headers and libs from sysroot only\n",
        "Line" : 18,
        "CharPositionInLine" : 45
      },
      "5" : {
        "Text" : "###############################\n\n# Mingw Ecosystem is Static\n\n###############################\n\n# TODO - these need to be updated for groovy\n\n#set(ROS_BUILD_STATIC_EXES true)\n\n#set(ROS_BUILD_SHARED_EXES false)\n\n#set(ROS_BUILD_STATIC_LIBS true)\n\n#set(ROS_BUILD_SHARED_LIBS false)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Hide from cache's front page\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    }
  },
  "FileTypes" : {
    "CMAKE" : 18,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 848
}