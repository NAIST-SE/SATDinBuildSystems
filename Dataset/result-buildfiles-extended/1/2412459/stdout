{
  "Repository" : "2412459",
  "Revision" : "HEAD",
  "ObjectId" : "b76261946597de1200effc4236409a3978414056",
  "CommitTime" : "2018-01-06T21:00:32Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "95e862502e65de2d9b8afe7665a5d623d16db951",
      "LastModified" : "2018-01-06T20:10:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# This file is part of the CMaNGOS Project. See AUTHORS file for Copyright information\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 2 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, write to the Free Software\n\n# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define here name of the binaries\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Function to remove duplicate entries in provided string\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Macro that replace /Wx with /W0 (supposed to disable warnings)\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Remove duplicate entries in default flags. (occur when after a second make or configure)\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set RPATH-handing (CMake parameters)\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Turn on the ability to create folders to organize projects (.vcproj)\n\n# It creates \"CMakePredefinedTargets\" folder by default and adds CMake\n\n# defined projects like INSTALL.vcproj and ZERO_CHECK.vcproj\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# set default buildoptions and print them\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Force out-of-source build\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# TODO: allow other compilers under windows in the future\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# TODO: use MSVC_CXX_ARCHITECTURE_ID instead to identify platform on windows (not required on other systems)\n\n# find platform: required to build 3rd party libraries w/o CMake files\n\n# Find out what system we use to include the needed libs\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# 32-bit\n",
        "Line" : 97,
        "CharPositionInLine" : 27
      },
      "12" : {
        "Text" : "# 64-bit\n",
        "Line" : 99,
        "CharPositionInLine" : 9
      },
      "13" : {
        "Text" : "# Override configuration-types - we don't use anything else than debug and release\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# set the valid options for cmake-gui drop-down list\n",
        "Line" : 117,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# find Git: used to get the revision number\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Include cotire to manage PCH support\n",
        "Line" : 125,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Set Install folders\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# On windows define more developpement folders and install provided libs\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Define install rules for provided libs\n",
        "Line" : 151,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Only MSVC. TODO:: check why x64 is not provided\n",
        "Line" : 155,
        "CharPositionInLine" : 6
      },
      "21" : {
        "Text" : "# For Unix systems set the rpath so that libraries are found\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Add alternate lib dir for boost on windows\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Be sure to search only static lib\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#set(Boost_DEBUG ON)\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Use at least verion 3.8.1 of FindBoost to fix some issues. Especialy in MSVC with fixed Toolset issues.\n\n# This is a workaround while VisualStudio does not embed higher cmake version than 3.7.2\n",
        "Line" : 186,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Find needed packages and if necessery abort if something important is missing\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Win32 delivered packages\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# *nix-specific packages\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# If OpenSSL path isn't specified on mac we set the one that homebrew uses and try again\n",
        "Line" : 237,
        "CharPositionInLine" : 6
      },
      "30" : {
        "Text" : "# add to global includes and linking lists for all sub-projects at once\n",
        "Line" : 259,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# add to global includes and linking lists for all sub-projects at once\n",
        "Line" : 266,
        "CharPositionInLine" : 6
      },
      "32" : {
        "Text" : "# add to global includes and linking lists for all sub-projects at once\n",
        "Line" : 272,
        "CharPositionInLine" : 6
      },
      "33" : {
        "Text" : "# Find core revision\n",
        "Line" : 279,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# print out the results before continuing\n",
        "Line" : 309,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Add definitions for all build types\n\n# Don't place this above 'dep' subdirectory! Because of defines build will crash.\n",
        "Line" : 326,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Generate revision-extractor\n",
        "Line" : 352,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# if(SQL)\n\n#   add_subdirectory(sql)\n\n# endif()\n",
        "Line" : 369,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 38
    },
    "cmake/common.cmake" : {
      "ObjectId" : "1618c25fc0612cb971ca8e334cadcddc27e36fbe",
      "LastModified" : "2015-11-11T19:34:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# First, get the root of the repository.\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the macro directory.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/compiler/clang/settings.cmake" : {
      "ObjectId" : "ee4e6142d830a5a47eed0dfd33f5b9bbb56fc17c",
      "LastModified" : "2016-08-14T01:14:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set build-directive (used in core to tell which buildtype we used)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check C++11 compiler support\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/compiler/gcc/settings.cmake" : {
      "ObjectId" : "d667985c59b16f66b8ea0c0d5b51bbdfad583b96",
      "LastModified" : "2016-08-14T01:14:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set build-directive (used in core to tell which buildtype we used)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check C++11 compiler support\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Required on 32-bit systems to enable SSE2 (standard on x64)\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/compiler/msvc/settings.cmake" : {
      "ObjectId" : "82235c01408cb0447d71c7157831936aa067a1f4",
      "LastModified" : "2015-11-11T19:34:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This definition is necessary to work around a bug with Intellisense described\n\n# here: http://tinyurl.com/2cb428.  Syntax highlighting is important for proper\n\n# debugger functionality.\n",
        "Line" : 2,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#Enable extended object support for debug compiles on X64 (not required on X86)\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# mark 32 bit executables large address aware so they can use > 2GB address space\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# multithreaded compiling on VS\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Define _CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES - eliminates the warning by changing the strcpy call to strcpy_s, which prevents buffer overruns\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Ignore warnings about older, less secure functions\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# disable warnings in Visual Studio 8 and above if not wanted\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Specify the maximum PreCompiled Header memory allocation limit\n\n# Fixes a compiler-problem when using PCH - the /Ym flag is adjusted by the compiler in MSVC2012, hence we need to set an upper limit with /Zm to avoid discrepancies)\n\n# (And yes, this is a verified , unresolved bug with MSVC... *sigh*)\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake/macros/CheckPlatform.cmake" : {
      "ObjectId" : "4d16bf0600c0ba6842d7d5bcb244ad161b06e02c",
      "LastModified" : "2015-11-11T19:34:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# check what platform we're on (64-bit or 32-bit), and create a simpler test than CMAKE_SIZEOF_VOID_P\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/macros/FindBoost/FindBoost.cmake" : {
      "ObjectId" : "093d8c9a1d5c27ad55820d9eec428274b068d0ef",
      "LastModified" : "2018-01-02T23:21:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindBoost\n\n# ---------\n\n#\n\n# Find Boost include dirs and libraries\n\n#\n\n# Use this module by invoking find_package with the form::\n\n#\n\n#   find_package(Boost\n\n#     [version] [EXACT]      # Minimum or EXACT version e.g. 1.36.0\n\n#     [REQUIRED]             # Fail with error if Boost is not found\n\n#     [COMPONENTS <libs>...] # Boost libraries by their canonical name\n\n#     )                      # e.g. \"date_time\" for \"libboost_date_time\"\n\n#\n\n# This module finds headers and requested component libraries OR a CMake\n\n# package configuration file provided by a \"Boost CMake\" build.  For the\n\n# latter case skip to the \"Boost CMake\" section below.  For the former\n\n# case results are reported in variables::\n\n#\n\n#   Boost_FOUND            - True if headers and requested libraries were found\n\n#   Boost_INCLUDE_DIRS     - Boost include directories\n\n#   Boost_LIBRARY_DIRS     - Link directories for Boost libraries\n\n#   Boost_LIBRARIES        - Boost component libraries to be linked\n\n#   Boost_<C>_FOUND        - True if component <C> was found (<C> is upper-case)\n\n#   Boost_<C>_LIBRARY      - Libraries to link for component <C> (may include\n\n#                            target_link_libraries debug/optimized keywords)\n\n#   Boost_VERSION          - BOOST_VERSION value from boost/version.hpp\n\n#   Boost_LIB_VERSION      - Version string appended to library filenames\n\n#   Boost_MAJOR_VERSION    - Boost major version number (X in X.y.z)\n\n#   Boost_MINOR_VERSION    - Boost minor version number (Y in x.Y.z)\n\n#   Boost_SUBMINOR_VERSION - Boost subminor version number (Z in x.y.Z)\n\n#   Boost_LIB_DIAGNOSTIC_DEFINITIONS (Windows)\n\n#                          - Pass to add_definitions() to have diagnostic\n\n#                            information about Boost's automatic linking\n\n#                            displayed during compilation\n\n#\n\n# This module reads hints about search locations from variables::\n\n#\n\n#   BOOST_ROOT             - Preferred installation prefix\n\n#    (or BOOSTROOT)\n\n#   BOOST_INCLUDEDIR       - Preferred include directory e.g. <prefix>/include\n\n#   BOOST_LIBRARYDIR       - Preferred library directory e.g. <prefix>/lib\n\n#   Boost_NO_SYSTEM_PATHS  - Set to ON to disable searching in locations not\n\n#                            specified by these hint variables. Default is OFF.\n\n#   Boost_ADDITIONAL_VERSIONS\n\n#                          - List of Boost versions not known to this module\n\n#                            (Boost install locations may contain the version)\n\n#\n\n# and saves search results persistently in CMake cache entries::\n\n#\n\n#   Boost_INCLUDE_DIR         - Directory containing Boost headers\n\n#   Boost_LIBRARY_DIR_RELEASE - Directory containing release Boost libraries\n\n#   Boost_LIBRARY_DIR_DEBUG   - Directory containing debug Boost libraries\n\n#   Boost_<C>_LIBRARY_DEBUG   - Component <C> library debug variant\n\n#   Boost_<C>_LIBRARY_RELEASE - Component <C> library release variant\n\n#\n\n# The following :prop_tgt:`IMPORTED` targets are also defined::\n\n#\n\n#   Boost::boost                  - Target for header-only dependencies\n\n#                                   (Boost include directory)\n\n#   Boost::<C>                    - Target for specific component dependency\n\n#                                   (shared or static library); <C> is lower-\n\n#                                   case\n\n#   Boost::diagnostic_definitions - interface target to enable diagnostic\n\n#                                   information about Boost's automatic linking\n\n#                                   during compilation (adds BOOST_LIB_DIAGNOSTIC)\n\n#   Boost::disable_autolinking    - interface target to disable automatic\n\n#                                   linking with MSVC (adds BOOST_ALL_NO_LIB)\n\n#   Boost::dynamic_linking        - interface target to enable dynamic linking\n\n#                                   linking with MSVC (adds BOOST_ALL_DYN_LINK)\n\n#\n\n# Implicit dependencies such as Boost::filesystem requiring\n\n# Boost::system will be automatically detected and satisfied, even\n\n# if system is not specified when using find_package and if\n\n# Boost::system is not added to target_link_libraries.  If using\n\n# Boost::thread, then Thread::Thread will also be added automatically.\n\n#\n\n# It is important to note that the imported targets behave differently\n\n# than variables created by this module: multiple calls to\n\n# find_package(Boost) in the same directory or sub-directories with\n\n# different options (e.g. static or shared) will not override the\n\n# values of the targets created by the first call.\n\n#\n\n# Users may set these hints or results as cache entries.  Projects\n\n# should not read these entries directly but instead use the above\n\n# result variables.  Note that some hint names start in upper-case\n\n# \"BOOST\".  One may specify these as environment variables if they are\n\n# not specified as CMake variables or cache entries.\n\n#\n\n# This module first searches for the Boost header files using the above\n\n# hint variables (excluding BOOST_LIBRARYDIR) and saves the result in\n\n# Boost_INCLUDE_DIR.  Then it searches for requested component libraries\n\n# using the above hints (excluding BOOST_INCLUDEDIR and\n\n# Boost_ADDITIONAL_VERSIONS), \"lib\" directories near Boost_INCLUDE_DIR,\n\n# and the library name configuration settings below.  It saves the\n\n# library directories in Boost_LIBRARY_DIR_DEBUG and\n\n# Boost_LIBRARY_DIR_RELEASE and individual library\n\n# locations in Boost_<C>_LIBRARY_DEBUG and Boost_<C>_LIBRARY_RELEASE.\n\n# When one changes settings used by previous searches in the same build\n\n# tree (excluding environment variables) this module discards previous\n\n# search results affected by the changes and searches again.\n\n#\n\n# Boost libraries come in many variants encoded in their file name.\n\n# Users or projects may tell this module which variant to find by\n\n# setting variables::\n\n#\n\n#   Boost_USE_MULTITHREADED  - Set to OFF to use the non-multithreaded\n\n#                              libraries ('mt' tag).  Default is ON.\n\n#   Boost_USE_STATIC_LIBS    - Set to ON to force the use of the static\n\n#                              libraries.  Default is OFF.\n\n#   Boost_USE_STATIC_RUNTIME - Set to ON or OFF to specify whether to use\n\n#                              libraries linked statically to the C++ runtime\n\n#                              ('s' tag).  Default is platform dependent.\n\n#   Boost_USE_DEBUG_RUNTIME  - Set to ON or OFF to specify whether to use\n\n#                              libraries linked to the MS debug C++ runtime\n\n#                              ('g' tag).  Default is ON.\n\n#   Boost_USE_DEBUG_PYTHON   - Set to ON to use libraries compiled with a\n\n#                              debug Python build ('y' tag). Default is OFF.\n\n#   Boost_USE_STLPORT        - Set to ON to use libraries compiled with\n\n#                              STLPort ('p' tag).  Default is OFF.\n\n#   Boost_USE_STLPORT_DEPRECATED_NATIVE_IOSTREAMS\n\n#                            - Set to ON to use libraries compiled with\n\n#                              STLPort deprecated \"native iostreams\"\n\n#                              ('n' tag).  Default is OFF.\n\n#   Boost_COMPILER           - Set to the compiler-specific library suffix\n\n#                              (e.g. \"-gcc43\").  Default is auto-computed\n\n#                              for the C++ compiler in use.  A list may be\n\n#                              used if multiple compatible suffixes should\n\n#                              be tested for, in decreasing order of\n\n#                              preference.\n\n#   Boost_THREADAPI          - Suffix for \"thread\" component library name,\n\n#                              such as \"pthread\" or \"win32\".  Names with\n\n#                              and without this suffix will both be tried.\n\n#   Boost_NAMESPACE          - Alternate namespace used to build boost with\n\n#                              e.g. if set to \"myboost\", will search for\n\n#                              myboost_thread instead of boost_thread.\n\n#\n\n# Other variables one may set to control this module are::\n\n#\n\n#   Boost_DEBUG              - Set to ON to enable debug output from FindBoost.\n\n#                              Please enable this before filing any bug report.\n\n#   Boost_DETAILED_FAILURE_MSG\n\n#                            - Set to ON to add detailed information to the\n\n#                              failure message even when the REQUIRED option\n\n#                              is not given to the find_package call.\n\n#   Boost_REALPATH           - Set to ON to resolve symlinks for discovered\n\n#                              libraries to assist with packaging.  For example,\n\n#                              the \"system\" component library may be resolved to\n\n#                              \"/usr/lib/libboost_system.so.1.42.0\" instead of\n\n#                              \"/usr/lib/libboost_system.so\".  This does not\n\n#                              affect linking and should not be enabled unless\n\n#                              the user needs this information.\n\n#   Boost_LIBRARY_DIR        - Default value for Boost_LIBRARY_DIR_RELEASE and\n\n#                              Boost_LIBRARY_DIR_DEBUG.\n\n#\n\n# On Visual Studio and Borland compilers Boost headers request automatic\n\n# linking to corresponding libraries.  This requires matching libraries\n\n# to be linked explicitly or available in the link library search path.\n\n# In this case setting Boost_USE_STATIC_LIBS to OFF may not achieve\n\n# dynamic linking.  Boost automatic linking typically requests static\n\n# libraries with a few exceptions (such as Boost.Python).  Use::\n\n#\n\n#   add_definitions(${Boost_LIB_DIAGNOSTIC_DEFINITIONS})\n\n#\n\n# to ask Boost to report information about automatic linking requests.\n\n#\n\n# Example to find Boost headers only::\n\n#\n\n#   find_package(Boost 1.36.0)\n\n#   if(Boost_FOUND)\n\n#     include_directories(${Boost_INCLUDE_DIRS})\n\n#     add_executable(foo foo.cc)\n\n#   endif()\n\n#\n\n# Example to find Boost libraries and use imported targets::\n\n#\n\n#   find_package(Boost 1.56 REQUIRED COMPONENTS\n\n#                date_time filesystem iostreams)\n\n#   add_executable(foo foo.cc)\n\n#   target_link_libraries(foo Boost::date_time Boost::filesystem\n\n#                             Boost::iostreams)\n\n#\n\n# Example to find Boost headers and some *static* libraries::\n\n#\n\n#   set(Boost_USE_STATIC_LIBS        ON) # only find static libs\n\n#   set(Boost_USE_MULTITHREADED      ON)\n\n#   set(Boost_USE_STATIC_RUNTIME    OFF)\n\n#   find_package(Boost 1.36.0 COMPONENTS date_time filesystem system ...)\n\n#   if(Boost_FOUND)\n\n#     include_directories(${Boost_INCLUDE_DIRS})\n\n#     add_executable(foo foo.cc)\n\n#     target_link_libraries(foo ${Boost_LIBRARIES})\n\n#   endif()\n\n#\n\n# Boost CMake\n\n# ^^^^^^^^^^^\n\n#\n\n# If Boost was built using the boost-cmake project it provides a package\n\n# configuration file for use with find_package's Config mode.  This\n\n# module looks for the package configuration file called\n\n# BoostConfig.cmake or boost-config.cmake and stores the result in cache\n\n# entry \"Boost_DIR\".  If found, the package configuration file is loaded\n\n# and this module returns with no further action.  See documentation of\n\n# the Boost CMake package configuration for details on what it provides.\n\n#\n\n# Set Boost_NO_BOOST_CMAKE to ON to disable the search for boost-cmake.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# Before we go searching, check whether boost-cmake is available, unless the\n\n# user specifically asked NOT to search for boost-cmake.\n\n#\n\n# If Boost_DIR is set, this behaves as any find_package call would. If not,\n\n# it looks at BOOST_ROOT and BOOSTROOT to find Boost.\n\n#\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If Boost_DIR is not set, look for BOOSTROOT and BOOST_ROOT as alternatives,\n\n# since these are more conventional for Boost.\n",
        "Line" : 219,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Do the same find_package call but look specifically for the CMake version.\n\n# Note that args are passed in the Boost_FIND_xxxxx variables, so there is no\n\n# need to delegate them to this find_package call.\n",
        "Line" : 229,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# If we found boost-cmake, then we're done.  Print out what we found.\n\n# Otherwise let the rest of the module try to find it.\n",
        "Line" : 235,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#  FindBoost functions & macros\n\n#\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "############################################\n\n#\n\n# Check the existence of the libraries.\n\n#\n\n############################################\n\n# This macro was taken directly from the FindQt4.cmake file that is included\n\n# with the CMake distribution. This is NOT my work. All work was done by the\n\n# original authors of the FindQt4.cmake file. Only minor modifications were\n\n# made to remove references to Qt and make this file more generally applicable\n\n# And ELSE/ENDIF pairs were removed for readability.\n\n#########################################################################\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# if the generator supports configuration types then set\n\n# optimized and debug libraries, or if the CMAKE_BUILD_TYPE has a value\n",
        "Line" : 267,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# if there are no configuration types and CMAKE_BUILD_TYPE has no value\n\n# then just use the release libraries\n",
        "Line" : 272,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# FIXME: This probably should be set for both cases\n",
        "Line" : 276,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# if only the release version was found, set the debug variable also to the release version\n",
        "Line" : 280,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# if only the debug version was found, set the release variable also to the debug version\n",
        "Line" : 287,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# If the debug & release library ends up being the same, omit the keywords\n",
        "Line" : 294,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Make variables changeable to the advanced user\n",
        "Line" : 305,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Detect changes in used variables.\n\n# Compares the current variable value with the last one.\n\n# In short form:\n\n# v != v_LAST                      -> CHANGED = 1\n\n# v is defined, v_LAST not         -> CHANGED = 1\n\n# v is not defined, but v_LAST is  -> CHANGED = 1\n\n# otherwise                        -> CHANGED = 0\n\n# CHANGED is returned in variable named ${changed_var}\n",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#\n\n# Find the given library (var).\n\n# Use 'build_type' to support different lib paths for RELEASE or DEBUG builds\n\n#\n",
        "Line" : 342,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# If this is the first library found then save Boost_LIBRARY_DIR_[RELEASE,DEBUG].\n",
        "Line" : 351,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Try component-specific hints but do not save Boost_LIBRARY_DIR_[RELEASE,DEBUG].\n",
        "Line" : 357,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# If Boost_LIBRARY_DIR_[RELEASE,DEBUG] is known then search only there.\n",
        "Line" : 361,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 372,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#\n\n# Runs compiler with \"-dumpversion\" and parses major/minor\n\n# version with a regex.\n\n#\n",
        "Line" : 374,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#\n\n# Take a list of libraries with \"thread\" in it\n\n# and prepend duplicates with \"thread_${Boost_THREADAPI}\"\n\n# at the front of the list\n\n#\n",
        "Line" : 390,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\n\n# If a library is found, replace its cache entry with its REALPATH\n\n#\n",
        "Line" : 401,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Guesses Boost's compiler prefix used in built library names\n\n# Returns the guess by setting the variable pointed to by _ret\n",
        "Line" : 419,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Good luck!\n",
        "Line" : 449,
        "CharPositionInLine" : 59
      },
      "26" : {
        "Text" : "# yes, this is correct\n",
        "Line" : 450,
        "CharPositionInLine" : 34
      },
      "27" : {
        "Text" : "# VS 6.0 Good luck!\n",
        "Line" : 451,
        "CharPositionInLine" : 11
      },
      "28" : {
        "Text" : "# yes, this is correct\n",
        "Line" : 452,
        "CharPositionInLine" : 34
      },
      "29" : {
        "Text" : "# no GCC version encoding prior to 1.34\n",
        "Line" : 462,
        "CharPositionInLine" : 36
      },
      "30" : {
        "Text" : "# no GCC version encoding prior to 1.34\n",
        "Line" : 470,
        "CharPositionInLine" : 36
      },
      "31" : {
        "Text" : "# Determine which version of GCC we have.\n",
        "Line" : 473,
        "CharPositionInLine" : 8
      },
      "32" : {
        "Text" : "# In Boost 1.36.0 and newer, the mangled compiler name used\n\n# on Mac OS X/Darwin is \"xgcc\".\n",
        "Line" : 477,
        "CharPositionInLine" : 14
      },
      "33" : {
        "Text" : "# In Boost <= 1.35.0, there is no mangled compiler name for\n\n# the Mac OS X/Darwin version of GCC.\n",
        "Line" : 481,
        "CharPositionInLine" : 14
      },
      "34" : {
        "Text" : "# We don't know the Boost version, so assume it's\n\n# pre-1.36.0.\n",
        "Line" : 486,
        "CharPositionInLine" : 12
      },
      "35" : {
        "Text" : "# TODO at least Boost_DEBUG here?\n",
        "Line" : 496,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "#\n\n# Get component dependencies.  Requires the dependencies to have been\n\n# defined for the Boost release version.\n\n#\n\n# component - the component to check\n\n# _ret - list of library dependencies\n\n#\n",
        "Line" : 502,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Note: to add a new Boost release, run\n\n#\n\n#   % cmake -DBOOST_DIR=/path/to/boost/source -P Utilities/Scripts/BoostScanDeps.cmake\n\n#\n\n# The output may be added in a new block below.  If it's the same as\n\n# the previous release, simply update the version range of the block\n\n# for the previous release.  Also check if any new components have\n\n# been added, and add any new components to\n\n# _Boost_COMPONENT_HEADERS.\n\n#\n\n# This information was originally generated by running\n\n# BoostScanDeps.cmake against every boost release to date supported\n\n# by FindBoost:\n\n#\n\n#   % for version in /path/to/boost/sources/*\n\n#     do\n\n#       cmake -DBOOST_DIR=$version -P Utilities/Scripts/BoostScanDeps.cmake\n\n#     done\n\n#\n\n# The output was then updated by search and replace with these regexes:\n\n#\n\n# - Strip message(STATUS) prefix dashes\n\n#   s;^-- ;;\n\n# - Indent\n\n#   s;^set(;    set(;;\n\n# - Add conditionals\n\n#   s;Scanning /path/to/boost/sources/boost_\\(.*\\)_\\(.*\\)_\\(.*);  elseif(NOT Boost_VERSION VERSION_LESS \\10\\20\\3 AND Boost_VERSION VERSION_LESS xxxx);\n\n#\n\n# This results in the logic seen below, but will require the xxxx\n\n# replacing with the following Boost release version (or the next\n\n# minor version to be released, e.g. 1.59 was the latest at the time\n\n# of writing, making 1.60 the next, so 106000 is the needed version\n\n# number).  Identical consecutive releases were then merged together\n\n# by updating the end range of the first block and removing the\n\n# following redundant blocks.\n\n#\n\n# Running the script against all historical releases should be\n\n# required only if the BoostScanDeps.cmake script logic is changed.\n\n# The addition of a new release should only require it to be run\n\n# against the new release.\n",
        "Line" : 510,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# message(STATUS \"Dependencies for Boost::${component}: ${_boost_DEPS_STRING}\")\n",
        "Line" : 777,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "#\n\n# Get component headers.  This is the primary header (or headers) for\n\n# a given component, and is used to check that the headers are present\n\n# as well as the library itself as an extra sanity check of the build\n\n# environment.\n\n#\n\n# component - the component to check\n\n# _hdrs\n\n#\n",
        "Line" : 780,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Note: new boost components will require adding here.  The header\n\n# must be present in all versions of Boost providing a library.\n",
        "Line" : 790,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# message(STATUS \"Headers for Boost::${component}: ${_boost_HDRS_STRING}\")\n",
        "Line" : 843,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "#\n\n# Determine if any missing dependencies require adding to the component list.\n\n#\n\n# Sets _Boost_${COMPONENT}_DEPENDENCIES for each required component,\n\n# plus _Boost_IMPORTED_TARGETS (TRUE if imported targets should be\n\n# defined; FALSE if dependency information is unavailable).\n\n#\n\n# componentvar - the component list variable name\n\n# extravar - the indirect dependency list variable name\n\n#\n\n#\n",
        "Line" : 846,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# _boost_unprocessed_components - list of components requiring processing\n\n# _boost_processed_components - components already processed (or currently being processed)\n\n# _boost_new_components - new components discovered for future processing\n\n#\n",
        "Line" : 858,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "#\n\n# Update library search directory hint variable with paths used by prebuilt boost binaries.\n\n#\n\n# Prebuilt windows binaries (https://sourceforge.net/projects/boost/files/boost-binaries/)\n\n# have library directories named using MSVC compiler version and architecture.\n\n# This function would append corresponding directories if MSVC is a current compiler,\n\n# so having `BOOST_ROOT` would be enough to specify to find everything.\n\n#\n",
        "Line" : 891,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#\n\n# End functions/macros\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 926,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# main.\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 931,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# If the user sets Boost_LIBRARY_DIR, use it as the default for both\n\n# configurations.\n",
        "Line" : 936,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# Check the version of Boost against the requested version.\n",
        "Line" : 952,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# The version may appear in a directory with or without the patch\n\n# level, even when the patch level is non-zero.\n",
        "Line" : 958,
        "CharPositionInLine" : 2
      },
      "50" : {
        "Text" : "# The user has not requested an exact version.  Among known\n\n# versions, find those that are acceptable to the user request.\n\n#\n\n# Note: When adding a new Boost release, also update the dependency\n\n# information in _Boost_COMPONENT_DEPENDENCIES and\n\n# _Boost_COMPONENT_HEADERS.  See the instructions at the top of\n\n# _Boost_COMPONENT_DEPENDENCIES.\n",
        "Line" : 964,
        "CharPositionInLine" : 2
      },
      "51" : {
        "Text" : "# Select acceptable versions.\n",
        "Line" : 984,
        "CharPositionInLine" : 4
      },
      "52" : {
        "Text" : "# This version is high enough.\n",
        "Line" : 987,
        "CharPositionInLine" : 8
      },
      "53" : {
        "Text" : "# This version is a short-form for the requested version with\n\n# the patch level dropped.\n",
        "Line" : 990,
        "CharPositionInLine" : 8
      },
      "54" : {
        "Text" : "# Any version is acceptable.\n",
        "Line" : 996,
        "CharPositionInLine" : 4
      },
      "55" : {
        "Text" : "# The reason that we failed to find Boost. This will be set to a\n\n# user-friendly message when we fail to find some necessary piece of\n\n# Boost.\n",
        "Line" : 1001,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# Output some of their choices\n",
        "Line" : 1007,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "# Supply Boost_LIB_DIAGNOSTIC_DEFINITIONS as a convenience target. It\n\n# will only contain any interface definitions on WIN32, but is created\n\n# on all platforms to keep end user code free from platform dependent\n\n# code.  Also provide convenience targets to disable autolinking and\n\n# enable dynamic linking.\n",
        "Line" : 1022,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# In windows, automatic linking is performed, so you do not have\n\n# to specify the libraries.  If you are linking to a dynamic\n\n# runtime, then you can choose to link to either a static or a\n\n# dynamic Boost library, the default is to do a static link.  You\n\n# can alter this for a specific library \"whatever\" by defining\n\n# BOOST_WHATEVER_DYN_LINK to force Boost library \"whatever\" to be\n\n# linked dynamically.  Alternatively you can force all Boost\n\n# libraries to dynamic link by defining BOOST_ALL_DYN_LINK.\n",
        "Line" : 1033,
        "CharPositionInLine" : 2
      },
      "59" : {
        "Text" : "# This feature can be disabled for Boost library \"whatever\" by\n\n# defining BOOST_WHATEVER_NO_LIB, or for all of Boost by defining\n\n# BOOST_ALL_NO_LIB.\n",
        "Line" : 1042,
        "CharPositionInLine" : 2
      },
      "60" : {
        "Text" : "# If you want to observe which libraries are being linked against\n\n# then defining BOOST_LIB_DIAGNOSTIC will cause the auto-linking\n\n# code to emit a #pragma message each time a library is selected\n\n# for linking.\n",
        "Line" : 1046,
        "CharPositionInLine" : 2
      },
      "61" : {
        "Text" : "# Collect environment variable inputs as hints.  Do not consider changes.\n",
        "Line" : 1063,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Collect inputs and cached results.  Detect changes since the last run.\n",
        "Line" : 1076,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Search for Boost include DIR\n\n# ------------------------------------------------------------------------\n",
        "Line" : 1098,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# Clear Boost_INCLUDE_DIR if it did not change but other input affecting the\n\n# location did.  We will find a new one based on the new inputs.\n",
        "Line" : 1104,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# Try to find Boost by stepping backwards through the Boost versions\n\n# we know about.\n\n# Build a list of path suffixes for each version.\n",
        "Line" : 1140,
        "CharPositionInLine" : 2
      },
      "66" : {
        "Text" : "# Add in a path suffix, based on the required version, ideally\n\n# we could read this from version.hpp, but for that to work we'd\n\n# need to know the include dir already\n",
        "Line" : 1145,
        "CharPositionInLine" : 4
      },
      "67" : {
        "Text" : "# Transform 1.35 => 1_35 and 1.36.0 => 1_36_0\n",
        "Line" : 1150,
        "CharPositionInLine" : 4
      },
      "68" : {
        "Text" : "# Look for a standard boost header file.\n",
        "Line" : 1177,
        "CharPositionInLine" : 2
      },
      "69" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Extract version information from version.hpp\n\n# ------------------------------------------------------------------------\n",
        "Line" : 1185,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# Set Boost_FOUND based only on header location and version.\n\n# It will be updated below for component libraries.\n",
        "Line" : 1189,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Extract Boost_VERSION and Boost_LIB_VERSION from version.hpp\n",
        "Line" : 1197,
        "CharPositionInLine" : 2
      },
      "72" : {
        "Text" : "# Set Boost_FOUND based on requested version.\n",
        "Line" : 1223,
        "CharPositionInLine" : 4
      },
      "73" : {
        "Text" : "# State that we found a version of Boost that is too new or too old.\n",
        "Line" : 1236,
        "CharPositionInLine" : 6
      },
      "74" : {
        "Text" : "# Caller will accept any Boost version.\n",
        "Line" : 1249,
        "CharPositionInLine" : 4
      },
      "75" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Prefix initialization\n\n# ------------------------------------------------------------------------\n",
        "Line" : 1258,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Suffix initialization and compiler suffix detection.\n\n# ------------------------------------------------------------------------\n",
        "Line" : 1272,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# Setting some more suffixes for the library\n",
        "Line" : 1289,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# Attempt to guess the compiler suffix\n\n# NOTE: this is not perfect yet, if you experience any issues\n\n# please report them and use the Boost_COMPILER variable\n\n# to work around the problems.\n",
        "Line" : 1297,
        "CharPositionInLine" : 2
      },
      "79" : {
        "Text" : "#======================\n\n# Systematically build up the Boost ABI tag\n\n# http://boost.org/doc/libs/1_41_0/more/getting_started/windows.html#library-naming\n",
        "Line" : 1317,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# Key       Use this library when:\n\n#  s        linking statically to the C++ standard library and\n\n#           compiler runtime support libraries.\n",
        "Line" : 1322,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "#  g        using debug versions of the standard and runtime\n\n#           support libraries\n",
        "Line" : 1329,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "#  y        using special debug build of python\n",
        "Line" : 1338,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "#  d        using a debug version of your code\n",
        "Line" : 1342,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "#  p        using the STLport standard library rather than the\n\n#           default one supplied with your compiler\n",
        "Line" : 1344,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "#  n        using the STLport deprecated \"native iostreams\" feature\n",
        "Line" : 1350,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Begin finding boost libraries\n\n# ------------------------------------------------------------------------\n",
        "Line" : 1363,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# Clear Boost_LIBRARY_DIR_${c} if it did not change but other input affecting the\n\n# location did.  We will find a new one based on the new inputs.\n",
        "Line" : 1372,
        "CharPositionInLine" : 2
      },
      "88" : {
        "Text" : "# If Boost_LIBRARY_DIR_[RELEASE,DEBUG] is set, prefer its value.\n",
        "Line" : 1378,
        "CharPositionInLine" : 2
      },
      "89" : {
        "Text" : "# Support preference of static libs by adjusting CMAKE_FIND_LIBRARY_SUFFIXES\n",
        "Line" : 1426,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "# We want to use the tag inline below without risking double dashes\n",
        "Line" : 1436,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "# The previous behavior of FindBoost when Boost_USE_STATIC_LIBS was enabled\n\n# on WIN32 was to:\n\n#  1. Search for static libs compiled against a SHARED C++ standard runtime library (use if found)\n\n#  2. Search for static libs compiled against a STATIC C++ standard runtime library (use if found)\n\n# We maintain this behavior since changing it could break people's builds.\n\n# To disable the ambiguous behavior, the user need only\n\n# set Boost_USE_STATIC_RUNTIME either ON or OFF.\n",
        "Line" : 1448,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "# On versions < 1.35, remove the System library from the considered list\n\n# since it wasn't added until 1.35.\n",
        "Line" : 1462,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "# Additional components may be required via component dependencies.\n\n# Add any missing components to the list.\n",
        "Line" : 1470,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "# If thread is required, get the thread libs as a dependency\n",
        "Line" : 1474,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "# If the user changed any of our control inputs flush previous results.\n",
        "Line" : 1481,
        "CharPositionInLine" : 0
      },
      "96" : {
        "Text" : "# Compute component-specific hints.\n",
        "Line" : 1500,
        "CharPositionInLine" : 2
      },
      "97" : {
        "Text" : "# Consolidate and report component-specific hints.\n",
        "Line" : 1513,
        "CharPositionInLine" : 2
      },
      "98" : {
        "Text" : "#\n\n# Find headers\n\n#\n",
        "Line" : 1523,
        "CharPositionInLine" : 2
      },
      "99" : {
        "Text" : "# Look for a standard boost header file.\n",
        "Line" : 1527,
        "CharPositionInLine" : 2
      },
      "100" : {
        "Text" : "#\n\n# Find RELEASE libraries\n\n#\n",
        "Line" : 1539,
        "CharPositionInLine" : 2
      },
      "101" : {
        "Text" : "# if Boost_LIBRARY_DIR_RELEASE is not defined,\n\n# but Boost_LIBRARY_DIR_DEBUG is, look there first for RELEASE libs\n",
        "Line" : 1571,
        "CharPositionInLine" : 2
      },
      "102" : {
        "Text" : "# Avoid passing backslashes to _Boost_FIND_LIBRARY due to macro re-parsing.\n",
        "Line" : 1577,
        "CharPositionInLine" : 2
      },
      "103" : {
        "Text" : "#\n\n# Find DEBUG libraries\n\n#\n",
        "Line" : 1587,
        "CharPositionInLine" : 2
      },
      "104" : {
        "Text" : "# if Boost_LIBRARY_DIR_DEBUG is not defined,\n\n# but Boost_LIBRARY_DIR_RELEASE is, look there first for DEBUG libs\n",
        "Line" : 1620,
        "CharPositionInLine" : 2
      },
      "105" : {
        "Text" : "# Avoid passing backslashes to _Boost_FIND_LIBRARY due to macro re-parsing.\n",
        "Line" : 1626,
        "CharPositionInLine" : 2
      },
      "106" : {
        "Text" : "# Restore the original find library ordering\n",
        "Line" : 1645,
        "CharPositionInLine" : 0
      },
      "107" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  End finding boost libraries\n\n# ------------------------------------------------------------------------\n",
        "Line" : 1650,
        "CharPositionInLine" : 0
      },
      "108" : {
        "Text" : "# The above setting of Boost_FOUND was based only on the header files.\n\n# Update it for the requested component libraries.\n",
        "Line" : 1666,
        "CharPositionInLine" : 0
      },
      "109" : {
        "Text" : "# The headers were found.  Check for requested component libs.\n",
        "Line" : 1669,
        "CharPositionInLine" : 2
      },
      "110" : {
        "Text" : "# Optional indirect dependencies are not counted as missing.\n",
        "Line" : 1681,
        "CharPositionInLine" : 4
      },
      "111" : {
        "Text" : "# We were unable to find some libraries, so generate a sensible\n\n# error message that lists the libraries we were unable to find.\n",
        "Line" : 1691,
        "CharPositionInLine" : 4
      },
      "112" : {
        "Text" : "# Compatibility Code for backwards compatibility with CMake\n\n# 2.4's FindBoost module.\n",
        "Line" : 1717,
        "CharPositionInLine" : 4
      },
      "113" : {
        "Text" : "# Look for the boost library path.\n\n# Note that the user may not have installed any libraries\n\n# so it is quite possible the Boost_LIBRARY_DIRS may not exist.\n",
        "Line" : 1720,
        "CharPositionInLine" : 4
      },
      "114" : {
        "Text" : "# Strip off the trailing \"/include\" in the path.\n",
        "Line" : 1730,
        "CharPositionInLine" : 6
      },
      "115" : {
        "Text" : "# Boost headers were not found so no components were found.\n",
        "Line" : 1748,
        "CharPositionInLine" : 2
      },
      "116" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Add imported targets\n\n# ------------------------------------------------------------------------\n",
        "Line" : 1755,
        "CharPositionInLine" : 0
      },
      "117" : {
        "Text" : "# For header-only libraries\n",
        "Line" : 1760,
        "CharPositionInLine" : 2
      },
      "118" : {
        "Text" : "# Even if Boost_USE_STATIC_LIBS is OFF, we might have static\n\n# libraries as a result.\n",
        "Line" : 1776,
        "CharPositionInLine" : 10
      },
      "119" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Notification to end user about what was found\n\n# ------------------------------------------------------------------------\n",
        "Line" : 1819,
        "CharPositionInLine" : 0
      },
      "120" : {
        "Text" : "# we opt not to automatically output Boost_ERROR_REASON here as\n\n# it could be quite lengthy and somewhat imposing in its requests\n\n# Since Boost is not always a required dependency we'll leave this\n\n# up to the end-user.\n",
        "Line" : 1845,
        "CharPositionInLine" : 6
      },
      "121" : {
        "Text" : "# Configure display of cache entries in GUI.\n",
        "Line" : 1858,
        "CharPositionInLine" : 0
      },
      "122" : {
        "Text" : "# Record last used values of input variables so we can\n\n# detect on the next run if the user changed them.\n",
        "Line" : 1873,
        "CharPositionInLine" : 0
      },
      "123" : {
        "Text" : "# Maintain a persistent list of components requested anywhere since\n\n# the last flush.\n",
        "Line" : 1886,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 124
    },
    "cmake/macros/FindMySQL.cmake" : {
      "ObjectId" : "ae7db0bb29718cc610f34315182fffb9fc6818b0",
      "LastModified" : "2018-01-02T23:21:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Find the MySQL client includes and library\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module defines\n\n# MYSQL_INCLUDE_DIR, where to find mysql.h\n\n# MYSQL_LIBRARIES, the libraries to link against to connect to MySQL\n\n# MYSQL_FOUND, if false, you cannot build anything that requires MySQL.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# also defined, but not for general use are\n\n# MYSQL_LIBRARY, where to find the MySQL library.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# set INCLUDE_DIR\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#message(\"[DEBUG] MYSQL ADD_INCLUDE_PATH : ${MYSQL_ADD_INCLUDE_PATH}\")\n\n# set LIBRARY_DIR\n",
        "Line" : 37,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#message(\"[DEBUG] MYSQL ADD_LIBRARIES : ${MYSQL_ADD_LIBRARIES}\")\n",
        "Line" : 48,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "#message(\"[DEBUG] MYSQL ADD_LIBRARIES_PATH : ${MYSQL_ADD_LIBRARIES_PATH}\")\n",
        "Line" : 56,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# On Windows you typically don't need to include any extra libraries\n\n# to build MYSQL stuff.\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake/macros/FindPCHSupport.cmake" : {
      "ObjectId" : "f5defae4d8b97081b64f83116fa6298a0f7377c9",
      "LastModified" : "2018-01-02T23:21:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find precompiled headers support for GCC 3.4 and 4.x\n\n# Once done this will define:\n\n#\n\n# Variable:\n\n#   PCHSupport_FOUND\n\n#\n\n# Macro:\n\n#   ADD_PRECOMPILED_HEADER  _targetName _input  _dowarn\n\n#   ADD_PRECOMPILED_HEADER_TO_TARGET _targetName _input _pch_output_to_use _dowarn\n\n#   ADD_NATIVE_PRECOMPILED_HEADER _targetName _input _dowarn\n\n#   GET_NATIVE_PRECOMPILED_HEADER _targetName _input\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#MESSAGE(\"GCC Version: ${gcc_compiler_version}\")\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# for experimental msvc support\n",
        "Line" : 32,
        "CharPositionInLine" : 31
      },
      "3" : {
        "Text" : "## TODO ... ? or does it work out of the box\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# MESSAGE(\"_directory_flags ${_directory_flags}\" )\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# remove leading space in compiler argument\n",
        "Line" : 100,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "#/out:${_output}\n",
        "Line" : 119,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# for use with distcc and gcc >4.0.1 if preprocessed files are accessible\n\n# on all remote machines set\n\n# PCH_ADDITIONAL_COMPILER_FLAGS to -fpch-preprocess\n\n# if you want warnings for invalid header files (which is very inconvenient\n\n# if you have different versions of the headers for different build types\n\n# you may set _pch_dowarn\n",
        "Line" : 132,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# to do: test whether compiler flags match between target  _targetName\n\n# and _pch_output_to_use\n",
        "Line" : 160,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#   MESSAGE(\"Add flags ${_target_cflags} to ${_targetName} \" )\n",
        "Line" : 172,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#MESSAGE(\"_compile_FLAGS: ${_compile_FLAGS}\")\n\n#message(\"COMMAND ${CMAKE_CXX_COMPILER} ${_compile_FLAGS} -x c++-header -o ${_output} ${_input}\")\n",
        "Line" : 224,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# ensure same directory! Required by gcc\n",
        "Line" : 229,
        "CharPositionInLine" : 84
      },
      "12" : {
        "Text" : "#message(\"_command  ${_input} ${_output}\")\n",
        "Line" : 233,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#message(${_input} )\n\n#message(\"_output ${_output}\")\n",
        "Line" : 236,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Generates the use of precompiled in a target,\n\n# without using depency targets (2 extra for each target)\n\n# Using Visual, must also add ${_targetName}_pch to sources\n\n# Not needed by Xcode\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Use of cxx extension for generated files (as Qt does)\n",
        "Line" : 263,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Check if contents is the same, if not rewrite\n\n# todo\n",
        "Line" : 266,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# Auto include the precompile (useful for moc processing, since the use of\n\n# precompiled is specified at the target level\n\n# and I don't want to specifiy /F- for each moc/res/ui generated files (using Qt)\n",
        "Line" : 285,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "#also inlude ${oldProps} to have the same compile options\n",
        "Line" : 297,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# For Xcode, cmake needs my patch to process\n\n# GCC_PREFIX_HEADER and GCC_PRECOMPILE_PREFIX_HEADER as target properties\n",
        "Line" : 303,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "# When buiding out of the tree, precompiled may not be located\n\n# Use full path instead.\n",
        "Line" : 311,
        "CharPositionInLine" : 6
      },
      "21" : {
        "Text" : "#Fallback to the \"old\" precompiled suppport\n\n#ADD_PRECOMPILED_HEADER(${_targetName} ${_input} ${_dowarn})\n",
        "Line" : 320,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 22
    },
    "cmake/macros/FindReadline.cmake" : {
      "ObjectId" : "2254bebab9923601ad54a9ae4daea61a40deaac7",
      "LastModified" : "2018-01-02T23:21:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find Readline (terminal input library) includes and library\n\n#\n\n# READLINE_INCLUDE_DIR - where the directory containing the READLINE headers can be found\n\n# READLINE_LIBRARY     - full path to the READLINE library\n\n# READLINE_FOUND       - TRUE if READLINE was found\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/macros/FindTermcap.cmake" : {
      "ObjectId" : "29c44bde5c6e6977fc33f7e686a50c1b2b455696",
      "LastModified" : "2018-01-02T23:21:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find Terrmcap (terminal input library) includes and library\n\n#\n\n# TERMCAP_INCLUDE_DIR - where the directory containing the TERMCAP headers can be found\n\n# TERMCAP_LIBRARY     - full path to the TERMCAP library\n\n# TERMCAP_FOUND       - TRUE if TERMCAP was found\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/macros/FindVisualStudio2010.cmake" : {
      "ObjectId" : "343403def3addda0860bfb42e0095c64b49b8eb6",
      "LastModified" : "2018-01-02T23:21:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This module defines\n\n# VS_DEVENV, path to devenv.com.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/macros/cotire.cmake" : {
      "ObjectId" : "d10335784d7e3cfed3dc14d0a34a56a7105cc5f9",
      "LastModified" : "2018-01-02T23:21:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - cotire (compile time reducer)\n\n#\n\n# See the cotire manual for usage hints.\n\n#\n\n#=============================================================================\n\n# Copyright 2012-2015 Sascha Kratky\n\n#\n\n# Permission is hereby granted, free of charge, to any person\n\n# obtaining a copy of this software and associated documentation\n\n# files (the \"Software\"), to deal in the Software without\n\n# restriction, including without limitation the rights to use,\n\n# copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the\n\n# Software is furnished to do so, subject to the following\n\n# conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be\n\n# included in all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\n# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\n# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\n# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\n# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\n# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\n# OTHER DEALINGS IN THE SOFTWARE.\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# call cmake_minimum_required, but prevent modification of the CMake policy stack in include mode\n\n# cmake_minimum_required also sets the policy version as a side effect, which we have to avoid\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# activate select policies\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Compiler id for Apple Clang is now AppleClang\n",
        "Line" : 50,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# disallow use of the LOCATION target property\n",
        "Line" : 55,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# targets may not link directly to themselves\n",
        "Line" : 60,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# utility targets may not have link dependencies\n",
        "Line" : 65,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# target in the TARGET signature of add_custom_command() must exist\n",
        "Line" : 70,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# error on non-existent target in get_target_property\n",
        "Line" : 75,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# error on non-existent dependency in add_dependencies\n",
        "Line" : 80,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# do not expand variables in target source entries\n",
        "Line" : 85,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# disallow add_custom_command SOURCE signatures\n",
        "Line" : 90,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# include TARGET_OBJECTS expressions in a target's SOURCES property\n",
        "Line" : 95,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# simplify variable reference and escape sequence evaluation\n",
        "Line" : 100,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# only interpret if() arguments as variables or keywords when unquoted\n",
        "Line" : 105,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# get_filename_component returns extension from first occurrence of . in file name\n\n# this function computes the extension from last occurrence of . in file name\n",
        "Line" : 129,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "# as of CMake 3.1 target sources may contain generator expressions\n\n# since we cannot obtain required property information about source files added\n\n# through generator expressions at configure time, we filter them out\n",
        "Line" : 182,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# consider source file unless it is excluded explicitly\n",
        "Line" : 204,
        "CharPositionInLine" : 7
      },
      "18" : {
        "Text" : "# add to excluded sources, if file is not ignored and has correct language without having the correct extension\n",
        "Line" : 214,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# separate filtered source files from already cotired ones\n\n# the COTIRE_TARGET property of a source file may be set while a target is being processed by cotire\n",
        "Line" : 223,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "# add to excluded sources, if file has custom compile flags\n",
        "Line" : 234,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# remove from head\n",
        "Line" : 327,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# process transitive libraries\n",
        "Line" : 334,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# option with separate argument\n",
        "Line" : 358,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# remember option\n",
        "Line" : 362,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# option with joined argument\n",
        "Line" : 365,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# flush remembered option\n",
        "Line" : 369,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# add to unfiltered options\n",
        "Line" : 374,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# collect options from CMake language variables\n",
        "Line" : 394,
        "CharPositionInLine" : 1
      },
      "29" : {
        "Text" : "# add target compile flags\n",
        "Line" : 403,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# target compile options\n",
        "Line" : 416,
        "CharPositionInLine" : 1
      },
      "31" : {
        "Text" : "# interface compile options from linked library targets\n",
        "Line" : 423,
        "CharPositionInLine" : 1
      },
      "32" : {
        "Text" : "# handle language standard properties\n",
        "Line" : 434,
        "CharPositionInLine" : 1
      },
      "33" : {
        "Text" : "# handle the POSITION_INDEPENDENT_CODE target property\n",
        "Line" : 455,
        "CharPositionInLine" : 1
      },
      "34" : {
        "Text" : "# handle visibility target properties\n",
        "Line" : 467,
        "CharPositionInLine" : 1
      },
      "35" : {
        "Text" : "# platform specific flags\n",
        "Line" : 478,
        "CharPositionInLine" : 1
      },
      "36" : {
        "Text" : "# default include dirs\n",
        "Line" : 513,
        "CharPositionInLine" : 1
      },
      "37" : {
        "Text" : "# parse additional include directories from target compile flags\n",
        "Line" : 520,
        "CharPositionInLine" : 1
      },
      "38" : {
        "Text" : "# parse additional system include directories from target compile flags\n",
        "Line" : 532,
        "CharPositionInLine" : 1
      },
      "39" : {
        "Text" : "# target include directories\n",
        "Line" : 544,
        "CharPositionInLine" : 1
      },
      "40" : {
        "Text" : "# interface include directories from linked library targets\n",
        "Line" : 556,
        "CharPositionInLine" : 1
      },
      "41" : {
        "Text" : "# CMAKE_INTDIR for multi-configuration build systems\n",
        "Line" : 626,
        "CharPositionInLine" : 1
      },
      "42" : {
        "Text" : "# target export define symbol\n",
        "Line" : 630,
        "CharPositionInLine" : 1
      },
      "43" : {
        "Text" : "# directory compile definitions\n",
        "Line" : 635,
        "CharPositionInLine" : 1
      },
      "44" : {
        "Text" : "# target compile definitions\n",
        "Line" : 644,
        "CharPositionInLine" : 1
      },
      "45" : {
        "Text" : "# interface compile definitions from linked library targets\n",
        "Line" : 653,
        "CharPositionInLine" : 1
      },
      "46" : {
        "Text" : "# parse additional compile definitions from target compile flags\n\n# and don't look at directory compile definitions, which we already handled\n",
        "Line" : 662,
        "CharPositionInLine" : 1
      },
      "47" : {
        "Text" : "# parse target compile flags omitting compile definitions and include directives\n",
        "Line" : 678,
        "CharPositionInLine" : 1
      },
      "48" : {
        "Text" : "# IS_NEWER_THAN returns TRUE if both files have the same timestamp\n\n# thus we do the comparison in both directions to exclude ties\n",
        "Line" : 911,
        "CharPositionInLine" : 4
      },
      "49" : {
        "Text" : "# if path matches exactly, return short non-empty string\n",
        "Line" : 955,
        "CharPositionInLine" : 3
      },
      "50" : {
        "Text" : "# check header path against ignored and honored include directories\n",
        "Line" : 963,
        "CharPositionInLine" : 1
      },
      "51" : {
        "Text" : "# header is inside, but could be become outside if there is a shorter outside match\n",
        "Line" : 966,
        "CharPositionInLine" : 2
      },
      "52" : {
        "Text" : "# header is outside\n",
        "Line" : 980,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# heuristic: ignore C headers with embedded parent directory references or \"-fixed\" or \"_fixed\" in path\n\n# these often stem from using GCC #include_next tricks, which may break the precompiled header compilation\n\n# with the error message \"error: no include path in which to search for header.h\"\n",
        "Line" : 991,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# check header file extension\n",
        "Line" : 1001,
        "CharPositionInLine" : 1
      },
      "55" : {
        "Text" : "# cl.exe /showIncludes output looks different depending on the language pack used, e.g.:\n\n# English: \"Note: including file:   C:\\directory\\file\"\n\n# German: \"Hinweis: Einlesen der Datei:   C:\\directory\\file\"\n\n# We use a very general regular expression, relying on the presence of the : characters\n",
        "Line" : 1014,
        "CharPositionInLine" : 2
      },
      "56" : {
        "Text" : "# Visual Studio compiler output\n",
        "Line" : 1019,
        "CharPositionInLine" : 3
      },
      "57" : {
        "Text" : "# GCC like output\n",
        "Line" : 1028,
        "CharPositionInLine" : 3
      },
      "58" : {
        "Text" : "# prevent CMake macro invocation errors due to backslash characters in Windows paths\n",
        "Line" : 1044,
        "CharPositionInLine" : 2
      },
      "59" : {
        "Text" : "# canonize slashes\n",
        "Line" : 1047,
        "CharPositionInLine" : 1
      },
      "60" : {
        "Text" : "# prevent semicolon from being interpreted as a line separator\n",
        "Line" : 1049,
        "CharPositionInLine" : 1
      },
      "61" : {
        "Text" : "# then separate lines\n",
        "Line" : 1051,
        "CharPositionInLine" : 1
      },
      "62" : {
        "Text" : "# remove duplicate lines to speed up parsing\n",
        "Line" : 1054,
        "CharPositionInLine" : 1
      },
      "63" : {
        "Text" : "# stack keeps track of inside/outside project status of processed header files\n",
        "Line" : 1072,
        "CharPositionInLine" : 1
      },
      "64" : {
        "Text" : "# update stack\n",
        "Line" : 1082,
        "CharPositionInLine" : 4
      },
      "65" : {
        "Text" : "# header is a candidate if it is outside project\n",
        "Line" : 1098,
        "CharPositionInLine" : 4
      },
      "66" : {
        "Text" : "# get parent header file's inside/outside status\n",
        "Line" : 1100,
        "CharPositionInLine" : 5
      },
      "67" : {
        "Text" : "# select header file if parent header file is inside project\n\n# (e.g., a project header file that includes a standard header file)\n",
        "Line" : 1107,
        "CharPositionInLine" : 5
      },
      "68" : {
        "Text" : "# fix header's inside status on stack, it is ignored by extension now\n",
        "Line" : 1116,
        "CharPositionInLine" : 8
      },
      "69" : {
        "Text" : "# for cl.exe do not keep unparsed lines which solely consist of a source file name\n",
        "Line" : 1128,
        "CharPositionInLine" : 5
      },
      "70" : {
        "Text" : "# only consider existing source files for scanning\n",
        "Line" : 1166,
        "CharPositionInLine" : 1
      },
      "71" : {
        "Text" : "# cl.exe messes with the output streams unless the environment variable VS_UNICODE_OUTPUT is cleared\n",
        "Line" : 1182,
        "CharPositionInLine" : 2
      },
      "72" : {
        "Text" : "# use absolute path as source file location\n",
        "Line" : 1330,
        "CharPositionInLine" : 2
      },
      "73" : {
        "Text" : "# create empty log file\n",
        "Line" : 1371,
        "CharPositionInLine" : 3
      },
      "74" : {
        "Text" : "# Intel compiler requires hdrstop pragma to stop generating PCH file\n",
        "Line" : 1387,
        "CharPositionInLine" : 2
      },
      "75" : {
        "Text" : "# cl.exe options used\n\n# /nologo suppresses display of sign-on banner\n\n# /TC treat all files named on the command line as C source files\n\n# /TP treat all files named on the command line as C++ source files\n\n# /EP preprocess to stdout without #line directives\n\n# /showIncludes list include files\n",
        "Line" : 1421,
        "CharPositionInLine" : 2
      },
      "76" : {
        "Text" : "# append to list\n",
        "Line" : 1430,
        "CharPositionInLine" : 3
      },
      "77" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1433,
        "CharPositionInLine" : 3
      },
      "78" : {
        "Text" : "# GCC options used\n\n# -H print the name of each header file used\n\n# -E invoke preprocessor\n\n# -fdirectives-only do not expand macros, requires GCC >= 4.3\n",
        "Line" : 1437,
        "CharPositionInLine" : 2
      },
      "79" : {
        "Text" : "# append to list\n",
        "Line" : 1442,
        "CharPositionInLine" : 3
      },
      "80" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1448,
        "CharPositionInLine" : 3
      },
      "81" : {
        "Text" : "# Clang options used\n\n# -H print the name of each header file used\n\n# -E invoke preprocessor\n\n# -fno-color-diagnostics don't prints diagnostics in color\n",
        "Line" : 1455,
        "CharPositionInLine" : 2
      },
      "82" : {
        "Text" : "# append to list\n",
        "Line" : 1460,
        "CharPositionInLine" : 3
      },
      "83" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1463,
        "CharPositionInLine" : 3
      },
      "84" : {
        "Text" : "# Windows Intel options used\n\n# /nologo do not display compiler version information\n\n# /QH display the include file order\n\n# /EP preprocess to stdout, omitting #line directives\n\n# /TC process all source or unrecognized file types as C source files\n\n# /TP process all source or unrecognized file types as C++ source files\n",
        "Line" : 1468,
        "CharPositionInLine" : 3
      },
      "85" : {
        "Text" : "# append to list\n",
        "Line" : 1477,
        "CharPositionInLine" : 4
      },
      "86" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1480,
        "CharPositionInLine" : 4
      },
      "87" : {
        "Text" : "# Linux / Mac OS X Intel options used\n\n# -H print the name of each header file used\n\n# -EP preprocess to stdout, omitting #line directives\n\n# -Kc++ process all source or unrecognized file types as C++ source files\n",
        "Line" : 1484,
        "CharPositionInLine" : 3
      },
      "88" : {
        "Text" : "# append to list\n",
        "Line" : 1489,
        "CharPositionInLine" : 4
      },
      "89" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1495,
        "CharPositionInLine" : 4
      },
      "90" : {
        "Text" : "# cl.exe options used\n\n# /Yc creates a precompiled header file\n\n# /Fp specifies precompiled header binary file name\n\n# /FI forces inclusion of file\n\n# /TC treat all files named on the command line as C source files\n\n# /TP treat all files named on the command line as C++ source files\n\n# /Zs syntax check only\n\n# /Zm precompiled header memory allocation scaling factor\n",
        "Line" : 1514,
        "CharPositionInLine" : 2
      },
      "91" : {
        "Text" : "# append to list\n",
        "Line" : 1525,
        "CharPositionInLine" : 3
      },
      "92" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1532,
        "CharPositionInLine" : 3
      },
      "93" : {
        "Text" : "# GCC / Clang options used\n\n# -x specify the source language\n\n# -c compile but do not link\n\n# -o place output in file\n\n# note that we cannot use -w to suppress all warnings upon pre-compiling, because turning off a warning may\n\n# alter compile flags as a side effect (e.g., -Wwrite-string implies -fconst-strings)\n",
        "Line" : 1539,
        "CharPositionInLine" : 2
      },
      "94" : {
        "Text" : "# append to list\n",
        "Line" : 1548,
        "CharPositionInLine" : 3
      },
      "95" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1551,
        "CharPositionInLine" : 3
      },
      "96" : {
        "Text" : "# Windows Intel options used\n\n# /nologo do not display compiler version information\n\n# /Yc create a precompiled header (PCH) file\n\n# /Fp specify a path or file name for precompiled header files\n\n# /FI tells the preprocessor to include a specified file name as the header file\n\n# /TC process all source or unrecognized file types as C source files\n\n# /TP process all source or unrecognized file types as C++ source files\n\n# /Zs syntax check only\n\n# /Wpch-messages enable diagnostics related to pre-compiled headers (requires Intel XE 2013 Update 2)\n",
        "Line" : 1559,
        "CharPositionInLine" : 3
      },
      "97" : {
        "Text" : "# append to list\n",
        "Line" : 1571,
        "CharPositionInLine" : 4
      },
      "98" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1578,
        "CharPositionInLine" : 4
      },
      "99" : {
        "Text" : "# Linux / Mac OS X Intel options used\n\n# -pch-dir location for precompiled header files\n\n# -pch-create name of the precompiled header (PCH) to create\n\n# -Kc++ process all source or unrecognized file types as C++ source files\n\n# -fsyntax-only check only for correct syntax\n\n# -Wpch-messages enable diagnostics related to pre-compiled headers (requires Intel XE 2013 Update 2)\n",
        "Line" : 1585,
        "CharPositionInLine" : 3
      },
      "100" : {
        "Text" : "# append to list\n",
        "Line" : 1596,
        "CharPositionInLine" : 4
      },
      "101" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1605,
        "CharPositionInLine" : 4
      },
      "102" : {
        "Text" : "# cl.exe options used\n\n# /Yu uses a precompiled header file during build\n\n# /Fp specifies precompiled header binary file name\n\n# /FI forces inclusion of file\n\n# /Zm precompiled header memory allocation scaling factor\n",
        "Line" : 1622,
        "CharPositionInLine" : 2
      },
      "103" : {
        "Text" : "# append to list\n",
        "Line" : 1630,
        "CharPositionInLine" : 4
      },
      "104" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1636,
        "CharPositionInLine" : 4
      },
      "105" : {
        "Text" : "# no precompiled header, force inclusion of prefix header\n",
        "Line" : 1643,
        "CharPositionInLine" : 3
      },
      "106" : {
        "Text" : "# append to list\n",
        "Line" : 1645,
        "CharPositionInLine" : 4
      },
      "107" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1648,
        "CharPositionInLine" : 4
      },
      "108" : {
        "Text" : "# GCC options used\n\n# -include process include file as the first line of the primary source file\n\n# -Winvalid-pch warns if precompiled header is found but cannot be used\n\n# note: ccache requires the -include flag to be used in order to process precompiled header correctly\n",
        "Line" : 1653,
        "CharPositionInLine" : 2
      },
      "109" : {
        "Text" : "# append to list\n",
        "Line" : 1658,
        "CharPositionInLine" : 3
      },
      "110" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1661,
        "CharPositionInLine" : 3
      },
      "111" : {
        "Text" : "# Clang options used\n\n# -include process include file as the first line of the primary source file\n\n# -include-pch include precompiled header file\n\n# -Qunused-arguments don't emit warning for unused driver arguments\n\n# note: ccache requires the -include flag to be used in order to process precompiled header correctly\n",
        "Line" : 1665,
        "CharPositionInLine" : 2
      },
      "112" : {
        "Text" : "# append to list\n",
        "Line" : 1671,
        "CharPositionInLine" : 3
      },
      "113" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1674,
        "CharPositionInLine" : 3
      },
      "114" : {
        "Text" : "# Windows Intel options used\n\n# /Yu use a precompiled header (PCH) file\n\n# /Fp specify a path or file name for precompiled header files\n\n# /FI tells the preprocessor to include a specified file name as the header file\n\n# /Wpch-messages enable diagnostics related to pre-compiled headers (requires Intel XE 2013 Update 2)\n",
        "Line" : 1680,
        "CharPositionInLine" : 3
      },
      "115" : {
        "Text" : "# append to list\n",
        "Line" : 1688,
        "CharPositionInLine" : 5
      },
      "116" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1694,
        "CharPositionInLine" : 5
      },
      "117" : {
        "Text" : "# no precompiled header, force inclusion of prefix header\n",
        "Line" : 1701,
        "CharPositionInLine" : 4
      },
      "118" : {
        "Text" : "# append to list\n",
        "Line" : 1703,
        "CharPositionInLine" : 5
      },
      "119" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1706,
        "CharPositionInLine" : 5
      },
      "120" : {
        "Text" : "# Linux / Mac OS X Intel options used\n\n# -pch-dir location for precompiled header files\n\n# -pch-use name of the precompiled header (PCH) to use\n\n# -include process include file as the first line of the primary source file\n\n# -Wpch-messages enable diagnostics related to pre-compiled headers (requires Intel XE 2013 Update 2)\n",
        "Line" : 1711,
        "CharPositionInLine" : 3
      },
      "121" : {
        "Text" : "# append to list\n",
        "Line" : 1720,
        "CharPositionInLine" : 5
      },
      "122" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1726,
        "CharPositionInLine" : 5
      },
      "123" : {
        "Text" : "# no precompiled header, force inclusion of prefix header\n",
        "Line" : 1733,
        "CharPositionInLine" : 4
      },
      "124" : {
        "Text" : "# append to list\n",
        "Line" : 1735,
        "CharPositionInLine" : 5
      },
      "125" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1738,
        "CharPositionInLine" : 5
      },
      "126" : {
        "Text" : "# cl.exe messes with the output streams unless the environment variable VS_UNICODE_OUTPUT is cleared\n",
        "Line" : 1775,
        "CharPositionInLine" : 2
      },
      "127" : {
        "Text" : "# supported since Visual Studio C++ 6.0\n\n# and CMake does not support an earlier version\n",
        "Line" : 1791,
        "CharPositionInLine" : 2
      },
      "128" : {
        "Text" : "# GCC PCH support requires version >= 3.4\n",
        "Line" : 1795,
        "CharPositionInLine" : 2
      },
      "129" : {
        "Text" : "# all Clang versions have PCH support\n",
        "Line" : 1802,
        "CharPositionInLine" : 2
      },
      "130" : {
        "Text" : "# Intel PCH support requires version >= 8.0.0\n",
        "Line" : 1805,
        "CharPositionInLine" : 2
      },
      "131" : {
        "Text" : "# PCH compilation not supported by GCC / Clang for multi-architecture builds (e.g., i386, x86_64)\n",
        "Line" : 1822,
        "CharPositionInLine" : 2
      },
      "132" : {
        "Text" : "# ${CMAKE_CFG_INTDIR} may reference a build-time variable when using a generator which supports configuration types\n",
        "Line" : 1841,
        "CharPositionInLine" : 1
      },
      "133" : {
        "Text" : "# start new unity file segment\n",
        "Line" : 1884,
        "CharPositionInLine" : 4
      },
      "134" : {
        "Text" : "# there is only a single unity file\n",
        "Line" : 1895,
        "CharPositionInLine" : 2
      },
      "135" : {
        "Text" : "# end with final unity file segment\n",
        "Line" : 1898,
        "CharPositionInLine" : 2
      },
      "136" : {
        "Text" : "# For Xcode, we completely hand off the compilation of the prefix header to the IDE\n",
        "Line" : 1969,
        "CharPositionInLine" : 4
      },
      "137" : {
        "Text" : "# MSVC uses the extension .pch added to the prefix header base name\n",
        "Line" : 1974,
        "CharPositionInLine" : 4
      },
      "138" : {
        "Text" : "# Clang looks for a precompiled header corresponding to the prefix header with the extension .pch appended\n",
        "Line" : 1977,
        "CharPositionInLine" : 4
      },
      "139" : {
        "Text" : "# GCC looks for a precompiled header corresponding to the prefix header with the extension .gch appended\n",
        "Line" : 1980,
        "CharPositionInLine" : 4
      },
      "140" : {
        "Text" : "# Intel uses the extension .pchi added to the prefix header base name\n",
        "Line" : 1983,
        "CharPositionInLine" : 4
      },
      "141" : {
        "Text" : "# depend on target's generated source files\n",
        "Line" : 2015,
        "CharPositionInLine" : 1
      },
      "142" : {
        "Text" : "# but omit all generated source files that have the COTIRE_EXCLUDED property set to true\n",
        "Line" : 2019,
        "CharPositionInLine" : 2
      },
      "143" : {
        "Text" : "# and omit all generated source files that have the COTIRE_DEPENDENCY property set to false explicitly\n",
        "Line" : 2024,
        "CharPositionInLine" : 2
      },
      "144" : {
        "Text" : "# depend on target source files marked with custom COTIRE_DEPENDENCY property\n",
        "Line" : 2041,
        "CharPositionInLine" : 1
      },
      "145" : {
        "Text" : "# set up variables to be configured\n",
        "Line" : 2054,
        "CharPositionInLine" : 1
      },
      "146" : {
        "Text" : "# set up COTIRE_TARGET_SOURCES\n",
        "Line" : 2078,
        "CharPositionInLine" : 1
      },
      "147" : {
        "Text" : "# use absolute paths for generated files only, retrieving the LOCATION property is an expensive operation\n",
        "Line" : 2083,
        "CharPositionInLine" : 3
      },
      "148" : {
        "Text" : "# copy variable definitions to cotire target script\n",
        "Line" : 2090,
        "CharPositionInLine" : 1
      },
      "149" : {
        "Text" : "# omit COTIRE_*_INIT variables\n",
        "Line" : 2093,
        "CharPositionInLine" : 1
      },
      "150" : {
        "Text" : "# omit COTIRE_VERBOSE which is passed as a CMake define on command line\n",
        "Line" : 2098,
        "CharPositionInLine" : 1
      },
      "151" : {
        "Text" : "# generate target script file\n",
        "Line" : 2121,
        "CharPositionInLine" : 1
      },
      "152" : {
        "Text" : "# use file(GENERATE ...) to expand generator expressions in the target script at CMake generate-time\n",
        "Line" : 2126,
        "CharPositionInLine" : 2
      },
      "153" : {
        "Text" : "# for Visual Studio and Intel, we attach the precompiled header compilation to the host file\n\n# the remaining files include the precompiled header, see cotire_setup_pch_file_inclusion\n",
        "Line" : 2140,
        "CharPositionInLine" : 2
      },
      "154" : {
        "Text" : "# make object file generated from host file depend on prefix header\n",
        "Line" : 2149,
        "CharPositionInLine" : 3
      },
      "155" : {
        "Text" : "# mark host file as cotired to prevent it from being used in another cotired target\n",
        "Line" : 2151,
        "CharPositionInLine" : 3
      },
      "156" : {
        "Text" : "# for makefile based generator, we add a custom command to precompile the prefix header\n",
        "Line" : 2155,
        "CharPositionInLine" : 2
      },
      "157" : {
        "Text" : "# for Visual Studio and Intel, we include the precompiled header in all but the host file\n\n# the host file does the precompiled header compilation, see cotire_setup_pch_file_compilation\n",
        "Line" : 2178,
        "CharPositionInLine" : 2
      },
      "158" : {
        "Text" : "# mark sources as cotired to prevent them from being used in another cotired target\n",
        "Line" : 2183,
        "CharPositionInLine" : 3
      },
      "159" : {
        "Text" : "# make object files generated from source files depend on precompiled header\n",
        "Line" : 2190,
        "CharPositionInLine" : 3
      },
      "160" : {
        "Text" : "# for makefile based generator, we force the inclusion of the prefix header for a subset\n\n# of the source files, if this is a multi-language target or has excluded files\n",
        "Line" : 2196,
        "CharPositionInLine" : 3
      },
      "161" : {
        "Text" : "# mark sources as cotired to prevent them from being used in another cotired target\n",
        "Line" : 2203,
        "CharPositionInLine" : 3
      },
      "162" : {
        "Text" : "# make object files generated from source files depend on precompiled header\n",
        "Line" : 2206,
        "CharPositionInLine" : 2
      },
      "163" : {
        "Text" : "# force the inclusion of the prefix header for the given source files\n",
        "Line" : 2213,
        "CharPositionInLine" : 1
      },
      "164" : {
        "Text" : "# mark sources as cotired to prevent them from being used in another cotired target\n",
        "Line" : 2220,
        "CharPositionInLine" : 1
      },
      "165" : {
        "Text" : "# make object files generated from source files depend on prefix header\n",
        "Line" : 2222,
        "CharPositionInLine" : 1
      },
      "166" : {
        "Text" : "# for Xcode, we attach a pre-build action to generate the unity sources and prefix headers\n",
        "Line" : 2282,
        "CharPositionInLine" : 2
      },
      "167" : {
        "Text" : "# we also generate a generic, single prefix header which includes all language specific prefix headers\n",
        "Line" : 2293,
        "CharPositionInLine" : 3
      },
      "168" : {
        "Text" : "# because CMake PRE_BUILD command does not support dependencies,\n\n# we check dependencies explicity in cotire script mode when the pre-build action is run\n",
        "Line" : 2304,
        "CharPositionInLine" : 2
      },
      "169" : {
        "Text" : "# make Xcode precompile the generated prefix header with ProcessPCH and ProcessPCH++\n",
        "Line" : 2312,
        "CharPositionInLine" : 2
      },
      "170" : {
        "Text" : "# for makefile based generator, we force inclusion of the prefix header for all target source files\n\n# if this is a single-language target without any excluded files\n",
        "Line" : 2316,
        "CharPositionInLine" : 2
      },
      "171" : {
        "Text" : "# for Visual Studio and Intel, precompiled header inclusion is always done on the source file level\n\n# see cotire_setup_pch_file_inclusion\n",
        "Line" : 2320,
        "CharPositionInLine" : 3
      },
      "172" : {
        "Text" : "# set up compiled unity source dependencies via OBJECT_DEPENDS\n\n# this ensures that missing source files are generated before the unity file is compiled\n",
        "Line" : 2342,
        "CharPositionInLine" : 2
      },
      "173" : {
        "Text" : "# the OBJECT_DEPENDS property requires a list of full paths\n",
        "Line" : 2348,
        "CharPositionInLine" : 3
      },
      "174" : {
        "Text" : "# unity file compilation results in potentially huge object file, thus use /bigobj by default unter MSVC and Windows Intel\n",
        "Line" : 2357,
        "CharPositionInLine" : 3
      },
      "175" : {
        "Text" : "# CMake 3.1.0 supports generator expressions in arguments to DEPENDS\n",
        "Line" : 2365,
        "CharPositionInLine" : 3
      },
      "176" : {
        "Text" : "# prevent pre-processing errors upon generating the prefix header when a target's generated include file does not yet exist\n\n# we do not add a file-level dependency for the target's generated files though, because we only want to depend on their existence\n\n# thus we make the prefix header generation depend on a custom helper target which triggers the generation of the files\n",
        "Line" : 2401,
        "CharPositionInLine" : 1
      },
      "177" : {
        "Text" : "# custom helper target has already been generated while processing a different language\n",
        "Line" : 2406,
        "CharPositionInLine" : 2
      },
      "178" : {
        "Text" : "# GNU and Clang require indirect compilation of the prefix header to make them honor the system_header pragma\n",
        "Line" : 2431,
        "CharPositionInLine" : 2
      },
      "179" : {
        "Text" : "# set up generation of a prefix source file which includes the prefix header\n",
        "Line" : 2440,
        "CharPositionInLine" : 2
      },
      "180" : {
        "Text" : "# GNU and Clang require indirect compilation of the prefix header to make them honor the system_header pragma\n",
        "Line" : 2449,
        "CharPositionInLine" : 2
      },
      "181" : {
        "Text" : "# set up generation of a prefix source file which includes the prefix header\n",
        "Line" : 2456,
        "CharPositionInLine" : 2
      },
      "182" : {
        "Text" : "# for Xcode, we cannot apply the precompiled header to individual sources, only to the whole target\n",
        "Line" : 2629,
        "CharPositionInLine" : 3
      },
      "183" : {
        "Text" : "# for Xcode, we cannot apply the required PRE_BUILD action to generate the prefix header to an OBJECT_LIBRARY target\n",
        "Line" : 2633,
        "CharPositionInLine" : 3
      },
      "184" : {
        "Text" : "# cache message to avoid redundant messages on re-configure\n",
        "Line" : 2647,
        "CharPositionInLine" : 3
      },
      "185" : {
        "Text" : "# use all available cores\n",
        "Line" : 2667,
        "CharPositionInLine" : 3
      },
      "186" : {
        "Text" : "# check for user provided unity source file list\n",
        "Line" : 2692,
        "CharPositionInLine" : 1
      },
      "187" : {
        "Text" : "# set up unity files for parallel compilation\n",
        "Line" : 2699,
        "CharPositionInLine" : 1
      },
      "188" : {
        "Text" : "# set up single unity file for prefix header generation\n",
        "Line" : 2709,
        "CharPositionInLine" : 1
      },
      "189" : {
        "Text" : "# set up prefix header\n",
        "Line" : 2714,
        "CharPositionInLine" : 1
      },
      "190" : {
        "Text" : "# check for user provided prefix header files\n",
        "Line" : 2716,
        "CharPositionInLine" : 2
      },
      "191" : {
        "Text" : "# check if selected language has enough sources at all\n",
        "Line" : 2725,
        "CharPositionInLine" : 2
      },
      "192" : {
        "Text" : "# first file in _sourceFiles is passed as the host file\n",
        "Line" : 2735,
        "CharPositionInLine" : 4
      },
      "193" : {
        "Text" : "# user provided prefix header must be included unconditionally\n",
        "Line" : 2742,
        "CharPositionInLine" : 3
      },
      "194" : {
        "Text" : "# mark target as cotired for language\n",
        "Line" : 2746,
        "CharPositionInLine" : 1
      },
      "195" : {
        "Text" : "# for makefile based generators, we add a custom target to trigger the generation of the cotire related files\n",
        "Line" : 2774,
        "CharPositionInLine" : 2
      },
      "196" : {
        "Text" : "# Visual Studio and Intel only create precompiled header as a side effect\n",
        "Line" : 2779,
        "CharPositionInLine" : 4
      },
      "197" : {
        "Text" : "# for other generators, we add the \"clean all\" target to clean up the precompiled header\n",
        "Line" : 2794,
        "CharPositionInLine" : 2
      },
      "198" : {
        "Text" : "# remove source files that are included in the unity source\n",
        "Line" : 2805,
        "CharPositionInLine" : 3
      },
      "199" : {
        "Text" : "# add unity source files instead\n",
        "Line" : 2813,
        "CharPositionInLine" : 3
      },
      "200" : {
        "Text" : "# user provided prefix header must be included unconditionally by unity sources\n",
        "Line" : 2827,
        "CharPositionInLine" : 4
      },
      "201" : {
        "Text" : "# determine unity target sub type\n",
        "Line" : 2839,
        "CharPositionInLine" : 1
      },
      "202" : {
        "Text" : "# determine unity target sources\n",
        "Line" : 2849,
        "CharPositionInLine" : 1
      },
      "203" : {
        "Text" : "# handle automatic Qt processing\n",
        "Line" : 2852,
        "CharPositionInLine" : 1
      },
      "204" : {
        "Text" : "# if the original target sources are subject to CMake's automatic Qt processing,\n\n# also include implicitly generated <targetname>_automoc.cpp file\n",
        "Line" : 2857,
        "CharPositionInLine" : 2
      },
      "205" : {
        "Text" : "# prevent AUTOMOC, AUTOUIC and AUTORCC properties from being set when the unity target is created\n",
        "Line" : 2862,
        "CharPositionInLine" : 1
      },
      "206" : {
        "Text" : "# generate unity target\n",
        "Line" : 2869,
        "CharPositionInLine" : 1
      },
      "207" : {
        "Text" : "# depend on the original target's implicity generated <targetname>_automoc target\n",
        "Line" : 2876,
        "CharPositionInLine" : 2
      },
      "208" : {
        "Text" : "# copy output location properties\n",
        "Line" : 2879,
        "CharPositionInLine" : 1
      },
      "209" : {
        "Text" : "# append relative COTIRE_UNITY_OUTPUT_DIRECTORY to target's actual output directory\n",
        "Line" : 2889,
        "CharPositionInLine" : 3
      },
      "210" : {
        "Text" : "# copy output name\n",
        "Line" : 2914,
        "CharPositionInLine" : 1
      },
      "211" : {
        "Text" : "# copy compile stuff\n",
        "Line" : 2922,
        "CharPositionInLine" : 1
      },
      "212" : {
        "Text" : "# copy compile features\n",
        "Line" : 2933,
        "CharPositionInLine" : 1
      },
      "213" : {
        "Text" : "# copy interface stuff\n",
        "Line" : 2938,
        "CharPositionInLine" : 1
      },
      "214" : {
        "Text" : "# copy link stuff\n",
        "Line" : 2946,
        "CharPositionInLine" : 1
      },
      "215" : {
        "Text" : "# copy cmake stuff\n",
        "Line" : 2956,
        "CharPositionInLine" : 1
      },
      "216" : {
        "Text" : "# copy Apple platform specific stuff\n",
        "Line" : 2959,
        "CharPositionInLine" : 1
      },
      "217" : {
        "Text" : "# copy Windows platform specific stuff\n",
        "Line" : 2964,
        "CharPositionInLine" : 1
      },
      "218" : {
        "Text" : "# copy Android platform specific stuff\n",
        "Line" : 2978,
        "CharPositionInLine" : 1
      },
      "219" : {
        "Text" : "# use output name from original target\n",
        "Line" : 2986,
        "CharPositionInLine" : 1
      },
      "220" : {
        "Text" : "# use export symbol from original target\n",
        "Line" : 2991,
        "CharPositionInLine" : 1
      },
      "221" : {
        "Text" : "# trivial checks\n",
        "Line" : 3015,
        "CharPositionInLine" : 1
      },
      "222" : {
        "Text" : "# resolve alias\n",
        "Line" : 3021,
        "CharPositionInLine" : 1
      },
      "223" : {
        "Text" : "# check if target needs to be cotired for build type\n\n# when using configuration types, the test is performed at build time\n",
        "Line" : 3029,
        "CharPositionInLine" : 1
      },
      "224" : {
        "Text" : "# when not using configuration types, immediately create cotire intermediate dir\n",
        "Line" : 3045,
        "CharPositionInLine" : 1
      },
      "225" : {
        "Text" : "# choose languages that apply to the target\n",
        "Line" : 3050,
        "CharPositionInLine" : 1
      },
      "226" : {
        "Text" : "# use target's corresponding unity target, if available\n",
        "Line" : 3084,
        "CharPositionInLine" : 3
      },
      "227" : {
        "Text" : "# filter files in intermediate directory\n",
        "Line" : 3133,
        "CharPositionInLine" : 1
      },
      "228" : {
        "Text" : "# cotire is being run in script mode\n\n# locate -P on command args\n",
        "Line" : 3220,
        "CharPositionInLine" : 1
      },
      "229" : {
        "Text" : "# include target script if available\n",
        "Line" : 3232,
        "CharPositionInLine" : 1
      },
      "230" : {
        "Text" : "# the included target scripts sets up additional variables relating to the target (e.g., COTIRE_TARGET_SOURCES)\n",
        "Line" : 3234,
        "CharPositionInLine" : 2
      },
      "231" : {
        "Text" : "# check if target has been cotired for actual build type COTIRE_BUILD_TYPE\n",
        "Line" : 3250,
        "CharPositionInLine" : 1
      },
      "232" : {
        "Text" : "# executing pre-build action under Xcode, check dependency on target script\n",
        "Line" : 3270,
        "CharPositionInLine" : 3
      },
      "233" : {
        "Text" : "# executing custom command, no need to re-check for dependencies\n",
        "Line" : 3273,
        "CharPositionInLine" : 3
      },
      "234" : {
        "Text" : "# executing pre-build action under Xcode, check dependency on unity file and prefix dependencies\n",
        "Line" : 3292,
        "CharPositionInLine" : 3
      },
      "235" : {
        "Text" : "# executing custom command, no need to re-check for dependencies\n",
        "Line" : 3295,
        "CharPositionInLine" : 3
      },
      "236" : {
        "Text" : "# executing pre-build action under Xcode, check dependency on files to be combined\n",
        "Line" : 3361,
        "CharPositionInLine" : 3
      },
      "237" : {
        "Text" : "# executing custom command, no need to re-check for dependencies\n",
        "Line" : 3364,
        "CharPositionInLine" : 3
      },
      "238" : {
        "Text" : "# cotire is being run in include mode\n\n# set up all variable and property definitions\n",
        "Line" : 3387,
        "CharPositionInLine" : 1
      },
      "239" : {
        "Text" : "# enable parallelization for generators that run multiple jobs by default\n",
        "Line" : 3424,
        "CharPositionInLine" : 3
      },
      "240" : {
        "Text" : "# MSVC default PCH memory scaling factor of 100 percent (75 MB) is too small for template heavy C++ code\n\n# use a bigger default factor of 170 percent (128 MB)\n",
        "Line" : 3458,
        "CharPositionInLine" : 2
      },
      "241" : {
        "Text" : "# generated Ninja build files do not work if the unity target produces the same output file as the cotired target\n",
        "Line" : 3472,
        "CharPositionInLine" : 3
      },
      "242" : {
        "Text" : "# define cotire cache variables\n",
        "Line" : 3479,
        "CharPositionInLine" : 1
      },
      "243" : {
        "Text" : "# define cotire directory properties\n",
        "Line" : 3532,
        "CharPositionInLine" : 1
      },
      "244" : {
        "Text" : "# define cotire target properties\n",
        "Line" : 3604,
        "CharPositionInLine" : 1
      },
      "245" : {
        "Text" : "# define cotire source properties\n",
        "Line" : 3768,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 246
    },
    "cmake/options.cmake" : {
      "ObjectId" : "76576a64db255a6afd5ede5db1906a9843a668eb",
      "LastModified" : "2018-01-03T23:17:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO: options that should be checked/created:\n\n#option(CLI                  \"With CLI\"                              ON)\n\n#option(RA                   \"With Remote Access\"                    OFF)\n\n#option(SQL                  \"Copy SQL files\"                        OFF)\n\n#option(TOOLS                \"Build tools\"                           OFF)\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/platform/unix/settings.cmake" : {
      "ObjectId" : "695ac76c6a2ed47674d0d471f777ee96418fbb30",
      "LastModified" : "2018-01-02T23:21:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# configure uninstaller\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# create uninstaller target (allows for using \"make uninstall\")\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/platform/win/settings.cmake" : {
      "ObjectId" : "88af32420973f7bfdd1bab5bbdfef233daec14b7",
      "LastModified" : "2018-01-03T23:17:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# On windows we generally want our binaries to be static\n\n# Override default linker flags and we are good to go\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# remove -Wl,-Bdynamic\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# remove -fPIC\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# remove -rdynamic\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "cmake/showoptions.cmake" : {
      "ObjectId" : "670c8e44f4288919d33dc5ac528d92163d434673",
      "LastModified" : "2018-01-03T23:17:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# output generic information about the core\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Show infomation about the options selected during configuration\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# if(CLI)\n\n#   message(STATUS \"Build with CLI        : Yes (default)\")\n\n#   add_definitions(-DENABLE_CLI)\n\n# else()\n\n#   message(STATUS \"Build with CLI        : No\")\n\n# endif()\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# if(RA)\n\n#   message(STATUS \"* Build with RA       : Yes\")\n\n#   add_definitions(-DENABLE_RA)\n\n# else(RA)\n\n#   message(STATUS \"* Build with RA       : No  (default)\")\n\n# endif(RA)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# if(SQL)\n\n#   message(STATUS \"Install SQL-files     : Yes\")\n\n# else()\n\n#   message(STATUS \"Install SQL-files     : No  (default)\")\n\n# endif()\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# if(TOOLS)\n\n#   message(STATUS \"Build map/vmap tools  : Yes\")\n\n# else()\n\n#   message(STATUS \"Build map/vmap tools  : No  (default)\")\n\n# endif()\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "contrib/extractor/CMakeLists.txt" : {
      "ObjectId" : "f7ab8bab197395b71e95dca626bc226fb07f48f5",
      "LastModified" : "2018-01-06T19:36:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is part of the CMaNGOS Project. See AUTHORS file for Copyright information\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 2 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, write to the Free Software\n\n# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define OutDir to source/bin/(platform)_(configuaration) folder.\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "contrib/extractor/loadlib/CMakeLists.txt" : {
      "ObjectId" : "ca8ab8c1a4e6d9fea3abeb3e2f4c6b1ebed88d9c",
      "LastModified" : "2018-01-03T23:17:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is part of the CMaNGOS Project. See AUTHORS file for Copyright information\n\n#\n\n# This file is free software; as a special exception the author gives\n\n# unlimited permission to copy and/or distribute it, with or without\n\n# modifications, as long as this notice is preserved.\n\n#\n\n# This program is distributed in the hope that it will be useful, but\n\n# WITHOUT ANY WARRANTY, to the extent permitted by law; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# disable warnings for dependencies\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# link loadlib with zlib and StormLib\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "contrib/git_id/CMakeLists.txt" : {
      "ObjectId" : "f0bd03d598f5e30ef44d9357ca6eeb73c42cb924",
      "LastModified" : "2018-01-02T23:21:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/mmap/CMakeLists.txt" : {
      "ObjectId" : "a59bf442e8cde0c9ab41fd4ce480b1c0bfdd5096",
      "LastModified" : "2018-01-06T19:36:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is part of the CMaNGOS Project. See AUTHORS file for Copyright information\n\n#\n\n# This file is free software; as a special exception the author gives\n\n# unlimited permission to copy and/or distribute it, with or without\n\n# modifications, as long as this notice is preserved.\n\n#\n\n# This program is distributed in the hope that it will be useful, but\n\n# WITHOUT ANY WARRANTY, to the extent permitted by law; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# disable warnings for dependencies\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO: Do we still need that vmaplib?\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Define OutDir to source/bin/(platform)_(configuaration) folder.\n",
        "Line" : 73,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Add script file to dev folder\n",
        "Line" : 81,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "contrib/mysql_to_pgsql/CMakeLists.txt" : {
      "ObjectId" : "490a023e4ec4581b09db679dcd7031439bb5156c",
      "LastModified" : "2018-01-02T23:21:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/mysql_to_pgsql/cmake/FindMySQL.cmake" : {
      "ObjectId" : "98b2f8a57622b152c7e67ec56427a52ff852e5af",
      "LastModified" : "2018-01-02T23:21:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find mysqlclient\n\n# Find the native MySQL includes and library\n\n#\n\n#  MYSQL_INCLUDE_DIR - where to find mysql.h, etc.\n\n#  MYSQL_LIBRARIES   - List of libraries when using MySQL.\n\n#  MYSQL_FOUND       - True if MySQL found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "contrib/mysql_to_pgsql/cmake/FindPostgreSQL.cmake" : {
      "ObjectId" : "2b37d57b4c4b5ed15c58b07b7407f4409d3ded3c",
      "LastModified" : "2018-01-02T23:21:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find libpq\n\n# Find the native PostgreSQL includes and library\n\n#\n\n#  PGSQL_INCLUDE_DIR - where to find libpq-fe.h, etc.\n\n#  PGSQL_LIBRARIES   - List of libraries when using PGSQL.\n\n#  PGSQL_FOUND       - True if PGSQL found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "contrib/vmap_assembler/CMakeLists.txt" : {
      "ObjectId" : "0bd98f4f3af2064675b0c78f28d9fc97d5a7bd9e",
      "LastModified" : "2018-01-06T19:36:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is part of the CMaNGOS Project. See AUTHORS file for Copyright information\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, write to the Free Software\n\n# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# uncomment next line to disable debug mode\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Define OutDir to source/bin/(platform)_(configuaration) folder.\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# add_executable(vmap_test coordinate_test.cpp)\n\n# target_link_libraries(vmap_test vmap)\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "contrib/vmap_extractor/CMakeLists.txt" : {
      "ObjectId" : "7fbfc87104b21d1acbfeacc6bfe4bf116a55d69e",
      "LastModified" : "2018-01-06T19:36:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is part of the CMaNGOS Project. See AUTHORS file for Copyright information\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 2 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, write to the Free Software\n\n# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# uncomment next line to disable debug mode\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# build setup currently only supports libmpq 0.4.x\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "contrib/vmap_extractor/vmapextract/CMakeLists.txt" : {
      "ObjectId" : "839159116166a67621b3c10f24e89a09335f5656",
      "LastModified" : "2018-01-06T19:36:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is part of the CMaNGOS Project. See AUTHORS file for Copyright information\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 2 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, write to the Free Software\n\n# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define OutDir to source/bin/(platform)_(configuaration) folder.\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Add script file to dev folder\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "dep/CMakeLists.txt" : {
      "ObjectId" : "94bc03ff76fdd26a8aaa48a6707ae091cf6f5d15",
      "LastModified" : "2018-01-06T19:36:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# This file is part of the CMaNGOS Project. See AUTHORS file for Copyright information\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 2 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, write to the Free Software\n\n# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# disable warnings for dependencies\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "dep/recastnavigation/CMakeLists.txt" : {
      "ObjectId" : "c7cff6a9bcb55ef80161b98b096acc2b6277ff34",
      "LastModified" : "2018-01-06T19:36:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# This file is part of the CMaNGOS Project. See AUTHORS file for Copyright information\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 2 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, write to the Free Software\n\n# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "dep/recastnavigation/Detour/CMakeLists.txt" : {
      "ObjectId" : "3c836ec20df46766b957fe7b61fffa1a51689d99",
      "LastModified" : "2018-01-02T23:21:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# This file is part of the CMaNGOS Project. See AUTHORS file for Copyright information\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 2 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, write to the Free Software\n\n# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "dep/recastnavigation/Detour/Source/CMakeLists.txt" : {
      "ObjectId" : "32dffb6f94e48fd00a1b65103c1f80fb71535029",
      "LastModified" : "2018-01-02T23:21:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# This file is part of the CMaNGOS Project. See AUTHORS file for Copyright information\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 2 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, write to the Free Software\n\n# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "dep/recastnavigation/Recast/CMakeLists.txt" : {
      "ObjectId" : "3c836ec20df46766b957fe7b61fffa1a51689d99",
      "LastModified" : "2018-01-02T23:21:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# This file is part of the CMaNGOS Project. See AUTHORS file for Copyright information\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 2 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, write to the Free Software\n\n# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "dep/recastnavigation/Recast/Source/CMakeLists.txt" : {
      "ObjectId" : "7b4b1d5c5818b48020e2adc81ce9bc43ed697b83",
      "LastModified" : "2018-01-02T23:21:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# This file is part of the CMaNGOS Project. See AUTHORS file for Copyright information\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 2 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, write to the Free Software\n\n# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "dep/src/CMakeLists.txt" : {
      "ObjectId" : "75d5d20782a09923a9aaf0b6f9987d90a03d3cd2",
      "LastModified" : "2018-01-06T19:36:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# This file is part of the CMaNGOS Project. See AUTHORS file for Copyright information\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 2 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, write to the Free Software\n\n# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "dep/src/StormLib/CMakeLists.txt" : {
      "ObjectId" : "6404fb4dad3f257e0f50d719c22079510f1e7b51",
      "LastModified" : "2018-01-06T19:36:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set(TEST_SRC_FILES\n\n#            test/Test.cpp\n\n# )\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# option(WITH_TEST \"Compile Test application\" OFF)\n\n# if(WITH_TEST)\n\n#      add_executable(storm_test ${TEST_SRC_FILES})\n\n#      target_link_libraries(storm_test storm)\n\n# endif()\n",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# option(WITH_STATIC \"Compile static linked library\" OFF)\n\n# if(WITH_STATIC)\n\n#     add_library(StormLib_static STATIC ${SRC_FILES} ${SRC_ADDITIONAL_FILES})\n\n#     target_link_libraries(StormLib_static ${LINK_LIBS})\n\n#     set_target_properties(StormLib_static PROPERTIES OUTPUT_NAME StormLib)\n\n# endif()\n",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# On Win32, build StormLib.dll since we don't want to clash with Storm.dll\n",
        "Line" : 298,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "dep/src/bzip2/CMakeLists.txt" : {
      "ObjectId" : "a385ee17140ab46abfdc8bfa64d596336147a61d",
      "LastModified" : "2018-01-06T19:36:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# This file is part of the CMaNGOS Project. See AUTHORS file for Copyright information\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 2 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, write to the Free Software\n\n# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "dep/src/g3dlite/CMakeLists.txt" : {
      "ObjectId" : "f224bc60143b18842e67b233067f0600f12936e8",
      "LastModified" : "2018-01-06T19:36:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# This file is part of the CMaNGOS Project. See AUTHORS file for Copyright information\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 2 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, write to the Free Software\n\n# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#AnyVal.cpp\n\n#AreaMemoryManager.cpp\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#Box2D.cpp\n\n#BumpMapPreprocess.cpp\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#Color1.cpp\n\n#Color1uint8.cpp\n\n#Color3.cpp\n\n#Color3uint8.cpp\n\n#Color4.cpp\n\n#Color4uint8.cpp\n\n#Cone.cpp\n\n#ConvexPolyhedron.cpp\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#Crypto_md5.cpp\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#GCamera.cpp\n\n#GImage.cpp\n\n#GImage_bayer.cpp\n\n#GImage_bmp.cpp\n\n#GImage_jpeg.cpp\n\n#GImage_png.cpp\n\n#GImage_ppm.cpp\n\n#GImage_tga.cpp\n\n#GLight.cpp\n\n#GThread.cpp\n\n#GUniqueID.cpp\n\n#Image1.cpp\n\n#Image1uint8.cpp\n\n#Image3.cpp\n\n#Image3uint8.cpp\n\n#Image4.cpp\n\n#Image4uint8.cpp\n\n#ImageFormat.cpp\n\n#ImageFormat_convert.cpp\n\n#Intersect.cpp\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#Matrix.cpp\n",
        "Line" : 69,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#MeshAlg.cpp\n\n#MeshAlgAdjacency.cpp\n\n#MeshAlgWeld.cpp\n\n#MeshBuilder.cpp\n\n#NetAddress.cpp\n\n#NetworkDevice.cpp\n",
        "Line" : 73,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#PhysicsFrameSpline.cpp\n",
        "Line" : 80,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#PrecomputedRandom.cpp\n",
        "Line" : 82,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "#Rect2D.cpp\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "#SplineBase.cpp\n\n#Stopwatch.cpp\n",
        "Line" : 90,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "#ThreadSet.cpp\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "#Vector2int16.cpp\n",
        "Line" : 99,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "#Vector3int16.cpp\n\n#Vector3int32.cpp\n",
        "Line" : 101,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "#Vector4int8.cpp\n\n#Welder.cpp\n\n#WinMain.cpp\n\n#XML.cpp\n\n#constants.cpp\n",
        "Line" : 104,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "#filter.cpp\n",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "#license.cpp\n",
        "Line" : 115,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 18
    },
    "dep/src/gsoap/CMakeLists.txt" : {
      "ObjectId" : "72bbc16468bd4f6c1e5b53508fbf0cae97b42e13",
      "LastModified" : "2018-01-06T19:36:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# This file is part of the CMaNGOS Project. See AUTHORS file for Copyright information\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 2 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, write to the Free Software\n\n# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "dep/src/utf8cpp/CMakeLists.txt" : {
      "ObjectId" : "996098b4bbb605dfd1d93375c989a28171459757",
      "LastModified" : "2018-01-06T19:36:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# This file is part of the CMaNGOS Project. See AUTHORS file for Copyright information\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 2 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, write to the Free Software\n\n# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# header-only library\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "dep/src/zlib/CMakeLists.txt" : {
      "ObjectId" : "ed6487106042c3cb4e81df10d8c649a95aaa401c",
      "LastModified" : "2018-01-06T19:36:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# This file is part of the CMaNGOS Project. See AUTHORS file for Copyright information\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 2 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, write to the Free Software\n\n# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "806276f4b16ef5e997d94e04ff15bdbb323256be",
      "LastModified" : "2018-01-06T19:36:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# This file is part of the CMaNGOS Project. See AUTHORS file for Copyright information\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 2 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, write to the Free Software\n\n# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/framework/CMakeLists.txt" : {
      "ObjectId" : "4e0f44091d93c61470a9945005076e9896a09537",
      "LastModified" : "2018-01-06T19:36:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# This file is part of the CMaNGOS Project. See AUTHORS file for Copyright information\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 2 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, write to the Free Software\n\n# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/game/CMakeLists.txt" : {
      "ObjectId" : "7f6c85c874ffbaf86767b78aa014c7ec049ccb2c",
      "LastModified" : "2018-01-06T19:36:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# This file is part of the CMaNGOS Project. See AUTHORS file for Copyright information\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 2 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, write to the Free Software\n\n# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# include additionals headers\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find all the input files\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# exclude script folder for faster build time (used for dev mode)\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# exclude Playerbot folder\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Create visual studio groups using folder structure\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Both systems don't have libdl and don't need them\n",
        "Line" : 88,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Define BUILD_SCRIPTDEV if need\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Define BUILD_PLAYERBOT if need\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Generate precompiled header\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#set_property(TARGET ${LIBRARY_NAME} PROPERTY COMPILE_FLAGS \" /Yu\\\"${PrecompiledHeader}\\\" /FI\\\"${PrecompiledHeader}\\\" /Fp\\\"${PrecompiledBinary}\\\"\")\n\n#set_property(SOURCE ${PrecompiledSource} PROPERTY COMPILE_FLAGS \"/Yc\\\"${PrecompiledHeader}\\\" /Fp\\\"${PrecompiledBinary}\\\"\")\n",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# TODO: Resolve issues with order of includes before enabling Cotire for MinGW builds\n",
        "Line" : 117,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 12
    },
    "src/mangosd/CMakeLists.txt" : {
      "ObjectId" : "56c3b854854a77425085ea369b11b40d222aadfc",
      "LastModified" : "2018-01-06T19:36:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# This file is part of the CMaNGOS Project. See AUTHORS file for Copyright information\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 2 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, write to the Free Software\n\n# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add resource file to windows build\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Define OutDir to source/bin/(platform)_(configuaration) folder.\n",
        "Line" : 73,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Add provided dependency lib to dev folder\n",
        "Line" : 79,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Add conf file to dev folder\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "src/realmd/CMakeLists.txt" : {
      "ObjectId" : "0f07324306bd9fa169c70444d17b02d9afe59978",
      "LastModified" : "2018-01-06T19:36:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# This file is part of the CMaNGOS Project. See AUTHORS file for Copyright information\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 2 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, write to the Free Software\n\n# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add resource file to windows build\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Define OutDir to source/bin/(platform)_(configuaration) folder.\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Add provided dependency lib to dev folder\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Add conf file to dev folder\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "src/shared/CMakeLists.txt" : {
      "ObjectId" : "20857a738d13ea13561e3e352295224bafc7dc5d",
      "LastModified" : "2018-01-06T19:36:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# This file is part of the CMaNGOS Project. See AUTHORS file for Copyright information\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 2 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, write to the Free Software\n\n# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# OS specific files\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# include external dependencies without warnings\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Mark the revision header as being generated.\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    }
  },
  "FileTypes" : {
    "CMAKE" : 46
  },
  "ElapsedTime" : 10235
}