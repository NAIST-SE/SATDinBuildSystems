{
  "Repository" : "15239342",
  "Revision" : "HEAD",
  "ObjectId" : "54a6976b58276e67b35b171d48807f90e1e7bb77",
  "CommitTime" : "2019-02-20T01:31:49Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "ff005f02fb3b2a9690cbcf6830d66b19fa46668b",
      "LastModified" : "2019-01-26T20:52:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#find_package ( FFMPEG )\n\n#find_package ( SDLKitchensink )\n\n#set (SDL_kitchensink_static \"Statically link SDLKitchensink\" ON)\n\n#set (SDL_kitchensink \"Do not Statically link SDLKitchensink\" OFF)\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Avoid installing zlib alongside 3dge\n",
        "Line" : 42,
        "CharPositionInLine" : 30
      },
      "2" : {
        "Text" : "# Recursive function to place PK3 archive source files into a hierarchy of source file in the IDE\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Assort source files into folders in the IDE\n",
        "Line" : 64,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# Create list of all files in this folder\n",
        "Line" : 65,
        "CharPositionInLine" : 34
      },
      "5" : {
        "Text" : "# If there are subfolders, recurse into them\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Exclude folder from list of source files\n",
        "Line" : 70,
        "CharPositionInLine" : 3
      },
      "7" : {
        "Text" : "# Recurse deeper into the filesystem folder tree\n",
        "Line" : 72,
        "CharPositionInLine" : 3
      },
      "8" : {
        "Text" : "# Assign IDE group for current top-level source files\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Simplify pk3 building, add_pk3(filename srcdirectory)\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# message(STATUS \"Creating build rule for PK3 ${PK3_NAME} ${PK3_DIR}\")\n\n# Generate target name. Just use \"pk3\" for main pk3 target.\n",
        "Line" : 82,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# Create a list of source files for this PK3, for use in the IDE\n\n# Phase 1: Create a list of all source files for this PK3 archive, except\n\n#  for a couple of strife image file names that confuse CMake.\n",
        "Line" : 93,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# Exclude from the source list some gzdoom .png files with brackets in the\n\n# file names here, because they confuse CMake.\n\n# This only affects the list of source files shown in the IDE.\n\n# It does not actually remove the files from the PK3 archive.\n\n# First replace that toxic bracket character with something we can handle\n",
        "Line" : 97,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# All source files at all levels\n",
        "Line" : 104,
        "CharPositionInLine" : 30
      },
      "14" : {
        "Text" : "# Exclude those quarantined source file source file names that once had a bracket\n",
        "Line" : 105,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# message(STATUS \"Ignoring PK3 file name containing brackets \"${PK3_SRC})\n",
        "Line" : 107,
        "CharPositionInLine" : 3
      },
      "16" : {
        "Text" : "# Phase 2: Create the PK3 build rule, including the source file list for the IDE\n\n# Touch the zipdir executable here so that the pk3s are forced to\n\n# rebuild each time since their dependency has \"changed.\"\n",
        "Line" : 111,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "# Phase 3: Assign source files to a nice folder structure in the IDE\n",
        "Line" : 118,
        "CharPositionInLine" : 1
      },
      "18" : {
        "Text" : "# Phase 4: Add the resulting PK3 to the install target.\n",
        "Line" : 120,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "# MSVC\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#\t-DUSE_FFMPEG\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# For the Hypertension team, we must continue using SSE2 and _not_ AVX, since not everyone has an AVX-compatible processor.\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# For the Daikatana team, we must continue using SSE2 and _not_ AVX, since not everyone has an AVX-compatible processor.\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Removed HAVE_STDINT_H on Visual Studio/Win32 machines (Caused problems, so I Shoved it into UNIX define)\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Module Paths\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#message(${CMAKE_MODULE_PATH})\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Gitinfo Puller thingy\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "################################################################################\n\n######################### Find Needed Libs #####################################\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# See /VSLibs/lib_versions.txt [libs have been compiled with MSVC 2017!]\n\n# CA: 11/30/18 - For MSVC, libs are no longer required to be downloaded seperately, they now exist in /libs/msvc/\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#set (kitchensink_INCLUDE_DIR \"${CMAKE_CURRENT_SOURCE_DIR}/libs/msvc/kitchensink/include\")\n\n#set (kitchensink_LIBRARY \"${CMAKE_CURRENT_SOURCE_DIR}/libs/msvc/kitchensink/lib/SDL_kitchensink_static.lib\")\n",
        "Line" : 243,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "#set(SDL2_INCLUDE_DIR /usr/include/SDL2)\n\n#set(SDL2_LIBRARIES /usr/lib/libSDL2.so)\n",
        "Line" : 270,
        "CharPositionInLine" : 1
      },
      "31" : {
        "Text" : "#INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/src ${SDL2_INCLUDE_DIRS})\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "## SDL2\n\n#set(SDL2_PATH \"${CMAKE_CURRENT_SOURCE_DIR/SDL2-2.0.9}\" CACHE PATH “The location to search for SDL2”)\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "## FIND_PACKAGE (SDL_net REQUIRED)\n",
        "Line" : 282,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "## FIND FFMPEG AND KITCHENSINK INCLUDES\n\n##INCLUDE_DIRECTORIES (${FFMPEG_INCLUDE_DIR})\n\n##INCLUDE_DIRECTORIES (${SDLKitchensink_INCLUDE_DIRS})\n",
        "Line" : 285,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# OpenGL\n",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# libvorbis/libogg\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# zlib\n\n#find_package(ZLIB REQUIRED)\n",
        "Line" : 298,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# EDGE\n",
        "Line" : 302,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Note we only support file formats from physFS in EDGE that will be used!\n\n#- all others were stripped! \n",
        "Line" : 522,
        "CharPositionInLine" : 1
      },
      "40" : {
        "Text" : "#// !!!\n",
        "Line" : 527,
        "CharPositionInLine" : 36
      },
      "41" : {
        "Text" : "#\tsrc/system/unx/unx_main.cc\n",
        "Line" : 576,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "#\t${SDLKitchensink_STATIC_LIBRARY}\n",
        "Line" : 634,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "## EOF\n",
        "Line" : 665,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 44
    },
    "build_guide/CMakeLists.txt" : {
      "ObjectId" : "ddfe6fa85b46ca3a82f055003a02e3381216a90e",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Copyright (c) 1997-2018 The EDGE Team (see AUTHORS.md)\n\n## Copyright (C) 2011-2018 Isotope SoftWorks\n\n##\n\n## This software is free software; you can redistribute it and/or\n\n## modify it under the terms of the GNU General Public License as published by\n\n## the Free Software Foundation; either version 2 of the License, or\n\n## (at your option) any later version.\n\n##\n\n## This software is distributed in the hope that it will be useful,\n\n## but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n## GNU General Public License for more details.\n\n##\n\n## You should have received a copy of the GNU General Public License\n\n## along with this program; if not, write to the Free Software\n\n## Foundation, Inc., 51 Franklin St, Fifth Floor,\n\n## Boston, MA  02110-1301  USA\n\n##\n\n################################################################################\n\n######################### CMake Configuration ##################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#IF (COMMAND cmake_policy)\n\n#        CMAKE_POLICY (SET CMP0003 NEW)\n\n#ENDIF (COMMAND cmake_policy)\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Supported Build Types are:\n\n#    * Debug (CMAKE_C_FLAGS_DEBUG)\n\n#    * Release (CMAKE_C_FLAGS_RELEASE)\n\n#    * RelWithDebInfo (CMAKE_C_FLAGS_RELWITHDEBINFO)\n\n#    * MinSizeRel (CMAKE_C_FLAGS_MINSIZEREL)\n\n# If no build type requested, default to Release\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Default to not building shared libraries.\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Default to not installing any sub-projects.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#set( SKIP_INSTALL_ALL TRUE ) # Avoid installing zlib alongside 3dge\n",
        "Line" : 90,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# Recursive function to place PK3 archive source files into a hierarchy of source file in the IDE\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Assort source files into folders in the IDE\n",
        "Line" : 111,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# Create list of all files in this folder\n",
        "Line" : 112,
        "CharPositionInLine" : 34
      },
      "9" : {
        "Text" : "# If there are subfolders, recurse into them\n",
        "Line" : 114,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Exclude folder from list of source files\n",
        "Line" : 117,
        "CharPositionInLine" : 3
      },
      "11" : {
        "Text" : "# Recurse deeper into the filesystem folder tree\n",
        "Line" : 119,
        "CharPositionInLine" : 3
      },
      "12" : {
        "Text" : "# Assign IDE group for current top-level source files\n",
        "Line" : 122,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Simplify pk3 building, add_pk3(filename srcdirectory)\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# message(STATUS \"Creating build rule for PK3 ${PK3_NAME} ${PK3_DIR}\")\n\n# Generate target name. Just use \"pk3\" for main pk3 target.\n",
        "Line" : 129,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# Create a list of source files for this PK3, for use in the IDE\n\n# Phase 1: Create a list of all source files for this PK3 archive, except\n\n#  for a couple of strife image file names that confuse CMake.\n",
        "Line" : 140,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "# Exclude from the source list some gzdoom .png files with brackets in the\n\n# file names here, because they confuse CMake.\n\n# This only affects the list of source files shown in the IDE.\n\n# It does not actually remove the files from the PK3 archive.\n\n# First replace that toxic bracket character with something we can handle\n",
        "Line" : 144,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "# All source files at all levels\n",
        "Line" : 151,
        "CharPositionInLine" : 30
      },
      "18" : {
        "Text" : "# Exclude those quarantined source file source file names that once had a bracket\n",
        "Line" : 152,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# message(STATUS \"Ignoring PK3 file name containing brackets \"${PK3_SRC})\n",
        "Line" : 154,
        "CharPositionInLine" : 3
      },
      "20" : {
        "Text" : "# Phase 2: Create the PK3 build rule, including the source file list for the IDE\n\n# Touch the zipdir executable here so that the pk3s are forced to\n\n# rebuild each time since their dependency has \"changed.\"\n",
        "Line" : 158,
        "CharPositionInLine" : 1
      },
      "21" : {
        "Text" : "# Phase 3: Assign source files to a nice folder structure in the IDE\n",
        "Line" : 165,
        "CharPositionInLine" : 1
      },
      "22" : {
        "Text" : "# Phase 4: Add the resulting PK3 to the install target.\n",
        "Line" : 167,
        "CharPositionInLine" : 1
      },
      "23" : {
        "Text" : "# MSVC\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# For the Hypertension team, we must continue using SSE2 and _not_ AVX, since not everyone has an AVX-compatible processor.\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Removed HAVE_STDINT_H on Visual Studio/Win32 machines (Caused problems, so I Shoved it into UNIX define)\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Module Paths\n\n#list(APPEND CMAKE_MODULE_PATH\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#${CMAKE_CURRENT_SOURCE_DIR}\n\n#${CMAKE_CURRENT_SOURCE_DIR}/modules\n",
        "Line" : 240,
        "CharPositionInLine" : 1
      },
      "28" : {
        "Text" : "#)\n\n#SET(CMAKE_MODULE_PATH ${CMAKE_ROOT}/Modules  \"${CMAKE_CURRENT_SOURCE_DIR}/modules\")\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#message(${CMAKE_MODULE_PATH})\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Gitinfo Puller thingy\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# See /VSLibs/lib_versions.txt\n\n# Download VSLibs for MSVC - http://tdgmods.net/VSLibs.7z (up to date as of listing below)\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#set( SDL2_MIXER_INCLUDE_DIR \"${CMAKE_CURRENT_SOURCE_DIR}/VSLibsx64/SDL2_mixer-2.0.2/include\")\n\n#set( SDL2_MIXER_LIBRARY \"${CMAKE_CURRENT_SOURCE_DIR}/VSLibsx64/SDL2_mixer-2.0.2/lib/x64/SDL2\")\n",
        "Line" : 297,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "#\tset( kitchensink_LIBRARY \"libSDL_kitchensink.so\")\n",
        "Line" : 319,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Phys\n\n#find_package(physfs REQUIRED)\n",
        "Line" : 322,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# SDL\n\n#find_package(SDL2 REQUIRED)\n",
        "Line" : 326,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# SDL2_Mixer\n\n#include_directories(${SDL2_MIXER_INCLUDE_DIR})\n",
        "Line" : 330,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# SDL_net\n\n#find_package(SDL2_net REQUIRED)\n",
        "Line" : 333,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# OpenGL\n",
        "Line" : 337,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# libvorbis/libogg\n",
        "Line" : 341,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# zlib\n\n#find_package(ZLIB REQUIRED)\n",
        "Line" : 347,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# png\n\n#find_package(PNG REQUIRED)\n",
        "Line" : 351,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# jpeg\n\n#find_package(JPEG REQUIRED)\n",
        "Line" : 355,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# EDGE\n",
        "Line" : 359,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "#\tsrc/system/unx/unx_main.cc\n",
        "Line" : 611,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "#${SDL2_MIXER_LIBRARY}\n",
        "Line" : 664,
        "CharPositionInLine" : 1
      },
      "46" : {
        "Text" : "#${kitchensink_LIBRARY}\n",
        "Line" : 673,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 47
    },
    "bzip2/CMakeLists.txt" : {
      "ObjectId" : "6ff9a217242705134c817d6ab40a8b9a93dba7d8",
      "LastModified" : "2018-01-26T05:06:46Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/FindFFMPEG.cmake" : {
      "ObjectId" : "5b8d7e1b90ed1bfe336b288ebf9232db7153d825",
      "LastModified" : "2019-01-05T22:35:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find ffmpeg libraries (libavcodec, libavformat and libavutil)\n\n# Once done this will define\n\n#\n\n#  FFMPEG_FOUND - system has ffmpeg or libav\n\n#  FFMPEG_INCLUDE_DIR - the ffmpeg include directory\n\n#  FFMPEG_LIBRARIES - Link these to use ffmpeg\n\n#  FFMPEG_LIBAVCODEC\n\n#  FFMPEG_LIBAVFORMAT\n\n#  FFMPEG_LIBAVUTIL\n\n#\n\n#  Copyright (c) 2008 Andreas Schneider <mail@cynapses.org>\n\n#  Modified for other libraries by Lasse K�rkk�inen <tronic>\n\n#  Modified for Hedgewars by Stepik777\n\n#  Modified for RBDOOM-3-BFG by Robert Beckebans\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/FindOGG.cmake" : {
      "ObjectId" : "9ad0c32edf6ff04cd9045aa6a329c9cf437b696b",
      "LastModified" : "2019-01-05T22:35:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\tCMake module to find libogg\n\n#\tAlan Witkowski\n\n#\n\n#\tInput:\n\n# \t\tOGG_ROOT          - Environment variable that points to the ogg root directory\n\n#\n\n#\tOutput:\n\n#\t\tOGG_FOUND         - Set to true if ogg was found\n\n#\t\tOGG_INCLUDE_DIR   - Path to ogg.h\n\n#\t\tOGG_LIBRARIES     - Contains the list of ogg libraries\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# find include path\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# find debug library\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# find release library\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# combine debug and release\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# handle QUIET and REQUIRED\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# advanced variables only show up in gui if show advanced is turned on\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/FindOpenAL.cmake" : {
      "ObjectId" : "8a80682b061fb3a43c1c688f6315e9c04ac0c174",
      "LastModified" : "2019-01-05T22:35:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindOpenAL\n\n# ----------\n\n#\n\n#\n\n#\n\n# Locate OpenAL This module defines OPENAL_LIBRARY OPENAL_FOUND, if\n\n# false, do not try to link to OpenAL OPENAL_INCLUDE_DIR, where to find\n\n# the headers\n\n#\n\n# $OPENALDIR is an environment variable that would correspond to the\n\n# ./configure --prefix=$OPENALDIR used in building OpenAL.\n\n#\n\n# Created by Eric Wing.  This was influenced by the FindSDL.cmake\n\n# module.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This makes the presumption that you are include al.h like\n\n# #include \"al.h\"\n\n# and not\n\n# #include <AL/al.h>\n\n# The reason for this is that the latter is not entirely portable.\n\n# Windows/Creative Labs does not by default put their headers in AL/ and\n\n# OS X uses the convention <OpenAL/al.h>.\n\n#\n\n# For Windows, Creative Labs seems to have added a registry key for their\n\n# OpenAL 1.1 installer. I have added that key to the list of search paths,\n\n# however, the key looks like it could be a little fragile depending on\n\n# if they decide to change the 1.00.0000 number for bug fix releases.\n\n# Also, they seem to have laid down groundwork for multiple library platforms\n\n# which puts the library in an extra subdirectory. Currently there is only\n\n# Win32 and I have hardcoded that here. This may need to be adjusted as\n\n# platforms are introduced.\n\n# The OpenAL 1.0 installer doesn't seem to have a useful key I can use.\n\n# I do not know if the Nvidia OpenAL SDK has a registry key.\n\n#\n\n# For OS X, remember that OpenAL was added by Apple in 10.4 (Tiger).\n\n# To support the framework, I originally wrote special framework detection\n\n# code in this module which I have now removed with CMake's introduction\n\n# of native support for frameworks.\n\n# In addition, OpenAL is open source, and it is possible to compile on Panther.\n\n# Furthermore, due to bugs in the initial OpenAL release, and the\n\n# transition to OpenAL 1.1, it is common to need to override the built-in\n\n# framework.\n\n# Per my request, CMake should search for frameworks first in\n\n# the following order:\n\n# ~/Library/Frameworks/OpenAL.framework/Headers\n\n# /Library/Frameworks/OpenAL.framework/Headers\n\n# /System/Library/Frameworks/OpenAL.framework/Headers\n\n#\n\n# On OS X, this will prefer the Framework version (if found) over others.\n\n# People will have to manually change the cache values of\n\n# OPENAL_LIBRARY to override this selection or set the CMake environment\n\n# CMAKE_INCLUDE_PATH to modify the search paths.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Fink\n",
        "Line" : 65,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 66,
        "CharPositionInLine" : 13
      },
      "5" : {
        "Text" : "# Blastwave\n",
        "Line" : 67,
        "CharPositionInLine" : 11
      },
      "CommentCount" : 6
    },
    "cmake/FindSDL2_mixer.cmake" : {
      "ObjectId" : "39890c4e5ab0ab7f871009654453fb1e9b27cf62",
      "LastModified" : "2019-01-05T22:35:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Locate SDL2_mixer library (modified from Cmake's FindSDL_mixer.cmake)\n\n# This module defines:\n\n#  SDL2_MIXER_LIBRARIES, the name of the library to link against\n\n#  SDL2_MIXER_INCLUDE_DIRS, where to find the headers\n\n#  SDL2_MIXER_FOUND, if false, do not try to link against\n\n#  SDL2_MIXER_VERSION_STRING - human-readable string containing the version of SDL2_mixer\n\n#\n\n# For backward compatiblity the following variables are also set:\n\n#  SDL2MIXER_LIBRARY (same value as SDL2_MIXER_LIBRARIES)\n\n#  SDL2MIXER_INCLUDE_DIR (same value as SDL2_MIXER_INCLUDE_DIRS)\n\n#  SDL2MIXER_FOUND (same value as SDL2_MIXER_FOUND)\n\n#\n\n# $SDLDIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$SDLDIR\n\n# used in building SDL.\n\n#\n\n#=============================================================================\n\n# Copyright 2000-2014 Kitware, Inc.\n\n# Copyright 2000-2011 Insight Software Consortium\n\n# Copyright 2014 Justin Jacobs\n\n# All rights reserved.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# for backward compatiblity\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindSDLKitchenSink.cmake" : {
      "ObjectId" : "06972cc36a039b83f8c8a822abb7ed0b2433572a",
      "LastModified" : "2019-01-05T22:35:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindSDLKitchensink\n\n# --------\n\n#\n\n# Find the libsdlkitchensink headers and libraries.\n\n#\n\n# This module reports information about the libsdlkitchensink\n\n# installation in several variables.  General variables::\n\n#\n\n#   SDLKitchensink_FOUND - true if the libsdlkitchensink headers and libraries were found\n\n#   SDLKitchensink_INCLUDE_DIRS - the directory containing the libsdlkitchensink headers\n\n#   SDLKitchensink_LIBRARIES - libsdlkitchensink libraries to be linked\n\n#\n\n# The following cache variables may also be set::\n\n#\n\n#   SDLKitchensink_INCLUDE_DIR - the directory containing the libsdlkitchensink headers\n\n#   SDLKitchensink_LIBRARY - the libsdlkitchensink library (if any)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Based on FindIconv written by Roger Leigh <rleigh@codelibre.net>\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find include directory\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Find all SDLKitchensink libraries\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/FindVorbis.cmake" : {
      "ObjectId" : "199f903e3e5a553ff5b0b51016cff88ab74059bc",
      "LastModified" : "2019-01-05T22:35:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\tCMake module to find libvorbis\n\n#\tAlan Witkowski\n\n#\n\n#\tInput:\n\n# \t\tVORBIS_ROOT          - Environment variable that points to the vorbis root directory\n\n#\n\n#\tOutput:\n\n#\t\tVORBIS_FOUND         - Set to true if vorbis was found\n\n#\t\tVORBIS_INCLUDE_DIR   - Path to vorbis.h\n\n#\t\tVORBIS_LIBRARIES     - Contains the list of vorbis libraries\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# find include path\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# find debug library\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# find release library\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# find debug vorbisfile library\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# find release vorbisfile library\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# combine debug and release\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# combine debug and release\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# set libraries var\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# handle QUIET and REQUIRED\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# advanced variables only show up in gui if show advanced is turned on\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "coal/Makefile" : {
      "ObjectId" : "18b14660904f324d07a73dbf840ec2bf74d345d8",
      "LastModified" : "2019-01-05T22:35:38Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#==============================================================================\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#==============================================================================\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#--- editor settings ------------\n\n# vi:ts=8:sw=8:noexpandtab\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "data/CMakeLists.txt" : {
      "ObjectId" : "3dd503b717c54357edf9734f8abfef2726aa332e",
      "LastModified" : "2019-01-05T22:35:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#file(COPY her_ddf DESTINATION ${CMAKE_BINARY_DIR}/${CMAKE_CFG_INTDIR})\n\n#file(COPY hexen_ddf DESTINATION ${CMAKE_BINARY_DIR}/${CMAKE_CFG_INTDIR})\n\n#file(COPY rott_ddf DESTINATION ${CMAKE_BINARY_DIR}/${CMAKE_CFG_INTDIR})\n\n#file(COPY wolf_ddf DESTINATION ${CMAKE_BINARY_DIR}/${CMAKE_CFG_INTDIR})",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "data/vcpkg_edge.cmake" : {
      "ObjectId" : "b243ec662f1185bed16b940ddc24bf8d1b02aebf",
      "LastModified" : "2019-01-05T22:35:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "docs/tech/indent.pro" : {
      "ObjectId" : "99acedb21a82910970bb395d24952332cb9f1d3c",
      "LastModified" : "2019-01-05T22:35:38Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "glbsp/CMakeLists.txt" : {
      "ObjectId" : "489342c4d75b5b731169c6bc80f0ee9c7985e3e5",
      "LastModified" : "2019-01-05T22:35:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Avoid installing zlib alongside eBSP\n",
        "Line" : 27,
        "CharPositionInLine" : 30
      },
      "1" : {
        "Text" : "# eBSP\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "libs/msvc/SDL2/include/SDL_config.h.cmake" : {
      "ObjectId" : "c57266c413081c253f3e5526e025e3cb8d1bf53c",
      "LastModified" : "2019-01-05T22:35:38Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/*\n  Simple DirectMedia Layer\n  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>\n\n  This software is provided 'as-is', without any express or implied\n  warranty.  In no event will the authors be held liable for any damages\n  arising from the use of this software.\n\n  Permission is granted to anyone to use this software for any purpose,\n  including commercial applications, and to alter it and redistribute it\n  freely, subject to the following restrictions:\n\n  1. The origin of this software must not be misrepresented; you must not\n     claim that you wrote the original software. If you use this software\n     in a product, an acknowledgment in the product documentation would be\n     appreciated but is not required.\n  2. Altered source versions must be plainly marked as such, and must not be\n     misrepresented as being the original software.\n  3. This notice may not be removed or altered from any source distribution.\n*/",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/**\n *  \\file SDL_config.h.in\n *\n *  This is a set of defines to configure the SDL features\n */",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/* General platform specific identifiers */",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* C language features */",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* C datatypes */\n/* Define SIZEOF_VOIDP for 64/32 architectures */",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* Comment this if you want to build without any C library requirements */",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/* Useful headers */",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/* C library functions */",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "/* We may need some replacement for stdarg.h here */",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "/* SDL internal assertion support */",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "/* Allow disabling of core subsystems */",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "/* Enable various audio drivers */",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "/* Enable various input drivers */",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "/* Enable various shared object loading systems */",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "/* Enable various threading systems */",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "/* Enable various timer systems */",
        "Line" : 282,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "/* Enable various video drivers */",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "/* Enable OpenGL support */",
        "Line" : 345,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "/* Enable Vulkan support */",
        "Line" : 357,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "/* Enable system power support */",
        "Line" : 360,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "/* Enable system filesystem support */",
        "Line" : 369,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "/* Enable assembly routines */",
        "Line" : 378,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "/* Enable dynamic libsamplerate support */",
        "Line" : 382,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "/* Platform specific definitions */",
        "Line" : 385,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "/* Older Visual C++ headers don't have the Win64-compatible typedefs... */",
        "Line" : 420,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "libs/msvc/SDL2/sdl-config.cmake" : {
      "ObjectId" : "4c5eaa6199bf54837340a24e9d5e5e167a6e4e3a",
      "LastModified" : "2019-01-05T22:35:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Support both 32 and 64 bit builds\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "libs/msvc/libogg-1.3.3/include/Makefile.am" : {
      "ObjectId" : "0084e4d8298a2ec161888420af70ba0f1f3cc778",
      "LastModified" : "2019-01-05T22:35:38Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "libs/msvc/libogg-1.3.3/include/ogg/Makefile.am" : {
      "ObjectId" : "142699d35608e1bbe175746ef0073f8f2e01fb61",
      "LastModified" : "2019-01-05T22:35:38Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "libs/msvc/libvorbis-1.3.6/include/Makefile.am" : {
      "ObjectId" : "0f34fab4ca61c0ef3f650a643f53286d532ab09f",
      "LastModified" : "2019-01-05T22:35:38Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "libs/msvc/libvorbis-1.3.6/include/vorbis/Makefile.am" : {
      "ObjectId" : "dbba34e55974a19203f0c094e91a3ed69298e150",
      "LastModified" : "2019-01-05T22:35:38Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lzma/CMakeLists.txt" : {
      "ObjectId" : "3948ea2eebe09a84183a43c3f7155ed32c8e39b4",
      "LastModified" : "2019-01-05T22:35:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "modules/FindSDL2.cmake" : {
      "ObjectId" : "464ca2d924e7469ca0477e390e65cfe71f80e47a",
      "LastModified" : "2019-01-05T22:35:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This module defines\n\n# SDL2_LIBRARY, the name of the library to link against\n\n# SDL2_FOUND, if false, do not try to link to SDL2\n\n# SDL2_INCLUDE_DIR, where to find SDL.h\n\n#\n\n# This module responds to the the flag:\n\n# SDL2_BUILDING_LIBRARY\n\n# If this is defined, then no SDL2main will be linked in because\n\n# only applications need main().\n\n# Otherwise, it is assumed you are building an application and this\n\n# module will attempt to locate and set the the proper link flags\n\n# as part of the returned SDL2_LIBRARY variable.\n\n#\n\n# Don't forget to include SDLmain.h and SDLmain.m your project for the\n\n# OS X framework based version. (Other versions link to -lSDL2main which\n\n# this module will try to find on your behalf.) Also for OS X, this\n\n# module will automatically add the -framework Cocoa on your behalf.\n\n#\n\n#\n\n# Additional Note: If you see an empty SDL2_LIBRARY_TEMP in your configuration\n\n# and no SDL2_LIBRARY, it means CMake did not find your SDL2 library\n\n# (SDL2.dll, libsdl2.so, SDL2.framework, etc).\n\n# Set SDL2_LIBRARY_TEMP to point to your SDL2 library, and configure again.\n\n# Similarly, if you see an empty SDL2MAIN_LIBRARY, you should set this value\n\n# as appropriate. These values are used to generate the final SDL2_LIBRARY\n\n# variable, but when these values are unset, SDL2_LIBRARY does not get created.\n\n#\n\n#\n\n# $SDL2DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$SDL2DIR\n\n# used in building SDL2.\n\n# l.e.galup  9-20-02\n\n#\n\n# Modified by Eric Wing.\n\n# Added code to assist with automated building by using environmental variables\n\n# and providing a more controlled/consistent search behavior.\n\n# Added new modifications to recognize OS X frameworks and\n\n# additional Unix paths (FreeBSD, etc).\n\n# Also corrected the header search path to follow \"proper\" SDL guidelines.\n\n# Added a search for SDL2main which is needed by some platforms.\n\n# Added a search for threads which is needed by some platforms.\n\n# Added needed compile switches for MinGW.\n\n#\n\n# On OSX, this will prefer the Framework version (if found) over others.\n\n# People will have to manually change the cache values of\n\n# SDL2_LIBRARY to override this selection or set the CMake environment\n\n# CMAKE_INCLUDE_PATH to modify the search paths.\n\n#\n\n# Note that the header path has changed from SDL2/SDL.h to just SDL.h\n\n# This needed to change because \"proper\" SDL convention\n\n# is #include \"SDL.h\", not <SDL2/SDL.h>. This is done for portability\n\n# reasons because not all systems place things in SDL2/ (see FreeBSD).\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2003-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# message(\"<FindSDL2.cmake>\")\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Fink\n",
        "Line" : 75,
        "CharPositionInLine" : 5
      },
      "4" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 76,
        "CharPositionInLine" : 12
      },
      "5" : {
        "Text" : "# Blastwave\n",
        "Line" : 77,
        "CharPositionInLine" : 10
      },
      "6" : {
        "Text" : "# Non-OS X framework versions expect you to also dynamically link to\n\n# SDL2main. This is mainly for Windows and OS X. Other (Unix) platforms\n\n# seem to provide SDL2main for compatibility even though they don't\n\n# necessarily need it.\n",
        "Line" : 105,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# SDL2 may require threads on your system.\n\n# The Apple build may not need an explicit flag because one of the\n\n# frameworks may already provide it.\n\n# But for non-OSX systems, I will use the CMake Threads package.\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# MinGW needs an additional link flag, -mwindows\n\n# It's total link flags should look like -lmingw32 -lSDL2main -lSDL2 -mwindows\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# For SDL2main\n",
        "Line" : 134,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# For OS X, SDL2 uses Cocoa as a backend so it must link to Cocoa.\n\n# CMake doesn't display the -framework Cocoa string in the UI even\n\n# though it actually is there if I modify a pre-used variable.\n\n# I think it has something to do with the CACHE STRING.\n\n# So I use a temporary variable until the end so I can set the\n\n# \"real\" variable in one-shot.\n",
        "Line" : 141,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# For threads, as mentioned Apple doesn't need this.\n\n# In fact, there seems to be a problem if I used the Threads package\n\n# and try using this line, so I'm just skipping it entirely for OS X.\n",
        "Line" : 151,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# For MinGW library\n",
        "Line" : 158,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# Set the final string here so the GUI reflects the final state.\n",
        "Line" : 163,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# Set the temp variable to INTERNAL so it is not seen in the CMake GUI\n",
        "Line" : 165,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# message(\"</FindSDL2.cmake>\")\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "modules/FindSDL2_net.cmake" : {
      "ObjectId" : "5c743f2e443d936941d8b1bfe421f817be22712a",
      "LastModified" : "2019-01-05T22:35:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FindSDL2_net.cmake\n\n#\n\n# Copyright (c) 2018, Alex Mayfield <alexmax2742@gmail.com>\n\n# All rights reserved.\n\n# \n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#     * Redistributions of source code must retain the above copyright\n\n#       notice, this list of conditions and the following disclaimer.\n\n#     * Redistributions in binary form must reproduce the above copyright\n\n#       notice, this list of conditions and the following disclaimer in the\n\n#       documentation and/or other materials provided with the distribution.\n\n#     * Neither the name of the <organization> nor the\n\n#       names of its contributors may be used to endorse or promote products\n\n#       derived from this software without specific prior written permission.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n\n# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\n# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\n# DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n\n# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\n# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n\n# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\n# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n# Currently works with the following generators:\n\n# - Unix Makefiles\n\n# - Ninja\n\n# - Visual Studio\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Cache variable that allows you to point CMake at a directory containing\n\n# an extracted development library.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use pkg-config to find library locations in *NIX environments.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find the include directory.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Find the version.  Taken and modified from CMake's FindSDL.cmake.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Find the library.\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Imported target.\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "src/system/opengl/minigl/Makefile" : {
      "ObjectId" : "d982ff8863febde1eaa093c050fbcbfd592ee873",
      "LastModified" : "2019-01-05T22:35:38Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#NODEBUGING = -D NDEBUG\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#EXTRAOPT=-Wall -O3 -fomit-frame-pointer -Wstrict-aliasing=2 -D __arch_dreamcast\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#EXTRAOPT=-Wall -O3 -mpretend-cmove -mrelax -mfused-madd -Wstrict-aliasing=2 -D __arch_dreamcast -Wno-format\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#MATHOPT=\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#kos-cc $(CFLAGS) $(NODEBUGING) -O3 $(MATHOPT) $(EXTRAOPT) $(ALIGNS) -c $< -o $@\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Define KOS_ROMDISK_DIR in your Makefile if you want these two handy rules.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "######################################\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\t\t$(OBJS) $(OBJEXTRA)  -lstdc++ -lm -lkglx -lpcx -lkosutils $(KOS_LIBS)\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "tools/CMakeLists.txt" : {
      "ObjectId" : "b216ab81031973ffc8f13cdde5070dfe7ac1a13e",
      "LastModified" : "2019-01-05T22:35:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/SDL_kitchensink/CMakeLists.txt" : {
      "ObjectId" : "6d67ca65ce1778d69cdea95dc02b04c7628aee42",
      "LastModified" : "2019-01-05T22:35:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Installation\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/SDL_kitchensink/cmake/FindSDL2.cmake" : {
      "ObjectId" : "bf7a3d786d50cb4a2f67708534ec394497563775",
      "LastModified" : "2019-01-05T22:35:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FindSDL2.cmake\n\n#\n\n# Copyright (c) 2018, Alex Mayfield <alexmax2742@gmail.com>\n\n# All rights reserved.\n\n# \n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#     * Redistributions of source code must retain the above copyright\n\n#       notice, this list of conditions and the following disclaimer.\n\n#     * Redistributions in binary form must reproduce the above copyright\n\n#       notice, this list of conditions and the following disclaimer in the\n\n#       documentation and/or other materials provided with the distribution.\n\n#     * Neither the name of the <organization> nor the\n\n#       names of its contributors may be used to endorse or promote products\n\n#       derived from this software without specific prior written permission.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n\n# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\n# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\n# DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n\n# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\n# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n\n# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\n# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n# Currently works with the following generators:\n\n# - Unix Makefiles\n\n# - Ninja\n\n# - Visual Studio\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Cache variable that allows you to point CMake at a directory containing\n\n# an extracted development library.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use pkg-config to find library locations in *NIX environments.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find the include directory.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Find the version.  Taken and modified from CMake's FindSDL.cmake.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Find the SDL2 and SDL2main libraries\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# SDL2 imported target.\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# SDL2main imported target.\n",
        "Line" : 93,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "tools/SDL_kitchensink/cmake/Findass.cmake" : {
      "ObjectId" : "bbc88d59ba57b61cac50a8b34260b4f12e1bc895",
      "LastModified" : "2019-01-05T22:35:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# A Simple libass Finder.\n\n# (c) Tuomas Virtanen 2016 (Licensed under MIT license)\n\n# Usage:\n\n# find_package(ass)\n\n#\n\n# Declares:\n\n#  * ASS_FOUND\n\n#  * ASS_INCLUDE_DIRS\n\n#  * ASS_LIBRARIES\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/SDL_kitchensink/cmake/Findcunit.cmake" : {
      "ObjectId" : "ae81cf1e61fa3473fa87e4e8f0ced0203984dd94",
      "LastModified" : "2019-01-05T22:35:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# A Simple CUnit Finder.\n\n# (c) Tuomas Virtanen 2016 (Licensed under MIT license)\n\n# Usage:\n\n# find_package(cunit)\n\n#\n\n# Declares:\n\n#  * CUNIT_FOUND\n\n#  * CUNIT_INCLUDE_DIRS\n\n#  * CUNIT_LIBRARIES\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/SDL_kitchensink/cmake/Findffmpeg.cmake" : {
      "ObjectId" : "fdb6246371ea7fefa6c7209b7140340c06784747",
      "LastModified" : "2019-01-05T22:35:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# A Simple FFMPEG Finder.\n\n# (c) Tuomas Virtanen 2016 (Licensed under MIT license)\n\n# Usage:\n\n# find_package(ffmpeg COMPONENTS avcodec avutil ...)\n\n#\n\n# Declares:\n\n#  * FFMPEG_FOUND\n\n#  * FFMPEG_INCLUDE_DIRS\n\n#  * FFMPEG_LIBRARIES\n\n#\n\n# Also declares ${component}_FOUND for each component, eg. avcodec_FOUND etc.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Walk through all components declared above, and try to find the ones that have been asked\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Component requested, try to look up the library and header for it.\n",
        "Line" : 39,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# If library and header was found, set proper variables\n\n# Otherwise print out a warning!\n",
        "Line" : 51,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Mark the temporary variables as hidden in the ui\n",
        "Line" : 63,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 5
    },
    "tools/eecrashreport/CMakeLists.txt" : {
      "ObjectId" : "55eaa0dd3fed0e804b38110fc7b5d1990681c582",
      "LastModified" : "2019-01-05T22:35:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Copyright (c) 2010 Jamie Jones <jamie_jones_au@yahoo.com.au>\n\n##\n\n## This software is free software; you can redistribute it and/or\n\n## modify it under the terms of the GNU General Public License as published by\n\n## the Free Software Foundation; either version 2 of the License, or\n\n## (at your option) any later version.\n\n##\n\n## This software is distributed in the hope that it will be useful,\n\n## but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n## GNU General Public License for more details.\n\n##\n\n## You should have received a copy of the GNU General Public License\n\n## along with this program; if not, write to the Free Software\n\n## Foundation, Inc., 51 Franklin St, Fifth Floor,\n\n## Boston, MA  02110-1301  USA\n\n##\n\n################################################################################\n\n######################### CMake Configuration ##################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "################################################################################\n\n######################### Set Project Source  ##################################\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "################################################################################\n\n######################### Set Build Targets   ##################################\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tools/glvis/CMakeLists.txt" : {
      "ObjectId" : "df416137c6a8b13f77dd0ff134014e06b859d432",
      "LastModified" : "2019-01-05T22:35:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#EXTRA_DIST = glvis.txt\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/glvis/standalone/CMakeLists.txt" : {
      "ObjectId" : "df416137c6a8b13f77dd0ff134014e06b859d432",
      "LastModified" : "2019-01-05T22:35:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#EXTRA_DIST = glvis.txt\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/updaterevision/CMakeLists.txt" : {
      "ObjectId" : "db99ab812e74f282f9c553d9db0b143de88b154a",
      "LastModified" : "2019-01-05T22:35:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# VC 8+ adds a manifest automatically to the executable. We need to\n\n# merge ours with it.\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "tools/zipdir/CMakeLists.txt" : {
      "ObjectId" : "6a36b2cb5ddf1003a7e57cbb660c5fadf237cce6",
      "LastModified" : "2019-01-05T22:35:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "wadsrc/CMakeLists.txt" : {
      "ObjectId" : "76b2fb407af6a0fab3bf255d4355644c2b75ec8f",
      "LastModified" : "2019-01-05T22:35:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "zdbsp/CMakeLists.txt" : {
      "ObjectId" : "5448f2334c6a9f12312a335f3ef55b2011938768",
      "LastModified" : "2019-01-05T22:35:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# SSE only matters on 32-bit targets. We check compiler flags to know if we can do it.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Eliminate unreferenced functions and data\n\n# Perform identical COMDAT folding\n",
        "Line" : 59,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# String pooling\n\n# Function-level linking\n\n# Disable run-time type information\n",
        "Line" : 63,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# Avoid CRT DLL dependancies in release builds\n",
        "Line" : 68,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# Disable warnings for unsecure CRT functions from VC8+\n",
        "Line" : 71,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# The CMake configurations set /GR and /MD by default, which conflict with our settings.\n",
        "Line" : 76,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "#if( WIN32 AND \"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"Clang\" )\n\n#\tset( ALL_C_FLAGS \"${ALL_C_FLAGS} -Wno-deprecated-declarations -Wno-format\" )\n\n#endif( WIN32 AND \"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"Clang\" )\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Building everything with SSE2 is much like disabling it, in that we\n\n# need not check for its existance while running.\n",
        "Line" : 172,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# CMake is not set up to compile and link rc files with GCC. :(\n",
        "Line" : 194,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 9
    },
    "zdbsp/zlib/CMakeLists.txt" : {
      "ObjectId" : "471e995bc7b97573bbccecda732fc6616aa80397",
      "LastModified" : "2019-01-05T22:35:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "zlib/CMakeLists.txt" : {
      "ObjectId" : "52542bbaaa7aeb6fc33fb1831408327dd02f980f",
      "LastModified" : "2019-01-05T22:35:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Check to see if we have large file support\n\n#\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We add these other definitions here because CheckTypeSize.cmake\n\n# in CMake 2.4.x does not automatically do so and we want\n\n# compatibility with CMake 2.4.x.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# clear variable\n",
        "Line" : 46,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "#\n\n# Check for fseeko\n\n#\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Check for unistd.h\n\n#\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#if(NOT CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_CURRENT_BINARY_DIR)\n\n#    # If we're doing an out of source build and the user has a zconf.h\n\n#    # in their source tree...\n\n#    if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/zconf.h)\n\n#        message(FATAL_ERROR\n\n#            \"You must remove ${CMAKE_CURRENT_SOURCE_DIR}/zconf.h \"\n\n#            \"from the source tree.  This file is included with zlib \"\n\n#            \"but CMake generates this file for you automatically \"\n\n#            \"in the build directory.\")\n\n#  endif()\n\n#endif()\n\n#\n\n#configure_file(${CMAKE_CURRENT_SOURCE_DIR}/zconf.h.cmakein\n\n#               ${CMAKE_CURRENT_BINARY_DIR}/zconf.h @ONLY)\n\n#include_directories(${CMAKE_CURRENT_BINARY_DIR})\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#============================================================================\n\n# zlib\n\n#============================================================================\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#   gzclose.c\n\n#   gzlib.c\n\n#   gzread.c\n\n#   gzwrite.c\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#   win32/zlib1.rc\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# parse the full version number from zlib.h and include in ZLIB_FULL_VERSION\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# This gets us DLL resource information when compiling on MinGW.\n",
        "Line" : 129,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# This property causes shared libraries on Linux to have the full version\n\n# encoded into their final filename.  We disable this on Cygwin because\n\n# it causes cygz-${ZLIB_FULL_VERSION}.dll to be created when cygz.dll\n\n# seems to be the default.\n\n#\n\n# This has no effect with MSVC, on that platform the version info for\n\n# the DLL comes from the resource file win32/zlib1.rc\n",
        "Line" : 146,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Creates zlib1.dll when building shared library version\n",
        "Line" : 157,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# On unix-like platforms the library is almost always called libz\n",
        "Line" : 160,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "#============================================================================\n\n# Example binaries\n\n#============================================================================\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#add_executable(example example.c)\n\n#target_link_libraries(example ${ZLIBNAME})\n\n#add_test(example example)\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#add_executable(minigzip minigzip.c)\n\n#target_link_libraries(minigzip ${ZLIBNAME})\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#if(HAVE_OFF64_T)\n\n#    add_executable(example64 example.c)\n\n#    target_link_libraries(example64 ${ZLIBNAME})\n\n#    set_target_properties(example64 PROPERTIES COMPILE_FLAGS \"-D_FILE_OFFSET_BITS=64\")\n\n#    add_test(example64 example64)\n\n#\n\n#    add_executable(minigzip64 minigzip.c)\n\n#    target_link_libraries(minigzip64 ${ZLIBNAME})\n\n#    set_target_properties(minigzip64 PROPERTIES COMPILE_FLAGS \"-D_FILE_OFFSET_BITS=64\")\n\n#endif()\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    }
  },
  "FileTypes" : {
    "CMAKE" : 31,
    "CMAKESOURCE" : 1,
    "QMAKE" : 1,
    "MAKEFILE" : 2,
    "AUTOMAKE" : 4
  },
  "ElapsedTime" : 2708
}