{
  "Repository" : "10150370",
  "Revision" : "HEAD",
  "ObjectId" : "97c785730ab8250a11dd6bb9b5e80a1053568214",
  "CommitTime" : "2019-02-10T04:33:20Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "3caa023f3132efc68f99f5d5402d4c68de014cce",
      "LastModified" : "2019-01-23T08:39:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Install where?\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Tonto version info and build date\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Tonto speicifics\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Perl\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Git\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Testing?\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Tonto\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# LAPACK\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# MPI\n",
        "Line" : 74,
        "CharPositionInLine" : 7
      },
      "10" : {
        "Text" : "# If desirable we can use .F03/.f03 by appending to the below variable\n\n# message(STATUS \"Allowed fortran suffixes: ${CMAKE_Fortran_SOURCE_FILE_EXTENSIONS}\")\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Set the fortran flags\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Macros\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Foo source files\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#${FOO_DIR}/vec{rys}.foo\n",
        "Line" : 261,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Fortran source files used by run_molecule/run_har\n",
        "Line" : 279,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#${CMAKE_CURRENT_BINARY_DIR}/vec_rys.F90\n",
        "Line" : 400,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Set up run files\n",
        "Line" : 414,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Processing foo into fortran source\n",
        "Line" : 436,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# This is just so Make doesn't panic about unescaped { or ,\n\n# and the end result is the filenames in FORTRAN_SRC\n",
        "Line" : 444,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Target libtonto\n",
        "Line" : 461,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Build directory\n",
        "Line" : 473,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Standard executables\n",
        "Line" : 478,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Link exectables\n",
        "Line" : 496,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Make non-standard-named executables\n",
        "Line" : 515,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Packages\n",
        "Line" : 524,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 26
    },
    "cmake/SetFortranFlags.cmake" : {
      "ObjectId" : "c8453a626434d8079ccc28a605930d85d70b0743",
      "LastModified" : "2018-09-27T09:00:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# Determine the appropriate flags for this compiler for each build type.\n\n# For each option type, a list of possible flags is given that work\n\n# for various compilers.  The first flag that works is chosen.\n\n# If none of the flags work, nothing is added (unless the REQUIRED\n\n# flag is given in the call).  This way unknown compiles are supported.\n\n#######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Make sure the build type is uppercase\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set default macros\n\n# These are the default kinds from the current build, should be a better way\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/mingw_w32.cmake" : {
      "ObjectId" : "7803e49165e55e66807361fed4010174a51f7275",
      "LastModified" : "2017-08-23T10:27:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Sample toolchain file for building for Windows from an Ubuntu Linux system.\n\n#\n\n# Typical usage:\n\n#    *) install cross compiler: `sudo apt-get install mingw-w64`\n\n#    *) cd build\n\n#    *) cmake -DCMAKE_TOOLCHAIN_FILE=~/mingw-w64-x86_64.cmake ..\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# cross compilers to use for C, C++ and Fortran\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# target environment on the build host system\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# modify default behavior of FIND_XXX() commands\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/mingw_w64.cmake" : {
      "ObjectId" : "3b16c40f51762b8466beddd373b13c118ceab88f",
      "LastModified" : "2018-06-10T19:12:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Sample toolchain file for building for Windows from an Ubuntu Linux system.\n\n#\n\n# Typical usage:\n\n#    *) install cross compiler: `sudo apt-get install mingw-w64`\n\n#    *) cd build\n\n#    *) cmake -DCMAKE_TOOLCHAIN_FILE=~/mingw-w64-x86_64.cmake ..\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# cross compilers to use for C, C++ and Fortran\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# target environment on the build host system\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# modify default behavior of FIND_XXX() commands\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "external/CMakeLists.txt" : {
      "ObjectId" : "e18d4997084aa400e11b715082e7ee64b375d1d8",
      "LastModified" : "2018-07-19T10:27:06Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "936daf40c75e6a465fa61df02ef6d41ff06a41f1",
      "LastModified" : "2018-12-03T10:28:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Numdiff\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This expects a list of test directories\n\n# followed by LABELS then a list of labels\n\n# e.g. add_all_tests(${DIRS} LABELS \"foo\")\n",
        "Line" : 27,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "tests/cx/CMakeLists.txt" : {
      "ObjectId" : "81bcb419337c44cc8cefc65819f6864914d4279e",
      "LastModified" : "2018-07-19T10:27:06Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/geminal/CMakeLists.txt" : {
      "ObjectId" : "cf4ebd17127fc59d32f22afbbb19fff075a4e4b7",
      "LastModified" : "2018-07-19T10:27:06Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/long/CMakeLists.txt" : {
      "ObjectId" : "33abd2750afc473157233297ed7cec4901098124",
      "LastModified" : "2018-07-19T10:27:06Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/relativistic/CMakeLists.txt" : {
      "ObjectId" : "a32c145449c290ef5b8119aae6384e4fea9ecc36",
      "LastModified" : "2018-07-19T10:27:06Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/short/CMakeLists.txt" : {
      "ObjectId" : "b68b254eca64b97027c277e0838c6553654da5e5",
      "LastModified" : "2018-07-19T10:27:06Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 11
  },
  "ElapsedTime" : 3455
}