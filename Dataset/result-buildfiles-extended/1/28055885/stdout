{
  "Repository" : "28055885",
  "Revision" : "HEAD",
  "ObjectId" : "da13c2de70cb122f22e83c92e9601752125d0fb8",
  "CommitTime" : "2019-04-14T11:51:37Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "b73c7127254923c63be883c0e557774b0635449a",
      "LastModified" : "2019-03-09T13:57:59Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n#  Author: Hari Sekhon\n\n#  Date: 2013-02-03 10:25:36 +0000 (Sun, 03 Feb 2013)\n\n#\n\n#  https://github.com/harisekhon/devops-python-tools\n\n#\n\n#  License: see accompanying LICENSE file\n\n#\n\n#  https://www.linkedin.com/in/harisekhon\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Travis has custom python install earlier in $PATH even in Perl builds so need to install PyPI modules to non-system python otherwise they're not found by programs.\n\n# Better than modifying $PATH to put /usr/bin first which is likely to affect many other things including potentially not finding the perlbrew installation first\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ===================\n\n# bootstrap commands:\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Alpine:\n\n#\n\n#   apk add --no-cache git $(MAKE) && git clone https://github.com/harisekhon/devops-python-tools && cd pytools && $(MAKE)\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Debian / Ubuntu:\n\n#\n\n#   apt-get update && apt-get install -y $(MAKE) git && git clone https://github.com/harisekhon/devops-python-tools && cd pytools && $(MAKE)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# RHEL / CentOS:\n\n#\n\n#   yum install -y $(MAKE) git && git clone https://github.com/harisekhon/devops-python-tools && cd pytools && $(MAKE)\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ===================\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# don't pull parquet tools in to docker image by default, will bloat it\n\n# can fetch separately by running 'make parquet-tools' if you really want to\n",
        "Line" : 58,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# only install pip packages not installed via system packages\n\n#$(SUDO_PIP) pip install --upgrade -r requirements.txt\n\n#$(SUDO_PIP) pip install -r requirements.txt\n",
        "Line" : 68,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# for impyla\n\n#$(SUDO_PIP) pip install --upgrade setuptools || :\n\n#\n\n# snappy may fail to install on Mac not finding snappy-c.h - workaround:\n\n#\n\n# brew install snappy\n\n#\n\n# find /usr/local -name snappy-c.h\n\n#\n\n# /usr/local/include/snappy-c.h\n\n#\n\n# sudo su\n\n# LD_RUN_PATH=/usr/local/include pip install snappy\n\n#\n\n#$(SUDO_PIP) pip install --upgrade -r requirements.txt\n",
        "Line" : 73,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# for ipython-notebook-pyspark.py\n\n#$(SUDO_PIP) pip install jinja2\n\n# HiveServer2\n\n#$(SUDO_PIP) pip install pyhs2\n\n# Impala\n\n#$(SUDO_PIP) pip install impyla\n\n# must downgrade happybase library to work on Python 2.6\n\n#if [ \"$$(python -c 'import sys; sys.path.append(\"pylib\"); import harisekhon; print(harisekhon.utils.getPythonVersion())')\" = \"2.6\" ]; then $(SUDO_PIP) pip install --upgrade \"happybase==0.9\"; fi\n",
        "Line" : 89,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# Python >= 2.7 - won't build on 2.6, handle separately and accept failure\n",
        "Line" : 98,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# Spark Java Py4J gets java linking error without this\n",
        "Line" : 118,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# for validate_multimedia.py\n\n# available in Alpine 2.6, 2.7 and 3.x\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# for validate_multimedia.py\n\n# Ubuntu 16.04 Xenial onwards, not available in Ubuntu 14.04 Trusty\n\n# Debian 9 Stretch onwards, not available in Debian 8 Jessie\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# for validate_multimedia.py\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# the xargs option to ignore blank input doesn't work on Mac\n",
        "Line" : 181,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# PyTools\n",
        "Line" : 199,
        "CharPositionInLine" : 1
      },
      "18" : {
        "Text" : "# Alpine Github\n",
        "Line" : 201,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "# Debian Github\n",
        "Line" : 203,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "# CentOS Github\n",
        "Line" : 205,
        "CharPositionInLine" : 1
      },
      "21" : {
        "Text" : "# Ubuntu Github\n",
        "Line" : 207,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 22
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 512
}