{
  "Repository" : "24017401",
  "Revision" : "HEAD",
  "ObjectId" : "df9b752744535a8ee384c168aebf315040d5b1e9",
  "CommitTime" : "2019-02-19T09:15:42Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "6e063d68484f1fff17a8bf43160d6284de445985",
      "LastModified" : "2018-05-29T10:01:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# @file     CMakeLists.txt\n\n# @date     nov. 2015\n\n# @author   PhRG / opticalp.fr\n\n# @license  MIT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# main cmake file\n\n#  - create a simple project\n\n#  - look for dependencies\n\n#  - link to those dependencies\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# set search path for project specific cmake modules\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# default to ON for CI tests\n",
        "Line" : 26,
        "CharPositionInLine" : 57
      },
      "4" : {
        "Text" : "# main sources\n\n# custom parameters\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## configure executable \n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# list of source files\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## configure dependencies\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# find POCO\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# find OpenCV\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# find wxWidgets\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Note that for MinGW users the order of libs is important!\n",
        "Line" : 112,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# add some files \n\n# include ( ${PROJECT_SOURCE_DIR}/cmake/wxwidgets.cmake )\n",
        "Line" : 122,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# or keep it here\n\n# copy resource files\n",
        "Line" : 125,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# find genAPI\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "## generate build info\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## configure tests\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# find python\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# copy instrumentall.properties file to the bin dir\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# raw tests __without__ test framework\n\n# test that the final binary is executable\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#    add_test (\n\n#        NAME instruExec\n\n#        COMMAND $<TARGET_FILE:instrumentall>\n\n#        )\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#    add_test (\n\n#        NAME instruConf\n\n#        COMMAND $<TARGET_FILE:instrumentall> --config-file=${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/test.properties\n\n#        )\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#    add_test (\n\n#        NAME instruExec\n\n#        COMMAND $<TARGET_FILE:instrumentall>\n\n#        )\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#    add_test (\n\n#        NAME instruConf\n\n#        COMMAND $<TARGET_FILE:instrumentall> /config-file=${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/test.properties\n\n#        )\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# install directives\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "cmake/modules/FindGenAPI.cmake" : {
      "ObjectId" : "7e370e16b62725615afc9023e45e583a5e4fcd69",
      "LastModified" : "2018-05-29T10:01:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# @file     cmake/modules/FindGenAPI.cmake\n\n# @date     may 2017\n\n# @author   PhRG / opticalp.fr\n\n# @license  MIT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Detecting GenAPI lib installation (emva.org)\n\n# \n\n# you can set genapi_include_dir and genapi_lib_dir (windows) to help the\n\n# search of the include directory and .lib files\n\n# if genapi_root_dir is set, genapi_include_dir can be defined automatically. \n\n#\n\n# To use the results of: \n\n#       find_package ( GenAPI )\n\n# You have to include target link libraries like this:\n\n#       target_link_libraries ( my_executable GenAPI )\n\n#\n\n# ========\n\n# genAPI version check is supported \n\n# genAPI version EXACT keyword is not supported\n\n#\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# safety measure. find_file and find_library write results in CACHE!\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# variables to be found in cache\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# verify that some header files are in the include dir\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# check version\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# parsing version\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#    message ( STATUS \"GenAPI version is ${GenAPI_VERSION}\")\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Create imported target Poco::${module}\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# directories containing the .lib files for windows\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# we can not use find_library here, since the lib name is way too complicated...\n",
        "Line" : 147,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# cleaning...\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "cmake/modules/FindPoco.cmake" : {
      "ObjectId" : "c32af844a632823ba7af0a9a8130fb7eec4b9507",
      "LastModified" : "2018-05-29T10:01:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# @file     cmake/modules/FindPoco.cmake\n\n# @date     nov. 2015\n\n# @author   PhRG / opticalp.fr\n\n# @license  MIT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Detecting POCO lib installation (pocoproject.org)\n\n# \n\n# for older versions of Poco, PocoConfig.cmake is not available. \n\n# Poco has to be found \"manually\", then...\n\n# \n\n# you can set poco_include_dir and poco_lib_dir (windows) to help the\n\n# search of the include directory and .lib files\n\n#\n\n# To use the results of: \n\n#       find_package ( Poco COMPONENTS Foundation )\n\n# You have to include target link libraries like this:\n\n#       target_link_libraries ( my_executable Poco::Foundation )\n\n#\n\n# ========\n\n# poco components is supported\n\n# poco version check is supported \n\n# poco version EXACT keyword is not supported\n\n#\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# avoiding recursion\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# if not found, doing it \"manually\"\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# looking for general paths\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# safety measure. find_file and find_library write results in CACHE!\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# variables to be found in cache\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# directories containing the .lib files for windows\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# verify that some header files are in it\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#    if ( ( NOT poco_include_dir ) OR ( check_poco_include_root STREQUAL poco_include_dir ) )\n\n#        include_directories (${check_poco_include_root})\n\n#        set ( Poco_INCLUDE_DIRS \"${check_poco_include_root}\" )\n\n#    endif ( )\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# check version\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# parsing version\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#     message ( STATUS \"poco version is ${Poco_VERSION}\")\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Create imported target Poco::${module}\n",
        "Line" : 161,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# check include tree\n",
        "Line" : 165,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# NOTE: anything else to do?\n",
        "Line" : 180,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# cleaning...\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "cmake/python.cmake" : {
      "ObjectId" : "cb5dbadc3f535d117971c8d324f03a71fd98f00f",
      "LastModified" : "2018-05-29T10:01:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## @file     cmake/python.cmake\n\n## @date     nov. 2015\n\n## @author   PhRG / opticalp.fr\n\n## @license  MIT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If you'd like to specify the installation of Python to use, you should\n\n# modify the following cache variables:\n\n#   PYTHON_LIBRARY             - path to the python library\n\n#   PYTHON_INCLUDE_DIR         - path to where Python.h is found\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# require cmake >= 2.8.8 to use PYTHONLIBS_VERSION_STRING\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# building bin tree\n",
        "Line" : 26,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# copy the embedded tools\n",
        "Line" : 32,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# python tests\n",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "cmake/tools/fileSHA1.cmake" : {
      "ObjectId" : "e6248b248d922d8aef69f8c3e2dbb23136318ae1",
      "LastModified" : "2018-05-29T10:01:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## @file     cmake/tools/fileSHA1.cmake\n\n## @date     nov. 2017\n\n## @author   PhRG / opticalp.fr\n\n## @license  MIT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## this script file helps building SHA1 digests for file\n\n## to be used in user management\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/tools/stringSHA1.cmake" : {
      "ObjectId" : "9d56515d530ba9d20d25f589780d02d7992456fa",
      "LastModified" : "2018-05-29T10:01:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## @file     cmake/tools/stringSHA1.cmake\n\n## @date     nov. 2017\n\n## @author   PhRG / opticalp.fr\n\n## @license  MIT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## this script file helps building SHA1 digests for file\n\n## to be used in user management\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/users.cmake" : {
      "ObjectId" : "cf2f9e3261f4b4a8993da1a85efce80edcf2302f",
      "LastModified" : "2018-05-29T10:01:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## @file     cmake/users.cmake\n\n## @date     nov. 2017\n\n## @author   PhRG / opticalp.fr\n\n## @license  MIT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## this config file is loaded if the user permissions are managed\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# permissions without digest\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## could have used\n\n#file (APPEND ${USER_ANONYMOUS_PERM_FILE} \"folder:${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/python:\\n\")\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## permissions with digest\n\n#file (APPEND ${USER_ANONYMOUS_PERM_FILE} \"script:dataflow.py:563e69712cdd95e12749c30434bb8b7755a16523\\n\")\n\n#file (APPEND ${USER_ANONYMOUS_PERM_FILE} \"script:prod.py:563e69712cdd95e12749c30434bb8b7755a16523\\n\")\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# test:\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# install directives\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "versionBuild/version.cmake" : {
      "ObjectId" : "d6835e6d633b42984fefe80d19c3422214670669",
      "LastModified" : "2019-02-12T08:11:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# @file     version/version.cmake\n\n# @date     jan. 2016\n\n# @author   PhRG / opticalp.fr\n\n# @license  MIT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##\n\n# Generate build version information \n\n#\n\n#  - VERSION\n\n#  - BUILD_DATE\n\n#  - GIT_BRANCH\n\n# are set (as string)\n\n##\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# get VERSION\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# check if is a fork\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# copy VERSION_FROM_FILE to ROOT_VERSION\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# append git commit count since last VERSION_FILE modification\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# create list\n",
        "Line" : 76,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# count list items\n",
        "Line" : 78,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# create list (in place)\n",
        "Line" : 96,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# get remote URL\n",
        "Line" : 105,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# get build count\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# create with inc = 0\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# append count\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    }
  },
  "FileTypes" : {
    "CMAKE" : 8
  },
  "ElapsedTime" : 844
}