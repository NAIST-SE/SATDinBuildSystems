{
  "Repository" : "12179949",
  "Revision" : "HEAD",
  "ObjectId" : "b91d591c0268ece87f0e5fbb736b393bc49134ab",
  "CommitTime" : "2018-05-14T08:21:40Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "45f3949fd4fa4a9ff89fba3e40089c59c6504142",
      "LastModified" : "2018-01-24T19:47:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---------------------------------------------------\n\n# OpenMM MBPol Plugin\n\n#\n\n# Creates OpenMM MBPol plugin library, base name=OpenMMMBPol.\n\n#----------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We need to know where OpenMM is installed so we can access the headers and libraries.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Select where to install\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The source is organized into subdirectories, but we handle them all from\n\n# this CMakeLists file rather than letting CMake visit them as SUBDIRS.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Collect up information about the version of the OpenMM library we're building\n\n# and make it available to the code so it can be built into the binaries.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# These are all the places to search for header files which are to be part of the API.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Locate header files.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Collect up source files\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# empty\n",
        "Line" : 54,
        "CharPositionInLine" : 18
      },
      "9" : {
        "Text" : "#append\n",
        "Line" : 59,
        "CharPositionInLine" : 69
      },
      "10" : {
        "Text" : "## Make sure we find these locally before looking in OpenMM/include if\n\n## OpenMM was previously installed there.\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Create the library.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# install headers excluding headers in internal\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Enable testing\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Build the implementations for different platforms\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Build the Python API\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "examples/Simulate14WaterCluster/CMakeLists.txt" : {
      "ObjectId" : "0884d23f5cebefb7c42c7080103c6e2cf3858aab",
      "LastModified" : "2015-05-04T21:53:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set OpenMM install folder\r\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "platforms/cuda/CMakeLists.txt" : {
      "ObjectId" : "43bed12a646fb3bdb737e5755dd284dd348f1fec",
      "LastModified" : "2015-09-23T17:46:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---------------------------------------------------\n\n# OpenMM MBPol Plugin CUDA Platform\n\n#----------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Collect up information about the version of the OpenMM library we're building\n\n# and make it available to the code so it can be built into the binaries.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# These are all the places to search for header files which are\n\n# to be part of the API.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Locate header files.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# collect up source files\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# empty\n",
        "Line" : 25,
        "CharPositionInLine" : 18
      },
      "6" : {
        "Text" : "#append\n",
        "Line" : 30,
        "CharPositionInLine" : 65
      },
      "7" : {
        "Text" : "# Set variables needed for encoding kernel sources into a C++ class\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Create the library\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Ensure that links to the main CUDA library will be resolved.\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "platforms/cuda/EncodeCUDAFiles.cmake" : {
      "ObjectId" : "58285b0887ec6d33961feddc75b4ed90a74770e3",
      "LastModified" : "2015-09-23T17:46:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Load the file contents and process it.\n",
        "Line" : 6,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Replace all backslashes by double backslashes as they are being put in a C string.\n\n# Be careful not to replace the backslash before a semicolon as that is the CMAKE\n\n# internal escaping of a semicolon to prevent it from acting as a list seperator.\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Escape double quotes as being put in a C string.\n",
        "Line" : 12,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Split in separate C strings for each line.\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Determine a name for the variable that will contain this file's contents\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Record the variable declaration and definition.\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "platforms/cuda/tests/CMakeLists.txt" : {
      "ObjectId" : "f7a154fe06272b72c138d8f72151610c9b6cfa56",
      "LastModified" : "2016-03-28T20:20:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Testing\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Automatically create tests using files named \"Test*.cpp\"\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Link with shared library\n",
        "Line" : 12,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#ADD_TEST(${TEST_ROOT}Single ${EXECUTABLE_OUTPUT_PATH}/${TEST_ROOT} single)\n\n#ADD_TEST(${TEST_ROOT}Mixed ${EXECUTABLE_OUTPUT_PATH}/${TEST_ROOT} mixed)\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "platforms/reference/CMakeLists.txt" : {
      "ObjectId" : "de5ed8a2725f1b196bddae0ec158af7fade0281d",
      "LastModified" : "2015-09-23T17:46:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---------------------------------------------------\r\n\n# OpenMMMBPol REFERENCE Platform\r\n\n#----------------------------------------------------\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The source is organized into subdirectories, but we handle them all from\r\n\n# this CMakeLists file rather than letting CMake visit them as SUBDIRS.\r\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# These are all the places to search for header files which are\r\n\n# to be part of the API.\r\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Locate header files.\r\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# collect up source files\r\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# empty\r\n",
        "Line" : 26,
        "CharPositionInLine" : 18
      },
      "6" : {
        "Text" : "#append\r\n",
        "Line" : 31,
        "CharPositionInLine" : 65
      },
      "7" : {
        "Text" : "# Create the library\r\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "platforms/reference/tests/CMakeLists.txt" : {
      "ObjectId" : "f5f291b0b0e8e69083a50db42eb18577234780df",
      "LastModified" : "2015-09-23T17:46:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Testing\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Automatically create tests using files named \"Test*.cpp\"\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Link with shared library\n",
        "Line" : 10,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "python/CMakeLists.txt" : {
      "ObjectId" : "d8bcc2d89489f5a3a39bdc69fbf6904b57a2c678",
      "LastModified" : "2016-06-10T01:43:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Execute SWIG to generate source code for the Python module.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compile the Python module.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#copy python test files\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#copy pdb files for python tests\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#copy py.test infile\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "wrappers/CMakeLists.txt" : {
      "ObjectId" : "186cb399c3bfc8d5a2713fd650ef557ca9d19597",
      "LastModified" : "2015-09-23T17:46:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(GCCXML_EXTRA_ARGS \"\" CACHE STRING \"Additional arguments to gccxml, such as '--gccxml-compiler;msvc8'\")\n\n#SET(GCCXML_ARGS) # start empty\n\n#FOREACH(subdir ${API_INCLUDE_DIRS})\n\n#    SET(GCCXML_ARGS ${GCCXML_ARGS} -I${subdir})\n\n#ENDFOREACH(subdir)\n\n#SET(GCCXML_ARGS ${GCCXML_ARGS} ${GCCXML_EXTRA_ARGS})\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# OpenMMMBPol\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    }
  },
  "FileTypes" : {
    "CMAKE" : 9
  },
  "ElapsedTime" : 1267
}