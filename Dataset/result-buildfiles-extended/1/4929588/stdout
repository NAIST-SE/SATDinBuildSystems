{
  "Repository" : "4929588",
  "Revision" : "HEAD",
  "ObjectId" : "cf71d3631ba7df69505d4c88785ffa6919cd8648",
  "CommitTime" : "2018-01-24T10:24:50Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "587ccc2d546b26f4119b70cf85e4d4080e7eec3e",
      "LastModified" : "2016-04-14T19:17:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# CMake options\n\n# \n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMake version\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Include cmake modules\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set policies\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ENABLE CMP0028: Double colon in target name means ALIAS or IMPORTED target.\n\n# ENABLE CMP0054: Only interpret if() arguments as variables or keywords when unquoted.\n\n# ENABLE CMP0042: MACOSX_RPATH is enabled by default.\n\n# ENABLE CMP0063: Honor visibility properties for all target types.\n",
        "Line" : 17,
        "CharPositionInLine" : 24
      },
      "5" : {
        "Text" : "# \n\n# Project description and (meta) information\n\n# \n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Get git revision\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Meta information about the project\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# \n\n# Project configuration options\n\n# \n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Project options\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# \n\n# Declare project\n\n# \n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Generate folders for IDE targets (e.g., VisualStudio solutions)\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Declare project\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Set output directories\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Create version file\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# \n\n# Compiler settings and options\n\n# \n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# \n\n# Deployment/installation setup\n\n# \n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Get project name\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Check for system dir install\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Installation paths\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Install into the system (/usr/bin or /usr/local/bin)\n",
        "Line" : 101,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# /usr/[local]/share/<project>\n\n# /usr/[local]/share/<project>/cmake\n\n# /usr/[local]/share/<project>\n\n# /usr/[local]/share/<project>\n\n# /usr/[local]/bin\n\n# /usr/[local]/lib\n\n# /usr/[local]/lib\n\n# /usr/[local]/include\n\n# /usr/[local]/share/doc/<project>\n\n# /usr/[local]/share/applications\n\n# /usr/[local]/share/pixmaps\n\n# /etc/init (upstart init scripts)\n",
        "Line" : 102,
        "CharPositionInLine" : 52
      },
      "22" : {
        "Text" : "# Install into local directory\n",
        "Line" : 115,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# ./\n\n# ./cmake\n\n# ./\n\n# ./\n\n# ./\n\n# ./lib\n\n# ./lib\n\n# ./include\n\n# ./doc\n\n# ./misc\n\n# ./misc\n\n# ./misc\n",
        "Line" : 116,
        "CharPositionInLine" : 52
      },
      "24" : {
        "Text" : "# Set runtime path\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Add absolute path to all dependencies for BUILD\n\n# Use CMAKE_INSTALL_RPATH for INSTALL\n\n# Do NOT add path to dependencies for INSTALL\n",
        "Line" : 131,
        "CharPositionInLine" : 45
      },
      "26" : {
        "Text" : "# Find libraries relative to binary\n",
        "Line" : 136,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# \n\n# Project modules\n\n# \n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# \n\n# Deployment (global project files)\n\n# \n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Install version file\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Install cmake find script for the project\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Install the project meta files\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Install runtime data\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 33
    },
    "cmake/CompileOptions.cmake" : {
      "ObjectId" : "0fad45dc188c9cdee460ca21678ac4d466e2af1c",
      "LastModified" : "2016-03-15T16:58:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# Platform and architecture setup\n\n# \n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Get upper case system name\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Determine architecture (32/64 bit)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# \n\n# Project options\n\n# \n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Not available before CMake 3.1; see below for manual command line argument addition\n",
        "Line" : 22,
        "CharPositionInLine" : 33
      },
      "5" : {
        "Text" : "# \n\n# Include directories\n\n# \n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# \n\n# Libraries\n\n# \n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# \n\n# Compile definitions\n\n# \n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# MSVC compiler options\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Calling any one of the potentially unsafe methods in the Standard C++ Library\n\n# Calling any one of the potentially unsafe methods in the CRT Library\n",
        "Line" : 54,
        "CharPositionInLine" : 33
      },
      "10" : {
        "Text" : "# \n\n# Compile options\n\n# \n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# MSVC compiler options\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# -> build with multiple processes\n\n# -> warning level 4\n",
        "Line" : 69,
        "CharPositionInLine" : 22
      },
      "13" : {
        "Text" : "# /WX         # -> treat warnings as errors\n",
        "Line" : 71,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# -> disable warning: 'identifier': class 'type' needs to have dll-interface to be used by clients of class 'type2'\n\n# -> disable warning: 'identifier': symbol will be dynamically initialized (implementation limitation)\n",
        "Line" : 73,
        "CharPositionInLine" : 22
      },
      "15" : {
        "Text" : "# /wd4201     # -> disable warning: nonstandard extension used: nameless struct/union (caused by GLM)\n\n# /wd4127     # -> disable warning: conditional expression is constant (caused by Qt)\n",
        "Line" : 75,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "#$<$<CONFIG:Debug>:\n\n#/RTCc         # -> value is assigned to a smaller data type and results in a data loss\n\n#>\n",
        "Line" : 78,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# -> whole program global optimization\n\n# -> buffer security check: no \n\n# -> whole program optimization: enable link-time code generation (disables Zi)\n\n# -> enable string pooling\n",
        "Line" : 83,
        "CharPositionInLine" : 22
      },
      "18" : {
        "Text" : "# No manual c++11 enable for MSVC as all supported MSVC versions for cmake-init have C++11 implicitly enabled (MSVC >=2013)\n",
        "Line" : 89,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# GCC and Clang compiler options\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Required for CMake < 3.1; should be removed if minimum required CMake version is raised.\n",
        "Line" : 129,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "# \n\n# Linker options\n\n# \n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Use pthreads on mingw and linux\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "cmake/ComponentInstall.cmake" : {
      "ObjectId" : "8606060cfa7501481e643d4ee72537b948416ecf",
      "LastModified" : "2016-03-15T16:58:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Execute cmake_install.cmake wrapper that allows to pass both DESTDIR and COMPONENT environment variable\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Custom.cmake" : {
      "ObjectId" : "8b1ff5ed9d8c143c72de13d4816b01568b896e6f",
      "LastModified" : "2016-03-15T16:58:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set policy if policy is available\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define function \"source_group_by_path with three mandatory arguments (PARENT_PATH, REGEX, GROUP, ...)\n\n# to group source files in folders (e.g. for MSVC solutions).\n\n#\n\n# Example:\n\n# source_group_by_path(\"${CMAKE_CURRENT_SOURCE_DIR}/src\" \"\\\\\\\\.h$|\\\\\\\\.hpp$|\\\\\\\\.cpp$|\\\\\\\\.c$|\\\\\\\\.ui$|\\\\\\\\.qrc$\" \"Source Files\" ${sources})\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Function that extract entries matching a given regex from a list.\n\n# ${OUTPUT} will store the list of matching filenames.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/GetGitRevisionDescription.cmake" : {
      "ObjectId" : "72426cbf0e5b51636fd31be703d74069bda1d309",
      "LastModified" : "2016-03-15T16:58:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Returns a version string from Git\n\n#\n\n# These functions force a re-configure on each git commit so that you can\n\n# trust the values of the variables in your build system.\n\n#\n\n#  get_git_head_revision(<refspecvar>; <hashvar>; [<additional arguments to git describe>; ...])\n\n#\n\n# Returns the refspec and sha hash of the current head revision\n\n#\n\n#  git_describe(<var>; [<additional arguments to git describe&gt; ...])\n\n#\n\n# Returns the results of git describe on the source tree, and adjusting\n\n# the output so that it tests false if an error occurs.\n\n#\n\n#  git_get_exact_tag(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe --exact-match on the source tree,\n\n# and adjusting the output so that it tests false if there was no exact\n\n# matching tag.\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We must run the following at \"include\" time, not at function call time,\n\n# to find the path to this module rather than the path to a calling list file\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# .git dir not found\n",
        "Line" : 46,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# common case\n",
        "Line" : 53,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# submodule case\n",
        "Line" : 56,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# TODO sanitize\n\n#if((${ARGN}\" MATCHES \"&&\") OR\n\n#   (ARGN MATCHES \"||\") OR\n\n#   (ARGN MATCHES \"\\\\;\"))\n\n#   message(\"Please report the following error to the project!\")\n\n#   message(FATAL_ERROR \"Looks like someone's doing something nefarious with git_describe! Passed arguments ${ARGN}\")\n\n#endif()\n",
        "Line" : 99,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#message(STATUS \"Arguments to execute_process: ${ARGN}\")\n",
        "Line" : 107,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "cmake/RuntimeDependencies.cmake" : {
      "ObjectId" : "7568b2744017a1517010224f9c15d2a998c51a28",
      "LastModified" : "2016-03-15T16:58:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# Default dependencies for the runtime-package\n\n# \n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Install 3rd-party runtime dependencies into runtime-component\n\n# install(FILES ... COMPONENT runtime)\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# \n\n# Full dependencies for self-contained packages\n\n# \n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Install 3rd-party runtime dependencies into runtime-component\n\n# install(FILES ... COMPONENT runtime)\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "deploy/CMakeLists.txt" : {
      "ObjectId" : "52f18c94fdb9fe906d0fd1a912b8e22be8e911a9",
      "LastModified" : "2016-03-15T16:58:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# Target 'pack'\n\n# \n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Install additional runtime dependencies\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# \n\n# Packages\n\n# \n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Target 'component_install'\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deploy/packages/pack-libzeug.cmake" : {
      "ObjectId" : "f98332cac534ff12b38bba14372e98aed7426561",
      "LastModified" : "2016-03-15T16:58:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# Check if cpack is available\n\n# \n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# \n\n# Output packages\n\n# \n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Windows installer\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# System installation packages for unix systems\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#elseif(\"${CMAKE_SYSTEM_NAME}\" MATCHES \"Darwin\")\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# MacOS X disk image\n\n# At the moment, DMG generator and CPACK_INCLUDE_TOPLEVEL_DIRECTORY=ON do not work together.\n\n# Therefore, we disable dmg images for MacOS until we've found a solution\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#   set(OPTION_PACK_GENERATOR \"DragNDrop\" CACHE STRING \"Package targets\")\n\n#   set(PACK_COMPONENT_INSTALL OFF)\n\n#   set(PACK_INCLUDE_TOPDIR ON)\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Default (portable package for any platform)\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# \n\n# Package components\n\n# \n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# \n\n# Initialize CPack\n\n# \n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Reset CPack configuration\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Find cpack executable\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Set install prefix\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Package project\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Name of package project\n\n# Name of root project that is to be installed\n",
        "Line" : 105,
        "CharPositionInLine" : 41
      },
      "15" : {
        "Text" : "# Package information\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Package specific options\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# \n\n# Package information\n\n# \n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# \n\n# NSIS package\n\n# \n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Fix icon path\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# NOTE: for using MUI (UN)WELCOME images we suggest to replace nsis defaults,\n\n# since there is currently no way to do so without manipulating the installer template (which we won't).\n\n# http://public.kitware.com/pipermail/cmake-developers/2013-January/006243.html\n",
        "Line" : 145,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# SO the following only works for the installer icon, not for the welcome image.\n",
        "Line" : 149,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# NSIS requires \"\\\\\" - escaped backslash to work properly. We probably won't rely on this feature, \n\n# so just replacing / with \\\\ manually.\n",
        "Line" : 151,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "#file(TO_NATIVE_PATH \"${CPACK_PACKAGE_ICON}\" CPACK_PACKAGE_ICON) \n",
        "Line" : 154,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# Fix installation path for x64 builds\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# http://public.kitware.com/Bug/view.php?id=9094\n",
        "Line" : 160,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# Package options\n\n#set(CPACK_NSIS_DISPLAY_NAME \"${package_name}-${META_VERSION}\")\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Optional Preliminaries (i.e., silent Visual Studio Redistributable install)\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# \n\n# Debian package\n\n# \n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#set(CPACK_DEBIAN_PACKAGE_DEPENDS       \"libc6 (>= 2.3.1-6), libgcc1 (>= 1:3.4.2-12)\")\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#set(CPACK_DEBIAN_PACKAGE_RECOMMENDS    \"\")\n\n#set(CPACK_DEBIAN_PACKAGE_SUGGESTS      \"\")\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# \n\n# RPM package\n\n# \n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#set(CPACK_RPM_SPEC_INSTALL_POST                      \"\")\n\n#set(CPACK_RPM_SPEC_MORE_DEFINE                       \"\")\n\n#set(CPACK_RPM_USER_BINARY_SPECFILE                   \"\")\n\n#set(CPACK_RPM_GENERATE_USER_BINARY_SPECFILE_TEMPLATE \"\")\n\n#set(CPACK_RPM_<POST/PRE>_<UN>INSTALL_SCRIPT_FILE     \"\")\n\n#set(CPACK_RPM_PACKAGE_DEBUG                          1)\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# \n\n# Archives (zip, tgz, ...)\n\n# \n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# \n\n# Execute CPack\n\n# \n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# \n\n# Package target\n\n# \n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Create target\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Set dependencies\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 38
    },
    "docs/CMakeLists.txt" : {
      "ObjectId" : "7bb7ed018c8d093f7ff815c1fdd31f65f90c2b21",
      "LastModified" : "2016-03-15T16:58:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# Target 'docs'\n\n# \n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# \n\n# Documentation\n\n# \n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "docs/api-docs/CMakeLists.txt" : {
      "ObjectId" : "22c2962556cac0f04920409a1b0c0c206e0b6117",
      "LastModified" : "2016-03-15T16:58:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# Find doxygen\n\n# \n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# \n\n# Target name\n\n# \n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# \n\n# Input file\n\n# \n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# \n\n# Create documentation\n\n# \n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set project variables\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Get filename and path of doxyfile\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Configure doxyfile (if it is a real doxyfile already, it should simply copy the file)\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Invoke doxygen\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# ToDO, configure doxygen to use source as is\n",
        "Line" : 53,
        "CharPositionInLine" : 89
      },
      "9" : {
        "Text" : "# Declare target\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# \n\n# Deployment\n\n# \n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "docs/manual/CMakeLists.txt" : {
      "ObjectId" : "607499ee9ab8b5f58a335aeb1f9db641bee88a8e",
      "LastModified" : "2016-03-15T16:58:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# Find LaTeX\n\n# \n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# \n\n# Target name\n\n# \n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# \n\n# Input and output files\n\n# \n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# \n\n# Create documentation\n\n# \n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Invoke LaTeX\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Declare target\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# \n\n# Deployment\n\n# \n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# PDF file\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "libzeug-config.cmake" : {
      "ObjectId" : "d1040d860763eedcf3e3dc683a7bc92ccece01c4",
      "LastModified" : "2016-11-10T14:35:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This config script tries to locate the project either in its source tree\n\n# of from an install location.\n\n# \n\n# Please adjust the list of submodules to search for.\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# List of modules\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Macro to search for a specific module\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Macro to search for all modules\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Try install location\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Try common build locations\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "source/CMakeLists.txt" : {
      "ObjectId" : "4d87b7385abff8daca98db7b6c99304062c40756",
      "LastModified" : "2016-03-15T16:58:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# Configuration for all sub-projects\n\n# \n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Generate version-header\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# \n\n# Sub-projects\n\n# \n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Libraries\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Examples\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Tests\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# \n\n# Deployment\n\n# \n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Deploy generated headers\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "source/examples/CMakeLists.txt" : {
      "ObjectId" : "3cd9daebd9b694c0bcbba1e7e6699419719ac26f",
      "LastModified" : "2016-03-15T16:58:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check if examples are enabled\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Example applications\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "source/examples/logging/CMakeLists.txt" : {
      "ObjectId" : "817c4de35b3c3b456fbbeab0171d12b17dbf000c",
      "LastModified" : "2016-03-15T16:58:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# External dependencies\n\n# \n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# \n\n# Executable name and options\n\n# \n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Target name\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Exit here if required dependencies are not met\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# \n\n# Sources\n\n# \n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# \n\n# Create executable\n\n# \n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build executable\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Create namespaced alias\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# \n\n# Project options\n\n# \n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# \n\n# Include directories\n\n# \n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# \n\n# Libraries\n\n# \n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# \n\n# Compile definitions\n\n# \n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# \n\n# Compile options\n\n# \n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# \n\n# Linker options\n\n# \n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# \n\n# Deployment\n\n# \n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Executable\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "source/examples/properties/CMakeLists.txt" : {
      "ObjectId" : "4df5802a086bb35b61dd309cf6208167614759ff",
      "LastModified" : "2016-03-15T16:58:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# External dependencies\n\n# \n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# \n\n# Executable name and options\n\n# \n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Target name\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Exit here if required dependencies are not met\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# \n\n# Sources\n\n# \n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# \n\n# Create executable\n\n# \n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build executable\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Create namespaced alias\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# \n\n# Project options\n\n# \n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# \n\n# Include directories\n\n# \n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# \n\n# Libraries\n\n# \n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# \n\n# Compile definitions\n\n# \n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# \n\n# Compile options\n\n# \n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# \n\n# Linker options\n\n# \n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# \n\n# Deployment\n\n# \n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Executable\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "source/examples/propertyeditors/CMakeLists.txt" : {
      "ObjectId" : "9b3e71f93d122d386cde03cb5e2362d31216090e",
      "LastModified" : "2016-03-15T16:58:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# External dependencies\n\n# \n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# \n\n# Executable name and options\n\n# \n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Target name\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Exit here if required dependencies are not met\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# \n\n# Sources\n\n# \n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# \n\n# Create executable\n\n# \n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build executable\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Create namespaced alias\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# \n\n# Project options\n\n# \n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# \n\n# Include directories\n\n# \n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# \n\n# Libraries\n\n# \n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# \n\n# Compile definitions\n\n# \n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# \n\n# Compile options\n\n# \n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# \n\n# Linker options\n\n# \n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# \n\n# Deployment\n\n# \n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Executable\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "source/examples/propertygui/CMakeLists.txt" : {
      "ObjectId" : "0a14799d4747c6859c04464de80b8b36f4a53ac1",
      "LastModified" : "2016-03-15T16:58:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# External dependencies\n\n# \n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# \n\n# Executable name and options\n\n# \n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Target name\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Exit here if required dependencies are not met\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# \n\n# Sources\n\n# \n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# \n\n# Create executable\n\n# \n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build executable\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Create namespaced alias\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# \n\n# Project options\n\n# \n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# \n\n# Include directories\n\n# \n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# \n\n# Libraries\n\n# \n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# \n\n# Compile definitions\n\n# \n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# \n\n# Compile options\n\n# \n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# \n\n# Linker options\n\n# \n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# \n\n# Deployment\n\n# \n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Executable\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "source/examples/script/CMakeLists.txt" : {
      "ObjectId" : "678a2bd53aecf26bcf7b024871e56ab77efcda6d",
      "LastModified" : "2016-03-15T16:58:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# External dependencies\n\n# \n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# \n\n# Executable name and options\n\n# \n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Target name\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Exit here if required dependencies are not met\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# \n\n# Sources\n\n# \n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# \n\n# Create executable\n\n# \n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build executable\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Create namespaced alias\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# \n\n# Project options\n\n# \n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# \n\n# Include directories\n\n# \n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# \n\n# Libraries\n\n# \n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# \n\n# Compile definitions\n\n# \n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# \n\n# Compile options\n\n# \n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# \n\n# Linker options\n\n# \n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# \n\n# Deployment\n\n# \n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Executable\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "source/examples/type/CMakeLists.txt" : {
      "ObjectId" : "496b5314fcd4fb1fa254d2400bd5f020fa7c4b63",
      "LastModified" : "2016-03-15T16:58:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# External dependencies\n\n# \n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# \n\n# Executable name and options\n\n# \n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Target name\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Exit here if required dependencies are not met\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# \n\n# Sources\n\n# \n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# \n\n# Create executable\n\n# \n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build executable\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Create namespaced alias\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# \n\n# Project options\n\n# \n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# \n\n# Include directories\n\n# \n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# \n\n# Libraries\n\n# \n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# \n\n# Compile definitions\n\n# \n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# \n\n# Compile options\n\n# \n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# \n\n# Linker options\n\n# \n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# \n\n# Deployment\n\n# \n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Executable\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "source/examples/variant/CMakeLists.txt" : {
      "ObjectId" : "fc897466b8fd1f3b0ff61ec5fc74ab9194ae327d",
      "LastModified" : "2016-03-15T16:58:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# External dependencies\n\n# \n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# \n\n# Executable name and options\n\n# \n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Target name\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Exit here if required dependencies are not met\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# \n\n# Sources\n\n# \n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# \n\n# Create executable\n\n# \n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build executable\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Create namespaced alias\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# \n\n# Project options\n\n# \n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# \n\n# Include directories\n\n# \n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# \n\n# Libraries\n\n# \n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# \n\n# Compile definitions\n\n# \n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# \n\n# Compile options\n\n# \n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# \n\n# Linker options\n\n# \n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# \n\n# Deployment\n\n# \n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Executable\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "source/examples/widget/CMakeLists.txt" : {
      "ObjectId" : "28b4da0f34ca19a85bd16ebe3e0dbbc6024f9a95",
      "LastModified" : "2016-03-15T16:58:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# External dependencies\n\n# \n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# \n\n# Executable name and options\n\n# \n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Target name\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Exit here if required dependencies are not met\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# \n\n# Sources\n\n# \n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# \n\n# Create executable\n\n# \n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build executable\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Create namespaced alias\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# \n\n# Project options\n\n# \n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# \n\n# Include directories\n\n# \n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# \n\n# Libraries\n\n# \n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# \n\n# Compile definitions\n\n# \n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# \n\n# Compile options\n\n# \n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# \n\n# Linker options\n\n# \n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# \n\n# Deployment\n\n# \n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Executable\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "source/iozeug/CMakeLists.txt" : {
      "ObjectId" : "c76283908ca8af49751cd471a909730d3662b34c",
      "LastModified" : "2016-11-11T11:39:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# External dependencies\n\n# \n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# \n\n# Library name and options\n\n# \n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Target name\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Exit here if required dependencies are not met\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set API export file and macro\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# \n\n# Sources\n\n# \n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Group source files\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# \n\n# Create library\n\n# \n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Build library\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Create namespaced alias\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Export library for downstream projects\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Create API export header\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# \n\n# Project options\n\n# \n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# \n\n# Include directories\n\n# \n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# \n\n# Libraries\n\n# \n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# \n\n# Compile definitions\n\n# \n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# \n\n# Compile options\n\n# \n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# \n\n# Linker options\n\n# \n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# \n\n# Deployment\n\n# \n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Library\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Header files\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Generated header files\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# CMake config\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "source/loggingzeug/CMakeLists.txt" : {
      "ObjectId" : "cf10fc5eb73be99919c1c0d7b8449bcf855f9072",
      "LastModified" : "2016-03-15T16:58:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# External dependencies\n\n# \n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# \n\n# Library name and options\n\n# \n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Target name\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Exit here if required dependencies are not met\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set API export file and macro\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# \n\n# Sources\n\n# \n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Group source files\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# \n\n# Create library\n\n# \n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Build library\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Create namespaced alias\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Export library for downstream projects\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Create API export header\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# \n\n# Project options\n\n# \n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# \n\n# Include directories\n\n# \n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# \n\n# Libraries\n\n# \n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# \n\n# Compile definitions\n\n# \n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# \n\n# Compile options\n\n# \n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# \n\n# Linker options\n\n# \n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# \n\n# Deployment\n\n# \n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Library\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Header files\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Generated header files\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# CMake config\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "source/propertyguizeug/CMakeLists.txt" : {
      "ObjectId" : "a285c8c5bc6c8e20da394ccd21a9a9af7454e209",
      "LastModified" : "2016-03-15T16:58:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# External dependencies\n\n# \n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Enable automoc\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ENABLE CMP0020: Automatically link Qt executables to qtmain target on Windows.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# \n\n# Library name and options\n\n# \n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Target name\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Exit here if required dependencies are not met\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set API export file and macro\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# \n\n# Sources\n\n# \n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Group source files\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# \n\n# Create library\n\n# \n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Build library\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Create namespaced alias\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Export library for downstream projects\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Create API export header\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# \n\n# Project options\n\n# \n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# \n\n# Include directories\n\n# \n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# \n\n# Libraries\n\n# \n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# \n\n# Compile definitions\n\n# \n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# \n\n# Compile options\n\n# \n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# \n\n# Linker options\n\n# \n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# \n\n# Deployment\n\n# \n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Library\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Header files\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Generated header files\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# CMake config\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "source/reflectionzeug/CMakeLists.txt" : {
      "ObjectId" : "9fa265c747b52f56128bd7e27f9fde99f2aaa1d5",
      "LastModified" : "2016-03-15T16:58:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# External dependencies\n\n# \n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# \n\n# Library name and options\n\n# \n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Target name\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Exit here if required dependencies are not met\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set API export file and macro\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# \n\n# Sources\n\n# \n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Group source files\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# \n\n# Create library\n\n# \n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Build library\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Create namespaced alias\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Export library for downstream projects\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Create API export header\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# \n\n# Project options\n\n# \n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# \n\n# Include directories\n\n# \n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# \n\n# Libraries\n\n# \n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# \n\n# Compile definitions\n\n# \n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# \n\n# Compile options\n\n# \n",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# \n\n# Linker options\n\n# \n",
        "Line" : 271,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# \n\n# Deployment\n\n# \n",
        "Line" : 285,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Library\n",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Header files\n",
        "Line" : 297,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Generated header files\n",
        "Line" : 303,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# CMake config\n",
        "Line" : 309,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "source/scriptzeug/CMakeLists.txt" : {
      "ObjectId" : "9efda2e60012ce499e3919d16e18546ee979b140",
      "LastModified" : "2016-03-15T16:58:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# External dependencies\n\n# \n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# \n\n# Library name and options\n\n# \n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Target name\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Exit here if required dependencies are not met\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set API export file and macro\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# \n\n# Sources\n\n# \n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Group source files\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# \n\n# Create library\n\n# \n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Build library\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Create namespaced alias\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Export library for downstream projects\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Create API export header\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# \n\n# Project options\n\n# \n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# \n\n# Include directories\n\n# \n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# \n\n# Libraries\n\n# \n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# \n\n# Compile definitions\n\n# \n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# \n\n# Compile options\n\n# \n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# \n\n# Linker options\n\n# \n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# \n\n# Deployment\n\n# \n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Library\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Header files\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Generated header files\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# CMake config\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "source/signalzeug/CMakeLists.txt" : {
      "ObjectId" : "109a743fc88e1425bfc299f32861b822946b70d7",
      "LastModified" : "2016-03-15T16:58:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# External dependencies\n\n# \n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# \n\n# Library name and options\n\n# \n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Target name\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Exit here if required dependencies are not met\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set API export file and macro\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# \n\n# Sources\n\n# \n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Group source files\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# \n\n# Create library\n\n# \n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Build library\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Create namespaced alias\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Export library for downstream projects\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Create API export header\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# \n\n# Project options\n\n# \n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# \n\n# Include directories\n\n# \n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# \n\n# Libraries\n\n# \n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# \n\n# Compile definitions\n\n# \n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# \n\n# Compile options\n\n# \n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# \n\n# Linker options\n\n# \n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# \n\n# Deployment\n\n# \n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Library\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Header files\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Generated header files\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# CMake config\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "source/stringzeug/CMakeLists.txt" : {
      "ObjectId" : "59dd729257d7c36e2d9de7e5c766bd09e1fe5f8e",
      "LastModified" : "2017-07-25T11:34:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# External dependencies\n\n# \n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# \n\n# Library name and options\n\n# \n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Target name\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Exit here if required dependencies are not met\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set API export file and macro\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# \n\n# Sources\n\n# \n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Group source files\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# \n\n# Create library\n\n# \n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Build library\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Create namespaced alias\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Export library for downstream projects\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Create API export header\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# \n\n# Project options\n\n# \n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# \n\n# Include directories\n\n# \n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# \n\n# Libraries\n\n# \n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# \n\n# Compile definitions\n\n# \n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# \n\n# Compile options\n\n# \n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# \n\n# Linker options\n\n# \n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# \n\n# Deployment\n\n# \n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Library\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Header files\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Generated header files\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# CMake config\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "source/tests/CMakeLists.txt" : {
      "ObjectId" : "2df839d220870f6cea317c4b538a5524faec0215",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# Setup test environment\n\n# \n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check if tests are enabled\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# DISABLE CMP0037: Target names should not be reserved and should match a validity pattern.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Function: Build test and add command to execute it via target 'test'\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Build gmock\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Create interface library to link against gmock\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# \n\n# Target 'test'\n\n# \n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# \n\n# Tests\n\n# \n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# add_test_without_ctest(scriptzeug-test)\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "source/tests/googletest/CMakeLists.txt" : {
      "ObjectId" : "8d2b552ef7ad9f18d6d3293efedfea7c9964324f",
      "LastModified" : "2016-03-15T16:58:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Note that googlemock target already builds googletest\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/tests/googletest/googlemock/CMakeLists.txt" : {
      "ObjectId" : "8135537009d54e6f237dbe6c1b0c22dd1719e509",
      "LastModified" : "2016-03-15T16:58:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# CMake build script for Google Mock.\n\n#\n\n# To run the tests for Google Mock itself on Linux, use 'make test' or\n\n# ctest.  You can select which tests to run using 'ctest -R regex'.\n\n# For more options, run 'ctest --help'.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BUILD_SHARED_LIBS is a standard CMake variable, but we declare it here to\n\n# make it prominent in the GUI.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# A directory to find Google Test sources.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Defines pre_project_set_up_hermetic_build() and set_up_hermetic_build().\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Google Test also calls hermetic setup functions from add_subdirectory,\n\n# although its changes will not affect things at the current scope.\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "########################################################################\n\n#\n\n# Project-wide settings\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Name of the project.\n\n#\n\n# CMake files in this project can refer to the root source directory\n\n# as ${gmock_SOURCE_DIR} and to the root binary directory as\n\n# ${gmock_BINARY_DIR}.\n\n# Language \"C\" is required for find_package(Threads).\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Instructs CMake to process Google Test's CMakeLists.txt and add its\n\n# targets to the current scope.  We are placing Google Test's binary\n\n# directory in a subdirectory of our own as VC compilation may break\n\n# if they are the same (the default).\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Although Google Test's CMakeLists.txt calls this function, the\n\n# changes there don't affect the current scope.  Therefore we have to\n\n# call it again here.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# from ${gtest_dir}/cmake/internal_utils.cmake\n",
        "Line" : 57,
        "CharPositionInLine" : 30
      },
      "10" : {
        "Text" : "# Adds Google Mock's and Google Test's header directories to the search path.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# This directory is needed to build directly from Google\n\n# Test sources.\n",
        "Line" : 63,
        "CharPositionInLine" : 20
      },
      "12" : {
        "Text" : "# Summary of tuple support for Microsoft Visual Studio:\n\n# Compiler    version(MS)  version(cmake)  Support\n\n# ----------  -----------  --------------  -----------------------------\n\n# <= VS 2010  <= 10        <= 1600         Use Google Tests's own tuple.\n\n# VS 2012     11           1700            std::tr1::tuple + _VARIADIC_MAX=10\n\n# VS 2013     12           1800            std::tr1::tuple\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "########################################################################\n\n#\n\n# Defines the gmock & gmock_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Google Mock libraries.  We build them using more strict warnings than what\n\n# are used for other targets, to ensure that Google Mock can be compiled by\n\n# a user aggressive about warnings.\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "########################################################################\n\n#\n\n# Google Mock's own tests.\n\n#\n\n# You can skip this section if you aren't interested in testing\n\n# Google Mock itself.\n\n#\n\n# The tests are not built by default.  To build them, set the\n\n# gmock_build_tests option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgmock_build_tests=ON flag when running cmake.\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# This must be set in the root directory for the tests to be run by\n\n# 'make test' or ctest.\n",
        "Line" : 113,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "############################################################\n\n# C++ tests built with standard compiler flags.\n",
        "Line" : 117,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# gmock_all_test is commented to save time building and running tests.\n\n# Uncomment if necessary.\n\n# cxx_test(gmock_all_test gmock_main)\n",
        "Line" : 140,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "############################################################\n\n# C++ tests built with non-standard compiler flags.\n",
        "Line" : 144,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# 1600 is Visual Studio 2010.\n",
        "Line" : 153,
        "CharPositionInLine" : 43
      },
      "21" : {
        "Text" : "# Visual Studio 2010, 2012, and 2013 define symbols in std::tr1 that\n\n# conflict with our own definitions. Therefore using our own tuple does not\n\n# work on those compilers.\n",
        "Line" : 154,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Tests that a binary can be built with Google Mock as a shared library.  On\n\n# some system configurations, it may not possible to run the binary without\n\n# knowing more details about the system configurations. We do not try to run\n\n# this binary. To get a more robust shared library coverage, configure with\n\n# -DBUILD_SHARED_LIBS=ON.\n",
        "Line" : 173,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "############################################################\n\n# Python tests.\n",
        "Line" : 184,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 24
    },
    "source/tests/googletest/googlemock/Makefile.am" : {
      "ObjectId" : "9adbc5163dd7191a14a887a384fb5d6d2956b44d",
      "LastModified" : "2016-03-15T16:58:48Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Automake file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Nonstandard package files for distribution.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We may need to build our internally packaged gtest. If so, it will be\n\n# included in the 'subdirs' variable.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This is generated by the configure script, so clean it for distribution.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# We define the global AM_CPPFLAGS as everything we compile includes from these\n\n# directories.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Modifies compiler and linker flags for pthreads compatibility.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build rules for libraries.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Build rules for tests. Automake's naming for some of these variables isn't\n\n# terribly obvious, so this is a brief reference:\n\n#\n\n# TESTS -- Programs run automatically by \"make check\"\n\n# check_PROGRAMS -- Programs built by \"make check\" but not necessarily run\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# This exercises all major components of Google Mock.  It also\n\n# verifies that libgmock works.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# This tests using Google Mock in multiple translation units.  It also\n\n# verifies that libgmock_main and libgmock work.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Tests that fused gmock files compile and work.\n",
        "Line" : 81,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Google Mock source files that we don't compile directly.\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# C++ tests that we don't compile using autotools.\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Python tests, which we don't run using autotools.\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Nonstandard package files for distribution.\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Pump scripts for generating Google Mock headers.\n\n# TODO(chandlerc@google.com): automate the generation of *.h from *.h.pump.\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Script for fusing Google Mock and Google Test source files.\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# The Google Mock Generator tool from the cppclean project.\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Script for diagnosing compiler errors in programs that use Google\n\n# Mock.\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# CMake scripts.\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Microsoft Visual Studio 2005 projects.\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Microsoft Visual Studio 2010 projects.\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# gmock_test.cc does not really depend on files generated by the\n\n# fused-gmock-internal rule.  However, gmock_test.o does, and it is\n\n# important to include test/gmock_test.cc as part of this rule in order to\n\n# prevent compiling gmock_test.o until all dependent files have been\n\n# generated.\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# TODO(vladl@google.com): Find a way to add Google Tests's sources here.\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Death tests may produce core dumps in the build directory. In case\n\n# this happens, clean them to keep distcleancheck happy.\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Disables 'make install' as installing a compiled version of Google\n\n# Mock can lead to undefined behavior due to violation of the\n\n# One-Definition Rule.\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 26
    },
    "source/tests/googletest/googlemock/make/Makefile" : {
      "ObjectId" : "c1cc0e90f172b9f6a48fa9f74d72342d1d2e2585",
      "LastModified" : "2016-03-15T16:58:48Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# A sample Makefile for building both Google Mock and Google Test and\n\n# using them in user tests.  This file is self-contained, so you don't\n\n# need to use the Makefile in Google Test's source tree.  Please tweak\n\n# it to suit your environment and project.  You may want to move it to\n\n# your project's root directory.\n\n#\n\n# SYNOPSIS:\n\n#\n\n#   make [all]  - makes everything.\n\n#   make TARGET - makes the given target.\n\n#   make clean  - removes all files generated by make.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Please tweak the following variable definitions as needed by your\n\n# project, except GMOCK_HEADERS and GTEST_HEADERS, which you can use\n\n# in your own targets but shouldn't modify.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Points to the root of Google Test, relative to where this file is.\n\n# Remember to tweak this if you move this file, or if you want to use\n\n# a copy of Google Test at a different location.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Points to the root of Google Mock, relative to where this file is.\n\n# Remember to tweak this if you move this file.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Where to find user code.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Flags passed to the preprocessor.\n\n# Set Google Test and Google Mock's header directories as system\n\n# directories, such that the compiler doesn't generate warnings in\n\n# these headers.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Flags passed to the C++ compiler.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# All tests produced by this Makefile.  Remember to add new tests you\n\n# created to the list.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# All Google Test headers.  Usually you shouldn't change this\n\n# definition.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# All Google Mock headers. Note that all Google Test headers are\n\n# included here too, as they are #included by Google Mock headers.\n\n# Usually you shouldn't change this definition.\t\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# House-keeping build targets.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Builds gmock.a and gmock_main.a.  These libraries contain both\n\n# Google Mock and Google Test.  A test should link with either gmock.a\n\n# or gmock_main.a, depending on whether it defines its own main()\n\n# function.  It's fine if your test only uses features from Google\n\n# Test (and not Google Mock).\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Usually you shouldn't tweak such internal variables, indicated by a\n\n# trailing _.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# For simplicity and to avoid depending on implementation details of\n\n# Google Mock and Google Test, the dependencies specified below are\n\n# conservative and not optimized.  This is fine as Google Mock and\n\n# Google Test compile fast and for ordinary users their source rarely\n\n# changes.\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Builds a sample test.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "source/tests/googletest/googletest/CMakeLists.txt" : {
      "ObjectId" : "dd9b274592c687c6587285d8247f9d2253515311",
      "LastModified" : "2016-03-15T16:58:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# CMake build script for Google Test.\n\n#\n\n# To run the tests for Google Test itself on Linux, use 'make test' or\n\n# ctest.  You can select which tests to run using 'ctest -R regex'.\n\n# For more options, run 'ctest --help'.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BUILD_SHARED_LIBS is a standard CMake variable, but we declare it here to\n\n# make it prominent in the GUI.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# When other libraries are using a shared version of runtime libraries,\n\n# Google Test also has to use one.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Defines pre_project_set_up_hermetic_build() and set_up_hermetic_build().\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "########################################################################\n\n#\n\n# Project-wide settings\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Name of the project.\n\n#\n\n# CMake files in this project can refer to the root source directory\n\n# as ${gtest_SOURCE_DIR} and to the root binary directory as\n\n# ${gtest_BINARY_DIR}.\n\n# Language \"C\" is required for find_package(Threads).\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define helper functions and macros used by Google Test.\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Defined in internal_utils.cmake.\n",
        "Line" : 63,
        "CharPositionInLine" : 30
      },
      "8" : {
        "Text" : "# Where Google Test's .h files can be found.\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Where Google Test's libraries can be found.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Summary of tuple support for Microsoft Visual Studio:\n\n# Compiler    version(MS)  version(cmake)  Support\n\n# ----------  -----------  --------------  -----------------------------\n\n# <= VS 2010  <= 10        <= 1600         Use Google Tests's own tuple.\n\n# VS 2012     11           1700            std::tr1::tuple + _VARIADIC_MAX=10\n\n# VS 2013     12           1800            std::tr1::tuple\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "########################################################################\n\n#\n\n# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Google Test libraries.  We build them using more strict warnings than what\n\n# are used for other targets, to ensure that gtest can be compiled by a user\n\n# aggressive about warnings.\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "########################################################################\n\n#\n\n# Install rules\n\n#install(TARGETS gtest gtest_main\n\n#  DESTINATION lib)\n\n#install(DIRECTORY ${gtest_SOURCE_DIR}/include/gtest\n\n#  DESTINATION include)\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "########################################################################\n\n#\n\n# Samples on how to link user tests with gtest or gtest_main.\n\n#\n\n# They are not built by default.  To build them, set the\n\n# gtest_build_samples option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_samples=ON flag when running cmake.\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "########################################################################\n\n#\n\n# Google Test's own tests.\n\n#\n\n# You can skip this section if you aren't interested in testing\n\n# Google Test itself.\n\n#\n\n# The tests are not built by default.  To build them, set the\n\n# gtest_build_tests option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_tests=ON flag when running cmake.\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# This must be set in the root directory for the tests to be run by\n\n# 'make test' or ctest.\n",
        "Line" : 140,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "############################################################\n\n# C++ tests built with standard compiler flags.\n",
        "Line" : 144,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "############################################################\n\n# C++ tests built with non-standard compiler flags.\n",
        "Line" : 175,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 178,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# 1600 is Visual Studio 2010.\n",
        "Line" : 207,
        "CharPositionInLine" : 43
      },
      "21" : {
        "Text" : "# Visual Studio 2010, 2012, and 2013 define symbols in std::tr1 that\n\n# conflict with our own definitions. Therefore using our own tuple does not\n\n# work on those compilers.\n",
        "Line" : 208,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "############################################################\n\n# Python tests.\n",
        "Line" : 222,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Visual Studio .NET 2003 does not support STL with exceptions disabled.\n",
        "Line" : 228,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# 1310 is Visual Studio .NET 2003\n",
        "Line" : 229,
        "CharPositionInLine" : 46
      },
      "25" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 265,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 26
    },
    "source/tests/googletest/googletest/Makefile.am" : {
      "ObjectId" : "29797e4e9de4e1d5e5f93bba14288de87f623946",
      "LastModified" : "2016-03-15T16:58:48Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Automake file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Nonstandard package files for distribution\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# gtest source files that we don't compile directly.  They are\n\n# #included by gtest-all.cc.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Sample files that we don't compile.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# C++ test files that we don't compile directly.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Python tests that we don't run.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# CMake script\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# MSVC project files\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# xcode project files\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# xcode sample files\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# C++Builder project files\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Distribute and install M4 macro\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# We define the global AM_CPPFLAGS as everything we compile includes from these\n\n# directories.\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Modifies compiler and linker flags for pthreads compatibility.\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Build rules for libraries.\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Bulid rules for samples and tests. Automake's naming for some of\n\n# these variables isn't terribly obvious, so this is a brief\n\n# reference:\n\n#\n\n# TESTS -- Programs run automatically by \"make check\"\n\n# check_PROGRAMS -- Programs built by \"make check\" but not necessarily run\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# A simple sample on using gtest.\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Another sample.  It also verifies that libgtest works.\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# This tests most constructs of gtest and verifies that libgtest_main\n\n# and libgtest work.\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Tests that fused gtest files compile and work.\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Build rules for putting fused Google Test files into the distribution\n\n# package. The user can also create those files by manually running\n\n# scripts/fuse_gtest_files.py.\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Death tests may produce core dumps in the build directory. In case\n\n# this happens, clean them to keep distcleancheck happy.\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Disables 'make install' as installing a compiled version of Google\n\n# Test can lead to undefined behavior due to violation of the\n\n# One-Definition Rule.\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "source/tests/googletest/googletest/cmake/internal_utils.cmake" : {
      "ObjectId" : "93e6dbb7c196d33706425ffbe3fcf3ed48d07f03",
      "LastModified" : "2016-03-15T16:58:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Defines functions and macros useful for building Google Test and\n\n# Google Mock.\n\n#\n\n# Note:\n\n#\n\n# - This file will be run twice when building Google Mock (once via\n\n#   Google Test's CMakeLists.txt, and once via Google Mock's).\n\n#   Therefore it shouldn't have any side effects other than defining\n\n#   the functions and macros.\n\n#\n\n# - The functions/macros defined in this file may depend on Google\n\n#   Test and Google Mock's option() definitions, and thus must be\n\n#   called *after* the options have been defined.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Tweaks CMake's default compiler/linker settings to suit Google Test's needs.\n\n#\n\n# This must be a macro(), as inside a function string() can only\n\n# update variables in the function scope.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For MSVC, CMake sets certain flags to defaults we want to override.\n\n# This replacement code is taken from sample in the CMake Wiki at\n\n# http://www.cmake.org/Wiki/CMake_FAQ#Dynamic_Replace.\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# When Google Test is built as a shared library, it should also use\n\n# shared runtime libraries.  Otherwise, it may end up with multiple\n\n# copies of runtime library data in different modules, resulting in\n\n# hard-to-find crashes. When it is built as a static library, it is\n\n# preferable to use CRT as static libraries, as we don't have to rely\n\n# on CRT DLLs being available. CMake always defaults to using shared\n\n# CRT libraries, so we override that default here.\n",
        "Line" : 28,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# We prefer more strict warning checking for building Google Test.\n\n# Replaces /W3 with /W4 in defaults.\n",
        "Line" : 38,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Defines the compiler/linker flags used to build Google Test and\n\n# Google Mock.  You can tweak these definitions to suit your need.  A\n\n# variable's value is empty before it's explicitly assigned to.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Defines CMAKE_USE_PTHREADS_INIT and CMAKE_THREAD_LIBS_INIT.\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Newlines inside flags variables break CMake's NMake generator.\n\n# TODO(vladl@google.com): Add -RTCs and -RTCu to debug builds.\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# 1400 is Visual Studio 2005\n",
        "Line" : 59,
        "CharPositionInLine" : 33
      },
      "9" : {
        "Text" : "# Suppress spurious warnings MSVC 7.1 sometimes issues.\n\n# Forcing value to bool.\n",
        "Line" : 60,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# Copy constructor and assignment operator could not be generated.\n",
        "Line" : 63,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# Compatibility warnings not applicable to Google Test.\n\n# Resolved overload was found by argument-dependent lookup.\n",
        "Line" : 65,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# 1500 is Visual Studio 2008\n",
        "Line" : 69,
        "CharPositionInLine" : 33
      },
      "13" : {
        "Text" : "# Conditional expression is constant.\n\n# When compiling with /W4, we get several instances of C4127\n\n# (Conditional expression is constant). In our code, we disable that\n\n# warning on a case-by-case basis. However, on Visual Studio 2005,\n\n# the warning fires on std::list. Therefore on that compiler and earlier,\n\n# we disable the warning project-wide.\n",
        "Line" : 70,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# 1700 is Visual Studio 2012.\n",
        "Line" : 78,
        "CharPositionInLine" : 39
      },
      "15" : {
        "Text" : "# Suppress \"unreachable code\" warning on VS 2012 and later.\n\n# http://stackoverflow.com/questions/3232669 explains the issue.\n",
        "Line" : 79,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# Until version 4.3.2, GCC doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 93,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Sun Pro doesn't provide macros to indicate whether exceptions and\n\n# RTTI are enabled, so we define GTEST_HAS_* explicitly.\n",
        "Line" : 101,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# CMake 2.8 changes Visual Age's compiler ID to \"XL\".\n",
        "Line" : 107,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Until version 9.0, Visual Age doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 110,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# RTTI can not be disabled in HP aCC compiler.\n",
        "Line" : 118,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# The pthreads library is available and allowed.\n",
        "Line" : 122,
        "CharPositionInLine" : 32
      },
      "22" : {
        "Text" : "# For building gtest's own tests and samples.\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# For building the gtest libraries.\n",
        "Line" : 136,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# type can be either STATIC or SHARED to denote a static or shared library.\n\n# ARGN refers to additional arguments after 'cxx_flags'.\n",
        "Line" : 143,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "########################################################################\n\n#\n\n# Helper functions for creating build targets.\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# cxx_executable_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ executable that depends on the given libraries and\n\n# is built from the given source files with the given compiler flags.\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# To support mixing linking in static and dynamic libraries, link each\n\n# library in with an extra call to target_link_libraries.\n",
        "Line" : 187,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# cxx_executable(name dir lib srcs...)\n\n#\n\n# creates a named target that depends on the given libs and is built\n\n# from the given source files.  dir/name.cc is implicitly included in\n\n# the source file list.\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Sets PYTHONINTERP_FOUND and PYTHON_EXECUTABLE.\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# cxx_test_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ test that depends on the given libs and is built\n\n# from the given source files with the given compiler flags.\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# cxx_test(name libs srcs...)\n\n#\n\n# creates a named test target that depends on the given libs and is\n\n# built from the given source files.  Unlike cxx_test_with_flags,\n\n# test/name.cc is already implicitly included in the source file list.\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# py_test(name)\n\n#\n\n# creates a Python test with the given name whose main module is in\n\n# test/name.py.  It does nothing if Python is not installed.\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# We are not supporting Python tests on Linux yet as they consider\n\n# all Linux environments to be google3 and try to use google3 features.\n",
        "Line" : 231,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# ${CMAKE_BINARY_DIR} is known at configuration time, so we can\n\n# directly bind it from cmake. ${CTEST_CONFIGURATION_TYPE} is known\n\n# only at ctest runtime (by calling ctest -c <Configuration>), so\n\n# we have to escape $ to delay variable substitution here.\n",
        "Line" : 234,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 36
    },
    "source/tests/googletest/googletest/make/Makefile" : {
      "ObjectId" : "9ac74493ba55246597e90b898fae847ae358eab5",
      "LastModified" : "2016-03-15T16:58:48Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# A sample Makefile for building Google Test and using it in user\n\n# tests.  Please tweak it to suit your environment and project.  You\n\n# may want to move it to your project's root directory.\n\n#\n\n# SYNOPSIS:\n\n#\n\n#   make [all]  - makes everything.\n\n#   make TARGET - makes the given target.\n\n#   make clean  - removes all files generated by make.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Please tweak the following variable definitions as needed by your\n\n# project, except GTEST_HEADERS, which you can use in your own targets\n\n# but shouldn't modify.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Points to the root of Google Test, relative to where this file is.\n\n# Remember to tweak this if you move this file.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Where to find user code.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Flags passed to the preprocessor.\n\n# Set Google Test's header directory as a system directory, such that\n\n# the compiler doesn't generate warnings in Google Test headers.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Flags passed to the C++ compiler.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# All tests produced by this Makefile.  Remember to add new tests you\n\n# created to the list.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# All Google Test headers.  Usually you shouldn't change this\n\n# definition.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# House-keeping build targets.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Builds gtest.a and gtest_main.a.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Usually you shouldn't tweak such internal variables, indicated by a\n\n# trailing _.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# For simplicity and to avoid depending on Google Test's\n\n# implementation details, the dependencies specified below are\n\n# conservative and not optimized.  This is fine as Google Test\n\n# compiles fast and for ordinary users its source rarely changes.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Builds a sample test.  A test should link with either gtest.a or\n\n# gtest_main.a, depending on whether it defines its own main()\n\n# function.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "source/tests/googletest/googletest/scripts/test/Makefile" : {
      "ObjectId" : "cdff584637b7a6e9df1fa43ce8f588c43815e561",
      "LastModified" : "2016-03-15T16:58:48Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# A Makefile for fusing Google Test and building a sample test against it.\n\n#\n\n# SYNOPSIS:\n\n#\n\n#   make [all]  - makes everything.\n\n#   make TARGET - makes the given target.\n\n#   make check  - makes everything and runs the built sample test.\n\n#   make clean  - removes all files generated by make.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Points to the root of fused Google Test, relative to where this file is.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Paths to the fused gtest files.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Where to find the sample test.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Where to find gtest_main.cc.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Flags passed to the preprocessor.\n\n# We have no idea here whether pthreads is available in the system, so\n\n# disable its use.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Flags passed to the C++ compiler.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "source/tests/iozeug-test/CMakeLists.txt" : {
      "ObjectId" : "1f81a31181412fb7b45bbd9b2c4986dabd4d41d4",
      "LastModified" : "2016-03-15T16:58:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# Executable name and options\n\n# \n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Target name\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# \n\n# Sources\n\n# \n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# \n\n# Create executable\n\n# \n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Build executable\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Create namespaced alias\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# \n\n# Project options\n\n# \n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# \n\n# Include directories\n\n# \n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# \n\n# Libraries\n\n# \n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# \n\n# Compile definitions\n\n# \n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# \n\n# Compile options\n\n# \n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# \n\n# Linker options\n\n# \n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "source/tests/reflectionzeug-test/CMakeLists.txt" : {
      "ObjectId" : "b5874b13925ac2e7322a58a6245aa735ed9f4093",
      "LastModified" : "2016-03-15T16:58:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# Executable name and options\n\n# \n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Target name\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Generate Property Instanciation Tests\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# \n\n# Sources\n\n# \n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Add generated instanciation tests to sources\n\n#\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# \n\n# Create executable\n\n# \n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build executable\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Create namespaced alias\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# \n\n# Project options\n\n# \n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# \n\n# Include directories\n\n# \n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# \n\n# Libraries\n\n# \n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# \n\n# Compile definitions\n\n# \n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# \n\n# Compile options\n\n# \n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# \n\n# Linker options\n\n# \n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "source/tests/scriptzeug-test/CMakeLists.txt" : {
      "ObjectId" : "c34d35d13ce8944add0501ca56c376563f0af7d9",
      "LastModified" : "2016-03-15T16:58:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# Executable name and options\n\n# \n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Target name\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# \n\n# Sources\n\n# \n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# \n\n# Create executable\n\n# \n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Build executable\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Create namespaced alias\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# \n\n# Project options\n\n# \n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# \n\n# Include directories\n\n# \n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# \n\n# Libraries\n\n# \n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# \n\n# Compile definitions\n\n# \n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# \n\n# Compile options\n\n# \n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# \n\n# Linker options\n\n# \n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "source/tests/stringzeug-test/CMakeLists.txt" : {
      "ObjectId" : "497a2f7b90508adf0b38589e41b7116ecc638b06",
      "LastModified" : "2016-03-15T16:58:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# Executable name and options\n\n# \n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Target name\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# \n\n# Sources\n\n# \n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# manipulation_test.cpp\n\n# regex_test.cpp\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# \n\n# Create executable\n\n# \n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Build executable\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Create namespaced alias\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# \n\n# Project options\n\n# \n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# \n\n# Include directories\n\n# \n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# \n\n# Libraries\n\n# \n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# \n\n# Compile definitions\n\n# \n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# \n\n# Compile options\n\n# \n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# \n\n# Linker options\n\n# \n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "source/tests/threadingzeug-test/CMakeLists.txt" : {
      "ObjectId" : "52b59203c6f9991553c59b4c8c3674837beaa521",
      "LastModified" : "2016-03-15T16:58:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# Executable name and options\n\n# \n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Target name\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# \n\n# Sources\n\n# \n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# \n\n# Create executable\n\n# \n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Build executable\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Create namespaced alias\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# \n\n# Project options\n\n# \n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# \n\n# Include directories\n\n# \n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# \n\n# Libraries\n\n# \n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# \n\n# Compile definitions\n\n# \n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# \n\n# Compile options\n\n# \n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# \n\n# Linker options\n\n# \n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "source/tests/widgetzeug-test/CMakeLists.txt" : {
      "ObjectId" : "766f8ac753244c5b81cf54f08d3c7693a1438a4a",
      "LastModified" : "2016-03-15T16:58:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Dependencies\n\n#\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# \n\n# Executable name and options\n\n# \n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Target name\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# \n\n# Sources\n\n# \n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#ColorGradient_test.cpp\n\n#ColorGradientInterpolation_test.cpp\n\n#ColorGradientProperty_test.cpp\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# \n\n# Create executable\n\n# \n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build executable\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Create namespaced alias\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# \n\n# Project options\n\n# \n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# \n\n# Include directories\n\n# \n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# \n\n# Libraries\n\n# \n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# \n\n# Compile definitions\n\n# \n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# \n\n# Compile options\n\n# \n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# \n\n# Linker options\n\n# \n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "source/threadingzeug/CMakeLists.txt" : {
      "ObjectId" : "ff334371010e950140cd32cf79f807085156abc4",
      "LastModified" : "2016-11-11T11:39:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# External dependencies\n\n# \n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# \n\n# Library name and options\n\n# \n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Target name\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Exit here if required dependencies are not met\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set API export file and macro\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# \n\n# Sources\n\n# \n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Group source files\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# \n\n# Create library\n\n# \n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Build library\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Create namespaced alias\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Export library for downstream projects\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Create API export header\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# \n\n# Project options\n\n# \n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# \n\n# Include directories\n\n# \n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# \n\n# Libraries\n\n# \n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# \n\n# Compile definitions\n\n# \n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# \n\n# Compile options\n\n# \n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# \n\n# Linker options\n\n# \n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# \n\n# Deployment\n\n# \n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Library\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Header files\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Generated header files\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# CMake config\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "source/widgetzeug/CMakeLists.txt" : {
      "ObjectId" : "ed30501c8907315fc5545d0b88d76bfefbd9b30c",
      "LastModified" : "2016-03-15T16:58:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# External dependencies\n\n# \n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Enable automoc\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ENABLE CMP0020: Automatically link Qt executables to qtmain target on Windows.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# \n\n# Library name and options\n\n# \n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Target name\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Exit here if required dependencies are not met\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set API export file and macro\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# \n\n# Sources\n\n# \n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# color widgets\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#${include_path}/ColorGradientProperty.h\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "#${include_path}/ColorGradientWidget.h\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# multi-purpose widgets\n",
        "Line" : 67,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# script widgets\n",
        "Line" : 73,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# log widgets\n",
        "Line" : 79,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# color widgets\n",
        "Line" : 92,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "#${source_path}/ColorGradientLabel.cpp\n\n#${source_path}/ColorGradientLabel.h\n\n#${source_path}/ColorGradientMidpointBar.cpp\n\n#${source_path}/ColorGradientMidpointBar.h\n\n#${source_path}/ColorGradientMidpointWidget.cpp\n\n#${source_path}/ColorGradientMidpointWidget.h\n\n#${source_path}/ColorGradientModel.cpp\n\n#${source_path}/ColorGradientModel.h\n",
        "Line" : 94,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "#${source_path}/ColorGradientStopBar.cpp\n\n#${source_path}/ColorGradientStopBar.h\n\n#${source_path}/ColorGradientStopModel.cpp\n\n#${source_path}/ColorGradientStopModel.h\n\n#${source_path}/ColorGradientStopWidget.cpp\n\n#${source_path}/ColorGradientStopWidget.h\n\n#${source_path}/ColorGradientWidget.cpp\n\n#${source_path}/ColorGradientWidget.ui\n",
        "Line" : 103,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# multi-purpose widgets\n",
        "Line" : 126,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# script widgets\n",
        "Line" : 133,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# log widgets\n",
        "Line" : 139,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Group source files\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# \n\n# Create library\n\n# \n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Build library\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Create namespaced alias\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Export library for downstream projects\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Create API export header\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# \n\n# Project options\n\n# \n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# \n\n# Include directories\n\n# \n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# \n\n# Libraries\n\n# \n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# \n\n# Compile definitions\n\n# \n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# \n\n# Compile options\n\n# \n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# \n\n# Linker options\n\n# \n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# \n\n# Deployment\n\n# \n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Library\n",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Header files\n",
        "Line" : 282,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Generated header files\n",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# CMake config\n",
        "Line" : 294,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 37
    }
  },
  "FileTypes" : {
    "CMAKE" : 42,
    "MAKEFILE" : 3,
    "AUTOMAKE" : 2
  },
  "ElapsedTime" : 1371
}