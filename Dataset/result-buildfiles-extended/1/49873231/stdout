{
  "Repository" : "49873231",
  "Revision" : "HEAD",
  "ObjectId" : "2a54f707c00376494b3562d72aaaba8f60a228b4",
  "CommitTime" : "2019-04-17T10:39:54Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "858cfb63751b0b5c69da886ba709f67ca73e3e95",
      "LastModified" : "2019-03-28T12:21:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# Copyright (c) 2016, Johan Mabille, Sylvain Corlay and Wolf Vollprecht    #\n\n#                                                                          #\n\n# Distributed under the terms of the BSD 3-Clause License.                 #\n\n#                                                                          #\n\n# The full license is in the file LICENSE, distributed with this software. #\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Versionning\n\n# ===========\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Dependencies\n\n# ============\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Optional dependencies\n\n# =====================\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Build\n\n# =====\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Installation\n\n# ============\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Makes the project importable from the build directory\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# xtensor is header-only and does not depend on the architecture.\n\n# Remove CMAKE_SIZEOF_VOID_P from xtensorConfigVersion.cmake so that an xtensorConfig.cmake\n\n# generated for a 64 bit target can be used for 32 bit targets and vice versa.\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "benchmark/CMakeLists.txt" : {
      "ObjectId" : "9b19c750d4394c817ad2a00c91f2ef706802b3e9",
      "LastModified" : "2018-11-08T16:34:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# Copyright (c) 2016, Johan Mabille, Sylvain Corlay and Wolf Vollprecht    #\n\n#                                                                          #\n\n# Distributed under the terms of the BSD 3-Clause License.                 #\n\n#                                                                          #\n\n# The full license is in the file LICENSE, distributed with this software. #\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Enable link time optimization and set the default symbol\n\n# visibility to hidden (very important to obtain small binaries)\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Default symbol visibility\n",
        "Line" : 38,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Check for Link Time Optimization support\n\n# (GCC/Clang)\n\n# LTO had to be removed as google benchmark doesn't build with it\n\n# CHECK_CXX_COMPILER_FLAG(\"-flto\" HAS_LTO_FLAG)\n\n# if (HAS_LTO_FLAG)\n\n#     set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -flto\")\n\n# endif()\n",
        "Line" : 41,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Intel equivalent to LTO is called IPO\n",
        "Line" : 49,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Download and unpack googlebenchmark at configure time\n",
        "Line" : 72,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Copy local source of googlebenchmark at configure time\n",
        "Line" : 75,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Add googlebenchmark directly to our build. This defines\n\n# the gtest and gtest_main targets.\n",
        "Line" : 91,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "cmake/FindTBB.cmake" : {
      "ObjectId" : "f4b6b333b89ba790e64393d10ea20381c038442f",
      "LastModified" : "2018-11-08T16:34:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\n\n#\n\n# Copyright (c) 2015 Justus Calvin\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# FindTBB\n\n# -------\n\n#\n\n# Find TBB include directories and libraries.\n\n#\n\n# Usage:\n\n#\n\n#  find_package(TBB [major[.minor]] [EXACT]\n\n#               [QUIET] [REQUIRED]\n\n#               [[COMPONENTS] [components...]]\n\n#               [OPTIONAL_COMPONENTS components...])\n\n#\n\n# where the allowed components are tbbmalloc and tbb_preview. Users may modify\n\n# the behavior of this module with the following variables:\n\n#\n\n# * TBB_ROOT_DIR          - The base directory the of TBB installation.\n\n# * TBB_INCLUDE_DIR       - The directory that contains the TBB headers files.\n\n# * TBB_LIBRARY           - The directory that contains the TBB library files.\n\n# * TBB_<library>_LIBRARY - The path of the TBB the corresponding TBB library.\n\n#                           These libraries, if specified, override the\n\n#                           corresponding library search results, where <library>\n\n#                           may be tbb, tbb_debug, tbbmalloc, tbbmalloc_debug,\n\n#                           tbb_preview, or tbb_preview_debug.\n\n# * TBB_USE_DEBUG_BUILD   - The debug version of tbb libraries, if present, will\n\n#                           be used instead of the release version.\n\n#\n\n# Users may modify the behavior of this module with the following environment\n\n# variables:\n\n#\n\n# * TBB_INSTALL_DIR\n\n# * TBBROOT\n\n# * LIBRARY_PATH\n\n#\n\n# This module will set the following variables:\n\n#\n\n# * TBB_FOUND             - Set to false, or undefined, if we haven’t found, or\n\n#                           don’t want to use TBB.\n\n# * TBB_<component>_FOUND - If False, optional <component> part of TBB sytem is\n\n#                           not available.\n\n# * TBB_VERSION           - The full version string\n\n# * TBB_VERSION_MAJOR     - The major version\n\n# * TBB_VERSION_MINOR     - The minor version\n\n# * TBB_INTERFACE_VERSION - The interface version number defined in\n\n#                           tbb/tbb_stddef.h.\n\n# * TBB_<library>_LIBRARY_RELEASE - The path of the TBB release version of\n\n#                           <library>, where <library> may be tbb, tbb_debug,\n\n#                           tbbmalloc, tbbmalloc_debug, tbb_preview, or\n\n#                           tbb_preview_debug.\n\n# * TBB_<library>_LIBRARY_DEGUG - The path of the TBB release version of\n\n#                           <library>, where <library> may be tbb, tbb_debug,\n\n#                           tbbmalloc, tbbmalloc_debug, tbb_preview, or\n\n#                           tbb_preview_debug.\n\n#\n\n# The following varibles should be used to build and link with TBB:\n\n#\n\n# * TBB_INCLUDE_DIRS        - The include directory for TBB.\n\n# * TBB_LIBRARIES           - The libraries to link against to use TBB.\n\n# * TBB_LIBRARIES_RELEASE   - The release libraries to link against to use TBB.\n\n# * TBB_LIBRARIES_DEBUG     - The debug libraries to link against to use TBB.\n\n# * TBB_DEFINITIONS         - Definitions to use when compiling code that uses\n\n#                             TBB.\n\n# * TBB_DEFINITIONS_RELEASE - Definitions to use when compiling release code that\n\n#                             uses TBB.\n\n# * TBB_DEFINITIONS_DEBUG   - Definitions to use when compiling debug code that\n\n#                             uses TBB.\n\n#\n\n# This module will also create the \"tbb\" target that may be used when building\n\n# executables and libraries.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##################################\n\n# Check the build type\n\n##################################\n",
        "Line" : 97,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "##################################\n\n# Set the TBB search directories\n\n##################################\n",
        "Line" : 113,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Define search paths based on user input and environment variables\n",
        "Line" : 117,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Define the search directories based on the current platform\n",
        "Line" : 120,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Set the target architecture\n",
        "Line" : 125,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Set the TBB search library path search suffix based on the version of VC\n",
        "Line" : 132,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Add the library path search suffix for the VC independent version of TBB\n",
        "Line" : 145,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# OS X\n",
        "Line" : 149,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# TODO: Check to see which C++ library is being used by the compiler.\n",
        "Line" : 152,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# The default C++ library on OS X 10.9 and later is libc++\n",
        "Line" : 154,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# Linux\n",
        "Line" : 160,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# TODO: Check compiler version to see the suffix should be <arch>/gcc4.1 or\n\n#       <arch>/gcc4.1. For now, assume that the compiler is more recent than\n\n#       gcc 4.4.x or later.\n",
        "Line" : 163,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "##################################\n\n# Find the TBB include dir\n\n##################################\n",
        "Line" : 173,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "##################################\n\n# Set version strings\n\n##################################\n",
        "Line" : 182,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "##################################\n\n# Find TBB components\n\n##################################\n",
        "Line" : 197,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Find each component\n",
        "Line" : 207,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Search for the libraries\n",
        "Line" : 211,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "# Mark internal variables as advanced\n",
        "Line" : 238,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "##################################\n\n# Set compile flags and libraries\n\n##################################\n",
        "Line" : 246,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "##################################\n\n# Create targets\n\n##################################\n",
        "Line" : 269,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 22
    },
    "docs/Makefile" : {
      "ObjectId" : "835afeee8ba3f0534efc85612be4bbad78a0b4fc",
      "LastModified" : "2018-11-08T16:34:00Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# User-friendly check for sphinx-build\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Internal variables.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "1d05dbd4143d1a7b9f873edb77506016fa95f66c",
      "LastModified" : "2019-03-29T14:54:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# Copyright (c) 2016, Johan Mabille, Sylvain Corlay and Wolf Vollprecht    #\n\n#                                                                          #\n\n# Distributed under the terms of the BSD 3-Clause License.                 #\n\n#                                                                          #\n\n# The full license is in the file LICENSE, distributed with this software. #\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -march=native -Wunused-parameter -Wextra -Wreorder -Wconversion\")\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Download and unpack googletest at configure time\n",
        "Line" : 54,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Copy local source of googletest at configure time\n",
        "Line" : 57,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Add googletest directly to our build. This defines\n\n# the gtest and gtest_main targets.\n",
        "Line" : 73,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# remove xinfo tests for compilers < GCC 5\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add files for npy tests\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    }
  },
  "FileTypes" : {
    "CMAKE" : 4,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 2088
}