{
  "Repository" : "21417057",
  "Revision" : "HEAD",
  "ObjectId" : "466309286d4ba49785eefe7f509f90cacf58565c",
  "CommitTime" : "2016-01-07T03:17:15Z",
  "Files" : {
    "pom.xml" : {
      "ObjectId" : "42f4a272835170121618cbd2eaa9b53b718796e9",
      "LastModified" : "2016-01-07T03:17:15Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " <module>prayer-client</module> ",
        "Line" : 13,
        "CharPositionInLine" : 48
      },
      "1" : {
        "Text" : " 项目默认使用的编码方式 ",
        "Line" : 17,
        "CharPositionInLine" : 29
      },
      "2" : {
        "Text" : " 是否启用pullInDeps选项，如果该值的选项为true则在mod.json的includes以及deploys中包含的Module会在打包的时候自动发布到当前Module的依赖模块中 \n            也就是说不需要在运行时再执行依赖的Module的安装和下载，会直接将这些依赖的库打包到当前的Module中直接运行 <vertx.pullInDeps>false</vertx.pullInDeps> \n            这个值设置成true过后，则可以创建能执行的Fat jar的包，这个包可以通过java -jar <jarname>的命令执行 <vertx.createFatJar>false</vertx.createFatJar> \n            Vertx 模块的标准标识，其标识符必须符合Identifier的规范<Owner>~<Name>~<Version> <module.name>${project.groupId}~${project.artifactId}~${project.version}</module.name> \n            配置的这个目录将会包含assembled嵌入式的Mod信息，这个配置也会在命令中北-Dmods.directory=<mydir>的参数覆盖掉 <mods.directory>target/mods</mods.directory> ",
        "Line" : 25,
        "CharPositionInLine" : 133
      },
      "3" : {
        "Text" : " Module相关信息 ",
        "Line" : 26,
        "CharPositionInLine" : 28
      },
      "4" : {
        "Text" : " 依赖的库的版本号 ",
        "Line" : 30,
        "CharPositionInLine" : 26
      },
      "5" : {
        "Text" : " 【Latest】Vert.X库的版本 ",
        "Line" : 33,
        "CharPositionInLine" : 36
      },
      "6" : {
        "Text" : " 【Latest】Vert.X的单元测试库的版本 ",
        "Line" : 38,
        "CharPositionInLine" : 41
      },
      "7" : {
        "Text" : " <vertx.testtools.version>2.0.3-final</vertx.testtools.version> ",
        "Line" : 39,
        "CharPositionInLine" : 80
      },
      "8" : {
        "Text" : " 【Latest】JUnit的版本号 ",
        "Line" : 40,
        "CharPositionInLine" : 35
      },
      "9" : {
        "Text" : " 【Latest】JDK的编译和运行版本号：Vert.X要求最低版本是1.7 ",
        "Line" : 42,
        "CharPositionInLine" : 55
      },
      "10" : {
        "Text" : " 【Latest】Jackson序列化系统，用于处理Json建模文件 ",
        "Line" : 45,
        "CharPositionInLine" : 51
      },
      "11" : {
        "Text" : " 【Latest】BoneCP连接池版本 ",
        "Line" : 47,
        "CharPositionInLine" : 37
      },
      "12" : {
        "Text" : " 【Latest】Spring的版本 ",
        "Line" : 50,
        "CharPositionInLine" : 35
      },
      "13" : {
        "Text" : " Slf4j日志器版本 ",
        "Line" : 52,
        "CharPositionInLine" : 28
      },
      "14" : {
        "Text" : " DBF JDBC Driver ",
        "Line" : 56,
        "CharPositionInLine" : 33
      },
      "15" : {
        "Text" : " 12.1.0s ",
        "Line" : 57,
        "CharPositionInLine" : 76
      },
      "16" : {
        "Text" : " English Town ",
        "Line" : 61,
        "CharPositionInLine" : 30
      },
      "17" : {
        "Text" : " Object validation ",
        "Line" : 64,
        "CharPositionInLine" : 35
      },
      "18" : {
        "Text" : " JODD版本 ",
        "Line" : 67,
        "CharPositionInLine" : 24
      },
      "19" : {
        "Text" : " Pool池化管理 ",
        "Line" : 69,
        "CharPositionInLine" : 26
      },
      "20" : {
        "Text" : " ReflectASM ",
        "Line" : 71,
        "CharPositionInLine" : 28
      },
      "21" : {
        "Text" : " Mybatis ",
        "Line" : 73,
        "CharPositionInLine" : 25
      },
      "22" : {
        "Text" : " H2 Database ",
        "Line" : 75,
        "CharPositionInLine" : 29
      },
      "23" : {
        "Text" : " AspectJ Version ",
        "Line" : 77,
        "CharPositionInLine" : 33
      },
      "24" : {
        "Text" : " Jade4J ",
        "Line" : 82,
        "CharPositionInLine" : 24
      },
      "25" : {
        "Text" : "Plugin versions ",
        "Line" : 85,
        "CharPositionInLine" : 32
      },
      "26" : {
        "Text" : " 【Latest】Maven代码编译插件版本 ",
        "Line" : 86,
        "CharPositionInLine" : 39
      },
      "27" : {
        "Text" : " 【Latest】Maven的资源编译插件的版本 ",
        "Line" : 88,
        "CharPositionInLine" : 41
      },
      "28" : {
        "Text" : " 【Latest】Maven处理Dependency的库的插件版本 ",
        "Line" : 90,
        "CharPositionInLine" : 50
      },
      "29" : {
        "Text" : " 【Latest】AspectJ Compiler ",
        "Line" : 92,
        "CharPositionInLine" : 42
      },
      "30" : {
        "Text" : " 【Latest】Maven的JXR插件使用的版本 <maven.jxr.plugin.version>2.4</maven.jxr.plugin.version> \n            【Latest】Maven处理Clean Up插件的版本 <maven.clean.plugin.version>2.5</maven.clean.plugin.version> \n            【Latest】Surefire的插件版本 <maven.surefire.plugin.version>2.14</maven.surefire.plugin.version> \n            【Latest】Failsafe的插件版本 <maven.failsafe.plugin.version>2.14</maven.failsafe.plugin.version> \n            【Latest】Surefire Report的插件版本 <maven.surefire.report.plugin.version>2.14</maven.surefire.report.plugin.version> \n            【Latest】Java Documentation的插件版本 <maven.javadoc.plugin.version>2.9.1</maven.javadoc.plugin.version> \n            【1.7.7】Maven中的Avro插件 <maven.avro.plugin.version>1.7.4</maven.avro.plugin.version> ",
        "Line" : 102,
        "CharPositionInLine" : 98
      },
      "31" : {
        "Text" : " 特殊的Repository配置，因为VertX比较新，所以使用这个库可以使得依赖的jar的包可以顺利从Repository中直接获取 ",
        "Line" : 104,
        "CharPositionInLine" : 80
      },
      "32" : {
        "Text" : " <repositories> <repository> <id>sonatype-nexus-snapshots</id> <url>https://oss.sonatype.org/content/repositories/snapshots</url> \n        </repository> </repositories> ",
        "Line" : 106,
        "CharPositionInLine" : 42
      },
      "33" : {
        "Text" : " Object Validation ",
        "Line" : 108,
        "CharPositionInLine" : 35
      },
      "34" : {
        "Text" : " AspectJ Runtime ",
        "Line" : 121,
        "CharPositionInLine" : 33
      },
      "35" : {
        "Text" : " Slf4j Version ",
        "Line" : 138,
        "CharPositionInLine" : 31
      },
      "36" : {
        "Text" : "Test Dependencies ",
        "Line" : 147,
        "CharPositionInLine" : 34
      },
      "37" : {
        "Text" : " Spring Test ",
        "Line" : 163,
        "CharPositionInLine" : 29
      },
      "38" : {
        "Text" : " Prayer Framework ",
        "Line" : 172,
        "CharPositionInLine" : 38
      },
      "39" : {
        "Text" : " ==================================================== ",
        "Line" : 178,
        "CharPositionInLine" : 74
      },
      "40" : {
        "Text" : " Jade4j ",
        "Line" : 179,
        "CharPositionInLine" : 28
      },
      "41" : {
        "Text" : " Vertx Web ",
        "Line" : 185,
        "CharPositionInLine" : 31
      },
      "42" : {
        "Text" : " Vert.X Core ",
        "Line" : 196,
        "CharPositionInLine" : 33
      },
      "43" : {
        "Text" : " Vertx Hazelcast ",
        "Line" : 202,
        "CharPositionInLine" : 37
      },
      "44" : {
        "Text" : " Vertx CodeGen ",
        "Line" : 208,
        "CharPositionInLine" : 35
      },
      "45" : {
        "Text" : " Vertx Security ",
        "Line" : 214,
        "CharPositionInLine" : 36
      },
      "46" : {
        "Text" : " Java Assist ",
        "Line" : 225,
        "CharPositionInLine" : 33
      },
      "47" : {
        "Text" : " Common CLI ",
        "Line" : 231,
        "CharPositionInLine" : 32
      },
      "48" : {
        "Text" : " Object Validation ",
        "Line" : 237,
        "CharPositionInLine" : 39
      },
      "49" : {
        "Text" : " H2 Database ",
        "Line" : 248,
        "CharPositionInLine" : 33
      },
      "50" : {
        "Text" : " ScriptRunner ",
        "Line" : 254,
        "CharPositionInLine" : 34
      },
      "51" : {
        "Text" : " Object Pool ",
        "Line" : 260,
        "CharPositionInLine" : 33
      },
      "52" : {
        "Text" : " ReflectASM ",
        "Line" : 266,
        "CharPositionInLine" : 32
      },
      "53" : {
        "Text" : " JODD ",
        "Line" : 272,
        "CharPositionInLine" : 26
      },
      "54" : {
        "Text" : " 基础工具类 ",
        "Line" : 273,
        "CharPositionInLine" : 27
      },
      "55" : {
        "Text" : " JODD: 类型转换 ",
        "Line" : 279,
        "CharPositionInLine" : 32
      },
      "56" : {
        "Text" : " XML/HTML解析器 ",
        "Line" : 285,
        "CharPositionInLine" : 33
      },
      "57" : {
        "Text" : " JSON解析器 ",
        "Line" : 291,
        "CharPositionInLine" : 29
      },
      "58" : {
        "Text" : " Dom4j XML解析 ",
        "Line" : 297,
        "CharPositionInLine" : 33
      },
      "59" : {
        "Text" : " Connection ",
        "Line" : 303,
        "CharPositionInLine" : 32
      },
      "60" : {
        "Text" : " JDBC Oracle ",
        "Line" : 314,
        "CharPositionInLine" : 33
      },
      "61" : {
        "Text" : " JDBC PgSQL ",
        "Line" : 320,
        "CharPositionInLine" : 32
      },
      "62" : {
        "Text" : " JDBC SQL Server ",
        "Line" : 326,
        "CharPositionInLine" : 37
      },
      "63" : {
        "Text" : " JDBC MySQL ",
        "Line" : 332,
        "CharPositionInLine" : 32
      },
      "64" : {
        "Text" : " Jackson Serialization ",
        "Line" : 338,
        "CharPositionInLine" : 43
      },
      "65" : {
        "Text" : " Spring Version ",
        "Line" : 354,
        "CharPositionInLine" : 36
      },
      "66" : {
        "Text" : " Slf4j Version ",
        "Line" : 366,
        "CharPositionInLine" : 35
      },
      "67" : {
        "Text" : " AspectJ Runtime ",
        "Line" : 377,
        "CharPositionInLine" : 37
      },
      "68" : {
        "Text" : " Hazelcast Platform ",
        "Line" : 399,
        "CharPositionInLine" : 40
      },
      "69" : {
        "Text" : " ============================================ ",
        "Line" : 410,
        "CharPositionInLine" : 66
      },
      "70" : {
        "Text" : "Test Dependencies ",
        "Line" : 416,
        "CharPositionInLine" : 38
      },
      "71" : {
        "Text" : " Other plugins required by the build ",
        "Line" : 439,
        "CharPositionInLine" : 57
      },
      "72" : {
        "Text" : " Maven Resource Plugin ",
        "Line" : 449,
        "CharPositionInLine" : 43
      },
      "73" : {
        "Text" : " Maven Dependency Plugin ",
        "Line" : 472,
        "CharPositionInLine" : 45
      },
      "74" : {
        "Text" : " <plugin> ",
        "Line" : 502,
        "CharPositionInLine" : 30
      },
      "75" : {
        "Text" : " <groupId>org.apache.maven.plugins</groupId> ",
        "Line" : 503,
        "CharPositionInLine" : 65
      },
      "76" : {
        "Text" : " <artifactId>maven-shade-plugin</artifactId> ",
        "Line" : 504,
        "CharPositionInLine" : 65
      },
      "77" : {
        "Text" : " <version>${maven.shade.plugin.version}</version> ",
        "Line" : 505,
        "CharPositionInLine" : 70
      },
      "78" : {
        "Text" : " <executions> ",
        "Line" : 506,
        "CharPositionInLine" : 34
      },
      "79" : {
        "Text" : " <execution> ",
        "Line" : 507,
        "CharPositionInLine" : 33
      },
      "80" : {
        "Text" : " <phase>package</phase> ",
        "Line" : 508,
        "CharPositionInLine" : 44
      },
      "81" : {
        "Text" : " <goals> ",
        "Line" : 509,
        "CharPositionInLine" : 29
      },
      "82" : {
        "Text" : " <goal>shade</goal> ",
        "Line" : 510,
        "CharPositionInLine" : 40
      },
      "83" : {
        "Text" : " </goals> ",
        "Line" : 511,
        "CharPositionInLine" : 30
      },
      "84" : {
        "Text" : " <configuration> ",
        "Line" : 512,
        "CharPositionInLine" : 37
      },
      "85" : {
        "Text" : " <transformers> ",
        "Line" : 513,
        "CharPositionInLine" : 36
      },
      "86" : {
        "Text" : " <transformer ",
        "Line" : 514,
        "CharPositionInLine" : 34
      },
      "87" : {
        "Text" : " implementation=\"org.apache.maven.plugins.shade.resource.ManifestResourceTransformer\"> ",
        "Line" : 515,
        "CharPositionInLine" : 107
      },
      "88" : {
        "Text" : " <manifestEntries> ",
        "Line" : 516,
        "CharPositionInLine" : 39
      },
      "89" : {
        "Text" : " <Main-Class>${main.class}</Main-Class> ",
        "Line" : 517,
        "CharPositionInLine" : 60
      },
      "90" : {
        "Text" : " </manifestEntries> ",
        "Line" : 518,
        "CharPositionInLine" : 40
      },
      "91" : {
        "Text" : " </transformer> ",
        "Line" : 519,
        "CharPositionInLine" : 36
      },
      "92" : {
        "Text" : " <transformer ",
        "Line" : 520,
        "CharPositionInLine" : 34
      },
      "93" : {
        "Text" : " implementation=\"org.apache.maven.plugins.shade.resource.AppendingTransformer\"> ",
        "Line" : 521,
        "CharPositionInLine" : 100
      },
      "94" : {
        "Text" : " <resource>META-INF/services/io.vertx.core.spi.VerticleFactory</resource> ",
        "Line" : 522,
        "CharPositionInLine" : 94
      },
      "95" : {
        "Text" : " </transformer> ",
        "Line" : 523,
        "CharPositionInLine" : 36
      },
      "96" : {
        "Text" : " </transformers> ",
        "Line" : 524,
        "CharPositionInLine" : 37
      },
      "97" : {
        "Text" : " <artifactSet> ",
        "Line" : 525,
        "CharPositionInLine" : 35
      },
      "98" : {
        "Text" : " </artifactSet> ",
        "Line" : 526,
        "CharPositionInLine" : 36
      },
      "99" : {
        "Text" : " <outputFile>${project.build.directory}/${project.artifactId}-${project.version}-fat.jar</outputFile> ",
        "Line" : 527,
        "CharPositionInLine" : 122
      },
      "100" : {
        "Text" : " </configuration> ",
        "Line" : 528,
        "CharPositionInLine" : 38
      },
      "101" : {
        "Text" : " </execution> ",
        "Line" : 529,
        "CharPositionInLine" : 34
      },
      "102" : {
        "Text" : " </executions> ",
        "Line" : 530,
        "CharPositionInLine" : 35
      },
      "103" : {
        "Text" : " </plugin> ",
        "Line" : 531,
        "CharPositionInLine" : 31
      },
      "104" : {
        "Text" : "This plugin's configuration is used to store Eclipse \n                    m2e settings only. It has no influence on the Maven build itself. ",
        "Line" : 536,
        "CharPositionInLine" : 90
      },
      "CommentCount" : 105
    },
    "prayer-bus/pom.xml" : {
      "ObjectId" : "dc8dfa27ccc7dd10c988fe191341a68f3844d1f9",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Environment ",
        "Line" : 15,
        "CharPositionInLine" : 29
      },
      "1" : {
        "Text" : " H2 Database ",
        "Line" : 16,
        "CharPositionInLine" : 29
      },
      "2" : {
        "Text" : " Vert.X Core ",
        "Line" : 21,
        "CharPositionInLine" : 29
      },
      "3" : {
        "Text" : " ScriptRunner ",
        "Line" : 26,
        "CharPositionInLine" : 30
      },
      "4" : {
        "Text" : " Object Pool ",
        "Line" : 31,
        "CharPositionInLine" : 29
      },
      "5" : {
        "Text" : " ReflectASM ",
        "Line" : 36,
        "CharPositionInLine" : 28
      },
      "6" : {
        "Text" : " JODD ",
        "Line" : 41,
        "CharPositionInLine" : 22
      },
      "7" : {
        "Text" : " 基础工具类 ",
        "Line" : 42,
        "CharPositionInLine" : 23
      },
      "8" : {
        "Text" : " JODD: 类型转换 ",
        "Line" : 47,
        "CharPositionInLine" : 28
      },
      "9" : {
        "Text" : " XML/HTML解析器 ",
        "Line" : 52,
        "CharPositionInLine" : 29
      },
      "10" : {
        "Text" : " JSON解析器 ",
        "Line" : 57,
        "CharPositionInLine" : 25
      },
      "11" : {
        "Text" : " Dom4j XML解析 ",
        "Line" : 62,
        "CharPositionInLine" : 29
      },
      "12" : {
        "Text" : " Connection ",
        "Line" : 67,
        "CharPositionInLine" : 28
      },
      "13" : {
        "Text" : " Spring Framework ",
        "Line" : 76,
        "CharPositionInLine" : 34
      },
      "14" : {
        "Text" : " JDBC Oracle ",
        "Line" : 81,
        "CharPositionInLine" : 29
      },
      "15" : {
        "Text" : " JDBC PgSQL ",
        "Line" : 86,
        "CharPositionInLine" : 28
      },
      "16" : {
        "Text" : " JDBC SQL Server ",
        "Line" : 91,
        "CharPositionInLine" : 33
      },
      "17" : {
        "Text" : " JDBC MySQL ",
        "Line" : 96,
        "CharPositionInLine" : 28
      },
      "18" : {
        "Text" : " Jackson Serialization ",
        "Line" : 101,
        "CharPositionInLine" : 39
      },
      "19" : {
        "Text" : " AJDT Compile ",
        "Line" : 117,
        "CharPositionInLine" : 34
      },
      "20" : {
        "Text" : " 除开Util-Comet以外，其他项目必须包含此片段，主要用于适配.aj文件来启动OVal的防御式编程 ",
        "Line" : 144,
        "CharPositionInLine" : 81
      },
      "21" : {
        "Text" : " Begin ",
        "Line" : 145,
        "CharPositionInLine" : 35
      },
      "22" : {
        "Text" : " 暂时忽略警告信息，目前存在一个Xlint:typeNotExposedToWeaver的问题 ",
        "Line" : 146,
        "CharPositionInLine" : 76
      },
      "23" : {
        "Text" : " End ",
        "Line" : 148,
        "CharPositionInLine" : 33
      },
      "CommentCount" : 24
    },
    "prayer-client/pom.xml" : {
      "ObjectId" : "0f90515ac176e062cb9968a7d31c49b3751ede73",
      "LastModified" : "2015-09-21T12:38:55Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Vert.X Core ",
        "Line" : 15,
        "CharPositionInLine" : 29
      },
      "1" : {
        "Text" : " Vertx Web ",
        "Line" : 21,
        "CharPositionInLine" : 27
      },
      "2" : {
        "Text" : " Vertx Hazelcast ",
        "Line" : 27,
        "CharPositionInLine" : 33
      },
      "3" : {
        "Text" : " Vertx CodeGen ",
        "Line" : 33,
        "CharPositionInLine" : 31
      },
      "4" : {
        "Text" : " ReflectASM ",
        "Line" : 39,
        "CharPositionInLine" : 28
      },
      "5" : {
        "Text" : " JODD ",
        "Line" : 45,
        "CharPositionInLine" : 22
      },
      "6" : {
        "Text" : " 基础工具类 ",
        "Line" : 46,
        "CharPositionInLine" : 23
      },
      "7" : {
        "Text" : " JODD: 类型转换 ",
        "Line" : 52,
        "CharPositionInLine" : 28
      },
      "8" : {
        "Text" : " XML/HTML解析器 ",
        "Line" : 58,
        "CharPositionInLine" : 29
      },
      "9" : {
        "Text" : " JSON解析器 ",
        "Line" : 64,
        "CharPositionInLine" : 25
      },
      "10" : {
        "Text" : " Dom4j XML解析 ",
        "Line" : 70,
        "CharPositionInLine" : 29
      },
      "CommentCount" : 11
    },
    "prayer-client/src/main/resources/webroot/build.xml" : {
      "ObjectId" : "0eaafad471c528c82867318588153fd3935cacb0",
      "LastModified" : "2015-12-31T06:16:47Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n    The build-impl.xml file imported here contains the guts of the build process. It is\n    a great idea to read that file to understand how the process works, but it is best to\n    limit your changes to this file.\n    ",
        "Line" : 7,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "\n    The following targets can be provided to inject logic before and/or after key steps\n    of the build process:\n\n        The \"init-local\" target is used to initialize properties that may be personalized\n        for the local machine.\n\n            <target name=\"-before-init-local\"/>\n            <target name=\"-after-init-local\"/>\n\n        The \"clean\" target is used to clean build output from the build.dir.\n\n            <target name=\"-before-clean\"/>\n            <target name=\"-after-clean\"/>\n\n        The general \"init\" target is used to initialize all other properties, including\n        those provided by Sencha Cmd.\n\n            <target name=\"-before-init\"/>\n            <target name=\"-after-init\"/>\n        \n        The \"page\" target performs the call to Sencha Cmd to build the 'all-classes.js' file.\n\n            <target name=\"-before-page\"/>\n            <target name=\"-after-page\"/>\n\n        The \"build\" target performs the call to Sencha Cmd to build the application.\n\n            <target name=\"-before-build\"/>\n            <target name=\"-after-build\"/>\n    ",
        "Line" : 40,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "prayer-client/src/main/resources/webroot/ext/build.xml" : {
      "ObjectId" : "a47dd957a49948c984a973baebfa7336ef9d25ee",
      "LastModified" : "2015-09-21T01:09:43Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n    The build-impl.xml file imported here contains the guts of the build process. It is\n    a great idea to read that file to understand how the process works, but it is best to\n    limit your changes to this file.\n    ",
        "Line" : 7,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "\n    The following targets can be provided to inject logic before and/or after key steps\n    of the build process:\n\n        The \"init-local\" target is used to initialize properties that may be personalized\n        for the local machine.\n\n            <target name=\"-before-init-local\"/>\n            <target name=\"-after-init-local\"/>\n\n        The \"clean\" target is used to clean build output from the build.dir.\n\n            <target name=\"-before-clean\"/>\n            <target name=\"-after-clean\"/>\n\n        The general \"init\" target is used to initialize all other properties, including\n        those provided by Sencha Cmd.\n\n            <target name=\"-before-init\"/>\n            <target name=\"-after-init\"/>\n        \n        The \"build\" target performs the call to Sencha Cmd to build the application.\n\n            <target name=\"-before-build\"/>\n            <target name=\"-after-build\"/>\n    ",
        "Line" : 35,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : " sets DSTAMP=yyyyMMdd, TSTAMP=hhmm ",
        "Line" : 211,
        "CharPositionInLine" : 55
      },
      "3" : {
        "Text" : "\n        Ext JS is distrubted under GPL and Commercial licenses as well as a Beta license.\n        This target allows the package build to be leveraged while swapping out the files\n        with license information.\n        ",
        "Line" : 222,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : " Load the appropriate license file header ",
        "Line" : 232,
        "CharPositionInLine" : 58
      },
      "5" : {
        "Text" : "\n        Create a JS/CSS compatible file with header inside a \"/* */\" block.\n        ",
        "Line" : 255,
        "CharPositionInLine" : 12
      },
      "6" : {
        "Text" : "\n        Copy in the appropriate license.txt file\n        ",
        "Line" : 263,
        "CharPositionInLine" : 12
      },
      "7" : {
        "Text" : "\n        Lay down the file header so we can append the rest from the compiler.\n        ",
        "Line" : 282,
        "CharPositionInLine" : 12
      },
      "8" : {
        "Text" : "\n    ******************************************************************\n    Targets to easily run builds for specific items\n    ******************************************************************\n    ",
        "Line" : 400,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "\n    ******************************************************************\n    Targets used to produce deployment builds\n    ******************************************************************\n    ",
        "Line" : 455,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : " FIXME core should be the only package here, but we still have dependencies in the examples ",
        "Line" : 465,
        "CharPositionInLine" : 104
      },
      "11" : {
        "Text" : "\n    ******************************************************************\n    Targets for Test\n    ******************************************************************\n    ",
        "Line" : 587,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "\n    <target name=\"test-ext\" depends=\"bootstrap,build-classic,test-run\"/>\n\n    <target name=\"test-all\" depends=\"test-ext\"/>\n\n    <target name=\"coverage-run\" depends=\"init\">\n        <x-sencha-command dir=\"${package.dir}\">\n            <![CDATA[\n                config\n                    -prop\n                    cmd-test.specs.test-json=${package.dir}/test/specs/coverageTest.json\n                    -prop\n                    cmd-test.coverage.results.dir=${workspace.dir}/test/coverage-results\n                then\n                package\n                    test\n                        run\n            ]]>\n        </x-sencha-command>\n    </target>\n\n    <target name=\"coverage-report\" depends=\"init\">\n        <x-shell dir=\"${workspace.dir}/test\">\n            node istanbul_report.js ${workspace.dir}/test/coverage-results ${workspace.dir}\n        </x-shell>\n    </target>\n\n    <target name=\"coverage\" depends=\"coverage-run,coverage-report\"/>\n    ",
        "Line" : 616,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 13
    },
    "prayer-client/src/main/resources/webroot/ext/classic/classic/build.xml" : {
      "ObjectId" : "c7c11423c6e25d2e40fafd4bda81d544f08e0198",
      "LastModified" : "2015-09-21T01:09:43Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n    The build-impl.xml file imported here contains the guts of the build process. It is\n    a great idea to read that file to understand how the process works, but it is best to\n    limit your changes to this file.\n    ",
        "Line" : 7,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "\n        Ext JS produces a few additional flavors of compiled code, so we just reject the\n        provided build.compile.command property and substitute our own.\n        ",
        "Line" : 52,
        "CharPositionInLine" : 12
      },
      "2" : {
        "Text" : "\n        Duplicate the \"ext.js\" dev-mode bootstrap file to the other deployed names\n        ",
        "Line" : 343,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 3
    },
    "prayer-client/src/main/resources/webroot/ext/classic/locale/build.xml" : {
      "ObjectId" : "e94cd64435c0390952e1e41cc912dab5a2f331e0",
      "LastModified" : "2015-09-21T01:09:43Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n    The build-impl.xml file imported here contains the guts of the build process. It is\n    a great idea to read that file to understand how the process works, but it is best to\n    limit your changes to this file.\n    ",
        "Line" : 7,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "\n    The following targets can be provided to inject logic before and/or after key steps\n    of the build process:\n\n        The \"init-local\" target is used to initialize properties that may be personalized\n        for the local machine.\n\n            <target name=\"-before-init-local\"/>\n            <target name=\"-after-init-local\"/>\n\n        The \"clean\" target is used to clean build output from the build.dir.\n\n            <target name=\"-before-clean\"/>\n            <target name=\"-after-clean\"/>\n\n        The general \"init\" target is used to initialize all other properties, including\n        those provided by Sencha Cmd.\n\n            <target name=\"-before-init\"/>\n            <target name=\"-after-init\"/>\n        \n        The \"build\" target performs the call to Sencha Cmd to build the application.\n\n            <target name=\"-before-build\"/>\n            <target name=\"-after-build\"/>\n    ",
        "Line" : 36,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "\n                <ant antfile=\"${package.dir}/build.xml\"\n                     inheritall=\"false\"\n                     target=\"js\"\n                     useNativeBasedir=\"true\"\n                     inheritrefs=\"true\">\n                    <property name=\"package.framework\" value=\"ext\"/>\n                    <property name=\"cmd.dir\" value=\"${cmd.dir}\"/>\n                    <property name=\"compiler.ref.id\" \n                              value=\"${compiler.ref.id}-${build.locale}\"/>\n                    <property name=\"package.locale\" value=\"${build.locale}\"/>\n                    <property name=\"build.name.prefix\" value=\"${package.name}-${build.locale}\"/>\n                    <property name=\"build.name.css.prefix\" value=\"${package.name}-${build.locale}\"/>\n                </ant>\n                ",
        "Line" : 78,
        "CharPositionInLine" : 20
      },
      "CommentCount" : 3
    },
    "prayer-client/src/main/resources/webroot/ext/classic/theme-aria/build.xml" : {
      "ObjectId" : "cdae1189bdafaaa66a2e6bc352e019b0d64a3c75",
      "LastModified" : "2015-09-21T01:09:43Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n    The build-impl.xml file imported here contains the guts of the build process. It is\n    a great idea to read that file to understand how the process works, but it is best to\n    limit your changes to this file.\n    ",
        "Line" : 7,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "\n    The following targets can be provided to inject logic before and/or after key steps\n    of the build process:\n\n        The \"init-local\" target is used to initialize properties that may be personalized\n        for the local machine.\n\n            <target name=\"-before-init-local\"/>\n            <target name=\"-after-init-local\"/>\n\n        The \"clean\" target is used to clean build output from the build.dir.\n\n            <target name=\"-before-clean\"/>\n            <target name=\"-after-clean\"/>\n\n        The general \"init\" target is used to initialize all other properties, including\n        those provided by Sencha Cmd.\n\n            <target name=\"-before-init\"/>\n            <target name=\"-after-init\"/>\n        \n        The \"build\" target performs the call to Sencha Cmd to build the application.\n\n            <target name=\"-before-build\"/>\n            <target name=\"-after-build\"/>\n    ",
        "Line" : 35,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "regenerate the example page to pick up changes to relative path to packages",
        "Line" : 40,
        "CharPositionInLine" : 87
      },
      "CommentCount" : 3
    },
    "prayer-client/src/main/resources/webroot/ext/classic/theme-base/build.xml" : {
      "ObjectId" : "b9f5579c096391d610026819d12fb60966c847ad",
      "LastModified" : "2015-09-21T01:09:43Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n    The build-impl.xml file imported here contains the guts of the build process. It is\n    a great idea to read that file to understand how the process works, but it is best to\n    limit your changes to this file.\n    ",
        "Line" : 7,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "\n    The following targets can be provided to inject logic before and/or after key steps\n    of the build process:\n\n        The \"init-local\" target is used to initialize properties that may be personalized\n        for the local machine.\n\n            <target name=\"-before-init-local\"/>\n            <target name=\"-after-init-local\"/>\n\n        The \"clean\" target is used to clean build output from the build.dir.\n\n            <target name=\"-before-clean\"/>\n            <target name=\"-after-clean\"/>\n\n        The general \"init\" target is used to initialize all other properties, including\n        those provided by Sencha Cmd.\n\n            <target name=\"-before-init\"/>\n            <target name=\"-after-init\"/>\n        \n        The \"build\" target performs the call to Sencha Cmd to build the application.\n\n            <target name=\"-before-build\"/>\n            <target name=\"-after-build\"/>\n    ",
        "Line" : 36,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "prayer-client/src/main/resources/webroot/ext/classic/theme-classic-sandbox/build.xml" : {
      "ObjectId" : "01da31372062151d6b35b6a643f0eda5479c65f4",
      "LastModified" : "2015-09-21T01:09:43Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n    The build-impl.xml file imported here contains the guts of the build process. It is\n    a great idea to read that file to understand how the process works, but it is best to\n    limit your changes to this file.\n    ",
        "Line" : 7,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "\n    The following targets can be provided to inject logic before and/or after key steps\n    of the build process:\n\n        The \"init-local\" target is used to initialize properties that may be personalized\n        for the local machine.\n\n            <target name=\"-before-init-local\"/>\n            <target name=\"-after-init-local\"/>\n\n        The \"clean\" target is used to clean build output from the build.dir.\n\n            <target name=\"-before-clean\"/>\n            <target name=\"-after-clean\"/>\n\n        The general \"init\" target is used to initialize all other properties, including\n        those provided by Sencha Cmd.\n\n            <target name=\"-before-init\"/>\n            <target name=\"-after-init\"/>\n        \n        The \"build\" target performs the call to Sencha Cmd to build the application.\n\n            <target name=\"-before-build\"/>\n            <target name=\"-after-build\"/>\n    ",
        "Line" : 36,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "prayer-client/src/main/resources/webroot/ext/classic/theme-classic/build.xml" : {
      "ObjectId" : "9e594b2437b8d3ca20a8d445380aef817091c205",
      "LastModified" : "2015-09-21T01:09:43Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n    The build-impl.xml file imported here contains the guts of the build process. It is\n    a great idea to read that file to understand how the process works, but it is best to\n    limit your changes to this file.\n    ",
        "Line" : 7,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "\n    The following targets can be provided to inject logic before and/or after key steps\n    of the build process:\n\n        The \"init-local\" target is used to initialize properties that may be personalized\n        for the local machine.\n\n            <target name=\"-before-init-local\"/>\n            <target name=\"-after-init-local\"/>\n\n        The \"clean\" target is used to clean build output from the build.dir.\n\n            <target name=\"-before-clean\"/>\n            <target name=\"-after-clean\"/>\n\n        The general \"init\" target is used to initialize all other properties, including\n        those provided by Sencha Cmd.\n\n            <target name=\"-before-init\"/>\n            <target name=\"-after-init\"/>\n        \n        The \"build\" target performs the call to Sencha Cmd to build the application.\n\n            <target name=\"-before-build\"/>\n            <target name=\"-after-build\"/>\n    ",
        "Line" : 36,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "prayer-client/src/main/resources/webroot/ext/classic/theme-crisp-touch/build.xml" : {
      "ObjectId" : "efe0a9da93ccef3808c71221bdb81d32d96079cd",
      "LastModified" : "2015-09-21T01:09:43Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n    The build-impl.xml file imported here contains the guts of the build process. It is\n    a great idea to read that file to understand how the process works, but it is best to\n    limit your changes to this file.\n    ",
        "Line" : 7,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "\n    The following targets can be provided to inject logic before and/or after key steps\n    of the build process:\n\n        The \"init-local\" target is used to initialize properties that may be personalized\n        for the local machine.\n\n            <target name=\"-before-init-local\"/>\n            <target name=\"-after-init-local\"/>\n\n        The \"clean\" target is used to clean build output from the build.dir.\n\n            <target name=\"-before-clean\"/>\n            <target name=\"-after-clean\"/>\n\n        The general \"init\" target is used to initialize all other properties, including\n        those provided by Sencha Cmd.\n\n            <target name=\"-before-init\"/>\n            <target name=\"-after-init\"/>\n        \n        The \"build\" target performs the call to Sencha Cmd to build the application.\n\n            <target name=\"-before-build\"/>\n            <target name=\"-after-build\"/>\n    ",
        "Line" : 35,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "prayer-client/src/main/resources/webroot/ext/classic/theme-crisp/build.xml" : {
      "ObjectId" : "04b4d2f76f48f8e3950822e550b62becd282f765",
      "LastModified" : "2015-09-21T01:09:43Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n    The build-impl.xml file imported here contains the guts of the build process. It is\n    a great idea to read that file to understand how the process works, but it is best to\n    limit your changes to this file.\n    ",
        "Line" : 7,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "\n    The following targets can be provided to inject logic before and/or after key steps\n    of the build process:\n\n        The \"init-local\" target is used to initialize properties that may be personalized\n        for the local machine.\n\n            <target name=\"-before-init-local\"/>\n            <target name=\"-after-init-local\"/>\n\n        The \"clean\" target is used to clean build output from the build.dir.\n\n            <target name=\"-before-clean\"/>\n            <target name=\"-after-clean\"/>\n\n        The general \"init\" target is used to initialize all other properties, including\n        those provided by Sencha Cmd.\n\n            <target name=\"-before-init\"/>\n            <target name=\"-after-init\"/>\n        \n        The \"build\" target performs the call to Sencha Cmd to build the application.\n\n            <target name=\"-before-build\"/>\n            <target name=\"-after-build\"/>\n    ",
        "Line" : 36,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "prayer-client/src/main/resources/webroot/ext/classic/theme-gray/build.xml" : {
      "ObjectId" : "90ea09069b5fbf861c72be23ed03bfb6b932db43",
      "LastModified" : "2015-09-21T01:09:43Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n    The build-impl.xml file imported here contains the guts of the build process. It is\n    a great idea to read that file to understand how the process works, but it is best to\n    limit your changes to this file.\n    ",
        "Line" : 7,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "\n    The following targets can be provided to inject logic before and/or after key steps\n    of the build process:\n\n        The \"init-local\" target is used to initialize properties that may be personalized\n        for the local machine.\n\n            <target name=\"-before-init-local\"/>\n            <target name=\"-after-init-local\"/>\n\n        The \"clean\" target is used to clean build output from the build.dir.\n\n            <target name=\"-before-clean\"/>\n            <target name=\"-after-clean\"/>\n\n        The general \"init\" target is used to initialize all other properties, including\n        those provided by Sencha Cmd.\n\n            <target name=\"-before-init\"/>\n            <target name=\"-after-init\"/>\n        \n        The \"build\" target performs the call to Sencha Cmd to build the application.\n\n            <target name=\"-before-build\"/>\n            <target name=\"-after-build\"/>\n    ",
        "Line" : 36,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "prayer-client/src/main/resources/webroot/ext/classic/theme-neptune-touch/build.xml" : {
      "ObjectId" : "396c85886e7ecd6a51714d746252cf3951258d23",
      "LastModified" : "2015-09-21T01:09:43Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n    The build-impl.xml file imported here contains the guts of the build process. It is\n    a great idea to read that file to understand how the process works, but it is best to\n    limit your changes to this file.\n    ",
        "Line" : 7,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "\n    The following targets can be provided to inject logic before and/or after key steps\n    of the build process:\n\n        The \"init-local\" target is used to initialize properties that may be personalized\n        for the local machine.\n\n            <target name=\"-before-init-local\"/>\n            <target name=\"-after-init-local\"/>\n\n        The \"clean\" target is used to clean build output from the build.dir.\n\n            <target name=\"-before-clean\"/>\n            <target name=\"-after-clean\"/>\n\n        The general \"init\" target is used to initialize all other properties, including\n        those provided by Sencha Cmd.\n\n            <target name=\"-before-init\"/>\n            <target name=\"-after-init\"/>\n        \n        The \"build\" target performs the call to Sencha Cmd to build the application.\n\n            <target name=\"-before-build\"/>\n            <target name=\"-after-build\"/>\n    ",
        "Line" : 36,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "prayer-client/src/main/resources/webroot/ext/classic/theme-neptune/build.xml" : {
      "ObjectId" : "904443b5ecdbbff3c80281a7590b3d854a9b23f3",
      "LastModified" : "2015-09-21T01:09:43Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n    The build-impl.xml file imported here contains the guts of the build process. It is\n    a great idea to read that file to understand how the process works, but it is best to\n    limit your changes to this file.\n    ",
        "Line" : 7,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "\n    The following targets can be provided to inject logic before and/or after key steps\n    of the build process:\n\n        The \"init-local\" target is used to initialize properties that may be personalized\n        for the local machine.\n\n            <target name=\"-before-init-local\"/>\n            <target name=\"-after-init-local\"/>\n\n        The \"clean\" target is used to clean build output from the build.dir.\n\n            <target name=\"-before-clean\"/>\n            <target name=\"-after-clean\"/>\n\n        The general \"init\" target is used to initialize all other properties, including\n        those provided by Sencha Cmd.\n\n            <target name=\"-before-init\"/>\n            <target name=\"-after-init\"/>\n        \n        The \"build\" target performs the call to Sencha Cmd to build the application.\n\n            <target name=\"-before-build\"/>\n            <target name=\"-after-build\"/>\n    ",
        "Line" : 36,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "prayer-client/src/main/resources/webroot/ext/classic/theme-neutral/build.xml" : {
      "ObjectId" : "fd0abfdb5704cd5880588a807e979097d6533225",
      "LastModified" : "2015-09-21T01:09:43Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n    The build-impl.xml file imported here contains the guts of the build process. It is\n    a great idea to read that file to understand how the process works, but it is best to\n    limit your changes to this file.\n    ",
        "Line" : 7,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "\n    The following targets can be provided to inject logic before and/or after key steps\n    of the build process:\n\n        The \"init-local\" target is used to initialize properties that may be personalized\n        for the local machine.\n\n            <target name=\"-before-init-local\"/>\n            <target name=\"-after-init-local\"/>\n\n        The \"clean\" target is used to clean build output from the build.dir.\n\n            <target name=\"-before-clean\"/>\n            <target name=\"-after-clean\"/>\n\n        The general \"init\" target is used to initialize all other properties, including\n        those provided by Sencha Cmd.\n\n            <target name=\"-before-init\"/>\n            <target name=\"-after-init\"/>\n        \n        The \"build\" target performs the call to Sencha Cmd to build the application.\n\n            <target name=\"-before-build\"/>\n            <target name=\"-after-build\"/>\n    ",
        "Line" : 36,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "prayer-client/src/main/resources/webroot/ext/classic/theme-triton/build.xml" : {
      "ObjectId" : "eac02e3970ac6ebdf9a8f4281afe32ae0e9bb146",
      "LastModified" : "2015-09-21T01:09:43Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n    The build-impl.xml file imported here contains the guts of the build process. It is\n    a great idea to read that file to understand how the process works, but it is best to\n    limit your changes to this file.\n    ",
        "Line" : 7,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "\n    The following targets can be provided to inject logic before and/or after key steps\n    of the build process:\n\n        The \"init-local\" target is used to initialize properties that may be personalized\n        for the local machine.\n\n            <target name=\"-before-init-local\"/>\n            <target name=\"-after-init-local\"/>\n\n        The \"clean\" target is used to clean build output from the build.dir.\n\n            <target name=\"-before-clean\"/>\n            <target name=\"-after-clean\"/>\n\n        The general \"init\" target is used to initialize all other properties, including\n        those provided by Sencha Cmd.\n\n            <target name=\"-before-init\"/>\n            <target name=\"-after-init\"/>\n        \n        The \"build\" target performs the call to Sencha Cmd to build the application.\n\n            <target name=\"-before-build\"/>\n            <target name=\"-after-build\"/>\n    ",
        "Line" : 35,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "prayer-client/src/main/resources/webroot/ext/classic/touch-sizing/build.xml" : {
      "ObjectId" : "ff883be39e0ea466d74251889368677620f29669",
      "LastModified" : "2015-09-21T01:09:43Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n    The build-impl.xml file imported here contains the guts of the build process. It is\n    a great idea to read that file to understand how the process works, but it is best to\n    limit your changes to this file.\n    ",
        "Line" : 7,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "\n    The following targets can be provided to inject logic before and/or after key steps\n    of the build process:\n\n        The \"init-local\" target is used to initialize properties that may be personalized\n        for the local machine.\n\n            <target name=\"-before-init-local\"/>\n            <target name=\"-after-init-local\"/>\n\n        The \"clean\" target is used to clean build output from the build.dir.\n\n            <target name=\"-before-clean\"/>\n            <target name=\"-after-clean\"/>\n\n        The general \"init\" target is used to initialize all other properties, including\n        those provided by Sencha Cmd.\n\n            <target name=\"-before-init\"/>\n            <target name=\"-after-init\"/>\n        \n        The \"build\" target performs the call to Sencha Cmd to build the application.\n\n            <target name=\"-before-build\"/>\n            <target name=\"-after-build\"/>\n    ",
        "Line" : 35,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "prayer-client/src/main/resources/webroot/ext/modern/modern/build.xml" : {
      "ObjectId" : "5d6c3cb3e64c2d0ae5b02e4538b57706700771a5",
      "LastModified" : "2015-09-21T01:09:43Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n    The build-impl.xml file imported here contains the guts of the build process. It is\n    a great idea to read that file to understand how the process works, but it is best to\n    limit your changes to this file.\n    ",
        "Line" : 7,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "\n    The following targets can be provided to inject logic before and/or after key steps\n    of the build process:\n\n        The \"init-local\" target is used to initialize properties that may be personalized\n        for the local machine.\n\n            <target name=\"-before-init-local\"/>\n            <target name=\"-after-init-local\"/>\n\n        The \"clean\" target is used to clean build output from the build.dir.\n\n            <target name=\"-before-clean\"/>\n            <target name=\"-after-clean\"/>\n\n        The general \"init\" target is used to initialize all other properties, including\n        those provided by Sencha Cmd.\n\n            <target name=\"-before-init\"/>\n            <target name=\"-after-init\"/>\n        \n        The \"build\" target performs the call to Sencha Cmd to build the application.\n\n            <target name=\"-before-build\"/>\n            <target name=\"-after-build\"/>\n    ",
        "Line" : 36,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "\n        Duplicate the \"ext.js\" dev-mode bootstrap file to the other deployed names\n        ",
        "Line" : 264,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 3
    },
    "prayer-client/src/main/resources/webroot/ext/modern/theme-base/build.xml" : {
      "ObjectId" : "866fa6fd0bd69ddb5cfd486f9c121042dba3db22",
      "LastModified" : "2015-09-21T01:09:43Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n    The build-impl.xml file imported here contains the guts of the build process. It is\n    a great idea to read that file to understand how the process works, but it is best to\n    limit your changes to this file.\n    ",
        "Line" : 7,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "\n    The following targets can be provided to inject logic before and/or after key steps\n    of the build process:\n\n        The \"init-local\" target is used to initialize properties that may be personalized\n        for the local machine.\n\n            <target name=\"-before-init-local\"/>\n            <target name=\"-after-init-local\"/>\n\n        The \"clean\" target is used to clean build output from the build.dir.\n\n            <target name=\"-before-clean\"/>\n            <target name=\"-after-clean\"/>\n\n        The general \"init\" target is used to initialize all other properties, including\n        those provided by Sencha Cmd.\n\n            <target name=\"-before-init\"/>\n            <target name=\"-after-init\"/>\n        \n        The \"build\" target performs the call to Sencha Cmd to build the application.\n\n            <target name=\"-before-build\"/>\n            <target name=\"-after-build\"/>\n    ",
        "Line" : 35,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "prayer-client/src/main/resources/webroot/ext/modern/theme-cupertino/build.xml" : {
      "ObjectId" : "93e6635e1bcd7223b19d0ef0c9e4c7d0c644d4af",
      "LastModified" : "2015-09-21T01:09:43Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n    The build-impl.xml file imported here contains the guts of the build process. It is\n    a great idea to read that file to understand how the process works, but it is best to\n    limit your changes to this file.\n    ",
        "Line" : 7,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "\n    The following targets can be provided to inject logic before and/or after key steps\n    of the build process:\n\n        The \"init-local\" target is used to initialize properties that may be personalized\n        for the local machine.\n\n            <target name=\"-before-init-local\"/>\n            <target name=\"-after-init-local\"/>\n\n        The \"clean\" target is used to clean build output from the build.dir.\n\n            <target name=\"-before-clean\"/>\n            <target name=\"-after-clean\"/>\n\n        The general \"init\" target is used to initialize all other properties, including\n        those provided by Sencha Cmd.\n\n            <target name=\"-before-init\"/>\n            <target name=\"-after-init\"/>\n        \n        The \"build\" target performs the call to Sencha Cmd to build the application.\n\n            <target name=\"-before-build\"/>\n            <target name=\"-after-build\"/>\n    ",
        "Line" : 35,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "prayer-client/src/main/resources/webroot/ext/modern/theme-device-base/build.xml" : {
      "ObjectId" : "264e348cb691548fb0c03c1db3aa890a3242ee6d",
      "LastModified" : "2015-09-21T01:09:43Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n    The build-impl.xml file imported here contains the guts of the build process. It is\n    a great idea to read that file to understand how the process works, but it is best to\n    limit your changes to this file.\n    ",
        "Line" : 7,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "\n    The following targets can be provided to inject logic before and/or after key steps\n    of the build process:\n\n        The \"init-local\" target is used to initialize properties that may be personalized\n        for the local machine.\n\n            <target name=\"-before-init-local\"/>\n            <target name=\"-after-init-local\"/>\n\n        The \"clean\" target is used to clean build output from the build.dir.\n\n            <target name=\"-before-clean\"/>\n            <target name=\"-after-clean\"/>\n\n        The general \"init\" target is used to initialize all other properties, including\n        those provided by Sencha Cmd.\n\n            <target name=\"-before-init\"/>\n            <target name=\"-after-init\"/>\n        \n        The \"build\" target performs the call to Sencha Cmd to build the application.\n\n            <target name=\"-before-build\"/>\n            <target name=\"-after-build\"/>\n    ",
        "Line" : 35,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "prayer-client/src/main/resources/webroot/ext/modern/theme-mountainview/build.xml" : {
      "ObjectId" : "3ede2ba960f806664b978d0fc227abfc3dda83f9",
      "LastModified" : "2015-09-21T01:09:43Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n    The build-impl.xml file imported here contains the guts of the build process. It is\n    a great idea to read that file to understand how the process works, but it is best to\n    limit your changes to this file.\n    ",
        "Line" : 7,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "\n    The following targets can be provided to inject logic before and/or after key steps\n    of the build process:\n\n        The \"init-local\" target is used to initialize properties that may be personalized\n        for the local machine.\n\n            <target name=\"-before-init-local\"/>\n            <target name=\"-after-init-local\"/>\n\n        The \"clean\" target is used to clean build output from the build.dir.\n\n            <target name=\"-before-clean\"/>\n            <target name=\"-after-clean\"/>\n\n        The general \"init\" target is used to initialize all other properties, including\n        those provided by Sencha Cmd.\n\n            <target name=\"-before-init\"/>\n            <target name=\"-after-init\"/>\n        \n        The \"build\" target performs the call to Sencha Cmd to build the application.\n\n            <target name=\"-before-build\"/>\n            <target name=\"-after-build\"/>\n    ",
        "Line" : 35,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "prayer-client/src/main/resources/webroot/ext/modern/theme-neptune/build.xml" : {
      "ObjectId" : "1ac98463e74a1cecf301058afa78ad62bb07878a",
      "LastModified" : "2015-09-21T01:09:43Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n    The build-impl.xml file imported here contains the guts of the build process. It is\n    a great idea to read that file to understand how the process works, but it is best to\n    limit your changes to this file.\n    ",
        "Line" : 7,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "\n    The following targets can be provided to inject logic before and/or after key steps\n    of the build process:\n\n        The \"init-local\" target is used to initialize properties that may be personalized\n        for the local machine.\n\n            <target name=\"-before-init-local\"/>\n            <target name=\"-after-init-local\"/>\n\n        The \"clean\" target is used to clean build output from the build.dir.\n\n            <target name=\"-before-clean\"/>\n            <target name=\"-after-clean\"/>\n\n        The general \"init\" target is used to initialize all other properties, including\n        those provided by Sencha Cmd.\n\n            <target name=\"-before-init\"/>\n            <target name=\"-after-init\"/>\n        \n        The \"build\" target performs the call to Sencha Cmd to build the application.\n\n            <target name=\"-before-build\"/>\n            <target name=\"-after-build\"/>\n    ",
        "Line" : 35,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "prayer-client/src/main/resources/webroot/ext/modern/theme-triton/build.xml" : {
      "ObjectId" : "eac02e3970ac6ebdf9a8f4281afe32ae0e9bb146",
      "LastModified" : "2015-09-21T01:09:43Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n    The build-impl.xml file imported here contains the guts of the build process. It is\n    a great idea to read that file to understand how the process works, but it is best to\n    limit your changes to this file.\n    ",
        "Line" : 7,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "\n    The following targets can be provided to inject logic before and/or after key steps\n    of the build process:\n\n        The \"init-local\" target is used to initialize properties that may be personalized\n        for the local machine.\n\n            <target name=\"-before-init-local\"/>\n            <target name=\"-after-init-local\"/>\n\n        The \"clean\" target is used to clean build output from the build.dir.\n\n            <target name=\"-before-clean\"/>\n            <target name=\"-after-clean\"/>\n\n        The general \"init\" target is used to initialize all other properties, including\n        those provided by Sencha Cmd.\n\n            <target name=\"-before-init\"/>\n            <target name=\"-after-init\"/>\n        \n        The \"build\" target performs the call to Sencha Cmd to build the application.\n\n            <target name=\"-before-build\"/>\n            <target name=\"-after-build\"/>\n    ",
        "Line" : 35,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "prayer-client/src/main/resources/webroot/ext/modern/theme-windows/build.xml" : {
      "ObjectId" : "4b751589d3e732b91048abad99068e439acd5506",
      "LastModified" : "2015-09-21T01:09:43Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n    The build-impl.xml file imported here contains the guts of the build process. It is\n    a great idea to read that file to understand how the process works, but it is best to\n    limit your changes to this file.\n    ",
        "Line" : 7,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "\n    The following targets can be provided to inject logic before and/or after key steps\n    of the build process:\n\n        The \"init-local\" target is used to initialize properties that may be personalized\n        for the local machine.\n\n            <target name=\"-before-init-local\"/>\n            <target name=\"-after-init-local\"/>\n\n        The \"clean\" target is used to clean build output from the build.dir.\n\n            <target name=\"-before-clean\"/>\n            <target name=\"-after-clean\"/>\n\n        The general \"init\" target is used to initialize all other properties, including\n        those provided by Sencha Cmd.\n\n            <target name=\"-before-init\"/>\n            <target name=\"-after-init\"/>\n        \n        The \"build\" target performs the call to Sencha Cmd to build the application.\n\n            <target name=\"-before-build\"/>\n            <target name=\"-after-build\"/>\n    ",
        "Line" : 35,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "prayer-client/src/main/resources/webroot/ext/packages/amf/build.xml" : {
      "ObjectId" : "d6879d466bfed565927fb357a27027bb315d3805",
      "LastModified" : "2015-09-21T01:09:43Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n    The build-impl.xml file imported here contains the guts of the build process. It is\n    a great idea to read that file to understand how the process works, but it is best to\n    limit your changes to this file.\n    ",
        "Line" : 7,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "\n    The following targets can be provided to inject logic before and/or after key steps\n    of the build process:\n\n        The \"init-local\" target is used to initialize properties that may be personalized\n        for the local machine.\n\n            <target name=\"-before-init-local\"/>\n            <target name=\"-after-init-local\"/>\n\n        The \"clean\" target is used to clean build output from the build.dir.\n\n            <target name=\"-before-clean\"/>\n            <target name=\"-after-clean\"/>\n\n        The general \"init\" target is used to initialize all other properties, including\n        those provided by Sencha Cmd.\n\n            <target name=\"-before-init\"/>\n            <target name=\"-after-init\"/>\n        \n        The \"build\" target performs the call to Sencha Cmd to build the application.\n\n            <target name=\"-before-build\"/>\n            <target name=\"-after-build\"/>\n    ",
        "Line" : 36,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "prayer-client/src/main/resources/webroot/ext/packages/charts/build.xml" : {
      "ObjectId" : "d6227804f66b822df3e1b48c5bad5455c5a7f4b4",
      "LastModified" : "2015-09-21T01:09:43Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n    The build-impl.xml file imported here contains the guts of the build process. It is\n    a great idea to read that file to understand how the process works, but it is best to\n    limit your changes to this file.\n    ",
        "Line" : 7,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "\n    The following targets can be provided to inject logic before and/or after key steps\n    of the build process:\n\n        The \"init-local\" target is used to initialize properties that may be personalized\n        for the local machine.\n\n            <target name=\"-before-init-local\"/>\n            <target name=\"-after-init-local\"/>\n\n        The \"clean\" target is used to clean build output from the build.dir.\n\n            <target name=\"-before-clean\"/>\n            <target name=\"-after-clean\"/>\n\n        The general \"init\" target is used to initialize all other properties, including\n        those provided by Sencha Cmd.\n\n            <target name=\"-before-init\"/>\n            <target name=\"-after-init\"/>\n        \n        The \"build\" target performs the call to Sencha Cmd to build the application.\n\n            <target name=\"-before-build\"/>\n            <target name=\"-after-build\"/>\n    ",
        "Line" : 35,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "prayer-client/src/main/resources/webroot/ext/packages/core/build.xml" : {
      "ObjectId" : "c36531908cb239b6c9a35bc1e62afe9596fafe5f",
      "LastModified" : "2015-09-21T01:09:43Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n    The build-impl.xml file imported here contains the guts of the build process. It is\n    a great idea to read that file to understand how the process works, but it is best to\n    limit your changes to this file.\n    ",
        "Line" : 7,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "\n    The following targets can be provided to inject logic before and/or after key steps\n    of the build process:\n\n        The \"init-local\" target is used to initialize properties that may be personalized\n        for the local machine.\n\n            <target name=\"-before-init-local\"/>\n            <target name=\"-after-init-local\"/>\n\n        The \"clean\" target is used to clean build output from the build.dir.\n\n            <target name=\"-before-clean\"/>\n            <target name=\"-after-clean\"/>\n\n        The general \"init\" target is used to initialize all other properties, including\n        those provided by Sencha Cmd.\n\n            <target name=\"-before-init\"/>\n            <target name=\"-after-init\"/>\n        \n        The \"build\" target performs the call to Sencha Cmd to build the application.\n\n            <target name=\"-before-build\"/>\n            <target name=\"-after-build\"/>\n    ",
        "Line" : 36,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "\n    ******************************************************************\n    Private/Internal targets\n    ******************************************************************\n    ",
        "Line" : 50,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 3
    },
    "prayer-client/src/main/resources/webroot/ext/packages/font-awesome/build.xml" : {
      "ObjectId" : "8879e436d900def6d2d0970f4468040b7df3effe",
      "LastModified" : "2015-09-21T01:09:43Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n    The build-impl.xml file imported here contains the guts of the build process. It is\n    a great idea to read that file to understand how the process works, but it is best to\n    limit your changes to this file.\n    ",
        "Line" : 7,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "\n    The following targets can be provided to inject logic before and/or after key steps\n    of the build process:\n\n        The \"init-local\" target is used to initialize properties that may be personalized\n        for the local machine.\n\n            <target name=\"-before-init-local\"/>\n            <target name=\"-after-init-local\"/>\n\n        The \"clean\" target is used to clean build output from the build.dir.\n\n            <target name=\"-before-clean\"/>\n            <target name=\"-after-clean\"/>\n\n        The general \"init\" target is used to initialize all other properties, including\n        those provided by Sencha Cmd.\n\n            <target name=\"-before-init\"/>\n            <target name=\"-after-init\"/>\n        \n        The \"build\" target performs the call to Sencha Cmd to build the application.\n\n            <target name=\"-before-build\"/>\n            <target name=\"-after-build\"/>\n    ",
        "Line" : 35,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "prayer-client/src/main/resources/webroot/ext/packages/font-ext/build.xml" : {
      "ObjectId" : "1f62201dbb88143db06999c60f383762da75c67e",
      "LastModified" : "2015-09-21T01:09:43Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n    The build-impl.xml file imported here contains the guts of the build process. It is\n    a great idea to read that file to understand how the process works, but it is best to\n    limit your changes to this file.\n    ",
        "Line" : 7,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "\n    The following targets can be provided to inject logic before and/or after key steps\n    of the build process:\n\n        The \"init-local\" target is used to initialize properties that may be personalized\n        for the local machine.\n\n            <target name=\"-before-init-local\"/>\n            <target name=\"-after-init-local\"/>\n\n        The \"clean\" target is used to clean build output from the build.dir.\n\n            <target name=\"-before-clean\"/>\n            <target name=\"-after-clean\"/>\n\n        The general \"init\" target is used to initialize all other properties, including\n        those provided by Sencha Cmd.\n\n            <target name=\"-before-init\"/>\n            <target name=\"-after-init\"/>\n        \n        The \"build\" target performs the call to Sencha Cmd to build the application.\n\n            <target name=\"-before-build\"/>\n            <target name=\"-after-build\"/>\n    ",
        "Line" : 35,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "prayer-client/src/main/resources/webroot/ext/packages/font-pictos/build.xml" : {
      "ObjectId" : "f1ae8c5d80b50c7e9bff39873259e8291bf3dc58",
      "LastModified" : "2015-09-21T01:09:43Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n    The build-impl.xml file imported here contains the guts of the build process. It is\n    a great idea to read that file to understand how the process works, but it is best to\n    limit your changes to this file.\n    ",
        "Line" : 7,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "\n    The following targets can be provided to inject logic before and/or after key steps\n    of the build process:\n\n        The \"init-local\" target is used to initialize properties that may be personalized\n        for the local machine.\n\n            <target name=\"-before-init-local\"/>\n            <target name=\"-after-init-local\"/>\n\n        The \"clean\" target is used to clean build output from the build.dir.\n\n            <target name=\"-before-clean\"/>\n            <target name=\"-after-clean\"/>\n\n        The general \"init\" target is used to initialize all other properties, including\n        those provided by Sencha Cmd.\n\n            <target name=\"-before-init\"/>\n            <target name=\"-after-init\"/>\n        \n        The \"build\" target performs the call to Sencha Cmd to build the application.\n\n            <target name=\"-before-build\"/>\n            <target name=\"-after-build\"/>\n    ",
        "Line" : 35,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "prayer-client/src/main/resources/webroot/ext/packages/legacy/build.xml" : {
      "ObjectId" : "c19c06df3528dc6058dd2119e9d8b8bfaa398696",
      "LastModified" : "2015-09-21T01:09:43Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n    The build-impl.xml file imported here contains the guts of the build process. It is\n    a great idea to read that file to understand how the process works, but it is best to\n    limit your changes to this file.\n    ",
        "Line" : 7,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "\n    The following targets can be provided to inject logic before and/or after key steps\n    of the build process:\n\n        The \"init-local\" target is used to initialize properties that may be personalized\n        for the local machine.\n\n            <target name=\"-before-init-local\"/>\n            <target name=\"-after-init-local\"/>\n\n        The \"clean\" target is used to clean build output from the build.dir.\n\n            <target name=\"-before-clean\"/>\n            <target name=\"-after-clean\"/>\n\n        The general \"init\" target is used to initialize all other properties, including\n        those provided by Sencha Cmd.\n\n            <target name=\"-before-init\"/>\n            <target name=\"-after-init\"/>\n        \n        The \"build\" target performs the call to Sencha Cmd to build the application.\n\n            <target name=\"-before-build\"/>\n            <target name=\"-after-build\"/>\n    ",
        "Line" : 35,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "prayer-client/src/main/resources/webroot/ext/packages/soap/build.xml" : {
      "ObjectId" : "3ad512804183a3bd423cbcb28f9fd95d57acf3fd",
      "LastModified" : "2015-09-21T01:09:43Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n    The build-impl.xml file imported here contains the guts of the build process. It is\n    a great idea to read that file to understand how the process works, but it is best to\n    limit your changes to this file.\n    ",
        "Line" : 7,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "\n    The following targets can be provided to inject logic before and/or after key steps\n    of the build process:\n\n        The \"init-local\" target is used to initialize properties that may be personalized\n        for the local machine.\n\n            <target name=\"-before-init-local\"/>\n            <target name=\"-after-init-local\"/>\n\n        The \"clean\" target is used to clean build output from the build.dir.\n\n            <target name=\"-before-clean\"/>\n            <target name=\"-after-clean\"/>\n\n        The general \"init\" target is used to initialize all other properties, including\n        those provided by Sencha Cmd.\n\n            <target name=\"-before-init\"/>\n            <target name=\"-after-init\"/>\n        \n        The \"build\" target performs the call to Sencha Cmd to build the application.\n\n            <target name=\"-before-build\"/>\n            <target name=\"-after-build\"/>\n    ",
        "Line" : 36,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "prayer-client/src/main/resources/webroot/ext/packages/ux/build.xml" : {
      "ObjectId" : "fb3d763a03069b58583f6c38ee21a7f50a8c8a99",
      "LastModified" : "2015-09-21T01:09:43Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n    The build-impl.xml file imported here contains the guts of the build process. It is\n    a great idea to read that file to understand how the process works, but it is best to\n    limit your changes to this file.\n    ",
        "Line" : 7,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "\n    The following targets can be provided to inject logic before and/or after key steps\n    of the build process:\n\n        The \"init-local\" target is used to initialize properties that may be personalized\n        for the local machine.\n\n            <target name=\"-before-init-local\"/>\n            <target name=\"-after-init-local\"/>\n\n        The \"clean\" target is used to clean build output from the build.dir.\n\n            <target name=\"-before-clean\"/>\n            <target name=\"-after-clean\"/>\n\n        The general \"init\" target is used to initialize all other properties, including\n        those provided by Sencha Cmd.\n\n            <target name=\"-before-init\"/>\n            <target name=\"-after-init\"/>\n        \n        The \"build\" target performs the call to Sencha Cmd to build the application.\n\n            <target name=\"-before-build\"/>\n            <target name=\"-after-build\"/>\n    ",
        "Line" : 35,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "prayer-sample/pom.xml" : {
      "ObjectId" : "f5f8f56f7c0a4aa027c4fc0346c01e2ee2fbe0de",
      "LastModified" : "2016-01-04T12:48:51Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Vert.X Web ",
        "Line" : 18,
        "CharPositionInLine" : 28
      },
      "1" : {
        "Text" : " Vertx Hazelcast ",
        "Line" : 23,
        "CharPositionInLine" : 33
      },
      "2" : {
        "Text" : " Prayer Framework ",
        "Line" : 28,
        "CharPositionInLine" : 34
      },
      "3" : {
        "Text" : " Java Assist ",
        "Line" : 33,
        "CharPositionInLine" : 29
      },
      "4" : {
        "Text" : " AJDT Compile ",
        "Line" : 41,
        "CharPositionInLine" : 34
      },
      "5" : {
        "Text" : " 除开Util-Comet以外，其他项目必须包含此片段，主要用于适配.aj文件来启动OVal的防御式编程 ",
        "Line" : 68,
        "CharPositionInLine" : 81
      },
      "6" : {
        "Text" : " Begin ",
        "Line" : 69,
        "CharPositionInLine" : 35
      },
      "7" : {
        "Text" : " 暂时忽略警告信息，目前存在一个Xlint:typeNotExposedToWeaver的问题 ",
        "Line" : 70,
        "CharPositionInLine" : 76
      },
      "8" : {
        "Text" : " End ",
        "Line" : 72,
        "CharPositionInLine" : 33
      },
      "CommentCount" : 9
    },
    "prayer-ws/pom.xml" : {
      "ObjectId" : "87128fbf0edb9eafbad33c6e4a6e4fafa16e9d3d",
      "LastModified" : "2016-01-04T12:48:51Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Prayer Framework ",
        "Line" : 15,
        "CharPositionInLine" : 34
      },
      "1" : {
        "Text" : " Jade4j ",
        "Line" : 20,
        "CharPositionInLine" : 24
      },
      "2" : {
        "Text" : " Vertx Web ",
        "Line" : 25,
        "CharPositionInLine" : 27
      },
      "3" : {
        "Text" : " Vertx Hazelcast ",
        "Line" : 34,
        "CharPositionInLine" : 33
      },
      "4" : {
        "Text" : " Vertx CodeGen ",
        "Line" : 39,
        "CharPositionInLine" : 31
      },
      "5" : {
        "Text" : " Vertx Security ",
        "Line" : 44,
        "CharPositionInLine" : 32
      },
      "6" : {
        "Text" : " Java Assist ",
        "Line" : 53,
        "CharPositionInLine" : 29
      },
      "7" : {
        "Text" : " Common CLI ",
        "Line" : 58,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 8
    },
    "prayer-ws/src/main/resources/webroot/vendors/flot/Makefile" : {
      "ObjectId" : "c3aba861c50d917def251a1a175a69d6569edd67",
      "LastModified" : "2015-09-21T01:09:43Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for generating minified files\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# we cheat and process all .js files instead of an exhaustive list\r\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 1,
    "ANT" : 33,
    "MAVEN" : 5
  },
  "ElapsedTime" : 4485
}