{
  "Repository" : "32265789",
  "Revision" : "HEAD",
  "ObjectId" : "25d5884746a2de7b51a8ef3ec88e1cd8066460e8",
  "CommitTime" : "2018-05-14T04:15:37Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "77d1d34cb37ce329a0737415317041c3865de754",
      "LastModified" : "2018-04-18T17:46:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The name of our project is \"VULKAN\". CMakeLists files in this project can\n\n# refer to the root source directory of the project as ${VULKAN_SOURCE_DIR} and\n\n# to the root binary directory of the project as ${VULKAN_BINARY_DIR}.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This must come before the project command.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# set (CMAKE_VERBOSE_MAKEFILE 1)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The API_NAME allows renaming builds to avoid conflicts with installed SDKs\n\n# The MAJOR number of the version we're building, used in naming\n\n# <api-name>-<major>.dll (and other files).\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# CMake versions 3 or later need CMAKE_MACOSX_RPATH defined.\n\n# This avoids the CMP0042 policy message.\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# The \"install\" target for MacOS fixes up bundles in place.\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Enable cmake folders\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This option can be used to suppress the installation of artifacts from the\n\n# Vulkan-LoaderAndValidationLayers repo while running \"make install\" for the\n\n# VulkanTools and VulkanSamples repos.  This can be used to prevent the\n\n# overwriting of LVL artifacts when installing these downstream repos.\n",
        "Line" : 75,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Header file for CMake settings\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# For GCC version 7.1 or greater, we need to disable the implicit fallthrough warning since\n\n# there's no consistent way to satisfy all compilers until they all accept the C++17 standard\n",
        "Line" : 91,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Treat warnings as errors\n",
        "Line" : 110,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Disable RTTI\n",
        "Line" : 112,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Warn about nested declarations\n",
        "Line" : 114,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Warn about potentially uninitialized variables\n",
        "Line" : 116,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Warn about different indirection types.\n",
        "Line" : 119,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Warn about signed/unsigned mismatch.\n",
        "Line" : 121,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# is WIN32\n",
        "Line" : 130,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# For Windows, since 32-bit and 64-bit items can co-exist, we build each in its own build directory.\n\n# 32-bit target data goes in build32, and 64-bit target data goes into build.  So, include/link the\n\n# appropriate data at build time.\n",
        "Line" : 135,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "#Choose natural default paths for glslang and SPIRV-Tools binaries to support custom definition by the user on the CMake command line or in the GUI\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Define a variable for a default root location to the gslang, SPIRV-Tools and other external sources and cache it to allow the user to customize it as needed\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Take some steps to set up a variable pointing to the final glslang binaries given the variety of input options\n",
        "Line" : 190,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# not WIN32\n",
        "Line" : 215,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# not WIN32\n",
        "Line" : 330,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# Define macro used for building vkxml generated files\n",
        "Line" : 337,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Define macro used for generating header files containing commit IDs for external dependencies\n",
        "Line" : 345,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# NOTE: If you modify this call to use --rev_file instead of --git_dir (to read the commit ID from a file instead of\n\n# parsing from a Git repository), you probably also want to add the revision file to the list of DEPENDS on the\n\n# subsequent line (to ensure that the script is re-run when the revision file is modified).\n",
        "Line" : 348,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# Custom target for generated vulkan helper file dependencies\n",
        "Line" : 356,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Rules to build generated helper files\n",
        "Line" : 374,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Make sure /etc is searched by the loader\n",
        "Line" : 396,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# uninstall target\n",
        "Line" : 408,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Layer Utils Library\n\n# For Windows, we use a static lib because the Windows loader has a fairly restrictive loader search\n\n# path that can't be easily modified to point it to the same directory that contains the layers.\n",
        "Line" : 418,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# loader: Generic VULKAN ICD loader\n\n# tests: VULKAN tests\n",
        "Line" : 446,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 32
    },
    "build-android/cmake/layerlib/CMakeLists.txt" : {
      "ObjectId" : "3981e319aeeb66a0894416ece3358d49ddaefe1b",
      "LastModified" : "2018-01-04T17:52:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Validation layers could be built with code from\n\n#    github repo   OR\n\n#    ndk's snapshot\n\n# The file structure for glslang spir-V is different, adding BUILD_IN_NDK variable\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# NDK directory structure:\n\n#  $ANDROID_NDK/sources/third_party/\n\n#        vulkan/src\n\n#        shaderc/third_party (for glslang & spirv-tools )\n\n# this build uses combined lib libshaderc.a for libSPIRV-Tools.a purpose\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# github directory structure:\n\n#   ${SRC_DIR}\n\n#   ${SRC_DIR}/build-android/external (for glslang, spirv-tools & shaderc )\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# assume shaderc already built externally\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# build core_validation layers which including shader validation\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "build-android/cmake/layerlib/proguard-rules.pro" : {
      "ObjectId" : "b41fe70c70577274434bd0cee86a8e2f9a2e2241",
      "LastModified" : "2017-05-23T17:46:55Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# By default, the flags in this file are appended to flags specified\n\n# in ${ANDROID_SDK}/tools/proguard/proguard-android.txt\n\n# You can edit the include path and order by changing the proguardFiles\n\n# directive in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add any project specific keep options here:\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/FindImageMagick.cmake" : {
      "ObjectId" : "2d765bce4dd49d5a57efc75c6c38fe72bb4dfb3a",
      "LastModified" : "2017-05-23T17:46:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find the ImageMagick binary suite.\n\n# This module will search for a set of ImageMagick tools specified\n\n# as components in the FIND_PACKAGE call. Typical components include,\n\n# but are not limited to (future versions of ImageMagick might have\n\n# additional components not listed here):\n\n#\n\n#  animate\n\n#  compare\n\n#  composite\n\n#  conjure\n\n#  convert\n\n#  display\n\n#  identify\n\n#  import\n\n#  mogrify\n\n#  montage\n\n#  stream\n\n#\n\n# If no component is specified in the FIND_PACKAGE call, then it only\n\n# searches for the ImageMagick executable directory. This code defines\n\n# the following variables:\n\n#\n\n#  ImageMagick_FOUND                  - TRUE if all components are found.\n\n#  ImageMagick_EXECUTABLE_DIR         - Full path to executables directory.\n\n#  ImageMagick_<component>_FOUND      - TRUE if <component> is found.\n\n#  ImageMagick_<component>_EXECUTABLE - Full path to <component> executable.\n\n#\n\n# There are also components for the following ImageMagick APIs:\n\n#\n\n#  Magick++\n\n#  MagickWand\n\n#  MagickCore\n\n#\n\n# For these components the following variables are set:\n\n#\n\n#  ImageMagick_FOUND                    - TRUE if all components are found.\n\n#  ImageMagick_INCLUDE_DIRS             - Full paths to all include dirs.\n\n#  ImageMagick_LIBRARIES                - Full paths to all libraries.\n\n#  ImageMagick_<component>_FOUND        - TRUE if <component> is found.\n\n#  ImageMagick_<component>_INCLUDE_DIRS - Full path to <component> include dirs.\n\n#  ImageMagick_<component>_LIBRARIES    - Full path to <component> libraries.\n\n#\n\n# Example Usages:\n\n#  FIND_PACKAGE(ImageMagick)\n\n#  FIND_PACKAGE(ImageMagick COMPONENTS convert)\n\n#  FIND_PACKAGE(ImageMagick COMPONENTS convert mogrify display)\n\n#  FIND_PACKAGE(ImageMagick COMPONENTS Magick++)\n\n#  FIND_PACKAGE(ImageMagick COMPONENTS Magick++ convert)\n\n#\n\n# Note that the standard FIND_PACKAGE features are supported\n\n# (i.e., QUIET, REQUIRED, etc.).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2007-2009 Kitware, Inc.\n\n# Copyright 2007-2008 Miguel A. Figueroa-Villanueva <miguelf at ieee dot org>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright_cmake.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distributed this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If a 64-bit compile, it can only appear in \"[HKLM]\\\\software\\\\ImageMagick\"\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# This is dumb, but it's the only way I've been able to get this to work.  CMake has no knowledge of the systems architecture.\n\n# So, if we want to detect if we're running a 32-bit compile on a 64-bit OS, we need to manually check for the existence of\n\n# ImageMagick in the WOW6432Node of the registry first.  If that fails, assume they want the 64-bit version.\n",
        "Line" : 81,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# If the WOW6432Node reg string returns empty, assume 32-bit OS, and look in the standard reg path.\n",
        "Line" : 88,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Otherwise, the WOW6432Node returned a string, assume 32-bit build on 64-bit OS and use that string.\n",
        "Line" : 95,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# No registry exists for Linux.  So, just set these to empty strings.\n",
        "Line" : 112,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#---------------------------------------------------------------------\n\n# Helper functions\n\n#---------------------------------------------------------------------\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# NOTE: My experience is that Windows uses the PATHs\n\n#       variables, while Linux uses the PATH_SUFFIXES.\n\n#       You can't add sub-directories to the PATH_SUFFIXES\n\n#       because it messes up the ImageMagick Include\n\n#       paths that are returned.  Instead, you have to\n\n#       call this FIND_IMAGEMAGICK_API for each separate\n\n#       possible sub-folder.\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Only add the path if it's not the special string \"<NONE>\"\n",
        "Line" : 168,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Add the architecture include path if it exists\n",
        "Line" : 175,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "#---------------------------------------------------------------------\n\n# Start Actual Work\n\n#---------------------------------------------------------------------\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Try to find a ImageMagick installation binary path.\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Find each component. Search for all tools in same dir\n\n# <ImageMagick_EXECUTABLE_DIR>; otherwise they should be found\n\n# independently and not in a cohesive module such as this one.\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# DEPRECATED: forced components for backward compatibility\n",
        "Line" : 229,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# unset cached variable that assumes header parameter never changes\n",
        "Line" : 234,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# Try top folder first\n",
        "Line" : 237,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# Look for Magick++.h, in the magick++ sub-folder\n",
        "Line" : 243,
        "CharPositionInLine" : 12
      },
      "18" : {
        "Text" : "# Look for Magick++.h, in the magick sub-folder\n",
        "Line" : 250,
        "CharPositionInLine" : 12
      },
      "19" : {
        "Text" : "# unset cached variable that assumes header parameter never changes\n",
        "Line" : 257,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# Try top folder first\n",
        "Line" : 260,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "# Look for MagickWand.h in the wand sub-folder\n",
        "Line" : 266,
        "CharPositionInLine" : 12
      },
      "22" : {
        "Text" : "# Look for MagickWand.h he MagickWand sub-folder\n",
        "Line" : 273,
        "CharPositionInLine" : 12
      },
      "23" : {
        "Text" : "# Look for MagickWand.h he magick sub-folder\n",
        "Line" : 280,
        "CharPositionInLine" : 12
      },
      "24" : {
        "Text" : "# Try top folder first\n",
        "Line" : 288,
        "CharPositionInLine" : 8
      },
      "25" : {
        "Text" : "# Look for MagickCore.h, in the MagickCore sub-folder\n",
        "Line" : 294,
        "CharPositionInLine" : 12
      },
      "26" : {
        "Text" : "# Look for MagickCore.h, in the magick sub-folder\n",
        "Line" : 301,
        "CharPositionInLine" : 12
      },
      "27" : {
        "Text" : "#---------------------------------------------------------------------\n\n# Standard Package Output\n\n#---------------------------------------------------------------------\n",
        "Line" : 319,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Maintain consistency with all other variables.\n",
        "Line" : 326,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#---------------------------------------------------------------------\n\n# DEPRECATED: Setting variables for backward compatibility.\n\n#---------------------------------------------------------------------\n",
        "Line" : 329,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 30
    },
    "cmake/FindMir.cmake" : {
      "ObjectId" : "3f1fb0b3eef9c7d106f39b724e373318401ae1d6",
      "LastModified" : "2017-05-23T17:46:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find Mir on a Unix system\n\n#\n\n# This will define:\n\n#\n\n#   MIR_FOUND       - System has Mir\n\n#   MIR_LIBRARIES   - Link these to use Mir\n\n#   MIR_INCLUDE_DIR - Include directory for Mir\n\n#   MIR_DEFINITIONS - Compiler switches required for using Mir\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindPCIAccess.cmake" : {
      "ObjectId" : "65f7d5c145df590b19c30500ac1d530ac8a909bf",
      "LastModified" : "2017-05-23T17:46:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - FindPCIAccess\n\n#\n\n# Copyright 2015 Valve Corporation\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindPthreadStubs.cmake" : {
      "ObjectId" : "063bbe5160a2c36eb1b01ad14abdfe293fcbbf50",
      "LastModified" : "2017-05-23T17:46:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - FindPthreadStubs\n\n#\n\n# Copyright (C) 2015 Valve Corporation\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindUDev.cmake" : {
      "ObjectId" : "e3d16995dcbee4afaf5c8fa7192919dfaecfed30",
      "LastModified" : "2017-05-23T17:46:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - FindUDev\n\n#\n\n# Copyright (C) 2015 Valve Corporation\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindValgrind.cmake" : {
      "ObjectId" : "5c1fb5615755e57d156c68d6e5db22d8cd287c0b",
      "LastModified" : "2017-05-23T17:46:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - FindValgrind\n\n#\n\n# Copyright (C) 2015 Valve Corporation\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindWayland.cmake" : {
      "ObjectId" : "f93218b8739e66a50678a4b6965231438b87692f",
      "LastModified" : "2017-05-23T17:46:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find Wayland on a Unix system\n\n#\n\n# This will define:\n\n#\n\n#   WAYLAND_FOUND       - True if Wayland is found\n\n#   WAYLAND_LIBRARIES   - Link these to use Wayland\n\n#   WAYLAND_INCLUDE_DIR - Include directory for Wayland\n\n#   WAYLAND_DEFINITIONS - Compiler flags for using Wayland\n\n#\n\n# In addition the following more fine grained variables will be defined:\n\n#\n\n#   WAYLAND_CLIENT_FOUND  WAYLAND_CLIENT_INCLUDE_DIR  WAYLAND_CLIENT_LIBRARIES\n\n#   WAYLAND_SERVER_FOUND  WAYLAND_SERVER_INCLUDE_DIR  WAYLAND_SERVER_LIBRARIES\n\n#   WAYLAND_EGL_FOUND     WAYLAND_EGL_INCLUDE_DIR     WAYLAND_EGL_LIBRARIES\n\n#\n\n# Copyright (c) 2013 Martin Gräßlin <mgraesslin@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# In the cache already\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/FindX11_XCB.cmake" : {
      "ObjectId" : "956bf89d7715fdc9c25354ea693c90c47053f31c",
      "LastModified" : "2017-05-23T17:46:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find libX11-xcb\n\n# Once done this will define\n\n#\n\n# X11_XCB_FOUND - system has libX11-xcb\n\n# X11_XCB_LIBRARIES - Link these to use libX11-xcb\n\n# X11_XCB_INCLUDE_DIR - the libX11-xcb include dir\n\n# X11_XCB_DEFINITIONS - compiler switches required for using libX11-xcb\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2011 Fredrik Höglund <fredrik@kde.org>\n\n# Copyright (c) 2008 Helio Chissini de Castro, <helio@kde.org>\n\n# Copyright (c) 2007 Matthias Kretz, <kretz@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/FindXCB.cmake" : {
      "ObjectId" : "2311591109f10788f121e36fef875c07da7864b9",
      "LastModified" : "2017-05-23T17:46:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - FindXCB\n\n#\n\n# Copyright (C) 2015 Valve Corporation\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# component name\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# header name\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# library name\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "demos/CMakeLists.txt" : {
      "ObjectId" : "34f58e3639fdb8ba9b457548a7ffb51cac254818",
      "LastModified" : "2018-05-11T15:24:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enable control flow guard\n",
        "Line" : 10,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "# TODO - Add Mir support\n",
        "Line" : 66,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# For Windows, since 32-bit and 64-bit items can co-exist, we build each in its own build directory.\n\n# 32-bit target data goes in build32, and 64-bit target data goes into build.  So, include/link the\n\n# appropriate data at build time.\n",
        "Line" : 97,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Use static MSVCRT libraries\n",
        "Line" : 106,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# MacOS setup common to all demos\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "######################################################################################\n\n# vulkaninfo\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Create vulkaninfo application bundle for MacOS\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "######################################################################################\n\n# cube\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "######################################################################################\n\n# cubepp\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "######################################################################################\n\n# smoke\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "demos/macOS/common.cmake" : {
      "ObjectId" : "6a35db952351339c17dd7af9ec5daf72e1890163",
      "LastModified" : "2018-03-02T19:21:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set up common settings for building all demos on Apple platforms.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Source for the MoltenVK ICD library and JSON file\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# MoltenVK JSON File\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Modify the ICD JSON file to adjust the library path.\n\n# The ICD JSON file goes in the Resources/vulkan/icd.d directory, so adjust the\n\n# library_path to the relative path to the Frameworks directory in the bundle..\n\n# The regex does: substitute ':<whitespace>\"<whitespace><all occurences of . and />' with:\n\n# ': \"../../../Frameworks/'\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Locate Interface Builder Tool, needed to build things like Storyboards outside of Xcode.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Make sure we can find the 'ibtool' program. If we can NOT find it we\n\n# skip generation of this project\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "demos/macOS/cube/cube.cmake" : {
      "ObjectId" : "b298933baad9c89c2963985b4b23be95423e6dd5",
      "LastModified" : "2018-03-02T19:21:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Cube Application Bundle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Have Xcode handle the Storyboard\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Handle the Storyboard ourselves\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Compile the storyboard file with the ibtool.\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Include demo source code dir because the MacOS cube's Objective-C source includes\n\n# the \"original\" cube application C source code.\n\n# Also include the MoltenVK helper files.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The RESOURCE target property cannot be used in conjunction with the MACOSX_PACKAGE_LOCATION\n\n# property.  We need fine-grained control over the Resource directory, so we have to specify\n\n# the destination of all the resource files on a per-destination-directory basis.\n\n# If all the files went into the top-level Resource directory, then we could simply set\n\n# the RESOURCE property to a list of all the resource files.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Copy the MoltenVK lib into the bundle.\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Fix up the library search path in the executable to find (loader) libraries in the bundle.\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Not sure this is needed.  When activated, it makes a symlink from\n\n# libvulkan.dylib to libvulkan.1.dylib (which in turn symlinks to libvulkan.1.0.xx.dylib.)\n\n#        install(FILES\n\n#            \"${CMAKE_BINARY_DIR}/loader/libvulkan.dylib\"\n\n#            DESTINATION \"demos/cube.app/Contents/MacOS\"\n\n#            COMPONENT Runtime)\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "demos/macOS/cubepp/cubepp.cmake" : {
      "ObjectId" : "874ed25f6ab923ccb9e0d0daf973bb29f4da80bd",
      "LastModified" : "2018-03-02T19:21:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Cube Application Bundle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Have Xcode handle the Storyboard\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Handle the Storyboard ourselves\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Compile the storyboard file with the ibtool.\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Include demo source code dir because the MacOS cubepp's Objective-C source includes\n\n# the \"original\" cubepp application C++ source code.\n\n# Also include the MoltenVK helper files.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The RESOURCE target property cannot be used in conjunction with the MACOSX_PACKAGE_LOCATION\n\n# property.  We need fine-grained control over the Resource directory, so we have to specify\n\n# the destination of all the resource files on a per-destination-directory basis.\n\n# If all the files went into the top-level Resource directory, then we could simply set\n\n# the RESOURCE property to a list of all the resource files.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Direct the MoltenVK library to the right place.\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Copy the MoltenVK lib into the bundle.\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Fix up the library search path in the executable to find (loader) libraries in the bundle.\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Not sure this is needed.  When activated, it makes a symlink from\n\n# libvulkan.dylib to libvulkan.1.dylib (which in turn symlinks to libvulkan.1.0.xx.dylib.)\n\n#        install(FILES\n\n#            \"${CMAKE_BINARY_DIR}/loader/libvulkan.dylib\"\n\n#            DESTINATION \"demos/cubepp.app/Contents/MacOS\"\n\n#            COMPONENT Runtime)\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "demos/macOS/vulkaninfo/vulkaninfo.cmake" : {
      "ObjectId" : "d5da172c2769a6d6b0ac6b58ffce213ab9a2e811",
      "LastModified" : "2018-05-11T15:24:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Vulkaninfo Application Bundle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We already have a \"vulkaninfo\" target, so create a new target with a different name\n\n# and use the OUTPUT_NAME property to rename the target to the desired name.\n\n# The standalone binary is called \"vulkaninfo\" and the bundle is called \"vulkaninfo.app\".\n\n# Note that the executable is a script that launches Terminal to see the output.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Direct the MoltenVK library to the right place.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Xcode projects need some extra help with what would be install steps.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Fix up the library search path in the executable to find (loader) libraries in the bundle.\n\n# When fixup_bundle() is passed a bundle in the first argument, it looks at the Info.plist file\n\n# to determine the BundleExecutable.  In this case, the executable is a script, which can't be fixed up.\n\n# Instead pass it the explicit name of the executable.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "demos/smoke/CMakeLists.txt" : {
      "ObjectId" : "92701ed55b94ea098bd31fb58fa925ceef25df24",
      "LastModified" : "2018-03-02T19:21:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# For macOS, the \"uninstalled\" location is in the bundle\n",
        "Line" : 56,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "# Have Xcode handle the Storyboard\n",
        "Line" : 106,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Handle the Storyboard ourselves\n",
        "Line" : 122,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Compile the storyboard file with the ibtool.\n",
        "Line" : 124,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Direct the MoltenVK library to the right place.\n",
        "Line" : 145,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Xcode projects need some extra help with what would be install steps.\n\n# Vulkan lib needs to be copied manually since smoke does not link it.\n",
        "Line" : 151,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Fix up the library search path in the executable to find (loader) libraries in the bundle.\n",
        "Line" : 171,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "demos/smoke/android/CMakeLists.txt" : {
      "ObjectId" : "798089da78c2c7279826f88497d4e527bb1325a4",
      "LastModified" : "2018-03-02T19:21:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (C) 2017 The Android Open Source Project\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#      http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# build native_app_glue as a static lib\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Build application's shared lib\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Force export ANativeActivity_onCreate(),\n\n# Refer to: https://github.com/android-ndk/ndk/issues/381.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "icd/CMakeLists.txt" : {
      "ObjectId" : "21e5b8ce0a66d063da76a432dbaebd9aca3aa79d",
      "LastModified" : "2018-05-11T20:39:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# extra setup for out-of-tree builds\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# extra setup for out-of-tree builds\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# For ICD with a direct dependency on a project with the same name, use it.\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#target_link_Libraries(VkICD_${target} VkICD_utils)\n",
        "Line" : 110,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#target_link_Libraries(VkICD_${target} VkICD_utils)\n",
        "Line" : 115,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#target_link_Libraries(VkICD_${target} VkICD_utils)\n",
        "Line" : 123,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Turn off transitional \"changed behavior\" warning message for Visual Studio versions prior to 2015.\n\n# The changed behavior is that constructor initializers are now fixed to clear the struct members.\n",
        "Line" : 148,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "layers/CMakeLists.txt" : {
      "ObjectId" : "7f341b48fb73cc7baf6a714921efefb4cd97d507",
      "LastModified" : "2018-05-11T15:24:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copy vk_validation_error_messages.h from source to build dir for scripts to pick up\n",
        "Line" : 72,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "# extra setup for out-of-tree builds\n",
        "Line" : 82,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Add link to vk_validation_error_messages.h in build dir for scripts to pick up\n",
        "Line" : 90,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# extra setup for out-of-tree builds\n",
        "Line" : 97,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Add link to vk_validation_error_messages.h in build dir for scripts to pick up\n",
        "Line" : 115,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# If a layer has a direct dependency on a project with the same name, use it.\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# If a layer has no direct dependencies, give it one so it copies in the proper order\n",
        "Line" : 127,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Add targets for JSON file install on Linux.\n\n# Need to remove the \"./\" from the library path before installing to system directories.\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Applies to all configurations\n",
        "Line" : 196,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Avoid: fatal error C1128: number of sections exceeded object file format limit: compile with /bigobj\n",
        "Line" : 198,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Turn off transitional \"changed behavior\" warning message for Visual Studio versions prior to 2015.\n\n# The changed behavior is that constructor initializers are now fixed to clear the struct members.\n",
        "Line" : 201,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Clang (and not gcc) warns about unused const variables.\n\n# Generated files may purposely contain unused consts, so\n\n# silence this warning in Clang. \n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# generated\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Core validation has additional dependencies\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "libs/vkjson/CMakeLists.txt" : {
      "ObjectId" : "2e79d910904b846e7fe8a35755ee64b8533add56",
      "LastModified" : "2018-03-02T19:21:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2015 Google Inc. All rights reserved.\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a\n\n# copy of this software and/or associated documentation files (the\n\n# \"Materials\"), to deal in the Materials without restriction, including\n\n# without limitation the rights to use, copy, modify, merge, publish,\n\n# distribute, sublicense, and/or sell copies of the Materials, and to\n\n# permit persons to whom the Materials are furnished to do so, subject to\n\n# the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included\n\n# in all copies or substantial portions of the Materials.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\n# THE SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "loader/CMakeLists.txt" : {
      "ObjectId" : "d83d75df4783d2660ed30bafbec3df80ba784991",
      "LastModified" : "2018-05-11T15:24:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check for the existance of the secure_getenv or __secure_getenv commands\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Fetch header version from vulkan_core.h\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Enable control flow guard\n",
        "Line" : 27,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# DEBUG enables runtime loader ICD verification\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Check for assembler support\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# For MacOS, use the C code and force the compiler's tail-call optimization instead of using assembly code.\n",
        "Line" : 116,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# This causes no assembly files to be generated.\n",
        "Line" : 119,
        "CharPositionInLine" : 44
      },
      "7" : {
        "Text" : "# Use static MSVCRT libraries\n",
        "Line" : 151,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Note  When linking your app or driver to OneCore.lib, be sure to remove any links to non-umbrella libs (such as kernel32.lib). \n",
        "Line" : 160,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# space is intentional\n",
        "Line" : 161,
        "CharPositionInLine" : 46
      },
      "10" : {
        "Text" : "# Build dev_ext_trampoline.c with -O2 to allow tail-call optimization.\n\n# Build other C files with normal options\n\n# setup two Cmake targets (loader-norm and loader-opt) for the different compilation flags\n",
        "Line" : 166,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Suppress conflicting libs warning for debug builds.\n",
        "Line" : 193,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Linux and MacOS\n",
        "Line" : 221,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Clang (and not gcc) warns about redefining a typedef with the same types, so disable that warning.\n\n# Note that it will still throw an error if a typedef is redefined with a different type.\n",
        "Line" : 224,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Build vulkan.framework\n",
        "Line" : 240,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# The FRAMEWORK_VERSION needs to be \"A\" here so that Xcode code-signing works when\n\n# a user adds their framework to an Xcode project and does \"Sign on Copy\".\n\n# It would have been nicer to use \"1\" to denote Vulkan 1.\n\n# Although Apple docs say that a framework version does not have to be \"A\",\n\n# this part of the Apple toolchain expects it.\n\n# https://forums.developer.apple.com/thread/65963\n",
        "Line" : 265,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# \"current version\"\n\n# \"compatibility version\"\n",
        "Line" : 275,
        "CharPositionInLine" : 53
      },
      "17" : {
        "Text" : "# Generate pkg-config file.\n",
        "Line" : 291,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 18
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "da07b4a52385b02755d67c57af601b7ed21498b0",
      "LastModified" : "2018-05-11T15:24:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Workaround for TR1 deprecation in Visual Studio 15.5 until Google Test is updated\n",
        "Line" : 5,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# On Windows, we must pair Debug and Release appropriately\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For Windows, since 32-bit and 64-bit items can co-exist, we build each in its own build directory.\n\n# 32-bit target data goes in build32, and 64-bit target data goes into build.  So, include/link the\n\n# appropriate data at build time.\n",
        "Line" : 35,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "# If MSVC, disable some signed/unsigned mismatch warnings.\n",
        "Line" : 51,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# extra setup for out-of-tree builds\n",
        "Line" : 82,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# For Windows, copy necessary gtest DLLs to the right spot for the vk_layer_tests...\n",
        "Line" : 139,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "tests/layers/CMakeLists.txt" : {
      "ObjectId" : "ad15e41b925c60de4c47c7c46e29bc58b587dccc",
      "LastModified" : "2018-05-11T15:24:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# extra setup for out-of-tree builds\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# extra setup for out-of-tree builds\n",
        "Line" : 51,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# For Windows, copy necessary gtest DLLs to the right spot for the vk_layer_tests...\n",
        "Line" : 130,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    }
  },
  "FileTypes" : {
    "CMAKE" : 24,
    "QMAKE" : 1
  },
  "ElapsedTime" : 8199
}