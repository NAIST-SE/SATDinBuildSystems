{
  "Repository" : "1422788",
  "Revision" : "HEAD",
  "ObjectId" : "b52e0ea9362131dc81326da471792ab8698c9564",
  "CommitTime" : "2019-02-28T21:54:38Z",
  "Files" : {
    "amcl/CMakeLists.txt" : {
      "ObjectId" : "75ac9b56e84687ad0e72895f2274cfaa32a2c502",
      "LastModified" : "2019-01-22T15:51:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# dynamic reconfigure\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Configure Tests\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Bags\n",
        "Line" : 103,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Maps\n",
        "Line" : 133,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Tests\n",
        "Line" : 143,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Not sure when or if this actually passed.\n\n#\n\n# The point of this is that you start with an even probability\n\n# distribution over the whole map and the robot localizes itself after\n\n# some number of iterations of sensing and motion.\n\n#\n\n#  add_rostest(test/global_localization_stage.xml)\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "base_local_planner/CMakeLists.txt" : {
      "ObjectId" : "c30f77902acd3a2d9bed5a86e3de67b0a31a083d",
      "LastModified" : "2018-07-30T23:47:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# messages\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# dynamic reconfigure\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#uncomment for profiling\n\n#set(ROS_COMPILE_FLAGS \"-g -pg\" ${ROS_COMPILE_FLAGS})\n\n#set(ROS_LINK_FLAGS \"-g -pg\" ${ROS_LINK_FLAGS})\n\n#set(ROS_COMPILE_FLAGS \"-g\" ${ROS_COMPILE_FLAGS})\n\n#set(ROS_LINK_FLAGS \"-g\" ${ROS_LINK_FLAGS})\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "carrot_planner/CMakeLists.txt" : {
      "ObjectId" : "e76f4bb0821bd518efa6b0e7405e9c4c84b58dd1",
      "LastModified" : "2018-07-31T00:09:43Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "clear_costmap_recovery/CMakeLists.txt" : {
      "ObjectId" : "4897aa66863a1c53901ab130750cc47b35f3b6ea",
      "LastModified" : "2018-07-15T05:40:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Configure Tests\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find package test dependencies\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Add the test folder to the include directories\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Create targets for test executables\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "costmap_2d/CMakeLists.txt" : {
      "ObjectId" : "bd1150c209dcf19df315eb0bba0ffcf3f891d9c8",
      "LastModified" : "2019-02-28T21:54:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# messages\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# dynamic reconfigure\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Configure Tests\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find package test dependencies\n",
        "Line" : 141,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Add the test folder to the include directories\n",
        "Line" : 144,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Create targets for test executables\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "dwa_local_planner/CMakeLists.txt" : {
      "ObjectId" : "94402f4f069eb3e379a7f3b9f96b6f5bd41e1701",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# dynamic reconfigure\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "fake_localization/CMakeLists.txt" : {
      "ObjectId" : "dd81ef2c920aae964e4093d371b76869f7455eaa",
      "LastModified" : "2018-07-15T05:40:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "global_planner/CMakeLists.txt" : {
      "ObjectId" : "7b05020c07b37a006bf67e799eb9a823a19cbcea",
      "LastModified" : "2018-07-15T05:40:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "map_server/CMakeLists.txt" : {
      "ObjectId" : "df9bbdd40c049ab724889ff8ec1dbedf347e2934",
      "LastModified" : "2018-07-15T05:40:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# copy test data to same place as tests are run\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Tests\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This has to be done after we've already built targets, or catkin variables get borked\n",
        "Line" : 92,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "## Install executables and/or libraries\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Install project namespaced headers\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Install excutable python script\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "move_base/CMakeLists.txt" : {
      "ObjectId" : "3376a79ee843183bfdcc43b8e3ca522c7215c3b2",
      "LastModified" : "2018-07-15T05:40:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# dynamic reconfigure\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# move_base\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Mark cpp header files for installation\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "move_slow_and_clear/CMakeLists.txt" : {
      "ObjectId" : "ebb69325b1ef5c9679fab40f5d39dd1b3cc305f2",
      "LastModified" : "2017-08-01T01:04:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Install project namespaced headers\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "nav_core/CMakeLists.txt" : {
      "ObjectId" : "04c1f8dd1315fc92da861b9c0fefdf9890fedf06",
      "LastModified" : "2018-07-15T05:40:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Install project namespaced headers\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "navfn/CMakeLists.txt" : {
      "ObjectId" : "72fd530e81e88342b9e53e5b221331f035a0b3d5",
      "LastModified" : "2018-07-31T00:09:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# services\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### The problem with FindFLTK is that it only reports success if *all*\n\n### fltk components are installed, but we only need the core library.\n\n# include (FindFLTK)\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Just linking -lfltk is not sufficient on OS X\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "### For some reason (on cmake-2.4.7 at least) the \"check\" for pgm.h\n\n### always succeeds, even if pgm.h is not installed. It seems to be\n\n### caused by a bug in the rule that attempts to build the C source:\n\n### instead of directly calling e.g. 'gcc -c\n\n### /CMakeFiles/CMakeTmp/CheckIncludeFile.c' it goes through some make\n\n### infrastructure, which reports \"Nothing to be done for\n\n### `CMakeFiles/cmTryCompileExec.dir/build'\" and calls that a success.\n\n###\n\n### As a workaround we simply force everyone to install libnetpbm\n\n#\n\n# include (CheckIncludeFile)\n\n# check_include_file (pgm.h NAVFN_HAVE_NETPBM)\n\n# message (STATUS \"NAVFN_HAVE_NETPBM: ${NAVFN_HAVE_NETPBM}\")\n\n# if (NAVFN_HAVE_NETPBM)\n\n#   message (STATUS \"found pgm.h\")\n\n#   add_definitions (-DNAVFN_HAVE_NETPBM)\n\n#target_link_libraries (navfn -lnetpbm)\n\n# else (NAVFN_HAVE_NETPBM)\n\n#   message (STATUS \"pgm.h not found (optional)\")\n\n# endif (NAVFN_HAVE_NETPBM)\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "navfn/test/CMakeLists.txt" : {
      "ObjectId" : "1bc039f349ec4cf741b5aa52907f73481e8b7e9e",
      "LastModified" : "2013-04-12T22:45:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navigation/CMakeLists.txt" : {
      "ObjectId" : "bac0b6b90df6d99829f4bc86cba51785edac30c6",
      "LastModified" : "2013-05-16T18:53:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "rotate_recovery/CMakeLists.txt" : {
      "ObjectId" : "e44dd4a7874a65c9ac02141bcf16e4a15dbb3941",
      "LastModified" : "2018-07-31T00:09:43Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "voxel_grid/CMakeLists.txt" : {
      "ObjectId" : "d65925a58f3da0d691f75b9f78c3bf4e59648171",
      "LastModified" : "2018-07-15T05:40:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 17
  },
  "ElapsedTime" : 2494
}