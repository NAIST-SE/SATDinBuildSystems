{
  "Repository" : "16030063",
  "Revision" : "HEAD",
  "ObjectId" : "37fc53c7c7c9361a5f94f1a2a34bb7a14bf7c51f",
  "CommitTime" : "2018-08-13T10:41:31Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "7fb7ea0e793343e74756cc878f0be31e4e6bb3b6",
      "LastModified" : "2018-06-25T09:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################\n\n#\n\n# CMake configuration for BALL\n\n# http://www.ball-project.org\n\n#\n\n########################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########################################################\n\n# General build system settings\n\n########################################################\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use folders to group TARGTES using the folder target property in IDEs\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Automatically search lib64 folders\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set default build type to Release\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add cmake directory from BALL source tree to CMAKE_MODULE_PATH\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add include directoy from BALL source tree\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add include directoy from build tree for configured files\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Handling user specified path to ball_contrib installation (-DBALL_CONTRIB_PATH)\n\n# TODO: Get rid of BALL_CONTRIB_PATH when globally refactoring build system\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Add include directoy from user specified BALL_CONTRIB_PATH\n",
        "Line" : 50,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# Add ball contrib install directories to CMake search paths for find_XXX() functions\n",
        "Line" : 53,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# Required for CMake include and compile tests (seems to be required only on Windows)\n",
        "Line" : 56,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# Include BALL specific CMake macros\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# BALL specific compiler and linker settings\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Determine BALL configuration\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# We do not have a Component-based installer in MacOS\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# License choice: LGPL or GPL build\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "########################################################\n\n# Search and configure third party dependencies\n\n########################################################\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## Extra libraries we want to link into BALL\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## Flex and Bison\n\n## This ugly hack is required as long as we cannot tell cmake to set an environment variable for bison...\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## Figure out if the used flex version supports ...lex_destroy()\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "## XDR related stuff\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "## Boost and Asio\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# OpenBabel availability: default false\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# FFTW\n",
        "Line" : 151,
        "CharPositionInLine" : 1
      },
      "25" : {
        "Text" : "#Set the default complex precision to float if the setting for this value\n\n#could not be determined earlier\n",
        "Line" : 163,
        "CharPositionInLine" : 1
      },
      "26" : {
        "Text" : "# OpenBabel\n",
        "Line" : 170,
        "CharPositionInLine" : 1
      },
      "27" : {
        "Text" : "## lpsolve\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "## libsvm\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "## CUDA\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "## TBB\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "## RTFact would require tbb... so check if it is required\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "## MPI\n",
        "Line" : 243,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "## VIEW related options/settings/libraries\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "## QT\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Enable automatic invocation of moc if required\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Fix issues on some machines where moc would ignore classes with\n\n# multiple attribute specifications via global macros\n",
        "Line" : 272,
        "CharPositionInLine" : 52
      },
      "37" : {
        "Text" : "# WebEngine support\n",
        "Line" : 304,
        "CharPositionInLine" : 1
      },
      "38" : {
        "Text" : "## On Windows, we might need to explicitly deploy openssl libraries for Qt\n",
        "Line" : 330,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "## VIEW dependent packages\n",
        "Line" : 347,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "## VIEW dependent options\n",
        "Line" : 350,
        "CharPositionInLine" : 1
      },
      "41" : {
        "Text" : "## OpenGL\n",
        "Line" : 354,
        "CharPositionInLine" : 1
      },
      "42" : {
        "Text" : "## GLEW\n",
        "Line" : 361,
        "CharPositionInLine" : 1
      },
      "43" : {
        "Text" : "## RTfact\n",
        "Line" : 367,
        "CharPositionInLine" : 1
      },
      "44" : {
        "Text" : "## RTfact requires TBB\n",
        "Line" : 376,
        "CharPositionInLine" : 3
      },
      "45" : {
        "Text" : "## Python\n",
        "Line" : 390,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# make sure that we set the modules that come with contrib\n",
        "Line" : 394,
        "CharPositionInLine" : 1
      },
      "47" : {
        "Text" : "## replace any variables in config.h.in with current values\n",
        "Line" : 444,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "## automatically create the version numbers\n",
        "Line" : 448,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "## build a config.h file for the python support to not disturb the\n\n## rest of BALL\n",
        "Line" : 451,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "## build a config.h file for our tests to not disturb the rest of BALL\n",
        "Line" : 455,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "## build a config.h file for our benchmarks to not disturb the rest of BALL\n",
        "Line" : 458,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "########################################################\n\n###    BUILD the lib\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t ###\n\n########################################################\n",
        "Line" : 463,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# Add BALL project specific compiler flags and definitions\n",
        "Line" : 468,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "## are we building a shared or static lib?! (BOTH within \n\n## the same BUILD-tree is NOT possible currently!!)\n",
        "Line" : 473,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "## These variables are used in all install-targets\n",
        "Line" : 481,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "## big include file for headers and C files, which fills the BALL_sources variable\n",
        "Line" : 492,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "## use BALLd.dll, VIEWd.dll in debug mode\n",
        "Line" : 499,
        "CharPositionInLine" : 1
      },
      "58" : {
        "Text" : "## mark header files as headers...\n",
        "Line" : 503,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "## add library target\n\n## warning: set BUILD_SHARED_LIBS to decide if library is shared or static (see above)! \n\n## We need the BUILD_SHARED_LIBS flag to set declspec flags for MSVC!\n",
        "Line" : 509,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# we need both conditions due to possible present cached entries\n",
        "Line" : 512,
        "CharPositionInLine" : 31
      },
      "61" : {
        "Text" : "## all the dependency libraries are linked into libBALL.so, except Qt and CUDA which are still dynamic\n",
        "Line" : 524,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# With MALL, BALL breaks incremental linking (seems to be too large...)\n",
        "Line" : 559,
        "CharPositionInLine" : 1
      },
      "63" : {
        "Text" : "## TODO: Qt handling!\n",
        "Line" : 564,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "## Do we really need this?\n",
        "Line" : 576,
        "CharPositionInLine" : 2
      },
      "65" : {
        "Text" : "# TODO read version from the command line (CTDConverter/CTDSchema versions), default to \"master\"\n",
        "Line" : 612,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# TOOLS and Ballaxy targets\n",
        "Line" : 615,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "## read the version for CTDSchema/CTDConverter if they are needed\n",
        "Line" : 624,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# Galaxy release version (GitHub release branch) can be changed via the the following CMake variable.\n\n# Only used when using -DBALLAXY_INSTANCE=ON to create a full Ballaxy instance including Galaxy.\n",
        "Line" : 637,
        "CharPositionInLine" : 1
      },
      "69" : {
        "Text" : "# We need the TOOLS for Ballaxy\n",
        "Line" : 641,
        "CharPositionInLine" : 1
      },
      "70" : {
        "Text" : "# We need the TOOLS to generate the CWL stubs\n",
        "Line" : 648,
        "CharPositionInLine" : 1
      },
      "71" : {
        "Text" : "## add targets for Python modules\n",
        "Line" : 658,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "## add the plugins\n",
        "Line" : 661,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "## add BALLView target\n",
        "Line" : 665,
        "CharPositionInLine" : 1
      },
      "74" : {
        "Text" : "## add BENCHMARK target\n",
        "Line" : 670,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "###### add MMFF94 test targets ##########\n",
        "Line" : 673,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "######################################################################\n\n# Installation Routines\n\n######################################################################\n",
        "Line" : 681,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "## If we are not installing into the source directory directly, take\n\n## care of data files and headers\n",
        "Line" : 708,
        "CharPositionInLine" : 1
      },
      "78" : {
        "Text" : "### Install the data directories\n",
        "Line" : 711,
        "CharPositionInLine" : 2
      },
      "79" : {
        "Text" : "### Install the includes\n",
        "Line" : 714,
        "CharPositionInLine" : 2
      },
      "80" : {
        "Text" : "## The configured files have to be copied in any case\n",
        "Line" : 718,
        "CharPositionInLine" : 1
      },
      "81" : {
        "Text" : "# If we know where to find a python installer, we can package it\n",
        "Line" : 735,
        "CharPositionInLine" : 2
      },
      "82" : {
        "Text" : "########################################################\n\n# Packaging, Documentation, Tests\n\n########################################################\n",
        "Line" : 759,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# Build BALL packages y/n\n",
        "Line" : 763,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# Packaging\n",
        "Line" : 766,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# Documentation\n",
        "Line" : 771,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# Tests\n",
        "Line" : 774,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "## configure the Test project (but do not add it to BALL itself)\n",
        "Line" : 777,
        "CharPositionInLine" : 40
      },
      "88" : {
        "Text" : "# Targets list\n",
        "Line" : 779,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# Message after BALL has been built\n",
        "Line" : 782,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "# CMake configuration message\n",
        "Line" : 786,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "######################################################\n\n# Create CMake package configurations to be used with\n\n# find_package()for:\n\n#\n\n#   - local build tree BALL\n\n#   - installed BALL\n\n#\n\n######################################################\n",
        "Line" : 804,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "# Collect Qt5 dependencies\n",
        "Line" : 816,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "# Collect BALL include directories\n",
        "Line" : 832,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "# Generate CMake package configuration for BALL build tree\n",
        "Line" : 836,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "# Generate BALL package config version file\n",
        "Line" : 843,
        "CharPositionInLine" : 0
      },
      "96" : {
        "Text" : "# Generate exports\n",
        "Line" : 850,
        "CharPositionInLine" : 0
      },
      "97" : {
        "Text" : "# Store BALL build directory in the CMake user package registry\n",
        "Line" : 861,
        "CharPositionInLine" : 0
      },
      "98" : {
        "Text" : "# Generate CMake package configuration for BALL installation\n",
        "Line" : 865,
        "CharPositionInLine" : 0
      },
      "99" : {
        "Text" : "# Installation path for BALL CMake package configuration files\n",
        "Line" : 867,
        "CharPositionInLine" : 1
      },
      "100" : {
        "Text" : "######################################################\n\n# Generate CTags for BALL project\n\n######################################################\n",
        "Line" : 894,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 101
    },
    "CTestConfig.cmake" : {
      "ObjectId" : "ef263e98e2b813c079cee01d00c3a05f0aa6f66b",
      "LastModified" : "2010-01-15T14:02:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## This file should be placed in the root directory of your project.\n\n## Then modify the CMakeLists.txt file in the root directory of your\n\n## project to incorporate the testing dashboard.\n\n## # The following are required to uses Dart and the Cdash dashboard\n\n##   ENABLE_TESTING()\n\n##   INCLUDE(CTest)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/BALLCTags.cmake" : {
      "ObjectId" : "a896968b9b7920f31ff958c9039323514b62a688",
      "LastModified" : "2010-09-17T13:02:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/BALLCompilerSpecific.cmake" : {
      "ObjectId" : "366afe356d3c69d744d62cd5de0e69597a82e829",
      "LastModified" : "2018-05-03T12:35:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################\n\n###    compiler flags                                ###\n\n########################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## determine version number of the compiler\n",
        "Line" : 19,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "## just to make sure that the compiler version has 3 numbers and 2 dots\n\n## (sometimes, g++ gives, e.g., 4.4 instead of 4.4.0)\n",
        "Line" : 25,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "## -Wconversion flag for GCC\n",
        "Line" : 37,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# Added -Wno-deprecated-declarations as Eigen3 currently uses binder2nd which spams the compiler output.\n",
        "Line" : 50,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "## Recommended setting for eclipse, see http://www.cmake.org/Wiki/CMake:Eclipse\n",
        "Line" : 63,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "## determine version number of the compiler\n",
        "Line" : 72,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "## disable min and max macros by default\n\n## see CGAL and BOOST configs for more elaborate explanations\n",
        "Line" : 80,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "## if requested, produce a parallel solution\n",
        "Line" : 84,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "## determine version number of the compiler\n",
        "Line" : 94,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "## just to make sure that the compiler version has 3 numbers and 2 dots\n\n## (sometimes, g++ gives, e.g., 4.4 instead of 4.4.0)\n",
        "Line" : 100,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# matches Clang and AppleClang\n",
        "Line" : 112,
        "CharPositionInLine" : 48
      },
      "12" : {
        "Text" : "# using Clang\n",
        "Line" : 113,
        "CharPositionInLine" : 3
      },
      "13" : {
        "Text" : "## determine version number of the compiler\n",
        "Line" : 116,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# Disable \"inconsistent missing override\" warnings for now, as this is primarily macro-induced\n\n# (e.g., via BALL_EMBEDDABLE) and, unfortunately, won't be resolved until many more parts of our\n\n# code consistently use override specifiers.\n",
        "Line" : 135,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 15
    },
    "cmake/BALLComponents.cmake" : {
      "ObjectId" : "3dde8d6a78e00428d47b4db3958377634931a73d",
      "LastModified" : "2017-04-11T10:08:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Dependencies of components seem to be currently broken for PackageMaker.\n\n## Or we do something completely wrong...\n",
        "Line" : 8,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "## libraries\n",
        "Line" : 19,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "## development\n",
        "Line" : 23,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "## Python bindings\n",
        "Line" : 27,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "## Documentation\n",
        "Line" : 31,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "## applications\n",
        "Line" : 36,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "## libraries\n",
        "Line" : 39,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "## development\n",
        "Line" : 43,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "## Python bindings\n",
        "Line" : 47,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "## Documentation\n",
        "Line" : 51,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "## applications\n",
        "Line" : 56,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "## libraries\n",
        "Line" : 59,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "## development\n",
        "Line" : 63,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "## Python bindings\n",
        "Line" : 67,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "## Documentation\n",
        "Line" : 71,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "## applications\n",
        "Line" : 76,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "## Note: On MacOS X, it is necessary to have the applications (COMPONENT_BALLVIEW) at the\n\n##       *end* of this list; otherwise, the automatic fixing of import library names will omit all components \n\n##       that come after it\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "cmake/BALLConfigBoost.cmake" : {
      "ObjectId" : "c0d7c80ccaba6b574afd4b98ad9d662f965f6405",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find and configure Boost library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Mandatory boost components\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Required libraries and definitions on Windows OS\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Next two lines are a fix from CMake master to prevent missing header warnings.\n\n# Lines will be obsolete when minimum required CMake version will be >= 3.7\n",
        "Line" : 20,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# Additional Boost versions that should be included by CMake\n\n# CMake 3.1, which is minimum for configuring BALL, already knowns versions 1.33 up to 1.56\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Detailed messaging in case of failures\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Invoke CMake FindBoost module\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/BALLConfigFFTW.cmake" : {
      "ObjectId" : "7f77563f71e938a13928139369cbf737d240400c",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#If the libraries are set, set the default traits to the favoured\n\n#precision (in our case float is prefered\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#The user may override these settings\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#However we still have to make some settings depending on the selected precision\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/BALLConfigNoexcept.cmake" : {
      "ObjectId" : "66d69a4aef5f70697669bd80db2805938fe60a0f",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/BALLConfigStdStringFeatures.cmake" : {
      "ObjectId" : "ff450bd618f5aaf321195b7b92549ba6844c42b2",
      "LastModified" : "2017-11-19T14:34:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/BALLConfigThreadLocal.cmake" : {
      "ObjectId" : "e8e808a3715729ad5d4486e602cd706ab340c542",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/BALLConfigTypes.cmake" : {
      "ObjectId" : "2a221fd49b4a657bfb2115385875d72055e85f63",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Some useful type sizes\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Find a suitable integer types of 64 bit length\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Ok, we have to do this the hard way\n",
        "Line" : 31,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "## Define a suitable pointer type\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Define a 32-bit type for Index and Size\n\n## NOTE: this seems plain *wrong*! SIZE_TYPE and INDEX_TYPE need to be adapted to the\n\n##       pointer size, and should not just be 32 bit types!\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/BALLConfigXDR.cmake" : {
      "ObjectId" : "bfe99d485adc1b1e206d20f299671fe2871b6b5a",
      "LastModified" : "2018-05-03T12:35:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/BALLConfiguration.cmake" : {
      "ObjectId" : "70a305f90b1b44729e7d1202adab2edf5d83cf7c",
      "LastModified" : "2018-05-03T12:35:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################\n\n###    configure config.h\t\t\t\t\t\t\t\t\t\t\t\t\t\t ###\n\n########################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## some debug options\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Define some directories\n\n# TODO: I'm not sure what will be the most sensible approach here for BALL...\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## some information about the processor and system type\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## the operating system\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## some convenient defines\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Try to find out if it's a Solaris or an ancient one...\n",
        "Line" : 49,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "## BALL_COMPILER_* defines (as prepared by BALLCompilerSpecific.cmake)\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## The endianness of the system\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## Required type information\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Header and Compile checks\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## system headers:\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## Can we overload long int with LongIndex?\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## Check for thread_local\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## Check for the presence of C++11 noexcept\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "## Check for the presence of C++11 features in string\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## Test whether vsnprintf is available\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "## Used by GenericPDBFile\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## STL-DEBUG (only for GCC and in debug mode)\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# add compiler flag\n",
        "Line" : 181,
        "CharPositionInLine" : 3
      },
      "20" : {
        "Text" : "## user flag with default \"QMYSQL\"\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "cmake/BALLDoc.cmake" : {
      "ObjectId" : "348d22cf3a69720169de80e3fd12153e041aab61",
      "LastModified" : "2018-08-08T11:59:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#######################################################################\n\n#create Doxyfiles for html documentation\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########################################################################\n\n## Examples\n\n########################################################################\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#######################################################################\n\n## doc\n",
        "Line" : 32,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "#######################################################################\n\n## doc_dot target\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#######################################################################\n\n# doc_tutorials target\n",
        "Line" : 84,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 5
    },
    "cmake/BALLFinishedMessage.cmake" : {
      "ObjectId" : "c21e745746196a9aa0cbefdd0b522d1d226b8ab6",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/BALLIncludes.cmake" : {
      "ObjectId" : "5861518d862fa5cecaaa35b667792470699e7d56",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/BALLMacros.cmake" : {
      "ObjectId" : "ecd7dcdce5ce08d308f6fb7b33bdbc1220b634b3",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### This macro is a terrible ugly hack and if life was fair, it would never exist.\n\n### However, the QT4_WRAP_UI - macro from FindQt4.cmake does not allow changing the\n\n### output directory, and the default choice is unacceptable.\n\n###\n\n### So this macro is a nearly one-to-one copy of the FindQt4 - version with only\n\n### minor modifications (marked with ## BALL ###)\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Add the source files in SOURCES_LIST to the list\n\n## of files compiled into libBALL, and mark them as\n\n## part of source group GROUP\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "### add full path to the filenames ###\n",
        "Line" : 40,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "### pass source file list to the upper instance ###\n",
        "Line" : 46,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "### source group definition ###\n",
        "Line" : 49,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "## Add the header files in HEADERS_LIST to the list\n\n## of files compiled into libBALL, and mark them as\n\n## part of source group GROUP\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "### add full path to the filenames ###\n",
        "Line" : 60,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "### make sure we do not have absolute paths flying around...\n",
        "Line" : 63,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "### pass source file list to the upper instance ###\n",
        "Line" : 68,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "### source group definition ###\n",
        "Line" : 71,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "## Add a parser and corresponding lexer to libBALL\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## Oh, what an ugly hack...\n",
        "Line" : 89,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "## Add the header files in HEADERS_LIST to the list\n\n## of files compiled into libBALL, and mark them as\n\n## part of source group GROUP\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "### add full path to the filenames ###\n",
        "Line" : 112,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "### make sure we do not have absolute paths flying around...\n",
        "Line" : 115,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "### pass source file list to the upper instance ###\n",
        "Line" : 120,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "### source group definition ###\n",
        "Line" : 123,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "## Add the source files in SOURCES_LIST to the list\n\n## of files compiled into libVIEW, and mark them as\n\n## part of source group GROUP\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "### add full path to the filenames ###\n",
        "Line" : 134,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "### pass source file list to the upper instance ###\n",
        "Line" : 140,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "### source group definition ###\n",
        "Line" : 143,
        "CharPositionInLine" : 1
      },
      "21" : {
        "Text" : "### Generate appropriate uic and moc rules for the files in UI_LIST,\n\n### and add the resulting source files to the VIEW sources and to their\n\n### source group\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "### for out of source builds, the output directory might not yet exist ###\n",
        "Line" : 154,
        "CharPositionInLine" : 1
      },
      "23" : {
        "Text" : "### iterate over the ui files ###\n",
        "Line" : 157,
        "CharPositionInLine" : 1
      },
      "24" : {
        "Text" : "### Generate the corresponding ui file ###\n",
        "Line" : 161,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "### and add them to the sources ###\n",
        "Line" : 165,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "### source group definition ###\n",
        "Line" : 168,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 27
    },
    "cmake/BALLPackageConfig.cmake" : {
      "ObjectId" : "dcac2de1d9f4af81fe0c2e91fee555868b6fb781",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# NOTE: CPack overwrites this option, so it is currently ignored *sigh*. Thus, we use\n\n#       our own NSIS template\n",
        "Line" : 54,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "cmake/BALLTargets.cmake" : {
      "ObjectId" : "6da2993b2aebdaa18ca4bb70eb0a4da3baf94fe6",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/BALLViewCreateBundle.cmake" : {
      "ObjectId" : "515b3cd65737039a937d12fb8941dbad3a0f7bd2",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## try to detect macdeployqt\n\n## TODO: one of these days, we should really do this properly... :-)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Wow, what a *hack*...\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/BALLViewTranslations.cmake" : {
      "ObjectId" : "3bad2c56a2fb36bc489d55d81154764bd4953c10",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Collect TS files from translations directory\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Update and compile translations\n",
        "Line" : 12,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Compile translations\n",
        "Line" : 23,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# Add a custom target to create and/or compile translations\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Copy compiled .qm files into translations directory\n\n# Copying multiple files with a single 'cmake -E copy' works from CMake 3.5+\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/FindBISON.cmake" : {
      "ObjectId" : "372bde1844f8f228dd91d7015544b8f7a629b599",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find bison executable and provides macros to generate custom build rules\n\n# The module defines the following variables:\n\n#\n\n#  BISON_EXECUTABLE - path to the bison program\n\n#  BISON_VERSION - version of bison\n\n#  BISON_FOUND - true if the program was found\n\n#\n\n# If bison is found, the module defines the macros:\n\n#  BISON_TARGET(<Name> <YaccInput> <CodeOutput> [VERBOSE <file>]\n\n#              [COMPILE_FLAGS <string>])\n\n# which will create  a custom rule to generate  a parser. <YaccInput> is\n\n# the path to  a yacc file. <CodeOutput> is the name  of the source file\n\n# generated by bison.  A header file is also  be generated, and contains\n\n# the  token  list.  If  COMPILE_FLAGS  option is  specified,  the  next\n\n# parameter is  added in the bison  command line.  if  VERBOSE option is\n\n# specified, <file> is created  and contains verbose descriptions of the\n\n# grammar and parser. The macro defines a set of variables:\n\n#  BISON_${Name}_DEFINED - true is the macro ran successfully\n\n#  BISON_${Name}_INPUT - The input source file, an alias for <YaccInput>\n\n#  BISON_${Name}_OUTPUT_SOURCE - The source file generated by bison\n\n#  BISON_${Name}_OUTPUT_HEADER - The header file generated by bison\n\n#  BISON_${Name}_OUTPUTS - The sources files generated by bison\n\n#  BISON_${Name}_COMPILE_FLAGS - Options used in the bison command line\n\n#\n\n#  ====================================================================\n\n#  Example:\n\n#\n\n#   find_package(BISON)\n\n#   BISON_TARGET(MyParser parser.y ${CMAKE_CURRENT_BINARY_DIR}/parser.cpp)\n\n#   add_executable(Foo main.cpp ${BISON_MyParser_OUTPUTS})\n\n#  ====================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2009 Kitware, Inc.\n\n# Copyright 2006 Tristan Carel\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distributed this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# internal macro\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# internal macro\n",
        "Line" : 83,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#============================================================\n\n# BISON_TARGET (public macro)\n\n#============================================================\n\n#\n",
        "Line" : 90,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Parsing parameters\n",
        "Line" : 103,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# Header's name generated by bison (see option -d)\n",
        "Line" : 123,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# define target variables\n",
        "Line" : 140,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "#\n\n#============================================================\n",
        "Line" : 149,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# FindBISON.cmake ends here\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "cmake/FindCTD2Galaxy.cmake" : {
      "ObjectId" : "19f877e9f0003d6773215ce37a733490f1b0c4e9",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macro to find CTD2Galaxy\r\n\n# More information on CTD2Galaxy under https://github.com/WorkflowConversion/CTD2Galaxy\r\n\n#\r\n\n# This macro will set the following variables:\r\n\n#    CTD2GALAXY\r\n\n#\r\n\n# This macro will read from the following variable:\r\n\n#    CTD2GALAXY_DIR - Directory under which CTD2Galaxy/generator.py is found\r\n\n#\r\n\n# This macro depends on the following variables:\r\n\n#\t CTDOPTS_MODULE\r\n\n#\t PYTHONINTERP\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CTDopts module found, now find the scripts for CTD2Galaxy\r\n",
        "Line" : 19,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "cmake/FindCTDopts.cmake" : {
      "ObjectId" : "ed9c7cd5121883e5fe5e0ef87d535e03eed65962",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macro to find CTDopts\r\n\n# More information on CTDopts under https://github.com/WorkflowConversion/CTDopts\r\n\n#\r\n\n# This macro will set the following variable:\r\n\n#    CTDOPTS_MODULE\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CTDopts is a module, so we don't need to find a script, rather, just make sure it is properly installed\r\n",
        "Line" : 10,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "cmake/FindCTags.cmake" : {
      "ObjectId" : "add0385a40764c3add2a61e9b5190221710c0512",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This short CMake macro searches for the ctags executable\n\n# It sets the following variables:\n\n#   - CTAGS_FOUND      True if the ctags executable could be found\n\n#   - CTAGS_EXECUTABLE The path to the ctags executable\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindEigen3.cmake" : {
      "ObjectId" : "f92dfbdf62b7330fdc140ff6b33f3a5762a0fe79",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Eigen3 lib\n\n#\n\n# This module supports requiring a minimum version, e.g. you can do\n\n#   find_package(Eigen3 3.1.2)\n\n# to require version 3.1.2 or newer of Eigen3.\n\n#\n\n# Once done this will define\n\n#\n\n#  EIGEN3_FOUND - system has eigen lib with correct version\n\n#  EIGEN3_INCLUDE_DIR - the eigen include directory\n\n#  EIGEN3_VERSION - eigen version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Copyright (c) 2009 Benoit Jacob <jacob.benoit.1@gmail.com>\n\n# Redistribution and use is allowed according to the terms of the 2-clause BSD license.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "## Try harder...\n",
        "Line" : 71,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "cmake/FindFFTW.cmake" : {
      "ObjectId" : "d571e9cda40f9c9d4dc94cfcd0119c781d97a194",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find FFTW3\n\n#\n\n# Currently, search for FFTW thread libraries is commented out\n\n# because I don't know how the naming scheme for those libs\n\n# currently looks like.\n\n#\n\n# The following CMake variables are set by this module:\n\n#\n\n# FFTW_FOUND            true, if a valid FFTW installation has been identified\n\n# FFTWD_FOUND           true, if double precision library found\n\n# FFTWF_FOUND           true, if single precision library found\n\n# FFTWL_FOUND           true, if long double precision library found\n\n#\n\n# FFTW_INCLUDE_DIR      absolute directory that contains fftw3.h header file\n\n#\n\n# FFTWD_LIB             double precision library\n\n# FFTWF_LIB             single precision library\n\n# FFTWL_LIB             long double precision library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define allowed fftw verions\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add additional search paths\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Try to find fftw3.h\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# If not found, return.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Get a hint where to search for the installed fftw libraries\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The fftw types searched for are\n\n# D: double precision library\n\n# F: single precision library\n\n# L: long double precision library\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Now, iterate over these types and search for the corresponding fftw libraries\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Generate all possible library names\n",
        "Line" : 60,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "#LIST(APPEND FFTW_THREAD_LIB_NAMES TODO: Find out fftw thread lib names)\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#FIND_LIBRARY(FFTW${fftw_type}_THREADS_LIB NAMES ${FFTW_THREAD_LIB_NAMES}\n\n#\t      PATHS ${CUSTOM_SEARCH_PATHS}\n\n#\t      PATH_SUFFIXES lib lib64)\n",
        "Line" : 76,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "#IF(FFTW${fftw_type}_THREADS_LIB)\n\n#\tSET(FFTW${fftw_type}_LIB ${FFTW${fftw_type}_LIB} ${FFTW${fftw_type}_THREADS_LIB})\n\n#ENDIF()\n",
        "Line" : 80,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 12
    },
    "cmake/FindFLEX.cmake" : {
      "ObjectId" : "e7ea1bf0d5dde2068f0c6c670ef4dc398834808b",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find flex executable and provides a macro to generate custom build rules\n\n#\n\n# The module defines the following variables:\n\n#  FLEX_FOUND - true is flex executable is found\n\n#  FLEX_EXECUTABLE - the path to the flex executable\n\n#  FLEX_VERSION - the version of flex\n\n#  FLEX_LIBRARIES - The flex libraries\n\n#\n\n# If flex is found on the system, the module provides the macro:\n\n#  FLEX_TARGET(Name FlexInput FlexOutput [COMPILE_FLAGS <string>])\n\n# which creates a custom command  to generate the <FlexOutput> file from\n\n# the <FlexInput> file.  If  COMPILE_FLAGS option is specified, the next\n\n# parameter is added to the flex  command line. Name is an alias used to\n\n# get  details of  this custom  command.  Indeed the  macro defines  the\n\n# following variables:\n\n#  FLEX_${Name}_DEFINED - true is the macro ran successfully\n\n#  FLEX_${Name}_OUTPUTS - the source file generated by the custom rule, an\n\n#  alias for FlexOutput\n\n#  FLEX_${Name}_INPUT - the flex source file, an alias for ${FlexInput}\n\n#\n\n# Flex scanners oftenly use tokens  defined by Bison: the code generated\n\n# by Flex  depends of the header  generated by Bison.   This module also\n\n# defines a macro:\n\n#  ADD_FLEX_BISON_DEPENDENCY(FlexTarget BisonTarget)\n\n# which  adds the  required dependency  between a  scanner and  a parser\n\n# where  <FlexTarget>  and <BisonTarget>  are  the  first parameters  of\n\n# respectively FLEX_TARGET and BISON_TARGET macros.\n\n#\n\n#  ====================================================================\n\n#  Example:\n\n#\n\n#   find_package(BISON)\n\n#   find_package(FLEX)\n\n#\n\n#   BISON_TARGET(MyParser parser.y ${CMAKE_CURRENT_BINARY_DIR}/parser.cpp\n\n#   FLEX_TARGET(MyScanner lexer.l  ${CMAKE_CURRENT_BIANRY_DIR}/lexer.cpp)\n\n#   ADD_FLEX_BISON_DEPENDENCY(MyScanner MyParser)\n\n#\n\n#   include_directories(${CMAKE_CURRENT_BINARY_DIR})\n\n#   add_executable(Foo\n\n#      Foo.cc\n\n#      ${BISON_MyParser_OUTPUTS}\n\n#      ${FLEX_MyScanner_OUTPUTS}\n\n#   )\n\n#  ====================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2009 Kitware, Inc.\n\n# Copyright 2006 Tristan Carel\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distributed this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#============================================================\n\n# FLEX_TARGET (public macro)\n\n#============================================================\n\n#\n",
        "Line" : 83,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#============================================================\n",
        "Line" : 114,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#============================================================\n\n# ADD_FLEX_BISON_DEPENDENCY (public macro)\n\n#============================================================\n\n#\n",
        "Line" : 117,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#============================================================\n",
        "Line" : 134,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# FindFLEX.cmake ends here\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/FindLPSolve.cmake" : {
      "ObjectId" : "130b302dabe74ea6753e12e6587818bcd2bd1915",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Detect lpsolve\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## first, search the headers\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Try to find out if lpsolve can link standalone\n",
        "Line" : 46,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "## Try to find out if lpsolve can link with some extra libs\n",
        "Line" : 62,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 4
    },
    "cmake/FindLoudmouth.cmake" : {
      "ObjectId" : "7dbb8c8be5f2dffcfdc4ace7b867518d5cb33f8f",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find libloudmouth\n\n# Once done, this will define\n\n#\n\n#  LIBLOUDMOUTH_FOUND - system has LIBLOUDMOUTH\n\n#  LIBLOUDMOUTH_INCLUDE_DIRS - the LIBLOUDMOUTH include directories\n\n#  LIBLOUDMOUTH_LIBRARIES - link these to use LIBLOUDMOUTH\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use pkg-config to get hints about paths\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Include dir\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Finally the library itself\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set the include dir variables and the libraries and let libfind_process do the rest.\n\n# NOTE: Singular variables for this library, plural for libraries this this lib depends on.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/FindOpenBabel2.cmake" : {
      "ObjectId" : "b1251372a750638365b8f1c6b346e58482015f27",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find macro for OpenBabel2\n\n# Once done this will define\n\n#\n\n#  OPENBABEL2_FOUND - system has OpenBabel2\n\n#  OPENBABEL2_INCLUDE_DIRS - the OpenBabel2 include directory\n\n#  OPENBABEL2_LIBRARIES - Link these to use OpenBabel2\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindRTfact.cmake" : {
      "ObjectId" : "fe9d59a6bfc3b2d52042e683fea68a96b363cb41",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Detect the raytracing library rtfact\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Set some possible paths to use when looking for the RTfact installation\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## First, try to find the required header files (RTpie/IRayTracer.hpp)\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Now, try to find the rtfact library itself.\n",
        "Line" : 23,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "## And a possible debug version\n",
        "Line" : 31,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 5
    },
    "cmake/FindSIP.cmake" : {
      "ObjectId" : "cddb7430c2c07b9dc594ee3252b664757de04dc2",
      "LastModified" : "2018-05-03T12:35:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find SIP\n\n# ~~~~~~~~\n\n#\n\n# SIP website: http://www.riverbankcomputing.co.uk/sip/index.php\n\n#\n\n# Find the installed version of SIP. FindSIP should be called after Python\n\n# has been found.\n\n#\n\n# This file defines the following variables:\n\n#\n\n# SIP_VERSION - The version of SIP found expressed as a 6 digit hex number\n\n#     suitable for comparision as a string.\n\n#\n\n# SIP_VERSION_STR - The version of SIP found as a human readable string.\n\n#\n\n# SIP_BINARY_PATH - Path and filename of the SIP command line executable.\n\n#\n\n# SIP_INCLUDE_DIR - Directory holding the SIP C++ header file.\n\n#\n\n# SIP_DEFAULT_SIP_DIR - Default directory where .sip files should be installed\n\n#     into.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2007, Simon Edwards <simon@simonzone.com>\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Try to find the python interface generator SIP (http://www.riverbankcomputing.co.uk/sip/index.php)\n\n#\n\n# Unfortunately, we cannot use the standard way of calling sipconfig.py, since this seems to hard-code\n\n# the paths during sip build time and these do not have to coincide with wherever BALL_contrib has been\n\n# placed by the user...\n\n#\n\n# This file defines the following variables:\n\n#\n\n# SIP_FOUND       = system has sip support, and sip modules could be loaded successfully\n\n#\n\n# SIP_LIBRARIES   = full path to the sip libraries\n\n#\n\n# SIP_VERSION     = The version of SIP found expressed as a 6 digit hex number\n\n#                   suitable for comparison as a string.\n\n#\n\n# SIP_VERSION_STR = The version of SIP found as a human readable string.\n\n#\n\n# SIP_EXECUTABLE  = Full path of the SIP command line executable.\n\n#\n\n# SIP_INCLUDE_DIR = Directory holding the SIP C++ header file.\n\n#\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# determine the version of python we use\n",
        "Line" : 56,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# (a) Try to find the sip headers:\n",
        "Line" : 85,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Use the path to the python installation as a hint for finding sip\n",
        "Line" : 87,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# (b) Try to find the sip library:\n",
        "Line" : 96,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Use the path to the python installation as a hint for finding sip\n",
        "Line" : 98,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# (c) Try to find the sip executable:\n",
        "Line" : 110,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# let's try the configured binary directory anyway, in case, you know, it's actually correct...\n",
        "Line" : 112,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Use the path to the python installation as a hint for finding sip\n",
        "Line" : 120,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# (c) Try to extract version information from sip.h:\n",
        "Line" : 128,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# Try to find the sip library:\n",
        "Line" : 139,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Use the path to the python installation as a hint for finding sip\n",
        "Line" : 145,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 16
    },
    "cmake/FindTBB.cmake" : {
      "ObjectId" : "a604aa2760c30380b6737fa1dd8e91e35fff751d",
      "LastModified" : "2018-05-03T12:35:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate Intel Threading Building Blocks include paths and libraries\n\n# TBB can be found at http://www.threadingbuildingblocks.org/ \n\n# Written by Hannes Hofmann, hannes.hofmann _at_ informatik.uni-erlangen.de\n\n# Adapted by Gino van den Bergen gino _at_ dtecta.com\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# GvdB: This module uses the environment variable TBB_ARCH_PLATFORM which defines architecture and compiler.\n\n#   e.g. \"ia32/vc8\" or \"em64t/cc4.1.0_libc2.4_kernel2.6.16.21\"\n\n#   TBB_ARCH_PLATFORM is set by the build script tbbvars[.bat|.sh|.csh], which can be found\n\n#   in the TBB installation directory (TBB_INSTALL_DIR).\n\n#\n\n# For backwards compatibility, you may explicitely set the CMake variables TBB_ARCHITECTURE and TBB_COMPILER.\n\n# TBB_ARCHITECTURE     [ ia32 | em64t | itanium ]\n\n#   which architecture to use\n\n# TBB_COMPILER         e.g. vc9 or cc3.2.3_libc2.3.2_kernel2.4.21 or cc4.0.1_os10.4.9\n\n#   which compiler to use (detected automatically on Windows)\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This module respects\n\n# TBB_INSTALL_DIR or $ENV{TBB21_INSTALL_DIR} or $ENV{TBB_INSTALL_DIR}\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This module defines\n\n# TBB_INCLUDE_DIRS, where to find task_scheduler_init.h, etc.\n\n# TBB_LIBRARY_DIRS, where to find libtbb, libtbbmalloc\n\n# TBB_INSTALL_DIR, the base TBB install directory\n\n# TBB_LIBRARIES, the libraries to link against to use TBB.\n\n# TBB_DEBUG_LIBRARIES, the libraries to link against to use TBB with debug symbols.\n\n# TBB_FOUND, If false, don't try to use TBB.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# has em64t/vc8   em64t/vc9\n\n# has ia32/vc7.1  ia32/vc8   ia32/vc9\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# MAC\n",
        "Line" : 65,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# libs: libtbb.dylib, libtbbmalloc.dylib, *_debug\n",
        "Line" : 67,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# has only one flavor: ia32/cc4.0.1_os10.4.9\n",
        "Line" : 72,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# LINUX\n",
        "Line" : 76,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# has em64t/cc3.2.3_libc2.3.2_kernel2.4.21  em64t/cc3.3.3_libc2.3.3_kernel2.6.5  em64t/cc3.4.3_libc2.3.4_kernel2.6.9  em64t/cc4.1.0_libc2.4_kernel2.6.16.21\n\n# has ia32/*\n\n# has itanium/*\n",
        "Line" : 82,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# SUN\n\n# not yet supported\n\n# has em64t/cc3.4.3_kernel5.10\n\n# has ia32/*\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#-- Clear the public variables\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#-- Find TBB install dir and set ${_TBB_INSTALL_DIR} and cached ${TBB_INSTALL_DIR}\n\n# first: use CMake variable TBB_INSTALL_DIR\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# second: use environment variable\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Intel recommends setting TBB21_INSTALL_DIR\n",
        "Line" : 112,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# third: try to find path automatically\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# sanity check\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# finally: set the cached CMake variable TBB_INSTALL_DIR\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#-- A macro to rewrite the paths of the library. This is necessary, because \n\n#   find_library() always found the em64t/vc9 version of the TBB libs\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#    if (NOT \"${_TBB_ARCHITECTURE}\" STREQUAL \"em64t\")\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#    endif (NOT \"${_TBB_ARCHITECTURE}\" STREQUAL \"em64t\")\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#-- Look for include directory and set ${TBB_INCLUDE_DIR}\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#-- Look for libraries\n\n# GvdB: $ENV{TBB_ARCH_PLATFORM} is set by the build script tbbvars[.bat|.sh|.csh]\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# HH: deprecated\n",
        "Line" : 161,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "#TBB_CORRECT_LIB_DIR(TBB_LIBRARY)\n\n#TBB_CORRECT_LIB_DIR(TBB_MALLOC_LIBRARY)\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#-- Look for debug libraries\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#TBB_CORRECT_LIB_DIR(TBB_LIBRARY_DEBUG)\n\n#TBB_CORRECT_LIB_DIR(TBB_MALLOC_LIBRARY_DEBUG)\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# do only throw fatal, if this pkg is REQUIRED\n",
        "Line" : 208,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 28
    },
    "cmake/FindVRPN.cmake" : {
      "ObjectId" : "07af6c3404ccacd3982896b4a55e40cb7f776894",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find VRPN\n\n# Once done, this will define\n\n#\n\n#  VRPN_FOUND - system has VRPN\n\n#  QUAT_INCLUDE_DIRS - the QUAT include directories\n\n#  QUAT_LIBRARIES - link these to use VRPN\n\n#  VRPN_INCLUDE_DIRS - the VRPN include directories\n\n#  VRPN_LIBRARIES - link these to use VRPN\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# VRPN relies on the QUAT library that is typically shipped with VRPN\n\n# As we onlxy need the QUAT library for VRPN, we check for it here\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# QUAT Include dir\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The QUAT library\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# VRPN Include dir\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Finally the VRPN library itself\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set the include dir variables and the libraries and let libfind_process do the rest.\n\n# NOTE: Singular variables for this library, plural for libraries this this lib depends on.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/FindXDR.cmake" : {
      "ObjectId" : "0760ea669ffac330147bb8866b9bf4f13a9838e9",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find the XDR library and set some required variables\n\n#\n\n# Once run this will define:\n\n#\n\n# XDR_FOUND\t\t\t\t\t= system has XDR lib\n\n#\n\n# XDR_LIBRARIES\t\t\t= full path to the libraries, if required\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## First try to find the required header files (rpc/types.h, rpc/xdr.h)\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#check for the XDR functions: their interface and the libraries they're hidden in.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Now let's see if we need an extra lib to compile it\n",
        "Line" : 36,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "## Try to find the corresponding lib\n",
        "Line" : 41,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "## try to find the debug version as well\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "## Let's see if we have an implementation for xdr_u_hyper\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#List containing possible types for BALL_XDR_UINT64_TYPE\n",
        "Line" : 88,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#iterate over the list and try out the types\n",
        "Line" : 91,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 9
    },
    "cmake/FindlibSVM.cmake" : {
      "ObjectId" : "b7d4984b299678c35b411bef7701c8d9270e9604",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  -- Try to find LibSVM\n\n#\n\n#  LibSVM is a Library for Support Vector Machines\n\n#  available at http://www.csie.ntu.edu.tw/~cjlin/libsvm/\n\n#\n\n#  ------------------------------------------------------------------\n\n#\n\n#  -- Library usage example :\n\n#\n\n#  find_package (LibSVM 2.9.0)\n\n#  if (LIBSVM_FOUND)\n\n#     include_directories (${LIBSVM_INCLUDE_DIRS})\n\n#     add_executable (foo foo.cpp)\n\n#     target_link_libraries (foo ${LIBSVM_LIBRARIES})\n\n#  endif ()\n\n#\n\n#  -- Show some debug information :\n\n#\n\n#  set (LIBSVM_DEBUG TRUE)\n\n#  find_package (LibSVM)\n\n#\n\n#  -------------------------------------------------------------------\n\n#\n\n#  -- This module defines :\n\n#\n\n#  LIBSVM_FOUND - the system has LibSVM\n\n#  LIBSVM_INCLUDE_DIR - where to find svm.h\n\n#  LIBSVM_INCLUDE_DIRS libsvm includes\n\n#  LIBSVM_LIBRARY - where to find the LibSVM library\n\n#  LIBSVM_LIBRARIES - aditional libraries\n\n#  LIBSVM_VERSION - version\n\n#  LIBSVM_MAJOR_VERSION - major version\n\n#  LIBSVM_MINOR_VERSION - minor version\n\n#  LIBSVM_SUBMINOR_VERSION - subminor version\n\n#  LIBSVM_ROOT_DIR - root dir (ex. /usr/local)\n\n#\n\n#  ------------------------------------------------------------------\n\n#\n\n#  Copyright (c) 2010 Julien Schueller <schueller at phimeca dot com>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# check for math header\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# set LIBSVM_INCLUDE_DIR\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# set LIBSVM_INCLUDE_DIR\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# version\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# LIBSVM_VERSION macro defined in svm.h since version 2.8.9\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# check version\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# set LIBSVM_LIBRARY\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# set LIBSVM_LIBRARIES\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# link with math library on unix\n",
        "Line" : 129,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# root dir\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# try to guess root dir from include dir\n",
        "Line" : 138,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# try to guess root dir from library dir\n",
        "Line" : 142,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# debug\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# handle REQUIRED and QUIET options\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "cmake/LibFindMacros.cmake" : {
      "ObjectId" : "69975c51be3f9c5e0ff372a4424f8de3b580ee88",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Works the same as find_package, but forwards the \"REQUIRED\" and \"QUIET\" arguments\n\n# used for the current package. For this to work, the first parameter must be the\n\n# prefix of the current package, then the prefix of the new package etc, which are\n\n# passed to find_package.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMake developers made the UsePkgConfig system deprecated in the same release (2.6)\n\n# where they added pkg_check_modules. Consequently I need to support both in my scripts\n\n# to avoid those deprecated warnings. Here's a helper that does just that.\n\n# Works identically to pkg_check_modules, except that no checks are needed prior to use.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Do the final processing once the paths have been detected.\n\n# If include dirs are needed, ${PREFIX}_PROCESS_INCLUDES should be set to contain\n\n# all the variables, each of which contain one include directory.\n\n# Ditto for ${PREFIX}_PROCESS_LIBS and library files.\n\n# Will set ${PREFIX}_FOUND, ${PREFIX}_INCLUDE_DIRS and ${PREFIX}_LIBRARIES.\n\n# Also handles errors in case library detection was required, etc.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Skip processing if already processed during this run\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Start with the assumption that the library was found\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Process all includes and set _FOUND to false if any are missing\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Process all libraries and set _FOUND to false if any are missing\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Print message and/or exit on fatal error\n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "cmake/NSISExtraInstallCommands.cmake" : {
      "ObjectId" : "38f2b4e0fb955cd7bf78a87970f7de802ea31fec",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/NSISExtraUninstallCommands.cmake" : {
      "ObjectId" : "0e6ef65153a9785f289708030a8b2d05f1383e72",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/SIPMacros.cmake" : {
      "ObjectId" : "827769cde4bf6727a9916e446d75b36fe9284014",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros for SIP\n\n# ~~~~~~~~~~~~~~\n\n# Copyright (c) 2007, Simon Edwards <simon@simonzone.com>\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n\n# SIP website: http://www.riverbankcomputing.co.uk/sip/index.php\n\n#\n\n# This file defines the following macros:\n\n#\n\n# ADD_SIP_PYTHON_MODULE (MODULE_NAME MODULE_SIP [library1, libaray2, ...])\n\n#     Specifies a SIP file to be built into a Python module and installed.\n\n#     MODULE_NAME is the name of Python module including any path name. (e.g.\n\n#     os.sys, Foo.bar etc). MODULE_SIP the path and filename of the .sip file\n\n#     to process and compile. OUTPUT_BASENAME is the basename of the library to be generated,\n\n#\t\t\tand libraryN are libraries that the Python module,\n\n#     which is typically a shared library, should be linked to. The built\n\n#     module will also be install into Python's site-packages directory.\n\n#\n\n# The behaviour of the ADD_SIP_PYTHON_MODULE macro can be controlled by a\n\n# number of variables:\n\n#\n\n# SIP_INCLUDES - List of directories which SIP will scan through when looking\n\n#     for included .sip files. (Corresponds to the -I option for SIP.)\n\n#\n\n# SIP_TAGS - List of tags to define when running SIP. (Corresponds to the -t\n\n#     option for SIP.)\n\n#\n\n# SIP_CONCAT_PARTS - An integer which defines the number of parts the C++ code\n\n#     of each module should be split into. Defaults to 8. (Corresponds to the\n\n#     -j option for SIP.)\n\n#\n\n# SIP_DISABLE_FEATURES - List of feature names which should be disabled\n\n#     running SIP. (Corresponds to the -x option for SIP.)\n\n#\n\n# SIP_EXTRA_OPTIONS - Extra command line options which should be passed on to\n\n#     SIP.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Output goes in this dir.\n",
        "Line" : 56,
        "CharPositionInLine" : 81
      },
      "2" : {
        "Text" : "# instead of a touch command, give out the name and append to the files\n\n# this is basically what the touch command does.\n",
        "Line" : 87,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "#    INSTALL(TARGETS ${_logical_name} DESTINATION \"${PYTHON_SITE_PACKAGES_DIR}/${_parent_module_path}\")\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/VIEWIncludes.cmake" : {
      "ObjectId" : "3003f19379c6e31d2dab3e8f0bcc738a1100e11e",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "include/BALL/COMMON/sources.cmake" : {
      "ObjectId" : "c2f58ee97c88a140868d18acbcf84a7c0ebf9dd7",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "include/BALL/CONCEPT/sources.cmake" : {
      "ObjectId" : "313595c0846ab6d79a55f01ae408544ce500a349",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "include/BALL/CONFIG/sources.cmake" : {
      "ObjectId" : "c6e3c875273944c780463f6493a3619e2f24757a",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "include/BALL/DATATYPE/GRAPH/sources.cmake" : {
      "ObjectId" : "1efe79f8bc8010561c2252eddbe5540d07420d5e",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "include/BALL/DATATYPE/sources.cmake" : {
      "ObjectId" : "dd81f626e96b5cdf0c04073b1e6577a80b05cf0a",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "include/BALL/DOCKING/COMMON/sources.cmake" : {
      "ObjectId" : "54014dae804420aabba845e3874e1013d02dc4f8",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "include/BALL/DOCKING/GENETICDOCK/sources.cmake" : {
      "ObjectId" : "411e52f755a2b4ab2c4e46a9871dc59873fb219f",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "include/BALL/DOCKING/IMGDOCK/sources.cmake" : {
      "ObjectId" : "bec45fd54d613ea9866c84ad92f7e727f8b2b3d4",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "include/BALL/DOCKING/sources.cmake" : {
      "ObjectId" : "53495e29a3d09dccfce27b49b71b0c89fad35b2f",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### the directory name ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "include/BALL/ENERGY/sources.cmake" : {
      "ObjectId" : "f58a4293ab3fd339c542aba58ace6d0050eda31a",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "include/BALL/FORMAT/sources.cmake" : {
      "ObjectId" : "dbaa003458f123b9321cdaeb3f387af656f3fabe",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "include/BALL/KERNEL/sources.cmake" : {
      "ObjectId" : "7783f7c21fb8b1afde5c20f3e17e65cf9966148b",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "include/BALL/MATHS/sources.cmake" : {
      "ObjectId" : "875f231c17f70fc886cbabf53329804c8c4fc723",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#INCLUDE(include/BALL/MATHS/LINALG/sources.cmake)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "include/BALL/MOLMEC/AMBER/sources.cmake" : {
      "ObjectId" : "dc56fb1b878c1939a0eb02974d889be59c9aed48",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "include/BALL/MOLMEC/CHARMM/sources.cmake" : {
      "ObjectId" : "e62c73b2b834c8e09a8a55b526254488a0dd4f60",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "include/BALL/MOLMEC/COMMON/sources.cmake" : {
      "ObjectId" : "fcbf5ab07d90b3504d1be24246386844cdd0c64a",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "include/BALL/MOLMEC/MDSIMULATION/sources.cmake" : {
      "ObjectId" : "288a150a002ad23399864ccdb625e8b48236845f",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "include/BALL/MOLMEC/MINIMIZATION/sources.cmake" : {
      "ObjectId" : "d0a35dd0a9fdd86684c1ab295b282d93994f1428",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "include/BALL/MOLMEC/MMFF94/sources.cmake" : {
      "ObjectId" : "0998dc461e157d017ef7c0578aa0cbd8351c1b4f",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "include/BALL/MOLMEC/PARAMETER/sources.cmake" : {
      "ObjectId" : "f1d28b03dda0d5db2fac4d561ba2c9dae468e8cf",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "include/BALL/MOLMEC/sources.cmake" : {
      "ObjectId" : "8d0f48a717a7fa3a3b2c31e2a1af6c9e16a4ddce",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### the directory name ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "include/BALL/NMR/sources.cmake" : {
      "ObjectId" : "328f6828f77fd25b1e1a050618f17bd792739886",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "include/BALL/PLUGIN/sources.cmake" : {
      "ObjectId" : "739493eebe07124441ccfcd2babe4a58a8479592",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "include/BALL/PYTHON/EXTENSIONS/sources.cmake" : {
      "ObjectId" : "665ec6493b38f6e2c6a7ffff8c867e1449005333",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "include/BALL/PYTHON/sources.cmake" : {
      "ObjectId" : "6d287c0267ddef58519b73921da9d5d2ab34858b",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "include/BALL/QSAR/sources.cmake" : {
      "ObjectId" : "0a787b47bbca677f95570f34ece905b2b97055ca",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "include/BALL/SCORING/COMMON/sources.cmake" : {
      "ObjectId" : "5756f262c00e9f6fb2e0237aa0839267d7e13fb3",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "include/BALL/SCORING/COMPONENTS/sources.cmake" : {
      "ObjectId" : "ea39ef98544b5181fa11feadf9597f93fe50e3ba",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "include/BALL/SCORING/FUNCTIONS/sources.cmake" : {
      "ObjectId" : "03e813170f7715bdec698a492e314cc630a1a13e",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "include/BALL/SCORING/sources.cmake" : {
      "ObjectId" : "93a4a476a81a1365ff89df65d5c0103941b0a225",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### the directory name ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "include/BALL/SOLVATION/sources.cmake" : {
      "ObjectId" : "b87d349437816c405abb8d01e13170debc5ac804",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "include/BALL/STRUCTURE/BONDORDERS/sources.cmake" : {
      "ObjectId" : "46cf65c0d9e217e4de6d9611c344aa5a0d02664a",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "include/BALL/STRUCTURE/sources.cmake" : {
      "ObjectId" : "3cad2814eb6f570cfaf07aa4b155e9bd72012a2a",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### the directory name ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "include/BALL/SYSTEM/sources.cmake" : {
      "ObjectId" : "70763897c0a62965b6eeed211470904d6a9c4816",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "include/BALL/VIEW/DATATYPE/sources.cmake" : {
      "ObjectId" : "252cf0719f3f92b1a7e37111c472c96cbfc1785c",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "include/BALL/VIEW/DIALOGS/sources.cmake" : {
      "ObjectId" : "9c776398169e364e7c2e5fd9030932ee491a5ada",
      "LastModified" : "2018-08-08T11:59:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "include/BALL/VIEW/KERNEL/MODES/sources.cmake" : {
      "ObjectId" : "685b8139cadb5f50eaa3a98d17e83fdb3937b558",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "include/BALL/VIEW/KERNEL/sources.cmake" : {
      "ObjectId" : "bc094db33a4886df72169963a899216b6c762fbc",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "include/BALL/VIEW/WIDGETS/sources.cmake" : {
      "ObjectId" : "bb6ac7da5da6f5b0a18a46c8036120ac02c11641",
      "LastModified" : "2018-08-08T11:59:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "include/BALL/VIEW/sources.cmake" : {
      "ObjectId" : "8f3ba9f1ddb60a10f7a7e00a4b1f85eccad54895",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "include/BALL/XRAY/sources.cmake" : {
      "ObjectId" : "081fde42d498dbdd402198e9c1a9330bd9439edd",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/APPLICATIONS/BALLVIEW/CMakeLists.txt" : {
      "ObjectId" : "5fd21ee68fb2a611483ca1644d03ee59ce33e619",
      "LastModified" : "2018-08-08T11:59:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### the list of all files requiring a moc run ###\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Setup the translations\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "source/APPLICATIONS/MMFF94/CMakeLists.txt" : {
      "ObjectId" : "107cf8d26ce79a72ea37775f84d39f331565d995",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The name of the project to build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set BALL specific includes and compilerflags\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add MMFF94 targets\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "### add filenames to Visual Studio solution\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "source/APPLICATIONS/TOOLS/CMakeLists.txt" : {
      "ObjectId" : "90dd800aa1d9580a7136fcb4217f3ebef3ab38e2",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The name of the project to build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set BALL specific includes and compilerflags\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###### add TOOLS targets ########\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "source/APPLICATIONS/TOOLS/sources.cmake" : {
      "ObjectId" : "09e5421a7a2950988e15e1cd76485c29ce15c23e",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### the directory name\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#MolecularFileConverter\n",
        "Line" : 35,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# add new programs here\n",
        "Line" : 65,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "### add filenames to Visual Studio solution\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "source/APPLICATIONS/UTILITIES/CMakeLists.txt" : {
      "ObjectId" : "e7e778e4b98948db672f6b0a4576adbe2a8f65d1",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The name of the project to build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set BALL specific includes and compilerflags\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add UTILITIES targets\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "source/APPLICATIONS/UTILITIES/sources.cmake" : {
      "ObjectId" : "06301400d4d2181b1ad289e69a79b51a33bcccd3",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# the directory name\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# list all filenames of the directory here\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "### add filenames to Visual Studio solution\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "source/BENCHMARKS/CMakeLists.txt" : {
      "ObjectId" : "2c2eb87b1d3f3e0fa40883bd9748ceacf69c5989",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/COMMON/sources.cmake" : {
      "ObjectId" : "c3bd5cc7add46e2f4607c60b098c96450309ba3f",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### the directory name ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "source/CONCEPT/sources.cmake" : {
      "ObjectId" : "843c4a871357df3e36073f6eeef40f5791aa4282",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### the directory name ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "source/DATATYPE/GRAPH/sources.cmake" : {
      "ObjectId" : "25743a44f8b9322cd8fd9cfbb86073524d83ee6c",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/DATATYPE/sources.cmake" : {
      "ObjectId" : "d00d17893d41285522c47c6d59c298969d22c593",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### the directory name ###\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "source/DOCKING/COMMON/sources.cmake" : {
      "ObjectId" : "c28738628bafb3e2127a51cbe731a04e848e5e3b",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### the directory name ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "source/DOCKING/GENETICDOCK/sources.cmake" : {
      "ObjectId" : "a479e1138f64dc1b54ceb24c15a470766e91b71c",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### the directory name ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "source/DOCKING/IMGDOCK/sources.cmake" : {
      "ObjectId" : "c0b81a145c5ef30aabe97d5d937e3ac7567fb4cb",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### the directory name ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "source/DOCKING/sources.cmake" : {
      "ObjectId" : "89beee57371e181408be8eaba4c849ca1bc71831",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### the directory name ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/ENERGY/sources.cmake" : {
      "ObjectId" : "2e343d0eafa2e0d0118e2120abf16b28135a710b",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### the directory name ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "source/EXTENSIONS/BALLAXY/CMakeLists.txt" : {
      "ObjectId" : "1eed12c37a321bad21b32cb6fdeefd3ea47ded8f",
      "LastModified" : "2018-08-08T11:59:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### the list of all files requiring a moc run ###\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "source/EXTENSIONS/BALLPluginComponents.cmake" : {
      "ObjectId" : "8ba9f98d6a090571e33f9df3d755f3213d6d9c84",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/EXTENSIONS/CMakeLists.txt" : {
      "ObjectId" : "ccdc2820ba33e1c107806202a2aab3e4d1fba24e",
      "LastModified" : "2018-08-08T11:59:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/EXTENSIONS/JUPYTER/CMakeLists.txt" : {
      "ObjectId" : "24a459fbf9260dc9eb966c2486197553ecf7f066",
      "LastModified" : "2018-08-08T11:59:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### the list of all files requiring a moc run ###\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "source/EXTENSIONS/PRESENTABALL/CMakeLists.txt" : {
      "ObjectId" : "ad027fd031403db28f473a9303a8cdaec73de96e",
      "LastModified" : "2018-08-08T11:59:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### the list of all files requiring a moc run ###\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "source/EXTENSIONS/SPACENAV/CMakeLists.txt" : {
      "ObjectId" : "216e7861498059aa6455d9354434b21fb5cea31f",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### the list of all files requiring a moc run ###\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#IF (${CMAKE_SYSTEM_NAME} MATCHES \"Darwin\")\n\n#\tLIST(APPEND RESOURCES_LIST ${CMAKE_SOURCE_DIR}/cmake/installer/BALLView.icns)\n\n#\tSET(MACOSX_BUNDLE_ICON_FILE BALLView.icns)\n\n#\tSET_SOURCE_FILES_PROPERTIES(${CMAKE_SOURCE_DIR}/cmake/installer/BALLView.icns\n\n#\t\t\tPROPERTIES MACOSX_PACKAGE_LOCATION Resources)\n\n#ENDIF()\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "source/EXTENSIONS/SPACENAV/cmake/FindSpaceNavigator.cmake" : {
      "ObjectId" : "61ea00281cad22a79250d95fae658ac5f9710d52",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# A simple find macro for detecting a SpaceNavigator driver installation\n\n# The driver is actually platform dependent. The following libraries are\n\n# detected:\n\n#\n\n# Unix: libspnav\n\n# MacOSX: lib3DConnexionClient\n\n#\n\n# This macro sets the following variables:\n\n# - SPNAV_FOUND        if the library has been successfully detected\n\n#                      this variable will be set to TRUE. Else it will have\n\n#                      the value FALSE.\n\n# - SPNAV_LIBRARIES    a listcontaining the appropriate libraries\n\n# - SPNAV_INCLUDE_DIRS a listcontaining the approriate include directories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Prepare the input for LIBFIND_PROCESS\n",
        "Line" : 28,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "#TODO: Improve MacOS X code\n",
        "Line" : 34,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 3
    },
    "source/EXTENSIONS/VRPN/CMakeLists.txt" : {
      "ObjectId" : "d626c3075e176b956e9c7f3c0a24faae1f841d80",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## VRPN\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "### the list of all files requiring a moc run ###\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "source/EXTENSIONS/VRPNHD/CMakeLists.txt" : {
      "ObjectId" : "d861ea20ff648b724df53c2be263b1a4e06dec38",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## VRPN\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "### the list of all files requiring a moc run ###\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "source/FORMAT/sources.cmake" : {
      "ObjectId" : "5766fd6e197ab16e1faec2b9c6c41691ca3bd0fe",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\tGAMESSLogFile.C\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#ADD_BALL_PARSER_LEXER(\"FORMAT\" \"GAMESSLogParser\" \"GAMESSLogParser\")\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "source/KERNEL/sources.cmake" : {
      "ObjectId" : "9994511a406992a4c1e1282fda8f9ed744126311",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### the directory name ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\textractors.C\\\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "source/MATHS/sources.cmake" : {
      "ObjectId" : "cc85f9cdcd8814ed48dca9eb30ffd0d34d2eeffe",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#INCLUDE(source/MATHS/LINALG/sources.cmake)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "source/MOLMEC/AMBER/sources.cmake" : {
      "ObjectId" : "d361217847226014dfe4d418721d30b7d836ceec",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### the directory name ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "source/MOLMEC/CHARMM/sources.cmake" : {
      "ObjectId" : "b39238305accb0c1d73e5c49b486698da2d86421",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### the directory name ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "source/MOLMEC/COMMON/sources.cmake" : {
      "ObjectId" : "3ba07036e120e46fe6abeff2c5cb8bc5866d427d",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### the directory name ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "source/MOLMEC/MDSIMULATION/sources.cmake" : {
      "ObjectId" : "4d19899952601c7b75740a219c55f2a4af6e4a99",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### the directory name ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "source/MOLMEC/MINIMIZATION/sources.cmake" : {
      "ObjectId" : "db6012ced5658925f2be7a9090b6c21c1bbb6b64",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### the directory name ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "source/MOLMEC/MMFF94/sources.cmake" : {
      "ObjectId" : "73fe035609f8e5d756cbeafa15bc105ad2f46d3f",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### the directory name ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "source/MOLMEC/PARAMETER/sources.cmake" : {
      "ObjectId" : "bcf7c428d940ede91c11cd8fb8715dbdb085c203",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### the directory name ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "source/MOLMEC/sources.cmake" : {
      "ObjectId" : "2d7fac071a9e7efff1621ca64490179a524a5cfa",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### the directory name ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/NMR/sources.cmake" : {
      "ObjectId" : "5f4dd9cb7ddee124852a9f96b2a6f1e926b9be8b",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### the directory name ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "source/PLUGIN/sources.cmake" : {
      "ObjectId" : "9e9817be31713b1f3837467e1ff2c674063cb818",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/PYTHON/EXTENSIONS/CMakeLists.txt" : {
      "ObjectId" : "374732519d025295a3fb0aad09c5832a2224805b",
      "LastModified" : "2018-08-08T11:59:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the BALLCore python bindings\n",
        "Line" : 17,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Add the VIEW python bindings\n",
        "Line" : 32,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Install the BALL.py script\n",
        "Line" : 37,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "#\t\tINSTALL(FILES ${PYTHON_EXECUTABLE}\n\n#\tCOMPONENT \"${COMPONENT_PYTHON_BINDINGS_BALL}\"\n\n#\tDESTINATION \"${CMAKE_INSTALL_BINDIR}\"\n\n#)\n",
        "Line" : 70,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 4
    },
    "source/PYTHON/sources.cmake" : {
      "ObjectId" : "1d9979d377fd01c530aa0db14f79bc095e387933",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/QSAR/sources.cmake" : {
      "ObjectId" : "3a25e6cddb377af6099024e1d5ba3663bb819eed",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### the directory name ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "source/SCORING/COMMON/sources.cmake" : {
      "ObjectId" : "64e87d0fc38145e596bc3d177dbe316af62591a0",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### the directory name ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "source/SCORING/COMPONENTS/sources.cmake" : {
      "ObjectId" : "310bab2a2e708655c09be418e662cb49d564d038",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### the directory name ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#rotationalEntropyLoss.C\n",
        "Line" : 25,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 3
    },
    "source/SCORING/FUNCTIONS/sources.cmake" : {
      "ObjectId" : "bccd0afef7d069a23a1439aa69c8c6b83abbd191",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### the directory name ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "source/SCORING/sources.cmake" : {
      "ObjectId" : "ef3e974ccc71c81756359a0db940cd658ed7c573",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### the directory name ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/SOLVATION/sources.cmake" : {
      "ObjectId" : "6c9a47d97909efdc837ee31621e9f762204b4098",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/STRUCTURE/BONDORDERS/sources.cmake" : {
      "ObjectId" : "a76b50559c4257e737ee0e0ab2d3663b660a3e51",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/STRUCTURE/sources.cmake" : {
      "ObjectId" : "e7499664c90b33ec0f081ca81a559526e84478fe",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/SYSTEM/sources.cmake" : {
      "ObjectId" : "299246dcfc837d536527c9d92e80a4158dc00cbe",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/VIEW/DATATYPE/sources.cmake" : {
      "ObjectId" : "1b7403d521bc510e2f327f4ff3426d03e2697534",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/VIEW/DIALOGS/sources.cmake" : {
      "ObjectId" : "f522a1cac4b5300dd8f9227919e9b85833bfe36f",
      "LastModified" : "2018-08-08T11:59:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### The ui files go here ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "source/VIEW/INPUT/sources.cmake" : {
      "ObjectId" : "623049b4096b942c22904eca76f9df41aa05c5a4",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/VIEW/KERNEL/MODES/sources.cmake" : {
      "ObjectId" : "9e4ab759ee3361c20b64d5cd53b95c9f1f33fee6",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/VIEW/KERNEL/sources.cmake" : {
      "ObjectId" : "4995e92885efdd5007e1c6715add8c555f370cbf",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/VIEW/MODELS/sources.cmake" : {
      "ObjectId" : "6451becad62c76432696df7db4ce6d1cb2bf481c",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/VIEW/PLUGIN/sources.cmake" : {
      "ObjectId" : "f0e543a886077606b78c67117d4b54b07e3a6ccc",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/VIEW/PRIMITIVES/sources.cmake" : {
      "ObjectId" : "f07c6bcde0b99836bebad4aa3cb1516c70425753",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/VIEW/RENDERING/RENDERERS/sources.cmake" : {
      "ObjectId" : "8a85d164c71c3676ad68076414007478d0aa28f9",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/VIEW/RENDERING/sources.cmake" : {
      "ObjectId" : "2f7193f002d25e0a4d29827d9332e4674fee963f",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/VIEW/WIDGETS/sources.cmake" : {
      "ObjectId" : "51e81a39def1dd1ee51855c820d5a8c96dbe25fe",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### The ui files go here ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "source/XRAY/sources.cmake" : {
      "ObjectId" : "9abb5e033766733237b95685eba147a3c96c6e10",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### list all filenames of the directory here ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "48c89ec219f6b95e3a279245be29387e83e5f99a",
      "LastModified" : "2018-08-08T11:59:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### Build rules for BALL's class tests\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## For now, disable optimization for the tests\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## BASIC\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## MATHS\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## SYSTEM\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## TODO: all of them...\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Restore build flags\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Now, add all tests as targets\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Set the timeout of some tests to 2h\n\n# This is needed for the memcheck running on the CI server\n\n# which takes _very_ long\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Create a suitable target\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "test/cmake/BALLTestExecutables.cmake" : {
      "ObjectId" : "674fb028a1eaf34832534c8a9f9a935e8059cefb",
      "LastModified" : "2018-08-08T11:59:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### The list of all tests combined\n",
        "Line" : 349,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/cmake/VIEWTestExecutables.cmake" : {
      "ObjectId" : "bbe006c44a5cd6a691bd5cf45def16ebe9d4648c",
      "LastModified" : "2018-08-08T11:59:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "workflow_support/cwl/CMakeLists.txt" : {
      "ObjectId" : "59369938a80b8c4d069cebd22459ceb50475a71d",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The name of the project to build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check OS and set appropriate Miniconda setup file URL\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# what now? SET(LD_LIBRARY_PATH_VAR \"DYLD_LIBRARY_PATH\")\n",
        "Line" : 7,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# Set required output directories\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Configure file that will install CTDConverter and its dependencies\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Configure file that will generate all CTDs\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Configure CWL build file\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add cwl target\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "workflow_support/galaxy/CMakeLists.txt" : {
      "ObjectId" : "121a197955031665c55d7c4f6827b6763b1b68fb",
      "LastModified" : "2017-11-10T17:34:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The name of the project to build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check OS and set appropriate Miniconda setup file URL\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set required output directories\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Configure file that will install CTDConverter and its dependencies\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Configure file that will generate all CTDs\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Configure Ballaxy build file\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Generate Galaxy startup file including necessary ENV variables\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add ballaxy target\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    }
  },
  "FileTypes" : {
    "CMAKE" : 149
  },
  "ElapsedTime" : 6250
}