{
  "Repository" : "2279349",
  "Revision" : "HEAD",
  "ObjectId" : "74c8da7f01c994785081f980d1c26f000c52cc44",
  "CommitTime" : "2014-08-24T21:07:52Z",
  "Files" : {
    "src/Makefile" : {
      "ObjectId" : "c9bf0a3d9658e63435c8b7d9af3671f6e1864cf6",
      "LastModified" : "2014-08-14T22:12:15Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# DON, a UCI chess playing engine derived from Glaurung 2.1\n\n# Copyright (C) 2004-2008 Tord Romstad (Glaurung author)\n\n# Copyright (C) 2008-2014 Marco Costalba, Joona Kiiski, Tord Romstad\n\n# Copyright (C) 2008-2014 Ehsan Rashid\n\n#\n\n# DON is free software: you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation, either version 3 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# DON is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program. If not, see <http://www.gnu.org/licenses/>.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### ==========================================================================\n\n### Section 1. General Configuration\n\n### ==========================================================================\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "### Establish the operating system name\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "### Executable name\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "### Installation dir definitions\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Haiku has a non-standard filesystem layout\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "### Built-in benchmark for pgo-builds\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "### Object files\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "### ==========================================================================\n\n### Section 2. High-level Configuration\n\n### ==========================================================================\n\n#\n\n# flag                --- Comp switch      --- Description\n\n# ----------------------------------------------------------------------------\n\n#\n\n# debug   = yes/no    --- -DNDEBUG         --- Enable/Disable debug mode\n\n# optimize= yes/no    --- (-O3/-fast etc.) --- Enable/Disable optimizations\n\n# arch    = (name)    --- (-arch)          --- Target architecture\n\n# os      = (name)    ---                  --- Target operating system\n\n# bits    = 64/32     --- -D_64BIT         --- 64/32-bit operating system\n\n# pfch    = yes/no    --- -DPREFETCH       --- Use Prefetch x86 asm-instruction\n\n# bsfq    = yes/no    --- -DBSFQ           --- Use Bitscans x86_64 asm-instruction (only with GCC and ICC 64-bit)\n\n# sse     = yes/no    --- -msse            --- Use Intel Streaming SIMD Extensions instructions\n\n# abm     = yes/no    --- -DABM            --- Use ABM (Adv Bit Manipulation) x86_64 asm-instructions\n\n# bm2     = yes/no    --- -DBM2            --- Use BM2 (Bit Manipulation 2) x86_64 asm-instructions\n\n# lpg     = yes/no    --- -DLPAGES         --- Use Large Pages\n\n#\n\n# Note that Makefile is space sensitive, so when adding new architectures\n\n# or modifying existing flags, you have to make sure there are no extra spaces\n\n# at the end of the line for flag values.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "### 2.1. General and architecture defaults\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "### 2.2 Architecture specific\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "### ==========================================================================\n\n### Section 3. Low-level configuration\n\n### ==========================================================================\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "### 3.1 Selecting compiler (default = gcc)\n\n# -std=c++11 or -std=c++0x or -std=gnu++11 or -std=gnu++0x\n\n# -Wall -fabi-version=6 -fno-access-control -fno-strict-enums -Wno-pragmas -fexceptions\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# gcc (default)\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "### On mingw use Windows threads, otherwise POSIX\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# On Android Bionic's C library comes with its own pthread implementation bundled in\n",
        "Line" : 215,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "# Haiku has pthreads in its libroot, so only link it in on other platforms\n",
        "Line" : 217,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "### 3.4 Debugging\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "### 3.5 Optimization\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "### 3.6 Bits\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "### 3.7 Prefetch\n",
        "Line" : 281,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "### 3.8 Bitscans\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "### 3.9 ABM (Adv Bit Manipulation)\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "### 3.10 BM2 (Bit Manipulation 2)\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "### 3.11 Large Pages\n",
        "Line" : 308,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "### 3.12\n\n# CXXFLAGS += -DPOP\n",
        "Line" : 313,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "### 3.13 Link Time Optimization, it works since gcc 4.5 but not on mingw.\n\n### This is a mix of compile and link time options because the lto link phase\n\n### needs access to the optimization flags.\n",
        "Line" : 316,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "### ==========================================================================\n\n### Section 4. Public targets\n\n### ==========================================================================\n",
        "Line" : 332,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "### ==========================================================================\n\n### Section 5. Private targets\n\n### ==========================================================================\n",
        "Line" : 419,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# generating obj file\n",
        "Line" : 466,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "### ==========================================================================\n\n### Section 6. Non-standard targets\n\n### ==========================================================================\n",
        "Line" : 511,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 31
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 776
}