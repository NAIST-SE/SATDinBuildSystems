{
  "Repository" : "25012138",
  "Revision" : "HEAD",
  "ObjectId" : "09b6768af6ca0614a429441915c1de2d0fd04509",
  "CommitTime" : "2019-04-15T11:21:07Z",
  "Files" : {
    "stack/CMakeLists.txt" : {
      "ObjectId" : "3090445a4575d92393da3923b23f7ad333dbb02c",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set CMP0054 to 'OLD'.\n\n#This was introduced with CMake 3.1, we're still at 2.8, so no need to update this and\n\n#potentially break the entire build chain until cmake 3.1 has become mainstream\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#First clear global variables that were stored in the cache to make them global\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Override link command to allow linker flags to be inserted wherever needed\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Allow the project name to be set from the cache\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Set the c standard to use\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#Retrieve the selected toolchain\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# set default platform\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#Then load the Framework\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#Load the file with platform-specific build commands\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# D7AP module enabled by default\n\n# ALP module enabled by default\n",
        "Line" : 77,
        "CharPositionInLine" : 39
      },
      "11" : {
        "Text" : "#Then load the modules\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#And finally the applications\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#And tests\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "stack/apps/CMakeLists.txt" : {
      "ObjectId" : "068b4d713a97c28f3e9785a4da1747610eaee478",
      "LastModified" : "2017-02-03T10:41:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Add the 'BUILD_APPLICATIONS' option\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Add conditional options for all subdirs (which are individual applications)\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# strip full path keeping only app name\n",
        "Line" : 34,
        "CharPositionInLine" : 51
      },
      "4" : {
        "Text" : "#Hide the parameters declared by the applications during the previous run\n\n#Applications that are enabled will re-enable their parameters during declaration (eg by calling APP_PARAM)\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Finally Load the individual applications\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# strip full path keeping only app name\n",
        "Line" : 47,
        "CharPositionInLine" : 51
      },
      "CommentCount" : 7
    },
    "stack/apps/continuous_rx/CMakeLists.txt" : {
      "ObjectId" : "d2212873b35e919d702a7fda4b9140d583f1425c",
      "LastModified" : "2017-03-07T23:49:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#See the explanation of APP_OPTION and APP_PARAM in cmake/app_macros.cmake \n\n#for details on how to add application-specific CMake GUI entries\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#By convention, application parameters should be prefixed with '${APP_PREFIX}'\n\n#Some examples:\n\n#APP_OPTION(${APP_PREFIX}_<option_name> \"Option explanation\" <default_value>)\n\n#APP_PARAM(${APP_PREFIX}_<param_name> \"<default_value>\" <type> \"Parameter explanation\")\n\n#\n\n#Cache properties can be set on application parameters just like on regular cache parameters\n\n#SET_PROPERTY(CACHE ${APP_PREFIX}_<param_name> PROPERTY STRINGS \"value1;value2\")\n\n#\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "stack/apps/continuous_tx/CMakeLists.txt" : {
      "ObjectId" : "565de27b744509b9d52c7fea302d1a78c81019b4",
      "LastModified" : "2017-03-07T23:49:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#See the explanation of APP_OPTION and APP_PARAM in cmake/app_macros.cmake \n\n#for details on how to add application-specific CMake GUI entries\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#By convention, application parameters should be prefixed with '${APP_PREFIX}'\n\n#Some examples:\n\n#APP_OPTION(${APP_PREFIX}_<option_name> \"Option explanation\" <default_value>)\n\n#APP_PARAM(${APP_PREFIX}_<param_name> \"<default_value>\" <type> \"Parameter explanation\")\n\n#\n\n#Cache properties can be set on application parameters just like on regular cache parameters\n\n#SET_PROPERTY(CACHE ${APP_PREFIX}_<param_name> PROPERTY STRINGS \"value1;value2\")\n\n#\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "stack/apps/gateway/CMakeLists.txt" : {
      "ObjectId" : "441450e673e25e1abaa25a02f4316e29bb3938af",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#See the explanation of APP_OPTION and APP_PARAM in cmake/app_macros.cmake \n\n#for details on how to add application-specific CMake GUI entries\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#By convention, application parameters should be prefixed with '${APP_PREFIX}'\n\n#Some examples:\n\n#APP_OPTION(${APP_PREFIX}_<option_name> \"Option explanation\" <default_value>)\n\n#APP_PARAM(${APP_PREFIX}_<param_name> \"<default_value>\" <type> \"Parameter explanation\")\n\n#\n\n#Cache properties can be set on application parameters just like on regular cache parameters\n\n#SET_PROPERTY(CACHE ${APP_PREFIX}_<param_name> PROPERTY STRINGS \"value1;value2\")\n\n#\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "stack/apps/lorawan_node/CMakeLists.txt" : {
      "ObjectId" : "6bfdd4de7cb3bcb945148faf2f2fc95829ceacbc",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#See the explanation of APP_OPTION and APP_PARAM in cmake/app_macros.cmake \n\n#for details on how to add application-specific CMake GUI entries\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#By convention, application parameters should be prefixed with '${APP_PREFIX}'\n\n#Some examples:\n\n#APP_OPTION(${APP_PREFIX}_<option_name> \"Option explanation\" <default_value>)\n\n#APP_PARAM(${APP_PREFIX}_<param_name> \"<default_value>\" <type> \"Parameter explanation\")\n\n#\n\n#Cache properties can be set on application parameters just like on regular cache parameters\n\n#SET_PROPERTY(CACHE ${APP_PREFIX}_<param_name> PROPERTY STRINGS \"value1;value2\")\n\n#\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "stack/apps/modem/CMakeLists.txt" : {
      "ObjectId" : "34d68901b4a9c44918e67d5c777a641e0767bf86",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#See the explanation of APP_OPTION and APP_PARAM in cmake/app_macros.cmake \n\n#for details on how to add application-specific CMake GUI entries\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#By convention, application parameters should be prefixed with '${APP_PREFIX}'\n\n#Some examples:\n\n#APP_OPTION(${APP_PREFIX}_<option_name> \"Option explanation\" <default_value>)\n\n#APP_PARAM(${APP_PREFIX}_<param_name> \"<default_value>\" <type> \"Parameter explanation\")\n\n#\n\n#Cache properties can be set on application parameters just like on regular cache parameters\n\n#SET_PROPERTY(CACHE ${APP_PREFIX}_<param_name> PROPERTY STRINGS \"value1;value2\")\n\n#\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "stack/apps/modemclient/CMakeLists.txt" : {
      "ObjectId" : "b4e9e13be3c5045011d04ca03e7e1ffdc2a91d56",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#See the explanation of APP_OPTION and APP_PARAM in cmake/app_macros.cmake \n\n#for details on how to add application-specific CMake GUI entries\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#By convention, application parameters should be prefixed with '${APP_PREFIX}'\n\n#Some examples:\n\n#APP_OPTION(${APP_PREFIX}_<option_name> \"Option explanation\" <default_value>)\n\n#APP_PARAM(${APP_PREFIX}_<param_name> \"<default_value>\" <type> \"Parameter explanation\")\n\n#\n\n#Cache properties can be set on application parameters just like on regular cache parameters\n\n#SET_PROPERTY(CACHE ${APP_PREFIX}_<param_name> PROPERTY STRINGS \"value1;value2\")\n\n#\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "stack/apps/noise_logger/CMakeLists.txt" : {
      "ObjectId" : "44acab2bcad49388f117d7b5d5b2b948601fb848",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#See the explanation of APP_OPTION and APP_PARAM in cmake/app_macros.cmake\n\n#for details on how to add application-specific CMake GUI entries\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#By convention, application parameters should be prefixed with '${APP_PREFIX}'\n\n#Some examples:\n\n#APP_OPTION(${APP_PREFIX}_<option_name> \"Option explanation\" <default_value>)\n\n#APP_PARAM(${APP_PREFIX}_<param_name> \"<default_value>\" <type> \"Parameter explanation\")\n\n#\n\n#Cache properties can be set on application parameters just like on regular cache parameters\n\n#SET_PROPERTY(CACHE ${APP_PREFIX}_<param_name> PROPERTY STRINGS \"value1;value2\")\n\n#\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "stack/apps/per_test/CMakeLists.txt" : {
      "ObjectId" : "5ebf95b0b6314332c51231b2950f951641d70e6f",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#See the explanation of APP_OPTION and APP_PARAM in cmake/app_macros.cmake\n\n#for details on how to add application-specific CMake GUI entries\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#By convention, application parameters should be prefixed with '${APP_PREFIX}'\n\n#Some examples:\n\n#APP_OPTION(${APP_PREFIX}_<option_name> \"Option explanation\" <default_value>)\n\n#APP_PARAM(${APP_PREFIX}_<param_name> \"<default_value>\" <type> \"Parameter explanation\")\n\n#\n\n#Cache properties can be set on application parameters just like on regular cache parameters\n\n#SET_PROPERTY(CACHE ${APP_PREFIX}_<param_name> PROPERTY STRINGS \"value1;value2\")\n\n#\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "stack/apps/phy_test/CMakeLists.txt" : {
      "ObjectId" : "d286dbedde5e2fa78ba1ee883a1fea9adec4284d",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#See the explanation of APP_OPTION and APP_PARAM in cmake/app_macros.cmake\n\n#for details on how to add application-specific CMake GUI entries\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#By convention, application parameters should be prefixed with '${APP_PREFIX}'\n\n#Some examples:\n\n#APP_OPTION(${APP_PREFIX}_<option_name> \"Option explanation\" <default_value>)\n\n#APP_PARAM(${APP_PREFIX}_<param_name> \"<default_value>\" <type> \"Parameter explanation\")\n\n#\n\n#Cache properties can be set on application parameters just like on regular cache parameters\n\n#SET_PROPERTY(CACHE ${APP_PREFIX}_<param_name> PROPERTY STRINGS \"value1;value2\")\n\n#\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "stack/apps/sensor_action/CMakeLists.txt" : {
      "ObjectId" : "308188700c52f575a62fed356615e1e47c8e2bde",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#See the explanation of APP_OPTION and APP_PARAM in cmake/app_macros.cmake \n\n#for details on how to add application-specific CMake GUI entries\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#By convention, application parameters should be prefixed with '${APP_PREFIX}'\n\n#Some examples:\n\n#APP_OPTION(${APP_PREFIX}_<option_name> \"Option explanation\" <default_value>)\n\n#APP_PARAM(${APP_PREFIX}_<param_name> \"<default_value>\" <type> \"Parameter explanation\")\n\n#\n\n#Cache properties can be set on application parameters just like on regular cache parameters\n\n#SET_PROPERTY(CACHE ${APP_PREFIX}_<param_name> PROPERTY STRINGS \"value1;value2\")\n\n#\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "stack/apps/sensor_multimodal/CMakeLists.txt" : {
      "ObjectId" : "e7fa61ea56ca01c8a2862062d0e8aec56f239366",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \r\n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\r\n\n# lowpower wireless sensor communication\r\n\n#\r\n\n# Copyright 2015 University of Antwerp\r\n\n#\r\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\r\n\n# you may not use this file except in compliance with the License.\r\n\n# You may obtain a copy of the License at\r\n\n#\r\n\n#   http://www.apache.org/licenses/LICENSE-2.0\r\n\n#\r\n\n# Unless required by applicable law or agreed to in writing, software\r\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\r\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n\n# See the License for the specific language governing permissions and\r\n\n# limitations under the License.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#See the explanation of APP_OPTION and APP_PARAM in cmake/app_macros.cmake \r\n\n#for details on how to add application-specific CMake GUI entries\r\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#By convention, application parameters should be prefixed with '${APP_PREFIX}'\r\n\n#Some examples:\r\n\n#APP_OPTION(${APP_PREFIX}_<option_name> \"Option explanation\" <default_value>)\r\n\n#APP_PARAM(${APP_PREFIX}_<param_name> \"<default_value>\" <type> \"Parameter explanation\")\r\n\n#\r\n\n#Cache properties can be set on application parameters just like on regular cache parameters\r\n\n#SET_PROPERTY(CACHE ${APP_PREFIX}_<param_name> PROPERTY STRINGS \"value1;value2\")\r\n\n#\r\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "stack/apps/sensor_pull/CMakeLists.txt" : {
      "ObjectId" : "47a729533059771d138358e3be8740c87e233760",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#See the explanation of APP_OPTION and APP_PARAM in cmake/app_macros.cmake \n\n#for details on how to add application-specific CMake GUI entries\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#By convention, application parameters should be prefixed with '${APP_PREFIX}'\n\n#Some examples:\n\n#APP_OPTION(${APP_PREFIX}_<option_name> \"Option explanation\" <default_value>)\n\n#APP_PARAM(${APP_PREFIX}_<param_name> \"<default_value>\" <type> \"Parameter explanation\")\n\n#\n\n#Cache properties can be set on application parameters just like on regular cache parameters\n\n#SET_PROPERTY(CACHE ${APP_PREFIX}_<param_name> PROPERTY STRINGS \"value1;value2\")\n\n#\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "stack/apps/sensor_push/CMakeLists.txt" : {
      "ObjectId" : "3a89d336a31244d21d84b430012bddd2f10a554d",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#See the explanation of APP_OPTION and APP_PARAM in cmake/app_macros.cmake \n\n#for details on how to add application-specific CMake GUI entries\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#By convention, application parameters should be prefixed with '${APP_PREFIX}'\n\n#Some examples:\n\n#APP_OPTION(${APP_PREFIX}_<option_name> \"Option explanation\" <default_value>)\n\n#APP_PARAM(${APP_PREFIX}_<param_name> \"<default_value>\" <type> \"Parameter explanation\")\n\n#\n\n#Cache properties can be set on application parameters just like on regular cache parameters\n\n#SET_PROPERTY(CACHE ${APP_PREFIX}_<param_name> PROPERTY STRINGS \"value1;value2\")\n\n#\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "stack/apps/simple_leds/CMakeLists.txt" : {
      "ObjectId" : "262718b197073e6938d4743aa51a082a0f338876",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#See the explanation of APP_OPTION and APP_PARAM in cmake/app_macros.cmake \n\n#for details on how to add application-specific CMake GUI entries\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#By convention, application parameters should be prefixed with '${APP_PREFIX}'\n\n#Some examples:\n\n#APP_OPTION(${APP_PREFIX}_<option_name> \"Option explanation\" <default_value>)\n\n#APP_PARAM(${APP_PREFIX}_<param_name> \"<default_value>\" <type> \"Parameter explanation\")\n\n#\n\n#Cache properties can be set on application parameters just like on regular cache parameters\n\n#SET_PROPERTY(CACHE ${APP_PREFIX}_<param_name> PROPERTY STRINGS \"value1;value2\")\n\n#\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "stack/apps/sniffer/CMakeLists.txt" : {
      "ObjectId" : "010f53ff7c885885c7d0384cfc039cfcf979d72a",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#See the explanation of APP_OPTION and APP_PARAM in cmake/app_macros.cmake \n\n#for details on how to add application-specific CMake GUI entries\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#By convention, application parameters should be prefixed with '${APP_PREFIX}'\n\n#Some examples:\n\n#APP_OPTION(${APP_PREFIX}_<option_name> \"Option explanation\" <default_value>)\n\n#APP_PARAM(${APP_PREFIX}_<param_name> \"<default_value>\" <type> \"Parameter explanation\")\n\n#\n\n#Cache properties can be set on application parameters just like on regular cache parameters\n\n#SET_PROPERTY(CACHE ${APP_PREFIX}_<param_name> PROPERTY STRINGS \"value1;value2\")\n\n#\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "stack/cmake/GetGitRevisionDescription.cmake" : {
      "ObjectId" : "8fcd26a7c7f7fdd83c2d3a73c18ae9f201f56c36",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Returns a version string from Git\n\n#\n\n# These functions force a re-configure on each git commit so that you can\n\n# trust the values of the variables in your build system.\n\n#\n\n#  get_git_head_revision(<refspecvar> <hashvar> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the refspec and sha hash of the current head revision\n\n#\n\n#  git_describe(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe on the source tree, and adjusting\n\n# the output so that it tests false if an error occurs.\n\n#\n\n#  git_get_exact_tag(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe --exact-match on the source tree,\n\n# and adjusting the output so that it tests false if there was no exact\n\n# matching tag.\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We must run the following at \"include\" time, not at function call time,\n\n# to find the path to this module rather than the path to a calling list file\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# .git dir not found, search parent directories\n",
        "Line" : 45,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "# We have reached the root directory, we are not in git\n",
        "Line" : 49,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# check if this is a submodule\n",
        "Line" : 56,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# TODO sanitize\n\n#if((${ARGN}\" MATCHES \"&&\") OR\n\n#\t(ARGN MATCHES \"||\") OR\n\n#\t(ARGN MATCHES \"\\\\;\"))\n\n#\tmessage(\"Please report the following error to the project!\")\n\n#\tmessage(FATAL_ERROR \"Looks like someone's doing something nefarious with git_describe! Passed arguments ${ARGN}\")\n\n#endif()\n",
        "Line" : 97,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "#message(STATUS \"Arguments to execute_process: ${ARGN}\")\n",
        "Line" : 105,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 7
    },
    "stack/cmake/app_macros.cmake" : {
      "ObjectId" : "e9017ab8a84d341c1ff113532789cd08e2b1bb32",
      "LastModified" : "2019-02-28T10:14:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#This file contains helper MACRO's that are only available to individual applications\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Declare a parameter for the application. Application parameters are \n\n# automaticall shown/hidden in the CMake GUI depending on whether or \n\n# not the application is enabled.\n\n# \n\n# Application parameters are stored in the cache, just like regular parameters.\n\n# This means that the properties of the parameter can be set in the normal manner\n\n# (by using the SET_PROPERTY command)\n\n#\n\n# Usage:\n\n#    APP_PARAM(<var> <default_value> <type> <doc_string>)\n\n#\t<var> \t\tis the name of the variable to set. By convention \n\n#\t\t\tall application parameters should be prefixed by the \n\n#\t\t\t${APP_PREFIX} variable (see examples below).\n\n#\n\n#       <default_value> the default value of the parameter.\n\n#\n\n#\t<type>\t\tthe type of the parameter. Any valid CMake cache <type>\n\n#\t\t\texcept INTERNAL. At the time of writing these are the valid\n\n#\t\t\ttypes:\n\n#\t\t\t\tFILEPATH = File chooser dialog.\n\n#\t\t\t\tPATH     = Directory chooser dialog.\n\n#\t\t\t\tSTRING   = Arbitrary string.\n\n#\t\t\t\tBOOL     = Boolean ON/OFF checkbox.\n\n#\t\t\t\tSee http://www.cmake.org/cmake/help/v3.0/command/set.html\n\n#\n\n#\t<doc_string>\tthe documentation string explaining the parameter\n\n#\n\n# Examples:\n\n#\tAPP_PARAM(${APP_PREFIX}_STR \"Default_Str\" STRING \"Parameter Explanation\")\n\n#\t\t-Adds a STRING parameter '${APP_PREFIX}_STR' with default \n\n#\t\t value 'Default_Str' and explanation 'Parameter Explanation'\n\n#\t\t The value of the parameter can be queried using:\n\n#\t\t\t${${APP_PREFIX}_STR}\n\n#\t\n\n#\tAPP_PARAM(${APP_PREFIX}_LIST \"item1\" STRING \"A List of items\")\n\n#\tSET_PROPERTY(CACHE ${APP_PREFIX}_LIST PROPERTY STRINGS \"item1;item2;item3\")\n\n#\t\t-Adds a parameter '${APP_PREFIX}_LIST', with possible values\n\n#\t\t 'item1', 'item2' and 'item3'. Please note that this is done in\n\n#\t\t exactly the same manner as for regular 'CACHE' parameters\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Set entry in cache if the application is being loaded\n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Declare an option for the used application. Like application parameters,\n\n# application options are automatically shown/hidden in the CMake GUI \n\n# depending on whether or not the application is enabled.\n\n#\n\n# As with application parameters, options are stored in the cache (just like\n\n# regular CMake options)\n\n#\n\n# Usage:\n\n#    APP_OPTION(<option> <doc_string> <default_value>)\n\n#\t<option>\tis the name of the option to set. By convention \n\n#\t\t\tall application options should be prefixed by the \n\n#\t\t\t${APP_PREFIX} variable.\n\n#\n\n#\t<doc_string>\tthe documentation string explaining the option\n\n#\n\n#       <default_value> the default value of the parameter.\n\n#\n\n#    In accordance with CMake's implementation of 'ADD_OPTION',\n\n#    calling: \n\n#\tAPP_OPTION(<option> <doc_string> <default_value>)\n\n#    is equivalent to calling:\n\n#\tAPP_PARAM( <option> <default_value> BOOL <doc_string>\n\n#\n\n# Examples:\n\n#\tAPP_OPTION(${APP_PREFIX}_OPT \"OPT Explanation\" FALSE)\n\n#\t\t-Adds a application option '{APP_PREFIX}_OPT' with \n\n#\t\t default value FALSE and explanation 'OPT Explanation'.\n\n#\t\t The value of the option can be queried using:\n\n#\t\t    ${${APP_PREFIX}_OPT}\n\n#\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# define git revision so it can be used in the application\n",
        "Line" : 107,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#INSERT_LINKER_FLAGS(BEFORE OBJECTS INSERT \"-T${LINKER_SCRIPT}\")\n\n#INSERT_LINKER_FLAGS(AFTER OBJECTS INSERT \"-Xlinker  -Map=.map\")\n",
        "Line" : 117,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#    TODO not used for now\n\n#    IF(${PLATFORM_BUILD_BOOTLOADABLE_VERSION})\n\n#        SET(BOOTLOADABLE_ELF ${__APP_BUILD_NAME}_bootloadable.elf)\n\n#        SET(BOOTLOADABLE_BIN ${__APP_BUILD_NAME}_bootloadable.bin)\n\n#        ADD_EXECUTABLE(${BOOTLOADABLE_ELF} ${__APP_BUILD_SOURCES})\n\n#        TARGET_LINK_LIBRARIES(${BOOTLOADABLE_ELF} -Wl,--whole-archive ${__APP_BUILD_LIBS}  -Wl,--no-whole-archive)\n\n#        TARGET_COMPILE_DEFINITIONS(${BOOTLOADABLE_ELF} PUBLIC ${__global_compile_definitions})\n\n#        SET_TARGET_PROPERTIES(${BOOTLOADABLE_ELF} PROPERTIES LINK_FLAGS \"-T${LINKER_SCRIPT_BOOTLOADABLE} ${LINKER_FLAGS}\")\n\n#        ADD_CUSTOM_COMMAND(TARGET ${BOOTLOADABLE_ELF} POST_BUILD COMMAND ${CMAKE_OBJCOPY} -O binary ${BOOTLOADABLE_ELF} ${BOOTLOADABLE_BIN})\n\n#    ENDIF()\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# extract hex files\n",
        "Line" : 145,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# when the system files are not stored a separate linker section but in RAM (default when not defined in platform) make sure these sections are not removed from the app hex\n",
        "Line" : 147,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# generate target for flashing application using jlink\n\n# TODO optional depending on platform?\n",
        "Line" : 165,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 11
    },
    "stack/cmake/framework_macros.cmake" : {
      "ObjectId" : "e652b00aa9d0fe058b5e868e1314e74a8bb4d16c",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#This file contains helper MACRO's that are only available to code from the framework itself\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Override a specific component of the framework with alternative sources. \n\n# This MACRO is mainly intended to be used by individual platforms but can also be used by specific chip \n\n# implementations (useful for MCU's).\n\n#\n\n#\n\n# Usage:\n\n#    OVERRIDE_COMPONENT(component <source_file> <source_file> ...)\n\n#\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add one or more CMAKE variables as '#define' statements to the \"framework_defs.h\"\n\n# generated by the FRAMEWORK_BUILD_SETTINGS_FILE MACRO. This MACRO adopts the same\n\n# variable types used by the GEN_SETTINGS_HEADER MACRO. See the explanation of that macro\n\n# in utils.cmake for more explanation.\n\n#\n\n# Usage:\n\n#    FRAMEWORK_HEADER_DEFINE([STRING <string_var> <string_var> ...] [ID <id_var> <id_var> ...] [BOOL <bool_var> <bool_var> ...] [NUMBER <number_var> <number_var> ...])\n\n#\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Construct a \"framework_defs.h\" header file in the binary 'framework' directory containing \n\n# The various (cmake) settings for the framework. By default an 'empty' header file is generated.\n\n# Settings can be added to this file by calling the FRAMEWORK_HEADER_DEFINES macro.\n\n#\n\n# Usage:\n\n#    FRAMEWORK_BUILD_SETTINGS_FILE()\n\n#\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "stack/cmake/hal_macros.cmake" : {
      "ObjectId" : "beeba8382385ecb732637ae93aff740feb0e9396",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add one or more CMAKE variables as '#define' statements to the \"hal_defs.h\"\n\n# generated by the HAL_BUILD_SETTINGS_FILE MACRO. This MACRO adopts the same\n\n# variable types used by the GEN_SETTINGS_HEADER MACRO. See the explanation of that macro\n\n# in utils.cmake for more explanation.\n\n#\n\n# Usage:\n\n#    HAL_HEADER_DEFINE([STRING <string_var> <string_var> ...] [ID <id_var> <id_var> ...] [BOOL <bool_var> <bool_var> ...] [NUMBER <number_var> <number_var> ...])\n\n#\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Construct a \"hal_defs.h\" header file in the binary 'hal' directory containing \n\n# The various (cmake) settings for the framework. By default an 'empty' header file is generated.\n\n# Settings can be added to this file by calling the HAL_HEADER_DEFINES macro.\n\n#\n\n# Usage:\n\n#    HAL_BUILD_SETTINGS_FILE()\n\n#\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "stack/cmake/module_macros.cmake" : {
      "ObjectId" : "d20997c8074d87452ebb7c4996bccc87332d23b1",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#This file contains helper MACRO's that are only available to individual modules\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Declare a parameter for the module. Module parameters are \n\n# automaticall shown/hidden in the CMake GUI depending on whether or \n\n# not the module is enabled.\n\n# \n\n# Module parameters are stored in the cache, just like regular parameters.\n\n# This means that the properties of the parameter can be set in the normal manner\n\n# (by using the SET_PROPERTY command)\n\n#\n\n# Usage:\n\n#    MODULE_PARAM(<var> <default_value> <type> <doc_string>)\n\n#\t<var> \t\tis the name of the variable to set. By convention \n\n#\t\t\tall module parameters should be prefixed by the \n\n#\t\t\t${MODULE_PREFIX} variable (see examples below).\n\n#\n\n#       <default_value> the default value of the parameter.\n\n#\n\n#\t<type>\t\tthe type of the parameter. Any valid CMake cache <type>\n\n#\t\t\texcept INTERNAL. At the time of writing these are the valid\n\n#\t\t\ttypes:\n\n#\t\t\t\tFILEPATH = File chooser dialog.\n\n#\t\t\t\tPATH     = Directory chooser dialog.\n\n#\t\t\t\tSTRING   = Arbitrary string.\n\n#\t\t\t\tBOOL     = Boolean ON/OFF checkbox.\n\n#\t\t\t\tSee http://www.cmake.org/cmake/help/v3.0/command/set.html\n\n#\n\n#\t<doc_string>\tthe documentation string explaining the parameter\n\n#\n\n# Examples:\n\n#\tMODULE_PARAM(${MODULE_PREFIX}_STR \"Default_Str\" STRING \"Parameter Explanation\")\n\n#\t\t-Adds a STRING parameter '${MODULE_PREFIX}_STR' with default \n\n#\t\t value 'Default_Str' and explanation 'Parameter Explanation'\n\n#\t\t The value of the parameter can be queried using:\n\n#\t\t\t${${MODULE_PREFIX}_STR}\n\n#\t\n\n#\tMODULE_PARAM(${MODULE_PREFIX}_LIST \"item1\" STRING \"A List of items\")\n\n#\tSET_PROPERTY(CACHE ${MODULE_PREFIX}_LIST PROPERTY STRINGS \"item1;item2;item3\")\n\n#\t\t-Adds a parameter '${MODULE_PREFIX}_LIST', with possible values\n\n#\t\t 'item1', 'item2' and 'item3'. Please note that this is done in\n\n#\t\t exactly the same manner as for regular 'CACHE' parameters\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Set entry in cache if the module is being loaded\n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Declare an option for the used module. Like module parameters,\n\n# module options are automatically shown/hidden in the CMake GUI \n\n# depending on whether or not the module is enabled.\n\n#\n\n# As with module parameters, options are stored in the cache (just like\n\n# regular CMake options)\n\n#\n\n# Usage:\n\n#    MODULE_OPTION(<option> <doc_string> <default_value>)\n\n#\t<option>\tis the name of the option to set. By convention \n\n#\t\t\tall module options should be prefixed by the \n\n#\t\t\t${MODULE_PREFIX} variable.\n\n#\n\n#\t<doc_string>\tthe documentation string explaining the option\n\n#\n\n#       <default_value> the default value of the parameter.\n\n#\n\n#    In accordance with CMake's implementation of 'ADD_OPTION',\n\n#    calling: \n\n#\tMODULE_OPTION(<option> <doc_string> <default_value>)\n\n#    is equivalent to calling:\n\n#\tMODULE_PARAM( <option> <default_value> BOOL <doc_string>\n\n#\n\n# Examples:\n\n#\tMODULE_OPTION(${MODULE_PREFIX}_OPT \"OPT Explanation\" FALSE)\n\n#\t\t-Adds a module option '{MODULE_PREFIX}_OPT' with \n\n#\t\t default value FALSE and explanation 'OPT Explanation'.\n\n#\t\t The value of the option can be queried using:\n\n#\t\t    ${${MODULE_PREFIX}_OPT}\n\n#\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add one or more CMAKE variables as '#define' statements to the \"module_defs.h\"\n\n# generated by the MODULE_BUILD_SETTINGS_FILE MACRO. This MACRO adopts the same\n\n# variable types used by the GEN_SETTINGS_HEADER MACRO. See the explanation of that macro\n\n# in utils.cmake for more explanation.\n\n#\n\n# Usage:\n\n#    MODULE_HEADER_DEFINE([STRING <string_var> <string_var> ...] [ID <id_var> <id_var> ...] [BOOL <bool_var> <bool_var> ...] [NUMBER <number_var> <number_var> ...])\n\n#\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Construct a \"<MODULE_PREFIX>_defs.h\" header file in the binary 'module' directory containing\n\n# The various (cmake) settings for the module. By default an 'empty' header file is generated.\n\n# Settings can be added to this file by calling the MODULE_HEADER_DEFINES macro.\n\n#\n\n# Usage:\n\n#    MODULE_BUILD_SETTINGS_FILE()\n\n#\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add one or more CMAKE variables as '#define' statements to the \"modules_defs.h\"\n\n# generated by the MODULES_BUILD_SETTINGS_FILE MACRO. This MACRO adopts the same\n\n# variable types used by the GEN_SETTINGS_HEADER MACRO. See the explanation of that macro\n\n# in utils.cmake for more explanation.\n\n#\n\n# Usage:\n\n#    MODULES_BUILD_SETTINGS_FILE([STRING <string_var> <string_var> ...] [ID <id_var> <id_var> ...] [BOOL <bool_var> <bool_var> ...] [NUMBER <number_var> <number_var> ...])\n\n#\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Construct a \"modules_defs.h\" header file in the binary 'module' directory containing\n\n# the enabled modules. By default an 'empty' header file is generated.\n\n# Settings can be added to this file by calling the MODULES_HEADER_DEFINE macro.\n\n#\n\n# Usage:\n\n#    MODULES_BUILD_SETTINGS_FILE()\n\n#\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "stack/cmake/platform_EFM32GG_STK3700_macros.cmake" : {
      "ObjectId" : "162bdcdf247754bc1efc1df667d8fe102e25380c",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#This file contains additional MACRO's that are only available for the 'gecko' platform\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Always include 'platform_default.cmake' so non-overriden macro's default to the 'default' implementation\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Generate files needed to debug the application in Simplicity Studio from the files generated\n\n# for the specified <target>. \n\n#\n\n# Usage:\n\n#    GENERATE_SIMPLICITY_STUDIO_FILES(target)\n\n#\t<target>\tthe <target> used to generate the 'main' executable. \n\n#    \t\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "stack/cmake/platform_EFM32HG_STK3400_macros.cmake" : {
      "ObjectId" : "162bdcdf247754bc1efc1df667d8fe102e25380c",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#This file contains additional MACRO's that are only available for the 'gecko' platform\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Always include 'platform_default.cmake' so non-overriden macro's default to the 'default' implementation\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Generate files needed to debug the application in Simplicity Studio from the files generated\n\n# for the specified <target>. \n\n#\n\n# Usage:\n\n#    GENERATE_SIMPLICITY_STUDIO_FILES(target)\n\n#\t<target>\tthe <target> used to generate the 'main' executable. \n\n#    \t\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "stack/cmake/platform_EZR32WG_WSTK6221_macros.cmake" : {
      "ObjectId" : "162bdcdf247754bc1efc1df667d8fe102e25380c",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#This file contains additional MACRO's that are only available for the 'gecko' platform\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Always include 'platform_default.cmake' so non-overriden macro's default to the 'default' implementation\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Generate files needed to debug the application in Simplicity Studio from the files generated\n\n# for the specified <target>. \n\n#\n\n# Usage:\n\n#    GENERATE_SIMPLICITY_STUDIO_FILES(target)\n\n#\t<target>\tthe <target> used to generate the 'main' executable. \n\n#    \t\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "stack/cmake/platform_default_macros.cmake" : {
      "ObjectId" : "749abb9da6e149c288f003fef93f705f531834cd",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#This file contains 'default' implementation of MACRO's that may be overridden\n\n#By specific platforms\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "stack/cmake/platform_macros.cmake" : {
      "ObjectId" : "4b0500fa71f4068b246d2d934bb49b548db913b1",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#This file contains helper MACRO's that are only available to platforms and chips\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Declare a parameter for the used platform. Platform parameters are \n\n# automaticall shown/hidden in the CMake GUI depending on whether or \n\n# not the platform is enabled.\n\n# \n\n# Platform parameters are stored in the cache, just like regular parameters.\n\n# This means that the properties of the parameter can be set in the normal manner\n\n# (by using the SET_PROPERTY command)\n\n#\n\n# Usage:\n\n#    PLATFORM_PARAM(<var> <default_value> <type> <doc_string>)\n\n#\t<var> \t\tis the name of the variable to set. By convention \n\n#\t\t\tall platform parameters should be prefixed by the \n\n#\t\t\t${PLATFORM_PREFIX} variable (see examples below).\n\n#\n\n#       <default_value> the default value of the parameter.\n\n#\n\n#\t<type>\t\tthe type of the parameter. Any valid CMake cache <type>\n\n#\t\t\texcept INTERNAL. At the time of writing these are the valid\n\n#\t\t\ttypes:\n\n#\t\t\t\tFILEPATH = File chooser dialog.\n\n#\t\t\t\tPATH     = Directory chooser dialog.\n\n#\t\t\t\tSTRING   = Arbitrary string.\n\n#\t\t\t\tBOOL     = Boolean ON/OFF checkbox.\n\n#\t\t\t\tSee http://www.cmake.org/cmake/help/v3.0/command/set.html\n\n#\n\n#\t<doc_string>\tthe documentation string explaining the parameter\n\n#\n\n# Examples:\n\n#\tPLATFORM_PARAM(${PLATFORM_PREFIX}_STR \"Default_Str\" STRING \"Parameter Explanation\")\n\n#\t\t-Adds a STRING parameter '${PLATFORM_PREFIX}_STR' with default \n\n#\t\t value 'Default_Str' and explanation 'Parameter Explanation'\n\n#\t\t The value of the parameter can be queried using:\n\n#\t\t\t${${PLATFORM_PREFIX}_STR}\n\n#\t\n\n#\tPLATFORM_PARAM(${PLATFORM_PREFIX}_LIST \"item1\" STRING \"A List of items\")\n\n#\tSET_PROPERTY(CACHE ${PLATFORM_PREFIX}_LIST PROPERTY STRINGS \"item1;item2;item3\")\n\n#\t\t-Adds a parameter '${PLATFORM_PREFIX}_LIST', with possible values\n\n#\t\t 'item1', 'item2' and 'item3'. Please note that this is done in\n\n#\t\t exactly the same manner as for regular 'CACHE' parameters\n\n#\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Set entry in cache if this the platform us being used is being built\n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Declare an options for the used platform. Like platform parameters,\n\n# platform options are automatically shown/hidden in the CMake GUI \n\n# depending on whether or not the platform is enabled.\n\n#\n\n# As with platform parameters, options are stored in the cache (just like\n\n# regular CMake options)\n\n#\n\n# Usage:\n\n#    PLATFORM_OPTION(<option> <doc_string> <default_value>)\n\n#\t<option>\tis the name of the option to set. By convention \n\n#\t\t\tall platform options should be prefixed by the \n\n#\t\t\t${PLATFORM_PREFIX} variable.\n\n#\n\n#\t<doc_string>\tthe documentation string explaining the option\n\n#\n\n#       <default_value> the default value of the parameter.\n\n#\n\n#    In accordance with CMake's implementation of 'ADD_OPTION',\n\n#    calling: \n\n#\tPLATFORM_OPTION(<option> <doc_string> <default_value>)\n\n#    is equivalent to calling:\n\n#\tPLATFORM_PARAM( <option> <default_value> BOOL <doc_string>\n\n#\n\n# Examples:\n\n#\tPLATFORM_OPTION(${PLATFORM_PREFIX}_OPT \"OPT Explanation\" FALSE)\n\n#\t\t-Adds a platform option '{PLATFORM_PREFIX}_OPT' with \n\n#\t\t default value FALSE and explanation 'OPT Explanation'.\n\n#\t\t The value of the option can be queried using:\n\n#\t\t    ${${PLATFORM_PREFIX}_OPT}\n\n#\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Include drivers for a chip <chip> into the current platform. \n\n# If CHIP_EXTRA_CHIPS_DIR is set the driver implementation will be searched in \n\n# the specified path first. If not found the default path 'framework/hal/chips' \n\n# will be searched. Each chip is in a separate subdirectory which must contain a 'CMakeLists.txt' file that defines \n\n# an object library with name '${CHIP_LIBRARY_NAME}'.\n\n##\n\n# Usage:\n\n#    ADD_CHIP(<chip>)\n\n#\t<chip>\t\tThe chip directory to include\n\n#\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Export directories to be included by the platform target. This MACRO is intended to be used \n\n# in the CMakeLists.txt file of individual chips and allows each indiviual chip to \n\n# export interfaces to the platform code (but NOT the entire source tree). \n\n#\n\n# This is, for instance, usefull if platform specific code needs access to 'private' \n\n# chip-specific headers.\n\n#\n\n# Usage:\n\n#    EXPORT_PLATFORM_INCLUDE_DIRECTORIES(<dir> <dir> ...)\n\n#\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add one or more CMAKE variables as '#define' statements to the \"platform_defs.h\"\n\n# generated by the PLATFORM_BUILD_SETTINGS_FILE MACRO. This MACRO adopts the same\n\n# variable types used by the GEN_SETTINGS_HEADER MACRO. See the explanation of that macro\n\n# in utils.cmake for more explanation.\n\n#\n\n# Usage:\n\n#    PLATFORM_HEADER_DEFINE([STRING <string_var> <string_var> ...] [ID <id_var> <id_var> ...] [BOOL <bool_var> <bool_var> ...] [NUMBER <number_var> <number_var> ...])\n\n#\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Construct a \"platform_defs.h\" header file in the binary 'platform' directory containing \n\n# The various settings for the platform. By default the following settings are included:\n\n#\n\n# -The included CHIPS (a #define USE_<chip> is added for each chip included with ADD_CHIP)\n\n# -PLATFORM  (a #define PLATFORM \"<platform_name>\" )\n\n# -PLATFORM_PREFIX (a define PLATFORM_<platform_name>)\n\n#\n\n# Additional settings can be added by calling the PLATFORM_HEADER_DEFINES macro\n\n#\n\n# Usage:\n\n#    PLATFORM_BUILD_SETTINGS_FILE()\n\n#\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "stack/cmake/toolchains/aps-gcc.cmake" : {
      "ObjectId" : "a9329e435f95dfa0f016dd850724223b93b5a4fe",
      "LastModified" : "2019-03-21T08:40:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#######################################\n\n# Toolchain setup aps-gcc\n\n#######################################\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# without these cmake tries to compile/link a test and fails on _exit\n\n# this _was_ suppressed by the now deprecated FORCE versions\n",
        "Line" : 29,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# the _force_ macro's are deprecated as of 3.6\n",
        "Line" : 34,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# where is the target environment \n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# search for programs in the build host directories\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# for libraries and headers in the target directories\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#SET(APS_SUPPORT_FILES \"${TOOLCHAIN_DIR}/aps/include\")\n\n#SET(APS_SUPPORT_FILES \"${TOOLCHAIN_DIR}/aps/lib\")\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "stack/cmake/toolchains/gcc-arm-embedded.cmake" : {
      "ObjectId" : "1d19951740ca49e39b941952df55ff5f9136babd",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#######################################\n\n# Toolchain setup gcc-arm-embedded\n\n#######################################\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# without these cmake tries to compile/link a test and fails on _exit\n\n# this _was_ suppressed by the now deprecated FORCE versions\n",
        "Line" : 29,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# the _force_ macro's are deprecated as of 3.6\n",
        "Line" : 34,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# set compiler flags to optimize for code size\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# where is the target environment \n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# search for programs in the build host directories\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# for libraries and headers in the target directories\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "stack/cmake/toolchains/msp430-gcc.cmake" : {
      "ObjectId" : "43643de2ff73d8ac881347033f0658e3a859e4a9",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#######################################\n\n# Toolchain setup msp430-gcc\n\n#######################################\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# where is the target environment \n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# search for programs in the build host directories\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# for libraries and headers in the target directories\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "stack/cmake/utils.cmake" : {
      "ObjectId" : "b8454e4fef847382b2c9963998cdd1e7bb122c46",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# List all directories in the provided directory.\n\n# By default, only the directories that are immediate \n\n# subdirs of <directory> are returned. If RECURSE is \n\n# specified, all subdirectories are recursively traversed.\n\n# Usage:\n\n#    LIST_SUBDIRS( <result_variable> <directory> [RECURSE]?)\n\n# Based on:\n\n#    http://stackoverflow.com/questions/7787823/cmake-how-to-get-the-name-of-all-subdirectories-of-a-directory\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# List all files in the provided directory.\n\n# By default, only the files that are in <directory>\n\n# are returned. If RECURSE is specified, all subdirectories \n\n# are recursively traversed.\n\n# Usage:\n\n#    LIST_FILES( <result_variable> <directory> [RECURSE]?)\n\n# Based on:\n\n#    http://stackoverflow.com/questions/7787823/cmake-how-to-get-the-name-of-all-subdirectories-of-a-directory\n\n#\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set 'CACHE' variable if specific conditions are met\n\n# Usage:\n\n#    SETCACHE_IF( <variable> <default_value> <type> <documentation_string> <condition>)\n\n# \n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#var NOT defined yet\n",
        "Line" : 104,
        "CharPositionInLine" : 31
      },
      "5" : {
        "Text" : "#var already defined (from an earlier set -> force it otherwise we can't convert the internal type to the actual type\n",
        "Line" : 106,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "#var NOT yet defined yet, dump the default into the cache\n",
        "Line" : 110,
        "CharPositionInLine" : 31
      },
      "7" : {
        "Text" : "#var already defined but needs to be hidden -> use the internal type\n",
        "Line" : 112,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# Set Option if specific conditions are met\n\n# Usage:\n\n#    SETOPTION_IF( <option> <documentation_string> <default> <condition>)\n\n# \n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Hide a list of parameters from the 'cmake gui' options list. This command is intended to be used ONLY for\n\n# Parameters that have been defined using 'SETCACHE_IF' or 'SETOPTION_IF'\n\n# Usage:\n\n#    HIDE_PARAMETERS(<variable> <list_of_parameters>)\n\n# \n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Store the current toolchain in <var>. The toolchain can ONLY be set by supplying -DCMAKE_TOOLCHAIN_FILE to \n\n# The cmake or cmake gui tool. \n\n# If ${CMAKE_TOOLCHAIN_FILE} is not defined (the default toolchain is used), <var> is set to the empty string\n\n# If ${CMAKE_TOOLCHAIN_FILE} is defined (an alternative toolchain is specified), <var> is set to the `basename` \n\n# of the toolchain file, without the file extension. \n\n# If, for instance the toolchain file is set to 'cmake/toolchains/gcc-arm-embedded.cmake' <var> will be set \n\n# to 'gcc-arm-embedded'\n\n# \n\n# Usage: GET_CURRENT_TOOLCHAIN(<var>)\n\n#    \n\n#\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Verify that the toolchain <tc> is used. If the specified toolchain is not used, an error is generated \n\n# explaining the issue to the user.\n\n# Usage:\n\n#    REQUIRE_TOOLCHAIN(<tc>)\n\n#\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Generate a 'variable prefix' based on a specified <prefix> and a <name> and store it in <var>\n\n# (This macro is used to generate, for instance the platform, chip, module and application prefixes)\n\n# Usage:\n\n#    GEN_PREFIX(<var> <prefix> <name>\n\n#\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Convert the specified paths to absolute paths and store the resulting paths in <var>. \n\n# Paths that are already absolute remain unaltered.\n\n# Usage:\n\n# RELATIVE_TO_ABSOLUTE(<var> <path1> [<path2> [<path3> ... ]])\n\n#\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Add one or more <value>'s to the ${CMAKE_SOURCE_DIR} directory property <property>. It should be noted that, by cmake \n\n# directory traversion rules, the new values are automatically propagated to any directories that are added \n\n# (using ADD_SUBDIRECTORY) AFTER the property has been set.  Directories that were included BEFORE the \n\n# property was set are NOT altered. This means that the added <value>'s are 'global' to the source \n\n# directories that must still be included. Already processed directories are not updated.\n\n#\n\n# Usage:\n\n#    SET_GLOBAL_DIRECTORY_PROPERTY( <property> <value> <value> ...)\n\n#\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Register directories which can be included globally, used for instance for the public API of the framework \n\n#\n\n# Usage:\n\n#    EXPORT_GLOBAL_INCLUDE_DIRECTORIES(<dir> <dir> ...)\n\n#\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Export compile definitions which are used globally, used for example in an out-of-tree platform or chip\n\n# to ensure the rest of the framework will be build with the correct definition\n\n#\n\n# Usage:\n\n#    EXPORT_GLOBAL_COMPILE_DEFINITIONS(<dir> <dir> ...)\n\n#\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Add one or more compile <definitions>'s for the current directory and all directories above it. \n\n# This MACRO tries to mimic the behavior of 'ADD_DEFINITIONS' as closely as possible. Arguments starting with \n\n# '-D' and specifying a valid C preprocessor definition, are added to the 'COMPILE_DEFINITIONS' property \n\n# (as proper compile definitions). All other arguments are added to the 'COMPILE_OPTIONS' directory property.\n\n# The specified definitions & flags become 'global' (according to the traversing rules specified by \n\n# 'SET_GLOBAL_DIRECTORY_PROPERTY').\n\n#\n\n# Usage:\n\n#    GLOBAL_ADD_DEFINITIONS( <definition> <definition> ...)\n\n#\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#it's a proper definition string\n",
        "Line" : 248,
        "CharPositionInLine" : 5
      },
      "19" : {
        "Text" : "# Add one or more compilation options for the current directory and all directories above it. The specified\n\n# flags become 'global' flags (according to the traversing rules specified by 'SET_GLOBAL_DIRECTORY_PROPERTY').\n\n#\n\n# Usage:\n\n#    GLOBAL_ADD_COMPILE_OPTIONS( <option> <option> ...)\n\n#\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Set a 'global' variable <var> to value <value>. \n\n# Global variables are stored in the cache to make them persistent across cmake files and \n\n# Automatically cleared when 'CLEAR_GLOBALS' is executed at the start of the next cmake run\n\n#\n\n# Usage:\n\n#    SET_GLOBAL(<var> <value>\n\n#\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Clear all 'global' variables. This macro must be executed as a first command at the start of the the uppermost\n\n# CMakeLists.txt file (before the project is defined)\n\n#\n\n# Usage:\n\n#    CLEAR_GLOBALS()\n\n#\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Add one or more linker flags at a specific point in the link command. This MACRO adds flags by operating on \n\n# the 'CMAKE_C_LINK_EXECUTABLE' and 'CMAKE_CXX_LINK_EXECUTABLE' variables. When using the 'Makefile' generator, \n\n# these variables are usually equal to:\n\n# '<CMAKE_C(XX)_COMPILER> <FLAGS> <CMAKE_C_LINK_FLAGS> <LINK_FLAGS> <OBJECTS>  -o <TARGET> <LINK_LIBRARIES>'.\n\n#\n\n# This MACRO can add linkerflags either righT BEFORE or AFTER a specific <tag_name>\n\n#\n\n# This MACRO requires CMAKE_C_LINK_EXECUTABLE and CMAKE_CXX_LINK_EXECUTABLE to be set and stores the modified \n\n# value as an internal cache varliable to make it persistent across file traversal.\n\n#\n\n# Usage:\n\n#    INSERT_LINKER_FLAGS(BEFORE <tag_name> INSERT <flag> <flag> ...)\n\n#\tInserts the specified <flag>'s BEFORE tag <tag_name> where <tag_name>\n\n#\tIs one of 'FLAGS', 'CMAKE_C_LINK_FLAGS', 'LINK_FLAGS', 'OBJECTS', 'TARGET' or 'LINK_LIBRARIES'\n\n#    INSERT_LINKER_FLAGS(AFTER  <tag_name> INSERT <flag> <flag> ...)\n\n#\tInserts the specified <flag>'s AFTER tag <tag_name> where <tag_name>\n\n#\tIs one of 'FLAGS', 'CMAKE_C_LINK_FLAGS', 'LINK_FLAGS', 'OBJECTS', 'TARGET' or 'LINK_LIBRARIES'\n\n#\n",
        "Line" : 299,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Add one or more flags to the C compiler command. This macro differs from GLOBAL_ADD_COMPILE_OPTIONS\n\n# in the sense that GLOBAL_ADD_COMPILE_OPTIONS operates on the 'COMPILE_OPTIONS' property which means that \n\n# flags are added at the END of all compile flags (after the '-I' flags). This MACRO however operates on the\n\n# 'CMAKE_C_FLAGS' variable which means that flags are added at the BEGIN of the compile command. \n\n# It should be noted that this MACRO turns CMAKE_C_FLAGS into a global variable\n\n#\n\n# Usage:\n\n#    INSERT_C_FLAGS([BEFORE <flag> <flag> ...] [AFTER <flag> <flag> ...])\n\n#\tflags specified after 'BEFORE' are added right before the original CMAKE_C_FLAGS\n\n#\tflags specified after 'AFTER' are added right after the original CMAKE_C_FLAGS\n\n#\n",
        "Line" : 368,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Add one or more flags to the C++ compiler command. This macro differs from GLOBAL_ADD_COMPILE_OPTIONS\n\n# in the sense that GLOBAL_ADD_COMPILE_OPTIONS operates on the 'COMPILE_OPTIONS' property which means that \n\n# flags are added at the END of all compile flags (after the '-I' flags). This MACRO however operates on the\n\n# 'CMAKE_CXX_FLAGS' variable which means that flags are added at the BEGIN of the compile command. \n\n# It should be noted that this MACRO turns CMAKE_CXX_FLAGS into a global variable\n\n#\n\n# Usage:\n\n#    INSERT_CXX_FLAGS([BEFORE <flag> <flag> ...] [AFTER <flag> <flag> ...])\n\n#\tflags specified after 'BEFORE' are added right before the original CMAKE_C_FLAGS\n\n#\tflags specified after 'AFTER' are added right after the original CMAKE_C_FLAGS\n\n#\n",
        "Line" : 388,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Get the toolchain required by the code in the specified <dir>.\n\n# This MACRO is intended to be used mainly for platforms but may be useful in future\n\n# to detect the toolchain required by other components as well.\n\n#\n\n# To detect the toolchain, MACRO looks for a 'toolchain' file in the <dir>. If it exists, this file\n\n# is parsed to read the toolchain required by the code in the <dir>. The toolchain needs to be\n\n# specified in the toolchain file according to the following format:\n\n# 'toolchain=<required_toolchain>'\n\n#\n\n# If a valid toolchain file is found, the specified toolchain is stored in variable <var>\n\n# if not, this variable is set to the empty string\n\n#\n\n#\n\n# Usage:\n\n#    GET_REQUIRED_TOOLCHAIN(<dir> <var>)\n\n#\n",
        "Line" : 409,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Generate a C header file based on the values of the supplied variable names.\n\n# For each supplied variable a separate '#define' is generated. The manner in \n\n# which this is done depends on the 'type' of the variable. This macro considers \n\n# The following possible types:\n\n#\n\n#\tSTRING: the value of the variable is written as a C string. That is, for \n\n#\t        each variable <var> the following statement is generated (with \n\n#\t\t${<var>} the value of the variable):\n\n#\t\t    #define <var> \"${<var>}\"\n\n#\n\n#\tID:\tthe value of the variable is written as a C identifier. That is, for \n\n#\t        each variable <var> the following statement is generated (with \n\n#\t\t${<var>} the value of the variable):\n\n#\t\t    #define <var> ${<var>}\n\n#\t    \tThe only difference between ID and STRING is that for identifiers\n\n#\t\tno quotes (\") are generated. This MACRO does not verify whether or\n\n#\t\tnot ${var} is a valid C identifier\n\n#\n\n#\tNUMBER:\tthe value of the variable is written as a number. Since both ID's\n\n#\t\tand numbers don't require quotes this is exactly the same as using ID.\n\n#\n\n#\tBOOL:   a define statement is generated depending on whether or not <var>\n\n#\t\tevaluates to TRUE acording to the cmake rules. If <var> evaluates\n\n#\t\tto TRUE the following statement is generated:\n\n#\t\t\t#define <var>\n\n#\t\totherwise, the #define statement is omitted.\n\n#\t\n\n# Usage:\n\n#    GEN_SETTINGS_HEADER([STRING <string_var> <string_var> ...] [ID <id_var> <id_var> ...] [BOOL <bool_var> <bool_var> ...] [NUMBER <number_var> <number_var> ...])\n\n#\n",
        "Line" : 442,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Filter a list of CACHE variables based on their type\n\n# \n\n# Usage:\n\n#    FILTER_CACHE_VARIABLES(<result> TYPES <type> <type> ... <VARS> <var> <var> ...)\n\n#\t<result> is the name of the variable in which to store the list of filtered variables\n\n#\t<type>   is one of the allowed CACHE types\n\n#\t<var>\t is a variable to check\n\n#\n",
        "Line" : 502,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Helper MACRO used by (PLATFORM/FRAMEWORK)_HEADER_DEFINE\n\n# You should normally not have to call this MACRO directly.\n\n#\n\n# This MACRO parses the arguments passed to it in more-or-less the same \n\n# fashion that GEN_SETTINGS_HEADER would and stores the parsed parameters\n\n# in global variables <prefix>_<type> where <prefix> is the supplied prefix and\n\n# <type> is the type of the variable (according to the parsing rules of \n\n# GEN_SETTINGS_HEADER.\n\n#\n\n# Usage:\n\n#    PARSE_HEADER_VARS(<prefix> [STRING <string_var> <string_var> ...] [ID <id_var> <id_var> ...] [BOOL <bool_var> <bool_var> ...] [NUMBER <number_var> <number_var> ...])\n\n#\n",
        "Line" : 526,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Check if a macro with name <name> is available for the current source directory.\n\n# If a macro with name <name> is available <var> is set to 'TRUE' otherwise\n\n# it is set to 'FALSE'.\n\n#\n\n# Usage:\n\n#    MACRO_AVAILABLE( <name> <var> )\n\n#\n",
        "Line" : 559,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 30
    },
    "stack/framework/CMakeLists.txt" : {
      "ObjectId" : "f48c7a3d0bdfac5f72a9679a8d915a0b3342a0d9",
      "LastModified" : "2019-03-21T08:40:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Export the interface of the framework to the rest of the code base\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#include the 'binary' platform directory so the 'framework_defs.h' file\n\n#generated by FRAMEWORK_BUILD_SETTINGS file can be found\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Include framework-specific helper MACRO's\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#add the hal\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#add the non-hal components\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#Add framework options && import them in the framework_defs.h file\n\n#This is NOT done seperately for each component since components can be overridden by a platform\n\n#And these settings should not be\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# when the current platform is using jlink we enable logging by default\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# when the current platform is using jlink we use RTT logging\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#Generate the 'framework_defs.h'\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Assemble the library\n\n# PLATFORM_CHIP_LIBS: Object libraries of individual chips\n\n# PLATFORM: Object library of the platform itself\n\n# FRAMEWORK_OVERRIDE_LIBS: non-hal object libraries that were overridden by the HAL\n\n# FRAMEWORK_LIBS: non-hal object libraries (not overridden)\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#Some wizardry to get ADD_LIBRARY to accept everything\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#AND finally add the library\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "stack/framework/components/CMakeLists.txt" : {
      "ObjectId" : "7779e5e6c9dd5263bd3bdcaa8207a182d9960159",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#list all subdirectories to get a list of components\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#add the individual libraries\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# strip full path keeping only component name\n",
        "Line" : 24,
        "CharPositionInLine" : 61
      },
      "4" : {
        "Text" : "#component is not in rmlist\n",
        "Line" : 27,
        "CharPositionInLine" : 20
      },
      "CommentCount" : 5
    },
    "stack/framework/components/aes/CMakeLists.txt" : {
      "ObjectId" : "3d7c751f3a729bd2a9ef9c41eecfb7496626153b",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2016 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Each Framework component must generate a single OBJECT library named\n\n#'${COMPONENT_LIBRARY_NAME}'\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "stack/framework/components/alp/CMakeLists.txt" : {
      "ObjectId" : "fec69e2e71764573a8ae26d6d77a62ebed53bdce",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2016 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Each Framework component must generate a single OBJECT library named\n\n#'${COMPONENT_LIBRARY_NAME}'\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "stack/framework/components/cli/CMakeLists.txt" : {
      "ObjectId" : "5bd69d8ddc68af4fc46f28b68ceb95276ecff85e",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Each Framework component must generate a single OBJECT library named\n\n#'${COMPONENT_LIBRARY_NAME}'\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "stack/framework/components/compress/CMakeLists.txt" : {
      "ObjectId" : "3c8a526fe2b848c1b62b7287dda0a30c09ebc379",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2016 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Each Framework component must generate a single OBJECT library named\n\n#'${COMPONENT_LIBRARY_NAME}'\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "stack/framework/components/console/CMakeLists.txt" : {
      "ObjectId" : "63b091d3334107a72c288cb470af124bd25e9aea",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Each Framework component must generate a single OBJECT library named\n\n#'${COMPONENT_LIBRARY_NAME}'\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "stack/framework/components/crc/CMakeLists.txt" : {
      "ObjectId" : "f9a87c9e9dcc6ce0bccf604a47fa70cc39cece90",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Each Framework component must generate a single OBJECT library named\n\n#'${COMPONENT_LIBRARY_NAME}'\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "stack/framework/components/fec/CMakeLists.txt" : {
      "ObjectId" : "b4d53c731f54a15ba0684ab6ffcb2f2f5dcbffc3",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Each Framework component must generate a single OBJECT library named\n\n#'${COMPONENT_LIBRARY_NAME}'\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "stack/framework/components/fifo/CMakeLists.txt" : {
      "ObjectId" : "f5c755ee17a153aa8d9449590abe9f0390cf6337",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Each Framework component must generate a single OBJECT library named\n\n#'${COMPONENT_LIBRARY_NAME}'\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "stack/framework/components/log/CMakeLists.txt" : {
      "ObjectId" : "43522429f596c433d91dee77a738019b331635b2",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Each Framework component must generate a single OBJECT library named\n\n#'${COMPONENT_LIBRARY_NAME}'\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "stack/framework/components/modem_interface/CMakeLists.txt" : {
      "ObjectId" : "55023a967991bb22d17362bede5d8c65f1498df3",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Each Framework component must generate a single OBJECT library named\n\n#'${COMPONENT_LIBRARY_NAME}'\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "stack/framework/components/node_globals/CMakeLists.txt" : {
      "ObjectId" : "7c1a6e8cafe06902c556efcb1baa72f2bea675a4",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Each Framework component must generate a single OBJECT library named\n\n#'${COMPONENT_LIBRARY_NAME}'\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "stack/framework/components/phy/CMakeLists.txt" : {
      "ObjectId" : "60b9f18fdb0dbfb0179d2bcd763aa0f1235999f1",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2016 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Each Framework component must generate a single OBJECT library named\n\n#'${COMPONENT_LIBRARY_NAME}'\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "stack/framework/components/pn9/CMakeLists.txt" : {
      "ObjectId" : "00e6cca7994552578870e0809bb6350ac8bef46f",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Each Framework component must generate a single OBJECT library named\n\n#'${COMPONENT_LIBRARY_NAME}'\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "stack/framework/components/random/CMakeLists.txt" : {
      "ObjectId" : "75efa9d7f3bca845f2a5ade7ff076f29fe712489",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Each Framework component must generate a single OBJECT library named\n\n#'${COMPONENT_LIBRARY_NAME}'\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "stack/framework/components/scheduler/CMakeLists.txt" : {
      "ObjectId" : "ac8d6912ff89a4d5dd9c9d22ab25fc804dc0b4e8",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Each Framework component must generate a single OBJECT library named\n\n#'${COMPONENT_LIBRARY_NAME}'\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "stack/framework/components/segger_rtt/CMakeLists.txt" : {
      "ObjectId" : "e28de4d355dfe2026eb4b0dc6eca8965842cb2c1",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Each Framework component must generate a single OBJECT library named\n\n#'${COMPONENT_LIBRARY_NAME}'\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "stack/framework/components/shell/CMakeLists.txt" : {
      "ObjectId" : "efab7fef71c24183759baec0eb9524d445dcf7a4",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Each Framework component must generate a single OBJECT library named\n\n#'${COMPONENT_LIBRARY_NAME}'\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "stack/framework/components/timer/CMakeLists.txt" : {
      "ObjectId" : "2a9b1b36d1d5abe101a18a6b18243f3d00467548",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Each Framework component must generate a single OBJECT library named\n\n#'${COMPONENT_LIBRARY_NAME}'\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "stack/framework/hal/CMakeLists.txt" : {
      "ObjectId" : "48f98f9a9123df2bb8038a42d9e65a1fe21ebdd4",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Make sure that the HAL interface is reacheable by the entire source tree\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Export the 'binary' platform directory so the 'hal_defs.h' file\n\n#generated by HAL_BUILD_SETTINGS file can be found\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#include hal-specific helper MACRO's\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# HAL parameters (might be forcefully overruled by chip, which is why HAL_HEADER_DEFINE() is only called after adding chips)\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#note: this does not include any chip code. \n\n#see note in 'chips' directory in the CMakeLists.txt in the 'chips' directory\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# add platforms\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#Generate the 'hal_defs.h'\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "stack/framework/hal/chips/CMakeLists.txt" : {
      "ObjectId" : "0991e7f42c53b672b4482b9460de71258e9230ac",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Note: This file is ONLY here to work around some strange issues when \n\n#Setting properties on directories. \n\n#Under NO circumstances should anything be done in this file, especially\n\n#not including chip directories.\n\n#The individual chip directories are included direcly by the individual platforms in:\n\n# framework/hal/platforms",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "stack/framework/hal/chips/cc1101/CMakeLists.txt" : {
      "ObjectId" : "b45f0d1edbba41e750c96e396cd11d545d79d0f1",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# interface specific logic\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO detect all CC430 based platform instead of only wizzimote\n",
        "Line" : 34,
        "CharPositionInLine" : 65
      },
      "3" : {
        "Text" : "#An object library with name '${CHIP_LIBRARY_NAME}' MUST be generated by the CMakeLists.txt file for every chip\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "stack/framework/hal/chips/cortus/CMakeLists.txt" : {
      "ObjectId" : "23077d6d1222ebd77c71bf7c64fc6d659f997b0d",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Add the linker script to use to the linker flags\n\n#INSERT_LINKER_FLAGS(BEFORE OBJECTS INSERT \"-L${CMAKE_CURRENT_SOURCE_DIR}/Clib/Release -T${CMAKE_CURRENT_SOURCE_DIR}/Bsp/jtag.ld\")\n\n#INSERT_LINKER_FLAGS(BEFORE OBJECTS INSERT \"-T${CMAKE_CURRENT_SOURCE_DIR}/Bsp/jtag.ld\")\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#SET(LINKER_FLAGS \"-Xlinker  -Map=.map\" CACHE STRING \"\")\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#SET_PROPERTY(SOURCE Clib_modified/src/setjmp/setjmp.S PROPERTY LANGUAGE ASM)\n\n#SET_PROPERTY(SOURCE Clib_modified/src/string/strcmp.S PROPERTY LANGUAGE ASM)\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Export the 'inc' directory globally\t\t    \n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#                                  Bsp/machine\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#Export the em libs to the platform directory ONLY\n\n#Please note we include 'inc' here since for complicated cmake reasons directories exported \n\n#with 'GLOBAL_INCLUDE_DIRECTORIES'from chip directories are not exported to the platform directory\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#                                    Bsp/machine\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#An object library with name '${CHIP_LIBRARY_NAME}' MUST be generated by th CMakeLists.txt file for every chip\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#${TOOLCHAIN_DIR}/aps/lib/crt0dash7.c # You have to select proper toochain directory in CMAKE GUI\n",
        "Line" : 57,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 10
    },
    "stack/framework/hal/chips/efm32gg/CMakeLists.txt" : {
      "ObjectId" : "e2c4dab31c3806a0b2e9f46402d5cf25822b1dc4",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#note: they're two different params. This is on purpose\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "##Export the 'inc' directory globally\t\t    \n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Export the em libs to the platform directory ONLY\n\n#Please note we include 'inc' here since for complicated cmake reasons directories exported \n\n#with 'GLOBAL_INCLUDE_DIRECTORIES'from chip directories are not exported to the platform directory\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#An object library with name '${CHIP_LIBRARY_NAME}' MUST be generated by th CMakeLists.txt file for every chip\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#usb/src/em_usbh.c \n",
        "Line" : 97,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "#usb/src/em_usbhep.c \n\n#usb/src/em_usbhint.c \n",
        "Line" : 99,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 7
    },
    "stack/framework/hal/chips/efm32lg/CMakeLists.txt" : {
      "ObjectId" : "c16e2892d06226dc89e779984e4c4903c3cb8016",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#note: they're two different params. This is on purpose\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "##Export the 'inc' directory globally\t\t    \n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Export the em libs to the platform directory ONLY\n\n#Please note we include 'inc' here since for complicated cmake reasons directories exported \n\n#with 'GLOBAL_INCLUDE_DIRECTORIES'from chip directories are not exported to the platform directory\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#An object library with name '${CHIP_LIBRARY_NAME}' MUST be generated by th CMakeLists.txt file for every chip\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "stack/framework/hal/chips/ezr32lg/CMakeLists.txt" : {
      "ObjectId" : "bb664218c7ed7906e5e1e57f8271bf2ea8fa6482",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#note: they're two different params. This is on purpose\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#SET_PROPERTY(SOURCE ezr32lg/CMSIS/device/src/startup_gcc_ezr32lg.s PROPERTY LANGUAGE ASM)\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#kits/common/drivers\n\n#kits/common/bsp\n",
        "Line" : 42,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "##Export the 'inc' directory globally\t\t    \n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Export the em libs to the platform directory ONLY\n\n#Please note we include 'inc' here since for complicated cmake reasons directories exported \n\n#with 'GLOBAL_INCLUDE_DIRECTORIES'from chip directories are not exported to the platform directory\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#kits/common/drivers\n\n#kits/common/bsp\n",
        "Line" : 71,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "#emlib/inc/em_wdog.h\n",
        "Line" : 101,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#         kits/common/drivers/display.c\n\n#         kits/common/drivers/textdisplay.c\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#kits/common/drivers/retargettextdisplay.c\n",
        "Line" : 106,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "#         kits/common/drivers/displayls013b7dh03.c\n\n#         kits/common/drivers/displaypalemlib.c\n\n#         kits/common/drivers/udelay.c\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#kits/common/drivers/cdc.c\n",
        "Line" : 110,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "#         kits/common/bsp/bsp_bcc.c\n\n#         kits/common/bsp/bsp_stk.c\n\n#         kits/common/bsp/bsp_trace.c\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#usb/src/em_usbh.c\n",
        "Line" : 137,
        "CharPositionInLine" : 3
      },
      "14" : {
        "Text" : "#usb/src/em_usbhep.c\n\n#usb/src/em_usbhint.c\n",
        "Line" : 139,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 15
    },
    "stack/framework/hal/chips/hts221/CMakeLists.txt" : {
      "ObjectId" : "2ff0ba37acbb13e32657bf759ada73f7bf6e36a1",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2018 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#An object library with name '${CHIP_LIBRARY_NAME}' MUST be generated by the CMakeLists.txt file for every chip\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "stack/framework/hal/chips/lsm303agr/CMakeLists.txt" : {
      "ObjectId" : "d741543f656b4611cc0768c3cf73692565c96a88",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2018 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#An object library with name '${CHIP_LIBRARY_NAME}' MUST be generated by the CMakeLists.txt file for every chip\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "stack/framework/hal/chips/oss7_modem/CMakeLists.txt" : {
      "ObjectId" : "615f98f599ac091a53cd5dac1943de6cbec9c404",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2018 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#An object library with name '${CHIP_LIBRARY_NAME}' MUST be generated by the CMakeLists.txt file for every chip\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "stack/framework/hal/chips/si4460/CMakeLists.txt" : {
      "ObjectId" : "a60c7b2475322bfcb8711f938f50c5dee1a2b78b",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#An object library with name '${CHIP_LIBRARY_NAME}' MUST be generated by the CMakeLists.txt file for every chip\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "stack/framework/hal/chips/stm32_common/CMakeLists.txt" : {
      "ObjectId" : "d81cf4c4fdd7ce2d007ca41509062b81e07f902a",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Add the linker script to use to the linker flags\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Please note we include 'inc' here since for complicated cmake reasons directories exported\n\n#with 'GLOBAL_INCLUDE_DIRECTORIES'from chip directories are not exported to the platform directory\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#An object library with name '${CHIP_LIBRARY_NAME}' MUST be generated by the CMakeLists.txt file for every chip\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "stack/framework/hal/chips/stm32l0xx/CMakeLists.txt" : {
      "ObjectId" : "4cd8ba24046269c8ec8b209822ba0f8b11c8f4d6",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Add the linker script to use to the linker flags\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##Export the 'inc' directory globally\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Please note we include 'inc' here since for complicated cmake reasons directories exported\n\n#with 'GLOBAL_INCLUDE_DIRECTORIES'from chip directories are not exported to the platform directory\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#An object library with name '${CHIP_LIBRARY_NAME}' MUST be generated by th CMakeLists.txt file for every chip\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#     Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#     Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ramfunc.c\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#    Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi_ex.c\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\n\n#     Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_ll_exti.c\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "stack/framework/hal/chips/stm32l1xx/CMakeLists.txt" : {
      "ObjectId" : "6f72552d0fb7a11f2601c2055ba5ab887ab6ee47",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Add the linker script to use to the linker flags\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##Export the 'inc' directory globally\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Please note we include 'inc' here since for complicated cmake reasons directories exported\n\n#with 'GLOBAL_INCLUDE_DIRECTORIES'from chip directories are not exported to the platform directory\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#An object library with name '${CHIP_LIBRARY_NAME}' MUST be generated by th CMakeLists.txt file for every chip\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#stm32l0xx_hal_msp.c\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "stack/framework/hal/chips/sx127x/CMakeLists.txt" : {
      "ObjectId" : "5efe618df9717a3e36f4cd9e501f5cf85ec72569",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2017 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#An object library with name '${CHIP_LIBRARY_NAME}' MUST be generated by the CMakeLists.txt file for every chip\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "stack/framework/hal/common/CMakeLists.txt" : {
      "ObjectId" : "7c16fe66de231ce6cb8dd82e86286160d8aba321",
      "LastModified" : "2019-03-21T08:40:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2017 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "stack/framework/hal/platforms/B_L072Z_LRWAN1/CMakeLists.txt" : {
      "ObjectId" : "3002fda1b96e0c55d82223a8dab0c6aef28701c1",
      "LastModified" : "2019-03-21T08:40:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Check that the correct toolchain for the platform is being used\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Define platform specific options\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Restrict the number of possible options for the radio option in the usual manner...\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# on stm32l0 we use this to move the systemfiles to embedded EEPROM\n",
        "Line" : 38,
        "CharPositionInLine" : 138
      },
      "5" : {
        "Text" : "# CONSOLE\n\n# uses USART2,  (PA2 / PA3)\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# TODO remove after removing the pins param from the API\n",
        "Line" : 44,
        "CharPositionInLine" : 68
      },
      "7" : {
        "Text" : "#Add a 'global' definition for the specific MCU\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#Make the 'inc' directory available so 'platform.h' can be found\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "##testing...\n\n#EXPORT_GLOBAL_INCLUDE_DIRECTORIES(config)\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#Make the 'binary platform dir' available so the 'platform_defs.h' file\n\n#(Generated by PLATFORM_BUILD_SETTINGS_FILE) can be found\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#Add platform specific linker flags\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# libs are using weak symbols\n",
        "Line" : 74,
        "CharPositionInLine" : 90
      },
      "13" : {
        "Text" : "#Set platform specific compile options\n\n#INSERT_C_FLAGS(AFTER \"-gdwarf-2\" \"-mcpu=cortex-m3\" \"-mthumb\" \"-fmessage-length=0\" \"-mno-sched-prolog\" \"-fno-builtin\" \"-ffunction-sections\" \"-fdata-sections\")\n\n#INSERT_C_FLAGS(AFTER \"-gdwarf-2\" \"-mcpu=cortex-m3\" \"-mthumb\" \"-fmessage-length=0\" \"-ffunction-sections\" \"-fdata-sections\" \"-ffreestanding\" \"-fno-move-loop-invariants\" \"-DDEBUG\" \"-DTRACE\" \"-DOS_USE_TRACE_SEMIHOSTING_DEBUG\")\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#Add platform specific linker flags\n\n#INSERT_LINKER_FLAGS(BEFORE OBJECTS INSERT \"--specs=nano.specs\" \"-Wl,-gc-sections\")\n\n#INSERT_LINKER_FLAGS(BEFORE LINK_LIBRARIES INSERT \"-Wl,--start-group\")\n\n#INSERT_LINKER_FLAGS(AFTER LINK_LIBRARIES INSERT \"-lgcc -lc -lnosys -Wl,--end-group\")\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Add additional definitions to the 'platform_defs.h' file generated by cmake\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#Define the 'platform library'. Every platform must define a 'PLATFORM' object library\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#Include the sources for the stm32l0 chip\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#Include the sources for the radio chip, if needed\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#Build the 'platform_defs.h' settings file\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "stack/framework/hal/platforms/CMakeLists.txt" : {
      "ObjectId" : "c2897267904d23a26c84f8db3ce31c3eff10619a",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Scan all platforms in the current directory for those that are\n\n#compatible with the current toolchain\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#If no platforms are compatible with the current toolchain, generate an error\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Otherwise add a parameter to allow the user to select the platform to use\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#At this point 'PLATFORM' should point to a valid plaform\n\n#Before we include it though, we first need to:\n\n#1) Hide the parameters of the previous platform.\n\n#   Parameters of the currently selected platform are re-enabled\n\n#   by the parameter-definitions of the platform itself\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#2) Include helper macro's for platforms & chips\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#And finally: include the platform itself (if one is selected)\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#Finally load the actual platform\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "stack/framework/hal/platforms/EFM32GG_STK3700/CMakeLists.txt" : {
      "ObjectId" : "5ca677b0216d767796d38485f145523f035e8b27",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Check that the correct toolchain for the platform is being used\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Define platform specific options\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# CONSOLE\n\n# uses UART0, location 1\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Restrict the number of possible options for the radio option in the usual manner...\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Add a 'global' definition for the specific MCU\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#Make the 'inc' directory available so 'platform.h' can be found\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "##testing...\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#Make the 'binary platform dir' available so the 'platform_defs.h' file\n\n#(Generated by PLATFORM_BUILD_SETTINGS_FILE) can be found\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#Set platform specific compile options\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#Add platform specific linker flags\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Add additional definitions to the 'platform_defs.h' file generated by cmake\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#Define the 'platform library'. Every platform must define a 'PLATFORM' object library\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#Include the sources for the efm32gg chip\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#Include the sources for the radio chip, if needed\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#Build the 'platform_defs.h' settings file\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "stack/framework/hal/platforms/EZR32LG_USB01/CMakeLists.txt" : {
      "ObjectId" : "85016bb87daa2fef33053e77657129d1ee97454b",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Check that the correct toolchain for the platform is being used\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Define platform specific options\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Restrict the number of possible options for the radio option in the usual manner...\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# CONSOLE\n\n# uses UART0, location 1\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Add a 'global' definition for the specific MCU\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#Make the 'inc' directory available so 'platform.h' can be found\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "##testing...\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#Make the 'binary platform dir' available so the 'platform_defs.h' file\n\n#(Generated by PLATFORM_BUILD_SETTINGS_FILE) can be found\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#Set platform specific compile options\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#Add platform specific linker flags\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Add additional definitions to the 'platform_defs.h' file generated by cmake\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#Define the 'platform library'. Every platform must define a 'PLATFORM' object library\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#platf_usb_descriptors.c\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "#Include the sources for the EZR32LG330 chip\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#Include the sources for the radio chip, if needed\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#Build the 'platform_defs.h' settings file\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "stack/framework/hal/platforms/EZR32LG_WSTK6200A/CMakeLists.txt" : {
      "ObjectId" : "589d8ec1c686cfb15efa03999a1df2fada7bb7b1",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Check that the correct toolchain for the platform is being used\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Define platform specific options\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Restrict the number of possible options for the radio option in the usual manner...\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# CONSOLE\n\n# uses UART0, location 1\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Add a 'global' definition for the specific MCU\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#Make the 'inc' directory available so 'platform.h' can be found\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "##testing...\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#Make the 'binary platform dir' available so the 'platform_defs.h' file\n\n#(Generated by PLATFORM_BUILD_SETTINGS_FILE) can be found\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#Set platform specific compile options\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#Add platform specific linker flags\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Add additional definitions to the 'platform_defs.h' file generated by cmake\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#Define the 'platform library'. Every platform must define a 'PLATFORM' object library\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#also in kits/common/drivers\n\n#also in kits/common/drivers\n",
        "Line" : 102,
        "CharPositionInLine" : 21
      },
      "14" : {
        "Text" : "#kits/common/drivers/retargettextdisplay.c\n",
        "Line" : 107,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "#Include the sources for the EZR32LG330 chip\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#Include the sources for the radio chip, if needed\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#Build the 'platform_defs.h' settings file\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "stack/framework/hal/platforms/EZRPi/CMakeLists.txt" : {
      "ObjectId" : "39b2d2b928144636d127e21c2f85518b5ff94590",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2017 Christophe VG <contact@christophe.vg>\n\n# Copyright 2017 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check that the correct toolchain for the platform is being used\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Define platform specific variables\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# CONSOLE external configurable baudrate parameter\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add a 'global' definition for the specific MCU\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Make the 'inc' directory available so 'platform.h' can be found\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Make the 'binary platform dir' available so the 'platform_defs.h' file\n\n# (Generated by PLATFORM_BUILD_SETTINGS_FILE) can be found\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Set platform specific compile options\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add platform specific linker flags\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Add additional definitions to the 'platform_defs.h' file generated by cmake\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Define the 'platform library'.\n\n# Every platform must define a 'PLATFORM' object library\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Include the sources for the EZR32LG330 chip\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Include the sources for the radio chip\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Build the 'platform_defs.h' settings file\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "stack/framework/hal/platforms/MURATA_ABZ/CMakeLists.txt" : {
      "ObjectId" : "b84b6f45c9347d90841895effb75e33e3c769881",
      "LastModified" : "2019-03-21T08:40:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Check that the correct toolchain for the platform is being used\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Define platform specific options\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# on stm32l0 we use this to move the systemfiles to embedded EEPROM\n",
        "Line" : 32,
        "CharPositionInLine" : 138
      },
      "4" : {
        "Text" : "# CONSOLE\n\n# uses USART2,  (PA2 / PA3)\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# TODO remove after removing the pins param from the API\n",
        "Line" : 42,
        "CharPositionInLine" : 68
      },
      "6" : {
        "Text" : "#Add a 'global' definition for the specific MCU\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#Make the 'inc' directory available so 'platform.h' can be found\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#Make the 'binary platform dir' available so the 'platform_defs.h' file\n\n#(Generated by PLATFORM_BUILD_SETTINGS_FILE) can be found\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#Add platform specific linker flags\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# libs are using weak symbols\n",
        "Line" : 61,
        "CharPositionInLine" : 90
      },
      "11" : {
        "Text" : "# Add additional definitions to the 'platform_defs.h' file generated by cmake\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#Define the 'platform library'. Every platform must define a 'PLATFORM' object library\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#Include the sources for the stm32l0 chip\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#Build the 'platform_defs.h' settings file\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "stack/framework/hal/platforms/NUCLEO_L073RZ/CMakeLists.txt" : {
      "ObjectId" : "bd54ee4fe4ad56d367096774b698869d45e99c6f",
      "LastModified" : "2019-03-21T08:40:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Check that the correct toolchain for the platform is being used\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Define platform specific options\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Restrict the number of possible options for the radio option in the usual manner...\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# on stm32l0 we use this to move the systemfiles to embedded EEPROM\n",
        "Line" : 38,
        "CharPositionInLine" : 138
      },
      "5" : {
        "Text" : "# CONSOLE\n\n# uses USART2,  (PA2 / PA3)\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# TODO remove\n",
        "Line" : 45,
        "CharPositionInLine" : 69
      },
      "7" : {
        "Text" : "#Add a 'global' definition for the specific MCU\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#Make the 'inc' directory available so 'platform.h' can be found\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "##testing...\n\n#EXPORT_GLOBAL_INCLUDE_DIRECTORIES(config)\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#Make the 'binary platform dir' available so the 'platform_defs.h' file\n\n#(Generated by PLATFORM_BUILD_SETTINGS_FILE) can be found\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#Add platform specific linker flags\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#Set platform specific compile options\n\n#INSERT_C_FLAGS(AFTER \"-gdwarf-2\" \"-mcpu=cortex-m3\" \"-mthumb\" \"-fmessage-length=0\" \"-mno-sched-prolog\" \"-fno-builtin\" \"-ffunction-sections\" \"-fdata-sections\")\n\n#INSERT_C_FLAGS(AFTER \"-gdwarf-2\" \"-mcpu=cortex-m3\" \"-mthumb\" \"-fmessage-length=0\" \"-ffunction-sections\" \"-fdata-sections\" \"-ffreestanding\" \"-fno-move-loop-invariants\" \"-DDEBUG\" \"-DTRACE\" \"-DOS_USE_TRACE_SEMIHOSTING_DEBUG\")\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#Add platform specific linker flags\n\n#INSERT_LINKER_FLAGS(BEFORE OBJECTS INSERT \"--specs=nano.specs\" \"-Wl,-gc-sections\")\n\n#INSERT_LINKER_FLAGS(BEFORE LINK_LIBRARIES INSERT \"-Wl,--start-group\")\n\n#INSERT_LINKER_FLAGS(AFTER LINK_LIBRARIES INSERT \"-lgcc -lc -lnosys -Wl,--end-group\")\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Add additional definitions to the 'platform_defs.h' file generated by cmake\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#Define the 'platform library'. Every platform must define a 'PLATFORM' object library\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#Include the sources for the stm32l0 chip\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#Include the sources for the radio chip, if needed\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#Build the 'platform_defs.h' settings file\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "stack/framework/hal/platforms/NUCLEO_L152RE/CMakeLists.txt" : {
      "ObjectId" : "72bae92af529c99caa31d793b36a25fa3666c7e1",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Check that the correct toolchain for the platform is being used\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Define platform specific options\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Restrict the number of possible options for the radio option in the usual manner...\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# CONSOLE\n\n# uses USART2,  (PA2 / PA3)\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# TODO remove\n",
        "Line" : 22,
        "CharPositionInLine" : 69
      },
      "5" : {
        "Text" : "#Add a 'global' definition for the specific MCU\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#Make the 'inc' directory available so 'platform.h' can be found\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#Make the 'binary platform dir' available so the 'platform_defs.h' file\n\n#(Generated by PLATFORM_BUILD_SETTINGS_FILE) can be found\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#Add platform specific linker flags\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#Add platform specific linker flags\n\n#INSERT_LINKER_FLAGS(BEFORE OBJECTS INSERT \"--specs=nano.specs\" \"-Wl,-gc-sections\")\n\n#INSERT_LINKER_FLAGS(BEFORE LINK_LIBRARIES INSERT \"-Wl,--start-group\")\n\n#INSERT_LINKER_FLAGS(AFTER LINK_LIBRARIES INSERT \"-lgcc -lc -lnosys -Wl,--end-group\")\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Add additional definitions to the 'platform_defs.h' file generated by cmake\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#Define the 'platform library'. Every platform must define a 'PLATFORM' object library\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#Include the sources for the stm32l1 chip\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#Include the sources for the radio chip, if needed\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#Build the 'platform_defs.h' settings file\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "stack/framework/hal/platforms/OCTA-L072Z/CMakeLists.txt" : {
      "ObjectId" : "66696b9e7712ab0127b2aa25854da5c39476d77e",
      "LastModified" : "2019-03-21T08:40:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Check that the correct toolchain for the platform is being used\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Define platform specific options\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Restrict the number of possible options for the radio option in the usual manner...\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# on stm32l0 we use this to move the systemfiles to embedded EEPROM\n",
        "Line" : 38,
        "CharPositionInLine" : 138
      },
      "5" : {
        "Text" : "# CONSOLE\n\n# uses USART2,  (PA2 / PA3)\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# TODO remove after removing the pins param from the API\n",
        "Line" : 45,
        "CharPositionInLine" : 68
      },
      "7" : {
        "Text" : "#Add a 'global' definition for the specific MCU\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#Make the 'inc' directory available so 'platform.h' can be found\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "##testing...\n\n#EXPORT_GLOBAL_INCLUDE_DIRECTORIES(config)\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#Make the 'binary platform dir' available so the 'platform_defs.h' file\n\n#(Generated by PLATFORM_BUILD_SETTINGS_FILE) can be found\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#Add platform specific linker flags\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# libs are using weak symbols\n",
        "Line" : 75,
        "CharPositionInLine" : 90
      },
      "13" : {
        "Text" : "#Set platform specific compile options\n\n#INSERT_C_FLAGS(AFTER \"-gdwarf-2\" \"-mcpu=cortex-m3\" \"-mthumb\" \"-fmessage-length=0\" \"-mno-sched-prolog\" \"-fno-builtin\" \"-ffunction-sections\" \"-fdata-sections\")\n\n#INSERT_C_FLAGS(AFTER \"-gdwarf-2\" \"-mcpu=cortex-m3\" \"-mthumb\" \"-fmessage-length=0\" \"-ffunction-sections\" \"-fdata-sections\" \"-ffreestanding\" \"-fno-move-loop-invariants\" \"-DDEBUG\" \"-DTRACE\" \"-DOS_USE_TRACE_SEMIHOSTING_DEBUG\")\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#Add platform specific linker flags\n\n#INSERT_LINKER_FLAGS(BEFORE OBJECTS INSERT \"--specs=nano.specs\" \"-Wl,-gc-sections\")\n\n#INSERT_LINKER_FLAGS(BEFORE LINK_LIBRARIES INSERT \"-Wl,--start-group\")\n\n#INSERT_LINKER_FLAGS(AFTER LINK_LIBRARIES INSERT \"-lgcc -lc -lnosys -Wl,--end-group\")\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Add additional definitions to the 'platform_defs.h' file generated by cmake\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#Define the 'platform library'. Every platform must define a 'PLATFORM' object library\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#Include the sources for the stm32l0 chip\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#Include the sources for the radio chip, if needed\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#Build the 'platform_defs.h' settings file\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "stack/framework/hal/platforms/cortus_fpga/CMakeLists.txt" : {
      "ObjectId" : "b505470d99e2c4b3b61193a3d5e734c7f4a5054b",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Check that the correct toolchain for the platform is being used\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Define platform specific options\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# CONSOLE\n\n# uses UART0, location 1\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Restrict the number of possible options for the radio option in the usual manner...\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Add a 'global' definition for the specific MCU and -mmcu (needed by toolchain)\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#Make the 'inc' directory available so 'platform.h' can be found\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#Make the 'binary platform dir' available so the 'platform_defs.h' file\n\n#(Generated by PLATFORM_BUILD_SETTINGS_FILE) can be found\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#Set platform specific compile options\n\n#INSERT_C_FLAGS(AFTER \"-c -Os -Wall -Wcast-align -g3 -MMD -MP -fmessage-length=0\")\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#Add platform specific linker flags\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#INSERT_LINKER_FLAGS(BEFORE LINK_LIBRARIES INSERT \"-nostartfiles\")\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#INSERT_LINKER_FLAGS(AFTER LINK_LIBRARIES INSERT \"-lc -L. -fno-lto -Os -g3 -Wl,-q -Wl,--noinhibit-exec -Wl,-Map,cortus.map -fno-exceptions\")\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#MESSAGE(STATUS \"CMAKE_C_COMPILER ${CMAKE_C_COMPILER}\")\n\n#MESSAGE(STATUS \"CMAKE_CXX_COMPILER ${CMAKE_CXX_COMPILER}\")\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#Define the 'platform library'. Every platform must define a 'PLATFORM' object library\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#Include the sources for the cortus fpga\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#Include the sources for the radio chip, if needed\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#Build the 'platform_defs.h' settings file\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "stack/modules/CMakeLists.txt" : {
      "ObjectId" : "70a6e54ed174123058722da8c017f3d984ea4451",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Export the 'binary' platform directory so the 'modules_defs.h' file\n\n#generated by MODULES_BUILD_SETTINGS_FILE file can be found\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Add the 'BUILD_MODULES' option\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Add conditional options for all subdirs (which are individual modules)\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# strip full path keeping only module name\n",
        "Line" : 38,
        "CharPositionInLine" : 56
      },
      "5" : {
        "Text" : "#Hide the parameters declared by the modules during the previous run\n\n#Modules that are enabled will re-enable their parameters during declaration (eg by calling MODULE_PARAM)\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#Finally Load the individual modules\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# strip full path keeping only module name\n",
        "Line" : 50,
        "CharPositionInLine" : 56
      },
      "CommentCount" : 8
    },
    "stack/modules/alp/CMakeLists.txt" : {
      "ObjectId" : "4846fe9e9090c858c8d7434dc008a18df02b957d",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n# Copyright 2018 CORTUS S.A\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Module specific parameters and options can be defined using\n\n#MODULE_OPTION and MODULE_PARAMETER\n\n#See cmake/module_macros.cmake for more information\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Generate the 'module_defs.h'\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Export the module-specific header files to the application by using\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#By convention, each module should generate a single 'static' library that can be included by the application\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#framework_defs.h\n",
        "Line" : 51,
        "CharPositionInLine" : 35
      },
      "6" : {
        "Text" : "# MODULE_D7AP_defs.h\n",
        "Line" : 52,
        "CharPositionInLine" : 32
      },
      "CommentCount" : 7
    },
    "stack/modules/d7ap/CMakeLists.txt" : {
      "ObjectId" : "6ed3285db820a5e27369a726312ae8534c029241",
      "LastModified" : "2019-03-22T15:58:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2015 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Module specific parameters and options can be defined using\n\n#MODULE_OPTION and MODULE_PARAMETER\n\n#See cmake/module_macros.cmake for more information\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Generate the 'module_defs.h'\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Export the module-specific header files to the application by using\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#By convention, each module should generate a single 'static' library that can be included by the application\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#framework_defs.h\n",
        "Line" : 96,
        "CharPositionInLine" : 32
      },
      "6" : {
        "Text" : "# MODULE_D7AP_defs.h\n",
        "Line" : 97,
        "CharPositionInLine" : 29
      },
      "CommentCount" : 7
    },
    "stack/modules/lorawan/CMakeLists.txt" : {
      "ObjectId" : "b5b8e8f540f5c08b0c0dcecef4195a45716c13e8",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2017 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Module specific parameters and options can be defined using\n\n#MODULE_OPTION and MODULE_PARAMETER\n\n#See cmake/module_macros.cmake for more information\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Generate the 'module_defs.h'\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Export the module-specific header files to the application by using\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#By convention, each module should generate a single 'static' library that can be included by the application\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# TODO only this region for now\n",
        "Line" : 35,
        "CharPositionInLine" : 40
      },
      "6" : {
        "Text" : "# TODO only for lrwan1 board\n",
        "Line" : 43,
        "CharPositionInLine" : 40
      },
      "7" : {
        "Text" : "# TODO remove?\n",
        "Line" : 48,
        "CharPositionInLine" : 24
      },
      "8" : {
        "Text" : "# TODO tmp\n",
        "Line" : 52,
        "CharPositionInLine" : 93
      },
      "9" : {
        "Text" : "#framework_defs.h\n",
        "Line" : 64,
        "CharPositionInLine" : 35
      },
      "10" : {
        "Text" : "# MODULE_LORAWAN_defs.h\n",
        "Line" : 65,
        "CharPositionInLine" : 32
      },
      "11" : {
        "Text" : "#TARGET_LINK_LIBRARIES(lorawan m)\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "stack/tests/CMakeLists.txt" : {
      "ObjectId" : "cf4be2df9d744026921a5da9f3ea00b9547e797a",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra\n\n# lowpower wireless sensor communication\n\n#\n\n# Copyright 2016 University of Antwerp\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Add the 'BUILD_UNIT_TESTS' option\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Add conditional options for all subdirs (which are individual applications)\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# strip full path keeping only test name\n",
        "Line" : 26,
        "CharPositionInLine" : 52
      },
      "4" : {
        "Text" : "#Finally Load the individual applications\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# strip full path keeping only test name\n",
        "Line" : 34,
        "CharPositionInLine" : 52
      },
      "CommentCount" : 6
    },
    "stack/tests/aes/CMakeLists.txt" : {
      "ObjectId" : "441179b63552231a770e9917dc4b516d8fe78850",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#link with the framework library that includes the AES library\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "stack/tests/fec/CMakeLists.txt" : {
      "ObjectId" : "8b4431bdbfcd4150803c68adbdfb8d19d98e9c07",
      "LastModified" : "2019-01-04T19:33:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 85
  },
  "ElapsedTime" : 3615
}