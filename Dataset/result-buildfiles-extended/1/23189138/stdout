{
  "Repository" : "23189138",
  "Revision" : "HEAD",
  "ObjectId" : "e021c04ce4d9984474c7431d42e61b222096a28d",
  "CommitTime" : "2019-04-03T13:43:11Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "9174fbbc781cd3c4f6aba65959abfb9f0f10b52a",
      "LastModified" : "2018-12-13T04:41:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake version required. This must be the very first line, because it sets default policies affecting everything else\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Project name\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Version\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#set(ROSEGARDEN_CODENAME \"Yesterday\")\n\n#set(ROSEGARDEN_CODENAME \"Zepherine Drouhin\")\n\n#set(ROSEGARDEN_CODENAME \"Altissimo\")\n\n#set(ROSEGARDEN_CODENAME \"Bouquet d'Or\")\n\n#set(ROSEGARDEN_CODENAME \"Cloud Nine\")\n\n#set(ROSEGARDEN_CODENAME \"Distant Drums\")\n\n#set(ROSEGARDEN_CODENAME \"Enchantress\")\n\n#set(ROSEGARDEN_CODENAME \"Flutterbye\")\n\n#set(ROSEGARDEN_CODENAME \"Grace Note\")\n\n#set(ROSEGARDEN_CODENAME \"Hermosa\")\n\n#set(ROSEGARDEN_CODENAME \"Incredible\")\n\n#set(ROSEGARDEN_CODENAME \"Joyfulness\")\n\n#set(ROSEGARDEN_CODENAME \"Keepsake\")\n\n#set(ROSEGARDEN_CODENAME \"Let Freedom Ring\")\n\n#set(ROSEGARDEN_CODENAME \"Mountain Music\")\n\n#set(ROSEGARDEN_CODENAME \"Night Owl\")\n\n#set(ROSEGARDEN_CODENAME \"Orange Flame\")\n\n#set(ROSEGARDEN_CODENAME \"Purple Rain\")\n\n#set(ROSEGARDEN_CODENAME \"Quietness\")\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Make the build type default to \"Release\"\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Make it possible to use cmake files from the cmake subdir\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable the really useful automoc feature from cmake\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Find headers in \".\" as well\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Used to set installation paths\n\n# This takes care of installing into \"lib64\" on distros that use that, for instance,\n\n# by setting CMAKE_INSTALL_FULL_LIBDIR.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Tweak RPATH handling so that installed debug builds work out of the box\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Activate unit tests (this enables `make test`)\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# then define the BUILD_TESTING option, with the default value that we want\n\n# We'll set it to OFF in release mode, and let users (developers) choose in debug mode.\n\n# include(CTest) would make it ON by default in all cases, so we don't use that\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Compiler defines\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# this is changed to STABLE by the release script\n",
        "Line" : 73,
        "CharPositionInLine" : 28
      },
      "14" : {
        "Text" : "# Compiler flags\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Enable C++11\n",
        "Line" : 77,
        "CharPositionInLine" : 27
      },
      "16" : {
        "Text" : "# Too many left, someone needs to finish this...\n\n#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wzero-as-null-pointer-constant\") # suggest using nullptr where applicable\n",
        "Line" : 85,
        "CharPositionInLine" : 10
      },
      "17" : {
        "Text" : "# Looking for dependencies\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Required dependencies ---------------------------------------\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Qt5 is required.\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# This little bit of juggling is to enable DSSI to be included even on\n\n# systems without ALSA (dssi.h includes an ALSA header, but we can\n\n# fill in the gap if ALSA itself is not present)\n",
        "Line" : 121,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# for XSetErrorHandler & XGetErrorText\n",
        "Line" : 136,
        "CharPositionInLine" : 27
      },
      "22" : {
        "Text" : "# Optional dependencies ---------------------------------------\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Build with LIRC support if LIRC detected, unless DISABLE_LIRC is set\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# --------------------------------------------------------\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Print out a summary of what was found and what is missing\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# --------------------------------------------------------\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Unit tests disabled: use a static lib\n\n# Unit tests enabled: use shared libs, to speed up linking\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# for generating rosegardenprivate-export.h\n",
        "Line" : 189,
        "CharPositionInLine" : 45
      },
      "29" : {
        "Text" : "# --------------------------------------------------------\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 30
    },
    "cmake/FindSharedMimeInfo.cmake" : {
      "ObjectId" : "34863ee889fe74ae3dae6f05358ba7ad0ec2abaa",
      "LastModified" : "2017-01-18T01:22:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindSharedMimeInfo\n\n# ------------------\n\n#\n\n# Try to find the shared-mime-info package.\n\n#\n\n# This will define the following variables:\n\n#\n\n# ``SharedMimeInfo_FOUND``\n\n#     True if system has the shared-mime-info package\n\n# ``UPDATE_MIME_DATABASE_EXECUTABLE``\n\n#     The update-mime-database executable\n\n#\n\n# and the following imported targets:\n\n#\n\n# ``SharedMimeInfo::UpdateMimeDatabase``\n\n#     The update-mime-database executable\n\n#\n\n# The follow macro is available::\n\n#\n\n#   update_xdg_mimetypes(<path>)\n\n#\n\n# Updates the XDG mime database at install time (unless the ``$DESTDIR``\n\n# environment variable is set, in which case it is up to package managers to\n\n# perform this task).\n\n#\n\n# Since pre-1.0.0.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2013-2014 Alex Merry <alex.merry@kdemail.net>\n\n# Copyright 2007 Pino Toscano <toscano.pino@tiscali.it>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# 1. Redistributions of source code must retain the copyright\n\n#    notice, this list of conditions and the following disclaimer.\n\n# 2. Redistributions in binary form must reproduce the copyright\n\n#    notice, this list of conditions and the following disclaimer in the\n\n#    documentation and/or other materials provided with the distribution.\n\n# 3. The name of the author may not be used to endorse or promote products\n\n#    derived from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n\n# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n\n# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n\n# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\n\n# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n\n# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n\n# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Note that targets and most variables are not available to install code\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "cmake/RPathHandling.cmake" : {
      "ObjectId" : "4210ced5a64b1e64b97f9d590ba9bac381a14cbd",
      "LastModified" : "2017-01-18T01:22:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Taken from extra-cmake-modules KDECMakeSettings.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2014      Alex Merry <alex.merry@kde.org>\n\n# Copyright 2013      Aleix Pol <aleixpol@kde.org>\n\n# Copyright 2012-2013 Stephen Kelly <steveire@gmail.com>\n\n# Copyright 2007      Matthias Kretz <kretz@kde.org>\n\n# Copyright 2006-2007 Laurent Montel <montel@kde.org>\n\n# Copyright 2006-2013 Alex Neundorf <neundorf@kde.org>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file COPYING-CMAKE-SCRIPTS for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Runtime Paths\n\n# ~~~~~~~~~~~~~\n\n#\n\n# The default runtime path (used on Unix systems to search for\n\n# dynamically-linked libraries) is set to include the location that libraries\n\n# will be installed to (as set in CMAKE_INSTALL_LIBDIR), and also the linker search\n\n# path.\n\n#\n\n# Note that ``CMAKE_INSTALL_LIBDIR`` needs to be set before including this module.\n\n# Typically, this is done by including GNUInstallDirs.cmake\n\n#\n\n# This section can be disabled by setting ``KDE_SKIP_RPATH_SETTINGS`` to TRUE\n\n# before including this module.\n\n#\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "################# RPATH handling ##################################\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set the default RPATH to point to useful locations, namely where the\n\n# libraries will be installed and the linker search path\n",
        "Line" : 39,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "# for mac os: add install name dir in addition\n\n# check: is the rpath stuff below really required on mac os? at least it seems so to use a stock qt from qt.io\n",
        "Line" : 52,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# add our LIB_INSTALL_DIR to the RPATH (but only when it is not one of\n\n# the standard system link directories - such as /usr/lib on UNIX)\n",
        "Line" : 58,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# Append directories in the linker search path (but outside the project)\n",
        "Line" : 67,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 8
    },
    "data/CMakeLists.txt" : {
      "ObjectId" : "4819038aed2dc961733e0a92116e7e89adc87d38",
      "LastModified" : "2017-11-15T13:59:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install icons\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Install mimetype\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# update XDG mime-types if shared mime info is around\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Install desktop file\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Install appdata file\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "2e7f0422c268452b0510bf30188afb5d186e200f",
      "LastModified" : "2018-11-13T14:38:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Building the rosegarden executable\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define where to build the targets : at the top of the build tree\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Compiler definitions\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Export macros\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Define the include paths (-I...)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# For each optional dependency: if found, set a -D definition, a -I include path, and add lib to the list\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# for cmake 2.8.12, fixed in 2.8.12.1 (https://cmake.org/gitweb?p=cmake.git;a=commitdiff;h=a1b9465b)\n",
        "Line" : 42,
        "CharPositionInLine" : 76
      },
      "7" : {
        "Text" : "# Compile translations (.ts -> .qm)\n",
        "Line" : 731,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Generate a .qrc for the .qm files\n",
        "Line" : 737,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Copy the QRC file to the output directory, because the files listed in the\n\n# qrc file are relative to that directory.\n",
        "Line" : 743,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Run the resource compiler (rcc_options should already be set). We can't\n\n# use qt5_add_resources because the qrc file may not exist yet.\n",
        "Line" : 751,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Turn off automoc for generated files.\n",
        "Line" : 763,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define a static lib with the whole code\n",
        "Line" : 770,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Link to the following libraries\n",
        "Line" : 777,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#########################\n\n# Generate list of source files, as input for buildkey.cmake to compute BUILDKEY at compile time\n",
        "Line" : 792,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Magic for SVN revision number, found on\n\n# http://stackoverflow.com/questions/3780667/use-cmake-to-get-build-time-svn-revision\n",
        "Line" : 800,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# a custom target that is always built\n",
        "Line" : 803,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# svn_header never gets created, it's just a unique string\n",
        "Line" : 804,
        "CharPositionInLine" : 52
      },
      "18" : {
        "Text" : "# creates svnheader.h using cmake script\n",
        "Line" : 806,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# svnversion.h is a generated file\n",
        "Line" : 811,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# explicitly say that the target depends on the svnheader\n",
        "Line" : 816,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#########################\n",
        "Line" : 818,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Define an executable called rosegarden, with just the main.cpp, linking to the lib with all the code\n",
        "Line" : 821,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Install executable\n",
        "Line" : 831,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Install shared libs, if any\n",
        "Line" : 834,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "src/buildkey.cmake" : {
      "ObjectId" : "8bf71f894329a0dbb5281181fbc05bfbc8e25aa0",
      "LastModified" : "2017-01-18T01:22:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Compute build key based on file contents\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Magic for getting the SVN revision at build time\n\n# http://stackoverflow.com/questions/3780667/use-cmake-to-get-build-time-svn-revision\n\n# combined with\n\n# http://stackoverflow.com/questions/17451226/cmake-how-to-get-subversion-revision-but-not-to-fail-if-we-made-an-export?s=1%7C0.1607\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# the FindSubversion.cmake module is part of the standard distribution\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# extract working copy information for SOURCE_DIR into MY_XXX variables, especially MY_WC_REVISION\n",
        "Line" : 29,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# Assume this is git-svn\n",
        "Line" : 33,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "#message(STATUS \"SVN revision ${MY_WC_REVISION}\")\n",
        "Line" : 43,
        "CharPositionInLine" : 9
      },
      "6" : {
        "Text" : "# write a file with the define\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# copy the file to the final header only if the version changes\n\n# reduces needless rebuilds\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "src/rosegarden-version.h.cmake" : {
      "ObjectId" : "903375485dbf04709a892d20db2f2380839fb01e",
      "LastModified" : "2017-01-18T01:22:42Z",
      "FileType" : "CMAKESOURCE",
      "CommentCount" : 0
    },
    "src/rosegardenprivate_export.h.cmake" : {
      "ObjectId" : "bd8b2886ab114ad81213ed412918a56216715e6e",
      "LastModified" : "2017-01-18T01:22:42Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/*\n    This library is free software; you can redistribute it and/or\n    modify it under the terms of the GNU Lesser General Public\n    License as published by the Free Software Foundation; either\n    version 2.1 of the License, or (at your option) version 3, or any\n    later version accepted by the membership of KDE e.V. (or its\n    successor approved by the membership of KDE e.V.), which shall\n    act as a proxy defined in Section 6 of version 3 of the license.\n\n    This library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n    Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public\n    License along with this library.  If not, see <http://www.gnu.org/licenses/>.\n\n*/",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/* No export/import for static libraries */",
        "Line" : 28,
        "CharPositionInLine" : 3
      },
      "2" : {
        "Text" : "/* We are building this library */",
        "Line" : 31,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "/* We are using this library */",
        "Line" : 34,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 4
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "1e09f12fc3da2d75e7d63f3afffc1eeb92e12736",
      "LastModified" : "2017-01-18T01:22:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Code factorization: this macro defines unit tests\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Each line here defines a unit test (the executable name matches the .cpp filename)\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "test/lilypond/CMakeLists.txt" : {
      "ObjectId" : "35e9dc3bb0714ac650bc651148d0b6e98ab3e50f",
      "LastModified" : "2017-01-18T01:22:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 8,
    "CMAKESOURCE" : 2
  },
  "ElapsedTime" : 2165
}