{
  "Repository" : "2149824",
  "Revision" : "HEAD",
  "ObjectId" : "3e6e6d23bc3133e31c93bfb739d0bfb0eade6efe",
  "CommitTime" : "2019-03-07T15:09:09Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "163e5feb9451d1690379eee405d916e933e0f352",
      "LastModified" : "2018-08-10T03:01:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# vim:ts=2:sw=2:et\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#===============================================================================\n\n# CMAKE options customization\n\n#===============================================================================\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Custom extensions\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# Toolchain\n\n#-------------------------------------------------------------------------------\n\n# See also build/CMakeInit.txt\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# When this option is on, compiler versions below 5.0 cause errors with\n\n# boost:\n\n#   undefined reference to\n\n#     `virtual thunk to boost::exception_detail::clone_impl<...'\n\n#   undefined reference to\n\n#     `boost::exception_detail::error_info_injector<...'\n",
        "Line" : 41,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# The following will omit all symbol information from the build:\n\n#add_definitions(-Wl,-s)\n\n#set(CMAKE_EXE_LINKER_FLAGS  \"${CMAKE_EXE_LINKER_FLAGS} -s\")\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Append \"_d\" to the library when doing debug build\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Note: explicit c++14 definitions done in CMakeInit.txt.\n\n# Alternative is to set for each target:\n\n# target_compile_features(${PROJECT_NAME} PRIVATE cxx_lambda_init_captures)\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# Policies\n\n#-------------------------------------------------------------------------------\n\n# Don't curse at non-existing dependencies (since we use code generation)\n\n#cmake_policy(SET CMP0046 OLD)\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# RPATH configuration\n\n# ===================\n\n# Don't skip the full RPATH for the build tree\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# When building, don't use the install RPATH already\n\n# (but later on when installing)\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Add the automatically determined parts of the RPATH\n\n# which point to directories outside the build tree to the install RPATH\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# Platform-specific checks\n\n#-------------------------------------------------------------------------------\n\n#include(${CMAKE_ROOT}/Modules/CheckTypeSize.cmake)\n\n#include(${CMAKE_ROOT}/Modules/CheckFunctionExists.cmake)\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#check_type_size(size_t SIZE_T)\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Needed for Thrift\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Needed for pcap.hpp tests\n\n#CHECK_STRUCT_HAS_MEMBER(\"struct tcphdr\" th_flags netinet/tcp.h UTXX_HAVE_TCPHDR_TH_FLAGS_H)\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# Dependent packages and their directory locations\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Python\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Determine thrift include/libs\n",
        "Line" : 150,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Boost (with local modifications):\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#include_directories(SYSTEM ${Boost_INCLUDE_DIRS})\n\n#link_directories(${Boost_LIBRARY_DIRS})\n",
        "Line" : 172,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Additional clean files\n",
        "Line" : 189,
        "CharPositionInLine" : 20
      },
      "22" : {
        "Text" : "#===============================================================================\n\n# Code generation\n\n#===============================================================================\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Name without extension\n",
        "Line" : 196,
        "CharPositionInLine" : 51
      },
      "24" : {
        "Text" : "# The following dependency may be extraneous due to some .hpp file\n\n# depending on a specific .xml file which \"includes\" the following file:\n",
        "Line" : 226,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# TargetSrcList contains the list name and therefore ${TargetSrcList} is\n\n# the list itself, and ${${TargetSrcList}} is the expanded list\n",
        "Line" : 232,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# MAKE options\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#add_custom_target(vars\n\n#  COMMAND ${CMAKE_COMMAND} -H${CMAKE_SOURCE_DIR} -B${CMAKE_BINARY_DIR} -LA\n\n#)\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# Configure files\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# Srcs and Targets:\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Copy configuration files to the build directory\n\n#foreach(File etc/hs-replay.config etc/logger.config etc/hs-secdef.txt)\n\n#  configure_file(${CMAKE_CURRENT_SOURCE_DIR}/${File}\n\n#                 ${CMAKE_CURRENT_BINARY_DIR}/${File} COPYONLY)\n\n#endforeach(File)\n",
        "Line" : 282,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#===============================================================================\n\n# Installation\n\n#===============================================================================\n",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#===============================================================================\n\n# Uninstallation\n\n# Prereq: copy the uninstall.cmake file to the appropriate CMAKE_MODULE_PATH.\n\n#===============================================================================\n",
        "Line" : 314,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#add_custom_target(\n\n#  uninstall \"${CMAKE_COMMAND}\" -P \"${CMAKE_MODULE_PATH}/uninstall.cmake\"\n\n#)\n",
        "Line" : 322,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#===============================================================================\n\n# CTEST options\n\n#===============================================================================\n",
        "Line" : 326,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#===============================================================================\n\n# Documentation options\n\n#===============================================================================\n\n# add a target to generate API documentation with Doxygen\n",
        "Line" : 333,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Post-install script (installation of symlinks):\n",
        "Line" : 350,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 37
    },
    "Makefile" : {
      "ObjectId" : "54bb0d4273dc334c10ed0e3d61184a78295bc56f",
      "LastModified" : "2016-07-22T04:28:44Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# vim:ts=4:sw=4:et\n\n#-------------------------------------------------------------------------------\n\n# Makefile helper for cmake\n\n#-------------------------------------------------------------------------------\n\n# Copyright (c) 2015 Serge Aleynikov\n\n# Date: 2014-08-12\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "build-aux/install-symlinks.cmake" : {
      "ObjectId" : "451293b2a076548a8243cce18315b4e0d85ec32b",
      "LastModified" : "2015-12-04T03:53:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# vim:ts=2:sw=2:et\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "d1f98d3d44adc33f4491e9790a2010775c1ed8cf",
      "LastModified" : "2018-08-10T03:01:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# vim:ts=2:sw=2:et\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# this is the \"object library\" target: compiles the sources only once\n\n#add_library(objlib OBJECT ${UTXX_SRCS})\n\n# shared libraries need PIC\n\n#set_target_properties(${objlib} PROPERTIES POSITION_INDEPENDENT_CODE 1)\n\n#set_property(TARGET ${objlib} PROPERTY POSITION_INDEPENDENT_CODE 1)\n\n# actual shared and static libraries built from the same object files\n\n#add_library(${PROJECT_NAME} SHARED $<TARGET_OBJECTS:objlib>)\n\n#add_library(${PROJECT_NAME}_static STATIC $<TARGET_OBJECTS:objlib>)\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# In the install below we split library installation in a separate library clause\n\n# so that it's possible to build/install both Release and Debug versions of the\n\n# library and then include that into a package\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "8a9dbc65f6104b3c6cebcd96c612c1d24e1f4c98",
      "LastModified" : "2018-08-10T03:01:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# vim:ts=2:sw=2:et\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This must be AFTER link_directories\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "CMAKE" : 4,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 1362
}