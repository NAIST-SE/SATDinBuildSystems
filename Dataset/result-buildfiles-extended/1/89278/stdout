{
  "Repository" : "89278",
  "Revision" : "HEAD",
  "ObjectId" : "6d057e5cf8882b34b689b79ba089ef9cce413ee1",
  "CommitTime" : "2019-04-17T15:10:13Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "41b7a7e2acec137ef97a3f3d1d2bba06f2c7964a",
      "LastModified" : "2019-03-12T15:21:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Find libraries\n\n#\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Look for C library functions\n\n#\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is available on -ldl in glibc, but some systems (such as OpenBSD)\n\n# will bundle these in the C library.  This isn't required for glibc anyway,\n\n# as there's getauxval(), with a fallback to reading the link\n\n# /proc/self/exe.\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Ensure compiler is compatible with GNU99 standard\n\n#\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Check for GCC builtin functions\n\n#\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# Look for Valgrind header\n\n#\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# Check if immediate binding and read-only global offset table flags\n\n# can be used\n\n#\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# These warnings are only supported by GCC, and some only in newer versions.\n\n#\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n# Generate lwan-build-config.h\n\n#\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\n\n# Generate pkg-config file\n\n#\n",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\n\n# Set up testsuite and benchmark targets\n\n#\n",
        "Line" : 287,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "c80f7c3156fa49db5403b50b2235962a977f9870",
      "LastModified" : "2019-02-08T15:46:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/bin/CMakeLists.txt" : {
      "ObjectId" : "5ff236870453af6edd111d120bb829d87bcd6e01",
      "LastModified" : "2019-03-12T15:21:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/bin/lwan/CMakeLists.txt" : {
      "ObjectId" : "6931ee0452bea958c306c70a36e16a548d18bc04",
      "LastModified" : "2018-02-16T15:09:43Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/bin/testrunner/CMakeLists.txt" : {
      "ObjectId" : "8fba9996b5636767195a596d87b3b21355698c80",
      "LastModified" : "2018-01-15T17:11:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/bin/tools/CMakeLists.txt" : {
      "ObjectId" : "ef91abd2d912789b0c176230d687a1f7444eec2d",
      "LastModified" : "2018-04-05T16:17:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/cmake/CodeCoverage.cmake" : {
      "ObjectId" : "30d0147bd30c2dafe2ffc6908a3bca89b4f6de59",
      "LastModified" : "2018-04-05T16:17:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2012 - 2015, Lars Bilke\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without modification,\n\n# are permitted provided that the following conditions are met:\n\n#\n\n# 1. Redistributions of source code must retain the above copyright notice, this\n\n#    list of conditions and the following disclaimer.\n\n#\n\n# 2. Redistributions in binary form must reproduce the above copyright notice,\n\n#    this list of conditions and the following disclaimer in the documentation\n\n#    and/or other materials provided with the distribution.\n\n#\n\n# 3. Neither the name of the copyright holder nor the names of its contributors\n\n#    may be used to endorse or promote products derived from this software without\n\n#    specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n\n# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\n# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\n# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\n# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n\n# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\n# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n#\n\n#\n\n# 2012-01-31, Lars Bilke\n\n# - Enable Code Coverage\n\n#\n\n# 2013-09-17, Joakim SÃ¶derberg\n\n# - Added support for Clang.\n\n# - Some additional usage instructions.\n\n#\n\n# USAGE:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# 0. (Mac only) If you use Xcode 5.1 make sure to patch geninfo as described here:\n\n#      http://stackoverflow.com/a/22404544/80480\n\n#\n\n# 1. Copy this file into your cmake modules path.\n\n#\n\n# 2. Add the following line to your CMakeLists.txt:\n\n#      INCLUDE(CodeCoverage)\n\n#\n\n# 3. Set compiler flags to turn off optimization and enable coverage:\n\n#    SET(CMAKE_CXX_FLAGS \"-g -O0 -fprofile-arcs -ftest-coverage\")\n\n#\t SET(CMAKE_C_FLAGS \"-g -O0 -fprofile-arcs -ftest-coverage\")\n\n#\n\n# 3. Use the function SETUP_TARGET_FOR_COVERAGE to create a custom make target\n\n#    which runs your test executable and produces a lcov code coverage report:\n\n#    Example:\n\n#\t SETUP_TARGET_FOR_COVERAGE(\n\n#\t\t\t\tmy_coverage_target  # Name for custom target.\n\n#\t\t\t\ttest_driver         # Name of the test driver executable that runs the tests.\n\n#\t\t\t\t\t\t\t\t\t# NOTE! This should always have a ZERO as exit code\n\n#\t\t\t\t\t\t\t\t\t# otherwise the coverage generation will not complete.\n\n#\t\t\t\tcoverage            # Name of output directory.\n\n#\t\t\t\t)\n\n#\n\n# 4. Build a Debug build:\n\n#\t cmake -DCMAKE_BUILD_TYPE=Debug ..\n\n#\t make\n\n#\t make my_coverage_target\n\n#\n\n#\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check prereqs\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Clang version 3.0.0 and greater now supports gcov as well.\n",
        "Line" : 79,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# NOT CMAKE_COMPILER_IS_GNUCC\n",
        "Line" : 85,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Param _targetname     The name of new the custom make target\n\n# Param _testrunner     The name of the target which runs the tests.\n\n#\t\t\t\t\t\tMUST return ZERO always, even on errors.\n\n#\t\t\t\t\t\tIf not, no coverage report will be created!\n\n# Param _outputname     lcov output is generated as _outputname.info\n\n#                       HTML report is generated in _outputname/index.html\n\n# Optional fourth parameter is passed as arguments to _testrunner\n\n#   Pass them in list form, e.g.: \"-j;2\" for -j 2\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# NOT LCOV_PATH\n",
        "Line" : 121,
        "CharPositionInLine" : 9
      },
      "7" : {
        "Text" : "# NOT GENHTML_PATH\n",
        "Line" : 125,
        "CharPositionInLine" : 9
      },
      "8" : {
        "Text" : "# Setup target\n",
        "Line" : 132,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# Cleanup lcov\n",
        "Line" : 135,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Run tests\n",
        "Line" : 139,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Capturing lcov counters and generating report\n",
        "Line" : 142,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Show info where to find the report\n",
        "Line" : 152,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# SETUP_TARGET_FOR_COVERAGE\n",
        "Line" : 158,
        "CharPositionInLine" : 14
      },
      "14" : {
        "Text" : "# GCOV_PATH\n",
        "Line" : 160,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# GCOV_PATH\n",
        "Line" : 166,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 16
    },
    "src/cmake/EnableCFlag.cmake" : {
      "ObjectId" : "fc721f04336e459f60ce9e66ebb7c9a2382a65c9",
      "LastModified" : "2018-04-05T16:17:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/cmake/TrySanitizer.cmake" : {
      "ObjectId" : "5d86cf0dbd2f7ff9589b117a8a397fe2f83f07b8",
      "LastModified" : "2017-10-06T04:00:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/cmake/lwan-build-config.h.cmake" : {
      "ObjectId" : "4cd1ab79d3cf1e6e089a8c47d3c2bd4987d2fd30",
      "LastModified" : "2018-09-10T05:44:01Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/*\n * lwan - simple web server\n * Copyright (c) 2016 Leandro A. F. Pereira <leandro@hardinfo.org>\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/* API available in Glibc/Linux, but possibly not elsewhere */",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/* Compiler builtins for specific CPU instruction support */",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* C11 _Static_assert() */",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* Libraries */",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* Valgrind support for coroutines */",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/cmake/lwan.pc.cmake" : {
      "ObjectId" : "fe3ee4c9ba4db134a32f3f0d09d38391deba6e7a",
      "LastModified" : "2018-04-05T16:17:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/lib/CMakeLists.txt" : {
      "ObjectId" : "1739a910d7259a898b45e0ca2758712f5fa01cc6",
      "LastModified" : "2019-03-12T15:21:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Can't call add_library() without source files. Create an empty .c file,\n\n# then link with the static library just recently built.\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build mimegen\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/samples/CMakeLists.txt" : {
      "ObjectId" : "031b2b4f883001d7ee39b839644575bbebda1fc1",
      "LastModified" : "2018-11-09T16:35:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/samples/clock/CMakeLists.txt" : {
      "ObjectId" : "69d335258a237eef28934542586ebd6de2742129",
      "LastModified" : "2018-11-09T16:35:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/samples/freegeoip/CMakeLists.txt" : {
      "ObjectId" : "d98e52ab61ebb2a151e91dfc96a3260ee7177b7b",
      "LastModified" : "2018-04-05T16:17:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/samples/hello-no-meta/CMakeLists.txt" : {
      "ObjectId" : "8d70abdd4ff7c8dd096e9930159d22a136ec0dd5",
      "LastModified" : "2018-06-30T14:24:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/samples/hello/CMakeLists.txt" : {
      "ObjectId" : "d9afd70d3b4697168bba3de1ce113135e8b955bb",
      "LastModified" : "2018-06-30T14:24:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/samples/techempower/CMakeLists.txt" : {
      "ObjectId" : "064808498b133d4f6113cf11593c83844441d815",
      "LastModified" : "2018-06-30T14:24:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/samples/websocket/CMakeLists.txt" : {
      "ObjectId" : "89cad2684a0cc60a41a1d429bf3ee79795cf16b9",
      "LastModified" : "2018-11-09T16:35:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 18,
    "CMAKESOURCE" : 1
  },
  "ElapsedTime" : 1274
}