{
  "Repository" : "49221701",
  "Revision" : "HEAD",
  "ObjectId" : "bbb0a472c7b2f592c8d167eedf46221626f881df",
  "CommitTime" : "2018-03-19T19:03:25Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "f699ea5801af2036342e2157e8c24745b66005c0",
      "LastModified" : "2018-03-19T19:03:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (c) 2003-2018, Xively All rights reserved.\n\n#\n\n# This is part of the Xively C Client library,\n\n# it is licensed under the BSD 3-Clause license.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Reserve 'all' as the default build target\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TLS related configuration\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#detect if the build happen on Travis\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#gather all binary directories\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#default test target always present cause tiny test cross-compiles\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# default output file declaration\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#the integration tests does not cross-compile atm\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# protobuf compilation\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# defining dependencies for object files generated by gcc -MM\n\n# Autodependencies with GNU make: http://scottmcpeak.com/autodepend/autodepend.html\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# specific compiler flags for utest objects\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# specific compiler flags for libxively_driver\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# gather all of the binary directories\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "###\n\n#### EXAMPLES\n\n###\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "###\n\n#### TEST TOOLS\n\n###\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#$@\n",
        "Line" : 167,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "###\n\n#### TESTS\n\n###\n\n# dependencies for unit test binary\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# dependencies for integration test binary\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# new rule added in order not to change too much in this file\n\n# without a vision of how we are going to handle cross platform\n\n# compilation of examples and tests\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# export required by wmsdk_example rule which is\n\n# using the external makefile located in wmsdk examples\n\n# until further decisions made of how we should maintain\n\n# cross platform compilation of tests and examples I will\n\n# use this extra rule in order to build examples binaries that's wmsdk specific\n",
        "Line" : 226,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 20
    },
    "examples/Makefile" : {
      "ObjectId" : "87823b5248822cd143089d09427be82274d5fa1d",
      "LastModified" : "2018-03-19T19:03:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (c) 2003-2018, Xively All rights reserved.\n\n#\n\n# This is part of the Xively C Client library,\n\n# it is licensed under the BSD 3-Clause license.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Batch Build Tool for Xively C Client Examples\n\n#\n\n# These Examples are built against a pre-built Xively C Client library.\n\n#\n\n# The pre-built Xively C Client library paths are in XI_CLIENT_INC_PATH\n\n# and XI_CLIENT_LIB_PATH in rules.mk. Their default values reflect the\n\n# original relative location of examples to Xively C Client. If this\n\n# relative location is altered the varables shall be adjusted either\n\n# directly in rules.mk or in commandline like\n\n# 'make XI_CLIENT_INC_PATH=new/path/include XI_CLIENT_LIB_PATH=new/path/obj/osx'.\n\n#\n\n# Examples can be batch-built with 'make' in this directory or one-by-one\n\n# 'make' in each example directory.\n\n#\n\n# \tTargets:\n\n#\n\n# \t\tall: \tbuilds all examples\n\n#\t\tclean: \tcleans all examples\n\n#\n\n#\t\t[EXAMPLE_NAME]: builds only the specified example\n\n#\t\t\t\t\t\t'make mqtt_logic_example'\n\n#\n\n# Result binaries are under [EXAMPLE_NAME]/bin\n\n#\n\n# If you wish to create your own application based on a Xively example source and\n\n# makefile structure, then the following steps are suggested:\n\n#\t\t- create a new subdirectory under examples: my_new_example\n\n#\t\t- copy mqtt_logic_example/Makefile to my_new_example/Makefile and initialize\n\n#\t\t  variable XI_EXAMPLE_NAME with 'my_new_example'\n\n#\t\t- put your code into my_new_exapmle/src/my_new_example.c\n\n#\t\t- add the new example to the examples list: XI_EXAMPLES_ALL += my_new_example\n\n#\t\t- execute 'make my_new_example'\n\n#\n\n# It should be 'easy' to alter these makefiles to cross-compile. This requires the\n\n# following modification in rules.mk:\n\n# \t\t- available cross-compiled Xively C Client library\n\n#\t\t- changing the compiler and linker variables: CC and AR\n\n# \t\t- adjusting linked libraries\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/esp32/xively_demo/Makefile" : {
      "ObjectId" : "fcfb31cc4aef7156c78612cf29a96462d62cc77d",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# This is a project Makefile. It is assumed the directory this Makefile resides in is a\n\n# project subdirectory.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/firmware_update/Makefile" : {
      "ObjectId" : "5b2b9e2123701fe9aebb34a3ff38245dd7d66e68",
      "LastModified" : "2018-03-19T19:03:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (c) 2003-2018, Xively All rights reserved.\n\n#\n\n# This is part of the Xively C Client library,\n\n# it is licensed under the BSD 3-Clause license.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/mqtt_last_will/Makefile" : {
      "ObjectId" : "b257c2c9bb36c978661fd081f79674a919f12b87",
      "LastModified" : "2018-03-19T19:03:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (c) 2003-2018, Xively All rights reserved.\n\n#\n\n# This is part of the Xively C Client library,\n\n# it is licensed under the BSD 3-Clause license.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/mqtt_logic_consumer/Makefile" : {
      "ObjectId" : "a7524362688e735b9de6a8fc19f95e4fef441e2c",
      "LastModified" : "2018-03-19T19:03:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (c) 2003-2018, Xively All rights reserved.\n\n#\n\n# This is part of the Xively C Client library,\n\n# it is licensed under the BSD 3-Clause license.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/mqtt_logic_example/Makefile" : {
      "ObjectId" : "d5708edcb046c1f28853a915f564263641c1dc1b",
      "LastModified" : "2018-03-19T19:03:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (c) 2003-2018, Xively All rights reserved.\n\n#\n\n# This is part of the Xively C Client library,\n\n# it is licensed under the BSD 3-Clause license.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/mqtt_logic_example_two_contexts/Makefile" : {
      "ObjectId" : "637e8c6a8a7c7908e981cba4e38f9d7f2bbe154d",
      "LastModified" : "2018-03-19T19:03:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (c) 2003-2018, Xively All rights reserved.\n\n#\n\n# This is part of the Xively C Client library,\n\n# it is licensed under the BSD 3-Clause license.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/mqtt_logic_producer/Makefile" : {
      "ObjectId" : "f572eeab9427f6815eee750a2f58ee1194479ef6",
      "LastModified" : "2018-03-19T19:03:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (c) 2003-2018, Xively All rights reserved.\n\n#\n\n# This is part of the Xively C Client library,\n\n# it is licensed under the BSD 3-Clause license.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/senml_serializer/Makefile" : {
      "ObjectId" : "0bd38203fa5ccde97f74cfc31eb7b0e28176a055",
      "LastModified" : "2018-03-19T19:03:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (c) 2003-2018, Xively All rights reserved.\n\n#\n\n# This is part of the Xively C Client library,\n\n# it is licensed under the BSD 3-Clause license.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/examples/wmsdk/Makefile" : {
      "ObjectId" : "02e9eb8476007f1d1fda73b44a56f7c4d7bc30d9",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (C) 2008-2013 Marvell International Ltd.\n\n# All Rights Reserved.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Batch Build Applications using GNU Cross-Compiler and Make.\n\n#\n\n# Usage Guide:\n\n#\n\n#     The Applications are built against a pre-built SDK\n\n#     and for a specified hardware board.\n\n#\n\n#     The pre-built SDK location is passed using SDK_PATH\n\n#     variable. It should be an absolute location.\n\n#\n\n#     The board file is passed using the BOARD_FILE variable.\n\n#\n\n#     all:     build all the apps\n\n#     clean:   cleans the apps directory to pristine state\n\n#\n\n#     install: install the app artifacts in location pointed\n\n#              to by INSTALL_DIR variable.\n\n#     The Makefile simply does recursive build for all the\n\n#     apps.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Changes made by Team Left Shark\n\n#\n\n#\t  The pre-built SDK location is passed using WMSDK_PATH not SDK_PATH\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Location of GNU toolchain specific files\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Install in ./bin if no INSTALL_DIR is passed\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# All the apps to build\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Install only a select few apps\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Convenience Checking rules\n\n#\n\n# check_perm:\n\n#  -- Ensure that the tarball is extracted with the right permissions\n\n# check_sdk:\n\n#   -- Ensure that SDK_PATH variable is set and points to a pre-built\n\n#      SDK\n\n#\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#   Ensure that SDK_PATH variable is set.\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "src/examples/wmsdk/async_test_app/Makefile" : {
      "ObjectId" : "3405a550d193cc59b029cee7baa1b97e68a7e5a6",
      "LastModified" : "2016-10-24T10:51:31Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (C) 2008-2013 Marvell International Ltd.\n\n# All Rights Reserved.\n\n#\n\n# Application Makefile\n\n#\n\n#    Builds and Installs Application ELF Executable Image (.axf)\n\n#    and image suitable for flashing (.bin).\n\n#\n\n#    The Makefile is built using Makefile.targets (and Makefile.include)\n\n#    available in $(TOOLCHAIN_DIR).\n\n#\n\n# Usage:\n\n#\n\n#     Targets:\n\n#\n\n#\t  all: Builds the firmware binary image in both ELF (axf) format\n\n#          (suitable for loading into RAM) and bin format (suitable\n\n#          for flashing)\n\n#\n\n#          Should be called with SDK_PATH set to root of a pre-built\n\n#          SDK against which the application should be built.\n\n#\n\n# \t\t   If BOARD_FILE is set (to the absolute path to the file),\n\n#\t\t   then the file is copied locally (to $(SRC_DIR)/board.c) and\n\n#          then used for build. If its not present, then the application\n\n#          sources should have the needed board-specific functions.\n\n#\n\n#     clean: Cleans all the build artifacts\n\n#\n\n#     install: Installs ELF image, Bin Image, and MAP file to\n\n#              $(INSTALL_DIR). By default INSTALL_DIR = ./bin.\n\n#\n\n# Description:\n\n#\n\n#   Minimally, in this file, only the following need to be specified.\n\n#\n\n#   SRCS     = list of source files\n\n#   DST_NAME = prefix to be used for generated build artifcats.\n\n#\n\n#   Default Variables:\n\n#\n\n#   A number of variables are used in Makefile.targets that can be\n\n#   overridden here.\n\n#\n\n#   SRC_DIR:  directory for source files (default ./src)\n\n#   OBJ_DIR:  directory for intermediate object files (default ./obj)\n\n#   BIN_DIR:  directory for final build artifacts (default ./bin)\n\n#\n\n#   LDSCRIPT: Linker script (default $(TOOLCHAIN_DIR)/mc200.ld)\n\n#   EXTRACFLAGS: pass any additional CFLAGS to be passed to the C Compiler.\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/examples/wmsdk/hello_world/Makefile" : {
      "ObjectId" : "c40f79c5b7e8c78d7218dde37dffbf3bb9fc6b09",
      "LastModified" : "2016-10-24T10:51:31Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (C) 2008-2013 Marvell International Ltd.\n\n# All Rights Reserved.\n\n#\n\n# Application Makefile\n\n#\n\n#    Builds and Installs Application ELF Executable Image (.axf)\n\n#    and image suitable for flashing (.bin).\n\n#\n\n#    The Makefile is built using Makefile.targets (and Makefile.include)\n\n#    available in $(TOOLCHAIN_DIR).\n\n#\n\n# Usage:\n\n#\n\n#     Targets:\n\n#\n\n#\t  all: Builds the firmware binary image in both ELF (axf) format\n\n#          (suitable for loading into RAM) and bin format (suitable\n\n#          for flashing)\n\n#\n\n#          Should be called with SDK_PATH set to root of a pre-built\n\n#          SDK against which the application should be built.\n\n#\n\n# \t\t   If BOARD_FILE is set (to the absolute path to the file),\n\n#\t\t   then the file is copied locally (to $(SRC_DIR)/board.c) and\n\n#          then used for build. If its not present, then the application\n\n#          sources should have the needed board-specific functions.\n\n#\n\n#     clean: Cleans all the build artifacts\n\n#\n\n#     install: Installs ELF image, Bin Image, and MAP file to\n\n#              $(INSTALL_DIR). By default INSTALL_DIR = ./bin.\n\n#\n\n# Description:\n\n#\n\n#   Minimally, in this file, only the following need to be specified.\n\n#\n\n#   SRCS     = list of source files\n\n#   DST_NAME = prefix to be used for generated build artifcats.\n\n#\n\n#   Default Variables:\n\n#\n\n#   A number of variables are used in Makefile.targets that can be\n\n#   overridden here.\n\n#\n\n#   SRC_DIR:  directory for source files (default ./src)\n\n#   OBJ_DIR:  directory for intermediate object files (default ./obj)\n\n#   BIN_DIR:  directory for final build artifacts (default ./bin)\n\n#\n\n#   LDSCRIPT: Linker script (default $(TOOLCHAIN_DIR)/mc200.ld)\n\n#   EXTRACFLAGS: pass any additional CFLAGS to be passed to the C Compiler.\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/examples/wmsdk/mqtt_logic_test/Makefile" : {
      "ObjectId" : "19d7b4d5b1326d7293ed56e54df1634943abfb53",
      "LastModified" : "2016-10-24T10:51:31Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (C) 2008-2013 Marvell International Ltd.\n\n# All Rights Reserved.\n\n#\n\n# Application Makefile\n\n#\n\n#    Builds and Installs Application ELF Executable Image (.axf)\n\n#    and image suitable for flashing (.bin).\n\n#\n\n#    The Makefile is built using Makefile.targets (and Makefile.include)\n\n#    available in $(TOOLCHAIN_DIR).\n\n#\n\n# Usage:\n\n#\n\n#     Targets:\n\n#\n\n#\t  all: Builds the firmware binary image in both ELF (axf) format\n\n#          (suitable for loading into RAM) and bin format (suitable\n\n#          for flashing)\n\n#\n\n#          Should be called with SDK_PATH set to root of a pre-built\n\n#          SDK against which the application should be built.\n\n#\n\n# \t\t   If BOARD_FILE is set (to the absolute path to the file),\n\n#\t\t   then the file is copied locally (to $(SRC_DIR)/board.c) and\n\n#          then used for build. If its not present, then the application\n\n#          sources should have the needed board-specific functions.\n\n#\n\n#     clean: Cleans all the build artifacts\n\n#\n\n#     install: Installs ELF image, Bin Image, and MAP file to\n\n#              $(INSTALL_DIR). By default INSTALL_DIR = ./bin.\n\n#\n\n# Description:\n\n#\n\n#   Minimally, in this file, only the following need to be specified.\n\n#\n\n#   SRCS     = list of source files\n\n#   DST_NAME = prefix to be used for generated build artifcats.\n\n#\n\n#   Default Variables:\n\n#\n\n#   A number of variables are used in Makefile.targets that can be\n\n#   overridden here.\n\n#\n\n#   SRC_DIR:  directory for source files (default ./src)\n\n#   OBJ_DIR:  directory for intermediate object files (default ./obj)\n\n#   BIN_DIR:  directory for final build artifacts (default ./bin)\n\n#\n\n#   LDSCRIPT: Linker script (default $(TOOLCHAIN_DIR)/mc200.ld)\n\n#   EXTRACFLAGS: pass any additional CFLAGS to be passed to the C Compiler.\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/experimental/heap_allocator/Makefile" : {
      "ObjectId" : "3d5f973c6cb38979780d1cb225d7330acbd0b38d",
      "LastModified" : "2018-03-19T19:03:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (c) 2003-2018, Xively All rights reserved.\n\n#\n\n# This is part of the Xively C Client library,\n\n# it is licensed under the BSD 3-Clause license.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/import/cmocka/CMakeLists.txt" : {
      "ObjectId" : "13f1190a5e3b254dc0a6fed6cbc7e56613d82abe",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Required cmake version\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# global needed variables\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# SOVERSION scheme: CURRENT.AGE.REVISION\n\n#   If there was an incompatible interface change:\n\n#     Increment CURRENT. Set AGE and REVISION to 0\n\n#   If there was a compatible interface change:\n\n#     Increment AGE. Set REVISION to 0\n\n#   If the source code was changed, but there were no interface changes:\n\n#     Increment REVISION.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# where to look first for cmake modules, before ${CMAKE_ROOT}/Modules/ is checked\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# add definitions\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# disallow in-source build\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# config.h checks\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# check subdirectories\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# pkg-config file\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# cmake config files\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "src/import/cmocka/CPackConfig.cmake" : {
      "ObjectId" : "5666c5a3dfc35d00d244091c5c5d321eb8529960",
      "LastModified" : "2016-10-24T10:51:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# For help take a look at:\n\n# http://www.cmake.org/Wiki/CMake:CPackConfiguration\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### general settings\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "### versions\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "### source generator\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "### nsis generator\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#set(CPACK_COMPONENT_APPLICATIONS_GROUP \"Runtime\")\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/import/cmocka/CTestConfig.cmake" : {
      "ObjectId" : "f93a98102b2bad4952d155ecd2629d66591af45a",
      "LastModified" : "2016-10-24T10:51:31Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/import/cmocka/ConfigureChecks.cmake" : {
      "ObjectId" : "c0dd13d3525bc13b77730e8ba61336d63bce59f9",
      "LastModified" : "2016-10-24T10:51:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Remove whitespaces from the argument.\n\n# This is needed for CC=\"ccache gcc\" cmake ..\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# DEFINITIONS\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# HEADER FILES\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# FUNCTIONS\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# OPTIONS\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ENDIAN\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/import/cmocka/DefineOptions.cmake" : {
      "ObjectId" : "39491a2fe85cef30ff22b3be5c32b86d4a8f07e2",
      "LastModified" : "2016-10-24T10:51:31Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/import/cmocka/cmake/Modules/AddCMockaTest.cmake" : {
      "ObjectId" : "19de66e31e5662bdf15d9863b1e298c07dbd5469",
      "LastModified" : "2016-10-24T10:51:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - ADD_CMOCKA_TEST(test_name test_source linklib1 ... linklibN)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2007      Daniel Gollub <dgollub@suse.de>\n\n# Copyright (c) 2007-2010 Andreas Schneider <asn@cynapses.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/import/cmocka/cmake/Modules/CheckCCompilerFlagSSP.cmake" : {
      "ObjectId" : "2fe43954a91a0eba4b758c50287ed8eeaa8c018a",
      "LastModified" : "2016-10-24T10:51:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check whether the C compiler supports a given flag in the\n\n# context of a stack checking compiler option.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CHECK_C_COMPILER_FLAG_SSP(FLAG VARIABLE)\n\n#\n\n#  FLAG - the compiler flag\n\n#  VARIABLE - variable to store the result\n\n#\n\n#  This actually calls check_c_source_compiles.\n\n#  See help for CheckCSourceCompiles for a listing of variables\n\n#  that can modify the build.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Copyright (c) 2006, Alexander Neundorf, <neundorf@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/import/cmocka/cmake/Modules/DefineCMakeDefaults.cmake" : {
      "ObjectId" : "22eda6fae131921ec267d30b0d97b198e3eb49d5",
      "LastModified" : "2016-10-24T10:51:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Always include srcdir and builddir in include path\n\n# This saves typing ${CMAKE_CURRENT_SOURCE_DIR} ${CMAKE_CURRENT_BINARY} in\n\n# about every subdir\n\n# since cmake 2.4.0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Put the include dirs which are in the source or build tree\n\n# before all other include dirs, so the headers in the sources\n\n# are prefered over the already installed ones\n\n# since cmake 2.4.1\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use colored output\n\n# since cmake 2.4.0\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Define the generic version of the libraries here\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set the default build type to release with debug info\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Create the compile command database for clang by default\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/import/cmocka/cmake/Modules/DefineCompilerFlags.cmake" : {
      "ObjectId" : "14d473fc001db604d7d58e73a137135d73b5064e",
      "LastModified" : "2016-10-24T10:51:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define system dependent compiler flags\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Define GNUCC compiler flags\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# add -Wconversion ?\n",
        "Line" : 12,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# with -fPIC\n",
        "Line" : 18,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "#\n\n# Check for large filesystem support\n\n#\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# with large file support\n",
        "Line" : 46,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# with large file support\n",
        "Line" : 56,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Use secure functions by defaualt and suppress warnings about\n\n#\"deprecated\" functions\n",
        "Line" : 74,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "src/import/cmocka/cmake/Modules/DefineInstallationPaths.cmake" : {
      "ObjectId" : "88e08cadf2381ea01680f42a32f10292c0197b72",
      "LastModified" : "2016-10-24T10:51:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Suffix for Linux\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# The following are directories where stuff will be installed to\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Same same\n",
        "Line" : 98,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "src/import/cmocka/cmake/Modules/DefinePlatformDefaults.cmake" : {
      "ObjectId" : "46c3185a6a6cff4d3557360e0c6ffb208a799bfb",
      "LastModified" : "2016-10-24T10:51:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set system vars\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/import/cmocka/cmake/Modules/FindNSIS.cmake" : {
      "ObjectId" : "08d839b51281743c30cfdd22d9dca8e2df7927e4",
      "LastModified" : "2016-10-24T10:51:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find NSIS\n\n# Once done this will define\n\n#\n\n#  NSIS_FOUND - system has NSIS\n\n#  NSIS_MAKE - NSIS creator executable\n\n#\n\n#=============================================================================\n\n#  Copyright (c) 2010-2013 Andreas Schneider <asn@cryptomilk.org>\n\n#\n\n#  Distributed under the OSI-approved BSD License (the \"License\");\n\n#  see accompanying file Copyright.txt for details.\n\n#\n\n#  This software is distributed WITHOUT ANY WARRANTY; without even the\n\n#  implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n#  See the License for more information.\n\n#=============================================================================\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/import/cmocka/cmake/Modules/MacroEnsureOutOfSourceBuild.cmake" : {
      "ObjectId" : "a2e9480992696ab24318303b337689fbab019722",
      "LastModified" : "2016-10-24T10:51:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - MACRO_ENSURE_OUT_OF_SOURCE_BUILD(<errorMessage>)\n\n# MACRO_ENSURE_OUT_OF_SOURCE_BUILD(<errorMessage>)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, Alexander Neundorf, <neundorf@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/import/cmocka/cmake/Modules/UseDoxygen.cmake" : {
      "ObjectId" : "72c384d21bb2b51bfea484ec53b603d611108790",
      "LastModified" : "2016-10-24T10:51:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Run Doxygen\n\n#\n\n# Adds a doxygen target that runs doxygen to generate the html\n\n# and optionally the LaTeX API documentation.\n\n# The doxygen target is added to the doc target as a dependency.\n\n# i.e.: the API documentation is built with:\n\n#  make doc\n\n#\n\n# USAGE: GLOBAL INSTALL\n\n#\n\n# Install it with:\n\n#  cmake ./ && sudo make install\n\n# Add the following to the CMakeLists.txt of your project:\n\n#  include(UseDoxygen OPTIONAL)\n\n# Optionally copy Doxyfile.in in the directory of CMakeLists.txt and edit it.\n\n#\n\n# USAGE: INCLUDE IN PROJECT\n\n#\n\n#  set(CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR})\n\n#  include(UseDoxygen)\n\n# Add the Doxyfile.in and UseDoxygen.cmake files to the projects source directory.\n\n#\n\n#\n\n# CONFIGURATION\n\n#\n\n# To configure Doxygen you can edit Doxyfile.in and set some variables in cmake.\n\n# Variables you may define are:\n\n#  DOXYFILE_SOURCE_DIR - Path where the Doxygen input files are.\n\n#  \tDefaults to the current source directory.\n\n#  DOXYFILE_EXTRA_SOURCES - Additional source diretories/files for Doxygen to scan.\n\n#  \tThe Paths should be in double quotes and separated by space. e.g.:\n\n#  \t \"${CMAKE_CURRENT_BINARY_DIR}/foo.c\" \"${CMAKE_CURRENT_BINARY_DIR}/bar/\"\n\n#  \n\n#  DOXYFILE_OUTPUT_DIR - Path where the Doxygen output is stored.\n\n#  \tDefaults to \"${CMAKE_CURRENT_BINARY_DIR}/doc\".\n\n#  \n\n#  DOXYFILE_LATEX - ON/OFF; Set to \"ON\" if you want the LaTeX documentation\n\n#  \tto be built.\n\n#  DOXYFILE_LATEX_DIR - Directory relative to DOXYFILE_OUTPUT_DIR where\n\n#  \tthe Doxygen LaTeX output is stored. Defaults to \"latex\".\n\n#  \n\n#  DOXYFILE_HTML_DIR - Directory relative to DOXYFILE_OUTPUT_DIR where\n\n#  \tthe Doxygen html output is stored. Defaults to \"html\".\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#  Copyright (c) 2009, 2010, 2011 Tobias Rautenkranz <tobias@rautenkranz.ch>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## LaTeX\n",
        "Line" : 106,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 3
    },
    "src/import/cmocka/cmocka.pc.cmake" : {
      "ObjectId" : "c6f7433ed511749c6684b04012ef040239531cd3",
      "LastModified" : "2016-10-24T10:51:31Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/import/cmocka/config.h.cmake" : {
      "ObjectId" : "78cce7a6e04e55dbfc05c4307a357c5566a4fc8a",
      "LastModified" : "2016-10-24T10:51:31Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/* Name of package */",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/* Version number of package */",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/************************** HEADER FILES *************************/",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* Define to 1 if you have the <assert.h> header file. */",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* Define to 1 if you have the <dlfcn.h> header file. */",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* Define to 1 if you have the <inttypes.h> header file. */",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/* Define to 1 if you have the <io.h> header file. */",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/* Define to 1 if you have the <malloc.h> header file. */",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "/* Define to 1 if you have the <memory.h> header file. */",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "/* Define to 1 if you have the <setjmp.h> header file. */",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "/* Define to 1 if you have the <signal.h> header file. */",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "/* Define to 1 if you have the <stdarg.h> header file. */",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "/* Define to 1 if you have the <stddef.h> header file. */",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "/* Define to 1 if you have the <stdint.h> header file. */",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "/* Define to 1 if you have the <stdio.h> header file. */",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "/* Define to 1 if you have the <stdlib.h> header file. */",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "/* Define to 1 if you have the <strings.h> header file. */",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "/* Define to 1 if you have the <string.h> header file. */",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "/* Define to 1 if you have the <sys/stat.h> header file. */",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "/* Define to 1 if you have the <sys/types.h> header file. */",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "/* Define to 1 if you have the <time.h> header file. */",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "/* Define to 1 if you have the <unistd.h> header file. */",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "/**************************** STRUCTS ****************************/",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "/*************************** FUNCTIONS ***************************/",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "/* Define to 1 if you have the `calloc' function. */",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "/* Define to 1 if you have the `exit' function. */",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "/* Define to 1 if you have the `fprintf' function. */",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "/* Define to 1 if you have the `snprintf' function. */",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "/* Define to 1 if you have the `_snprintf' function. */",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "/* Define to 1 if you have the `_snprintf_s' function. */",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "/* Define to 1 if you have the `vsnprintf' function. */",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "/* Define to 1 if you have the `_vsnprintf' function. */",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "/* Define to 1 if you have the `_vsnprintf_s' function. */",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "/* Define to 1 if you have the `free' function. */",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "/* Define to 1 if you have the `longjmp' function. */",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "/* Define to 1 if you have the `malloc' function. */",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "/* Define to 1 if you have the `memcpy' function. */",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "/* Define to 1 if you have the `memset' function. */",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "/* Define to 1 if you have the `printf' function. */",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "/* Define to 1 if you have the `setjmp' function. */",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "/* Define to 1 if you have the `signal' function. */",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "/* Define to 1 if you have the `snprintf' function. */",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "/* Define to 1 if you have the `strcmp' function. */",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "/* Define to 1 if you have the `strcpy' function. */",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "/* Define to 1 if you have the `vsnprintf' function. */",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "/* Define to 1 if you have the `strsignal' function. */",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "/* Define to 1 if you have the `clock_gettime' function. */",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "/**************************** OPTIONS ****************************/",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "/* Check if we have TLS support with GCC */",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "/* Check if we have TLS support with MSVC */",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "/* Check if we have CLOCK_REALTIME for clock_gettime() */",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "/*************************** ENDIAN *****************************/",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "/* Define WORDS_BIGENDIAN to 1 if your processor stores words with the most\n   significant byte first (like Motorola and SPARC, unlike Intel). */",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 53
    },
    "src/import/cmocka/doc/CMakeLists.txt" : {
      "ObjectId" : "31242811dd4520b20a8344dc540033bf233cec57",
      "LastModified" : "2016-10-24T10:51:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Build the documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/import/cmocka/example/CMakeLists.txt" : {
      "ObjectId" : "e46a4fceeca0d37937c73eac3070c429a055c5f2",
      "LastModified" : "2016-10-24T10:51:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# IMPORTANT NOTE: The set_tests_properties(), below, internally\n\n# stores its name/value pairs with a semicolon delimiter.\n\n# because of this we must protect the semicolons in the path\n\n#\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "### The most simple test\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "### Calulator test\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# FIXME These tests fail on Windows when run with ctest but look correct excuted manually.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "### Allocate module test\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# This is a test that should detect leaks and overflows and will fail for that\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "### Assert macro test\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "### Assert module test\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# FIXME FAIL\n",
        "Line" : 89,
        "CharPositionInLine" : 18
      },
      "9" : {
        "Text" : "### Customer database test\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "### Key Value Test\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "### Product database test\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# TODO Execute \"$CMAKE_LINKER --help\" and check for --wrap\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "src/import/cmocka/example/chef_wrap/CMakeLists.txt" : {
      "ObjectId" : "5902438526fa02468ca6823040455f6dad5aa6be",
      "LastModified" : "2016-10-24T10:51:31Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/import/cmocka/include/CMakeLists.txt" : {
      "ObjectId" : "4cca0316b99c7add6d7059cdd47ad1a32b94be25",
      "LastModified" : "2016-10-24T10:51:31Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/import/cmocka/src/CMakeLists.txt" : {
      "ObjectId" : "95adc65d0456a227b40c20b5309c28cd6d0a99fa",
      "LastModified" : "2016-10-24T10:51:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# In order to run tests we will need to set the approriate environment\n\n# variable so that the test program can locate its dependent DLL's. First\n\n# we want to know what directory our dependent DLL was installed into:\n\n#\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/import/cmocka/tests/CMakeLists.txt" : {
      "ObjectId" : "6c67879755f8c490d1c128c874cbe68a0b6b2ed9",
      "LastModified" : "2016-10-24T10:51:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### Special Cases\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### Exceptions\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# test_assert_macros_fail\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# test_assert_macros_fail\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# test_exception_handler\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "### Output formats\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# test output of success, failure, skip, fixture failure\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "src/import/cmocka/tests/ctest-default.cmake" : {
      "ObjectId" : "e21e93c09100556447b1e83b0014773a49eccb06",
      "LastModified" : "2016-10-24T10:51:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## The directory to run ctest in.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## The hostname of the machine\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## The buildname\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## The Makefile generator to use\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## The Build configuration to use.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## The build options for the project\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#set(CTEST_CUSTOM_MEMCHECK_IGNORE torture_rand)\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## The Model to set: Nightly, Continous, Experimental\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## The URL to the git repository\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## The branch\n\n#set(CTEST_GIT_BRANCH \"--branch v0-5\")\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## Wether to enable memory checking.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## Wether to enable code coverage.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#######################################################################\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    }
  },
  "FileTypes" : {
    "CMAKE" : 22,
    "CMAKESOURCE" : 1,
    "MAKEFILE" : 15
  },
  "ElapsedTime" : 2161
}