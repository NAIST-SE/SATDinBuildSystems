{
  "Repository" : "22050818",
  "Revision" : "HEAD",
  "ObjectId" : "07ed1952527d6103146fc49c56ef0fac7a231348",
  "CommitTime" : "2018-12-17T10:05:06Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "27dc2362fb34b1096a93da1b812f3594328aa872",
      "LastModified" : "2018-12-17T09:03:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# generate gm2calc.pc file for pkg-config\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# make tag/release-* targets\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# install gm2calc.pc file\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/Eigen/FindEigen3.cmake" : {
      "ObjectId" : "9e969786089ca8ea3801be8b084c51a5782f09b5",
      "LastModified" : "2018-03-27T02:48:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Eigen3 lib\n\n#\n\n# This module supports requiring a minimum version, e.g. you can do\n\n#   find_package(Eigen3 3.1.2)\n\n# to require version 3.1.2 or newer of Eigen3.\n\n#\n\n# Once done this will define\n\n#\n\n#  EIGEN3_FOUND - system has eigen lib with correct version\n\n#  EIGEN3_INCLUDE_DIR - the eigen include directory\n\n#  EIGEN3_VERSION - eigen version\n\n#\n\n# This module reads hints about search locations from \n\n# the following enviroment variables:\n\n#\n\n# EIGEN3_ROOT\n\n# EIGEN3_ROOT_DIR\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Copyright (c) 2009 Benoit Jacob <jacob.benoit.1@gmail.com>\n\n# Redistribution and use is allowed according to the terms of the 2-clause BSD license.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# search first if an Eigen3Config.cmake is available in the system,\n\n# if successful this would set EIGEN3_INCLUDE_DIR and the rest of\n\n# the script will work as usual\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "cmake/Mathematica/FindMathematica.cmake" : {
      "ObjectId" : "a1de59294ea63b111d737d6a74486b58143aa9c3",
      "LastModified" : "2018-03-27T02:48:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Mathematica installation and provide CMake functions for its C/C++ interface\n\n#\n\n# See the FindMathematica manual for usage hints.\n\n#\n\n#=============================================================================\n\n# Copyright 2010-2018 Sascha Kratky\n\n#\n\n# Permission is hereby granted, free of charge, to any person)\n\n# obtaining a copy of this software and associated documentation)\n\n# files (the \"Software\"), to deal in the Software without)\n\n# restriction, including without limitation the rights to use,)\n\n# copy, modify, merge, publish, distribute, sublicense, and/or sell)\n\n# copies of the Software, and to permit persons to whom the)\n\n# Software is furnished to do so, subject to the following)\n\n# conditions:)\n\n#\n\n# The above copyright notice and this permission notice shall be)\n\n# included in all copies or substantial portions of the Software.)\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,)\n\n# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES)\n\n# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND)\n\n# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT)\n\n# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,)\n\n# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING)\n\n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR)\n\n# OTHER DEALINGS IN THE SOFTWARE.)\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# we need the CMakeParseArguments module\n\n# call cmake_minimum_required, but prevent modification of the CMake policy stack\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# activate select policies\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Compiler id for Apple Clang is now AppleClang\n",
        "Line" : 41,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# disallow use of the LOCATION target property\n",
        "Line" : 46,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Cygwin and MSYS do not produce workable Mathematica paths using\n\n# the $<TARGET_FILE:...> notation\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# targets may not link directly to themselves\n",
        "Line" : 57,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# utility targets may not have link dependencies\n",
        "Line" : 62,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# target in the TARGET signature of add_custom_command() must exist\n",
        "Line" : 67,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# error on non-existent target in get_target_property\n",
        "Line" : 72,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# error on non-existent dependency in add_dependencies\n",
        "Line" : 77,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# do not expand variables in target source entries\n",
        "Line" : 82,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# disallow add_custom_command SOURCE signatures\n",
        "Line" : 87,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# include TARGET_OBJECTS expressions in a target's SOURCES property\n",
        "Line" : 92,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# simplify variable reference and escape sequence evaluation\n",
        "Line" : 97,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# only interpret if() arguments as variables or keywords when unquoted\n",
        "Line" : 102,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "# internal function to convert Windows path to Cygwin workable CMake path\n\n# E.g., \"C:\\Program Files\" is converted to \"/cygdrive/c/Program Files\"\n\n# file(TO_CMAKE_PATH \"C:\\Program Files\" ...) would result in unworkable \"C;/Program Files\"\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# internal function to convert CMake path to \"pure\" native path without escapes\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# do not use the built-in function file (TO_NATIVE_PATH ...),\n\n# which does too much or the wrong thing:\n\n# it converts a CMake path to a native path but then also escapes all blanks\n\n# and special characters\n\n# under MinGW it produces unworkable paths with forward slashes\n",
        "Line" : 129,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "# use CMake path literally under UNIX\n",
        "Line" : 141,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# internal macro to set a file's executable bit under UNIX\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# internal macro to convert list to command string with quoting\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# internal macro to compute kernel paths (relative to installation directory)\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# internal macro to to compute front end paths (relative to installation directory)\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# internal macro to compute program name from product name and version\n\n# E.g., \"Mathematica\" and \"7.0\" gives \"Mathematica 7.0.app\" for Mac OS X\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# under Mac OS X the application name may contain the version number as a suffix\n",
        "Line" : 225,
        "CharPositionInLine" : 3
      },
      "26" : {
        "Text" : "# other platforms have a sub-directory named after the version number\n",
        "Line" : 234,
        "CharPositionInLine" : 3
      },
      "27" : {
        "Text" : "# internal macro to determine search order for different versions of Mathematica\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Mathematica products in order of preference\n",
        "Line" : 244,
        "CharPositionInLine" : 1
      },
      "29" : {
        "Text" : "# Mathematica product versions in order of preference\n",
        "Line" : 246,
        "CharPositionInLine" : 1
      },
      "30" : {
        "Text" : "# search for explicitly requested application version first\n",
        "Line" : 251,
        "CharPositionInLine" : 1
      },
      "31" : {
        "Text" : "# then try all qualified application names\n",
        "Line" : 259,
        "CharPositionInLine" : 1
      },
      "32" : {
        "Text" : "# then try unqualified application names\n",
        "Line" : 265,
        "CharPositionInLine" : 1
      },
      "33" : {
        "Text" : "# internal function to get Mathematica Windows installation directory for a registry entry\n",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# prepend if version matches requested one\n",
        "Line" : 298,
        "CharPositionInLine" : 5
      },
      "35" : {
        "Text" : "# internal function to determine Mathematica installation paths from Windows registry\n",
        "Line" : 311,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# use 64-bit reg.exe under WoW64 to make sure we search all keys\n",
        "Line" : 317,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "# _installIDs sorted from oldest to newest version\n",
        "Line" : 328,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# internal function to determine Mathematica installation paths from Mac OS X LaunchServices database\n",
        "Line" : 341,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# the lsregister executable is needed to search the LaunchServices database\n\n# the executable usually resides in the LaunchServices framework Support directory\n\n# The LaunchServices framework is a sub-framework of the CoreServices umbrella framework\n",
        "Line" : 344,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# put paths into canonical order\n",
        "Line" : 367,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "# ignore paths that no longer exist\n",
        "Line" : 380,
        "CharPositionInLine" : 5
      },
      "42" : {
        "Text" : "# insert in front of other versions if version matches requested one\n",
        "Line" : 385,
        "CharPositionInLine" : 8
      },
      "43" : {
        "Text" : "# internal macro to determine default Mathematica installation (the one which is on the system search path)\n",
        "Line" : 408,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# resolve symlinks\n",
        "Line" : 422,
        "CharPositionInLine" : 3
      },
      "45" : {
        "Text" : "# prefer default installation if not searching for version explicitly\n",
        "Line" : 431,
        "CharPositionInLine" : 6
      },
      "46" : {
        "Text" : "# internal macro to determine platform specific Mathematica installation search paths\n",
        "Line" : 440,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# add non-standard installation paths from Windows registry\n",
        "Line" : 444,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "# environment variable locations where Mathematica may be installed\n",
        "Line" : 448,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "# Cygwin may be configured to convert all environment variables to all-uppercase\n",
        "Line" : 451,
        "CharPositionInLine" : 3
      },
      "50" : {
        "Text" : "# add standard Mathematica Windows installation paths\n",
        "Line" : 454,
        "CharPositionInLine" : 2
      },
      "51" : {
        "Text" : "# add standard Mathematica Mac OS X installation paths\n",
        "Line" : 462,
        "CharPositionInLine" : 2
      },
      "52" : {
        "Text" : "# add non-standard installation paths from Mac OS X LaunchServices database\n",
        "Line" : 467,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# add standard Mathematica Unix installation paths\n",
        "Line" : 470,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# internal macro to compute Mathematica SystemIDs from system name\n",
        "Line" : 479,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# default to 32-bit Windows\n",
        "Line" : 485,
        "CharPositionInLine" : 3
      },
      "56" : {
        "Text" : "# default to 32-bit Windows\n",
        "Line" : 492,
        "CharPositionInLine" : 3
      },
      "57" : {
        "Text" : "# Mathematica versions before 6 used \"Darwin\" as system ID for ppc32\n",
        "Line" : 504,
        "CharPositionInLine" : 4
      },
      "58" : {
        "Text" : "# Mathematica versions before 6 used \"UltraSPARC\" as system ID for Solaris\n",
        "Line" : 527,
        "CharPositionInLine" : 4
      },
      "59" : {
        "Text" : "# internal macro to compute target Mathematica SystemIDs\n",
        "Line" : 548,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# pointer size check is more reliable than CMAKE_SYSTEM_PROCESSOR\n",
        "Line" : 551,
        "CharPositionInLine" : 2
      },
      "61" : {
        "Text" : "# determine System ID from specified architectures\n",
        "Line" : 560,
        "CharPositionInLine" : 3
      },
      "62" : {
        "Text" : "# determine System ID by checking endianness and pointer size\n",
        "Line" : 571,
        "CharPositionInLine" : 3
      },
      "63" : {
        "Text" : "# Mathematica versions before 6 used \"Darwin\" as system ID for ppc32\n",
        "Line" : 578,
        "CharPositionInLine" : 6
      },
      "64" : {
        "Text" : "# pointer size check is more reliable than CMAKE_SYSTEM_PROCESSOR\n",
        "Line" : 598,
        "CharPositionInLine" : 3
      },
      "65" : {
        "Text" : "# internal macro to compute host Mathematica SystemIDs\n",
        "Line" : 613,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# running of WoW64, host is native 64-bit Windows\n",
        "Line" : 619,
        "CharPositionInLine" : 4
      },
      "67" : {
        "Text" : "# host is native 64-bit Windows\n",
        "Line" : 624,
        "CharPositionInLine" : 4
      },
      "68" : {
        "Text" : "# always determine host system ID from\n\n# CMAKE_HOST_SYSTEM_NAME and CMAKE_HOST_SYSTEM_PROCESSOR\n",
        "Line" : 629,
        "CharPositionInLine" : 2
      },
      "69" : {
        "Text" : "# work-around for Mac OS X, where CMAKE_HOST_SYSTEM_PROCESSOR is not always accurate\n",
        "Line" : 632,
        "CharPositionInLine" : 3
      },
      "70" : {
        "Text" : "# platforms probably supported before 5.2?\n",
        "Line" : 684,
        "CharPositionInLine" : 2
      },
      "71" : {
        "Text" : "# Mathematica 5.2 added support for Windows-x86-64\n",
        "Line" : 699,
        "CharPositionInLine" : 4
      },
      "72" : {
        "Text" : "# Windows x64 can run x86 through WoW64\n",
        "Line" : 705,
        "CharPositionInLine" : 2
      },
      "73" : {
        "Text" : "# Mathematica 6 added support for MacOSX-x86-64\n",
        "Line" : 710,
        "CharPositionInLine" : 4
      },
      "74" : {
        "Text" : "# Mathematica 5.2 added support for MacOSX-x86\n\n# Mathematica 9.0 dropped support for MacOSX-x86\n",
        "Line" : 714,
        "CharPositionInLine" : 4
      },
      "75" : {
        "Text" : "# Only Mathematica 5.2 supports Darwin-PowerPC64\n",
        "Line" : 727,
        "CharPositionInLine" : 5
      },
      "76" : {
        "Text" : "# handle ppc32 (Darwin or MacOSX)\n\n# Mac OS X versions before Lion support ppc32 natively or through Rosetta\n\n# (Mac OS X 10.7.0 is Darwin 11.0.0)\n",
        "Line" : 734,
        "CharPositionInLine" : 2
      },
      "77" : {
        "Text" : "# Mathematica versions before 6 used \"Darwin\" as system ID for ppc32\n",
        "Line" : 740,
        "CharPositionInLine" : 5
      },
      "78" : {
        "Text" : "# Mathematica 8 dropped support for ppc32\n",
        "Line" : 743,
        "CharPositionInLine" : 5
      },
      "79" : {
        "Text" : "# Mathematica 5.2 added support for 64-bit\n",
        "Line" : 753,
        "CharPositionInLine" : 4
      },
      "80" : {
        "Text" : "# Linux 64-bit can run x86 through ia32-libs package\n",
        "Line" : 759,
        "CharPositionInLine" : 2
      },
      "81" : {
        "Text" : "# internal macro to compute target MathLink / WSTP DeveloperKit system ID\n",
        "Line" : 767,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "# Mathematica versions before 9 did not have a system ID subdirectory\n",
        "Line" : 772,
        "CharPositionInLine" : 4
      },
      "83" : {
        "Text" : "# Mathematica versions after 9 have a system ID subdirectory\n",
        "Line" : 775,
        "CharPositionInLine" : 4
      },
      "84" : {
        "Text" : "# internal macro to compute host MathLink / WSTP DeveloperKit system ID\n",
        "Line" : 786,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# Mathematica versions before 9 did not have a system ID subdirectory\n",
        "Line" : 790,
        "CharPositionInLine" : 3
      },
      "86" : {
        "Text" : "# The MacOSX-x86-64 DeveloperKit is a universal binary with architectures i386 and x86_64\n",
        "Line" : 794,
        "CharPositionInLine" : 4
      },
      "87" : {
        "Text" : "# internal macro to compute target development flavor\n",
        "Line" : 805,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "# Mathematica 10 added LLVM libc++ compiled version in AlternativeLibraries directory\n\n# Mathematica 10.4 and later only ship with LLVM libc++ compiled version\n",
        "Line" : 821,
        "CharPositionInLine" : 4
      },
      "89" : {
        "Text" : "# no flavors on non-Windows platforms\n",
        "Line" : 827,
        "CharPositionInLine" : 2
      },
      "90" : {
        "Text" : "# internal macro to compute host development flavor\n",
        "Line" : 832,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "# running of WoW64, host is native 64-bit Windows\n",
        "Line" : 840,
        "CharPositionInLine" : 4
      },
      "92" : {
        "Text" : "# host is native 64-bit Windows\n",
        "Line" : 845,
        "CharPositionInLine" : 4
      },
      "93" : {
        "Text" : "# Mathematica 10 added LLVM libc++ compiled version in AlternativeLibraries directory\n\n# Mathematica 10.4 and later only ship with LLVM libc++ compiled version\n",
        "Line" : 855,
        "CharPositionInLine" : 4
      },
      "94" : {
        "Text" : "# no flavors on non-Windows platforms\n",
        "Line" : 861,
        "CharPositionInLine" : 2
      },
      "95" : {
        "Text" : "# internal macro to compute WolframRTL library names\n",
        "Line" : 866,
        "CharPositionInLine" : 0
      },
      "96" : {
        "Text" : "# internal macro to compute MathLink library names\n",
        "Line" : 879,
        "CharPositionInLine" : 0
      },
      "97" : {
        "Text" : "# always add default Microsoft 64-bit PE libraries\n",
        "Line" : 894,
        "CharPositionInLine" : 3
      },
      "98" : {
        "Text" : "# always add default Microsoft 32-bit PE libraries\n",
        "Line" : 914,
        "CharPositionInLine" : 3
      },
      "99" : {
        "Text" : "# search for mathlink.framework\n",
        "Line" : 939,
        "CharPositionInLine" : 3
      },
      "100" : {
        "Text" : "# internal macro to compute WSTP library names\n",
        "Line" : 975,
        "CharPositionInLine" : 0
      },
      "101" : {
        "Text" : "# search for wstp.framework\n",
        "Line" : 1012,
        "CharPositionInLine" : 3
      },
      "102" : {
        "Text" : "# internal macro to compute Java launcher name\n",
        "Line" : 1034,
        "CharPositionInLine" : 0
      },
      "103" : {
        "Text" : "# internal macro to compute required WolframRTL system libraries\n",
        "Line" : 1043,
        "CharPositionInLine" : 0
      },
      "104" : {
        "Text" : "# internal macro to compute required MathLink system libraries\n",
        "Line" : 1052,
        "CharPositionInLine" : 0
      },
      "105" : {
        "Text" : "# OS X MathLink API revision >= 19 has dependency on C++ standard library\n",
        "Line" : 1057,
        "CharPositionInLine" : 4
      },
      "106" : {
        "Text" : "# LLVM libc++\n",
        "Line" : 1059,
        "CharPositionInLine" : 5
      },
      "107" : {
        "Text" : "# GNU libstdc++\n",
        "Line" : 1062,
        "CharPositionInLine" : 5
      },
      "108" : {
        "Text" : "# Mac OS X MathLink API revision >= 21 has dependency on Core Foundation framework\n",
        "Line" : 1067,
        "CharPositionInLine" : 4
      },
      "109" : {
        "Text" : "# UNIX MathLink API revision >= 19 has dependency on GNU libstdc++\n",
        "Line" : 1074,
        "CharPositionInLine" : 4
      },
      "110" : {
        "Text" : "# Linux MathLink API revision >= 25 has dependency on libdl and libuuid\n",
        "Line" : 1082,
        "CharPositionInLine" : 5
      },
      "111" : {
        "Text" : "# Windows MathLink API revision >= 20 has dependency on Winsock 2\n",
        "Line" : 1099,
        "CharPositionInLine" : 4
      },
      "112" : {
        "Text" : "# Windows MathLink API interface >= 25 has dependency on RPC\n",
        "Line" : 1103,
        "CharPositionInLine" : 4
      },
      "113" : {
        "Text" : "# internal macro to compute required WSTP system libraries\n",
        "Line" : 1110,
        "CharPositionInLine" : 0
      },
      "114" : {
        "Text" : "# OS X WSTP API revision >= 19 has dependency on C++ standard library\n",
        "Line" : 1115,
        "CharPositionInLine" : 4
      },
      "115" : {
        "Text" : "# LLVM libc++\n",
        "Line" : 1117,
        "CharPositionInLine" : 5
      },
      "116" : {
        "Text" : "# GNU libstdc++\n",
        "Line" : 1120,
        "CharPositionInLine" : 5
      },
      "117" : {
        "Text" : "# Mac OS X WSTP API revision >= 21 has dependency on Core Foundation framework\n",
        "Line" : 1125,
        "CharPositionInLine" : 4
      },
      "118" : {
        "Text" : "# UNIX WSTP API revision >= 19 has dependency on GNU libstdc++\n",
        "Line" : 1133,
        "CharPositionInLine" : 5
      },
      "119" : {
        "Text" : "# Linux WSTP API revision >= 25 has dependency on libdl and libuuid\n",
        "Line" : 1140,
        "CharPositionInLine" : 5
      },
      "120" : {
        "Text" : "# Windows WSTP API revision >= 20 has dependency on Winsock 2\n",
        "Line" : 1148,
        "CharPositionInLine" : 4
      },
      "121" : {
        "Text" : "# Windows WSTP API interface >= 25 has dependency on RPC\n",
        "Line" : 1152,
        "CharPositionInLine" : 4
      },
      "122" : {
        "Text" : "# internal macro to return dynamic library search path environment variables on host platform\n",
        "Line" : 1159,
        "CharPositionInLine" : 0
      },
      "123" : {
        "Text" : "# internal macro to convert list to a search path list for host platform\n",
        "Line" : 1182,
        "CharPositionInLine" : 0
      },
      "124" : {
        "Text" : "# prevent CMake from interpreting ; as a list separator\n",
        "Line" : 1192,
        "CharPositionInLine" : 2
      },
      "125" : {
        "Text" : "# prevent CMake from interpreting ; as a list separator\n",
        "Line" : 1207,
        "CharPositionInLine" : 2
      },
      "126" : {
        "Text" : "# internal macro to select runtime libraries according to build type\n",
        "Line" : 1213,
        "CharPositionInLine" : 0
      },
      "127" : {
        "Text" : "# internal macro to set up Mathematica host system IDs\n",
        "Line" : 1223,
        "CharPositionInLine" : 0
      },
      "128" : {
        "Text" : "# default target platform system ID is first one in Mathematica_SYSTEM_IDS\n",
        "Line" : 1226,
        "CharPositionInLine" : 1
      },
      "129" : {
        "Text" : "# determine true host system ID which depends on both Mathematica version\n\n# and OS variant by running Mathematica kernel\n",
        "Line" : 1229,
        "CharPositionInLine" : 2
      },
      "130" : {
        "Text" : "# guess host system ID from the environment\n",
        "Line" : 1247,
        "CharPositionInLine" : 2
      },
      "131" : {
        "Text" : "# default to first ID in _HostSystemIDs\n",
        "Line" : 1249,
        "CharPositionInLine" : 2
      },
      "132" : {
        "Text" : "# internal macro to set up Mathematica creation ID\n",
        "Line" : 1255,
        "CharPositionInLine" : 0
      },
      "133" : {
        "Text" : "# parse hidden CreationID file\n",
        "Line" : 1259,
        "CharPositionInLine" : 3
      },
      "134" : {
        "Text" : "# OS X Info.plist CFBundleShortVersionString has Creation ID as last version component\n",
        "Line" : 1267,
        "CharPositionInLine" : 4
      },
      "135" : {
        "Text" : "# internal macro to set up Mathematica base directory variable\n",
        "Line" : 1279,
        "CharPositionInLine" : 0
      },
      "136" : {
        "Text" : "# determine true $BaseDirectory\n",
        "Line" : 1282,
        "CharPositionInLine" : 2
      },
      "137" : {
        "Text" : "# guess Mathematica_BASE_DIR from environment\n\n# environment variable MATHEMATICA_BASE may override default\n\n# $BaseDirectory, see http://reference.wolfram.com/language/tutorial/ConfigurationFiles.html\n",
        "Line" : 1299,
        "CharPositionInLine" : 2
      },
      "138" : {
        "Text" : "# internal macro to set up Mathematica user base directory variable\n",
        "Line" : 1330,
        "CharPositionInLine" : 0
      },
      "139" : {
        "Text" : "# determine true $UserBaseDirectory\n",
        "Line" : 1333,
        "CharPositionInLine" : 2
      },
      "140" : {
        "Text" : "# guess Mathematica_USERBASE_DIR from environment\n\n# environment variable MATHEMATICA_USERBASE may override default\n\n# $UserBaseDirectory, see http://reference.wolfram.com/language/tutorial/ConfigurationFiles.html\n",
        "Line" : 1350,
        "CharPositionInLine" : 2
      },
      "141" : {
        "Text" : "# internal macro to setup FindMathematica option variables\n",
        "Line" : 1378,
        "CharPositionInLine" : 0
      },
      "142" : {
        "Text" : "# starting with OS X 10.9, Clang uses libc++ by default\n",
        "Line" : 1404,
        "CharPositionInLine" : 3
      },
      "143" : {
        "Text" : "# internal macro to find Mathematica installation\n",
        "Line" : 1427,
        "CharPositionInLine" : 0
      },
      "144" : {
        "Text" : "# preserve pre-defined value, but set correct type and help string\n",
        "Line" : 1459,
        "CharPositionInLine" : 2
      },
      "145" : {
        "Text" : "# Mathematica_ROOT_DIR is initialized to Mathematica_HOST_ROOT_DIR by default\n\n# upon cross-compiling Mathematica_ROOT_DIR needs to be manually set to the correct\n\n# Mathematica installation folder for the target platform\n",
        "Line" : 1463,
        "CharPositionInLine" : 1
      },
      "146" : {
        "Text" : "# preserve pre-defined value, but set correct type and help string\n",
        "Line" : 1472,
        "CharPositionInLine" : 2
      },
      "147" : {
        "Text" : "# internal macro to init _LIBRARIES variable from given _LIBRARY variable\n",
        "Line" : 1508,
        "CharPositionInLine" : 0
      },
      "148" : {
        "Text" : "# handle universal builds under Mac OS X\n\n# we need to add a library for each architecture\n",
        "Line" : 1511,
        "CharPositionInLine" : 2
      },
      "149" : {
        "Text" : "# internal macro to find Wolfram Library inside Mathematica installation\n",
        "Line" : 1536,
        "CharPositionInLine" : 0
      },
      "150" : {
        "Text" : "# Wolfram RTL library names do not follow UNIX conventions under Cygwin\n",
        "Line" : 1550,
        "CharPositionInLine" : 2
      },
      "151" : {
        "Text" : "# internal macro to find MathLink SDK inside Mathematica installation\n",
        "Line" : 1579,
        "CharPositionInLine" : 0
      },
      "152" : {
        "Text" : "# use last if there are multiple\n",
        "Line" : 1670,
        "CharPositionInLine" : 3
      },
      "153" : {
        "Text" : "# internal macro to find WSTP SDK inside Mathematica installation\n",
        "Line" : 1694,
        "CharPositionInLine" : 0
      },
      "154" : {
        "Text" : "# use last if there are multiple\n",
        "Line" : 1783,
        "CharPositionInLine" : 3
      },
      "155" : {
        "Text" : "# internal macro to find J/Link SDK inside Mathematica installation\n",
        "Line" : 1807,
        "CharPositionInLine" : 0
      },
      "156" : {
        "Text" : "# OS X versions of Mathematica earlier than 10 did not have a JVM bundled\n\n# but used the Java JVM pre-installed on system\n",
        "Line" : 1857,
        "CharPositionInLine" : 3
      },
      "157" : {
        "Text" : "# use java_home to find path to JVM installed on system\n",
        "Line" : 1862,
        "CharPositionInLine" : 5
      },
      "158" : {
        "Text" : "# internal macro to find MUnit package\n",
        "Line" : 1885,
        "CharPositionInLine" : 0
      },
      "159" : {
        "Text" : "# determine enclosing MUnit package directory\n",
        "Line" : 1889,
        "CharPositionInLine" : 2
      },
      "160" : {
        "Text" : "# internal macro to find LibaryLink package\n",
        "Line" : 1899,
        "CharPositionInLine" : 0
      },
      "161" : {
        "Text" : "# determine enclosing LibraryLink package directory\n",
        "Line" : 1903,
        "CharPositionInLine" : 2
      },
      "162" : {
        "Text" : "# internal helper macro to setup version related variables from existing _VERSION variable\n",
        "Line" : 1913,
        "CharPositionInLine" : 0
      },
      "163" : {
        "Text" : "# internal macro to setup Mathematica version related variables\n",
        "Line" : 1937,
        "CharPositionInLine" : 0
      },
      "164" : {
        "Text" : "# parse version number from hidden VersionID and PatchLevel files\n",
        "Line" : 1943,
        "CharPositionInLine" : 4
      },
      "165" : {
        "Text" : "# parse version number from mathlink.h\n",
        "Line" : 1967,
        "CharPositionInLine" : 4
      },
      "166" : {
        "Text" : "# parse version number from mathlink.h\n",
        "Line" : 1975,
        "CharPositionInLine" : 4
      },
      "167" : {
        "Text" : "# internal macro to setup WolframLibrary version related variables\n",
        "Line" : 1991,
        "CharPositionInLine" : 0
      },
      "168" : {
        "Text" : "# internal macro to setup MathLink version related variables\n",
        "Line" : 2009,
        "CharPositionInLine" : 0
      },
      "169" : {
        "Text" : "# internal macro to setup WSTP version related variables\n",
        "Line" : 2034,
        "CharPositionInLine" : 0
      },
      "170" : {
        "Text" : "# internal macro to setup J/Link version related variables\n",
        "Line" : 2061,
        "CharPositionInLine" : 0
      },
      "171" : {
        "Text" : "# internal macro to setup MUnit version related variables\n",
        "Line" : 2077,
        "CharPositionInLine" : 0
      },
      "172" : {
        "Text" : "# internal macro to setup WolframLibrary library related variables\n",
        "Line" : 2099,
        "CharPositionInLine" : 0
      },
      "173" : {
        "Text" : "# kernel binaries dir on Windows and Linux contains additional runtime libraries (e.g., Intel MKL)\n",
        "Line" : 2116,
        "CharPositionInLine" : 3
      },
      "174" : {
        "Text" : "# internal macro to setup MathLink library related variables\n",
        "Line" : 2137,
        "CharPositionInLine" : 0
      },
      "175" : {
        "Text" : "# for OS X we have to add the MathLink CompilerAdditions directory which contains the MathLink framework\n",
        "Line" : 2156,
        "CharPositionInLine" : 3
      },
      "176" : {
        "Text" : "# Windows MathLink SDK has runtime DLLs in a separate directory\n",
        "Line" : 2187,
        "CharPositionInLine" : 3
      },
      "177" : {
        "Text" : "# Windows MathLink SDK also ships with debug DLLs in AlternativeComponents\n",
        "Line" : 2193,
        "CharPositionInLine" : 3
      },
      "178" : {
        "Text" : "# internal macro to setup WSTP library related variables\n",
        "Line" : 2207,
        "CharPositionInLine" : 0
      },
      "179" : {
        "Text" : "# for OS X we have to add the WSTP CompilerAdditions directory which contains the WSTP framework\n",
        "Line" : 2226,
        "CharPositionInLine" : 3
      },
      "180" : {
        "Text" : "# Windows WSTP SDK has runtime DLLs in a separate directory\n",
        "Line" : 2257,
        "CharPositionInLine" : 3
      },
      "181" : {
        "Text" : "# Windows WSTP SDK also ships with debug DLLs in AlternativeComponents\n",
        "Line" : 2263,
        "CharPositionInLine" : 3
      },
      "182" : {
        "Text" : "# internal macro to log used variables\n",
        "Line" : 2277,
        "CharPositionInLine" : 0
      },
      "183" : {
        "Text" : "# internal macro to log found variables\n",
        "Line" : 2310,
        "CharPositionInLine" : 0
      },
      "184" : {
        "Text" : "# internal macro returns cache variables that determine search result\n",
        "Line" : 2415,
        "CharPositionInLine" : 0
      },
      "185" : {
        "Text" : "# internal macro returns cache variables that are dependent on the given variable\n",
        "Line" : 2441,
        "CharPositionInLine" : 0
      },
      "186" : {
        "Text" : "# do comparisons with an underscore prefix to prevent CMake from automatically\n\n# resolving the left and right hand arguments to STREQUAL\n",
        "Line" : 2443,
        "CharPositionInLine" : 1
      },
      "187" : {
        "Text" : "# all cached Mathematica version variables are dependent on the cached creation ID\n",
        "Line" : 2467,
        "CharPositionInLine" : 2
      },
      "188" : {
        "Text" : "# internal macro to cleanup outdated cache variables\n",
        "Line" : 2552,
        "CharPositionInLine" : 0
      },
      "189" : {
        "Text" : "# search var has changed\n",
        "Line" : 2560,
        "CharPositionInLine" : 4
      },
      "190" : {
        "Text" : "# original var path no longer exists\n",
        "Line" : 2568,
        "CharPositionInLine" : 4
      },
      "191" : {
        "Text" : "# search var path has changed\n",
        "Line" : 2577,
        "CharPositionInLine" : 4
      },
      "192" : {
        "Text" : "# search var presence changed\n",
        "Line" : 2584,
        "CharPositionInLine" : 3
      },
      "193" : {
        "Text" : "# internal macro to update cache variables\n",
        "Line" : 2604,
        "CharPositionInLine" : 0
      },
      "194" : {
        "Text" : "# internal macro to return variables that need to exist in order for component\n\n# to be considered found successfully\n",
        "Line" : 2639,
        "CharPositionInLine" : 0
      },
      "195" : {
        "Text" : "# internal macro to handle the QUIETLY and REQUIRED arguments and set *_FOUND variables\n",
        "Line" : 2690,
        "CharPositionInLine" : 0
      },
      "196" : {
        "Text" : "# determine required Mathematica components\n",
        "Line" : 2692,
        "CharPositionInLine" : 1
      },
      "197" : {
        "Text" : "# find_package_handle_standard_args only sets upper case _FOUND variable\n",
        "Line" : 2702,
        "CharPositionInLine" : 2
      },
      "198" : {
        "Text" : "# find_package_handle_standard_args only sets upper case _FOUND variable\n",
        "Line" : 2712,
        "CharPositionInLine" : 1
      },
      "199" : {
        "Text" : "# internal macro that searches for requested components\n",
        "Line" : 2716,
        "CharPositionInLine" : 0
      },
      "200" : {
        "Text" : "# internal helper function to compute the install name of a shared library under Mac OS X\n",
        "Line" : 2750,
        "CharPositionInLine" : 0
      },
      "201" : {
        "Text" : "# framework folder\n",
        "Line" : 2756,
        "CharPositionInLine" : 3
      },
      "202" : {
        "Text" : "# install name is in last line of otool output\n",
        "Line" : 2771,
        "CharPositionInLine" : 4
      },
      "203" : {
        "Text" : "# FindMathematica \"main\" starts here\n",
        "Line" : 2783,
        "CharPositionInLine" : 0
      },
      "204" : {
        "Text" : "# not the initial find invocation\n",
        "Line" : 2789,
        "CharPositionInLine" : 1
      },
      "205" : {
        "Text" : "# now setup public functions based on found components\n",
        "Line" : 2797,
        "CharPositionInLine" : 0
      },
      "206" : {
        "Text" : "# public function to convert a CMake string to a Mathematica string\n",
        "Line" : 2799,
        "CharPositionInLine" : 0
      },
      "207" : {
        "Text" : "# public function to convert a CMake list to a Mathematica list\n",
        "Line" : 2806,
        "CharPositionInLine" : 0
      },
      "208" : {
        "Text" : "# public function to convert CMake paths to Mathematica paths\n",
        "Line" : 2820,
        "CharPositionInLine" : 0
      },
      "209" : {
        "Text" : "# public function to initialize Mathematica test properties\n",
        "Line" : 2868,
        "CharPositionInLine" : 0
      },
      "210" : {
        "Text" : "# prepend Mathematica runtime directories to system ones\n",
        "Line" : 2875,
        "CharPositionInLine" : 3
      },
      "211" : {
        "Text" : "# CYGWIN path list requires UNIX syntax\n",
        "Line" : 2883,
        "CharPositionInLine" : 4
      },
      "212" : {
        "Text" : "# internal macro to return test driver for host platform\n",
        "Line" : 2910,
        "CharPositionInLine" : 0
      },
      "213" : {
        "Text" : "# internal macro to add platform specific executable launch prefix\n",
        "Line" : 2937,
        "CharPositionInLine" : 0
      },
      "214" : {
        "Text" : "# under Mac OS X, run appropriate target architecture of executable universal binary\n\n# by using the the /usr/bin/arch tool which is available since Leopard\n\n# (Mac OS X 10.5.0 is Darwin 9.0.0)\n",
        "Line" : 2942,
        "CharPositionInLine" : 4
      },
      "215" : {
        "Text" : "# internal macro to set up kernel launch command\n",
        "Line" : 2963,
        "CharPositionInLine" : 0
      },
      "216" : {
        "Text" : "# under Windows, run alternate binary for given system ID\n",
        "Line" : 2968,
        "CharPositionInLine" : 3
      },
      "217" : {
        "Text" : "# Mathematica 8 kernel wrapper shell script supports option -SystemID\n",
        "Line" : 2991,
        "CharPositionInLine" : 5
      },
      "218" : {
        "Text" : "# start new code segment\n",
        "Line" : 3016,
        "CharPositionInLine" : 3
      },
      "219" : {
        "Text" : "# under Windows XP or later cmd.exe has a command line length limit of 8191 characters.\n\n# we do not use inline statements if the approximate command line length\n\n# might exceed that limit or there are too many individual arguments.\n\n# we write the inline statements to a temporary script instead\n",
        "Line" : 3026,
        "CharPositionInLine" : 2
      },
      "220" : {
        "Text" : "# for UNIX use a temp file if command line becomes confusing\n",
        "Line" : 3032,
        "CharPositionInLine" : 2
      },
      "221" : {
        "Text" : "# collect all CODE sections into CompoundExpressions\n",
        "Line" : 3040,
        "CharPositionInLine" : 1
      },
      "222" : {
        "Text" : "# remove indentation with tabs\n",
        "Line" : 3046,
        "CharPositionInLine" : 3
      },
      "223" : {
        "Text" : "# separate multiple lines via commas\n",
        "Line" : 3048,
        "CharPositionInLine" : 3
      },
      "224" : {
        "Text" : "# prevent CMake from interpreting ; as a list separator\n",
        "Line" : 3051,
        "CharPositionInLine" : 2
      },
      "225" : {
        "Text" : "# flush current CompoundExpression when a Get[...], Needs[...] or Install[...]\n\n# expression is encountered, so that new context definitions become effective\n\n# immediately for subsequent commands\n\n# Sequence[] can be used to explicitly flush the current CompoundExpression\n",
        "Line" : 3061,
        "CharPositionInLine" : 2
      },
      "226" : {
        "Text" : "# note that the blanks around the CompoundExpression argument below are necessary\n\n# to force CMake to do proper cmd.exe quoting of the resulting parameter under Windows\n\n# (a comma in the parameter may be misinterpreted as a separator otherwise)\n",
        "Line" : 3068,
        "CharPositionInLine" : 4
      },
      "227" : {
        "Text" : "# flush single code segment, but only if it is not a NOP\n",
        "Line" : 3073,
        "CharPositionInLine" : 4
      },
      "228" : {
        "Text" : "# check for use of CMake generator expressions in inline code\n",
        "Line" : 3083,
        "CharPositionInLine" : 1
      },
      "229" : {
        "Text" : "# use script content MD5 as temporary file name\n",
        "Line" : 3096,
        "CharPositionInLine" : 1
      },
      "230" : {
        "Text" : "# internal macro to translate CODE or SCRIPT option to Mathematica launch command\n",
        "Line" : 3110,
        "CharPositionInLine" : 0
      },
      "231" : {
        "Text" : "# start with code to prepend the FindMathematica module directory to the Mathematica $Path\n",
        "Line" : 3113,
        "CharPositionInLine" : 2
      },
      "232" : {
        "Text" : "# add given inline code statements\n",
        "Line" : 3116,
        "CharPositionInLine" : 2
      },
      "233" : {
        "Text" : "# compute absolute path to given script\n",
        "Line" : 3120,
        "CharPositionInLine" : 2
      },
      "234" : {
        "Text" : "# no given script, quit kernel explicitly unless last code statement already does it\n",
        "Line" : 3129,
        "CharPositionInLine" : 3
      },
      "235" : {
        "Text" : "# Although the -script option is supported since Mathematica 8, under Mathematica 9\n\n# using the -script option does not work as expected, if it is preceded by multiple inline\n\n# Mathematica commands using the -run option.\n\n# Thus we use the Get function instead, which should work with all versions.\n\n# According to http://reference.wolfram.com/language/tutorial/WolframLanguageScripts.html\n\n# running the kernel with the -script option is equivalent to reading the file using the Get function\n\n# with a single difference: after the last command in the file is evaluated, the kernel terminates\n",
        "Line" : 3135,
        "CharPositionInLine" : 3
      },
      "236" : {
        "Text" : "# convert resulting code to kernel inline code segments or if necessary to a temporary script file\n",
        "Line" : 3145,
        "CharPositionInLine" : 2
      },
      "237" : {
        "Text" : "# finally, run given script with -script option if using Mathematica 10 or later\n",
        "Line" : 3155,
        "CharPositionInLine" : 2
      },
      "238" : {
        "Text" : "# after the last command in the script file is evaluated, the kernel terminates automatically\n",
        "Line" : 3159,
        "CharPositionInLine" : 4
      },
      "239" : {
        "Text" : "# internal macro to set up linkmode launch command\n",
        "Line" : 3165,
        "CharPositionInLine" : 0
      },
      "240" : {
        "Text" : "# UNIX (except for Cygwin) requires quoted link name path and -mathlink or -wstp\n",
        "Line" : 3173,
        "CharPositionInLine" : 2
      },
      "241" : {
        "Text" : "# public function for executing Mathematica code file at configuration time\n",
        "Line" : 3186,
        "CharPositionInLine" : 0
      },
      "242" : {
        "Text" : "# use result from cache if is not a false constant, $Failed, $Aborted or not properly registered\n",
        "Line" : 3206,
        "CharPositionInLine" : 4
      },
      "243" : {
        "Text" : "# put result to cache\n",
        "Line" : 3234,
        "CharPositionInLine" : 1
      },
      "244" : {
        "Text" : "# if Mathematica is not registered properly, print a warning\n",
        "Line" : 3236,
        "CharPositionInLine" : 2
      },
      "245" : {
        "Text" : "# propagate variables to parent scope\n",
        "Line" : 3249,
        "CharPositionInLine" : 1
      },
      "246" : {
        "Text" : "# public function for executing Mathematica code at build time as a standalone target\n",
        "Line" : 3257,
        "CharPositionInLine" : 0
      },
      "247" : {
        "Text" : "# public function for executing Mathematica code at build time to produce output files\n",
        "Line" : 3294,
        "CharPositionInLine" : 0
      },
      "248" : {
        "Text" : "# public function to simplify testing Mathematica commands\n",
        "Line" : 3349,
        "CharPositionInLine" : 0
      },
      "249" : {
        "Text" : "# public function to add target that runs Mathematica Splice function on template file\n",
        "Line" : 3380,
        "CharPositionInLine" : 0
      },
      "250" : {
        "Text" : "# Mathematica function Splice does not produce output in current working directory\n\n# Use absolute paths to make it write to the current binary directory\n",
        "Line" : 3393,
        "CharPositionInLine" : 1
      },
      "251" : {
        "Text" : "# Always set FormatType option to prevent Splice function from failing with a\n\n# Splice::splict error if the template file path contains more than one dot character\n",
        "Line" : 3404,
        "CharPositionInLine" : 1
      },
      "252" : {
        "Text" : "# public function to add target that runs Mathematica Encode function on input files\n",
        "Line" : 3428,
        "CharPositionInLine" : 0
      },
      "253" : {
        "Text" : "# no output option given, write encoded files to CMAKE_CURRENT_BINARY_DIR\n",
        "Line" : 3443,
        "CharPositionInLine" : 2
      },
      "254" : {
        "Text" : "# OUTPUT option is a single existing directory, write encoded files to it\n",
        "Line" : 3448,
        "CharPositionInLine" : 2
      },
      "255" : {
        "Text" : "# OUTPUT option must have exactly one entry for each input file\n",
        "Line" : 3486,
        "CharPositionInLine" : 2
      },
      "256" : {
        "Text" : "# public function to find Mathematica package\n",
        "Line" : 3534,
        "CharPositionInLine" : 0
      },
      "257" : {
        "Text" : "# determine MUnit package directory\n",
        "Line" : 3543,
        "CharPositionInLine" : 1
      },
      "258" : {
        "Text" : "# default to using FileNames function\n",
        "Line" : 3545,
        "CharPositionInLine" : 1
      },
      "259" : {
        "Text" : "# function FindFile available since Mathematica 7\n",
        "Line" : 3549,
        "CharPositionInLine" : 3
      },
      "260" : {
        "Text" : "# if package file variable already defined, verify package file existence\n",
        "Line" : 3567,
        "CharPositionInLine" : 1
      },
      "261" : {
        "Text" : "# verify package file existence\n",
        "Line" : 3575,
        "CharPositionInLine" : 1
      },
      "262" : {
        "Text" : "# public function to get root Mathematica package directory from a package file\n",
        "Line" : 3589,
        "CharPositionInLine" : 0
      },
      "263" : {
        "Text" : "# walk up directory tree until we find package root dir\n",
        "Line" : 3599,
        "CharPositionInLine" : 1
      },
      "264" : {
        "Text" : "# re-compute system IDs and base directories, now that we can query the kernel\n",
        "Line" : 3612,
        "CharPositionInLine" : 0
      },
      "265" : {
        "Text" : "# find Mathematica components\n",
        "Line" : 3618,
        "CharPositionInLine" : 0
      },
      "266" : {
        "Text" : "# public function for fixing shared library references to dynamic Mathematica runtime libraries under Mac OS X\n",
        "Line" : 3625,
        "CharPositionInLine" : 0
      },
      "267" : {
        "Text" : "# public function to simplify testing MathLink programs\n",
        "Line" : 3649,
        "CharPositionInLine" : 0
      },
      "268" : {
        "Text" : "# run Mathematica kernel and launch MathLink executable as a child process that connects with ParentConnect\n",
        "Line" : 3672,
        "CharPositionInLine" : 2
      },
      "269" : {
        "Text" : "# run MathLink executable as front-end to Mathematica kernel\n",
        "Line" : 3700,
        "CharPositionInLine" : 2
      },
      "270" : {
        "Text" : "# public function to simplify testing WSTP programs\n",
        "Line" : 3722,
        "CharPositionInLine" : 0
      },
      "271" : {
        "Text" : "# run Mathematica kernel and install WSTP executable\n",
        "Line" : 3738,
        "CharPositionInLine" : 2
      },
      "272" : {
        "Text" : "# run WSTP executable as front-end to Mathematica kernel\n",
        "Line" : 3766,
        "CharPositionInLine" : 2
      },
      "273" : {
        "Text" : "# public function to add target that creates C code from Mathematica code\n",
        "Line" : 3786,
        "CharPositionInLine" : 0
      },
      "274" : {
        "Text" : "# public function to simplify testing WolframLibrary targets\n",
        "Line" : 3838,
        "CharPositionInLine" : 0
      },
      "275" : {
        "Text" : "# run Mathematica kernel and load Wolfram library\n",
        "Line" : 3855,
        "CharPositionInLine" : 1
      },
      "276" : {
        "Text" : "# public function that sets dynamic library names according to LibraryLink naming conventions\n",
        "Line" : 3887,
        "CharPositionInLine" : 0
      },
      "277" : {
        "Text" : "# Mathematica kernel cannot load Cygwin generated libraries linked with Cygwin runtime DLL\n\n# a work-around is to use the -mno-cygwin flag, which is only supported by gcc 3.x, not by gcc 4.x\n",
        "Line" : 3905,
        "CharPositionInLine" : 3
      },
      "278" : {
        "Text" : "# public function for creating dynamic library loadable with LibraryLink\n",
        "Line" : 3918,
        "CharPositionInLine" : 0
      },
      "279" : {
        "Text" : "# public function for creating source file from template file using mprep\n",
        "Line" : 3928,
        "CharPositionInLine" : 0
      },
      "280" : {
        "Text" : "# under Cygwin invoke mprep.exe with template file argument specified as\n\n# a relative path because it cannot handle absolute Cygwin UNIX paths\n",
        "Line" : 3964,
        "CharPositionInLine" : 2
      },
      "281" : {
        "Text" : "# public function for creating MathLink executable from template file and source files\n",
        "Line" : 3984,
        "CharPositionInLine" : 0
      },
      "282" : {
        "Text" : "# public function for exporting standard mprep header and trailer code\n",
        "Line" : 3996,
        "CharPositionInLine" : 0
      },
      "283" : {
        "Text" : "# prevent CMake from interpreting ; as a list separator\n",
        "Line" : 4027,
        "CharPositionInLine" : 1
      },
      "284" : {
        "Text" : "# public function for creating source file from template file using mprep\n",
        "Line" : 4058,
        "CharPositionInLine" : 0
      },
      "285" : {
        "Text" : "# under Cygwin invoke mprep.exe with template file argument specified as\n\n# a relative path because it cannot handle absolute Cygwin UNIX paths\n",
        "Line" : 4094,
        "CharPositionInLine" : 2
      },
      "286" : {
        "Text" : "# public function for creating WSTP executable from template file and source files\n",
        "Line" : 4114,
        "CharPositionInLine" : 0
      },
      "287" : {
        "Text" : "# public function for exporting standard mprep header and trailer code\n",
        "Line" : 4126,
        "CharPositionInLine" : 0
      },
      "288" : {
        "Text" : "# prevent CMake from interpreting ; as a list separator\n",
        "Line" : 4157,
        "CharPositionInLine" : 1
      },
      "289" : {
        "Text" : "# public function for resolving a TestSuite declaration in a Mathematica unit test file\n",
        "Line" : 4188,
        "CharPositionInLine" : 0
      },
      "290" : {
        "Text" : "# parse test file names from TestSuite[{ ... }]\n",
        "Line" : 4196,
        "CharPositionInLine" : 2
      },
      "291" : {
        "Text" : "# parse quoted test file name\n",
        "Line" : 4204,
        "CharPositionInLine" : 4
      },
      "292" : {
        "Text" : "# not a test suite file, return test suite file path itself\n",
        "Line" : 4213,
        "CharPositionInLine" : 3
      },
      "293" : {
        "Text" : "# public function for adding a CMake test that runs a Mathematica MUnit test file or notebook\n",
        "Line" : 4225,
        "CharPositionInLine" : 0
      },
      "294" : {
        "Text" : "# default to VerbosePrintLogger which prints detailed information for failed tests\n",
        "Line" : 4241,
        "CharPositionInLine" : 2
      },
      "295" : {
        "Text" : "# notebook test run requires Mathematica front end\n",
        "Line" : 4257,
        "CharPositionInLine" : 2
      },
      "296" : {
        "Text" : "# default to using undocumented function Developer`UseFrontEnd\n\n# available in Mathematica 5.1 and newer\n",
        "Line" : 4260,
        "CharPositionInLine" : 4
      },
      "297" : {
        "Text" : "# documented function UsingFrontEnd available since Mathematica 7\n",
        "Line" : 4264,
        "CharPositionInLine" : 4
      },
      "298" : {
        "Text" : "# default to using DirectoryName\n",
        "Line" : 4283,
        "CharPositionInLine" : 5
      },
      "299" : {
        "Text" : "# function FileNameTake available since Mathematica 7\n",
        "Line" : 4286,
        "CharPositionInLine" : 5
      },
      "300" : {
        "Text" : "# use MUnit TestRun result as exit code to signal CTest success or failure\n",
        "Line" : 4302,
        "CharPositionInLine" : 1
      },
      "301" : {
        "Text" : "# public function for adding a target which builds Mathematica documentation\n",
        "Line" : 4323,
        "CharPositionInLine" : 0
      },
      "302" : {
        "Text" : "# documentation build requires Apache Ant\n",
        "Line" : 4325,
        "CharPositionInLine" : 1
      },
      "303" : {
        "Text" : "# find DocumentationBuild package\n",
        "Line" : 4335,
        "CharPositionInLine" : 1
      },
      "304" : {
        "Text" : "# find Transmogrify package required by DocumentationBuild package\n",
        "Line" : 4343,
        "CharPositionInLine" : 1
      },
      "305" : {
        "Text" : "# build command from options\n",
        "Line" : 4354,
        "CharPositionInLine" : 1
      },
      "306" : {
        "Text" : "# set up custom target\n",
        "Line" : 4400,
        "CharPositionInLine" : 1
      },
      "307" : {
        "Text" : "# set up documentation generation script if all requirements are met\n",
        "Line" : 4408,
        "CharPositionInLine" : 2
      },
      "308" : {
        "Text" : "# just generate empty documentation directory and print message\n",
        "Line" : 4418,
        "CharPositionInLine" : 2
      },
      "309" : {
        "Text" : "# public function to simplify testing J/Link programs\n",
        "Line" : 4447,
        "CharPositionInLine" : 0
      },
      "310" : {
        "Text" : "# run Mathematica kernel and load JAR file\n",
        "Line" : 4468,
        "CharPositionInLine" : 2
      },
      "311" : {
        "Text" : "# run JAR file as front-end to Mathematica kernel\n",
        "Line" : 4479,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 312
    },
    "doc/CMakeLists.txt" : {
      "ObjectId" : "9019afa49ca1a8e70c82739030d50fca32078dcb",
      "LastModified" : "2018-07-08T10:59:09Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/CMakeLists.txt" : {
      "ObjectId" : "4a28f1e0b87bad11f39c0f2505b7f3f10464deb5",
      "LastModified" : "2018-03-27T02:48:09Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "cbd87976af928b28641da9de68fc27821ae775cf",
      "LastModified" : "2018-12-17T10:01:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# GM2Calc main executable\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# MathML executable\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# installation\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "304e54d9c97908d7eeba39fa64f864c4d3fb41a9",
      "LastModified" : "2018-03-27T02:48:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# test C/C++ executables\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# test shell scripts\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# test Mathematica scripts\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    }
  },
  "FileTypes" : {
    "CMAKE" : 7
  },
  "ElapsedTime" : 555
}