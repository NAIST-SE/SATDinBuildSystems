{
  "Repository" : "284",
  "Revision" : "HEAD",
  "ObjectId" : "79d96979125e9aaa53774a4e1767b1eb231031a9",
  "CommitTime" : "2019-04-17T21:05:38Z",
  "Files" : {
    "src/mongo/gotools/src/github.com/mongodb/mongo-tools/vendor/github.com/10gen/llmgo/Makefile" : {
      "ObjectId" : "51bee73225507f360c2310436f7f93693edd7706",
      "LastModified" : "2018-12-07T02:13:47Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/mongo/gotools/src/github.com/mongodb/mongo-tools/vendor/github.com/smartystreets/assertions/internal/Makefile" : {
      "ObjectId" : "0894b82bd81d2f249c79e988f3214a17539dacff",
      "LastModified" : "2018-12-07T02:13:47Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This Makefile pulls the latest oglematchers (with dependencies),\n\n# rewrites the imports to match this location,\n\n# and ensures that all the tests pass.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/mongo/gotools/src/github.com/mongodb/mongo-tools/vendor/golang.org/x/text/collate/tools/colcmp/Makefile" : {
      "ObjectId" : "1cf782263394c007be0bd812b89edd02565b6be2",
      "LastModified" : "2018-12-07T02:13:47Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright 2012 The Go Authors. All rights reserved.\n\n# Use of this source code is governed by a BSD-style\n\n# license that can be found in the LICENSE file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/mongo/gotools/src/github.com/mongodb/mongo-tools/vendor/golang.org/x/text/language/Makefile" : {
      "ObjectId" : "79f005784fcceda332f68b5e682745e438a4a1f6",
      "LastModified" : "2018-12-07T02:13:47Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright 2013 The Go Authors. All rights reserved.\n\n# Use of this source code is governed by a BSD-style\n\n# license that can be found in the LICENSE file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build (but do not run) maketables during testing,\n\n# just to make sure it still compiles.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/mongo/gotools/src/github.com/mongodb/mongo-tools/vendor/gopkg.in/mgo.v2/Makefile" : {
      "ObjectId" : "d1027d4509026b80af67fb71e0c8ab921ce955e7",
      "LastModified" : "2018-12-07T02:13:47Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/third_party/abseil-cpp-master/abseil-cpp/CMake/AbseilHelpers.cmake" : {
      "ObjectId" : "e4289c1168921bf3755d6df5e07c99e6623a2bd3",
      "LastModified" : "2018-12-19T18:01:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright 2017 The Abseil Authors.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#    http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The IDE folder for Abseil that will be used if Abseil is included in a CMake\n\n# project that sets\n\n#    set_property(GLOBAL PROPERTY USE_FOLDERS ON)\n\n# For example, Visual Studio supports folders.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# create a library in the absl namespace\n\n#\n\n# parameters\n\n# SOURCES : sources files for the library\n\n# PUBLIC_LIBRARIES: targets and flags for linking phase\n\n# PRIVATE_COMPILE_FLAGS: compile flags for the library. Will not be exported.\n\n# EXPORT_NAME: export name for the absl:: target export\n\n# TARGET: target name\n\n#\n\n# create a target associated to <NAME>\n\n# libraries are installed under CMAKE_INSTALL_FULL_LIBDIR by default\n\n#\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# keep that in case we want to support installation one day\n",
        "Line" : 41,
        "CharPositionInLine" : 22
      },
      "4" : {
        "Text" : "# Add all Abseil targets to a a folder in the IDE for organization.\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# CMake function to imitate Bazel's cc_library rule.\n\n#\n\n# Parameters:\n\n# NAME: name of target (see Note)\n\n# HDRS: List of public header files for the library\n\n# SRCS: List of source files for the library\n\n# DEPS: List of other libraries to be linked in to the binary targets\n\n# COPTS: List of private compile options\n\n# DEFINES: List of public defines\n\n# LINKOPTS: List of link options\n\n# PUBLIC: Add this so that this library will be exported under absl:: (see Note).\n\n# Also in IDE, target will appear in Abseil folder while non PUBLIC will be in Abseil/internal.\n\n# TESTONLY: When added, this target will only be built if user passes -DABSL_RUN_TESTS=ON to CMake.\n\n#\n\n# Note:\n\n# By default, absl_cc_library will always create a library named absl_internal_${NAME},\n\n# and alias target absl::${NAME}.\n\n# This is to reduce namespace pollution.\n\n#\n\n# absl_cc_library(\n\n#   NAME\n\n#     awesome\n\n#   HDRS\n\n#     \"a.h\"\n\n#   SRCS\n\n#     \"a.cc\"\n\n# )\n\n# absl_cc_library(\n\n#   NAME\n\n#     fantastic_lib\n\n#   SRCS\n\n#     \"b.cc\"\n\n#   DEPS\n\n#     absl_internal_awesome # not \"awesome\"!\n\n# )\n\n#\n\n# If PUBLIC is set, absl_cc_library will instead create a target named\n\n# absl_${NAME} and still an alias absl::${NAME}.\n\n#\n\n# absl_cc_library(\n\n#   NAME\n\n#     main_lib\n\n#   ...\n\n#   PUBLIC\n\n# )\n\n#\n\n# User can then use the library as absl::main_lib (although absl_main_lib is defined too).\n\n#\n\n# TODO: Implement \"ALWAYSLINK\"\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Check if this is a header-only library\n",
        "Line" : 137,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Add all Abseil targets to a a folder in the IDE for organization.\n",
        "Line" : 159,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# INTERFACE libraries can't have the CXX_STANDARD property set\n",
        "Line" : 168,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# Generating header-only library\n",
        "Line" : 172,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# absl_cc_test()\n\n#\n\n# CMake function to imitate Bazel's cc_test rule.\n\n#\n\n# Parameters:\n\n# NAME: name of target (see Usage below)\n\n# SRCS: List of source files for the binary\n\n# DEPS: List of other libraries to be linked in to the binary targets\n\n# COPTS: List of private compile options\n\n# DEFINES: List of public defines\n\n# LINKOPTS: List of link options\n\n#\n\n# Note:\n\n# By default, absl_cc_test will always create a binary named absl_${NAME}.\n\n# This will also add it to ctest list as absl_${NAME}.\n\n#\n\n# Usage:\n\n# absl_cc_library(\n\n#   NAME\n\n#     awesome\n\n#   HDRS\n\n#     \"a.h\"\n\n#   SRCS\n\n#     \"a.cc\"\n\n#   PUBLIC\n\n# )\n\n#\n\n# absl_cc_test(\n\n#   NAME\n\n#     awesome_test\n\n#   SRCS\n\n#     \"awesome_test.cc\"\n\n#   DEPS\n\n#     absl::awesome\n\n#     gmock\n\n#     gtest_main\n\n# )\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Add all Abseil targets to a a folder in the IDE for organization.\n",
        "Line" : 252,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "#\n\n# header only virtual target creation\n\n#\n",
        "Line" : 261,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Add all Abseil targets to a a folder in the IDE for organization.\n",
        "Line" : 297,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "#\n\n# create an abseil unit_test and add it to the executed test list\n\n#\n\n# parameters\n\n# TARGET: target name prefix\n\n# SOURCES: sources files for the tests\n\n# PUBLIC_LIBRARIES: targets and flags for linking phase.\n\n# PRIVATE_COMPILE_FLAGS: compile flags for the test. Will not be exported.\n\n#\n\n# create a target associated to <NAME>_bin\n\n#\n\n# all tests will be register for execution with add_test()\n\n#\n\n# test compilation and execution is disable when ABSL_RUN_TESTS=OFF\n\n#\n",
        "Line" : 309,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Add all Abseil targets to a a folder in the IDE for organization.\n",
        "Line" : 352,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 16
    },
    "src/third_party/abseil-cpp-master/abseil-cpp/CMake/DownloadGTest.cmake" : {
      "ObjectId" : "3c682aef07f3d7fb2a98657a5d6dcbe9da371ed3",
      "LastModified" : "2018-12-19T18:01:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Downloads and unpacks googletest at configure time.  Based on the instructions\n\n# at https://github.com/google/googletest/tree/master/googletest#incorporating-into-an-existing-cmake-project\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Download the latest googletest from Github master\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Configure and build the downloaded googletest source\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Prevent overriding the parent project's compiler/linker settings on Windows\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add googletest directly to our build. This defines the gtest and gtest_main\n\n# targets.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/third_party/abseil-cpp-master/abseil-cpp/absl/compiler_config_setting.bzl" : {
      "ObjectId" : "b77c4f563b95d332c2862657de884db4be7abb4e",
      "LastModified" : "2018-12-07T02:13:47Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "#\n# Copyright 2018 The Abseil Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"Creates config_setting that allows selecting based on 'compiler' value.\"\"\"",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The \"do_not_use_tools_cpp_compiler_present\" attribute exists to\n# distinguish between older versions of Bazel that do not support\n# \"@bazel_tools//tools/cpp:compiler\" flag_value, and newer ones that do.\n# In the future, the only way to select on the compiler will be through\n# flag_values{\"@bazel_tools//tools/cpp:compiler\"} and the else branch can\n# be removed.",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "src/third_party/abseil-cpp-master/abseil-cpp/absl/copts/AbseilConfigureCopts.cmake" : {
      "ObjectId" : "6fde7754d109d77e535f439bbd70edeabae84604",
      "LastModified" : "2018-12-19T18:01:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See absl/copts/copts.py and absl/copts/generate_copts.py\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# MATCHES so we get both Clang and AppleClang\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# This flag is used internally for Bazel builds and is kept here for consistency\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/third_party/abseil-cpp-master/abseil-cpp/absl/copts/GENERATED_AbseilCopts.cmake" : {
      "ObjectId" : "80c981930767256d5f6f220be8ffdee65f243f7d",
      "LastModified" : "2018-12-19T18:01:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# GENERATED! DO NOT MANUALLY EDIT THIS FILE.\n\n#\n\n# (1) Edit absl/copts/copts.py.\n\n# (2) Run `python <path_to_absl>/copts/generate_copts.py`.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/third_party/abseil-cpp-master/abseil-cpp/absl/copts/GENERATED_copts.bzl" : {
      "ObjectId" : "a001347d4909e52b4c52afde9437f036b6a33cf0",
      "LastModified" : "2018-12-19T18:01:20Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "\"\"\"GENERATED! DO NOT MANUALLY EDIT THIS FILE.\n\n(1) Edit absl/copts/copts.py.\n(2) Run `python <path_to_absl>/copts/generate_copts.py`.\n\"\"\"",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/third_party/abseil-cpp-master/abseil-cpp/absl/copts/configure_copts.bzl" : {
      "ObjectId" : "57cd3f62998b7a9565db517d3dceb4a7b267bf1e",
      "LastModified" : "2018-12-19T18:01:20Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "\"\"\"absl specific copts.\n\nThis file simply selects the correct options from the generated files.  To\nchange Abseil copts, edit absl/copts/copts.py\n\"\"\"",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in absence of modules (--compiler=gcc or -c opt), cc_tests leak their copts\n# to their (included header) dependencies and fail to build outside absl",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/third_party/asio-master/asio/Makefile.am" : {
      "ObjectId" : "0acdc02d9a1e22d981521dd6234a8c00eecbca42",
      "LastModified" : "2018-12-19T18:01:20Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/third_party/asio-master/asio/include/Makefile.am" : {
      "ObjectId" : "a6ac9947dbb5b1f8289552fabaad30635c3a1fac",
      "LastModified" : "2018-12-19T18:01:20Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# find . -name \"*.*pp\" | sed -e 's/^\\.\\///' | sed -e 's/^.*$/  & \\\\/' | sort\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/third_party/asio-master/asio/src/Makefile.am" : {
      "ObjectId" : "4ec11cd5242318839ee770d6a5d2b8b4809c5909",
      "LastModified" : "2018-12-19T18:01:20Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/third_party/gperftools-2.7/dist/Makefile.am" : {
      "ObjectId" : "c79227a7e0e4e00c5827e06232ffaffa775eec8c",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Note: for every library we create, we're explicit about what symbols\n\n# we export.  In order to avoid complications with C++ mangling, we always\n\n# use the regexp for of specifying symbols.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Make sure that when we re-make ./configure, we get the macros we need\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This is so we can #include <gperftools/foo>\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This is mostly based on configure options\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# These are good warnings to turn on by default.  We also tell gcc\n\n# that malloc, free, realloc, mmap, etc. are not builtins (these flags\n\n# are supported since gcc 3.1.1).  gcc doesn't think most of them are\n\n# builtins now in any case, but it's best to be explicit in case that\n\n# changes one day.  gcc ignores functions it doesn't understand.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# On i386, -mmmx is needed for the mmx-based instructions in\n\n# atomicops-internal-x86.h. Also as of gcc 4.6, -fomit-frame-pointer\n\n# is the default. Since we must always have frame pointers for I386\n\n# in order to generate backtraces we now specify -fno-omit-frame-pointer\n\n# by default.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# The -no-undefined flag allows libtool to generate shared libraries for\n\n# Cygwin and MinGW.  LIBSTDCXX_LA_LINKER_FLAG is used to fix a Solaris bug.\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# These are x86-specific, having to do with frame-pointers.  In\n\n# particular, some x86_64 systems do not insert frame pointers by\n\n# default (all i386 systems that I know of, do.  I don't know about\n\n# non-x86 chips).  We need to tell perftools what to do about that.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# TODO(csilvers): check if -fomit-frame-pointer might be in $(CXXFLAGS),\n\n#                 before setting this.\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# For windows systems (at least, mingw), we need to tell all our\n\n# tests to link in libtcmalloc using -u.  This is because libtcmalloc\n\n# accomplishes its tasks via patching, leaving no work for the linker\n\n# to identify, so the linker will ignore libtcmalloc by default unless\n\n# we explicitly create a dependency via -u.\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# If we have objcopy, make malloc/free/etc weak symbols.  That way folks\n\n# can override our malloc if they want to (they can still use tc_malloc).\n\n# Note: the weird-looking symbols are the c++ memory functions:\n\n# (in order) new, new(nothrow), new[], new[](nothrow), delete, delete[]\n\n# In theory this will break if mangling changes, but that seems pretty\n\n# unlikely at this point.  Just in case, I throw in versions with an\n\n# extra underscore as well, which may help on OS X.\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# The .h files you want to install (that is, .h files that people\n\n# who install this package can include in their own applications.)\n\n# We'll add to this later, on a library-by-library basis\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# tcmalloc.h is a special case, because it's a .h.in file\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# This is provided for backwards compatibility.  It is populated by\n\n# files that just forward to the canonical location in\n\n# perftoolsincludedir.\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# This is for HTML and other documentation you want to install.\n\n# Add your documentation files (in doc/) in addition to these\n\n# top-level boilerplate files.  Also add a TODO file if you have one.\n\n# We'll add to this later, on a library-by-library basis\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# The libraries (.so's) you want to install\n\n# We'll add to this later, on a library-by-library basis\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# This is for 'convenience libraries' -- basically just a container for sources\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## The location of the windows project file for each binary we make\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# unittests you want to run when people type 'make check'.\n\n# Note: tests cannot take any arguments!\n\n# In theory, unittests that are scripts should be added to check_SCRIPTS\n\n# instead.  But check_SCRIPTS is definitely a second-class testing mechanims:\n\n# it don't get TESTS_ENVIRONMENT, and it doesn't get success/failure counting\n\n# (in fact, a script failure aborts all the rest of the tests, even with -k).\n\n# So, for scripts, we add the script to tests, and also put in an empty\n\n# rule so automake doesn't try to build the script as a C binary.\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# TESTS_ENVIRONMENT sets environment variables for when you run unittest.\n\n# We always get \"srcdir\" set for free.\n\n# We'll add to this later, on a library-by-library basis.\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# All script tests should be added here\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# If your test calls another program that, like the test itself, shouldn't\n\n# be installed, add it here.  (Stuff in TESTS is automatically added later).\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Binaries we might build that should be installed\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# This is my own var, used for extra libraries I make that I need installed\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "## vvvv RULES TO MAKE THE LIBRARIES, BINARIES, AND UNITTESTS\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "### ------- library routines, in src/base\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# This is a 'convenience library' -- it's not actually installed or anything\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# .cc is conditionally added below\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# For MinGW, we use also have to use libwindows Luckily, we need the\n\n# windows.a library in exactly the same place we need spinlock.a\n\n# (pretty much everywhere), so we can use the same variable name for\n\n# each.  We can also optimize the MinGW rule a bit by leaving out\n\n# files we know aren't used on windows, such as\n\n# atomicops-internals-x86.cc.  libwindows also obsoletes the need for\n\n# other files like system_alloc.cc.\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# patch_functions.cc uses Psapi.lib.  MSVC has a #pragma for that, but not us.\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# We also need to tell mingw that sysinfo.cc needs shlwapi.lib.\n\n# (We do this via a #pragma for msvc, but need to do it here for mingw).\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# There's a windows-specific unittest we can run.  Right now it's\n\n# win64-specific, and relies on masm, so we comment it out.\n\n## TESTS += preamble_patcher_test\n\n## preamble_patcher_test_SOURCES = src/windows/preamble_patcher_test.cc \\\n##                                 src/windows/shortproc.asm \\\n##                                 src/windows/auto_testing_hook.h \\\n##                                 src/windows/preamble_patcher.h \\\n##                                 src/base/basictypes.h \\\n##                                 src/base/logging.h\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "## preamble_patcher_test_LDFLAGS = $(TCMALLOC_FLAGS)\n\n## preamble_patcher_test_LDADD = $(LIBTCMALLOC_MINIMAL)\n",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# patch_functions.cc #includes tcmalloc.cc, so no need to link it in.\n",
        "Line" : 268,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# windows has its own system for threads and system memory allocation.\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# spinlock is the only code that uses atomicops.\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# spinlock also needs NumCPUs, from libsysinfo, which in turn needs liblogging\n",
        "Line" : 291,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Add this whether or not we're under MinGW, to keep the tarball complete.\n",
        "Line" : 299,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Because we've commented out the test, above, we have to explicitly add\n\n# the test files to the tarball or automake will leave them out.\n",
        "Line" : 301,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "### Unittests\n",
        "Line" : 307,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# By default, MallocHook takes stack traces for use by the heap-checker.\n\n# We don't need that functionality here, so we turn it off to reduce deps.\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "### ------- stack trace\n",
        "Line" : 339,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "### The header files we use.  We divide into categories based on directory\n",
        "Line" : 343,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "### Making the library\n",
        "Line" : 362,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "### Unittests\n",
        "Line" : 375,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "### Documentation\n",
        "Line" : 385,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "### ------- pprof\n",
        "Line" : 390,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# If we are not compiling with stacktrace support, pprof is worthless\n",
        "Line" : 392,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "### Unittests\n",
        "Line" : 397,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Let unittests find pprof if they need to run it\n",
        "Line" : 403,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "### Documentation\n",
        "Line" : 406,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# On MSVC, we need our own versions of addr2line and nm to work with pprof.\n",
        "Line" : 410,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# This is a slight abuse of WINDOWS_PROJECTS, but not much\n",
        "Line" : 413,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "### ------- tcmalloc_minimal (thread-caching malloc)\n",
        "Line" : 419,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "### The header files we use.  We divide into categories based on directory\n",
        "Line" : 421,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "### Making the library\n",
        "Line" : 458,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# We #define NO_TCMALLOC_SAMPLES, since sampling is turned off for _minimal.\n",
        "Line" : 476,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# -version-info gets passed to libtool\n",
        "Line" : 489,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# For windows, we're playing around with trying to do some stacktrace\n\n# support even with libtcmalloc_minimal.  For everyone else, though,\n\n# we turn off all stack-trace activity for libtcmalloc_minimal.\n\n# TODO(csilvers): when we're done experimenting, do something principled here\n",
        "Line" : 493,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "### Unittests\n",
        "Line" : 505,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# Commented out for the moment because malloc(very_big_num) is broken in\n\n# standard libc!  At least, in some situations, some of the time.\n\n## TESTS += malloc_unittest\n\n## MALLOC_UNITEST_INCLUDES = src/gperftools/malloc_extension.h \\\n##                           src/gperftools/malloc_hook.h \\\n##                           src/gperftools/malloc_hook_c.h \\\n##                           src/malloc_hook-inl.h \\\n##                           src/malloc_hook_mmap_linux.h \\\n##                           src/malloc_hook_mmap_freebsd.h \\\n##                           src/base/basictypes.h \\\n##                           src/maybe_threads.h\n",
        "Line" : 507,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "## malloc_unittest_SOURCES = src/tests/tcmalloc_unittest.cc \\\n##                           src/malloc_hook.cc \\\n##                           src/malloc_extension.cc \\\n##                           $(MAYBE_THREADS_CC) \\\n##                           $(MALLOC_UNITTEST_INCLUDES)\n",
        "Line" : 518,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "## malloc_unittest_CXXFLAGS = $(PTHREAD_CFLAGS) $(AM_CXXFLAGS)\n\n## malloc_unittest_LDFLAGS = $(PTHREAD_CFLAGS)\n\n## malloc_unittest_LDADD = $(PTHREAD_LIBS)\n",
        "Line" : 523,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# We want libtcmalloc last on the link line, but due to a bug in\n\n# libtool involving convenience libs, they need to come last on the\n\n# link line in order to get dependency ordering right.  This is ok:\n\n# convenience libraries are .a's, so tcmalloc is still the last .so.\n\n# We also put pthreads after tcmalloc, because some pthread\n\n# implementations define their own malloc, and we need to go on the\n\n# first linkline to make sure our malloc 'wins'.\n",
        "Line" : 535,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# lets make sure we exerice ASSERTs in at least in statically linked\n\n# configuration\n",
        "Line" : 545,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# This tests it works to LD_PRELOAD libtcmalloc (tests maybe_threads.cc)\n\n# In theory this should work under mingw, but mingw has trouble running\n\n# shell scripts that end in .exe.  And it doesn't seem to build shared\n\n# libraries anyway (so can't be LD_PRELOADed) -- in fact, anybody who\n\n# chooses not to build shared libraries won't be able to run this test.\n\n# TODO(csilvers): figure out how to nix \".exe\" or otherwise work under mingw\n",
        "Line" : 572,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# This script preloads libtcmalloc, and calls two other binaries as well\n\n# TODO(csilvers): replace by 'if ! cmp $^ $@ >/dev/null 2>&; then ...; fi'\n",
        "Line" : 583,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# These all tests components of tcmalloc_minimal\n",
        "Line" : 593,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# This doesn't work with mingw, which links foo.a even though it\n\n# doesn't set ENABLE_STATIC.  TODO(csilvers): set enable_static=true\n\n# in configure.ac:36?\n",
        "Line" : 671,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# -ansi here is just to help ensure the code is bog-standard C.\n",
        "Line" : 680,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "### Documentation\n",
        "Line" : 748,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# I don't know how to say \"distribute the .dot files but don't install them\";\n\n# noinst doesn't seem to work with data.  I separate them out anyway, in case\n\n# one day we figure it out.  Regardless, installing the dot files isn't the\n\n# end of the world.\n",
        "Line" : 777,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "### ------- tcmalloc_minimal_debug (thread-caching malloc with debugallocation)\n",
        "Line" : 787,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# version_info gets passed to libtool\n",
        "Line" : 796,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "### Unittests\n",
        "Line" : 803,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# debugallocation_test checks that we print a proper stacktrace when\n\n# debug-allocs fail, so we can't run it if we don't have stacktrace info.\n",
        "Line" : 834,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# This is the sub-program used by debugallocation_test.sh\n",
        "Line" : 845,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "### ------- tcmalloc (thread-caching malloc + heap profiler + heap checker)\n",
        "Line" : 908,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "### The header files we use.  We divide into categories based on directory\n",
        "Line" : 912,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "### Making the library\n",
        "Line" : 943,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# heap-checker-bcad is last, in hopes its global ctor will run first.\n\n# (Note this is added to libtcmalloc.la, not libtcmalloc_internal.la,\n\n# but that's ok; the internal/external distinction is only useful for\n\n# cygwin, and cygwin doesn't use HEAP_CHECKER anyway.)\n",
        "Line" : 966,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "### Unittests\n",
        "Line" : 985,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# We want libtcmalloc last on the link line, but due to a bug in\n\n# libtool involving convenience libs, they need to come last on the\n\n# link line in order to get dependency ordering right.  This is ok:\n\n# convenience libraries are .a's, so tcmalloc is still the last .so.\n\n# We also put pthreads after tcmalloc, because some pthread\n\n# implementations define their own malloc, and we need to go on the\n\n# first linkline to make sure our malloc 'wins'.\n",
        "Line" : 1004,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# # lets make sure we exerice ASSERTs in at least in statically linked\n\n# # configuration\n\n# TESTS += tcm_asserts_unittest\n\n# tcm_asserts_unittest_SOURCES = src/tests/tcmalloc_unittest.cc \\\n#                                 src/tests/testutil.h src/tests/testutil.cc \\\n#                                 $(libtcmalloc_internal_la_SOURCES) \\\n#                                 $(libtcmalloc_la_SOURCES) \\\n#                                 $(TCMALLOC_UNITTEST_INCLUDES)\n",
        "Line" : 1013,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# tcm_asserts_unittest_CXXFLAGS = $(PTHREAD_CFLAGS) $(AM_CXXFLAGS) $(NO_BUILTIN_CXXFLAGS)\n\n# tcm_asserts_unittest_LDFLAGS = $(PTHREAD_CFLAGS) $(TCMALLOC_FLAGS)\n\n# tcm_asserts_unittest_LDADD = $(LIBSPINLOCK) libmaybe_threads.la libstacktrace.la \\\n#                              liblogging.la $(PTHREAD_LIBS)\n",
        "Line" : 1021,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# This makes sure it's safe to link in both tcmalloc and\n\n# tcmalloc_minimal.  (One would never do this on purpose, but perhaps\n\n# by accident...)  When we can compile libprofiler, we also link it in\n\n# to make sure that works too.  NOTE: On OS X, it's *not* safe to\n\n# link both in (we end up with two copies of every global var, and\n\n# the code tends to pick one arbitrarily), so don't run the test there.\n\n# (We define these outside the 'if' because they're reused below.)\n",
        "Line" : 1026,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# We want libtcmalloc last on the link line, but due to a bug in\n\n# libtool involving convenience libs, they need to come last on the\n\n# link line in order to get dependency ordering right.  This is ok:\n\n# convenience libraries are .a's, so tcmalloc is still the last .so.\n\n# We also put pthreads after tcmalloc, because some pthread\n\n# implementations define their own malloc, and we need to go on the\n\n# first linkline to make sure our malloc 'wins'.\n",
        "Line" : 1039,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "# sampler_test and sampling_test both require sampling to be turned\n\n# on, which it's not by default.  Use the \"standard\" value of 2^19.\n",
        "Line" : 1078,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# These unittests often need to run binaries.  They're in the current dir\n",
        "Line" : 1091,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "# This is the sub-program used by sampling_test.sh\n\n# The -g is so pprof can get symbol information.\n",
        "Line" : 1103,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "# These are sub-programs used by heap-profiler_unittest.sh\n",
        "Line" : 1127,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "# Tests the compatibility include-headers in google/.  Requires a function\n\n# defined in the heap-profiler, which is why the test lives here.\n",
        "Line" : 1137,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "# These are sub-programs used by heap-checker_unittest.sh\n",
        "Line" : 1165,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "# We want libtcmalloc last on the link line, but due to a bug in\n\n# libtool involving convenience libs, they need to come last on the\n\n# link line in order to get dependency ordering right.  This is ok:\n\n# convenience libraries are .a's, so tcmalloc is still the last .so.\n\n# We also put pthreads after tcmalloc, because some pthread\n\n# implementations define their own malloc, and we need to go on the\n\n# first linkline to make sure our malloc 'wins'.\n",
        "Line" : 1177,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "### Documentation (above and beyond tcmalloc_minimal documentation)\n",
        "Line" : 1188,
        "CharPositionInLine" : 0
      },
      "96" : {
        "Text" : "### ------- tcmalloc with debugallocation\n",
        "Line" : 1198,
        "CharPositionInLine" : 0
      },
      "97" : {
        "Text" : "### Unittests\n",
        "Line" : 1214,
        "CharPositionInLine" : 0
      },
      "98" : {
        "Text" : "# This is the sub-program using by sampling_debug_test.sh\n\n# The -g is so pprof can get symbol information.\n",
        "Line" : 1236,
        "CharPositionInLine" : 0
      },
      "99" : {
        "Text" : "# These are sub-programs used by heap-profiler_debug_unittest.sh\n",
        "Line" : 1255,
        "CharPositionInLine" : 0
      },
      "100" : {
        "Text" : "# These are sub-programs used by heap-checker_debug_unittest.sh\n",
        "Line" : 1273,
        "CharPositionInLine" : 0
      },
      "101" : {
        "Text" : "# We want libtcmalloc last on the link line, but due to a bug in\n\n# libtool involving convenience libs, they need to come last on the\n\n# link line in order to get dependency ordering right.  This is ok:\n\n# convenience libraries are .a's, so tcmalloc is still the last .so.\n",
        "Line" : 1278,
        "CharPositionInLine" : 0
      },
      "102" : {
        "Text" : "### ------- CPU profiler\n",
        "Line" : 1289,
        "CharPositionInLine" : 0
      },
      "103" : {
        "Text" : "### The header files we use.  We divide into categories based on directory\n",
        "Line" : 1293,
        "CharPositionInLine" : 0
      },
      "104" : {
        "Text" : "### Making the library\n",
        "Line" : 1310,
        "CharPositionInLine" : 0
      },
      "105" : {
        "Text" : "# We have to include ProfileData for profiledata_unittest\n",
        "Line" : 1317,
        "CharPositionInLine" : 0
      },
      "106" : {
        "Text" : "# See discussion above (under LIBTCMALLOC_MINIMAL) for why we do this.\n\n# Basically it's to work around systems where --rpath doesn't work right.\n",
        "Line" : 1322,
        "CharPositionInLine" : 0
      },
      "107" : {
        "Text" : "### Unittests\n",
        "Line" : 1326,
        "CharPositionInLine" : 0
      },
      "108" : {
        "Text" : "#WINDOWS_PROJECTS += vsprojects/getpc_test/getpc_test.vcproj\n",
        "Line" : 1328,
        "CharPositionInLine" : 0
      },
      "109" : {
        "Text" : "#WINDOWS_PROJECTS += vsprojects/profiledata_unittest/profiledata_unittest.vcproj\n",
        "Line" : 1332,
        "CharPositionInLine" : 0
      },
      "110" : {
        "Text" : "# These are sub-programs used by profiler_unittest.sh\n",
        "Line" : 1356,
        "CharPositionInLine" : 0
      },
      "111" : {
        "Text" : "# We depend on -lprofiler but haven't yet said how to build it.  Do so now.\n",
        "Line" : 1370,
        "CharPositionInLine" : 0
      },
      "112" : {
        "Text" : "# We depend on -lprofiler but haven't yet said how to build it.  Do so now.\n",
        "Line" : 1380,
        "CharPositionInLine" : 0
      },
      "113" : {
        "Text" : "### Documentation\n",
        "Line" : 1384,
        "CharPositionInLine" : 0
      },
      "114" : {
        "Text" : "### ------- CPU profiler and heap checker, in one!\n",
        "Line" : 1395,
        "CharPositionInLine" : 0
      },
      "115" : {
        "Text" : "# Ideally, folks who wanted to use both tcmalloc and libprofiler,\n\n# could just link them both into their application.  But while this\n\n# works fine for .so files, it does not for .a files.  The easiest way\n\n# around this -- and I've tried a bunch of the hard ways -- is to just\n\n# to create another set of libraries that has both functionality in it.\n",
        "Line" : 1397,
        "CharPositionInLine" : 0
      },
      "116" : {
        "Text" : "# Since this library is meant to be used as a .a, I don't worry as much\n\n# about .so versioning.  I just give the libtcmalloc version number.\n\n# TODO(csilvers): use -export-symbols-regex?\n",
        "Line" : 1409,
        "CharPositionInLine" : 0
      },
      "117" : {
        "Text" : "# We don't include libprofiler_la_LIBADD here because all it adds is\n\n# libstacktrace.la, which we already get via libtcmalloc.  Trying to\n\n# specify it twice causes link-time duplicate-definition errors. :-(\n",
        "Line" : 1414,
        "CharPositionInLine" : 0
      },
      "118" : {
        "Text" : "## ^^^^ END OF RULES TO MAKE YOUR LIBRARIES, BINARIES, AND UNITTESTS\n",
        "Line" : 1430,
        "CharPositionInLine" : 0
      },
      "119" : {
        "Text" : "# Do the weakening on some exported libtcmalloc symbols.\n",
        "Line" : 1433,
        "CharPositionInLine" : 0
      },
      "120" : {
        "Text" : "# This should always include $(TESTS), but may also include other\n\n# binaries that you compile but don't want automatically installed.\n\n# We'll add to this later, on a library-by-library basis\n",
        "Line" : 1439,
        "CharPositionInLine" : 0
      },
      "121" : {
        "Text" : "# http://linux.die.net/man/1/pkg-config, http://pkg-config.freedesktop.org/wiki\n",
        "Line" : 1450,
        "CharPositionInLine" : 0
      },
      "122" : {
        "Text" : "# I get the description and URL lines from the rpm spec. I use sed to\n\n# try to rewrite exec_prefix, libdir, and includedir in terms of\n\n# prefix, if possible.\n",
        "Line" : 1457,
        "CharPositionInLine" : 0
      },
      "123" : {
        "Text" : "# The other versions are mostly the same.\n",
        "Line" : 1476,
        "CharPositionInLine" : 0
      },
      "124" : {
        "Text" : "# Windows wants write permission to .vcproj files and maybe even sln files.\n",
        "Line" : 1494,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 125
    },
    "src/third_party/libstemmer_c/Makefile" : {
      "ObjectId" : "64d6c8ea596671ddcb61c3246c32036ec354c7f0",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/third_party/s2/Makefile" : {
      "ObjectId" : "cbc4fed9873a0634cfcfdb128d72fe3b2913deb8",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Please edit the following:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO(tudorh): Fix this.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#  ----- No more editing below -----\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----- OS Dependent -----\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Assume Mac Os X\n",
        "Line" : 31,
        "CharPositionInLine" : 20
      },
      "5" : {
        "Text" : "# Real targets\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#s2cellid_test\n",
        "Line" : 42,
        "CharPositionInLine" : 10
      },
      "7" : {
        "Text" : "# base.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# strings\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# util/coding\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# util/math\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#util/math/objs/exactfloat_test.o:util/math/exactfloat/exactfloat_test.cc\n\n#\t$(CCC) $(CFLAGS) -c util/math/exactfloat/exactfloat_test.cc -o util/math/objs/exactfloat_test.o\n\n#util/math/objs/vector_unittest.o:util/math/vector_unittest.cc\n\n#\t$(CCC) $(CFLAGS) -c util/math/vector_unittest.cc -o util/math/objs/vector_unittest.o\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#exactfloat_test: $(LIBS) objs/exactfloat_test.o\n\n#\t$(CCC) $(CFLAGS) $(LDFLAGS) objs/exactfloat_test.o $(LIBS) -o exactfloat_test\n\n#vector_unittest: $(LIBS) objs/vector_unittest.o\n\n#\t$(CCC) $(CFLAGS) $(LDFLAGS) objs/vector_unittest.o $(LIBS) -o vector_unittest\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# util/geometry\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "src/third_party/timelib-2018.01/Makefile" : {
      "ObjectId" : "46b03b40d45aa2d32a70a1ec40fdaa2b460849d3",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# -DDEBUG_PARSER\n",
        "Line" : 5,
        "CharPositionInLine" : 88
      },
      "CommentCount" : 1
    },
    "src/third_party/timelib-2018.01/zones/Makefile" : {
      "ObjectId" : "db1c110a0fd7f09727d63cad92fdb500091dd328",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0,
      "Errorlog" : "line 41:38 token recognition error at: '\"s/^.*(20[0-9]{2}).*$$/\\1'\nline 43:55 token recognition error at: '\\w'\nline 43:63 token recognition error at: '\\1'\nline 108:76 token recognition error at: '\" ext/date/lib/timezonedb.h\\n\\nrelease-php-commit: release-php-clone release-php-commit-72 release-php-commit-73 release-php-commit-master\\n\\nrelease-php-push: release-php-commit\\n\\tcd /tmp/tz-tmp; git push origin PHP-7.2 PHP-7.3 master\\n\\nrelease-php: release-php-clean release-php-clone release-php-commit release-php-push\\n\u0000'\n"
    },
    "src/third_party/wiredtiger/api/leveldb/Makefile.am" : {
      "ObjectId" : "34f2f97ec36bd7c1cafae218235ce2a0470eb0d9",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Setup the LevelDB headers to be installed in a wiredtiger/leveldb\n\n# subdirectory, so we don't interfere with other LevelDB installs.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/third_party/wiredtiger/bench/workgen/Makefile.am" : {
      "ObjectId" : "61512d653194035c0f08edb782a3fac0edb142bf",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# We keep generated Python sources under bench/workgen.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We build in different places for an install vs running from the tree:\n\n# clean up both.  Don't rely on \"setup.py clean\" -- everything that should\n\n# be removed is created under the build directory.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/third_party/wiredtiger/bench/wtperf/Makefile.am" : {
      "ObjectId" : "5690d03224e75c44e4bc722bbad7af21c3222409",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# automake 1.11 compatibility\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/third_party/wiredtiger/examples/c/Makefile.am" : {
      "ObjectId" : "e441d45af46bff81727fbc37a2c1f6d6b514c446",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# The examples can be run with no arguments as simple smoke tests\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Inject valgrind or similar\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/third_party/wiredtiger/examples/java/Makefile.am" : {
      "ObjectId" : "c7fbfffa48c6dc50f4b0e5bdd11e8c9b541c6948",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# TODO: How to add to existing Javadoc from main API?\n\n# JDOCDIR = $(top_srcdir)/docs/java\n\n# java_DATA = $(JDOCDIR)/index.html\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/third_party/wiredtiger/ext/collators/reverse/Makefile.am" : {
      "ObjectId" : "5cfde94d84796734971d6062e7f5f76158eb8889",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# libtool hack: noinst_LTLIBRARIES turns off building shared libraries as well\n\n# as installation, it will only build static libraries.  As far as I can tell,\n\n# the \"approved\" libtool way to turn them back on is by adding -rpath.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/third_party/wiredtiger/ext/collators/revint/Makefile.am" : {
      "ObjectId" : "8c85c6a4701f672f1c2ca94e7ccb64700cfc7e0e",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# libtool hack: noinst_LTLIBRARIES turns off building shared libraries as well\n\n# as installation, it will only build static libraries.  As far as I can tell,\n\n# the \"approved\" libtool way to turn them back on is by adding -rpath.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/third_party/wiredtiger/ext/compressors/lz4/Makefile.am" : {
      "ObjectId" : "c800a5adb1515eef99ed1e9cb39e920000f64bff",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/third_party/wiredtiger/ext/compressors/nop/Makefile.am" : {
      "ObjectId" : "87dbf18cb2267ec4610ce4f430d34757965c0ede",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# libtool hack: noinst_LTLIBRARIES turns off building shared libraries as well\n\n# as installation, it will only build static libraries.  As far as I can tell,\n\n# the \"approved\" libtool way to turn them back on is by adding -rpath.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/third_party/wiredtiger/ext/compressors/snappy/Makefile.am" : {
      "ObjectId" : "78317234ba0bf1f5f9db5838d08f6b1e801d6448",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/third_party/wiredtiger/ext/compressors/zlib/Makefile.am" : {
      "ObjectId" : "fb0ec30656205cdc449c21164dc334e4ef29c9a9",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/third_party/wiredtiger/ext/compressors/zstd/Makefile.am" : {
      "ObjectId" : "9f0997011e9f38923ca37162f0b5965b60304c27",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/third_party/wiredtiger/ext/datasources/helium/Makefile.am" : {
      "ObjectId" : "b4e6e67e2cd2e1bcaa267651bee62fea911ac792",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# libtool hack: noinst_LTLIBRARIES turns off building shared libraries as well\n\n# as installation, it will only build static libraries.  As far as I can tell,\n\n# the \"approved\" libtool way to turn them back on is by adding -rpath.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/third_party/wiredtiger/ext/encryptors/nop/Makefile.am" : {
      "ObjectId" : "189f764b04c43acdf1f756d46a63f02b8dc957df",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# libtool hack: noinst_LTLIBRARIES turns off building shared libraries as well\n\n# as installation, it will only build static libraries.  As far as I can tell,\n\n# the \"approved\" libtool way to turn them back on is by adding -rpath.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/third_party/wiredtiger/ext/encryptors/rotn/Makefile.am" : {
      "ObjectId" : "fec4ed0f861190f358752fdd1b638faa03c9b7df",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# libtool hack: noinst_LTLIBRARIES turns off building shared libraries as well\n\n# as installation, it will only build static libraries.  As far as I can tell,\n\n# the \"approved\" libtool way to turn them back on is by adding -rpath.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/third_party/wiredtiger/ext/extractors/csv/Makefile.am" : {
      "ObjectId" : "bb2a35bbf8e34f2d21ecf16301ff493eb05c679a",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# libtool hack: noinst_LTLIBRARIES turns off building shared libraries as well\n\n# as installation, it will only build static libraries.  As far as I can tell,\n\n# the \"approved\" libtool way to turn them back on is by adding -rpath.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/third_party/wiredtiger/ext/test/fail_fs/Makefile.am" : {
      "ObjectId" : "f31f5395cd1437a70105c32e21866889d56d3677",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# libtool hack: noinst_LTLIBRARIES turns off building shared libraries as well\n\n# as installation, it will only build static libraries.  As far as I can tell,\n\n# the \"approved\" libtool way to turn them back on is by adding -rpath.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/third_party/wiredtiger/ext/test/kvs_bdb/Makefile.am" : {
      "ObjectId" : "c7d0f58008511425b9e940a5369a6ddcfc53619c",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# libtool hack: noinst_LTLIBRARIES turns off building shared libraries as well\n\n# as installation, it will only build static libraries.  As far as I can tell,\n\n# the \"approved\" libtool way to turn them back on is by adding -rpath.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/third_party/wiredtiger/lang/java/Makefile.am" : {
      "ObjectId" : "71515c430fd413b46e6e43e64a0811ef38be21ac",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# The Java documentation is currently generated by Doxygen - disable javadoc\n\n#java_DATA = $(JDOCDIR)/index.html\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Some warnings when compiling the generated code are unavoidable\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#libwiredtiger_java_la_LDFLAGS = -module\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/third_party/wiredtiger/lang/python/Makefile.am" : {
      "ObjectId" : "3f29ea6aeea50ddac7f2316dd2c2c0e2774c558e",
      "LastModified" : "2019-04-16T04:45:56Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# We keep generated Python sources under lang/python: that's where they live\n\n# in release packages.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We build in different places for an install vs running from the tree:\n\n# clean up both.  Don't rely on \"setup.py clean\" -- everything that should\n\n# be removed is created under the build directory.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/third_party/wiredtiger/src/docs/Makefile" : {
      "ObjectId" : "71173523a0a3f528d74e667492a81ce2b8ab37fe",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/third_party/wiredtiger/test/3rdparty/extras-0.0.3/Makefile" : {
      "ObjectId" : "270e8d11546acf9d03c193cdced6edad556e41b1",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# See README.rst for copyright and licensing details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### Documentation ###\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# pydoctor emits deprecation warnings under Ubuntu 10.10 LTS\n",
        "Line" : 22,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 3
    },
    "src/third_party/wiredtiger/test/3rdparty/testscenarios-0.4/Makefile" : {
      "ObjectId" : "c38edf6bfe7263f57ad6a8609cb870f0196b3775",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/third_party/wiredtiger/test/3rdparty/testtools-0.9.34/Makefile" : {
      "ObjectId" : "ccaa77622865888b99372048efb3f4e8a056c081",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (c) 2008-2013 testtools developers. See LICENSE for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# An existing MANIFEST breaks distutils sometimes. Avoid that.\n",
        "Line" : 20,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "### Documentation ###\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# pydoctor emits deprecation warnings under Ubuntu 10.10 LTS\n",
        "Line" : 33,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# Clean out generated documentation\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Build the html docs using Sphinx.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/third_party/wiredtiger/test/3rdparty/testtools-0.9.34/doc/Makefile" : {
      "ObjectId" : "b5d07af57f233cb9f2ab293d629dcd553dcf95e7",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Internal variables.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/third_party/wiredtiger/test/bloom/Makefile.am" : {
      "ObjectId" : "6bba3a5e33f496baa226b1cd8293afd3b1d21528",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Run this during a \"make check\" smoke test.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/third_party/wiredtiger/test/checkpoint/Makefile.am" : {
      "ObjectId" : "da7b85ec0b2fe576375bc1a81a1fc863c954bc65",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/third_party/wiredtiger/test/csuite/Makefile.am" : {
      "ObjectId" : "53175472c1eeac927080efd5c6ba87e7702b21b6",
      "LastModified" : "2019-04-16T04:45:56Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Run this during a \"make check\" smoke test.\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/third_party/wiredtiger/test/cursor_order/Makefile.am" : {
      "ObjectId" : "f5330b57d3b64c01ada1d2c09f7b50e1fd3b0aaf",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/third_party/wiredtiger/test/fops/Makefile.am" : {
      "ObjectId" : "519f63154457a254544d83867ddc092dfba73e6c",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Run this during a \"make check\" smoke test.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/third_party/wiredtiger/test/format/Makefile.am" : {
      "ObjectId" : "3a74cb0c104e088c14758be54bf7703c53aed7a0",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#noinst_LTLIBRARIES = lzo_compress.la\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# libtool hack: noinst_LTLIBRARIES turns off building shared libraries as well\n\n# as installation, it will only build static libraries.  As far as I can tell,\n\n# the \"approved\" libtool way to turn them back on is by adding -rpath.\n\n#lzo_compress_la_SOURCES = lzo_compress.c\n\n#lzo_compress_la_LIBADD = -llzo2 -lm\n\n#lzo_compress_la_LDFLAGS = -avoid-version -module -rpath /nowhere\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/third_party/wiredtiger/test/huge/Makefile.am" : {
      "ObjectId" : "402e8efc81e8b86ccc47db9f07293bce5aac1e33",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Run this during a \"make check\" smoke test.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/third_party/wiredtiger/test/manydbs/Makefile.am" : {
      "ObjectId" : "66310350d71d807328d0340649e1aa280d725724",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Run this during a \"make check\" smoke test.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/third_party/wiredtiger/test/packing/Makefile.am" : {
      "ObjectId" : "0f6f59d2cffe99ccf09be8e682da2878a032e1d9",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/third_party/wiredtiger/test/readonly/Makefile.am" : {
      "ObjectId" : "7dd08586122a6fede546049160aaac19e2934ffe",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Run this during a \"make check\" smoke test.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/third_party/wiredtiger/test/salvage/Makefile.am" : {
      "ObjectId" : "b1540e639bab7ed82658c13605454ebd1d91998e",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Run this during a \"make check\" smoke test.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/third_party/wiredtiger/test/syscall/Makefile.am" : {
      "ObjectId" : "1d55b06c388bbae65669e8d6f94109d45d03d822",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/third_party/wiredtiger/test/thread/Makefile.am" : {
      "ObjectId" : "182effa32012c811e00967bdd95cc66f2be6bc0e",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/third_party/wiredtiger/test/utility/Makefile.am" : {
      "ObjectId" : "a2923eb41a8c7aec17dde0bba302875539f75415",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/third_party/zstandard-1.3.7/zstd/Makefile" : {
      "ObjectId" : "c63db80e9e0cf625dde3817e4d6d16c854bbd36b",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# ################################################################\n\n# Copyright (c) 2015-present, Yann Collet, Facebook, Inc.\n\n# All rights reserved.\n\n#\n\n# This source code is licensed under both the BSD-style license (found in the\n\n# LICENSE file in the root directory of this source tree) and the GPLv2 (found\n\n# in the COPYING file in the root directory of this source tree).\n\n# ################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define nul output\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## default: Build lib-release and zstd-release\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# skip zwrapper, can't build that on alternate architectures without the proper zlib installed\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## test: run long-duration tests\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## shortest: same as `make check`\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## check: run basic tests for `zstd` cli\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## examples: build all examples in `/examples` directory\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## manual: generate API documentation in html format\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## man: generate man page\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## contrib: build all supported projects in `/contrib` directory\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# make install is validated only for Linux, macOS, Hurd and some BSD targets\n\n#------------------------------------------------------------------------------\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Print a two column output of targets and their description. To add a target description, put a\n\n# comment in the Makefile with the format \"## <TARGET>: <DESCRIPTION>\".  For example:\n\n#\n\n## list: Print all targets and their descriptions (if provided)\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# adding -Wno-deprecated to avoid clang++ warning on dealing with C files directly\n",
        "Line" : 219,
        "CharPositionInLine" : 77
      },
      "14" : {
        "Text" : "# use native, faster\n",
        "Line" : 234,
        "CharPositionInLine" : 33
      },
      "15" : {
        "Text" : "# use native, faster\n",
        "Line" : 238,
        "CharPositionInLine" : 33
      },
      "16" : {
        "Text" : "# use native, faster\n",
        "Line" : 242,
        "CharPositionInLine" : 33
      },
      "17" : {
        "Text" : "# use native, faster\n",
        "Line" : 246,
        "CharPositionInLine" : 33
      },
      "18" : {
        "Text" : "# run UBsan with -fsanitize-recover=signed-integer-overflow\n\n# due to a bug in UBsan when doing pointer subtraction\n\n# https://gcc.gnu.org/bugzilla/show_bug.cgi?id=63303\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# datagen.c fails this test for no obvious reason\n",
        "Line" : 278,
        "CharPositionInLine" : 102
      },
      "20" : {
        "Text" : "# Ubuntu 14.04 ships a too-old lz4\n",
        "Line" : 329,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#------------------------------------------------------------------------\n\n# target specific tests\n\n#------------------------------------------------------------------------\n",
        "Line" : 342,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# will fail, due to missing support for `long long`\n",
        "Line" : 354,
        "CharPositionInLine" : 44
      },
      "23" : {
        "Text" : "# static analyzer test uses clang's scan-build\n\n# does not analyze zlibWrapper, due to detected issues in zlib source code\n",
        "Line" : 384,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24
    },
    "src/third_party/zstandard-1.3.7/zstd/build/cmake/CMakeModules/AddZstdCompilationFlags.cmake" : {
      "ObjectId" : "a7dc08ea75fd5c439cc6bacd0fde6da7e28720f4",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Not only UNIX but also WIN32 for MinGW\n",
        "Line" : 24,
        "CharPositionInLine" : 60
      },
      "1" : {
        "Text" : "#Set c++11 by default\n",
        "Line" : 25,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "#Set c99 by default\n",
        "Line" : 27,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Add specific compilation flags for Windows Visual\n",
        "Line" : 36,
        "CharPositionInLine" : 18
      },
      "4" : {
        "Text" : "# UNICODE SUPPORT\n",
        "Line" : 43,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Remove duplicates compilation flags\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "src/third_party/zstandard-1.3.7/zstd/build/cmake/CMakeModules/GetZstdLibraryVersion.cmake" : {
      "ObjectId" : "8b6f394da55eba96d7556b64a0169f97fd046b75",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Read file content\n",
        "Line" : 2,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "src/third_party/zstandard-1.3.7/zstd/contrib/adaptive-compression/Makefile" : {
      "ObjectId" : "5a746dcd42da83b5276ed9348c683772ffeefa0d",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# make install is validated only for Linux, macOS, BSD, Hurd and Solaris targets\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/third_party/zstandard-1.3.7/zstd/contrib/experimental_dict_builders/benchmarkDictBuilder/Makefile" : {
      "ObjectId" : "72ce04f2a56bd2f4854b0290322b1c1084f53ce1",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/third_party/zstandard-1.3.7/zstd/contrib/experimental_dict_builders/fastCover/Makefile" : {
      "ObjectId" : "3ba24790ce01d567649e35d36eb96c23f712ffde",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/third_party/zstandard-1.3.7/zstd/contrib/experimental_dict_builders/randomDictBuilder/Makefile" : {
      "ObjectId" : "bbd40e47c312630591923ab31beeed630f582e7c",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/third_party/zstandard-1.3.7/zstd/contrib/gen_html/Makefile" : {
      "ObjectId" : "425f266c4e4644e52d3801484c828dc00920cac2",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# ################################################################\n\n# Copyright (c) 2016-present, Facebook, Inc.\n\n# All rights reserved.\n\n#\n\n# This source code is licensed under both the BSD-style license (found in the\n\n# LICENSE file in the root directory of this source tree) and the GPLv2 (found\n\n# in the COPYING file in the root directory of this source tree).\n\n# ################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define *.exe as extension for Windows systems\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2,
      "Errorlog" : "line 17:90 token recognition error at: '\\1'\nline 18:90 token recognition error at: '\\1'\nline 19:92 token recognition error at: '\\1'\n"
    },
    "src/third_party/zstandard-1.3.7/zstd/contrib/largeNbDicts/Makefile" : {
      "ObjectId" : "624140fab65d0be45effe4f94674c0ece8608607",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# ################################################################\n\n# Copyright (c) 2018-present, Yann Collet, Facebook, Inc.\n\n# All rights reserved.\n\n#\n\n# This source code is licensed under both the BSD-style license (found in the\n\n# LICENSE file in the root directory of this source tree) and the GPLv2 (found\n\n# in the COPYING file in the root directory of this source tree).\n\n# ################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/third_party/zstandard-1.3.7/zstd/contrib/linux-kernel/lib/zstd/Makefile" : {
      "ObjectId" : "dd0a359c135b47b77dc98a6c292ffb7c86b21add",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Object files unique to zstd_compress and zstd_decompress\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# These object files are shared between the modules.\n\n# Always add them to zstd_compress.\n\n# Unless both zstd_compress and zstd_decompress are built in\n\n# then also add them to zstd_decompress.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/third_party/zstandard-1.3.7/zstd/contrib/linux-kernel/test/Makefile" : {
      "ObjectId" : "8411462c9d02b6034eb888c0c1caa6007e261712",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Install libfuzzer\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Install googletest\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/third_party/zstandard-1.3.7/zstd/contrib/pzstd/Makefile" : {
      "ObjectId" : "14b9322977140053594b29663a739c2b57744473",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# ################################################################\n\n# Copyright (c) 2016-present, Facebook, Inc.\n\n# All rights reserved.\n\n#\n\n# This source code is licensed under both the BSD-style license (found in the\n\n# LICENSE file in the root directory of this source tree) and the GPLv2 (found\n\n# in the COPYING file in the root directory of this source tree).\n\n# ################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Standard variables for installation\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# External program to use to run tests, e.g. qemu or valgrind\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Flags to pass to the tests\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# We use gcc/clang to generate the header dependencies of files\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# CFLAGS, CXXFLAGS, CPPFLAGS, and LDFLAGS are for the users to override\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Include flags\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# gtest libraries need to go before \"-lpthread\" because they depend on it.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Compilation commands\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Get a list of all zstd files so we rebuild the static library when we need to\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# List all the pzstd source files so we can determine their dependencies\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define *.exe as extension for Windows systems\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Standard targets\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Targets for many different builds\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Run long round trip tests\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Build the main binary\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Target that depends on all the tests\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Build the round trip tests\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Use the static library that zstd builds for simplicity and\n\n# so we get the compiler options correct\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Rules to build the tests\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Install googletest\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Cancel implicit rules\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Object file rules\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Dependency file stuff\n",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Include rules that specify header file dependencies\n",
        "Line" : 268,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "src/third_party/zstandard-1.3.7/zstd/contrib/seekable_format/examples/Makefile" : {
      "ObjectId" : "6d9562df8b47ba3094b931426d2343ad875f01ae",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# ################################################################\n\n# Copyright (c) 2017-present, Facebook, Inc.\n\n# All rights reserved.\n\n#\n\n# This source code is licensed under both the BSD-style license (found in the\n\n# LICENSE file in the root directory of this source tree) and the GPLv2 (found\n\n# in the COPYING file in the root directory of this source tree).\n\n# ################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This Makefile presumes libzstd is built, using `make` in / or /lib/\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/third_party/zstandard-1.3.7/zstd/doc/educational_decoder/Makefile" : {
      "ObjectId" : "ace1294f8e7371203a01410e3aa70dc1265a25ad",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/third_party/zstandard-1.3.7/zstd/examples/Makefile" : {
      "ObjectId" : "96af41b54423e6ac34cfd9db0ef68aebdef8a69d",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# ################################################################\n\n# Copyright (c) 2016-present, Yann Collet, Facebook, Inc.\n\n# All rights reserved.\n\n#\n\n# This source code is licensed under both the BSD-style license (found in the\n\n# LICENSE file in the root directory of this source tree) and the GPLv2 (found\n\n# in the COPYING file in the root directory of this source tree).\n\n# ################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This Makefile presumes libzstd is installed, using `sudo make install`\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# invalid input, must fail\n\n# invalid input, must fail\n\n# unknown input size, must fail\n\n# create 0-size file\n",
        "Line" : 72,
        "CharPositionInLine" : 36
      },
      "3" : {
        "Text" : "# 0-size frame : must work\n",
        "Line" : 77,
        "CharPositionInLine" : 36
      },
      "CommentCount" : 4
    },
    "src/third_party/zstandard-1.3.7/zstd/lib/Makefile" : {
      "ObjectId" : "9711f75eea87c811f12dc1a26c368b4e0756da79",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# ################################################################\n\n# Copyright (c) 2015-present, Yann Collet, Facebook, Inc.\n\n# All rights reserved.\n\n#\n\n# This source code is licensed under both the BSD-style license (found in the\n\n# LICENSE file in the root directory of this source tree) and the GPLv2 (found\n\n# in the COPYING file in the root directory of this source tree).\n\n# ################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Version numbers\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# MinGW assumed\n",
        "Line" : 22,
        "CharPositionInLine" : 26
      },
      "3" : {
        "Text" : "# compatibility with %zu formatting\n",
        "Line" : 23,
        "CharPositionInLine" : 41
      },
      "4" : {
        "Text" : "# macOS linker doesn't support -soname, and use different extension\n\n# see : https://developer.apple.com/library/mac/documentation/DeveloperTools/Conceptual/DynamicLibraries/100-Articles/DynamicLibraryDesignGuidelines.html\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Special case : building library in single-thread mode _and_ without zstdmt_compress.c\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# macOS-specific\n",
        "Line" : 160,
        "CharPositionInLine" : 20
      },
      "7" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# make install is validated only for Linux, macOS, BSD, Hurd and Solaris targets\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# directory variables : GNU conventions prefer lowercase\n\n# see https://www.gnu.org/prep/standards/html_node/Makefile-Conventions.html\n\n# support both lower and uppercase (BSD), use uppercase in script\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# prototypes generate deprecation warnings\n",
        "Line" : 232,
        "CharPositionInLine" : 65
      },
      "10" : {
        "Text" : "# Deprecated streaming functions\n",
        "Line" : 243,
        "CharPositionInLine" : 42
      },
      "CommentCount" : 11,
      "Errorlog" : "line 11:90 token recognition error at: '\\1'\nline 12:90 token recognition error at: '\\1'\nline 13:92 token recognition error at: '\\1'\nline 116:13 token recognition error at: '\\l'\nline 120:21 token recognition error at: '\\l'\nline 120:40 token recognition error at: '\\l'\n"
    },
    "src/third_party/zstandard-1.3.7/zstd/lib/dll/example/Makefile" : {
      "ObjectId" : "45d0db3cd543371048234affc555f74ba2b6a971",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# ################################################################\n\n# Copyright (c) 2016-present, Yann Collet, Facebook, Inc.\n\n# All rights reserved.\n\n#\n\n# This source code is licensed under both the BSD-style license (found in the\n\n# LICENSE file in the root directory of this source tree) and the GPLv2 (found\n\n# in the COPYING file in the root directory of this source tree).\n\n# ################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# can select custom flags. For example : CFLAGS=\"-O2 -g\" make\n",
        "Line" : 15,
        "CharPositionInLine" : 17
      },
      "2" : {
        "Text" : "# Define *.exe as extension for Windows systems\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/third_party/zstandard-1.3.7/zstd/programs/Makefile" : {
      "ObjectId" : "32dbc67eff5c5e9ebe051806f4ea6935c78e277d",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# ################################################################\n\n# Copyright (c) 2015-present, Yann Collet, Facebook, Inc.\n\n# All rights reserved.\n\n#\n\n# This source code is licensed under both the BSD-style license (found in the\n\n# LICENSE file in the root directory of this source tree) and the GPLv2 (found\n\n# in the COPYING file in the root directory of this source tree).\n\n# ##########################################################################\n\n# zstd : Command Line Utility, supporting gzip-like arguments\n\n# zstd32 : Same as zstd, but forced to compile in 32-bits mode\n\n# zstd_nolegacy : zstd without support of decompression of legacy versions\n\n# zstd-small : minimal zstd without dictionary builder and benchmark\n\n# zstd-compress : compressor-only version of zstd\n\n# zstd-decompress : decompressor-only version of zstd\n\n# ##########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Version numbers\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# MinGW assumed\n",
        "Line" : 43,
        "CharPositionInLine" : 26
      },
      "3" : {
        "Text" : "# compatibility with %zu formatting\n",
        "Line" : 44,
        "CharPositionInLine" : 41
      },
      "4" : {
        "Text" : "# Sort files in alphabetical order for reproducible builds\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Define *.exe as extension for Windows systems\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# thread detection\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# zlib detection\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# lzma detection\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# lz4 detection\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# explicit backtrace enable/disable for Linux & Darwin\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# minimal target, with only zstd compression and decompression. no bench. no legacy.\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# make install is validated only for Linux, macOS, BSD, Hurd and Solaris targets\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Print a two column output of targets and their description. To add a target description, put a\n\n# comment in the Makefile with the format \"## <TARGET>: <DESCRIPTION>\".  For example:\n\n#\n\n## list: Print all targets and their descriptions (if provided)\n",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# directory variables : GNU conventions prefer lowercase\n\n# see https://www.gnu.org/prep/standards/html_node/Makefile-Conventions.html\n\n# support both lower and uppercase (BSD), use uppercase in script\n",
        "Line" : 301,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15,
      "Errorlog" : "line 21:90 token recognition error at: '\\1'\nline 22:90 token recognition error at: '\\1'\nline 23:92 token recognition error at: '\\1'\n"
    },
    "src/third_party/zstandard-1.3.7/zstd/tests/Makefile" : {
      "ObjectId" : "2a96829f61c5dfbb8d9a09f90333e352db01d195",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# ################################################################\n\n# Copyright (c) 2015-present, Yann Collet, Facebook, Inc.\n\n# All rights reserved.\n\n#\n\n# This source code is licensed under both the BSD-style license (found in the\n\n# LICENSE file in the root directory of this source tree) and the GPLv2 (found\n\n# in the COPYING file in the root directory of this source tree).\n\n# ################################################################\n\n# datagen : Synthetic and parametrable data generator, for tests\n\n# fullbench  : Precisely measure speed for each zstd inner functions\n\n# fullbench32: Same as fullbench, but forced to compile in 32-bits mode\n\n# fuzzer  : Test tool, to check zstd integrity on target platform\n\n# fuzzer32: Same as fuzzer, but forced to compile in 32-bits mode\n\n# paramgrill : parameter tester for zstd\n\n# test-zstd-speed.py : script for testing zstd speed difference between commits\n\n# versionsTest : compatibility test between zstd versions stored on Github (v0.1+)\n\n# zstreamtest : Fuzzer test tool for zstd streaming API\n\n# zstreamtest32: Same as zstreamtest, but forced to compile in 32-bits mode\n\n# ##########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# MinGW assumed\n",
        "Line" : 30,
        "CharPositionInLine" : 26
      },
      "2" : {
        "Text" : "# compatibility with %zu formatting\n",
        "Line" : 31,
        "CharPositionInLine" : 41
      },
      "3" : {
        "Text" : "# Define *.exe as extension for Windows systems\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# must be phony, only external makefile knows how to build them, or if they need an update\n",
        "Line" : 95,
        "CharPositionInLine" : 34
      },
      "5" : {
        "Text" : "# turn off assert() for speed measurements\n",
        "Line" : 133,
        "CharPositionInLine" : 47
      },
      "6" : {
        "Text" : "# note : broken : requires unavailable symbols\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\t$(CC) $(FLAGS) $(filter %.c,$^) -o $@$(EXT) -DZSTD_DLL_IMPORT=1 $(ZSTDDIR)/dll/libzstd.dll\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# required to silence deprecation warnings\n",
        "Line" : 164,
        "CharPositionInLine" : 53
      },
      "9" : {
        "Text" : "# required to silence deprecation warnings\n",
        "Line" : 175,
        "CharPositionInLine" : 57
      },
      "10" : {
        "Text" : "# xxh symbols not exposed from dll\n",
        "Line" : 201,
        "CharPositionInLine" : 46
      },
      "11" : {
        "Text" : "# turn off assert() by default for speed measurements\n",
        "Line" : 205,
        "CharPositionInLine" : 27
      },
      "12" : {
        "Text" : "# broken on Mac\n",
        "Line" : 233,
        "CharPositionInLine" : 77
      },
      "13" : {
        "Text" : "#----------------------------------------------------------------------------------\n\n#make valgrindTest is validated only for Linux, macOS, BSD, Hurd and Solaris targets\n\n#----------------------------------------------------------------------------------\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# make tests validated only for below targets\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 291,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# lz4 -> zstd\n",
        "Line" : 445,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "# zstd -> lz4\n",
        "Line" : 452,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "# zstd -> zstd\n",
        "Line" : 459,
        "CharPositionInLine" : 1
      },
      "18" : {
        "Text" : "# zstd -> zstd\n",
        "Line" : 463,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 19
    },
    "src/third_party/zstandard-1.3.7/zstd/tests/fuzz/Makefile" : {
      "ObjectId" : "d9b00fd2af790432e9a135255eb25d82739e17eb",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# ################################################################\n\n# Copyright (c) 2016-present, Facebook, Inc.\n\n# All rights reserved.\n\n#\n\n# This source code is licensed under both the BSD-style license (found in the\n\n# LICENSE file in the root directory of this source tree) and the GPLv2 (found\n\n# in the COPYING file in the root directory of this source tree).\n\n# ################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Optionally user defined flags\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Install libfuzzer (not usable for MSAN testing)\n\n# Provided for convienence. To use this library run make libFuzzer and\n\n# set LDFLAGS=-L.\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/third_party/zstandard-1.3.7/zstd/tests/gzip/Makefile" : {
      "ObjectId" : "c5d67206b99d95e5e4cec731aff35d6a977e9e48",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# ################################################################\n\n# Copyright (c) 2017-present, Facebook, Inc.\n\n# All rights reserved.\n\n#\n\n# This source code is licensed under both the BSD-style license (found in the\n\n# LICENSE file in the root directory of this source tree) and the GPLv2 (found\n\n# in the COPYING file in the root directory of this source tree).\n\n# ################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#all: test-gzip-env\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# validated only for Linux, macOS, Hurd and some BSD targets\n\n#------------------------------------------------------------------------------\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# || echo ignoring error\n",
        "Line" : 42,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 4
    },
    "src/third_party/zstandard-1.3.7/zstd/zlibWrapper/Makefile" : {
      "ObjectId" : "c1896f8b80a384843df2b461be6e430de7abaf25",
      "LastModified" : "2019-03-21T22:36:58Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for example of using zstd wrapper for zlib\n\n#\n\n# make - compiles examples\n\n# make MOREFLAGS=-DZWRAP_USE_ZSTD=1 - compiles examples with zstd compression turned on\n\n# make test - runs examples\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Paths to static and dynamic zlib and zstd libraries\n\n# Use \"make ZLIB_PATH=path/to/zlib ZLIB_LIBRARY=path/to/libz.a\" to select a path to library\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Define *.exe as extension for Windows systems\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#cp example$(EXT).gz example$(EXT)_zstd.gz\n",
        "Line" : 48,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "#cp example$(EXT).gz example$(EXT)_gz.gz\n",
        "Line" : 51,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "#valgrindTest: ZSTDLIBRARY = $(ZSTDLIBDIR)/libzstd.so\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#.c.o:\n\n#\t$(CC) $(CFLAGS) $(CPPFLAGS) -c -o $@ $<\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    }
  },
  "FileTypes" : {
    "CMAKE" : 6,
    "MAKEFILE" : 34,
    "AUTOMAKE" : 38,
    "BAZEL" : 3
  },
  "ElapsedTime" : 5718
}