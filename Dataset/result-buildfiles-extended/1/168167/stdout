{
  "Repository" : "168167",
  "Revision" : "HEAD",
  "ObjectId" : "56bafb51e8251c08fbfd1dd0f51af9e166dd22e6",
  "CommitTime" : "2019-03-25T10:05:15Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "81c1a09057c47cbe04f0edc7a937920f8855b597",
      "LastModified" : "2018-11-07T09:23:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# first lets include the common makefile\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############\n\n# parameters #\n\n##############\n\n# directories\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# kernel variables\n\n# version of kernel to build against\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# folder of the build folder for the kernel you build against\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# fill in the vervosity level you want for the kernel module compilation process\n\n# V:=1 will give you the command lines used...\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# warnings for kernel code (0,1,2,3,...). Better use 1 since kernel\n\n# headers don't pass more than 1\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# extra flags to pass to the kernel module creation process...\n\n# regular kernels do not have -Werror and we want it!\n\n# The problem is that this makes the kernel build system scream at me (it fears I am changing\n\n# the flags in some profound ways). This is what we have wrapper scripts for...\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# optimization with debug info (for disassembly)\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# do you want to show the commands executed ?\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# the c++ compiler to be used\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# do you want ccache support?\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# suffix for binary files\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# suffix for c++ object files\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# checkpatch executable...\n\n#SCRIPT_CHECKPATCH:=$(KDIR)/scripts/checkpatch.pl\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# do tools?\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# export all variables to sub-make processes...\n\n# this could cause command line too long problems because all the make variables\n\n# would be exported and they are pretty long (for instance the source files list...).\n\n#export\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "########\n\n# code #\n\n########\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# compilation flags\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#WARN_FLAGS:=-Wall -Werror\n\n#WARN_FLAGS:=-Wall -Werror -pedantic\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# silent stuff\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# we are not silent in this branch\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# DO_MKDBG\n",
        "Line" : 79,
        "CharPositionInLine" : 5
      },
      "22" : {
        "Text" : "#.SILENT:\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# DO_MKDBG\n",
        "Line" : 82,
        "CharPositionInLine" : 6
      },
      "24" : {
        "Text" : "# sources from the git perspective\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# DO_TOOLS\n",
        "Line" : 93,
        "CharPositionInLine" : 6
      },
      "26" : {
        "Text" : "# user space applications (c and c++)\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# kernel modules\n\n#MOD_SRC:=$(shell find $(KERNEL_DIR) -name \"mod_*.c\" -and -not -name \"mod_*.mod.c\")\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#MOD_SA_SRC:=$(shell find $(KERNEL_SA_DIR) -name \"*.c\")\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ALL:=$(ALL) $(MOD_STP) $(MOD_CHP)\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# standlone\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#########\n\n# rules #\n\n#########\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# generic section\n\n# do not touch this recipe\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# templar install_deps\n",
        "Line" : 158,
        "CharPositionInLine" : 5
      },
      "34" : {
        "Text" : "# -x: remove everything not known to git (not only ignore rules).\n\n# -X: remove files in .gitignore but not everything unknown to git\n\n# -d: remove directories also.\n\n# -f: force.\n\n# hard clean (may remove manually created files not yet added to the git index):\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# soft clean (only removes stuff mentionaed in .gitignore files)\n\n#GIT_CLEAN_FLAGS:=-Xdf\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# the reason that tar and gzip were selected and not zip is that the build system\n\n# for the native demos requires scripts with permissions and stuff. This may be different\n\n# for other languages where the permission stuff is not that important (e.g. php).\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# general rules...\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# how to create regular executables...\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#\t$(Q)objdump --demangle --disassemble --no-show-raw-insn --section=.text $< > $@\n\n#\t$(Q)objdump --demangle --source --disassemble --no-show-raw-insn --section=.text $< > $@\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# rule about how to check kernel source files\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# rule about how to create .ko files...\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# rules about makefiles\n",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# various checks\n",
        "Line" : 303,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "#include[^ ]\" -- '*.h' '*.hh' '*.c' '*.cc'\n",
        "Line" : 325,
        "CharPositionInLine" : 41
      },
      "45" : {
        "Text" : "# enable this when you have the balls...\n\n#$(Q)make_helper wrapper-ok git grep -l -e \"#include\" --and --not -e \"\\/\\/ for\" --and --not -e \"firstinclude\" -- '*.h' '*.hh' '*.c' '*.cc'\n",
        "Line" : 327,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#\t$(Q)make_helper wrapper-ok git grep -L \"Copyright (C) 2011-2013 Mark Veltzer <mark.veltzer@gmail.com>\" -- '*.c' '*.cc' '*.h' '*.hh' '*.S'\n",
        "Line" : 333,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# \" =\" cannot be checked because of void foo(void* =0) and that is the reason for the next\n",
        "Line" : 338,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "#--and --not -e \"assert_perror\" --and --not -e \"perror.cc\" --and --not -e \"us_helper.h\" -- '*.c' '*.cc' '*.h' '*.hh'\n",
        "Line" : 355,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# checks that dont pass\n",
        "Line" : 411,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# various file finds...\n",
        "Line" : 428,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# kernel section\n",
        "Line" : 454,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# code formatting\n",
        "Line" : 496,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# This is what I use\n",
        "Line" : 498,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# code measurements\n",
        "Line" : 515,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 55,
      "Errorlog" : "line 310:40 token recognition error at: '\"\\s'\n"
    },
    "src/examples_standalone/aspectc++/Makefile" : {
      "ObjectId" : "22044e6b5caeda498b6ace57dcad768661ed5b7b",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# rules\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/examples_standalone/audit/Makefile" : {
      "ObjectId" : "4bd3ce5112acacfe5dc8f72c565d8cdb728993fb",
      "LastModified" : "2014-06-23T09:54:23Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# on Intel making a shared library works without the -fpic but\n\n# use it none the less, you can also add -nostdlib to avoid the\n\n# default bahviour of linking with standard C/C++ runtime libraries.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# app name\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# lib name\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# full lib name\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# the compiler we will be using\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# flags for the compiler\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# all targets\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# here come the targets\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "src/examples_standalone/code_formatting/Makefile" : {
      "ObjectId" : "38360e14acbfdd39eee06ba0d8fdd1a26000b913",
      "LastModified" : "2014-06-23T09:54:23Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/examples_standalone/crash_handling/Makefile" : {
      "ObjectId" : "ecbafba6248491cf5679d00e41d683b235483ccf",
      "LastModified" : "2015-11-07T11:21:20Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# variables\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add debug information and asserts?\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Build multi threaded version of the library?\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Location and prefix of cross compiler, Linux kernel style\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# the reduction of errors is for malloc hooking...\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# targets\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The regular and automagic version of the library\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Unit tests.\n\n# Make sure to ldconfig -n `pwd` before running\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "src/examples_standalone/default_constructor/Makefile" : {
      "ObjectId" : "af2eed304d737c0173782a2332fe6efd1712b6af",
      "LastModified" : "2014-06-23T09:54:23Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/examples_standalone/dlopen_advanced/Makefile" : {
      "ObjectId" : "2fe5d2ad8bdede2c5d52210ea7dba803e6e840d5",
      "LastModified" : "2015-11-07T11:21:20Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/examples_standalone/dlopen_basic/Makefile" : {
      "ObjectId" : "6061f1cff6af4d9de7a2ae705571b69d994a3d7c",
      "LastModified" : "2015-11-07T11:21:20Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# variables\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# rules\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/examples_standalone/embed_files_in_binary/Makefile" : {
      "ObjectId" : "df2d904b2bcc3d58c138f1a533fb0a0d685d10a4",
      "LastModified" : "2015-11-07T11:21:20Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# use objcopy --info to see all supported output formats\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# rule about how to create object files from text files\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/examples_standalone/ftrace/Makefile" : {
      "ObjectId" : "2cf82e66f06ab417c9f195fe9f1d45a647f1904a",
      "LastModified" : "2015-11-07T11:21:20Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# variables\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/examples_standalone/g++_vtables/Makefile" : {
      "ObjectId" : "8a18620797ca63ae0aa311eb45494a1854a2e0a6",
      "LastModified" : "2015-11-07T11:21:20Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/examples_standalone/gcc_build_id/Makefile" : {
      "ObjectId" : "dcbea623717461ad4bf5dd583d5db5c7e42bcf70",
      "LastModified" : "2015-11-07T11:21:20Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/examples_standalone/gcc_compile_many/Makefile" : {
      "ObjectId" : "ce2c16b58903cfb2016f89b19884f8c657605b1a",
      "LastModified" : "2015-11-07T11:21:20Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/examples_standalone/gcc_debug_info_reduction/Makefile" : {
      "ObjectId" : "1e88b641a5db170220742176ffa6232b6a7e1811",
      "LastModified" : "2015-11-07T11:21:20Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# these flags actually turn out to be nothing on ubuntu 13.10\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# these flags actually do something\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#REGULAR_FLAG:=-g3\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#$(Q)g++ -o $@ $(OBJECTS_reduced) $(OBJECTS_debug) $(LD_FLAGS)\n",
        "Line" : 32,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# rules\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/examples_standalone/gcc_icc_restricted_pointers/Makefile" : {
      "ObjectId" : "f8811a9c9ce8a7a91da790ddc68b08db2ed979f5",
      "LastModified" : "2018-11-07T09:23:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# variables\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# this is no optimization\n\n#CFLAGS:=-O0 -I/usr/include/i386-linux-gnu -I../../include\n\n# in the Intel compiler -O, -O2 or no flag for optimization are the same so it always optimizes\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# none of following flags makes the intel compiler actually show a difference between\n\n# alias and non-alias...\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# targets\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/examples_standalone/gcc_options_file/Makefile" : {
      "ObjectId" : "bb6dbca18912fb3b68c2fc874ec0cab32a5119aa",
      "LastModified" : "2015-11-07T11:21:20Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/examples_standalone/gcc_pgo/Makefile" : {
      "ObjectId" : "02acd49b52b47efb55231978d5291544204d1907",
      "LastModified" : "2015-11-07T11:21:20Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# variables\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# targets\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#$(Q)mv main.o main_phase2.o\n",
        "Line" : 24,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 3
    },
    "src/examples_standalone/gcc_plugin/Makefile" : {
      "ObjectId" : "b9b8d6ab086c94d4d3bb444c3e28f31d3b7acbb6",
      "LastModified" : "2015-11-07T11:21:20Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/examples_standalone/gcc_precompiled_headers/Makefile" : {
      "ObjectId" : "133a91c3de3f3d7d437d7a5c861fa4f64931bc3e",
      "LastModified" : "2015-11-07T11:21:20Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# these flags actually turn out to be nothing on ubuntu 13.10 (mark)\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#CFLAGS:=-H -Winvalid-pch\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# rules\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/examples_standalone/gcc_prevent_warnings_on_system_includes/Makefile" : {
      "ObjectId" : "f4d9cfb978b6bf0ee357e7d7666b5d2dca773061",
      "LastModified" : "2015-11-07T11:21:20Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# variables\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/examples_standalone/gcc_queries/Makefile" : {
      "ObjectId" : "c42858c830cb30f988f2b3f9d598eb9bc5ba0864",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/examples_standalone/gcc_static_linking_libc/Makefile" : {
      "ObjectId" : "5e204e92700f3f5f344c4100b35d2e6960f46d3b",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# this works, producing an executable where everything is static\n\n# note that there is still IFUNC like selection of the most optimized\n\n# version of a function going on INSIDE the executable at runtime.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# this does not work!\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# produces same executable as the fully dynamic version\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# produces same executable as the fully dynamic version\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/examples_standalone/gcc_static_linking_performance/Makefile" : {
      "ObjectId" : "75e68bd6cbfd6fddac9def3b40141b67afaa8e98",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# this is the static object, no need for -fpic\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/examples_standalone/gcc_stdin/Makefile" : {
      "ObjectId" : "30148f405dcc71ec19785123924d8f69464b88a9",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# variables\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# rules\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/examples_standalone/gcc_unlink_before_create_target/Makefile" : {
      "ObjectId" : "200fca072f6e062e30100d886a6895f1ecb4e0fa",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/examples_standalone/gcc_weak/Makefile" : {
      "ObjectId" : "e5133c880de4c4cd7dbda869ee771dd6a317fbf5",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/examples_standalone/gdb_breakpoints_in_code/Makefile" : {
      "ObjectId" : "40d7a9eb917663d49e1688aca87f64f9bf2b533d",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/examples_standalone/gdb_reverse_debugging/Makefile" : {
      "ObjectId" : "0c9c5711c80a04f1bff6c663229c75968598d436",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# variables\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#CXXFLAGS:=-I../../include -g3 -O2 -Wall -Werror\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/examples_standalone/gdb_simple/Makefile" : {
      "ObjectId" : "1288ca7105ab225ccffe582d1822afd03e977502",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/examples_standalone/gdb_two_versions/Makefile" : {
      "ObjectId" : "396860fe7f4a82f3d70c2460ac660dbe037b9fc0",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/examples_standalone/hoard/Makefile" : {
      "ObjectId" : "df2ccd1b0a0ed8a9ed89e42fa89c56cd256afead",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# variables\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/examples_standalone/intel_compiler_compile_many_files/Makefile" : {
      "ObjectId" : "9bb246253739b6d4b6ce5a4ece5c6b796cdd0e17",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# variables\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#icpc -c -ipo-separate *.cc\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/examples_standalone/intel_compiler_debug_size/Makefile" : {
      "ObjectId" : "861537ec30fa7ae73abf1dec998bff3bda5ff4ca",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# variables\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# targets\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/examples_standalone/intel_compiler_hello/Makefile" : {
      "ObjectId" : "5d435d64e92b77cf4b522341a43db7f875d154a6",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# variables\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# targets\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/examples_standalone/intel_compiler_low_level/Makefile" : {
      "ObjectId" : "0e9ce35c2e1ae95d588a5086bd728087cf739644",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# variables\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# targets\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/examples_standalone/intel_compiler_performance_counters/Makefile" : {
      "ObjectId" : "7c748af3837c6d0acf007790bf13b973fad374fe",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# targets\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/examples_standalone/intel_compiler_pgo/Makefile" : {
      "ObjectId" : "25e7643fa8f6ff377b71ad63b099cbebe8820224",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# variables\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#CXXFLAGS:=-I/usr/include/i386-linux-gnu\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# targets\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/examples_standalone/intel_compiler_precompiled_headers/Makefile" : {
      "ObjectId" : "282f59d3e49dcd680869414563539e0dcd504b6a",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# variables\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/examples_standalone/ld_binary_undefined_symbols/Makefile" : {
      "ObjectId" : "72ef8d93135d02a7bc98aba5ab7c29b15cbbf78f",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# on Intel this usually works without the -fpic but use it none the less\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# you can also add -nostdlib to avoid the default ahviour of linking\n\n# with standard C/C++ runtime libraries.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# These are the libraries used by your library\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/examples_standalone/ld_link_order/Makefile" : {
      "ObjectId" : "b97201471c8e378c3fc2e25c24ca0c25ccb307f5",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# the above works but specifying the correct link order\n\n# this does not work as the link order is wrong\n\n# $(Q)$(CC) -o $@ $< -L. -lb -la\n\n# this works but is not precise (you should really know your dependencies)\n\n# $(Q)$(CC) -o $@ $< -L. -Wl,--start-group -lb -la -Wl,--end-group\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# the above is the best solution since -rpath-link does not get hardcoded into the product (be it executable or library)\n\n# this works well but is command line ugly (environment variable)\n\n# $(Q)LD_LIBRARY_PATH=. $(CC) -o $@ $< -L. -lawithb\n\n# this works but specifying 'libb.so' is superfluous\n\n# $(Q)$(CC) -o $@ $< -L. -lawithb -L. -lb\n\n# this does not work as it cannot find 'libb.so'\n\n# $(Q)$(CC) -o $@ $< -L. -lawithb\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/examples_standalone/ld_preload/Makefile" : {
      "ObjectId" : "9fbd512aa992a40c5abfd0e7380d422ba5808937",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# this simply runs the good old $(SUFFIX_BIN)cutable\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# this simply runs the good old $(SUFFIX_BIN)cutable with lib1 preloaded\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# this time with libm.so.6 preloaded\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# just library path changes\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# rule about how to create disassembly files...\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/examples_standalone/ld_weak_symbols/Makefile" : {
      "ObjectId" : "fee0beb45a52f177dd43cc5bc26a9ba7f306beba",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/examples_standalone/lib_function_resolver/Makefile" : {
      "ObjectId" : "7c39e49c8f6177195b62a0865802fdfcfcf53194",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# on Intel this usually works without the -fpic but use it none the less\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# you can also add -nostdlib to avoid the default ahviour of linking\n\n# with standard C/C++ runtime libraries.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# These are the libraries used by your library\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/examples_standalone/lib_init_fini_new/Makefile" : {
      "ObjectId" : "7d3d9692ca85e8606be0cd755b0d28cbaa9c5c3b",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/examples_standalone/lib_init_fini_old/Makefile" : {
      "ObjectId" : "ee6a357c8b46a0a33ae1dc93e6dbce94d4859c75",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/examples_standalone/lib_linking_with_debug/Makefile" : {
      "ObjectId" : "6f6485bc10d16a821aa85489edfc4ab5b4cbabe6",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/examples_standalone/lib_making/Makefile" : {
      "ObjectId" : "fc04f5878a7621993cb55ad18e5e3ade3586a1e2",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# on Intel this usually works without the -fpic but use it none the less\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# you can also add -nostdlib to avoid the default behaviour of linking\n\n# with standard C/C++ runtime libraries.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# These are the libraries used by your library\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/examples_standalone/lib_making_library_executable/Makefile" : {
      "ObjectId" : "f1625451e108fbcf441c975a39e44415fd80f1c1",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# on Intel this usually works without the -fpic but use it none\n\n# the less, you can also add -nostdlib to avoid the default\n\n# bahviour of linking with standard C/C++ runtime libraries.\n\n# this does not work\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# These are the libraries used by your library\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/examples_standalone/lib_overriding_functions/Makefile" : {
      "ObjectId" : "8650ee6053198924ff805873ef1cfdcb8c4bf1eb",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# on Intel this usually works without the -fpic but use it none the less\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# you can also add -nostdlib to avoid the default ahviour of linking\n\n# with standard C/C++ runtime libraries.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# These are the libraries used by your library\n\n#LIBS:=-lm\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#MATHLIB:=/libx32/libm-2.17.so\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/examples_standalone/lib_undefined_symbols/Makefile" : {
      "ObjectId" : "9853f342e61a094c99ef2c69f533fb35b4b9adab",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# on Intel this usually works without the -fpic but use it none the less\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# you can also add -nostdlib to avoid the default ahviour of linking\n\n# with standard C/C++ runtime libraries.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# These are the libraries used by your library\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\t$(Q)$(CC) -o $(EXE_NAME) $(EXE_OBJECTS) -L. -l$(SO_ADD_LINK_NAME) -Xlinker -rpath=$(CURDIR)\n\n#\t$(Q)$(CC) -o $(EXE_NAME) $(EXE_OBJECTS) -L. -l$(SO_ADD_LINK_NAME) -Xlinker -rpath=$(CURDIR) -Xlinker --no-undefined\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\t$(Q)$(CC) $(LDFLAGS) $(FLAGS_FOR_SHARED_LIB) -o $(SO_ADD_NAME) $(SO_ADD_OBJECTS) $(LIBS) -Xlinker -rpath=$(CURDIR) -L. -lsub\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#$(Q)$(CC) $(LDFLAGS) $(FLAGS_FOR_SHARED_LIB) -o $(SO_MIS_NAME) $(SO_MIS_OBJECTS) $(LIBS) -Xlinker --no-undefined\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/examples_standalone/ltrace/Makefile" : {
      "ObjectId" : "9456dd278ed5baf0fe8abb5803cb569aa577934b",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# on Intel this usually works without the -fpic but use it none the less\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# you can also add -nostdlib to avoid the default behaviour of linking\n\n# with standard C/C++ runtime libraries.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# These are the libraries used by your library\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/examples_standalone/make/Makefile" : {
      "ObjectId" : "6adbd337075e8d5f759a6a850eae39b003b4518f",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# variables\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/examples_standalone/malloc_debug_libs/Makefile" : {
      "ObjectId" : "f0a8c9a0e2dd7cbf280b0be117ea08381fa34cf3",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# variables\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# rules\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/examples_standalone/nasm/Makefile" : {
      "ObjectId" : "10a3b710c73b12fada866d97deeffff4bbc192ef",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#ARCH:=elf32\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/examples_standalone/objcopy_add_files_to_libraries/Makefile" : {
      "ObjectId" : "e2eac60cf1cb99f35d28d379d92c359b7b0fef82",
      "LastModified" : "2018-11-07T09:23:33Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/examples_standalone/object_oriented_c_1/Makefile" : {
      "ObjectId" : "a0cc27bfc649f55321b84c7312bffd9f1bda6395",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/examples_standalone/object_oriented_c_2/Makefile" : {
      "ObjectId" : "a0cc27bfc649f55321b84c7312bffd9f1bda6395",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/examples_standalone/object_oriented_c_3/Makefile" : {
      "ObjectId" : "a0cc27bfc649f55321b84c7312bffd9f1bda6395",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/examples_standalone/object_oriented_c_4/Makefile" : {
      "ObjectId" : "a0cc27bfc649f55321b84c7312bffd9f1bda6395",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/examples_standalone/object_oriented_c_5/Makefile" : {
      "ObjectId" : "a0cc27bfc649f55321b84c7312bffd9f1bda6395",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/examples_standalone/overload_via_name_of_program/Makefile" : {
      "ObjectId" : "1e61314cd3e637c13bfdbecee67057fcc7a4f26e",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/examples_standalone/override_throw/Makefile" : {
      "ObjectId" : "21423c0a86de4e6285d215a8ce00bb7315478b07",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/examples_standalone/popen/Makefile" : {
      "ObjectId" : "e064b9fd7b44e246423e1604eb4e87475237d86b",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/examples_standalone/preprocessor_defaults/Makefile" : {
      "ObjectId" : "f4754d2b0b11a06402be8136d6aaffa5742bf09a",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# variables\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# targets\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/examples_standalone/preprocessor_includebydef/Makefile" : {
      "ObjectId" : "c782b2c5579913607f663df4d79f2d1b10671118",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/examples_standalone/profile_gprof/Makefile" : {
      "ObjectId" : "e537f3d343a3eafa49e31885d2e0ca6d169b1182",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# the -pg is to generate profile info...\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/examples_standalone/quoted_includes/Makefile" : {
      "ObjectId" : "762fbac04984e1740700fdefb86faf68f0efcb10",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/examples_standalone/templates_explicit_instantiation/Makefile" : {
      "ObjectId" : "39ee3823603f5e286d5fbe61e3eb3a494be85eb0",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/examples_standalone/templates_explicit_instantiation_advanced/Makefile" : {
      "ObjectId" : "45dba6fde6bb17283e35560a123ce8ac3aa26162",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# variables\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/examples_standalone/templates_storage/Makefile" : {
      "ObjectId" : "9911f27249434dd1d91ae3d994016b114fc4daf7",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/examples_standalone/valgrind/Makefile" : {
      "ObjectId" : "f52cec1402b2c0f0ce191cf1a04fd563540bad1d",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/exercises_standalone/c_message_queue/Makefile" : {
      "ObjectId" : "c47b573c2febe507899c62b76c4325e7cb0d348c",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/exercises_standalone/time/Makefile" : {
      "ObjectId" : "042f046191cb2556d45809cb0344a11988b95ff2",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/kernel/Makefile" : {
      "ObjectId" : "53d8e9bc6d52a54b2f8ee9a955e87fa9b66cbede",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# this is a dummy makefile to appease the kernel build system\n\n# don't put anything important here.\n\n# put everything in the one big makefile above...\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/kernel_standalone/betternull/Makefile" : {
      "ObjectId" : "14c2b3fcd1b1c913a53ceb7ae6e93e1b7ddfa20b",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/kernel_standalone/clipboard/Makefile" : {
      "ObjectId" : "14c2b3fcd1b1c913a53ceb7ae6e93e1b7ddfa20b",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/kernel_standalone/clipboard_basic/Makefile" : {
      "ObjectId" : "14c2b3fcd1b1c913a53ceb7ae6e93e1b7ddfa20b",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/kernel_standalone/cpp/Makefile" : {
      "ObjectId" : "14c2b3fcd1b1c913a53ceb7ae6e93e1b7ddfa20b",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/kernel_standalone/hello/Makefile" : {
      "ObjectId" : "f1a435372d13a6b8f30e849721049d570f771430",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# this is a minimal makefile for demo purposes, keep it that way...\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in an embedded system:\n\n#KDIR:=[where the system maker gave me kernel headers+makefile or the kernel itself which has a makefile]\n\n#ARCH:=arm\n\n#CROSS_COMPILE:=[path+common prefix to where the toolchain is]\n\n# You could also use W=2 and W=3 for more warnings but most kernel headers\n\n# fail those...\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/kernel_standalone/irqcatch/Makefile" : {
      "ObjectId" : "14c2b3fcd1b1c913a53ceb7ae6e93e1b7ddfa20b",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/kernel_standalone/mods_using_each_other/Makefile" : {
      "ObjectId" : "e7e8595dbc992a2aac04aaf1d2e5d5038045a067",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# NOTES:\n\n# CURDIR is the current directory (GNU make built in variable).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# the base name of the module (the name of the variable is your own)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# the name of the .ko\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# the .ko file that will be generated\n\n# the variable obj-m is required for the kernel to know which module to create.\n\n# I know that it's weird but this should be a .o name and is probably due to backwards\n\n# compatibility issues.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This is not strictly required for a single object module where the name of the module\n\n# is the name of the single file in it. In my case this is not the case since the module\n\n# is hello.ko while the single file is main.c.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# fill in the version of the kernel for which you want the module compiled to\n\n# the ?= means that it will only be set if you have not provided this via the command line.\n\n# You can override using \"make KVER=2.6.35\".\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# fill in the directory of the kernel build system\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# fill in the vervosity level you want\n\n# You can override using \"make V=1\"\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# You could also use W=2 and W=3 for more warnings but most kernel headers\n\n# fail those...\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# the next four targets (modules, modules_install, clean, help) are targets defined\n\n# by the kernel makefile...\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# a target to debug my own makefile...\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# easy macros to enable kernel development (these make little sense in this context)\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "src/kernel_standalone/multifile/Makefile" : {
      "ObjectId" : "dd8c5038a090ee05fc8c07e40c971a70d253ddd7",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# NOTES:\n\n# CURDIR is the current directory (GNU make built in variable).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# the base name of the module (the name of the variable is your own)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# the name of the .ko\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# the .ko file that will be generated\n\n# the variable obj-m is required for the kernel to know which module to create.\n\n# I know that it's weird but this should be a .o name and is probably due to backwards\n\n# compatibility issues.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This is not strictly required for a single object module where the name of the module\n\n# is the name of the single file in it. In my case this is not the case since the module\n\n# is hello.ko while the single file is main.c.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# fill in the version of the kernel for which you want the module compiled to\n\n# the ?= means that it will only be set if you have not provided this via the command line.\n\n# You can override using \"make KVER=2.6.35\".\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# fill in the directory of the kernel build system\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# fill in the vervosity level you want\n\n# You can override using \"make V=1\"\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# You could also use W=2 and W=3 for more warnings but most kernel headers\n\n# fail those...\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# the next four targets (modules, modules_install, clean, help) are targets defined\n\n# by the kernel makefile...\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# a target to debug my own makefile...\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# easy macros to enable kernel development\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "src/kernel_standalone/multimod/Makefile" : {
      "ObjectId" : "05d8a414ae0ccb169d5e08ca510e6eb00a5d5b40",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# NOTES:\n\n# CURDIR is the current directory (GNU make built in variable).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# the base name of the module (the name of the variable is your own)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# the name of the .ko\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# the .ko file that will be generated\n\n# the variable obj-m is required for the kernel to know which module to create.\n\n# I know that it's weird but this should be a .o name and is probably due to backwards\n\n# compatibility issues.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This is not strictly required for a single object module where the name of the module\n\n# is the name of the single file in it. In my case this is not the case since the module\n\n# is hello.ko while the single file is main.c.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# fill in the version of the kernel for which you want the module compiled to\n\n# the ?= means that it will only be set if you have not provided this via the command line.\n\n# You can override using \"make KVER=2.6.35\".\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# fill in the directory of the kernel build system\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# fill in the vervosity level you want\n\n# You can override using \"make V=1\"\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# You could also use W=2 and W=3 for more warnings but most kernel headers\n\n# fail those...\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# the next four targets (modules, modules_install, clean, help) are targets defined\n\n# by the kernel makefile...\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# a target to debug my own makefile...\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# easy macros to enable kernel development (these make little sense in this context)\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "src/kernel_standalone/myempty/Makefile" : {
      "ObjectId" : "14c2b3fcd1b1c913a53ceb7ae6e93e1b7ddfa20b",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/kernel_standalone/mynull/Makefile" : {
      "ObjectId" : "14c2b3fcd1b1c913a53ceb7ae6e93e1b7ddfa20b",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/kernel_standalone/myparam/Makefile" : {
      "ObjectId" : "14c2b3fcd1b1c913a53ceb7ae6e93e1b7ddfa20b",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/kernel_standalone/myzero/Makefile" : {
      "ObjectId" : "14c2b3fcd1b1c913a53ceb7ae6e93e1b7ddfa20b",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/kernel_standalone/pipe/Makefile" : {
      "ObjectId" : "14c2b3fcd1b1c913a53ceb7ae6e93e1b7ddfa20b",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/kernel_standalone/simple_pipe/Makefile" : {
      "ObjectId" : "14c2b3fcd1b1c913a53ceb7ae6e93e1b7ddfa20b",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/kernel_standalone/skeleton/Makefile" : {
      "ObjectId" : "46779b721fad766e392b896621bc198489a43b7f",
      "LastModified" : "2016-10-28T12:44:14Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# this is a minimal makefile for demo purposes, keep it that way...\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You could also use W=2 and W=3 for more warnings but most kernel headers\n\n# fail those...\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in an embedded system:\n\n#KDIR:=[where the system maker gave me kernel headers+makefile or the kernel itself which has a makefile]\n\n#ARCH:=arm\n\n#CROSS_COMPILE:=[path+common prefix to where the toolchain is]\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 90
  },
  "ElapsedTime" : 2901
}