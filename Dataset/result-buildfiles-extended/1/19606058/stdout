{
  "Repository" : "19606058",
  "Revision" : "HEAD",
  "ObjectId" : "25bb95af4be87af34938fa330944d5945d863a19",
  "CommitTime" : "2019-04-15T15:34:11Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "b140036c6f8e616ab52e7ccac306bcfaaa14ee1e",
      "LastModified" : "2018-12-18T10:32:37Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "doc/Makefile" : {
      "ObjectId" : "fd1904c245e39397c57a9387ec205c6ac2adaf48",
      "LastModified" : "2018-01-23T11:48:56Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# User-friendly check for sphinx-build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Internal variables.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "drivers/Makefile" : {
      "ObjectId" : "ddf58b4ed825597f89455f5fb23074b6ed23ff7f",
      "LastModified" : "2018-01-23T11:48:56Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\tcd broadcom; make\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\tcd chelsio/cxgb4; make\n\n#\tcd myricom; make\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\tcd broadcom; make clean\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\tcd chelsio/cxgb4; make clean\n\n#\tcd myricom; make clean\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "drivers/intel/Makefile" : {
      "ObjectId" : "e58df2b1f6a9e6bfc29ff747e560ca6c97db1451",
      "LastModified" : "2019-02-28T18:22:47Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "drivers/intel/e1000e/e1000e-3.4.0.2-zc/Makefile" : {
      "ObjectId" : "807b1c53c9ca2eb7e924d9021625bec9ead35ad0",
      "LastModified" : "2019-02-28T18:22:47Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "drivers/intel/e1000e/e1000e-3.4.0.2-zc/src/Makefile" : {
      "ObjectId" : "b15b599941008ee3076a99a53e088a80d382caae",
      "LastModified" : "2019-02-28T18:22:47Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "################################################################################\n\n#\n\n# Intel PRO/1000 Linux driver\n\n# Copyright(c) 1999 - 2015 Intel Corporation.\n\n#\n\n# This program is free software; you can redistribute it and/or modify it\n\n# under the terms and conditions of the GNU General Public License,\n\n# version 2, as published by the Free Software Foundation.\n\n#\n\n# This program is distributed in the hope it will be useful, but WITHOUT\n\n# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n\n# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for\n\n# more details.\n\n#\n\n# The full GNU General Public License is included in this distribution in\n\n# the file called \"COPYING\".\n\n#\n\n# Contact Information:\n\n# Linux NICS <linux.nics@intel.com>\n\n# e1000-devel Mailing List <e1000-devel@lists.sourceforge.net>\n\n# Intel Corporation, 5200 N.E. Elam Young Parkway, Hillsboro, OR 97124-6497\n\n#\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###########################################################################\n\n# Driver files\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# core driver files\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###########################################################################\n\n# Environment tests\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Kernel Search Path\n\n# All the places we look for kernel source\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# prune the list down to only values that exist\n\n# and have an include/linux sub-directory\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# we will use this first valid entry in the search path\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Version file Search Path\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Config file Search Path\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# prune the lists down to only files that exist\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# and use the first valid entry in the Search Paths\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# pick a compiler\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Set no-pie for compilers that enable pie by default\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# we need to know what platform the driver is being built on\n\n# some additional features are only built on Intel platforms\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# extra flags for module builds\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# standard flags for module builds\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# 7.3 typo in rhconfig.h\n",
        "Line" : 168,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# get the kernel version - we use this to find the correct install path\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# assume source symlink is the same as build, otherwise adjust KOBJ\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# abort the build on kernels older than 2.4.0\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Use NO_PTP_SUPPORT compile flag to disable IEEE-1588 PTP(documented in README)\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Do not attempt to enable PTP on kernels that do not support it\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# CONFIG_PTP_1588_CLOCK\n\n# kernel version >= 3.0\n\n# NO_PTP_SUPPORT\n",
        "Line" : 204,
        "CharPositionInLine" : 6
      },
      "23" : {
        "Text" : "# set the install path\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# look for SMP in config.h\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "###########################################################################\n\n# Kernel Version Specific rules\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Makefile for 2.5.x and newer kernel\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# man page\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ifeq (1,$(shell [ $(KVER_CODE) -ge 132352 ] && echo 1 || echo 0))\n",
        "Line" : 267,
        "CharPositionInLine" : 5
      },
      "29" : {
        "Text" : "# Makefile for 2.4.x kernel\n",
        "Line" : 269,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# man page\n",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Get rid of compile warnings in kernel header files from SuSE\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Get rid of compile warnings in kernel header files from fedora\n",
        "Line" : 281,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# ifeq (1,$(shell [ $(KVER_CODE) -ge 132352 ] && echo 1 || echo 0))\n",
        "Line" : 303,
        "CharPositionInLine" : 6
      },
      "34" : {
        "Text" : "# find the best place to install the man page\n",
        "Line" : 306,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# test based on inclusion in MANPATH\n",
        "Line" : 309,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# no MANPATH, test based on directory existence\n",
        "Line" : 312,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "# our preferred install path\n\n# should /usr/local/man be in here ?\n",
        "Line" : 315,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# fallback to /usr/man\n",
        "Line" : 322,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "# depmod version for rpm builds\n",
        "Line" : 326,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "###########################################################################\n\n# Build rules\n",
        "Line" : 330,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# remove all old versions of the driver\n",
        "Line" : 337,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 42,
      "Errorlog" : "line 53:73 token recognition error at: '\\1'\n"
    },
    "drivers/intel/fm10k/fm10k-0.23.5-zc/Makefile" : {
      "ObjectId" : "807b1c53c9ca2eb7e924d9021625bec9ead35ad0",
      "LastModified" : "2019-02-28T18:22:47Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "drivers/intel/fm10k/fm10k-0.23.5-zc/src/Makefile" : {
      "ObjectId" : "04f1b237d9af3719657e973d865e0cc0140aa236",
      "LastModified" : "2019-02-28T18:22:47Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "################################################################################\n\n#\n\n# Intel(R) Ethernet Switch Host Interface Driver\n\n# Copyright(c) 2013 - 2016 Intel Corporation.\n\n#\n\n# This program is free software; you can redistribute it and/or modify it\n\n# under the terms and conditions of the GNU General Public License,\n\n# version 2, as published by the Free Software Foundation.\n\n#\n\n# This program is distributed in the hope it will be useful, but WITHOUT\n\n# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n\n# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for\n\n# more details.\n\n#\n\n# The full GNU General Public License is included in this distribution in\n\n# the file called \"COPYING\".\n\n#\n\n# Contact Information:\n\n# e1000-devel Mailing List <e1000-devel@lists.sourceforge.net>\n\n# Intel Corporation, 5200 N.E. Elam Young Parkway, Hillsboro, OR 97124-6497\n\n#\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# kbuild part of makefile\n\n#\n\n# Makefile for the Intel(R) Ethernet Switch Host Interface Driver\n\n#\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ifneq($(KERNELRELEASE),)\n",
        "Line" : 52,
        "CharPositionInLine" : 5
      },
      "3" : {
        "Text" : "# normal makefile\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# fm10k does not support building on kernels older than 2.6.32\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "############################\n\n# Module Install Directory #\n\n############################\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Default to using updates/drivers/net/ethernet/intel/ path, since depmod since\n\n# v3.1 defaults to checking updates folder first, and only checking kernels/\n\n# and extra afterwards. We use updates instead of kernel/* due to desire to\n\n# prevent over-writing built-in modules files.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "######################\n\n# Kernel Build Macro #\n\n######################\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# PF_RING\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# kernel build function\n\n# ${1} is the kernel build target\n\n# ${2] may contain any extra rules to pass directly to the sub-make process\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "###############\n\n# Build rules #\n\n###############\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Standard compilation, with regular output\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Noisy output, for extra debugging\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Silence any output generated\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Enable higher warning level\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Run sparse static analyzer\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Run coccicheck static analyzer\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Build manfiles\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Clean the module subdirectories\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Install the modules and manpage\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "########\n\n# Help #\n\n########\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# ifneq($(KERNELRELEASE),)\n",
        "Line" : 179,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 22
    },
    "drivers/intel/i40e/i40e-2.4.6-zc/Makefile" : {
      "ObjectId" : "807b1c53c9ca2eb7e924d9021625bec9ead35ad0",
      "LastModified" : "2019-02-28T18:22:47Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "drivers/intel/i40e/i40e-2.4.6-zc/src/Makefile" : {
      "ObjectId" : "280f8699c2f9c246f1bee12e8c02790dfbb1a6eb",
      "LastModified" : "2019-02-28T18:22:47Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "################################################################################\n\n#\n\n# Intel(R) 40-10 Gigabit Ethernet Connection Network Driver\n\n# Copyright(c) 2013 - 2016 Intel Corporation.\n\n#\n\n# This program is free software; you can redistribute it and/or modify it\n\n# under the terms and conditions of the GNU General Public License,\n\n# version 2, as published by the Free Software Foundation.\n\n#\n\n# This program is distributed in the hope it will be useful, but WITHOUT\n\n# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n\n# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for\n\n# more details.\n\n#\n\n# The full GNU General Public License is included in this distribution in\n\n# the file called \"COPYING\".\n\n#\n\n# Contact Information:\n\n# e1000-devel Mailing List <e1000-devel@lists.sourceforge.net>\n\n# Intel Corporation, 5200 N.E. Elam Young Parkway, Hillsboro, OR 97124-6497\n\n#\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# kbuild part of makefile\n\n#\n\n# Makefile for the Intel(R) 40-10 Gigabit Ethernet Connection Network Driver\n\n#\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# PF_RING\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# PF_RING\n\n#i40e-$(CONFIG_FCOE:m=y) += i40e_fcoe.o\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ifneq($(KERNELRELEASE),)\n",
        "Line" : 55,
        "CharPositionInLine" : 5
      },
      "5" : {
        "Text" : "# normal makefile\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# i40e does not support building on kernels older than 2.6.32\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "############################\n\n# Module Install Directory #\n\n############################\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Default to using updates/drivers/net/ethernet/intel/ path, since depmod since\n\n# v3.1 defaults to checking updates folder first, and only checking kernels/\n\n# and extra afterwards. We use updates instead of kernel/* due to desire to\n\n# prevent over-writing built-in modules files.\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "######################\n\n# Kernel Build Macro #\n\n######################\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# PF_RING\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# kernel build function\n\n# ${1} is the kernel build target\n\n# ${2] may contain any extra rules to pass directly to the sub-make process\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "###############\n\n# Build rules #\n\n###############\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Standard compilation, with regular output\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Noisy output, for extra debugging\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Silence any output generated\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Enable higher warning level\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Run sparse static analyzer\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Run coccicheck static analyzer\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Build manfiles\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Clean the module subdirectories\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Install the modules and manpage\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "########\n\n# Help #\n\n########\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# ifneq($(KERNELRELEASE),)\n",
        "Line" : 192,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 24
    },
    "drivers/intel/igb/igb-5.3.5.18-zc/Makefile" : {
      "ObjectId" : "807b1c53c9ca2eb7e924d9021625bec9ead35ad0",
      "LastModified" : "2019-02-28T18:22:47Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "drivers/intel/igb/igb-5.3.5.18-zc/src/Makefile" : {
      "ObjectId" : "38f56046d624cb26f86dca87c96c3d909698bbd5",
      "LastModified" : "2019-02-28T18:22:47Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "################################################################################\n\n#\n\n# Intel(R) Gigabit Ethernet Linux driver\n\n# Copyright(c) 2007-2015 Intel Corporation.\n\n#\n\n# This program is free software; you can redistribute it and/or modify it\n\n# under the terms and conditions of the GNU General Public License,\n\n# version 2, as published by the Free Software Foundation.\n\n#\n\n# This program is distributed in the hope it will be useful, but WITHOUT\n\n# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n\n# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for\n\n# more details.\n\n#\n\n# The full GNU General Public License is included in this distribution in\n\n# the file called \"COPYING\".\n\n#\n\n# Contact Information:\n\n# Linux NICS <linux.nics@intel.com>\n\n# e1000-devel Mailing List <e1000-devel@lists.sourceforge.net>\n\n# Intel Corporation, 5200 N.E. Elam Young Parkway, Hillsboro, OR 97124-6497\n\n#\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###########################################################################\n\n# Driver files\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# core driver files\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###########################################################################\n\n# Environment tests\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Kernel Search Path\n\n# All the places we look for kernel source\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# prune the list down to only values that exist\n\n# and have an include/linux sub-directory\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# we will use this first valid entry in the search path\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Version file Search Path\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Config file Search Path\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# prune the lists down to only files that exist\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# and use the first valid entry in the Search Paths\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# pick a compiler\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Set no-pie for compilers that enable pie by default\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# we need to know what platform the driver is being built on\n\n# some additional features are only built on Intel platforms\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# extra flags for module builds\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# standard flags for module builds\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Some helper functions for converting kernel version to version codes\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# The following command line parameter is intended for development of KCOMPAT\n\n# against upstream kernels such as net-next which have broken or non-updated\n\n# version codes in their Makefile. They are intended for debugging and\n\n# development purpose only so that we can easily test new KCOMPAT early. If you\n\n# don't know what this means, you do not need to set this flag. There is no\n\n# arcane magic here.\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Convert LINUX_VERSION into LINUX_VERSION_CODE\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Honor LINUX_VERSION_CODE\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# 7.3 typo in rhconfig.h\n",
        "Line" : 196,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# get the kernel version - we use this to find the correct install path\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# assume source symlink is the same as build, otherwise adjust KOBJ\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# abort the build on kernels older than 2.4.21\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# look for PCI in config.h\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Use NO_PTP_SUPPORT flag to disable IEEE-1588 PTP (Documented in README)\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Do not attempt to enable PTP in kernels which do not have support\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# CONFIG_PTP_1588_CLOCK\n\n# kernel version >= 3.0\n\n# !NO_PTP_SUPPORT\n",
        "Line" : 243,
        "CharPositionInLine" : 6
      },
      "28" : {
        "Text" : "# set the install path\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# look for SMP in config.h\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "###########################################################################\n\n# Kernel Version Specific rules\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Makefile for 2.5.x and newer kernel\n",
        "Line" : 281,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# man page\n",
        "Line" : 284,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# ifeq (1,$(shell [ $(KVER_CODE) -ge 132352 ] && echo 1 || echo 0))\n",
        "Line" : 303,
        "CharPositionInLine" : 5
      },
      "34" : {
        "Text" : "# Makefile for 2.4.x kernel\n",
        "Line" : 305,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# man page\n",
        "Line" : 308,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Get rid of compile warnings in kernel header files from SuSE\n",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Get rid of compile warnings in kernel header files from fedora\n",
        "Line" : 317,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# ifeq (1,$(shell [ $(KVER_CODE) -ge 132352 ] && echo 1 || echo 0))\n",
        "Line" : 339,
        "CharPositionInLine" : 6
      },
      "39" : {
        "Text" : "# find the best place to install the man page\n",
        "Line" : 342,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# test based on inclusion in MANPATH\n",
        "Line" : 345,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "# no MANPATH, test based on directory existence\n",
        "Line" : 348,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "# our preferred install path\n\n# should /usr/local/man be in here ?\n",
        "Line" : 351,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# fallback to /usr/man\n",
        "Line" : 358,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# depmod version for rpm builds\n",
        "Line" : 362,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "###########################################################################\n\n# Build rules\n",
        "Line" : 366,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# remove all old versions of the driver\n",
        "Line" : 373,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 47,
      "Errorlog" : "line 55:73 token recognition error at: '\\1'\n"
    },
    "drivers/intel/ixgbe/ixgbe-5.5.3-zc/Makefile" : {
      "ObjectId" : "807b1c53c9ca2eb7e924d9021625bec9ead35ad0",
      "LastModified" : "2019-02-28T18:22:47Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "drivers/intel/ixgbe/ixgbe-5.5.3-zc/src/Makefile" : {
      "ObjectId" : "e95d9092b641511d0a125707bd5e5d07e86f45c9",
      "LastModified" : "2019-02-28T18:22:47Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "################################################################################\n\n#\n\n# Intel 10 Gigabit PCI Express Linux driver\n\n# Copyright (c) 1999 - 2014 Intel Corporation.\n\n#\n\n# This program is free software; you can redistribute it and/or modify it\n\n# under the terms and conditions of the GNU General Public License,\n\n# version 2, as published by the Free Software Foundation.\n\n#\n\n# This program is distributed in the hope it will be useful, but WITHOUT\n\n# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n\n# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for\n\n# more details.\n\n#\n\n# The full GNU General Public License is included in this distribution in\n\n# the file called \"COPYING\".\n\n#\n\n# Contact Information:\n\n# Linux NICS <linux.nics@intel.com>\n\n# e1000-devel Mailing List <e1000-devel@lists.sourceforge.net>\n\n# Intel Corporation, 5200 N.E. Elam Young Parkway, Hillsboro, OR 97124-6497\n\n#\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###########################################################################\n\n# Driver files\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# core driver files\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###########################################################################\n\n# Environment tests\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Kernel Search Path\n\n# All the places we look for kernel source\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# prune the list down to only values that exist\n\n# and have an include/linux sub-directory\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# we will use this first valid entry in the search path\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Version file Search Path\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Config file Search Path\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# prune the lists down to only files that exist\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# and use the first valid entry in the Search Paths\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# pick a compiler\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Set no-pie for compilers that enable pie by default\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# check for ubuntu kernel 3.13.0-24 (HAVE_PF_RING)\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# we need to know what platform the driver is being built on\n\n# some additional features are only built on Intel platforms\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# extra flags for module builds\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# standard flags for module builds\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#-DDISABLE_NETIF_F_HW_VLAN_TX\n",
        "Line" : 178,
        "CharPositionInLine" : 72
      },
      "18" : {
        "Text" : "# Some helper functions for converting kernel version to version codes\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# The following command line parameter is intended for development of KCOMPAT\n\n# against upstream kernels such as net-next which have broken or non-updated\n\n# version codes in their Makefile. They are intended for debugging and\n\n# development purpose only so that we can easily test new KCOMPAT early. If you\n\n# don't know what this means, you do not need to set this flag. There is no\n\n# arcane magic here.\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Convert LINUX_VERSION into LINUX_VERSION_CODE\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Honor LINUX_VERSION_CODE\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# 7.3 typo in rhconfig.h\n",
        "Line" : 210,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# get the kernel version - we use this to find the correct install path\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# assume source symlink is the same as build, otherwise adjust KOBJ\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# abort the build on kernels older than 2.4.0\n",
        "Line" : 243,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Add DCB netlink source if our kernel is 2.6.23 or newer\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Add FCoE source if FCoE is supported by the kernel\n",
        "Line" : 254,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Add Debug FS source if DEBUG_FS is supported by the kernel\n",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Use NO_PTP_SUPPORT flag to disable IEEE-1588 PTP (Documented in README)\n",
        "Line" : 269,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Do not attempt to enable PTP in kernels which do not have support\n",
        "Line" : 271,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# CONFIG_PTP_1588_CLOCK\n\n# kernel version >= 3.0\n\n# !NO_PTP_SUPPORT\n",
        "Line" : 276,
        "CharPositionInLine" : 6
      },
      "32" : {
        "Text" : "# set the install path before and after 3.2.0\n",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# look for SMP in config.h\n",
        "Line" : 287,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "###########################################################################\n\n# Kernel Version Specific rules\n",
        "Line" : 313,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Makefile for 2.5.x and newer kernel\n",
        "Line" : 318,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# man page\n",
        "Line" : 321,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# ifeq (1,$(shell [ $(KVER_CODE) -ge 132352 ] && echo 1 || echo 0))\n",
        "Line" : 340,
        "CharPositionInLine" : 5
      },
      "38" : {
        "Text" : "# Makefile for 2.4.x kernel\n",
        "Line" : 342,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# man page\n",
        "Line" : 345,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Get rid of compile warnings in kernel header files from SuSE\n",
        "Line" : 349,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Get rid of compile warnings in kernel header files from fedora\n",
        "Line" : 354,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# ifeq (1,$(shell [ $(KVER_CODE) -ge 132352 ] && echo 1 || echo 0))\n",
        "Line" : 376,
        "CharPositionInLine" : 6
      },
      "43" : {
        "Text" : "# find the best place to install the man page\n",
        "Line" : 379,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# test based on inclusion in MANPATH\n",
        "Line" : 382,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "# no MANPATH, test based on directory existence\n",
        "Line" : 385,
        "CharPositionInLine" : 4
      },
      "46" : {
        "Text" : "# our preferred install path\n\n# should /usr/local/man be in here ?\n",
        "Line" : 388,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "# fallback to /usr/man\n",
        "Line" : 395,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "# depmod version for rpm builds\n",
        "Line" : 399,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "###########################################################################\n\n# Build rules\n",
        "Line" : 403,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# remove all old versions of the driver\n",
        "Line" : 410,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 51,
      "Errorlog" : "line 62:73 token recognition error at: '\\1'\n"
    },
    "drivers/intel/ixgbevf/ixgbevf-4.5.1-zc/Makefile" : {
      "ObjectId" : "807b1c53c9ca2eb7e924d9021625bec9ead35ad0",
      "LastModified" : "2019-02-28T18:22:47Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "drivers/intel/ixgbevf/ixgbevf-4.5.1-zc/src/Makefile" : {
      "ObjectId" : "7d5f9610e966fbf9aa26ab7b5d776556c4933dea",
      "LastModified" : "2019-02-28T18:22:47Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "################################################################################\n\n#\n\n# Intel 10 Gigabit PCI Express Linux driver\n\n# Copyright (c) 1999 - 2014 Intel Corporation.\n\n#\n\n# This program is free software; you can redistribute it and/or modify it\n\n# under the terms and conditions of the GNU General Public License,\n\n# version 2, as published by the Free Software Foundation.\n\n#\n\n# This program is distributed in the hope it will be useful, but WITHOUT\n\n# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n\n# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for\n\n# more details.\n\n#\n\n# The full GNU General Public License is included in this distribution in\n\n# the file called \"COPYING\".\n\n#\n\n# Contact Information:\n\n# Linux NICS <linux.nics@intel.com>\n\n# e1000-devel Mailing List <e1000-devel@lists.sourceforge.net>\n\n# Intel Corporation, 5200 N.E. Elam Young Parkway, Hillsboro, OR 97124-6497\n\n#\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###########################################################################\n\n# Driver files\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# core driver files\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###########################################################################\n\n# Environment tests\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Kernel Search Path\n\n# All the places we look for kernel source\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# prune the list down to only values that exist\n\n# and have an include/linux sub-directory\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# we will use this first valid entry in the search path\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Version file Search Path\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Config file Search Path\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# prune the lists down to only files that exist\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# and use the first valid entry in the Search Paths\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# pick a compiler\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Set no-pie for compilers that enable pie by default\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# check for ubuntu kernel 3.13.0-24 (HAVE_PF_RING)\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# we need to know what platform the driver is being built on\n\n# some additional features are only built on Intel platforms\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# extra flags for module builds\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# standard flags for module builds\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#-DDISABLE_NETIF_F_HW_VLAN_TX\n",
        "Line" : 166,
        "CharPositionInLine" : 72
      },
      "18" : {
        "Text" : "# Some helper functions for converting kernel version to version codes\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# The following command line parameter is intended for development of KCOMPAT\n\n# against upstream kernels such as net-next which have broken or non-updated\n\n# version codes in their Makefile. They are intended for debugging and\n\n# development purpose only so that we can easily test new KCOMPAT early. If you\n\n# don't know what this means, you do not need to set this flag. There is no\n\n# arcane magic here.\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Convert LINUX_VERSION into LINUX_VERSION_CODE\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Honor LINUX_VERSION_CODE\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# 7.3 typo in rhconfig.h\n",
        "Line" : 198,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# get the kernel version - we use this to find the correct install path\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# assume source symlink is the same as build, otherwise adjust KOBJ\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# abort the build on kernels older than 2.4.0\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# set the install path before and after 3.2.0\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# look for SMP in config.h\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "###########################################################################\n\n# Kernel Version Specific rules\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Makefile for 2.5.x and newer kernel\n",
        "Line" : 281,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# man page\n",
        "Line" : 284,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# ifeq (1,$(shell [ $(KVER_CODE) -ge 132352 ] && echo 1 || echo 0))\n",
        "Line" : 303,
        "CharPositionInLine" : 5
      },
      "32" : {
        "Text" : "# Makefile for 2.4.x kernel\n",
        "Line" : 305,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# man page\n",
        "Line" : 308,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Get rid of compile warnings in kernel header files from SuSE\n",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Get rid of compile warnings in kernel header files from fedora\n",
        "Line" : 317,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# ifeq (1,$(shell [ $(KVER_CODE) -ge 132352 ] && echo 1 || echo 0))\n",
        "Line" : 339,
        "CharPositionInLine" : 6
      },
      "37" : {
        "Text" : "# find the best place to install the man page\n",
        "Line" : 342,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# test based on inclusion in MANPATH\n",
        "Line" : 345,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "# no MANPATH, test based on directory existence\n",
        "Line" : 348,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# our preferred install path\n\n# should /usr/local/man be in here ?\n",
        "Line" : 351,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# fallback to /usr/man\n",
        "Line" : 358,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# depmod version for rpm builds\n",
        "Line" : 362,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "###########################################################################\n\n# Build rules\n",
        "Line" : 366,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# remove all old versions of the driver\n",
        "Line" : 373,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 45,
      "Errorlog" : "line 50:73 token recognition error at: '\\1'\n"
    },
    "drivers/intel/zc-dkms-mkdeb/Makefile" : {
      "ObjectId" : "57e13d835f3d1512620ba2131aac2203d88a3df7",
      "LastModified" : "2019-02-28T18:22:47Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#/usr/bin/make\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#source tree\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#tarball, possibly with binaries\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#postinst, only if we are supporting legacy mode\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "kernel/Makefile" : {
      "ObjectId" : "10c8ddd68dc97c65ebb4f63dfcddeb7098856951",
      "LastModified" : "2019-02-28T18:22:47Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# (C) 2009-15 - ntop.org\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# assigned by Makefile.dkms\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set no-pie for compilers that enable pie by default\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# set the install path\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\t@if test \"$(USER)\" = \"root\"; then \\\n#\t\techo \"********** WARNING WARNING WARNING **********\"; \\\n#\t\techo \"*\"; \\\n#\t\techo \"* Compiling PF_RING as root might lead you to compile errors\"; \\\n#\t\techo \"* Please compile PF_RING as unpriviliged user\"; \\\n#\t\techo \"*\"; \\\n#\t\techo \"*********************************************\"; \\\n#\tfi\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n",
        "Line" : 74,
        "CharPositionInLine" : 42
      },
      "CommentCount" : 6
    },
    "kernel/pfring-dkms-mkdeb/Makefile" : {
      "ObjectId" : "57e13d835f3d1512620ba2131aac2203d88a3df7",
      "LastModified" : "2019-02-28T18:22:47Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#/usr/bin/make\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#source tree\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#tarball, possibly with binaries\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#postinst, only if we are supporting legacy mode\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "userland/Makefile" : {
      "ObjectId" : "d5392c09c20bedec7325b0ce67d9820865bb81c6",
      "LastModified" : "2019-02-28T18:22:47Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# build_tcpdump build_c++\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###################\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###################\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "userland/examples_zc/kvm/guest/uio_kernel_module/Makefile" : {
      "ObjectId" : "2a73d245fae3d750ddd2fc4d852b61f0bfbcee53",
      "LastModified" : "2019-02-28T18:22:47Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# obj-m is a list of what kernel modules to build.  The .o and other\n\n# objects will be automatically built from the corresponding .c file -\n\n# no need to list the source files explicitly.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# KDIR is the location of the kernel source.  The current standard is\n\n# to link to the associated source tree from the directory containing\n\n# the compiled modules.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# PWD is the current working directory and the location of our module\n\n# source files.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# default is the default make target.  The rule here says to run make\n\n# with a working directory of the directory containing the kernel\n\n# source and compile only the modules in the PWD (local) directory.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "userland/examples_zc/zmq/Makefile" : {
      "ObjectId" : "e5617c3be4568592c30ca48d7692644ebff195b4",
      "LastModified" : "2019-02-28T18:22:47Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "userland/libpcap-1.8.1/CMakeLists.txt" : {
      "ObjectId" : "0ed8b61291a64bc86c3884d9e8bec0ef531c2834",
      "LastModified" : "2019-02-28T18:22:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Call the library \"wpcap\" on Windows, for backwards compatibility.\n\n#\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###################################################################\n\n#   Parameters\n\n###################################################################\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# XXX - this should be an option, defaulting to \"yes\" for Windows and to\n\n# \"no\", for now, on UN*X.\n\n#\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "######################################\n\n# Project settings\n\n######################################\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###################################################################\n\n#   Detect available platform features\n\n###################################################################\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# Header files.\n\n#\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# Functions.\n\n#\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# Check for Windows-only functions, such as packet.dll functions.\n\n#\n",
        "Line" : 131,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#\n\n# Data types.\n\n#\n\n# XXX - there's no check_struct() macro that's like check_struct_has_member()\n\n# except that it only checks for the existence of the structure type,\n\n# so we use check_struct_has_member() and look for ss_family.\n\n#\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\n\n# Structure fields.\n\n#\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "######################################\n\n# External dependencies\n\n######################################\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "######################################\n\n# Input files\n\n######################################\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#\n\n# Determine the main pcap-XXX.c file to use.\n\n#\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#\n\n# WinPcap.\n\n#\n",
        "Line" : 207,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "#\n\n# UN*X - figure out what type of packet capture mechanism we\n\n# have.\n\n#\n",
        "Line" : 212,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "#\n\n# Cloning BPF device.\n\n#\n",
        "Line" : 217,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "#\n\n# XXX - many more BPF checks.\n\n#\n",
        "Line" : 225,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "#\n\n# DEC OSF/1, Digital UNIX, Tru64 UNIX\n\n#\n",
        "Line" : 229,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "#\n\n# Do we have the wireless extensions?\n\n#\n",
        "Line" : 242,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "#\n\n# XXX - many more Linux checks.\n",
        "Line" : 247,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "#\n",
        "Line" : 249,
        "CharPositionInLine" : 1
      },
      "21" : {
        "Text" : "#\n\n# On AIX, the BPF devices might not yet be present - they're\n\n# created the first time libpcap runs after booting.\n\n# We check for odmi.h instead.\n\n#\n",
        "Line" : 253,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "#\n\n# XXX - many more DLPI checks.\n\n#\n",
        "Line" : 262,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "#\n\n# Now figure out how we get a list of interfaces and addresses,\n\n# if we support capturing.  Don't bother if we don't support\n\n# capturing.\n\n#\n",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\n\n# UN*X - figure out what type of interface list mechanism we\n\n# have.\n\n#\n",
        "Line" : 278,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "#\n\n# We can't capture, so we can't open any capture\n\n# devices, so we won't return any interfaces.\n\n#\n",
        "Line" : 283,
        "CharPositionInLine" : 8
      },
      "26" : {
        "Text" : "#\n\n# We have \"getifaddrs()\"; make sure we have <ifaddrs.h>\n\n# as well, just in case some platform is really weird.\n\n#\n",
        "Line" : 291,
        "CharPositionInLine" : 12
      },
      "27" : {
        "Text" : "#\n\n# We have the header, so we use \"getifaddrs()\" to\n\n# get the list of interfaces.\n\n#\n",
        "Line" : 297,
        "CharPositionInLine" : 16
      },
      "28" : {
        "Text" : "#\n\n# We don't have the header - give up.\n\n# XXX - we could also fall back on some other\n\n# mechanism, but, for now, this'll catch this\n\n# problem so that we can at least try to figure\n\n# out something to do on systems with \"getifaddrs()\"\n\n# but without \"ifaddrs.h\", if there is something\n\n# we can do on those systems.\n\n#\n",
        "Line" : 303,
        "CharPositionInLine" : 16
      },
      "29" : {
        "Text" : "#\n\n# Well, we don't have \"getifaddrs()\", so we have to use\n\n# some other mechanism; determine what that mechanism is.\n\n#\n\n# The first thing we use is the type of capture mechanism,\n\n# which is somewhat of a proxy for the OS we're using.\n\n#\n",
        "Line" : 315,
        "CharPositionInLine" : 12
      },
      "30" : {
        "Text" : "#\n\n# This might be Solaris 8 or later, with\n\n# SIOCGLIFCONF, or it might be some other OS\n\n# or some older version of Solaris, with\n\n# just SIOCGIFCONF.\n\n#\n",
        "Line" : 323,
        "CharPositionInLine" : 16
      },
      "31" : {
        "Text" : "#\n\n# Assume we just have SIOCGIFCONF.\n\n# (XXX - on at least later Linux kernels, there's\n\n# another mechanism, and we should be using that\n\n# instead.)\n\n#\n",
        "Line" : 337,
        "CharPositionInLine" : 16
      },
      "32" : {
        "Text" : "#\n\n# {Flex} and YACC/Berkeley YACC/Bison.\n\n# From a mail message to the CMake mailing list by Andy Cedilnik of\n\n# Kitware.\n\n#\n",
        "Line" : 364,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\n\n# Try to find Flex, a Windows version of Flex, or Lex.\n\n#\n",
        "Line" : 370,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#\n\n# Since scanner.c does not exist yet when cmake is run, mark\n\n# it as generated.\n\n#\n\n# Since scanner.c includes grammar.h, mark that as a dependency.\n\n#\n",
        "Line" : 386,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#\n\n# Add scanner.c to the list of sources.\n\n#\n\n#set(PROJECT_SOURCE_LIST_C ${PROJECT_SOURCE_LIST_C} ${CMAKE_CURRENT_BINARY_DIR}/scanner.c)\n",
        "Line" : 397,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#\n\n# Try to find YACC or Bison.\n\n#\n",
        "Line" : 402,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#\n\n# Create custom command for the scanner.\n\n# Find out whether it's Bison or notby looking at the last component\n\n# of the path (without a .exe extension, if this is Windows).\n\n#\n",
        "Line" : 411,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#\n\n# Since grammar.c does not exists yet when cmake is run, mark\n\n# it as generated.\n\n#\n",
        "Line" : 427,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#\n\n# Add grammar.c to the list of sources.\n\n#\n\n#set(PROJECT_SOURCE_LIST_C ${PROJECT_SOURCE_LIST_C} ${CMAKE_CURRENT_BINARY_DIR}/grammar.c)\n",
        "Line" : 435,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#\n\n# CMake does not love Windows.\n\n#\n",
        "Line" : 441,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "#\n\n# Since version.c does not exists yet when cmake is run, mark\n\n# it as generated.\n\n#\n",
        "Line" : 468,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "#\n\n# Add version.c to the list of sources.\n\n#\n",
        "Line" : 476,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "#\n\n# Since pcap_version.h does not exists yet when cmake is run, mark\n\n# it as generated.\n\n#\n",
        "Line" : 482,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "#\n\n# Add pcap_version.h to the list of headers.\n\n#\n",
        "Line" : 490,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "######################################\n\n# Register targets\n\n######################################\n",
        "Line" : 498,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "######################################\n\n# Write out the config.h file\n\n######################################\n",
        "Line" : 516,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    },
    "userland/libpcap-1.8.1/cmake/preconfigure.cmake" : {
      "ObjectId" : "c8c92a48edd707c7da7de2a7bf1398af796237e9",
      "LastModified" : "2019-02-28T18:22:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###################################################################\n\n#   Parameters\n\n###################################################################\n",
        "Line" : 4,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "######################################\n\n# Project setings\n\n######################################\n",
        "Line" : 10,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "userland/libpcap-1.8.1/tests/CMakeLists.txt" : {
      "ObjectId" : "fc7919ed38083e1d6a81670758d3d048171f0a38",
      "LastModified" : "2019-02-28T18:22:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "######################################\n\n# Register targets\n\n######################################\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#ADD_EXECUTABLE (pcap_compile_test pcap_compile_test.c ${PROJECT_SOURCE_LIST_WIN32_C} )\n\n#target_link_libraries ( pcap_compile_test pcap )\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "userland/modules/Makefile" : {
      "ObjectId" : "555250cc4c27763570abe87f98a8eb1355092b72",
      "LastModified" : "2019-02-28T18:22:47Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#cd Netcope; ./configure; make install\n\n#cd Exablaze; ./configure; make install\n\n#cd Inveatech; ./configure; make install\n\n#cd Mellanox; ./configure; make install\n",
        "Line" : 6,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "#cd Netcope; make clean\n\n#cd Exablaze; make clean\n\n#cd Inveatech; make clean\n\n#cd Mellanox; make clean\n",
        "Line" : 13,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "userland/snort/Makefile" : {
      "ObjectId" : "5e1cc679dda27850e899c13d22287951ce524bfb",
      "LastModified" : "2019-02-28T18:22:47Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "userland/snort/pfring-daq-module-zc/Makefile.am" : {
      "ObjectId" : "7123de18ae77121ad7fdd32f0cadc0a3d9807bda",
      "LastModified" : "2019-02-28T18:22:47Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "userland/snort/pfring-daq-module/Makefile.am" : {
      "ObjectId" : "e2ddf654c21afe018e4b27343a6b39f80c58c6b4",
      "LastModified" : "2019-02-28T18:22:47Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 3,
    "MAKEFILE" : 24,
    "AUTOMAKE" : 2
  },
  "ElapsedTime" : 5066
}