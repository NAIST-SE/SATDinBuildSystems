{
  "Repository" : "56224189",
  "Revision" : "HEAD",
  "ObjectId" : "f67775545f0c0e91fb91220e2a90f08928784cfb",
  "CommitTime" : "2019-04-09T21:52:42Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "4d228bc995cdacafb245e5dc0283dfd0473e0655",
      "LastModified" : "2019-01-24T10:05:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n# Augment CMake with our custom scripts\n\n#=============================================================================\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Conan\n\n#=============================================================================\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#=============================================================================\n\n# General configuration\n\n#=============================================================================\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#=============================================================================\n\n# Testing-related stuff\n\n#=============================================================================\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#=============================================================================\n\n# The code\n\n#=============================================================================\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#=============================================================================\n\n# Finalize tests\n\n#=============================================================================\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Should unit_test_targets depend on default targets ???\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#=============================================================================\n\n# Finalize coverage\n\n#=============================================================================\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#=============================================================================\n\n# Hints\n\n#=============================================================================\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "Utilities.cmake" : {
      "ObjectId" : "a2bd822714196db9841cc9b742a56b001a1d0689",
      "LastModified" : "2018-10-03T11:05:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n# Generate a loadable detector module\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Compile detector module code for static linking into the EFU.\n\n#=============================================================================\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#=============================================================================\n\n# Generate an executable program\n\n#=============================================================================\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#=============================================================================\n\n# Generate unit test targets\n\n#=============================================================================\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/AddTargetFlags.cmake" : {
      "ObjectId" : "720a8ab78f27336f84b6c6cbcdeba602c5835aee",
      "LastModified" : "2018-02-02T05:09:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n# Add linker flags\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Add compiler flags\n\n#=============================================================================\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Benchmarks.cmake" : {
      "ObjectId" : "97639607a773111c7ae9c610bfb97e6bd11c1098",
      "LastModified" : "2019-02-07T13:10:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Generate benchmark targets\n\n#\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/BuildString.cmake" : {
      "ObjectId" : "56c9a156915887e4453a0c15fb332139d293693b",
      "LastModified" : "2018-06-07T07:51:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/CompilerConfig.cmake" : {
      "ObjectId" : "da7ea937a6a8d1ef2a679019cf3bc31f8b14f34c",
      "LastModified" : "2019-02-07T13:10:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n# C++ standard\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(CMAKE_CXX_FLAGS_RELEASE ${CMAKE_CXX_FLAGS_RELEASE} \"-ggdb -fno-omit-frame-pointer\")\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Not working correctly?\n",
        "Line" : 15,
        "CharPositionInLine" : 33
      },
      "3" : {
        "Text" : "#=============================================================================\n\n# GCC ONLY\n\n#=============================================================================\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#    add_linker_flags(${module_name} \"--no-as-needed\")\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#message(STATUS EXTRA_CXX_FLAGS = ${EXTRA_CXX_FLAGS})\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/CoverageReports.cmake" : {
      "ObjectId" : "058254fc809e13f617f7413da8a07e1de916694d",
      "LastModified" : "2018-06-07T07:51:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=========================================================================================\n\n# Enabling code coverage\n\n#=========================================================================================\n\n#\n\n#   1. For each target that you want to enable coverage reporting for\n\n#      invoke enable_coverage(target_name)\n\n#\n\n#   2. Automatically create coverage generation targets with:\n\n#     create_coverage_targets(target_base_name run_target bin_dir source_dir output_path)\n\n#     where:\n\n#       targer_base_name -- will create *_html *_xml and * which makes both\n\n#       run_target -- name of target that runs the tests\n\n#       bin_dir -- root directory of unit test binaries\n\n#       source_dir -- root directory of source for which to make reports\n\n#       output_path -- where reports should be written to\n\n#\n\n#   3. when building, invoke cmake with -DCOV=1 option\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# \";\" ${COVERAGE_LLVM_COV_PATH} \"report\" \"${bin_dir}/lib\"\n",
        "Line" : 101,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "#          \"--verbose\"\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#          \"--verbose\"\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/EnsureBuildType.cmake" : {
      "ObjectId" : "dad91fe22bdd3db4a9c861eb289749cd0239f30a",
      "LastModified" : "2018-02-02T05:09:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Memcheck.cmake" : {
      "ObjectId" : "6282d78095dd178177cbc3322d8716627b6ca5c2",
      "LastModified" : "2018-06-07T07:51:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Profiling.cmake" : {
      "ObjectId" : "ad9ff55955301e7e2a00e69bb3b3ab72f379ac11",
      "LastModified" : "2019-02-07T13:10:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n## Gperftools profiline, nicked from Matthew Jones\n\n##\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindASIO.cmake" : {
      "ObjectId" : "b6d05591ba1e7e491004ad81de3f3c4069cb58fc",
      "LastModified" : "2019-02-07T13:10:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/modules/FindCLI11.cmake" : {
      "ObjectId" : "8aeeab74d76a2b3ce4b7f28da40eec0cd2008f20",
      "LastModified" : "2019-02-07T13:10:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/modules/FindGTestFix.cmake" : {
      "ObjectId" : "eadadabf437eba0c1c7c2cab589229d91a6fb896",
      "LastModified" : "2019-02-07T13:10:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if the source directory exists and is indeed a directory we build the\n\n#gtest code\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindGoogletest.cmake" : {
      "ObjectId" : "3763711f8bb009f2faf37c7131d08401f36373da",
      "LastModified" : "2019-02-07T13:10:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/modules/FindLibRDKafka.cmake" : {
      "ObjectId" : "825748b9de1605f787d1b34c7d031b3c85428fb0",
      "LastModified" : "2019-02-07T13:10:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find LibRDKafka headers and libraries.\n\n#\n\n# Usage of this module as follows:\n\n#\n\n#     find_package(LibRDKafka)\n\n#\n\n# Variables used by this module, they can change the default behaviour and need\n\n# to be set before calling find_package:\n\n#\n\n#  LibRDKafka_ROOT_DIR  Set this variable to the root installation of\n\n#                    LibRDKafka if the module has problems finding\n\n#                    the proper installation path.\n\n#\n\n# Variables defined by this module:\n\n#\n\n#  LIBRDKAFKA_FOUND              System has LibRDKafka libs/headers\n\n#  LibRDKafka_LIBRARIES          The LibRDKafka libraries\n\n#  LibRDKafka_INCLUDE_DIR        The location of LibRDKafka headers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindPCAP.cmake" : {
      "ObjectId" : "c02f316b0b548d74af306139928128dd6d709a76",
      "LastModified" : "2019-02-07T13:10:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find libpcap include dirs and libraries\n\n#\n\n# Usage of this module as follows:\n\n#\n\n#     find_package(PCAP)\n\n#\n\n# Variables used by this module, they can change the default behaviour and need\n\n# to be set before calling find_package:\n\n#\n\n#  PCAP_ROOT_DIR             Set this variable to the root installation of\n\n#                            libpcap if the module has problems finding the\n\n#                            proper installation path.\n\n#\n\n# Variables defined by this module:\n\n#\n\n#  PCAP_FOUND                System has libpcap, include and library dirs found\n\n#  PCAP_INCLUDE_DIR          The libpcap include directories.\n\n#  PCAP_LIBRARY              The libpcap library (possibly includes a thread\n\n#                            library e.g. required by pf_ring's libpcap)\n\n#  HAVE_PF_RING              If a found version of libpcap supports PF_RING\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# check if linking against libpcap also needs to link against a thread library\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindTrompeloeil.cmake" : {
      "ObjectId" : "a03da31e9359917b559c668ccc9438937e34cdef",
      "LastModified" : "2019-02-07T13:10:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/modules/conan.cmake" : {
      "ObjectId" : "a4439b975a2fba134866ae605311016c3d0c0e86",
      "LastModified" : "2019-02-07T13:10:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2018 JFrog\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# This file comes from: https://github.com/conan-io/cmake-conan. Please refer\n\n# to this repository for issues and documentation.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Its purpose is to wrap and launch Conan C/C++ Package Manager when cmake is called.\n\n# It will take CMake current settings (os, compiler, compiler version, architecture)\n\n# and translate them to conan settings for installing and retrieving dependencies.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# It is intended to facilitate developers building projects that have conan dependencies,\n\n# but it is only necessary on the end-user side. It is not necessary to create conan\n\n# packages, in fact it shouldn't be use for that. Check the project documentation.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#message(STATUS \"COMPILER \" ${CMAKE_CXX_COMPILER})\n\n#message(STATUS \"COMPILER \" ${CMAKE_CXX_COMPILER_ID})\n\n#message(STATUS \"VERSION \" ${CMAKE_CXX_COMPILER_VERSION})\n\n#message(STATUS \"FLAGS \" ${CMAKE_LANG_FLAGS})\n\n#message(STATUS \"LIB ARCH \" ${CMAKE_CXX_LIBRARY_ARCHITECTURE})\n\n#message(STATUS \"BUILD TYPE \" ${CMAKE_BUILD_TYPE})\n\n#message(STATUS \"GENERATOR \" ${CMAKE_GENERATOR})\n\n#message(STATUS \"GENERATOR WIN64 \" ${CMAKE_CL_64})\n",
        "Line" : 61,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#handle -s os setting\n",
        "Line" : 84,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "#use default conan os setting if CMAKE_SYSTEM_NAME is not defined\n",
        "Line" : 86,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "#check if the cmake system is a conan supported one\n",
        "Line" : 94,
        "CharPositionInLine" : 12
      },
      "12" : {
        "Text" : "# using GCC\n\n# TODO: Handle other params\n",
        "Line" : 113,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# using AppleClang\n",
        "Line" : 129,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# If profile is defined it is used\n",
        "Line" : 203,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Automatic from CMake\n",
        "Line" : 221,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Allow -D_GLIBCXX_USE_CXX11_ABI=ON/OFF as argument to cmake\n",
        "Line" : 241,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Check if there's any add_definitions(-D_GLIBCXX_USE_CXX11_ABI=0)\n",
        "Line" : 252,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Use C++11 stdlib as default if gcc is 5.1+\n",
        "Line" : 261,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Calls \"conan install\"\n\n# Argument BUILD is equivalant to --build={missing, PkgName,...} or\n\n# --build when argument is 'BUILD all' (which builds all packages from source)\n\n# Argument CONAN_COMMAND, to specify the conan path, e.g. in case of running from source\n\n# cmake does not identify conan as command, even if it is +x and it is in the path\n",
        "Line" : 300,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# A conan file has been specified - apply specified options as well if provided\n",
        "Line" : 330,
        "CharPositionInLine" : 6
      },
      "21" : {
        "Text" : "# configure_file will make sure cmake re-runs when conanfile is updated\n",
        "Line" : 380,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Generate, writing in disk a conanfile.txt with the requires, options, and imports\n\n# specified as arguments\n\n# This will be considered as temporary file, generated in CMAKE_CURRENT_BINARY_DIR)\n",
        "Line" : 389,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Checks for the existence of conanbuildinfo.cmake, and loads it\n\n# important that it is macro, so variables defined at parent scope\n",
        "Line" : 418,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# Checks conan availability in PATH\n\n# Arguments REQUIRED and VERSION are optional\n\n# Example usage:\n\n#    conan_check(VERSION 1.0.0 REQUIRED)\n",
        "Line" : 472,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# Adds a remote\n\n# Arguments URL and NAME are required, INDEX is optional\n\n# Example usage:\n\n#    conan_add_remote(NAME bincrafters INDEX 1\n\n#       URL https://api.bintray.com/conan/bincrafters/public-conan)\n",
        "Line" : 503,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 26
    },
    "documentation/minimaldetector/CMakeLists.txt" : {
      "ObjectId" : "94a27f07d5286c7718b26ddad58c9bf724dab2d0",
      "LastModified" : "2019-02-07T13:10:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n# Detector Pipeline Plugins\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set(minimaldetector_INC\n\n#     )\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "libs/CMakeLists.txt" : {
      "ObjectId" : "3d33af99d7eb8ac5261e37ead00007dc401dbdb9",
      "LastModified" : "2019-02-07T13:10:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "prototype2/CMakeLists.txt" : {
      "ObjectId" : "48303a22963c089a7c76a7e7e4a9689e2ef9ebf1",
      "LastModified" : "2019-02-07T13:10:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n# Required external libraries\n\n#=============================================================================\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Dependencies common to EFU and plugins\n\n#=============================================================================\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This has only libs unit tests now ???\n",
        "Line" : 36,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "#=============================================================================\n\n# Plugins\n\n#=============================================================================\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##=============================================================================\n\n## Event Formation Unit\n\n##=============================================================================\n\n# Add it last.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "prototype2/UnitTests.cmake" : {
      "ObjectId" : "16bf68e12c6d5f4e845072eb04807bc42712a281",
      "LastModified" : "2019-02-07T13:10:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Could this be moved to the libs directory somehow ???\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Libs unit tests\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "prototype2/adc_readout/CMakeLists.txt" : {
      "ObjectId" : "50ff8f8c6351991594dd4464849b78a457153e40",
      "LastModified" : "2019-02-07T13:10:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "prototype2/adc_readout/integration_test/CMakeLists.txt" : {
      "ObjectId" : "89a6ce17ac0dd52711ac646c38cb474262dd06c0",
      "LastModified" : "2019-02-07T13:10:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "prototype2/common/CMakeLists.txt" : {
      "ObjectId" : "9813a4f47a01b0c0227f05d5710e1e0329d40dee",
      "LastModified" : "2019-02-07T13:10:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n# Common functionality for all detector plugins\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Tests\n\n#=============================================================================\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#set(ESSGeometryTest_INC ESSGeometry.h)\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# GOOGLE BENCHMARKS\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "prototype2/common/clustering/CMakeLists.txt" : {
      "ObjectId" : "3491316657a9bd536f5361187c06625164ed1cd5",
      "LastModified" : "2019-02-07T13:10:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n# Tests\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "prototype2/efu/CMakeLists.txt" : {
      "ObjectId" : "cdb827ec14cb2f804ceb4e32f81141286d8993ab",
      "LastModified" : "2019-03-22T08:19:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n# Event Formation Unit\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# EFU Tests\n\n#=============================================================================\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "prototype2/gdgem/CMakeLists.txt" : {
      "ObjectId" : "83c615ca28eaba6ab82cec9348b738b8454ab0aa",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n# Detector Pipeline Plugins\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Also works for VMM2\n",
        "Line" : 21,
        "CharPositionInLine" : 27
      },
      "2" : {
        "Text" : "# also works for VMM2\n",
        "Line" : 45,
        "CharPositionInLine" : 24
      },
      "3" : {
        "Text" : "#\n\n# Unit Tests\n\n#\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#=============================================================================\n\n# Component tests\n\n#=============================================================================\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "prototype2/gdgem/gemsim/Makefile" : {
      "ObjectId" : "81d3430f11675aadc93381592b814098cb5aaa66",
      "LastModified" : "2019-02-07T13:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "prototype2/gdgem/generators/CMakeLists.txt" : {
      "ObjectId" : "5d34561bff10cb521e5fad70e06605c0f660264a",
      "LastModified" : "2019-02-13T09:23:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n# Raw evenlet generator (h5)\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "prototype2/gdgem/nmx/CMakeLists.txt" : {
      "ObjectId" : "db937f441c7416e76f2992f8495ced24070ecfc1",
      "LastModified" : "2019-02-07T13:10:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n# Tests\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Old Readout format conversion\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#create_executable(srs_converter)",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "prototype2/gdgem/srs/CMakeLists.txt" : {
      "ObjectId" : "0e6da90f358ee05e16e5fa9989fc0f9b414e06ae",
      "LastModified" : "2019-02-07T13:10:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n# Tests\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# todo BuilderVMM3 test needed\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "prototype2/gdgem/tests/CMakeLists.txt" : {
      "ObjectId" : "1dd752812f676a1259b19d7a20a291d83f192c75",
      "LastModified" : "2019-02-07T13:10:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n# Tests\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## GOOGLE BENCHMARK\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "prototype2/multiblade/CMakeLists.txt" : {
      "ObjectId" : "84030b6274116cc0d04238bae4f43a2c8c37b56d",
      "LastModified" : "2019-02-07T13:10:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n# Detector Pipeline Plugins\n\n#=============================================================================\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Pipeline test\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "prototype2/multiblade/caen/CMakeLists.txt" : {
      "ObjectId" : "fe2805c3da8a9772ab805db8f6a7d7028b47d436",
      "LastModified" : "2019-02-07T13:10:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# GOOGLE BENCHMARK\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create excecutable for the test of geometry\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Create excecutable for the test of digitizer mapping\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Create excecutable for the test of geometry\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Create excecutable for test of configuration\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# Tests relating to event building and benchmarks\n\n#\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# EventBuilderTest.cpp\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# EventBuilderBenchmarkTest.cpp\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "prototype2/multiblade/generators/CMakeLists.txt" : {
      "ObjectId" : "e8f50d9707a44999d72f8b72328474d6d548db5f",
      "LastModified" : "2019-02-07T13:10:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n# Raw readout generator (h5)\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "prototype2/multigrid/CMakeLists.txt" : {
      "ObjectId" : "ba75aca8405714533f6bda66ead9baa5eded2c1d",
      "LastModified" : "2019-02-07T13:10:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n# Detector Pipeline Plugins\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Two-thread implementation of Multi Grid demonstrator detector\n\n# for Mesytec Readout\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#=============================================================================\n\n# Tests\n\n#=============================================================================\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "prototype2/multigrid/generators/CMakeLists.txt" : {
      "ObjectId" : "c377775c5272b0f1d93265e9f203d7341309d3cf",
      "LastModified" : "2019-02-13T09:23:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n# Raw evenlet generator (h5)\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "prototype2/multigrid/geometry/CMakeLists.txt" : {
      "ObjectId" : "b48b4ce7ddf0bd59f3024f2588c7ae4c41102e78",
      "LastModified" : "2019-02-07T13:10:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "prototype2/multigrid/mesytec/CMakeLists.txt" : {
      "ObjectId" : "731e30e647d5415cc64896dbec65ae93f43a5939",
      "LastModified" : "2019-02-07T13:10:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "prototype2/multigrid/reduction/CMakeLists.txt" : {
      "ObjectId" : "ec12f3832cc2e981d3075cf42fd8c9b077ea3a3f",
      "LastModified" : "2019-02-07T13:10:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "prototype2/readout/CMakeLists.txt" : {
      "ObjectId" : "3d452705a1564f269796e1be18996905f4d8b882",
      "LastModified" : "2019-02-07T13:10:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n# ESS Readout System Tests\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "prototype2/sonde/CMakeLists.txt" : {
      "ObjectId" : "918d972f38c518d546917f4c4b82ddcd0fee6957",
      "LastModified" : "2019-03-12T14:40:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n# Detector Pipeline Plugins\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# IDEA based readout for SoNDe detector\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#=============================================================================\n\n# Tools and Data generators\n\n#=============================================================================\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#=============================================================================\n\n# Tests\n\n#=============================================================================\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "prototype2/tools/CMakeLists.txt" : {
      "ObjectId" : "3a97a3c3aa6f6575cc1424062f34e18d619db024",
      "LastModified" : "2019-02-07T13:10:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n# PCAP generator\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "prototype2/udp/CMakeLists.txt" : {
      "ObjectId" : "1bd55e383f6b9a9212bc9ed92e4d699e09fef52e",
      "LastModified" : "2019-02-07T13:10:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n# Detector Pipeline Plugins\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# UDP receiver 'detector'\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "utils/udp/CMakeLists.txt" : {
      "ObjectId" : "f7aed7022d2f88fe84fa3352ba34b8346331b4e2",
      "LastModified" : "2019-02-07T13:10:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "utils/udpredirect/Makefile" : {
      "ObjectId" : "9c2df62e23a5a7ae6a1f1a492fbe73ae9db8ec3a",
      "LastModified" : "2019-02-07T13:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 45,
    "MAKEFILE" : 2
  },
  "ElapsedTime" : 1552
}