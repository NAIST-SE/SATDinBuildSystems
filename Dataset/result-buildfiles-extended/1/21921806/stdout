{
  "Repository" : "21921806",
  "Revision" : "HEAD",
  "ObjectId" : "66a3a714166f15a4c3c25ebada77acb60094cb79",
  "CommitTime" : "2019-03-28T15:37:49Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "0591c0680a79f9af53cb77872edcb763e303da31",
      "LastModified" : "2019-01-31T08:42:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create version information file\n\n# Dummy target that does nothing. This enables us to attach build commands.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Display configuration summary\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "documentation/CMakeLists.txt" : {
      "ObjectId" : "2c2a68b9cbb5fd3344752d9c0b169452ebfe3109",
      "LastModified" : "2019-03-01T07:13:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Helper macro to return paths to rst files such that\n\n# the project documenation target can access them\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# pcraster_manual required to run unit tests\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "documentation/link_out/CMakeLists.txt" : {
      "ObjectId" : "916a04eca4ffcbf911c53619faf396ad08ba68a4",
      "LastModified" : "2016-03-30T10:05:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "documentation/link_out/Makefile" : {
      "ObjectId" : "dccc3cf2144b5ff25cba7c4c4c44327275a96207",
      "LastModified" : "2015-08-18T13:20:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "documentation/modflow/CMakeLists.txt" : {
      "ObjectId" : "8d68ea1a427fc760b81651878c5cff2cb693e50e",
      "LastModified" : "2018-03-06T07:54:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "documentation/pcraster_aguila/CMakeLists.txt" : {
      "ObjectId" : "f6128ba3f924cc82b99b21886bdae6a2d966015e",
      "LastModified" : "2019-03-01T07:13:50Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "documentation/pcraster_manual/CMakeLists.txt" : {
      "ObjectId" : "d558d12a2795e645ebddb71766956149f474250a",
      "LastModified" : "2018-03-06T07:54:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "documentation/pcraster_manual/examples/CMakeLists.txt" : {
      "ObjectId" : "d2b2e86e3d0e874843593f6348a43f433b7f1aba",
      "LastModified" : "2018-03-06T07:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# INPUTS:\n\n#  only the following are expected to be present (the rest is generated):\n\n#\n\n# .itxt   ascii formatted input map see AscHeader2map script for format\n\n#         all manual example input are created and kept as .itxt\n\n#         in the test commands they are input as .imap\n\n#         make will pick up all .itxt files in this directory (MAP_INPUTS)\n\n# .txt    a number of input tables, set here to TEXT_INPUTS,\n\n#         except for those generated in this Makefile as defined by TEXT_OUTPUTS\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# NEWLINE_STYLE UNIX\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# NEWLINE_STYLE UNIX\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# NEWLINE_STYLE UNIX\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# These files are required to create the maps used in the unit tests\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# CMAKE_CFG_INTDIR is set at build-time, not at configure-time. Search\n\n# and replace this string at build-time.\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_SOURCE_DIR}/*.itxt ${CMAKE_CURRENT_BINARY_DIR}\n\n# COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_SOURCE_DIR}/*.txt ${CMAKE_CURRENT_BINARY_DIR}\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_SOURCE_DIR}/../../../source/pcraster_model_engine/operation.xml ${CMAKE_CURRENT_BINARY_DIR}/man_page.xml\n\n# COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_SOURCE_DIR}/../../../source/pcraster_model_engine/operation.dtd ${CMAKE_CURRENT_BINARY_DIR}/\n\n# WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}\n\n# # pass directory path containing restructured text files\n\n# COMMAND ${PYTHON_EXECUTABLE} check_man_pages.py\n\n#   ${CMAKE_CURRENT_SOURCE_DIR}/../sphinx\n",
        "Line" : 100,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "documentation/pcraster_manual/examples/replace.cmake" : {
      "ObjectId" : "1ad795378a743c7a7c1a32c89f2881a9e19914e9",
      "LastModified" : "2019-03-01T07:13:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMAKE_CFG_INTDIR is set at build-time, not at configure-time. Search\n\n# and replace this string at build-time.\n\n# Required to pick up the correct binaries while generating the\n\n# unit test files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# AscHeader2map\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# PCRasterSample.py\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "documentation/pcraster_manual/figures/CMakeLists.txt" : {
      "ObjectId" : "e94a6dab0c11225779ce97a713be939defd60131",
      "LastModified" : "2018-03-06T07:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# files are just hardcoded here\n\n# actually they should be 'grepped' from the manual xml\n\n# FTTB we assume no changes in the set of files\n\n#\n\n# Manually update the PNGs in case you modify the EPS files!\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "documentation/pcraster_manual/sphinx/CMakeLists.txt" : {
      "ObjectId" : "4aac0a54430446645a9e8a68a793b5c6da0cf0ee",
      "LastModified" : "2018-03-06T07:54:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "documentation/pcraster_project/CMakeLists.txt" : {
      "ObjectId" : "0f44febffe4101b77de07cc1bf8037b03d9aeb5d",
      "LastModified" : "2019-03-01T07:13:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# build.rst\n",
        "Line" : 2,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# develop.rst\n\n# index.rst\n",
        "Line" : 4,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# create_sphinx_docs(\n\n#     TARGET pcraster_project_documentation\n\n#     SOURCES ${SPHINX_SOURCES}\n\n# )\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# install(\n\n#     DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/_build/html/\n\n#     DESTINATION doc/pcraster\n\n# )\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "documentation/python/CMakeLists.txt" : {
      "ObjectId" : "bec1a55854485a76194a3cd27e80e737314c735a",
      "LastModified" : "2019-03-01T07:13:50Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "documentation/python_arrayed_variables/CMakeLists.txt" : {
      "ObjectId" : "2f505b5bf045f7b8b3746ae52db2b49dc058dfa4",
      "LastModified" : "2018-03-06T07:54:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "documentation/python_modelling_framework/CMakeLists.txt" : {
      "ObjectId" : "e5a874023b3795e3e802325b9e3f1d2574c8bf21",
      "LastModified" : "2018-03-06T07:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TodoList.rst\n",
        "Line" : 7,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# some demo example scripts included in the documentation\n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "environment/cmake/FindPDCurses.cmake" : {
      "ObjectId" : "b5ad5967d8e0b445d84408220b0a7fc7a15fce58",
      "LastModified" : "2018-03-06T07:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The original version of this file can be found at\n\n# https://github.com/aevalo/aeirc/blob/master/cmake/Modules/FindPDCurses.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Locate PDCurses library\n\n# This module defines\n\n# PDCURSES_LIBRARIES, the name of the library to link against\n\n# PDCURSES_FOUND, if false, do not try to link to PDCurses\n\n# PDCURSES_INCLUDE_DIR, where to find curses.h\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the final string here so the GUI reflects the final state.\n\n# SET(PDCURSES_LIBRARIES PDCURSES_LIBRARY} CACHE STRING \"Where the PDCurses Library can be found\")\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "environment/cmake/PCRaster.cmake" : {
      "ObjectId" : "de9f462384bd81ec66f4e45b9b9988950903add4",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# include(DevBaseCompiler)\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Get rid of these after refactoring. ------------------------------------------\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# No need to see these, just do it.\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# /Get rid of these after refactoring. -----------------------------------------\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "environment/cmake/PCRasterCompilerConfiguration.cmake" : {
      "ObjectId" : "a0964899486c34b00d8a6eb209ab6fb3fcf4ae3c",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# In general, don't set compiler options in CMake files. Here we set the\n\n# most general options that everybody always wants. Anything else should\n\n# be handled from the outside.\n\n# Not yet (treat warnings as errors):\n\n#   MSVC: /WX\n\n#   GNU/Clang: -Werror\n\n# add_compile_options(\n\n#     \"$<$<CXX_COMPILER_ID:MSVC>:/W3 /WX>\"\n\n#     \"$<$<OR:$<CXX_COMPILER_ID:GNU>,$<CXX_COMPILER_ID:Clang>>:-W -Wall>\"\n\n# )\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# use toolchain files to select compiler flags...\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO Get rid of these...\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# https://svn.boost.org/trac/boost/ticket/6455\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "environment/cmake/PCRasterConfiguration.cmake" : {
      "ObjectId" : "14fabc04d7ae69cbc0ee9adad719e157a65fcf99",
      "LastModified" : "2019-03-01T07:13:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Options for selecting the modules to build.\n\n# PCRASTER_BUILD_<module>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Options for selecting features.\n\n# PCRASTER_WITH_<feature>\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# option(PCRASTER_BUILD_ALL\n\n#     \"Build everything, except for documentation and tests\" FALSE)\n\n# option(PCRASTER_WITH_ALL \"Support all features\" FALSE)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The ones below are required in case a developer needs to\n\n# regenerate one of the pcraster_model_engine's XML files\n\n# set(DEVBASE_LIB_XSLT_XSLTPROC_REQUIRED TRUE)\n\n# set(DEVBASE_LIB_XML2_REQUIRED TRUE)\n\n# set(DEVBASE_LIB_XSLT_REQUIRED TRUE)\n\n#\n\n# ... or XSD\n\n# set(DEVBASE_XSD_REQUIRED TRUE)\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Version >= 2.0.0.\n",
        "Line" : 81,
        "CharPositionInLine" : 33
      },
      "5" : {
        "Text" : "# sqlite executable is used by dal's testrun.prolog\n",
        "Line" : 106,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# HINTS ${SQLITE3_INCLUDE_DIRS}/../bin\n",
        "Line" : 111,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Python.h needs to be known to pass the test\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "environment/cmake/PCRasterMacro.cmake" : {
      "ObjectId" : "b7ab6f9dafd95eaa0116a95808d6e9f1512fe190",
      "LastModified" : "2019-03-01T07:13:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ADD_FILE_DEPENDENCY\n\n# does some additional stuff compared to CMake's SET_SOURCE_FILES_PROPERTIES:\n\n# *extends* an existing dependency list of a TARGET\n\n# while SET_SOURCE_FILES_PROPERTIES seems to *overwrite* that list\n\n# use ADD_FILE_DEPENDENCY only if SET_SOURCE_FILES_PROPERTIES does not\n\n# work for the case at hand\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# SET(${TARGET}_deps ${${TARGET}_deps} ${ARGN})\n\n# SET_SOURCE_FILES_PROPERTIES(${TARGET}\n\n#   PROPERTIES OBJECT_DEPENDS \"${${TARGET}_deps}\")\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Based on http://www.cmake.org/pipermail/cmake/2011-January/041666.html\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# A module's location is usually a directory, but for binary modules\n\n# it's a .so file.\n",
        "Line" : 31,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 4
    },
    "environment/cmake/PCRasterVersionInformation.cmake" : {
      "ObjectId" : "a7f950a73903f2ed37c81afa1e438745fbfc7e72",
      "LastModified" : "2018-03-06T07:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# utilities to obtain the version information of the current build\n\n# ${CMAKE_CURRENT_SOURCE_DIR} is not pointing to the correct directory...\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "environment/cmake/clang7.cmake" : {
      "ObjectId" : "4946aef7ae8b79a9400524dd4d6c809861b76a27",
      "LastModified" : "2019-03-22T09:31:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# if(CMAKE_CXX_COMPILER_ID STREQUAL \"Clang\")\n\n#\n\n#     set(CMAKE_C_FLAGS\n\n#         \"${CMAKE_C_FLAGS} -Wno-cpp -Wno-parentheses -Wno-cast-qual  -Wno-unused-parameter -Wno-empty-body -Wno-unused-function -Wno-format -Wno-switch -Wno-empty-body -Wno-sign-compare -Wno-float-equal   \"\n\n#     )\n\n#     set(CMAKE_CXX_FLAGS\n\n#         \"${CMAKE_CXX_FLAGS} -Wno-cpp -Wno-parentheses -Wno-cast-qual  -Wno-unused-parameter -Wno-empty-body  -Wno-ignored-qualifiers -Wno-switch -Wno-pedantic -Wno-write-strings -Wno-unused-variable -Wno-unused-local-typedefs -Wno-delete-non-virtual-dtor -Wno-unused-label -Wno-sign-compare -Wno-float-equal -Wno-overloaded-virtual -Wno-unused-result -Wno-sometimes-uninitialized -Wno-undefined-var-template  \"\n\n#     )\n\n#\n\n# endif()\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "environment/cmake/gcc.cmake" : {
      "ObjectId" : "98a87676dca21349b90786c2d95af523c6ae57cf",
      "LastModified" : "2019-03-28T15:36:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# WIP\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set(CMAKE_C_FLAGS_INIT \"\" CACHE STRING \"\")\n\n# set(CMAKE_CXX_FLAGS_INIT \"\" CACHE STRING \"\")\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# set(CMAKE_C_FLAGS_DEBUG   \"${CMAKE_C_FLAGS_DEBUG} -U_FORTIFY_SOURCE\")\n\n# set(CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG} -U_FORTIFY_SOURCE\")\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make linker report any unresolved symbols.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#  -Wno-catch-value\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# flto with -Wodr (no)\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# -Wcast-align -Woverloaded-virtual -Wsign-conversion missing-include-dirs\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "environment/cmake/gcc7.cmake" : {
      "ObjectId" : "2dcb01f77a7fb60d0c49f3e871ce994c75101311",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "environment/cmake/gcc8.cmake" : {
      "ObjectId" : "7d2d39b52e2e8abaaf0db87889cdf66f4d5e01c9",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "environment/cmake/msvs2017.cmake" : {
      "ObjectId" : "37de2e07c122c74fdf6d6f5a81ca7035f9e5d410",
      "LastModified" : "2019-03-28T15:36:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set(CMAKE_C_COMPILER )\n\n# set(CMAKE_CXX_COMPILER )\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -D_SCL_SECURE_NO_WARNINGS\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# -D_ALLOW_KEYWORD_MACROS\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# /wd4101\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# if(MSVC)\n\n#     # TODO add debug/release flags?\n\n#\n\n#     # Get rid of the min and max macros.\n\n#     # Refactor the define private/protected public stuff (allow keywords macro)\n\n#     add_compile_definitions(\n\n#         -D_SCL_SECURE_NO_WARNINGS\n\n#         -D_CRT_SECURE_NO_WARNINGS\n\n#         -D_USE_MATH_DEFINES\n\n#         -DNOMINMAX\n\n#         -D_ALLOW_KEYWORD_MACROS\n\n#     )\n\n#\n\n#     set(CMAKE_C_FLAGS\n\n#         \"${CMAKE_C_FLAGS} /wd4267\"\n\n#     )\n\n#\n\n#     # add /w3\n\n#     # disable these warnings?\n\n#     set(CMAKE_CXX_FLAGS\n\n#         \"${CMAKE_CXX_FLAGS} /std:c++14 /wd4267 /wd4251 /wd4244 /wd4396 /wd4305\"\n\n#     )\n\n#\n\n# endif()\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "source/CMakeLists.txt" : {
      "ObjectId" : "1bf333937b2302504fff580ac784cadce7f5b603",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/api/CMakeLists.txt" : {
      "ObjectId" : "37c8c3133bf3c127ec96e1769f1a3fb651152b77",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# NAMESPACE=fieldapi\n\n# now in CVS\n\n# clean::\n\n# \trm -f ranuint1.c ranint4.c ranreal8.c testapi.inc api.h\n\n#\n\n#\n\n# ranuint1.c: rancom.tem\n\n# \t@$(ECHO) \"/* DO NOT EDIT: CREATED FROM rancom.tem */\" > ranuint1.c\n\n# \t@$(ECHO) \"#line 1 \\\"rancom.tem\\\"\" >> ranuint1.c\n\n# \t@sed -e s/THIS_TYPE_T/UINT1_T/g  -e s/THIS_TYPE/UINT1/g rancom.tem >> ranuint1.c\n\n#\n\n# ranint4.c: rancom.tem\n\n# \t@$(ECHO) \"/* DO NOT EDIT: CREATED FROM rancom.tem */\" > ranint4.c\n\n# \t@$(ECHO) \"#line 1 \\\"rancom.tem\\\"\" >> ranint4.c\n\n# \t@sed -e s/THIS_TYPE_T/INT4/g  -e s/THIS_TYPE/INT4/g rancom.tem >> ranint4.c\n\n#\n\n# ranreal8.c: rancom.tem\n\n# \t@$(ECHO) \"/* DO NOT EDIT: CREATED FROM rancom.tem */\" > ranreal8.c\n\n# \t@$(ECHO) \"#line 1 \\\"rancom.tem\\\"\" >> ranreal8.c\n\n# \t@sed -e s/THIS_TYPE_T/REAL8/g  -e s/THIS_TYPE/REAL8/g rancom.tem >> ranreal8.c\n\n#\n\n# rancom.tem: api.h\n\n#\n\n# api.h: randef.tem randef.hh Makefile\n\n# \t@cat randef.hh > api.h\n\n# \t@$(ECHO) \"#line 1 \\\"randef.tem\\\"\" >> api.h\n\n# \t@sed -e s/THIS_TYPE_T/UINT1_T/g  -e s/THIS_TYPE/UINT1/g randef.tem >> api.h\n\n# \t@$(ECHO) \"#line 1 \\\"randef.tem\\\"\" >> api.h\n\n# \t@sed -e s/THIS_TYPE_T/INT4/g  -e s/THIS_TYPE/INT4/g randef.tem >> api.h\n\n# \t@$(ECHO) \"#line 1 \\\"randef.tem\\\"\" >> api.h\n\n# \t@sed -e s/THIS_TYPE_T/REAL8/g  -e s/THIS_TYPE/REAL8/g randef.tem >> api.h\n\n# \t@$(ECHO) \"#ifdef __cplusplus\" >> api.h\n\n# \t@$(ECHO) \"}\" >> api.h\n\n# \t@$(ECHO) \"#endif\" >> api.h\n\n# \t@$(ECHO) \"#endif /* API__H */\" >> api.h\n\n#\n\n# testapi.c: testapi.inc\n\n#\n\n# testapi.inc: testapi.tem\n\n# \t@$(ECHO) \"/* DO NOT EDIT: CREATED FROM testapi.tem */\" > testapi.inc\n\n# \t@$(ECHO) \"#line 1 \\\"testapi.tem\\\"\" >> testapi.inc\n\n# \t@sed 's/THIS_TYPE/UINT1/g' < testapi.tem >> testapi.inc\n\n# \t@$(ECHO) \"#line 1 \\\"testapi.tem\\\"\" >> testapi.inc\n\n# \t@sed 's/THIS_TYPE/INT4/g' < testapi.tem >> testapi.inc\n\n# \t@$(ECHO) \"#line 1 \\\"testapi.tem\\\"\" >> testapi.inc\n\n# \t@sed 's/THIS_TYPE/REAL8/g' < testapi.tem >> testapi.inc\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/app/CMakeLists.txt" : {
      "ObjectId" : "bb7943b545f2af740c52ddb86e77a2f5527c8213",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/asc2map/CMakeLists.txt" : {
      "ObjectId" : "9b4ee9aaed85715289d48146725a19b72cad31c8",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/calc/CMakeLists.txt" : {
      "ObjectId" : "83f1e32021f762f4ef8d9356fb7ae941dbefd5e0",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# /*!\n\n#    \\namespace calc\n\n#    \\brief global field functions of pcrcalc\n\n#\n\n#    Calc is a bad name for the namespace;\n\n#    In the long run, merge this lib and api, to be named globfieldfunc ??\n\n# */\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/col2map/CMakeLists.txt" : {
      "ObjectId" : "fbd774398a9708ac0bb95db0591125681365b544",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if [[ $OSTYPE != \"cygwin\" ]]\n\n# MSC does not read Nan\n\n# test not executed on windows\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/curr/CMakeLists.txt" : {
      "ObjectId" : "d875cb260685748a43f1c56b42633baaae6a33fe",
      "LastModified" : "2019-03-28T15:36:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Required when using pdcurses as dll,\n\n# otherwise showing up of menu will fail\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/geom/CMakeLists.txt" : {
      "ObjectId" : "890c0f828aee1e14ca078b491dac266bf34fedad",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/legend/CMakeLists.txt" : {
      "ObjectId" : "773f29afe244a1a95dce8b6a507a8aa1ecac4ae1",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### IF(WIN32)\n\n###     SET(CMAKE_EXE_LINKER_FLAGS /NODEFAULTLIB:LIBCMT)\n\n### ENDIF()\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/linkinexamples/CMakeLists.txt" : {
      "ObjectId" : "892640763b57688eef556352b0e8a42bae6451a7",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/linkinexamples/Makefile" : {
      "ObjectId" : "00c14c7e67cfa75a57607eb19ec7dec2fa43770f",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "source/linkinexamples/example1/CMakeLists.txt" : {
      "ObjectId" : "39a657469a22e58baf86773afb2c90a4cb0d6365",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/linkinexamples/example1/Makefile" : {
      "ObjectId" : "15599a92cde1d6fb38fc263f02deff0237a9b2ff",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "source/linkinexamples/example2/CMakeLists.txt" : {
      "ObjectId" : "81cd44f48ad3cc8f5e213e806aedf67c9a3a6446",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/linkinexamples/example2/Makefile" : {
      "ObjectId" : "15599a92cde1d6fb38fc263f02deff0237a9b2ff",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "source/linkinexamples/exampleCpp/CMakeLists.txt" : {
      "ObjectId" : "0bc684c340c9194c87d1e934d3a19a1502259a3d",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/linkinexamples/exampleCpp/Makefile" : {
      "ObjectId" : "15599a92cde1d6fb38fc263f02deff0237a9b2ff",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "source/map2asc/CMakeLists.txt" : {
      "ObjectId" : "829eeb2ba76f2ef5bc796d9f464b7367b29f1d23",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/map2col/CMakeLists.txt" : {
      "ObjectId" : "9ae2feec958c8ccd83c19c0cda958fb46a90a7f7",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/mapattr/CMakeLists.txt" : {
      "ObjectId" : "fc39941dd61a5ec609ae7902e11473a2168177a1",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### IF(WIN32)\n\n###     SET(CMAKE_EXE_LINKER_FLAGS /NODEFAULTLIB:LIBCMT)\n\n### ENDIF()\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/mapdiff/CMakeLists.txt" : {
      "ObjectId" : "fe2b48acabcde4960e5b4ddd4916bd7aae84079c",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/math_utils/CMakeLists.txt" : {
      "ObjectId" : "b0412d50e2f536ec6c2da28c66cea733950c05a6",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/mathx/CMakeLists.txt" : {
      "ObjectId" : "f9f48e467253de4afc37601a25385bcb64473280",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/misc/CMakeLists.txt" : {
      "ObjectId" : "4aed1f44266481c95a96f540240f827078695cf8",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/mldd/CMakeLists.txt" : {
      "ObjectId" : "10b9ffbfb92faad3d16e536ee5370df12cd2bcbd",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ADD_CUSTOM_COMMAND(\n\n#   OUTPUT  ${CMAKE_CURRENT_BINARY_DIR}/operationExpanded.xml\n\n#   DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/operation.xml ${CMAKE_CURRENT_SOURCE_DIR}/operation.dtd\n\n#   COMMENT \"Expanding XML to OBJECT directory\"\n\n#   COMMAND ${LIBXML2_XMLLINT_EXECUTABLE} --noout --nonet --nocatalogs --dtdvalid ${CMAKE_CURRENT_SOURCE_DIR}/operation.dtd ${CMAKE_CURRENT_SOURCE_DIR}/operation.xml\n\n#   COMMAND ${LIBXSLT_XSLTPROC_EXECUTABLE} --nonet --output ${CMAKE_CURRENT_BINARY_DIR}/operationExpanded.xml ${DEVENV}/sources/xslt/expand.xsl ${CMAKE_CURRENT_SOURCE_DIR}/operation.xml\n\n# )\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# SHARED\n",
        "Line" : 15,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# FILES for the oldcalc style ModelLink\n\n# calcLibWrapper\n\n# mldd_mlddlink\n\n# modellinks\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# sourcesLibDummy\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# install(\n\n#     TARGETS\n\n#         mldd\n\n#     RUNTIME\n\n#         DESTINATION lib COMPONENT Runtime\n\n#     LIBRARY\n\n#         DESTINATION lib COMPONENT Runtime\n\n#     ARCHIVE\n\n#         DESTINATION lib COMPONENT Runtime\n\n# )\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "source/mldd/Tests/CMakeLists.txt" : {
      "ObjectId" : "aafef437af7f2af406e0ef317b7bd922cb1b313f",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/mldd/demo/Makefile" : {
      "ObjectId" : "8d9767efb824f843e7165e7e8c4e781d2a2176f4",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "source/mldd/python/CMakeLists.txt" : {
      "ObjectId" : "33f3a6745ce3ab2c13a70428f59d8cc30d367373",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#        COMMAND ${CMAKE_COMMAND} -E copy\n\n#            $<TARGET_FILE:_pcraster_mldd_python>\n\n#            ${PROJECT_BINARY_DIR}/bin/${CMAKE_CFG_INTDIR}/pcraster/mldd\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### SET_TARGET_PROPERTIES(_pcraster_mldd_python\n\n###     PROPERTIES\n\n###         ### SKIP_BUILD_RPATH FALSE\n\n###         ### BUILD_WITH_INSTALL_RPATH TRUE\n\n###         ### INSTALL_RPATH \"$ORIGIN/../../../lib\"\n\n###         ### INSTALL_RPATH_USE_LINK_PATH FALSE\n\n###\n\n###         # Write the extension to the pcraster sub directory.\n\n###         LIBRARY_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/bin/${CMAKE_CFG_INTDIR}/pcraster/mldd\n\n###         # Might be needed on Windows:\n\n###         # RUNTIME_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/bin/pcraster\n\n### )\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "source/mldd/python/Makefile" : {
      "ObjectId" : "b5d5daa179c74e40bd4062d160dc411310ebeccc",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "source/modflow/CMakeLists.txt" : {
      "ObjectId" : "d9557bba80eccdf5dfe95bf35c8af1abe4e7f397",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/modflow/calc/CMakeLists.txt" : {
      "ObjectId" : "b0dc88dcf9a56b9f42c3f48783516d0f1f38f6e1",
      "LastModified" : "2019-03-26T07:56:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# the pcraster_modflow dll must be build first\n",
        "Line" : 96,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# modflow binary must be copied to execute unit tests\n",
        "Line" : 102,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# calc demo test builds some required inputs\n",
        "Line" : 128,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# add path of project's unit test related files to PYTHONPATH\n\n# required to execute this unit test via ctest properly\n",
        "Line" : 138,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# argument is a 'cmake' ; separated list of values, therefore escape the environment path separator\n",
        "Line" : 143,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "source/modflow/mf2005/CMakeLists.txt" : {
      "ObjectId" : "b4306c7ddaffdff2050e325d5c0367884810d6cb",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# On Unices we build Modflow, on Windows use the USGS version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copy binary\n",
        "Line" : 82,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "source/modflow/python/CMakeLists.txt" : {
      "ObjectId" : "1cb5c4934b9af833715520d724b7baf63a8e0cbd",
      "LastModified" : "2019-03-28T15:36:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/modflow/src/CMakeLists.txt" : {
      "ObjectId" : "7d353cdbf7b9ed7969c1c4a12aa39a5a6d8dc519",
      "LastModified" : "2019-03-28T15:36:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  hfb\n",
        "Line" : 11,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 1
    },
    "source/oldcalc/CMakeLists.txt" : {
      "ObjectId" : "1275c40392c2e17c31aed2d885ecc7b2821e53d1",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/pccts/CMakeLists.txt" : {
      "ObjectId" : "ba071b38fedda44278936481ae003c76555f453d",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# DLexerBase.o ???\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/pcraster_aguila/CMakeLists.txt" : {
      "ObjectId" : "f6a2b7d08989a662a3ee2b1c2e40944f2d899c33",
      "LastModified" : "2019-03-26T07:56:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CursorValueDialog.ui\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# qt_SelectableWidget\n",
        "Line" : 169,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Plots/ag_ProbabilityPlot\n\n# Plots/ag_ProbabilityTimeSeriesPlot\n\n# Plots/ag_ProbabilityValuePlot\n\n# Plots/ag_TimeSeriesPlot\n\n# Plots/ag_ValueTimeSeriesPlot\n",
        "Line" : 176,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Some of the sources include PCRasterXSD.h, which is generated by\n\n# pcraster::xsd. Since we don't link the objects library against\n\n# pcraster::xsd, but only use the include directories, CMake doesn't\n\n# make pcraster_aguila_objects depend on pcraster::xsd. We need\n\n# to do that ourselves. If not, PCRasterXSD.h may not be there during\n\n# the build of the objects in the objects library.\n",
        "Line" : 205,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Use WinMain instead of main. Gets rid of Dos box.\n",
        "Line" : 250,
        "CharPositionInLine" : 10
      },
      "5" : {
        "Text" : "# ${QT_QTMAIN_LIBRARY}  # Contains WinMain.\n",
        "Line" : 261,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# ------------------------------------------------------------------------------\n",
        "Line" : 269,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# ag_AguilaTest  # Requires an X-server.\n",
        "Line" : 280,
        "CharPositionInLine" : 12
      },
      "8" : {
        "Text" : "# SUPPORT_NAMES ag_AguilaGuiTest  # Only needed for AguilaTest.\n",
        "Line" : 293,
        "CharPositionInLine" : 12
      },
      "9" : {
        "Text" : "# LINK_LIBRARIES\n",
        "Line" : 294,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# pcraster_aguila_static\n\n# ${_target_libraries}\n\n# #${QT_QTTEST_LIBRARY}\n",
        "Line" : 295,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 11
    },
    "source/pcraster_aguila/Classifications/CMakeLists.txt" : {
      "ObjectId" : "cf6180025b46acbfa49d2cd00ced8e94ae2bc288",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/pcraster_aguila/DrawProperties/CMakeLists.txt" : {
      "ObjectId" : "63e6100c65a02f363d9ecf4a62ca05941f2a3834",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/pcraster_aguila/Makefile" : {
      "ObjectId" : "f55b2b857c578e33700714a85eefaa51dec1475e",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "source/pcraster_block_python/CMakeLists.txt" : {
      "ObjectId" : "627906e9d113eac2a1dfd45d4b1f6c1dc84829d8",
      "LastModified" : "2019-03-28T15:36:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# target_include_directories(_pcraster_block_python\n\n#     PRIVATE\n\n#         ${PYTHON_INCLUDE_DIR}\n\n# )\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#   set_tests_properties(blockpy_blockpy_pythonunittest PROPERTIES\n\n#     DEPENDS\n\n#       _pcraster_block_python\n\n#       python_modelling_framework_dummy\n\n#   )\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#   set(TEST_NAMES\n\n#     blockpy_pythonunittest\n\n#   )\n\n#\n\n#   add_unit_tests(\n\n#     SCOPE blockpy\n\n#     NAMES ${TEST_NAMES}\n\n#     LINK_LIBRARIES\n\n#       ${Boost_PYTHON_LIBRARY}\n\n#       ${PYTHON_LIBRARIES}\n\n#   )\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add path of project's unit test related files to PYTHONPATH\n\n# required to execute this unit test via ctest properly\n",
        "Line" : 97,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# argument is a 'cmake' ; separated list of values, therefore escape the environment path separator\n",
        "Line" : 102,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# OLS: clean up the comments when refacoring for the new windows build\n\n# I leave them here just as info in case of troubles...\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n#     ADD_LIBRARY(pcraster_block_python_static\n\n#         STATIC\n\n#         ${SOURCES}\n\n#     )\n\n#     SET(TEST_SOURCES\n\n#         blockpy_pythonunittest.cc\n\n#         blockpy_test.cc\n\n#     )\n\n#     ADD_EXECUTABLE(test_pcraster_block_python\n\n#         ${TEST_SOURCES}\n\n#     )\n\n#\n\n#     TARGET_LINK_LIBRARIES(test_pcraster_block_python\n\n#         pcraster_block_python_static\n\n#         # ${_LIBRARIES_TO_LINK}\n\n#     )\n\n#\n\n#     ADD_CUSTOM_TARGET(run_test_pcraster_block_python\n\n#         COMMAND bash ./testrun.prolog\n\n#         COMMAND test_pcraster_block_python --detect_memory_leaks=0\n\n#         DEPENDS test_pcraster_block_python\n\n#         WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}\n\n#     )\n\n#     ADD_DEPENDENCIES(tests run_test_pcraster_block_python)\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#----------------------------------------------------------\n\n#INSTALL(\n\n#  TARGETS pcraster_block_python\n\n#  LIBRARY DESTINATION PCRasterPython\n\n#  RUNTIME DESTINATION PCRasterPython\n\n#)\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "source/pcraster_dal/CMakeLists.txt" : {
      "ObjectId" : "36e27cb4e913e82d9b237352935e5b467ac1fc72",
      "LastModified" : "2019-03-26T07:56:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# dal_HDF5RasterDriver\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# dal_NetCDFRasterDriver\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# ------------------------------------------------------------------------------\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# dal_DataSpaceAddressMapperTest  # TODO\n",
        "Line" : 181,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "# dal_HDF5RasterDriverTest\n\n# dal_MapperUtilsTest  # TODO\n",
        "Line" : 193,
        "CharPositionInLine" : 12
      },
      "5" : {
        "Text" : "# dal_NetCDFRasterDriverTest\n",
        "Line" : 204,
        "CharPositionInLine" : 12
      },
      "6" : {
        "Text" : "# dal_SpaceStepCoordinateMapperTest  # TODO\n",
        "Line" : 213,
        "CharPositionInLine" : 12
      },
      "7" : {
        "Text" : "# dal_SQLTableDriverTest  # TODO\n",
        "Line" : 215,
        "CharPositionInLine" : 12
      },
      "8" : {
        "Text" : "# dal_StepCoordinateMapperTest  # TODO\n",
        "Line" : 217,
        "CharPositionInLine" : 12
      },
      "9" : {
        "Text" : "# ------------------------------------------------------------------------------\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ------------------------------------------------------------------------------\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "source/pcraster_moc/CMakeLists.txt" : {
      "ObjectId" : "deaff6f05de4532b902374c19e8f0d7f5e1b4c21",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO Create Documentation, PCRCalc, Python, ... subdirectories.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# run:\n\n# \trunapp pcrcalc -f track.pcr\n\n#\n\n# debug.map: out dem.map\n\n# \trunapp col2map --unitcell --clone dem.map -B out debug.map\n\n#\n\n# flux.map: flux.tbl dem.map\n\n# \trunapp pcrcalc \"flux.map=lookupscalar(flux.tbl, dem.map)\"\n\n# \trunapp pcrcalc \"flux.map=if(defined(dem.map) and not(defined(flux.map)), 0.0, flux.map)\"\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "source/pcraster_moc/python/CMakeLists.txt" : {
      "ObjectId" : "31db6729d80e02c0630d91fdb6bffd9609a02ec1",
      "LastModified" : "2019-03-28T15:36:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#        COMMAND ${CMAKE_COMMAND} -E copy\n\n#            $<TARGET_FILE:_pcraster_moc_python>\n\n#            ${PROJECT_BINARY_DIR}/bin/${CMAKE_CFG_INTDIR}/pcraster/moc\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO\n\n# SET_TARGET_PROPERTIES(_pcraster_moc_python\n\n#     PROPERTIES\n\n#         ### SKIP_BUILD_RPATH FALSE\n\n#         ### BUILD_WITH_INSTALL_RPATH TRUE\n\n#         ### INSTALL_RPATH \"$ORIGIN/../../../lib\"\n\n#         ### INSTALL_RPATH_USE_LINK_PATH FALSE\n\n#\n\n#         # Write the extension to the pcraster sub directory.\n\n#         LIBRARY_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/bin/${CMAKE_CFG_INTDIR}/pcraster/moc\n\n#         # Might be needed on Windows:\n\n#         RUNTIME_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/bin/${CMAKE_CFG_INTDIR}/pcraster/moc\n\n# )\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "source/pcraster_model_engine/CMakeLists.txt" : {
      "ObjectId" : "1d32f6f1244e1c9caa48eef333bfba524fbd35f3",
      "LastModified" : "2019-03-26T07:56:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# actually newcalc.l\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# operationExpanded.xml was previously generated each time at a build.\n\n# Due to removal of xsltproc dependency this file needs to be\n\n# regenerated when the source files change\n\n# Hash the copied file in build directory rather than the source due to different UNIX/WIN line endings\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The previous command was part of the custom command below\n\n# COMMAND ${LIBXSLT_XSLTPROC_EXECUTABLE} --nonet --output ${CMAKE_CURRENT_BINARY_DIR}/operationExpanded.xml ${CMAKE_CURRENT_SOURCE_DIR}/../xslt/expand.xsl ${CMAKE_CURRENT_SOURCE_DIR}/operation.xml\n\n# in addition, also do the xmllint check on operation.xml\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# OLS: keep this command fttb; it's a dependency for the command below;\n\n#      also for documentation purposes in case we need to regenerate operationExpanded.xml.in\n\n# workaround: operationExpanded.xml in the build directory somehow gets removed, copy it again...\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# COMMAND ${LIBXML2_XMLLINT_EXECUTABLE} --noout --nonet --nocatalogs --dtdvalid ${CMAKE_CURRENT_SOURCE_DIR}/operation.dtd ${CMAKE_CURRENT_SOURCE_DIR}/operation.xml\n\n# Commented due to removal of xsltproc dependency\n\n# COMMAND ${LIBXSLT_XSLTPROC_EXECUTABLE} --nonet --output ${CMAKE_CURRENT_BINARY_DIR}/operationExpanded.xml ${CMAKE_CURRENT_SOURCE_DIR}/../xslt/expand.xsl ${CMAKE_CURRENT_SOURCE_DIR}/operation.xml\n",
        "Line" : 69,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# OLS: this one was not included and is not used anywhere?\n\n# calc_ldddownstream\n",
        "Line" : 271,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Some of the sources include PCRasterXSD.h, which is generated by\n\n# pcraster::xsd. Since we don't link the objects library against\n\n# pcraster::xsd, but only use the include directories, CMake doesn't\n\n# make pcraster_model_engine_objects depend on pcraster::xsd. We need\n\n# to do that ourselves. If not, PCRasterXSD.h may not be there during\n\n# the build of the objects in the objects library.\n",
        "Line" : 285,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# DO NOT DO _HAS_ITERATOR_DEBUGGING=0\n\n# see bugzilla 178\n",
        "Line" : 305,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# utils of unittests\n",
        "Line" : 342,
        "CharPositionInLine" : 10
      },
      "9" : {
        "Text" : "#calc_test\n\n# unit tests\n",
        "Line" : 368,
        "CharPositionInLine" : 12
      },
      "10" : {
        "Text" : "# calc_ldddownstreamtest         # OLS 05/2016 this one was not in this list before\n",
        "Line" : 390,
        "CharPositionInLine" : 12
      },
      "11" : {
        "Text" : "# calc_modelbuildertest          # OLS 05/2016 this one is empty\n",
        "Line" : 397,
        "CharPositionInLine" : 12
      },
      "12" : {
        "Text" : "# cpptest.cc\n",
        "Line" : 418,
        "CharPositionInLine" : 12
      },
      "13" : {
        "Text" : "# OLS start: I think the following 5 items are not necessary,\n\n#     cpptest.cc seems to be built by examples.sentinel already\n",
        "Line" : 428,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# add_file_dependency(calc_manualexamplestest.cc\n\n#     ${CMAKE_CURRENT_BINARY_DIR}/cpptest.cc)\n",
        "Line" : 431,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "### SET(_MANUAL_DIR ${PROJECT_SOURCE_DIR}/Documentation/PCRasterManual)\n\n### SET(_EXAMPLES_DIR ${_MANUAL_DIR}/examples)\n\n### SET(_MANUAL_BUILD_DIR ${_MANUAL_DIR}/sphinx/_build)\n",
        "Line" : 434,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "### ADD_CUSTOM_COMMAND(\n\n###   OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/cpptest.cc\n\n###   DEPENDS examplesCppTests\n\n###   ${PROJECT_BINARY_DIR}/Documentation/PCRasterManual/examples/cpptest.cc\n\n###   # DEPENDS\n\n###   #   ${_EXAMPLES_DIR}/ScriptSamples.py\n\n###   #   ${_EXAMPLES_DIR}/PCRasterSample.py\n\n###   #   ${_EXAMPLES_DIR}/Makefile\n\n###   # COMMAND make -C ${_EXAMPLES_DIR} CPlusPlusTests OUTPUT=${CMAKE_CURRENT_BINARY_DIR}/cpptest.cc\n\n### )\n",
        "Line" : 438,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# OLS end\n",
        "Line" : 449,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# OLS: below ones from the old setup; here just added\n\n# mapattr asc2map\n\n# example1 example2 exampleCpp\n",
        "Line" : 454,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "#     TARGET_LINK_LIBRARIES(test_pcraster_model_engine\n\n#         pcraster_model_engine  # _static\n\n#         # ${TARGET_LINK_LIBS}\n\n#     )\n\n#\n\n#     ADD_CUSTOM_TARGET(run_test_pcraster_model_engine\n\n#         COMMAND sed -i.tmp \"s/CMAKE_CFG_INTDIR/${CMAKE_CFG_INTDIR}/g\"\n\n#             ./testrun.prolog\n\n#         COMMAND bash ./testrun.prolog\n\n#         COMMAND test_pcraster_model_engine --detect_memory_leaks=0\n\n#         COMMAND bash ./testrun.epilog\n\n#         DEPENDS test_pcraster_model_engine\n\n#         WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}\n\n#     )\n\n#     ADD_DEPENDENCIES(tests run_test_pcraster_model_engine)\n",
        "Line" : 478,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "### ADD_CUSTOM_TARGET(\n\n###   isLinkOutAPIUserManualPdfValid ALL\n\n###   COMMAND make -C ${PROJECT_SOURCE_DIR}/documentation/user/Developer/LinkOut LinkOutAPIUserManual.pdf\n\n###   DEPENDS ${PROJECT_SOURCE_DIR}/documentation/user/Developer/LinkOut/LinkOutAPIUserManual.odt\n\n### )\n\n###\n\n### INSTALL(FILES\n\n###     ../../../../documentation/user/Developer/LinkOut/LinkOutAPIUserManual.pdf\n\n###   DESTINATION\n\n###     doc/developer/linkout\n\n### )\n",
        "Line" : 520,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# temporary switch comments to generate LinkIn\n\n# LinkIn is NOT YET part of the distro!            OLS: 03/2016 I think it is distributed?!\n",
        "Line" : 534,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# TODO make this completely working\n\n# SET(_DOX_LINKIN_SOURCES\n\n#   ${CMAKE_CURRENT_SOURCE_DIR}/pcrcalc.h\n\n#   ${PROJECT_SOURCE_DIR}/sources/include/pcrlinkin.h\n\n#   ${CMAKE_CURRENT_SOURCE_DIR}/linkInDocsMain\n\n# )\n",
        "Line" : 543,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "### SET(_DEPLOYMENT_OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/deployment.txt)\n\n### GET_TARGET_PROPERTY(_PCRASTER_MODELENGINE_PATH pcraster_model_engine LOCATION)\n\n###\n\n### ADD_CUSTOM_COMMAND(\n\n###   OUTPUT ${_DEPLOYMENT_OUTPUT}\n\n###   COMMAND ${PYTHON_EXECUTABLE} ${DEVENV}/Scripts/checkSharedLibraryDependencies.py -d ${_DEPLOYMENT_OUTPUT} ${_PCRASTER_MODELENGINE_PATH}\n\n###   COMMENT \"Creating deployment.txt\"\n\n###   DEPENDS pcraster_model_engine\n\n### )\n",
        "Line" : 560,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# ${_DEPLOYMENT_OUTPUT}\n",
        "Line" : 573,
        "CharPositionInLine" : 12
      },
      "25" : {
        "Text" : "### INSTALL(FILES\n\n###     ${_DEPLOYMENT_OUTPUT}\n\n###   DESTINATION\n\n###     doc/developer/linkout\n\n### )\n",
        "Line" : 576,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "### # manual\n\n### IF(NOT WIN32 AND NOT APPLE)\n\n###   ADD_CUSTOM_COMMAND(\n\n###     OUTPUT ${_MANUAL_BUILD_DIR}/latex/PCRaster.pdf\n\n###     OUTPUT ${_MANUAL_BUILD_DIR}/html/index.html\n\n###     COMMAND make -j1 -C ${_MANUAL_DIR}/\n\n###     DEPENDS ${_MANUAL_DIR}/manual.xml\n\n###   )\n\n###   ADD_CUSTOM_TARGET(PCRasterManual ALL\n\n###     DEPENDS\n\n###       mapattr\n\n###       asc2map\n\n###       pcrcalc\n\n###       col2map\n\n###       map2asc\n\n###       map2col\n\n###       table\n\n###       # manpng\n\n###       ${_MANUAL_BUILD_DIR}/latex/PCRaster.pdf\n\n###       ${_MANUAL_BUILD_DIR}/html/index.html\n\n###   )\n\n###   INSTALL(FILES\n\n###     ${_MANUAL_BUILD_DIR}/latex/PCRaster.pdf\n\n###     DESTINATION\n\n###     doc/PCRaster\n\n###   )\n\n###   INSTALL(DIRECTORY\n\n###     ${_MANUAL_BUILD_DIR}/html\n\n###     DESTINATION\n\n###     doc/PCRaster\n\n###   )\n\n### ENDIF()\n",
        "Line" : 591,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# # apiDocs:\n\n# \t@doxy pcrcalc.h apiDocsMain\n\n#\n\n# # to make pcrcalcd.h working if living in $(OLDPCRTREE)/include\n\n# # USE_IN_PCRCALC use internal types in pcrcalcd.h\n\n# # PROFILE= -pg\n\n#\n\n# TESTPREQ=messagestest.chk\n\n# GENSRCS=messagestest.chk\n\n# messagestest.chk: messagestest.xml\n\n# \t@xmlvalid messagestest.xml\n\n# \t@touch messagestest.chk\n\n#\n\n# GENSRCS+=calcLibWrapper.cc\n\n# calcLibWrapper.cc: operation.dtd CalcLibDemo.xml $(OLDPCRTREE)/devbin/calcLibWrap\n\n# \txmlvalid CalcLibDemo.xml\n\n# \txmlpretty CalcLibDemo.xml objectlinkExpanded.xml\n\n# \tcalcLibWrap objectlinkExpanded.xml\n\n#\n\n# clean::\n\n# \trm -f messagestest.chk rm calcLibWrapper.cc objectlinkExpanded.xml operationExpanded.xml\n\n#\n\n# # xmlpretty needs local ln\n\n# #  if no ln (win32) -> cp , chmod read-only\n\n# GENSRCS+=calcLibWrapper.cc\n\n# operation.dtd: $(OLDPCRTREE)/template/xml/operation.dtd\n\n# \tln -f $(OLDPCRTREE)/template/xml/operation.dtd operation.dtd\n\n# clean::\n\n# \trm -f operation.dtd\n\n# ifeq ($(HOST_PLATFORM),linux)\n\n# HAS_LEX=yes\n\n# endif\n\n# ifeq ($(HOST_PLATFORM),cygwin)\n\n# HAS_LEX=yes\n\n# endif\n\n#\n\n# ifdef HAS_LEX\n\n#\n\n# objsize.txt: $(OBJS)\n\n# \tnm -oC --size-sort -td --radix=d $(OBJS) > objsize.txt\n\n#\n\n# LEX_SPAWN= lexvaluefile.cc lexnewcalc.cc\n\n# GENSRCS+= $(LEX_SPAWN)\n\n# # need flex >= 2.5.26 avail in debian 3.X\n\n# # -L do NOT include #line directives\n\n# FLEXER=flex -+\n\n#\n\n# lexvaluefile.cc: valuefile.l\n\n# \t$(FLEXER) -t valuefile.l > lexvaluefile.cc\n\n# lexnewcalc.cc: newcalc.l\n\n# \t$(FLEXER) -t newcalc.l > lexnewcalc.cc\n\n# endif\n\n#\n\n# clean::\n\n# \trm -f *.inc major_op.h\n\n#\n\n# ##############################################################\n\n#\n\n# # set ADEB to -gd for debugging grammar trace code\n\n# # ADEB=-gd\n\n# # set ALINE to -gl for #line in created files\n\n# ALINE=-gl\n\n# # -gx do not create lexer parth\n\n# AFLAGS = -CC -w2 $(ALINE)  $(ADEB) -ck 2 -gx\n\n# # -prc on -mrhoist on\n\n# # DFLAGS = -C2 -CC -Wambiguity\n\n# DFLAGS = -C2 -CC\n\n#\n\n# # create parser\n\n# ANTLR_SPAWN = calcparser.cpp Parser.cpp \\\n\n#               Parser.h tokens.h\n\n# GENSRCS+=$(ANTLR_SPAWN)\n\n# $(ANTLR_SPAWN) : calcparser.g\n\n# \t@antlr_1x $(AFLAGS) calcparser.g\n\n#\n\n# # sed action was to hard cast something gcc complains\n\n# # \t@sed 's/\ttoken_tbl =/&(ANTLRChar **)/' < Parser.cpp > Parser.cc\n\n# # \t@rm -f Parser.cpp\n\n#\n\n# grammar.txt:\n\n# \t@antlr_1x -p -CC calcparser.g > grammar.txt\n\n#\n\n# calcparser.o:\n\n# \t@$(CC) $(subst -Wall,,$(CFLAGS)) -c calcparser.cpp\n\n# Parser.o:\n\n# \t@$(CC) $(CFLAGS) -c Parser.cpp\n\n#\n\n# clean::\n\n# \trm -f $(ANTLR_SPAWN) $(LEX_SPAWN)\n\n#\n\n# genForScons: $(GENSRCS)\n\n# \t@echo '\"$(GENSRCS)\"';\n",
        "Line" : 624,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 28
    },
    "source/pcraster_model_engine/csharp/CMakeLists.txt" : {
      "ObjectId" : "f6f936cad75db4fca67b260410876fda444748fe",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/pcraster_model_engine/csharp/Makefile" : {
      "ObjectId" : "b4d11706853ad1642d392d058d9479d7111a3e5c",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# TODO in bugzilla csharp topic #111\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# just in case\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# from devbin!\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# WILL break OpenMI test suite!\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "source/pcraster_model_engine/testdata/apiExamples/CMakeLists.txt" : {
      "ObjectId" : "340db0f72d3848bd168adb7792a8facf90c00f36",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# everything except CMakeLists.txt\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/pcraster_model_engine/testdata/apiExamplesData/CMakeLists.txt" : {
      "ObjectId" : "21a395326123e3b15053facbcc4db62b448c6215",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# everything except CMakeLists.txt\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/pcraster_multicore/CMakeLists.txt" : {
      "ObjectId" : "f71488721c908ee35a19bec57349431798fd2235",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### # OLS: check if this is safe to apply to the source directory instead\n\n### include_directories(\n\n###   ${CMAKE_CURRENT_SOURCE_DIR}/../\n\n###   ${CMAKE_CURRENT_BINARY_DIR}/../pcraster_python # only required to pick up export header\n\n### )\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/pcraster_multicore/python/CMakeLists.txt" : {
      "ObjectId" : "1b42296f9f845e1e7d0005aea5f8a137a5c1afc1",
      "LastModified" : "2019-03-28T15:36:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Refactor\n",
        "Line" : 84,
        "CharPositionInLine" : 36
      },
      "1" : {
        "Text" : "#_pcraster_modflow_python        # Refactor\n",
        "Line" : 85,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "source/pcraster_multicore/python/scripts/CMakeLists.txt" : {
      "ObjectId" : "d5cf3e7c0cefa80fa5e212a4ec7900d85a39efc3",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/pcraster_multicore/tests/CMakeLists.txt" : {
      "ObjectId" : "b86e021b909ae6167b3704d2000c6e99d1130444",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add path of project's unit test related files to PYTHONPATH\n\n# required to execute this unit test via ctest properly\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# argument is a 'cmake' ; separated list of values, therefore escape the environment path separator\n",
        "Line" : 38,
        "CharPositionInLine" : 5
      },
      "CommentCount" : 2
    },
    "source/pcraster_old_calc/CMakeLists.txt" : {
      "ObjectId" : "0138ddc86e6cd6b0b730dd8fb394d2ba63c8d508",
      "LastModified" : "2019-03-26T07:56:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# calc_clientinterfacetest.cc  No longer supported.\n",
        "Line" : 230,
        "CharPositionInLine" : 12
      },
      "1" : {
        "Text" : "# calc_iobandfieldstrategytest.cc  No longer supported.\n\n# calc_iobandtest.cc  No longer supported.\n",
        "Line" : 233,
        "CharPositionInLine" : 12
      },
      "2" : {
        "Text" : "# calc_wldelfthabitattest.cc  No longer supported.\n",
        "Line" : 238,
        "CharPositionInLine" : 12
      },
      "3" : {
        "Text" : "# /*! \\page design Design\n\n#  *\n\n#  * <H1>Operation classification</H1>\n\n#  * <p>\n\n#  * Classification of operation is needed to implement transformations of the code to execute,\n\n#  * such as MV compression. compiled point-sub models and ldd transformations and code executing\n\n#  * on formats such as vectors or tables. Also if a (series of) statements has a particular classification.\n\n#  * These statements may be used yes or no in other situations such as <i>cellfocus</i>.\n\n#  * The latter leads to the definition of the term <B>computing unit</B>: a point where the result\n\n#  * of computation must be stored: a raster cell, a polygon (vector) a record (table).\n\n#  * <B>(data) container</B>: a collection,  a set of computing units. <b>Check OMI definitions</b>\n\n#  * <table cols=\"2\">\n\n#  *  <tr>\n\n#  *   <td>collection</td><td>computing unit</td><td>length/area</td>\n\n#  *  </tr>\n\n#  *  <tr>\n\n#  *   <td>raster</td><td>cell</td><td>cellsize</td>\n\n#  *  </tr>\n\n#  *  <tr>\n\n#  *   <td>vector</td><td>polygon (single polygon)</td><td>polygon area</td>\n\n#  *  </tr>\n\n#  *  <tr>\n\n#  *   <td>table</td><td>record (no geo referencing)</td><td>1</td>\n\n#  *  </tr>\n\n#  *  <tr>\n\n#  *   <td>points</td><td>point (data with geo referencing)</td><td>area=0, 1 for counting</td>\n\n#  *  </tr>\n\n#  * </table>\n\n#  * </p>\n\n#  *\n\n#  * <p>\n\n#  * classification 1: operation decomposition, is it decomposable and how?\n\n#  * <dl>\n\n#  *  <dt>point</dt>\n\n#  *  <dd>(a*b)+2 is computable in many ways, per computing unit or a*b for whole collection and then\n\n#  *  add 2 for whole collection. Only the inputs of the same computing unit are needed.</dd>\n\n#  *  <dt>global</dt>\n\n#  *    <dd>the operation needs the whole collection.</dd>\n\n#  *       <dl>\n\n#  *        <dt>unordered</dt>\n\n#  *         <dd>the operation can access the collection in any order, (.e.g areaaverage, maptotal).</dd>\n\n#  *        <dt>ordered</dt>\n\n#  *         <dd>the operation must access the collection in a particular order. Order are defined a priori to\n\n#  *         the operation (ldd order in accuflux) or set by the input data collections (spread).\n\n#  *         Further sub classification possible here are the type of iterators: accuflux, forward iterator\n\n#  *         start at the end nodes, spread/clump random iterator.\n\n#  *         <ol>\n\n#  *          <li>neighbour topology (clump, spread)</li>\n\n#  *          <li>ldd topology  (accuflux, dynamicwave), kan op 2 manieren, beginnen bij pit of bij punten zonder instroom</li>\n\n#  *        </ol>\n\n#  *         </dd>\n\n#  * </dl>\n\n#  * </p>\n\n#  *\n\n#  * <p>\n\n#  * classification 2: context information needed. A collection is internally just some data structure (array,\n\n#  * list) storing the computing unit. Some operation however need context, such as location, area (support) of\n\n#  * the computing unit. Context information seems to be a list of items, the operation needs yes or no.\n\n#  * <dl>\n\n#  *  <dt>area:</dt><dd>the area (oppervlakte) of each computing unit is part of the operation, areaarea,\n\n#  *      cellarea</dd>\n\n#  *  <dt>length:</dt><dd>the length of a computing unit is part of the operation, ldddist.</dd>\n\n#  *  <dt>location:</dt><dd>the location of a computing unit is part of the operation, xcoordinate, move.</dd>\n\n#  *  <dt>random:</dt><dd>uses the random generator</dd>\n\n#  * </dl>\n\n#  * Operaties die items gebruiken, staan in de manual met --cellunit (area,length), --coorul (location)\n\n#  * enzo.\n\n#  * For all types of collections a value for these items can be chosen, they are not all sensible but will\n\n#  * create a running system. For example, points have a location, choosing the value 1 for area and length, will\n\n#  * make areaarea a sort of point counting operation, and ldddist a non sensable operation.\n\n#  *\n\n#  * Legends doorerven (sub-classing, Nominal, ordinal, boolean)\n\n#  * <H1>Andere punten</H1>\n\n#  * Tag kaarten om te kijken of ze runtime veranderen: date stamping\n\n#  * </p>\n\n#   <pre>\n\n#   iterators:\n\n#     - whole map\n\n#     - voor een locatie de 4 of 8 buurcellen, incl/excl cell zelf. zie ook Kor's filter code\n\n#     - voor een locatie met ldd, de upstream of de downstream cellen.\n\n#   ldd transformatie: cellen in 1d-array zodat bovenstroomse cellen altijd\n\n#    een lager index hebben dan hun beneden stroomse (zie rflow executable)\n\n#   - alle andere kaarten zouden ook in deze volgorde kunnen.\n\n#   - Is de optimale volgorde  als de afstand in de 1d-array tussen de door de\n\n#     ldd verbonden cellen zo klein mogelijk is (> cache hits)?\n\n#\n\n#   comp. sub point models:\n\n#    - genereer C(++) code, die wordt gecompileerd naar een DDL die runtime\n\n#      wordt gebonden, zoals ik dat ook reeds doe met de gridio.dll en de\n\n#      modellink dll's.\n\n#      Target\n\n#        - linux: gcc\n\n#        - win32: gcc-mingw probably (of de gratis borland C++ compiler)\n\n#   </pre>\n\n#\n\n#\n\n#  */\n\n#\n\n# /*!\n\n#  \\namespace calc\n\n#  \\brief The pcrcalc application\n\n#\n\n#  \\todo\n\n#   <p>DLL REFACTORING\n\n#    <pre>\n\n#\n\n# get rid of  static in any of the following modules:\n\n#  - calc_arcviewextapi.cc\n\n#         static char *errStr(0);\n\n#\n\n# clients of pcrcalcl.dll:\n\n# C++  - pcrcalc.exe\n\n# C++  - calcui.exe       (ClientInterface)\n\n# C    - arcView extension\n\n# C    - DelftShell\n\n#\n\n# Member calc::EsriGridIO::EsriGridIO()\n\n#  make a difference in fail between - lib not found, is ArcView installed?\n\n#   - sym not found, do we have correct version of av-dll\n\n#\n\n#\n\n# Member calc::IoEsriFieldStrategy::setStackInfo(const StackInfo &s) const\n\n#    update delphi-DLL for new PCRaster DTD.  (CHECK OF AL GEDAAN)\n\n#    do dataType in directoryStackInfo\n\n#    assure that float read correct in Delphi \",\" or \".\" issue\n\n#\n\n# REVIEW again what classes must be exported (PCR_DLL_EXP/PCRAPI)\n\n#    </pre>\n\n#     END OF DLL REFACTORING\n\n#     </p>\n\n#\n\n#  \\todo\n\n#   2) strip the .lib of pcrcalcl.dll for bare essentials\n\n#\n\n#  \\todo\n\n#    when model terminates because of numerical error, -e or whatever\n\n#    does it write all timeseries, adjust maps/min/max's etc..?\n\n#    It seems it does, put that behavior in  tests\n\n#\n\n#  \\todo\n\n#    optimizations:\n\n#    <pre>\n\n#     MV test:\n\n#      (!(v+1)  : UINT* REAL*\n\n#      (!(v<<1) : INT*\n\n#     Lees AMD Opt guide:\n\n#       - prefeching\n\n#       - elk field heeft:\n\n#         - een bitmap voor MV's\n\n#           die bitmap is geshared indien hetzelfde\n\n#           vanuit de bitmap, per 4 bit-strip de mogelijkheden bekijken, voor\n\n#            maximal pipelining.\n\n#    </pre>\n\n#\n\n#  \\bug\n\n#    Check \"dynmod\\\\plants\\\\scen.mod\"\n\n#     als naam is newplants (9 chars)\n\n#      dan result zonder punt, dus newplants001\n\n#\n\n#   \\bug\n\n#      pcrcalc/test230, tan(180), solution tan(pi()/2:--radians) ???\n\n#\n\n#  \\bug\n\n#    lookup...() met arg 1 as a field, geeft assertion failed\n\n#\n\n#  <H1>Binding issues</H1>\n\n#    - calcui, maakt binding.ipcr aan\n\n#      met daarin NumericSetting\n\n#    - als -r in een pad een directory AANMAAKT dan check parent voor\n\n#       een binding.ipcr waarin een child moet worden toegevoegd!\n\n#    - zet ModelRunStatus/@ResultLastRun voor begin run op Cancel\n\n#       dan:\n\n#        - bij completion op Done\n\n#        - bij error op Error (eigenlijk Incomplete als input not found)\n\n#    - voeg in MRO manual toe, dat binding.ipcr wordt gebruikt.\n\n#    - ModelRunStatus in binding.ipcr is ook zinnig buiten calcui\n\n#\n\n#    Externe bindings\n\n#      - bindings in volgorde van definitie presenteren (wil Ad ook)\n\n#      - externe bindings mogen overschrijven/dubbel zijn (test375)\n\n#      - de externe bindings moet ook reeds in het script voorkomen\n\n#        PROBLEEM, calcui doet niet alleen de bindings maar kan nieuwe\n\n#         bindings generern die niet in de binding staan.\n\n#      - maak opties:\n\n#         - -b set external bindings\n\n#         - om binding.ipcr te generen ?\n\n#         - -R as -r but tells how run is/will be done:\n\n#            - where input files are found\n\n#            - numerical values\n\n#         - diffs of two scenarios\n\n#\n\n#\n\n#    rundirectories/freebie: -i inputDir -o outputDir\n\n#     d.m.v. het rundirectory mechanisme, geen zoekpad ALLEEN die directories\n\n#     gebruiken.\n\n#\n\n#   <H1>Binding</H1>\n\n#    NumericSetting,FileSetting --> BindingRewriter moet in pcrxml-library\n\n#\n\n#   refactor non-working symbolSequenceNr()\n\n#\n\n#   Refactor Pos:\n\n#    - Pos kan ook naar een binding.ipcr wijzen?\n\n#       --> yep, reimplement posError for a bindedSymbol!\n\n#\n\n# !  bij refactoren van pcrcalc, als Pos meer flexibel is dan foutmelding altijd\n\n# !  op de externe binding, die is voor de gebruiker zichtbaar\n\n#\n\n#    - context in ModelBuilder kan ook xml file zijn\n\n#      posError is een rare naam\n\n#\n\n#    <H1>Parameter bescrijvingen</H1>\n\n#    Twee interval definities:\n\n#     allow-interval: set on input, give assertion if computation goes outside\n\n#     adjust-interval: set to this interval, if computation goes outside\n\n# */\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "source/pcraster_python/CMakeLists.txt" : {
      "ObjectId" : "60a9edc22c0d3d5ec581fd7594a900ca8536b716",
      "LastModified" : "2019-03-28T15:36:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# operations.inc and operations.py were previously generated each time at a build.\n\n# Due to removal of xsltproc dependency this file needs to be\n\n# regenerated when one of the source files change\n\n# Hash the copied file in build directory rather than the source due to different UNIX/WIN line endings\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# check operationExpanded.xml as it's originating from operations.xml\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# and these related to the Operation*xsl ...\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This is the previously executed command, results in something\n\n# similar to this:\n\n# xsltproc --path ../xslt OperationsToWrappers.xsl ../pcraster_model_engine/operation.xml\n\n#\n\n# ADD_CUSTOM_COMMAND(\n\n#     OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/operations.inc\n\n#     DEPENDS\n\n#         ${CMAKE_CURRENT_SOURCE_DIR}/OperationsToWrappers.xsl\n\n#         ${CMAKE_CURRENT_SOURCE_DIR}/OperationToWrapper.xsl\n\n#         ${CMAKE_CURRENT_SOURCE_DIR}/../pcraster_model_engine/operation.xml\n\n#         WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}\n\n#         # why does ${CMAKE_COMMAND} -E copy not work here?\n\n#         COMMAND cp ${CMAKE_CURRENT_SOURCE_DIR}/*.xsl ${CMAKE_CURRENT_BINARY_DIR}\n\n#         COMMAND ${LIBXSLT_XSLTPROC_EXECUTABLE} --path ${CMAKE_CURRENT_SOURCE_DIR}/../xslt ${CMAKE_CURRENT_BINARY_DIR}/OperationsToWrappers.xsl ${CMAKE_CURRENT_SOURCE_DIR}/../pcraster_model_engine/operation.xml\n\n# )\n",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# operations.inc needs to be manually updated in case the\n\n# operation.xml, OperationToWrapper.xsl or\n\n# OperationsToWrappers.xsl change\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# workaround to ignore warnings of these headers\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#        ${PYTHON_INCLUDE_DIR}\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#        ${PCR_BOOST_PYTHON_NUMPY}\n\n#        ${PCR_BOOST_PYTHON}\n\n#        ${PYTHON_LIBRARIES}\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "### #set_target_properties(_pcraster_modflow_python\n\n### #    PROPERTIES\n\n### #        LIBRARY_OUTPUT_DIRECTORY \"${_TARGET_BIN}/pcraster\"\n\n### #)\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Determine bitness at compile time...\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ... and use this for import checks\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# COMMAND ${CMAKE_COMMAND} -E copy\n\n#     $<TARGET_FILE:_pcraster> ${_TARGET_BIN}/pcraster\n\n# COMMAND ${CMAKE_COMMAND} -E copy\n\n#     $<TARGET_FILE:_pcraster_modflow_python> ${_TARGET_BIN}/pcraster\n\n# COMMAND ${CMAKE_COMMAND} -E remove $<TARGET_FILE:_pcraster>\n\n# COMMAND ${CMAKE_COMMAND} -E remove $<TARGET_FILE:_pcraster_modflow_python>\n",
        "Line" : 128,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "#_pcraster_modflow_python\n",
        "Line" : 143,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# TODO This target is used by modflow too. While this CMake file depends on\n\n#      modflow targets. Refactor.\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# OLS: clean up the comments when refacoring for the new windows build\n\n# I leave them here just as info in case of troubles...\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#    set(TEST_NAMES\n\n#      pcrcalcpy_pythonunittest\n\n#    )\n\n#\n\n#    add_unit_tests(\n\n#      SCOPE python\n\n#      NAMES ${TEST_NAMES}\n\n#      LINK_LIBRARIES\n\n#        ${Boost_PYTHON_LIBRARY}\n\n#        ${PYTHON_LIBRARIES}\n\n#    )\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# add path of project's unit test related files to PYTHONPATH\n\n# required to execute this unit test via ctest properly\n",
        "Line" : 201,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# argument is a 'cmake' ; separated list of values, therefore escape the environment path separator\n",
        "Line" : 206,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "#    add_dependencies(python_pcrcalcpy_pythonunittest\n\n#      examples.sentinel\n\n#      mapattr asc2map col2map\n\n#      _pcraster fill_python_directory_structure\n\n#    )\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# do not run debug tests on Windows\n\n# or figure out how calling Python_d.exe from here works\n",
        "Line" : 228,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "# Unit testing stuff ----------------------------------------------------------\n\n# Python extension is renamed and linking the unit test executable fails because\n\n# of this. Dunno how to solve this. For now, just make a static lib to link\n\n# the unit test against.\n",
        "Line" : 231,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "#      ADD_LIBRARY(pcraster_python_static STATIC\n\n#          ${PCRASTER_SOURCES}\n\n#          ${CORE_SOURCES}\n\n#      )\n\n#      ADD_DEPENDENCIES(pcraster_python_static\n\n#          _pcraster\n\n#          pcraster_model_engine\n\n#      )\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#     SET(TEST_SOURCES\n\n#         pcrcalcpy_test.cc\n\n#         pcrcalcpy_pythonunittest.cc\n\n#     )\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# OLS: interesting, no header files required to compile this?\n",
        "Line" : 250,
        "CharPositionInLine" : 1
      },
      "24" : {
        "Text" : "#  target_include_directories(python_pcrcalcpy_pythonunittest\n\n#    PRIVATE\n\n#     ${CMAKE_CURRENT_SOURCE_DIR}/../include\n\n#     ${CMAKE_CURRENT_SOURCE_DIR}/../app\n\n#     ${CMAKE_CURRENT_SOURCE_DIR}/../mathx\n\n#     ${CMAKE_CURRENT_SOURCE_DIR}/../pcrcom\n\n#     ${CMAKE_CURRENT_SOURCE_DIR}/../pcrdisc\n\n#     ${CMAKE_CURRENT_SOURCE_DIR}/../pcrgeo\n\n#     ${CMAKE_CURRENT_SOURCE_DIR}/../pcraster_dal\n\n#     ${CMAKE_CURRENT_SOURCE_DIR}/../pcraster_model_engine\n\n#     ${CMAKE_CURRENT_BINARY_DIR}\n",
        "Line" : 251,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# for major_op.h:\n",
        "Line" : 262,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "#   ${CMAKE_CURRENT_BINARY_DIR}/../pcraster_model_engine\n",
        "Line" : 263,
        "CharPositionInLine" : 1
      },
      "27" : {
        "Text" : "#  )\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#  ADD_FILE_DEPENDENCY(pcrcalcpy_pythonunittest.cc ${CMAKE_CURRENT_SOURCE_DIR}/test.py)\n",
        "Line" : 266,
        "CharPositionInLine" : 1
      },
      "29" : {
        "Text" : "#  ADD_FILE_DEPENDENCY(pcrcalcpy_pythonunittest.cc ${CMAKE_CURRENT_SOURCE_DIR}/testcase.py)\n",
        "Line" : 267,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "### ADD_FILE_DEPENDENCY(pcrcalcpy_pythonunittest.cc ${CMAKE_CURRENT_SOURCE_DIR}/testexamples.py) # generated\n",
        "Line" : 268,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "### SET(_EXAMPLES_DIR ${PROJECT_SOURCE_DIR}/Documentation/PCRasterManual/examples)\n\n### ADD_CUSTOM_COMMAND(\n\n###   OUTPUT ${CMAKE_CURRENT_SOURCE_DIR}/testexamples.py\n\n###   DEPENDS\n\n###     ${_EXAMPLES_DIR}/ScriptSamples.py\n\n###     ${_EXAMPLES_DIR}/PCRasterSample.py\n\n###     ${_EXAMPLES_DIR}/Makefile\n\n###   COMMAND make -C ${_EXAMPLES_DIR} PythonTests OUTPUT=${CMAKE_CURRENT_SOURCE_DIR}/testexamples.py\n\n### )\n",
        "Line" : 271,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "#     ADD_EXECUTABLE(test_pcraster_python\n\n#         ${TEST_SOURCES}\n\n#     )\n",
        "Line" : 281,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\n\n#     # input files from _EXAMPLES_DIR need these apps:\n\n#      ADD_DEPENDENCIES(python_pcrcalcpy_pythonunittest\n\n#          mapattr asc2map col2map)\n\n#\n\n#      ADD_DEPENDENCIES(python_pcrcalcpy_pythonunittest _pcraster fill_python_directory_structure)\n",
        "Line" : 285,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#     IF(NOT (WIN32 AND (CMAKE_BUILD_TYPE STREQUAL Debug)))\n\n#         # This won't work unless a debug numpy is installed.\n\n#         ADD_DEPENDENCIES(tests run_test_pcraster_python)\n\n#     ENDIF()\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#----------------------------------------------------------\n\n#INSTALL(\n\n#  TARGETS _pcraster\n\n#  LIBRARY DESTINATION python/pcraster\n\n#  RUNTIME DESTINATION python/pcraster\n\n#)\n\n#INSTALL(\n\n#  TARGETS _numpy\n\n#  LIBRARY DESTINATION python/pcraster/numpy\n\n#  RUNTIME DESTINATION python/pcraster/numpy\n\n#)\n\n# This should be done at install time, but I can't seem to get\n\n# INSTALL(CODE \"...\") to call a macro.\n\n### CHECK_RPATH_EQUALS(\"$ORIGIN\" ${PYTHON_LIBRARIES})\n\n### INSTALL_EXTERN_SHARED_LIBRARIES(\n\n###   ${PYTHON_LIBRARIES}\n\n###   )\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "### # for backward compatibility\n\n### INSTALL(\n\n###     FILES\n\n###         pcraster.py\n\n###     DESTINATION python\n\n### )\n\n# this directory from Pcrtree2/bin contains the so files\n\n# and the package layout\n",
        "Line" : 329,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# CMAKE_CONFIGURATION_TYPES is only defined if the generator supports multiple\n\n# build configurations. In that case the output is stored in a subdirectory\n\n# named after the current build configuration.\n",
        "Line" : 338,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# ${EXECUTABLE_OUTPUT_PATH}/\\${CMAKE_INSTALL_CONFIG_NAME}/pcraster\n\n# ${_TARGET_BIN}/pcraster\n\n# TODO This doesn't work on Windows.\n\n# ${_TARGET_BIN}/${CMAKE_CFG_INTDIR}/pcraster\n\n# ${_TARGET_BIN}/Release/pcraster\n",
        "Line" : 350,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 39
    },
    "source/pcraster_python/utils/CMakeLists.txt" : {
      "ObjectId" : "246181ed355b8b28602a3159d683dc4ceb20f372",
      "LastModified" : "2019-03-26T07:56:31Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/pcraster_xsd/CMakeLists.txt" : {
      "ObjectId" : "d71f1786f2c2985f7338c708aee568a1845d5854",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Due to removal of XSD dependency files need to be regenerated\n\n# Just check on Unices if the source file changed,\n",
        "Line" : 5,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# ------------------------------------------------------------------------------\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ------------------------------------------------------------------------------\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# OLS: this is still required in case we need to regenerate files\n\n# ADD_CUSTOM_COMMAND(\n\n#     OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/commonTypesXSD.cc\n\n#     DEPENDS ${XSD_SRC_DIR}/commonTypes.xsd ${XSD_EPILOGUE}\n\n#     WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}\n\n#     COMMENT Generating ${CMAKE_CURRENT_BINARY_DIR}/commonTypesXSD.cc\n\n#     COMMAND ${XSD_EXECUTABLE} ${XSD_OPTIONS}\n\n#         --hxx-epilogue \"#include \\\"commonTypesUtilEpilogue.h\\\"\"\n\n#         --cxx-epilogue \"#include \\\"commonTypesUtilEpilogueImpl.h\\\"\"\n\n#         ${XSD_SRC_DIR}/commonTypes.xsd\n\n#     VERBATIM\n\n# )\n\n# OLS\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# OLS: this is still required in case we need to regenerate files\n\n#     ADD_CUSTOM_COMMAND(\n\n#         OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/AguilaXSD.cc\n\n#         DEPENDS ${_AGUILA_XSD} ${XSD_EPILOGUE}\n\n#         WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}\n\n#         COMMENT Generating ${CMAKE_CURRENT_BINARY_DIR}/AguilaXSD.cc\n\n#         COMMAND ${CMAKE_COMMAND} -E copy ${_AGUILA_XSD} ${CMAKE_CURRENT_BINARY_DIR}\n\n#         COMMAND ${CMAKE_COMMAND} -E copy ${XSD_SRC_DIR}/commonTypes.xsd\n\n#             ${CMAKE_CURRENT_BINARY_DIR}\n\n#         COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_SOURCE_DIR}/xsdEpilogue.txt\n\n#             ${CMAKE_CURRENT_BINARY_DIR}\n\n#         COMMAND ${XSD_EXECUTABLE} ${XSD_OPTIONS} ${AGUILA_RES}\n\n#             --hxx-epilogue-file xsdEpilogue.txt Aguila.xsd\n\n#     )\n\n# OLS\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# OLS: this is still required in case we need to regenerate files\n\n#     ADD_CUSTOM_COMMAND(\n\n#         OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/PCRasterXSD.cc\n\n#         DEPENDS ${_PCRASTER_XSD} ${XSD_EPILOGUE}\n\n#         WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}\n\n#         COMMENT Generating ${CMAKE_CURRENT_BINARY_DIR}/PCRasterXSD.cc\n\n#         COMMAND ${CMAKE_COMMAND} -E copy ${_PCRASTER_XSD} ${CMAKE_CURRENT_BINARY_DIR}\n\n#         COMMAND ${CMAKE_COMMAND} -E copy ${XSD_SRC_DIR}/commonTypes.xsd\n\n#             ${CMAKE_CURRENT_BINARY_DIR}\n\n#         COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_SOURCE_DIR}/xsdEpilogue.txt\n\n#             ${CMAKE_CURRENT_BINARY_DIR}\n\n#         COMMAND ${XSD_EXECUTABLE} ${XSD_OPTIONS} --root-element-all\n\n#             --cxx-suffix XSD.cc --hxx-epilogue-file xsdEpilogue.txt PCRaster.xsd\n\n#     )\n\n# OLS\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ------------------------------------------------------------------------------\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# TODO allmost all test depend on PCRasterXSD they have to\n\n# be rewritten...................\n",
        "Line" : 212,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# OLS: this is still required in case we need to regenerate files\n\n#         ADD_CUSTOM_COMMAND(\n\n#           OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/unitTestXSD.cc\n\n#           DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/unitTest.xsd ${XSD_EPILOGUE}\n\n#           WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}\n\n#           COMMAND ${XSD_EXECUTABLE} ${XSD_OPTIONS}\n\n#               ${CMAKE_CURRENT_SOURCE_DIR}/unitTest.xsd\n\n#         )\n\n# OLS\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "source/pcrblock/CMakeLists.txt" : {
      "ObjectId" : "9e45c7aa2763d57e7dc6859e3e5e79842e579f5d",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/pcrcalc/CMakeLists.txt" : {
      "ObjectId" : "948e3bb778c17f9c1deb95fbd95fe6f079c076b8",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/pcrcom/CMakeLists.txt" : {
      "ObjectId" : "456c27e1be40079562e3f7147a3fe8234d0759bc",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### # TODO move this to UseAdvApi32.cmake\n\n### IF(WIN32)\n\n###     FIND_LIBRARY(ADVAPI32_LIBRARY\n\n###         NAMES\n\n###         advapi32\n\n###         PATHS\n\n###         $ENV{VSINSTALLDIR}/VC/PlatformSDK/Lib\n\n###     )\n\n###     INCLUDE_DIRECTORIES(\n\n###         # win32exceptiontext.inc\n\n###         ${CMAKE_CURRENT_SOURCE_DIR}/../include\n\n###     )\n\n### ENDIF()\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### IF(WIN32)\n\n###     # Registry API WIN32 LIB.\n\n###     SET(SOURCES ${SOURCES} com_win32.cc com_win32registrykey.cc)\n\n### ENDIF(WIN32)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# mam/puma only\n\n# com_app\n\n# com_apphelper\n\n# com_commandline\n\n# com_commandlineapp\n\n# com_commandlineargument\n\n# com_commandlinearguments\n\n# com_commandmodeargument\n\n# com_exclusiveargument\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# com_raster\n\n# com_repeatableargument\n\n# com_repeatableexclusiveargument\n\n# com_singlevaluedraster\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# deprecated, see InTableStream docs\n\n# com_tableinfo\n\n# com_spiritfilelineparser\n\n# com_intablestream\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# com_statistics\n",
        "Line" : 67,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Registry API WIN32 LIB.\n",
        "Line" : 79,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# For dlopen in com_dynamiclibrary.\n",
        "Line" : 95,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "### IF(WIN32)\n\n###     TARGET_LINK_LIBRARIES(pcrcom ${ADVAPI32_LIBRARY})\n\n### ENDIF(WIN32)\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# mam only\n\n# com_commandlineargumentstest\n\n# com_commandlineargumenttest\n\n# com_commandlinetest\n\n# com_argumentparsertest\n",
        "Line" : 123,
        "CharPositionInLine" : 12
      },
      "10" : {
        "Text" : "# deprecated, see InTableStream docs\n\n# com_intablestreamtest\n\n# com_tableinfotest\n\n# com_spiritfilelineparsertest\n",
        "Line" : 150,
        "CharPositionInLine" : 12
      },
      "11" : {
        "Text" : "# Generator expressions don't work here\n\n# $<$<BOOL:${WIN32}>:com_win32registrykeytest>\n",
        "Line" : 161,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 12
    },
    "source/pcrdiscr/CMakeLists.txt" : {
      "ObjectId" : "ffeef6afc3db8bcc1d532e8500ce62264162b78c",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/pcrfunc/CMakeLists.txt" : {
      "ObjectId" : "40fb2d013b8efb0b6ec4664ac15434c4033ef842",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/pcrgeo/CMakeLists.txt" : {
      "ObjectId" : "eb340e611cf75154503a6179a43a3c555a036d3e",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# geo_csfraster.cc\n\n# geo_griddedpoints.cc\n\n# geo_kernel.cc\n\n# geo_kernelengine.cc\n\n# geo_kernelsourcebuffer.cc\n\n# geo_raster.cc\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# geo_csfraster\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# geo_griddedpoints\n",
        "Line" : 26,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# geo_kernel\n\n# geo_kernelengine\n\n# geo_kernelsourcebuffer\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# geo_raster\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "source/pcrgeom/CMakeLists.txt" : {
      "ObjectId" : "4fae747bee422afab557adec6d5d851a1d1aa705",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/pcrraster/CMakeLists.txt" : {
      "ObjectId" : "66d4832762c692a595f88debacd4b884ab5d36f7",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/pcrvoxelstack/CMakeLists.txt" : {
      "ObjectId" : "c7b08983f4da13a23e37c5d3c0a8eeea293d2075",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/pcrxml/CMakeLists.txt" : {
      "ObjectId" : "fbea4e9a28302eb916122a69ba0d1d83efbccf34",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Note that a lot of generated stuff is simply put in svn\n\n# to recreate pull stuff from OLDPCRTREE\n\n# LATER DITCH PCRXML?\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Generated but now fixed, pcrxsd supersedes -------------------------------\n",
        "Line" : 26,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# --------------------------------------------------------------------------\n",
        "Line" : 101,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "source/python/applications/LinkOutTestDriver/CMakeLists.txt" : {
      "ObjectId" : "a06790858cc3fddc7477d98ccace72f3ac07c617",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/python/applications/LinkOutTestDriver/Makefile" : {
      "ObjectId" : "d388a941f8c8a8ff0b8c4fe0a1d61b97e0811de7",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# \tpython LinkOutTestDriver.py test.py\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/python_arrayed_variables/CMakeLists.txt" : {
      "ObjectId" : "2a43e6066b445fe5e4d744faaf98ffa3d7068f76",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This enables us to test and use the code as if it where installed already.\n\n# Dummy target that is always built, but does nothing. This enables us to\n\n# attach post-build commands.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# 2019\n\n# add_dependencies(python_arrayed_variables_dummy\n\n#     _pcraster_modflow_python\n\n# )\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "source/python_arrayed_variables/UnitTests/CMakeLists.txt" : {
      "ObjectId" : "e808941eb72eedbc63b3083e7b863f767f61a3c2",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO Debug build on Windows still needs to be checked\n\n# if(NOT (WIN32 AND (${CMAKE_BUILD_TYPE} STREQUAL \"Debug\")))\n\n#\n\n#   configure_file(\n\n#     ${CMAKE_CURRENT_SOURCE_DIR}/testrun.prolog.in\n\n#     ${CMAKE_CURRENT_BINARY_DIR}/testrun.prolog\n\n#     @ONLY\n\n#   )\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#   set(TEST_NAMES\n\n#     unit_tests\n\n#   )\n\n#\n\n#   add_unit_tests(\n\n#     SCOPE python_arrayed_variables\n\n#     NAMES ${TEST_NAMES}\n\n#     LINK_LIBRARIES\n\n#       ${Boost_PYTHON_LIBRARY}\n\n#       ${PYTHON_LIBRARIES}\n\n#   )\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#   add_dependencies(python_arrayed_variables_unit_tests\n\n#     examples.sentinel\n\n#     mapattr col2map\n\n#     fill_python_directory_structure\n\n#     python_modelling_framework_dummy\n\n#   )\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add path of project's unit test related files to PYTHONPATH\n\n# required to execute this unit test via ctest properly\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# argument is a 'cmake' ; separated list of values, therefore escape the environment path separator\n",
        "Line" : 75,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# endif()\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "source/python_modelling_framework/CMakeLists.txt" : {
      "ObjectId" : "468d70ed3ebfb698cbd3ec39a82cd2c93b9d6222",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This enables us to test and use the code as if it where installed already.\n\n# Dummy target that does nothing. This enables us to attach post-build commands.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# 2019\n\n# add_dependencies(python_modelling_framework_dummy\n\n#     _pcraster_modflow_python\n\n# )\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "source/python_modelling_framework/UnitTests/CMakeLists.txt" : {
      "ObjectId" : "607abe419cb1e05fb13bccf9334835ab17a7c9d9",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO Debug build on Windows still needs to be checked\n\n# if(NOT (WIN32 AND (${CMAKE_BUILD_TYPE} STREQUAL \"Debug\")))\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#   configure_file(\n\n#     ${CMAKE_CURRENT_SOURCE_DIR}/testrun.prolog.in\n\n#     ${CMAKE_CURRENT_BINARY_DIR}/testrun.prolog\n\n#     @ONLY\n\n#   )\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#   set(TEST_NAMES\n\n#     unit_tests\n\n#   )\n\n#\n\n#   add_unit_tests(\n\n#     SCOPE python_modelling_framework\n\n#     NAMES ${TEST_NAMES}\n\n#     LINK_LIBRARIES\n\n#       ${Boost_PYTHON_LIBRARY}\n\n#       ${PYTHON_LIBRARIES}\n\n#   )\n\n#\n\n#   add_dependencies(python_modelling_framework_unit_tests\n\n#     examples.sentinel\n\n#     mapattr col2map\n\n#     fill_python_directory_structure\n\n#     python_modelling_framework_dummy\n\n#   )\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add path of project's unit test related files to PYTHONPATH\n\n# required to execute this unit test via ctest properly\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# argument is a 'cmake' ; separated list of values, therefore escape the environment path separator\n",
        "Line" : 74,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# endif()\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "source/resample/CMakeLists.txt" : {
      "ObjectId" : "1658fa297203aeb3ea014d3c8745013c0bad5741",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# sf463\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# sf485\n",
        "Line" : 51,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "source/string_utils/CMakeLists.txt" : {
      "ObjectId" : "6bb4f897f4a470f2b4e93b97c83509eff66fe5eb",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/tab/CMakeLists.txt" : {
      "ObjectId" : "998ef03f0c63c0b3b95783c966d8d75ad436af31",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/table/CMakeLists.txt" : {
      "ObjectId" : "60b21d1791f64eb7cca72666aa83fd5a1f1ae430",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/utils/CMakeLists.txt" : {
      "ObjectId" : "9322286c73f97848e8a150100e6d415f9fd6340f",
      "LastModified" : "2019-03-22T08:56:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# dev_PythonClient\n",
        "Line" : 5,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# ${PYTHON_LIBRARIES}\n",
        "Line" : 34,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "CMAKE" : 94,
    "MAKEFILE" : 10
  },
  "ElapsedTime" : 2658
}