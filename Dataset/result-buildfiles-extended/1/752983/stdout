{
  "Repository" : "752983",
  "Revision" : "HEAD",
  "ObjectId" : "9d296194e8dc8a98888679dcdeae4d4730682755",
  "CommitTime" : "2019-04-18T22:47:03Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "683bdf42460d17f3fe98395a4f73ce80d183b2e6",
      "LastModified" : "2019-04-15T11:31:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# added in cmake 3.0\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "#This check should occur before project()\n",
        "Line" : 31,
        "CharPositionInLine" : 37
      },
      "2" : {
        "Text" : "# include local  modules\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#if(CMAKE_CFG_INTDIR STREQUAL .)\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# No Debug/Release output paths\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#else(CMAKE_CFG_INTDIR STREQUAL .)\n\n#   set(DEBUG_MAIN_OUTPUT_PATH ${CMAKE_BINARY_DIR}/src/Main/Debug)\n\n#   set(RELEASE_MAIN_OUTPUT_PATH ${CMAKE_BINARY_DIR}/src/Main/Release)\n\n#endif(CMAKE_CFG_INTDIR STREQUAL .)\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ================================================================================\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Allow developers to use Boost < 1.48\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# For older cmake versions the variable 'CMAKE_CXX_COMPILER_VERSION' is missing\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enabled C++11 for Freecad 0.17 and later\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Log the compiler and version\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Escape the two plus chars as otherwise cmake complains about invalid regex\n",
        "Line" : 94,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# get linker errors as soon as possible and not at runtime e.g. for modules\n",
        "Line" : 108,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Disable warning about potentially uninstantiated static members\n\n# because it leads to a lot of false-positives.\n\n#\n\n# https://en.wikipedia.org/wiki/Xcode#Latest_versions\n",
        "Line" : 117,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# older boost.preprocessor turn off variadics for clang\n",
        "Line" : 131,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# ================================================================================\n\n# Output directories for install target\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Don't set it without manual adoption of LibDir variable in src/App/FreeCADInit.py\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# used as compiler defines\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# ==============================================================================\n\n# == Win32 is default behaviour use the LibPack copied in Source tree ==========\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# ==============================================================================\n\n# == All the options for the build process    ============\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Switch to build FreeCAD with Qt5\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# https://blog.kitware.com/constraining-values-with-comboboxes-in-cmake-cmake-gui/\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# It should be safe to assume we've got sed on OSX...\n",
        "Line" : 249,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "# if this is set override some options\n",
        "Line" : 321,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# A Debian package for SMESH doesn't exist\n\n#set(FREECAD_USE_EXTERNAL_SMESH ON)\n",
        "Line" : 324,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# for Windows the minimum required cmake version is 3.4.3 to build the Path module\n",
        "Line" : 331,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# ==============================================================================\n\n#inter-module dependencies\n",
        "Line" : 337,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Takes a dependent module followed by a variable-length list of prerequisite\n\n# modules.  Warns if any of the prerequisite modules are disabled.\n",
        "Line" : 340,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ==============================================================================\n",
        "Line" : 377,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# checking for a unique file in LibPack location to make sure the right version of the LibPack is there\n",
        "Line" : 381,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# don't show them in the GUI\n",
        "Line" : 390,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# -------------------------------- PyCXX --------------------------------\n",
        "Line" : 424,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# -------------------------------- Swig ----------------------------------\n",
        "Line" : 428,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# -------------------------------- Salome SMESH --------------------------\n",
        "Line" : 438,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# ================================================================================\n\n# == for other OSes search the packages ==========================================\n",
        "Line" : 448,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# -------------------------------- Python --------------------------------\n",
        "Line" : 452,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=677598\n\n# Acceptable versions of Python\n",
        "Line" : 454,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# For building on OS X\n",
        "Line" : 458,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# If the user doesn't tell us which package manager they're using\n",
        "Line" : 461,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "# Try to find MacPorts path\n",
        "Line" : 464,
        "CharPositionInLine" : 8
      },
      "40" : {
        "Text" : "# Try to find Homebrew path\n",
        "Line" : 472,
        "CharPositionInLine" : 8
      },
      "41" : {
        "Text" : "# In case someone tries to shoot themselves in the foot\n",
        "Line" : 482,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "# No package manager\n",
        "Line" : 489,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "# The hopefully-normal case - one package manager identified\n",
        "Line" : 494,
        "CharPositionInLine" : 4
      },
      "44" : {
        "Text" : "# Construct a list like python;python2.9;python2.8;...\n",
        "Line" : 497,
        "CharPositionInLine" : 8
      },
      "45" : {
        "Text" : "# Find python in the package management systems, using names in that\n\n# list in decreasing priority.  Note that a manually specified\n\n# PYTHON_EXECUTABLE still has prescedence over this.\n",
        "Line" : 505,
        "CharPositionInLine" : 8
      },
      "46" : {
        "Text" : "# Warn user if we still only have the system Python\n",
        "Line" : 516,
        "CharPositionInLine" : 4
      },
      "47" : {
        "Text" : "# Ask Python to tell us it's include directory, if nobody else has\n",
        "Line" : 523,
        "CharPositionInLine" : 4
      },
      "48" : {
        "Text" : "# Similar for the Python library - there must be an easier way...\n",
        "Line" : 535,
        "CharPositionInLine" : 4
      },
      "49" : {
        "Text" : "# Get the library path\n",
        "Line" : 537,
        "CharPositionInLine" : 8
      },
      "50" : {
        "Text" : "# Get library filename - might not be safe to assume .dylib extension?\n",
        "Line" : 548,
        "CharPositionInLine" : 8
      },
      "51" : {
        "Text" : "# Used on MacPorts systems for finding Shiboken and PySide\n\n# TODO: When we start requiring minimum CMake version above\n\n# 2.8.11, change PATH below to DIRECTORY\n",
        "Line" : 562,
        "CharPositionInLine" : 8
      },
      "52" : {
        "Text" : "# prevent python3 lower than 3.3 (not enough utf8<->unicode tools)\n",
        "Line" : 585,
        "CharPositionInLine" : 8
      },
      "53" : {
        "Text" : "# -------------------------------- pcl ----------------------------------\n\n# Can be used by ReverseEngineering module\"\n\n#\n\n# PCL needs to be found before boost because the PCLConfig also calls find_package(Boost ...),\n\n# but with different components\n",
        "Line" : 593,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# -------------------------------- PyBind11 -----------------------------\n\n# necessary for flat-mesh feature\n",
        "Line" : 602,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# -------------------------------- Boost --------------------------------\n",
        "Line" : 608,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# Boost.Thread 1.67+ headers reference pthread_condattr_*\n",
        "Line" : 617,
        "CharPositionInLine" : 8
      },
      "57" : {
        "Text" : "# -------------------------------- XercesC --------------------------------\n",
        "Line" : 637,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# -------------------------------- ZLIB --------------------------------\n",
        "Line" : 646,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# -------------------------------- PyCXX --------------------------------\n",
        "Line" : 650,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# -------------------------------- OpenCasCade --------------------------------\n",
        "Line" : 654,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# -------------------------------- Salome SMESH --------------------------\n",
        "Line" : 663,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Salome SMESH sources are under src/3rdParty now\n",
        "Line" : 665,
        "CharPositionInLine" : 4
      },
      "63" : {
        "Text" : "# set the internal smesh version:\n\n# see src/3rdParty/salomonemesh/CMakeLists.txt and commit https://github.com/FreeCAD/FreeCAD/commit/666a3e5 and https://forum.freecadweb.org/viewtopic.php?f=10&t=30838\n",
        "Line" : 667,
        "CharPositionInLine" : 8
      },
      "64" : {
        "Text" : "#if we use smesh we definitely also need vtk, no matter of external or internal smesh\n",
        "Line" : 674,
        "CharPositionInLine" : 8
      },
      "65" : {
        "Text" : "# check which modules are available\n",
        "Line" : 688,
        "CharPositionInLine" : 8
      },
      "66" : {
        "Text" : "# don't check VERSION 6 as this would exclude VERSION 7\n",
        "Line" : 700,
        "CharPositionInLine" : 8
      },
      "67" : {
        "Text" : "# on openSUSE 13.1 VTK_LIBRARIES ends with \"optimized\" keyword\n",
        "Line" : 722,
        "CharPositionInLine" : 8
      },
      "68" : {
        "Text" : "# See https://www.hdfgroup.org/HDF5/release/cmakebuild.html\n",
        "Line" : 727,
        "CharPositionInLine" : 12
      },
      "69" : {
        "Text" : "# if pkg-config fails, find_package(HDF5) needs this\n",
        "Line" : 740,
        "CharPositionInLine" : 34
      },
      "70" : {
        "Text" : "# Med Fichier can require MPI\n",
        "Line" : 759,
        "CharPositionInLine" : 16
      },
      "71" : {
        "Text" : "# -------------------------------- Netgen --------------------------------\n",
        "Line" : 787,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# -------------------------------- OpenCV --------------------------------\n",
        "Line" : 793,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# not needed at the moment\n\n#find_package(OpenCV REQUIRED)\n",
        "Line" : 795,
        "CharPositionInLine" : 4
      },
      "74" : {
        "Text" : "# -------------------------------- Swig ----------------------------------\n",
        "Line" : 798,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# -------------------------------- Eigen --------------------------------\n",
        "Line" : 808,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# necessary for Sketcher module\n\n# necessary for Robot module\n",
        "Line" : 810,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# -------------------------------- Qt --------------------------------\n",
        "Line" : 826,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# If using MacPorts, help the Qt4 finder.\n",
        "Line" : 829,
        "CharPositionInLine" : 8
      },
      "79" : {
        "Text" : "# REQUIRED\n",
        "Line" : 846,
        "CharPositionInLine" : 25
      },
      "80" : {
        "Text" : "# This is a special version of the built in macro qt4_wrap_cpp\n\n# It is required since moc'ed files are now included instead of being added to projects directly\n\n# It adds a reverse dependency to solve this\n\n# This has the unfortunate side effect that some files are always rebuilt\n\n# There is probably a cleaner solution than this\n",
        "Line" : 862,
        "CharPositionInLine" : 8
      },
      "81" : {
        "Text" : "# get include dirs\n",
        "Line" : 868,
        "CharPositionInLine" : 12
      },
      "82" : {
        "Text" : "# fixes bug 0000585: bug with boost 1.48\n",
        "Line" : 871,
        "CharPositionInLine" : 12
      },
      "83" : {
        "Text" : "# Automatic\n",
        "Line" : 906,
        "CharPositionInLine" : 23
      },
      "84" : {
        "Text" : "# This is a special version of the built in macro qt5_wrap_cpp\n\n# It is required since moc'ed files are now included instead of being added to projects directly\n\n# It adds a reverse dependency to solve this\n\n# This has the unfortunate side effect that some files are always rebuilt\n\n# There is probably a cleaner solution than this\n",
        "Line" : 918,
        "CharPositionInLine" : 8
      },
      "85" : {
        "Text" : "# get include dirs\n",
        "Line" : 924,
        "CharPositionInLine" : 12
      },
      "86" : {
        "Text" : "# fixes bug 0000585: bug with boost 1.48\n",
        "Line" : 927,
        "CharPositionInLine" : 12
      },
      "87" : {
        "Text" : "#--------------------FreeType-----------------------\n",
        "Line" : 941,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "#---------------------------------------------------\n",
        "Line" : 952,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# -------------------------------- OpenGL --------------------------------\n",
        "Line" : 955,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "# -------------------------------- Coin3D --------------------------------\n",
        "Line" : 969,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "# ------------------------------ Spaceball -------------------------------\n",
        "Line" : 978,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "#future\n",
        "Line" : 981,
        "CharPositionInLine" : 12
      },
      "93" : {
        "Text" : "# -------------------------------- Shiboken/PySide ------------------------\n",
        "Line" : 986,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "# set(PYTHON_SUFFIX -python${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR})\n\n# Below are two variables that can be left empty for standard python 3 version,\n\n# but must be set by the user for different python versions such as 2.7, 3.5 ...\n",
        "Line" : 989,
        "CharPositionInLine" : 8
      },
      "95" : {
        "Text" : "#SET(PYTHON_CONFIG_SUFFIX \"\" CACHE STRING \"Shiboken cmake file suffix. If left empty, system default will be used: <ShibokenConfigPYTHON_CONFIG_SUFFIX.cmake>\")\n\n#SET(PYTHON_BASENAME \"\" CACHE STRING \"Same as PYTHON_SUFFIX but for PySide. If left empty, PYTHON_SUFFIX will be used: <PySideConfigPYTHON_BASENAME.cmake>\")\n",
        "Line" : 996,
        "CharPositionInLine" : 12
      },
      "96" : {
        "Text" : "# REQUIRED\n",
        "Line" : 1005,
        "CharPositionInLine" : 37
      },
      "97" : {
        "Text" : "# Shiboken2 config file was found but it may use the wrong Python version\n\n# Try to get the matching config suffix and repeat finding the package\n",
        "Line" : 1007,
        "CharPositionInLine" : 12
      },
      "98" : {
        "Text" : "# REQUIRED\n",
        "Line" : 1031,
        "CharPositionInLine" : 35
      },
      "99" : {
        "Text" : "#REQUIRED # PySide2 utilities (pyside2-uic & pyside2-rcc)\n",
        "Line" : 1038,
        "CharPositionInLine" : 41
      },
      "100" : {
        "Text" : "# set(PYTHON_SUFFIX -python${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR})\n\n# Below are two variables that can be left empty for standard python 3 version,\n\n# but must be set by the user for different python versions such as 2.7, 3.5 ...\n",
        "Line" : 1074,
        "CharPositionInLine" : 8
      },
      "101" : {
        "Text" : "# REQUIRED\n",
        "Line" : 1090,
        "CharPositionInLine" : 30
      },
      "102" : {
        "Text" : "# REQUIRED\n",
        "Line" : 1097,
        "CharPositionInLine" : 28
      },
      "103" : {
        "Text" : "# PySide utilities (pyside-uic & pyside-rcc)\n",
        "Line" : 1104,
        "CharPositionInLine" : 43
      },
      "104" : {
        "Text" : "# ------------------------------ Matplotlib ------------------------------\n",
        "Line" : 1107,
        "CharPositionInLine" : 0
      },
      "105" : {
        "Text" : "# ------------------------------------------------------------------------\n",
        "Line" : 1118,
        "CharPositionInLine" : 0
      },
      "106" : {
        "Text" : "# copy build convenient files for M$\n",
        "Line" : 1130,
        "CharPositionInLine" : 0
      },
      "107" : {
        "Text" : "#configure_file(BuildAllNice.bat ${CMAKE_BINARY_DIR}/BuildAllNice.bat COPYONLY)\n",
        "Line" : 1135,
        "CharPositionInLine" : 4
      },
      "108" : {
        "Text" : "# version information of libraries\n\n#\n",
        "Line" : 1140,
        "CharPositionInLine" : 0
      },
      "109" : {
        "Text" : "# ================================================================================\n\n# == Global Compiler and Linker Settings =========================================\n",
        "Line" : 1148,
        "CharPositionInLine" : 0
      },
      "110" : {
        "Text" : "# check for 64-bit platform\n",
        "Line" : 1154,
        "CharPositionInLine" : 0
      },
      "111" : {
        "Text" : "# set default compiler settings\n",
        "Line" : 1166,
        "CharPositionInLine" : 1
      },
      "112" : {
        "Text" : "# set default libs\n",
        "Line" : 1169,
        "CharPositionInLine" : 1
      },
      "113" : {
        "Text" : "# set linker flag /nodefaultlib\n",
        "Line" : 1172,
        "CharPositionInLine" : 1
      },
      "114" : {
        "Text" : "# set \"Build with Multiple Processes\"\n",
        "Line" : 1186,
        "CharPositionInLine" : 4
      },
      "115" : {
        "Text" : "# Mark 32 bit executables large address aware so they can use > 2GB address space\n\n# NOTE: This setting only has an effect on machines with at least 3GB of RAM, although it sets the linker option it doesn't set the linker switch 'Enable Large Addresses'\n",
        "Line" : 1191,
        "CharPositionInLine" : 1
      },
      "116" : {
        "Text" : "#MESSAGE(STATUS \"DEBUG: ${CMAKE_CXX_FLAGS_DEBUG}\")\n",
        "Line" : 1199,
        "CharPositionInLine" : 8
      },
      "117" : {
        "Text" : "# https://gcc.gnu.org/bugzilla/show_bug.cgi?id=12477\n\n# Actually '-Wno-inline-dllimport' should work to suppress warnings of the form:\n\n# inline function 'foo' is declared as dllimport: attribute ignored\n\n# But it doesn't work with MinGW gcc 4.5.0 while using '-Wno-attributes' seems to\n\n# do the trick.\n",
        "Line" : 1203,
        "CharPositionInLine" : 1
      },
      "118" : {
        "Text" : "# http://stackoverflow.com/questions/8375310/warning-auto-importing-has-been-activated-without-enable-auto-import-specifie\n\n# SET(CMAKE_SHARED_LINKER_FLAGS \"${CMAKE_SHARED_LINKER_FLAGS} -static-libgcc -static-libstdc++\")\n",
        "Line" : 1212,
        "CharPositionInLine" : 1
      },
      "119" : {
        "Text" : "# force build directory to be different to source directory\n\n#if(${CMAKE_SOURCE_DIR} STREQUAL ${CMAKE_BINARY_DIR})\n\n#MESSAGE(SEND_ERROR \"The build directory (${CMAKE_BINARY_DIR}) must be different to the source directory \"\n\n#                   \"(${CMAKE_SOURCE_DIR}). Please choose another build directory!\")\n\n#elseif()\n",
        "Line" : 1217,
        "CharPositionInLine" : 0
      },
      "120" : {
        "Text" : "#endif()\n",
        "Line" : 1224,
        "CharPositionInLine" : 0
      },
      "121" : {
        "Text" : "# ================================================================================\n\n# == Packaging ===================================================================\n\n#add_custom_target(dist COMMAND ${CMAKE_MAKE_PROGRAM} package_source)\n",
        "Line" : 1226,
        "CharPositionInLine" : 0
      },
      "122" : {
        "Text" : "# -------------------------------- The final report ----------------------------------\n",
        "Line" : 1252,
        "CharPositionInLine" : 0
      },
      "123" : {
        "Text" : "# Qt5 needs/sets PYTHON_CONFIG_SUFFIX regarding Shiboken\n",
        "Line" : 1258,
        "CharPositionInLine" : 0
      },
      "124" : {
        "Text" : "#MESSAGE(STATUS \"OpenCV:              ${OpenCV_VERSION}\")\n",
        "Line" : 1302,
        "CharPositionInLine" : 0
      },
      "125" : {
        "Text" : "#MESSAGE(STATUS \"SPNAV:               not available yet for your OS\") # FREECAD_USE_3DCONNEXION instead...\n",
        "Line" : 1406,
        "CharPositionInLine" : 0
      },
      "126" : {
        "Text" : "# Print message to start build process\n",
        "Line" : 1445,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 127
    },
    "LibraryVersions.h.cmake" : {
      "ObjectId" : "8dfbbe6982ddc7df052a3a03eed1bc8e3db35bf6",
      "LastModified" : "2016-03-19T14:55:09Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/* LibraryVersions.h.  Generated from LibraryVersions.h.cmake by cmake.  */",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "SMESH_Version.h.cmake" : {
      "ObjectId" : "b311f984a66627bb141751300ec65933d5a38bad",
      "LastModified" : "2018-04-28T10:10:55Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/* SMESH_Version.h.  Generated from SMESH_Version.h.cmake by cmake.  */",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "// SMESH version",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cMake/ConfigureChecks.cmake" : {
      "ObjectId" : "d8a5fe141dd3cd19204c1d55954224d6a27059bc",
      "LastModified" : "2018-04-28T10:10:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#check_include_file(dlfcn.h HAVE_DLFCN_H)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#check_include_file(iomanip.h HAVE_IOMANIP_H)\n\n#check_include_file(limits.h HAVE_LIMITS_H)\n\n#check_include_file(values.h HAVE_VALUES_H)\n\n#check_include_file(float.h HAVE_FLOAT_H)\n\n#check_include_file(inttypes.h HAVE_INTTYPES_H)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#check_include_file(libc.h HAVE_LIBC_H)\n\n#check_include_file(memory.h HAVE_MEMORY_H)\n\n#check_include_file(stdint.h HAVE_STDINT_H)\n\n#check_include_file(stdlib.h HAVE_STDLIB_H)\n\n#check_include_file(unistd.h HAVE_UNISTD_H)\n\n#check_include_file(strings.h HAVE_STRINGS_H)\n\n#check_include_file(string.h HAVE_STRING_H)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#check_include_file(bstring.h HAVE_BSTRING_H)\n\n#check_include_file(siginfo.h HAVE_SIGINFO_H)\n\n#check_include_file(bits/sigset.h HAVE_BITS_SIGSET_H)\n\n#check_include_file(sys/dir.h HAVE_SYS_DIR_H)\n\n#check_include_file(sys/filio.h HAVE_SYS_FILIO_H)\n\n#check_include_file(sys/mman.h HAVE_SYS_MMAN_H)\n\n#check_include_file(sys/select.h HAVE_SYS_SELECT_H)\n\n#check_include_file(sys/stat.h HAVE_SYS_STAT_H)\n\n#check_include_file(sys/types.h HAVE_SYS_TYPES_H)\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# i/o streams\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cMake/FindCoin3D.cmake" : {
      "ObjectId" : "08659ea5e989d4b9693567de11f08ff2dc767879",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find Coin3D\n\n# Once done this will define\n\n#\n\n# COIN3D_FOUND        - system has Coin3D - Open Inventor\n\n# COIN3D_INCLUDE_DIRS - where the Inventor include directory can be found\n\n# COIN3D_LIBRARIES    - Link this to use Coin3D\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#  ADD_DEFINITIONS ( -DCOIN_NOT_DLL )\n\n#ELSE (COIN3D_LIBRARIES)\n\n#  SET (COIN3D_LIBRARIES coin2d CACHE STRING \"Coin3D Library (Debug) - Open Inventor API\")\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Try to use pkg-config first...\n",
        "Line" : 80,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# ... then fall back to manual lookup\n",
        "Line" : 83,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "cMake/FindCoin3DDoc.cmake" : {
      "ObjectId" : "883368445ba7e729f752b7a6eddbb6a574d36f74",
      "LastModified" : "2018-09-01T18:58:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find Coin3D Doc\r\n\n# If found, this will define\r\n\n#\r\n\n# COIN3D_DOC_FOUND    - we have access to Coin3D doc, either locally\r\n\n#                       or on the net\r\n\n# COIN3D_DOC_TAGFILE  - full name of the tag file\r\n\n# COIN3D_DOC_PATH     - path to html Coin3D doc\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Not yet implemented\r\n",
        "Line" : 14,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "# Not yet implemented\r\n",
        "Line" : 16,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# Not yet implemented\r\n",
        "Line" : 20,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# Unix systems\r\n",
        "Line" : 22,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "#fallback: tries to use online coin doc\r\n",
        "Line" : 47,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "#ELSE( EXISTS ${COIN3D_DOC_TAGFILE})\r\n\n#  find_program(WGET_PROG wget\r\n\n#  )\r\n\n#  IF( EXISTS ${WGET_PROG})\r\n\n#    execute_process(COMMAND ${WGET_PROG} \r\n\n#                    -P ${CMAKE_BINARY_DIR}/src/Doc \r\n\n#                    ${COIN3D_DOC_PATH}/coin.tag\r\n\n#    )\r\n\n#    find_file(COIN3D_DOC_TAGFILE coin.tag \r\n\n#        ${CMAKE_BINARY_DIR}/src/Doc\r\n\n#    )\r\n\n#    IF( EXISTS ${COIN3D_DOC_TAGFILE})\r\n\n#      SET( COIN3D_DOC_FOUND \"YES\"\r\n\n#      )\r\n\n#    ENDIF( EXISTS ${COIN3D_DOC_TAGFILE})\r\n\n#\r\n\n#  ENDIF( EXISTS ${WGET_PROG})\r\n",
        "Line" : 58,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 7
    },
    "cMake/FindEigen3.cmake" : {
      "ObjectId" : "c6d733b0a993246d82ce74f37e0a942f45c031ba",
      "LastModified" : "2019-03-31T08:06:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Eigen3 lib\n\n#\n\n# This module supports requiring a minimum version, e.g. you can do\n\n#   find_package(Eigen3 3.1.2)\n\n# to require version 3.1.2 or newer of Eigen3.\n\n#\n\n# Once done this will define\n\n#\n\n#  EIGEN3_FOUND - system has eigen lib with correct version\n\n#  EIGEN3_INCLUDE_DIR - the eigen include directory\n\n#  EIGEN3_VERSION - eigen version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Copyright (c) 2009 Benoit Jacob <jacob.benoit.1@gmail.com>\n\n# Redistribution and use is allowed according to the terms of the 2-clause BSD license.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cMake/FindKDL.cmake" : {
      "ObjectId" : "65bd9ddf26e593735f2aae24d2efd92f1c043d44",
      "LastModified" : "2018-04-28T10:10:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate KDL install directory\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module defines\r\n\n# KDL_INSTALL where to find include, lib, bin, etc.\r\n\n# KDL_FOUND, is set to true\r\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#INCLUDE (${PROJECT_SOURCE_DIR}/config/FindPkgConfig.cmake)\r\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#OROCOS_PKGCONFIG_INCPATH(\"${KDLTK_INCLUDE_DIRS}\")\r\n\n#OROCOS_PKGCONFIG_LIBS(\"${KDL_LIBS}\")\r\n\n#OROCOS_PKGCONFIG_LIBPATH(\"${KDL_LINK_DIRS}\")\r\n",
        "Line" : 25,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# Can't find pkg-config -- have to search manually\r\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "cMake/FindMEDFile.cmake" : {
      "ObjectId" : "0cf8980dacb9a9725f68888e90739329f568b966",
      "LastModified" : "2019-03-31T08:06:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find MED file installation\n\n#\n\n# The following variable are set:\n\n#   MEDFILE_INCLUDE_DIRS\n\n#   MEDFILE_LIBRARIES\n\n#   MEDFILE_C_LIBRARIES\n\n#   MEDFILE_F_LIBRARIES\n\n#\n\n#  The CMake (or environment) variable MEDFILE_ROOT_DIR can be set to\n\n#  guide the detection and indicate a root directory to look into.\n\n#\n\n############################################################################\n\n# Copyright (C) 2007-2015  CEA/DEN, EDF R&D, OPEN CASCADE\n\n#\n\n# This library is free software; you can redistribute it and/or\n\n# modify it under the terms of the GNU Lesser General Public\n\n# License as published by the Free Software Foundation; either\n\n# version 2.1 of the License, or (at your option) any later version.\n\n#\n\n# This library is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n\n# Lesser General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU Lesser General Public\n\n# License along with this library; if not, write to the Free Software\n\n# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA\n\n#\n\n# See http://www.salome-platform.org/ or email : webmaster.salome@opencascade.com\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ------\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ------\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#FIND_PROGRAM(MDUMP mdump)\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cMake/FindMatplotlib.cmake" : {
      "ObjectId" : "04ef34996e36eefee7752ef8829608c0cebb1e10",
      "LastModified" : "2018-04-28T10:10:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find the matplotlib libraries\r\n\n# This module finds IF matplotlib is installed, and sets the following variables\r\n\n# indicating where it is.\r\n\n#\r\n\n#  MATPLOTLIB_FOUND            - was matplotlib found\r\n\n#  MATPLOTLIB_VERSION          - the version of matplotlib found as a string\r\n\n#  MATPLOTLIB_VERSION_MAJOR    - the major version number of matplotlib\r\n\n#  MATPLOTLIB_VERSION_MINOR    - the minor version number of matplotlib\r\n\n#  MATPLOTLIB_VERSION_PATCH    - the patch version number of matplotlib\r\n\n#  MATPLOTLIB_PATH_DIRS        - path to the matplotlib include files\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Try to import matplotlib into Python interpreter. Python\r\n\n# interpreter was found previously as required package, so\r\n\n# don't take care about this.\r\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Convert the process output into a list\r\n",
        "Line" : 26,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Make sure all directory separators are '/'\r\n",
        "Line" : 32,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Get the major and minor version numbers\r\n",
        "Line" : 35,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 5
    },
    "cMake/FindNETGEN.cmake" : {
      "ObjectId" : "36acd99c2fb01ee88a28b7d549be802673f4ec79",
      "LastModified" : "2019-03-31T08:06:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find nglib/netgen\n\n#\n\n# Optional input NETGENDATA is path to the netgen libsrc source tree - this is\n\n# required due to some headers not being installed by netgen.\n\n#\n\n# Once done this will define\n\n#\n\n# NGLIB_INCLUDE_DIR   - where the nglib include directory can be found\n\n# NGLIB_LIBRARIES     - Link this to use nglib\n\n# NETGEN_INCLUDE_DIRS - where the netgen include directories can be found\n\n# NETGEN_DEFINITIONS  - C++ compiler defines required to use netgen/nglib\n\n#\n\n# See also: http://git.salome-platform.org/gitweb/?p=NETGENPLUGIN_SRC.git;a=summary\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# for external smesh only the following two variables are needed:\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# We haven't supported Netgen prior to 5.3.1 on MacOS, and the current\n\n# plan is for the next Netgen version to be 6.1 (currently unreleased).\n",
        "Line" : 31,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# allow to customize if NETGEN_ROOT is used\n",
        "Line" : 79,
        "CharPositionInLine" : 10
      },
      "4" : {
        "Text" : "# Package-provided cMake file is not enough\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# workaround for netgen 6.2 and newer. currently there is no easy way to detect the version\n",
        "Line" : 141,
        "CharPositionInLine" : 10
      },
      "6" : {
        "Text" : "# better use \"find_package(netgen CONFIG REQUIRED)\"\n",
        "Line" : 142,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# Version >= 6.2\n",
        "Line" : 149,
        "CharPositionInLine" : 50
      },
      "8" : {
        "Text" : "# Clang sometimes fails to include <cstdio>\n",
        "Line" : 151,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Ugly hack to make <stdio.h> building gets function\n",
        "Line" : 157,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 10
    },
    "cMake/FindOpenCV.cmake" : {
      "ObjectId" : "8b06b13815636d3d05634d2868b052417d4bca82",
      "LastModified" : "2018-04-28T10:10:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find OpenCV library installation\n\n# See http://sourceforge.net/projects/opencvlibrary/\n\n#\n\n# The following variables are optionally searched for defaults\n\n#  OpenCV_ROOT_DIR:            Base directory of OpenCv tree to use.\n\n#  OpenCV_FIND_REQUIRED_COMPONENTS : FIND_PACKAGE(OpenCV COMPONENTS ..) \n\n#    compatible interface. typically  CV CXCORE CVAUX HIGHGUI CVCAM .. etc.\n\n#\n\n# The following are set after configuration is done: \n\n#  OpenCV_FOUND\n\n#  OpenCV_INCLUDE_DIR\n\n#  OpenCV_LIBRARIES\n\n#  OpenCV_LINK_DIRECTORIES\n\n#\n\n# deprecated:\n\n#  OPENCV_* uppercase replaced by case sensitive OpenCV_*\n\n#  OPENCV_EXE_LINKER_FLAGS\n\n#  OPENCV_INCLUDE_DIR : replaced by plural *_DIRS\n\n# \n\n# 2004/05 Jan Woetzel, Friso, Daniel Grest \n\n# 2006/01 complete rewrite by Jan Woetzel\n\n# 1006/09 2nd rewrite introducing ROOT_DIR and PATH_SUFFIXES \n\n#   to handle multiple installed versions gracefully by Jan Woetzel\n\n#\n\n# tested with:\n\n# -OpenCV 0.97 (beta5a):  MSVS 7.1, gcc 3.3, gcc 4.1\n\n# -OpenCV 0.99 (1.0rc1):  MSVS 7.1\n\n#\n\n# www.mip.informatik.uni-kiel.de/~jw\n\n# --------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#  MESSAGE(STATUS \"${CMAKE_CURRENT_LIST_FILE}(${CMAKE_CURRENT_LIST_LINE}):\\n${_MSG}\")\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# required cv components with header and library if COMPONENTS unspecified\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# default\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# WIN32 only actually\n",
        "Line" : 44,
        "CharPositionInLine" : 57
      },
      "5" : {
        "Text" : "# typical root dirs of installations, exactly one of them is used\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# only for backward compatibility deprecated by ROOT_DIR\n\n# only for backward compatibility\n",
        "Line" : 53,
        "CharPositionInLine" : 22
      },
      "7" : {
        "Text" : "# MIP Uni Kiel /opt/net network installation \n\n# get correct prefix for current gcc compiler version for gcc 3.x  4.x\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#DBG_MSG(\"DBG (OpenCV_POSSIBLE_ROOT_DIRS=${OpenCV_POSSIBLE_ROOT_DIRS}\")\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\n\n# select exactly ONE OpenCV base directory/tree \n\n# to avoid mixing different version headers and libs\n\n#\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# windows\n\n# linux /opt/net\n",
        "Line" : 87,
        "CharPositionInLine" : 22
      },
      "11" : {
        "Text" : "# header include dir suffixes appended to OpenCV_ROOT_DIR\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# library linkdir suffixes appended to OpenCV_ROOT_DIR \n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#DBG_MSG(\"OpenCV_LIBDIR_SUFFIXES=${OpenCV_LIBDIR_SUFFIXES}\")\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#\n\n# find incdir for each lib\n\n#\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#\n\n# find sbsolute path to all libraries \n\n# some are optionally, some may not exist on Linux\n\n#\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#\n\n# Logic selecting required libs and headers\n\n#\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# only good if header and library both found   \n",
        "Line" : 184,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "#DBG_MSG(\"appending for NAME=${NAME} ${OpenCV_${NAME}_INCLUDE_DIR} and ${OpenCV_${NAME}_LIBRARY}\" )\n",
        "Line" : 188,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# get the link directory for rpath to be used with LINK_DIRECTORIES: \n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# be backward compatible:\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# display help message\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# make FIND_PACKAGE friendly\n",
        "Line" : 236,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 23
    },
    "cMake/FindOpenCasCade.cmake" : {
      "ObjectId" : "7f6773a1ea14bb13f7948dcec6330c496290fb99",
      "LastModified" : "2019-03-31T08:06:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find OCE / OCC\n\n# Once done this will define\n\n#\n\n# OCC_FOUND          - system has OCC - OpenCASCADE\n\n# OCC_INCLUDE_DIR    - where the OCC include directory can be found\n\n# OCC_LIBRARY_DIR    - where the OCC library directory can be found\n\n# OCC_LIBRARIES      - Link this to use OCC\n\n# OCC_OCAF_LIBRARIES - Link this to use OCC OCAF framework\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# First try to find OpenCASCADE Community Edition\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check for OSX needs to come first because UNIX evaluates to true on OSX\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Disable this define. For more details see bug #0001872\n\n#add_definitions (-DHAVE_CONFIG_H)\n",
        "Line" : 32,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#set(OCC_LIBRARY_DIR ${OCE_LIBRARY_DIR})\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#look for OpenCASCADE\n",
        "Line" : 36,
        "CharPositionInLine" : 16
      },
      "6" : {
        "Text" : "# we first try to find opencascade directly:\n",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set OCC_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#message(SEND_ERROR \"Neither OpenCASCADE Community Edition nor OpenCasCade were found: will not build CAD modules!\")\n",
        "Line" : 159,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 9
    },
    "cMake/FindPyCXX.cmake" : {
      "ObjectId" : "ca3a1c4521fc19444f25d3ff00a433a01e145c6b",
      "LastModified" : "2019-03-31T08:06:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate PyCXX headers and source files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module defines\n\n# PYCXX_INCLUDE_DIR\n\n# PYCXX_SOURCE_DIR\n\n# PYCXX_FOUND\n\n# PYCXX_SOURCES\n\n#\n\n# The PYCXX_*_DIR variables can be set to tell this module where\n\n# the files are.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# There's no standard location for PyCXX.\n\n#\n\n# The authors' example is to put it in \"~\\\" [sic].\n\n#\n\n# Ubuntu puts the includes into /usr/include/python2.7/CXX and sources into\n\n# /usr/share/python2.7/CXX.\n\n#\n\n# The Zultron Fedora RPM does the same as Ubuntu.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# find the header directory\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# headers better be in there\n",
        "Line" : 26,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# check in 'standard' places\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# find the sources directory\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# source directory specified, they'd better be there\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# check in 'standard' places\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Find PyCXX Version\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# see what we've got\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Build the list of sources for convenience\n",
        "Line" : 112,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 12
    },
    "cMake/FindPySide2Tools.cmake" : {
      "ObjectId" : "9c97514888720119780532e70f6394bafec5495f",
      "LastModified" : "2019-03-31T08:06:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find PySide2 utilities, PYSIDE2UIC and PYSIDE2RCC:\n\n# PYSIDE2UICBINARY - Location of PYSIDE2UIC executable\n\n# PYSIDE2RCCBINARY - Location of PYSIDE2RCC executable\n\n# PYSIDE2_TOOLS_FOUND - PySide2 utilities found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Also provides macro similar to FindQt4.cmake's WRAP_UI and WRAP_RC,\n\n# for the automatic generation of Python code from Qt4's user interface\n\n# ('.ui') and resource ('.qrc') files. These macros are called:\n\n# - PYSIDE_WRAP_UI\n\n# - PYSIDE_WRAP_RC\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#pyside2 tools are often in same location as python interpreter\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#ADD_CUSTOM_TARGET(${it} ALL\n\n#  DEPENDS ${outfile}\n\n#)\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Especially on Open Build Service we don't want changing date like\n\n# pyside2-uic generates in comments at beginning., which is why\n\n# we follow the tool command with in-place sed.\n",
        "Line" : 40,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "#ADD_CUSTOM_TARGET(${it} ALL\n\n#  DEPENDS ${outfile}\n\n#)\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Especially on Open Build Service we don't want changing date like\n\n# pyside-rcc generates in comments at beginning, which is why\n\n# we follow the tool command with in-place sed.\n",
        "Line" : 67,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 8
    },
    "cMake/FindPySideTools.cmake" : {
      "ObjectId" : "ca1d4fe05391060c54772b8d63fb34c30a4e412a",
      "LastModified" : "2019-03-31T08:06:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find PySide utilities, PYSIDEUIC4 and PYSIDERCC4:\r\n\n# PYSIDEUIC4BINARY - Location of PYSIDEUIC4 executable\r\n\n# PYSIDERCC4BINARY - Location of PYSIDERCC4 executable\r\n\n# PYSIDE_TOOLS_FOUND - PySide utilities found.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Also provides macro similar to FindQt4.cmake's WRAP_UI and WRAP_RC,\r\n\n# for the automatic generation of Python code from Qt4's user interface\r\n\n# ('.ui') and resource ('.qrc') files. These macros are called:\r\n\n# - PYSIDE_WRAP_UI\r\n\n# - PYSIDE_WRAP_RC\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Already in cache, be silent\r\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#pyside tools are often in same location as python interpreter\r\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#ADD_CUSTOM_TARGET(${it} ALL\r\n\n#  DEPENDS ${outfile}\r\n\n#)\r\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Especially on Open Build Service we don't want changing date like\r\n\n# pyside-uic generates in comments at beginning, which is why\r\n\n# we follow the tool command with in-place sed.\r\n",
        "Line" : 40,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "#ADD_CUSTOM_TARGET(${it} ALL\r\n\n#  DEPENDS ${outfile}\r\n\n#)\r\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Especially on Open Build Service we don't want changing date like\r\n\n# pyside-rcc generates in comments at beginning, which is why\r\n\n# we follow the tool command with in-place sed.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 8
    },
    "cMake/FindRift.cmake" : {
      "ObjectId" : "55dd21b5194b6403a6387a3de78d696fc57f7cc5",
      "LastModified" : "2018-04-28T10:10:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find OCULUS\n\n#\n\n# This module defines\n\n#  OCULUS_FOUND\n\n#  OCULUS_INCLUDE_DIRS\n\n#  OCULUS_LIBRARIES\n\n#\n\n# Copyright (c) 2012 I-maginer\n\n# \n\n# This program is free software; you can redistribute it and/or modify it under\n\n# the terms of the GNU Lesser General Public License as published by the Free Software\n\n# Foundation; either version 2 of the License, or (at your option) any later\n\n# version.\n\n#\n\n# This program is distributed in the hope that it will be useful, but WITHOUT\n\n# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n\n# FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU Lesser General Public License along with\n\n# this program; if not, write to the Free Software Foundation, Inc., 59 Temple\n\n# Place - Suite 330, Boston, MA 02111-1307, USA, or go to\n\n# http://www.gnu.org/copyleft/lesser.txt\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# On a new cmake run, we do not need to be verbose\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If OCULUS_ROOT was defined in the environment, use it.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# concat all the search paths\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# log message\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Search for header files\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Search for libraries files (release mode)\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Search for libraries files (debug mode)\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Configure libraries for debug/release\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#IF(OCULUS_INCLUDE_DIR AND OCULUS_LIBRARY)\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#ENDIF()\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Hide those variables in GUI\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# log find result\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "cMake/FindSMESH.cmake" : {
      "ObjectId" : "475e785cd67c7a5b30c5a47e72acf0b9cba246c3",
      "LastModified" : "2018-04-28T10:10:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find Salome SMESH\n\n# Once done this will define\n\n#\n\n# SMESH_FOUND         - system has Salome SMESH\n\n# SMESH_INCLUDE_DIR   - where the Salome SMESH include directory can be found\n\n# SMESH_LIBRARIES     - Link this to use Salome SMESH\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# These are default search paths, why specify them?\n\n# /usr/include\n\n# /usr/local/include\n",
        "Line" : 12,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#  /usr/lib\n\n#  /usr/local/lib\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Not yet implemented\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "cMake/FindSpnav.cmake" : {
      "ObjectId" : "a9d234f235851d4155767851c0ecf9f6691f2743",
      "LastModified" : "2019-03-31T08:06:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the spnav library and header.\n\n#\n\n# Sets the usual variables expected for find_package scripts:\n\n#\n\n# SPNAV_INCLUDE_DIR - header location\n\n# SPNAV_LIBRARIES - library to link against\n\n# SPNAV_FOUND - true if pugixml was found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Support the REQUIRED and QUIET arguments, and set SPNAV_FOUND if found.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cMake/FindWix.cmake" : {
      "ObjectId" : "cd022909df082dfd9b4361a931589fb009e2f345",
      "LastModified" : "2018-04-28T10:10:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Windows Installer XML\r\n\n# See http://wix.sourceforge.net\r\n\n#\r\n\n# The following variables are optionally searched for defaults\r\n\n#  WIX_ROOT_DIR:            Base directory of WIX2 tree to use.\r\n\n#\r\n\n# The following are set after configuration is done: \r\n\n#  WIX_FOUND\r\n\n#  WIX_ROOT_DIR\r\n\n#  WIX_CANDLE\r\n\n#  WIX_LIGHT\r\n\n# \r\n\n# 2009/02 Petr Pytelka (pyta at lightcomp.cz)\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#  MESSAGE(STATUS \"${CMAKE_CURRENT_LIST_FILE}(${CMAKE_CURRENT_LIST_LINE}):\\n ${_MSG}\")\r\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# typical root dirs of installations, exactly one of them is used\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#DBG_MSG(\"DBG (WIX_POSSIBLE_ROOT_DIRS=${WIX_POSSIBLE_ROOT_DIRS}\")\r\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\r\n\n# select exactly ONE WIX base directory/tree \r\n\n# to avoid mixing different version headers and libs\r\n\n#\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\r\n\n# Logic selecting required libs and headers\r\n\n#\r\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# display help message\r\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# make FIND_PACKAGE friendly\r\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#  MESSAGE(STATUS \"Windows Installer XML found.\")\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\r\n\n# Call wix compiler\r\n\n#\r\n\n# Parameters:\r\n\n#  _sources - name of list with sources\r\n\n#  _obj - name of list for target objects\r\n\n#\r\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Check whether source exists\r\n",
        "Line" : 93,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "#\r\n\n# Call wix compiler\r\n\n#\r\n\n# Parameters:\r\n\n#  _sources - name of list with sources\r\n\n#  _obj - name of list for target objects\r\n\n#\r\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#\r\n\n# Link MSI file\r\n\n#\r\n\n# Parameters\r\n\n#  _target - Name of target file\r\n\n#  _sources - Name of list with sources\r\n\n#\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Add localization\r\n",
        "Line" : 149,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 14
    },
    "cMake/FindXercesC.cmake" : {
      "ObjectId" : "a4181c41d7de78e003965fae13f7c2b8c0014fa1",
      "LastModified" : "2018-04-28T10:10:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate Xerces-C include paths and libraries\r\n\n# Xerces-C can be found at http://xml.apache.org/xerces-c/\r\n\n# Written by Frederic Heem, frederic.heem _at_ telsey.it\r\n\n# Modified by Jos van den Oever\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module defines\r\n\n# XercesC_INCLUDE_DIRS, where to find ptlib.h, etc.\r\n\n# XercesC_LIBRARIES, the libraries to link against to use pwlib.\r\n\n# XercesC_FOUND, If false, don't try to use pwlib.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# if the include a the library are found then we have it\r\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#MARK_AS_ADVANCED(\r\n\n#  XercesC_INCLUDE_DIRS\r\n\n#  XercesC_LIBRARIES\r\n\n#)\r\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cMake/FreeCadMacros.cmake" : {
      "ObjectId" : "660f7692656a3c07fad562070de8f6736d81d75c",
      "LastModified" : "2019-03-31T08:06:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ================================================================================\r\n\n# == Macros, mostly for special targets ==========================================\r\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Macro to copy a list of files into a nested directory structure\r\n\n# Arguments -\r\n\n#   target_name - name of the target the files will be added to\r\n\n#   inpath      - name of the source directory\r\n\n#   outpath     - name of the destination directory\r\n\n#   ARGN        - a list of relative file names that will be copied\r\n\n#\r\n\n#   If a relative file name is foo/bar.txt then the foo directory\r\n\n#   part will be kept so that the destination file name will be\r\n\n#   ${outpath}/foo/bar.txt\r\n\n#\r\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Macro to copy a list of files into a flat directory structure\r\n\n# Arguments -\r\n\n#   target_name - name of the target the files will be added to\r\n\n#   inpath      - name of the source directory\r\n\n#   outpath     - name of the destination directory\r\n\n#   ARGN        - a list of relative file names that will be copied\r\n\n#\r\n\n#   If a relative file name is foo/bar.txt then the foo directory\r\n\n#   part will be removed so that the destination file name will be\r\n\n#   ${outpath}/bar.txt\r\n\n#\r\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# It would be a bit cleaner to generate these files in ${CMAKE_CURRENT_BINARY_DIR}\r\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# BASE_NAME may include also a path name\r\n",
        "Line" : 129,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# assures the source files are generated at least once\r\n",
        "Line" : 133,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# generates the ui -> cpp h files\r\n\n#macro(qt4_wrap_ui infiles )\r\n\n#\r\n\n#endmacro(qt4_wrap_ui)\r\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add precompiled header to SourcesVar\r\n",
        "Line" : 187,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# get c++ source files\r\n",
        "Line" : 199,
        "CharPositionInLine" : 5
      },
      "9" : {
        "Text" : "# ignore any generated source files from Qt\r\n",
        "Line" : 201,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Macro to replace all the binary output locations.  Takes 2 optional parameters.\r\n\n# ${ARGVN} is zero based so the 3rd element is ${ARGV2}.  When the 3rd element is missing,\r\n\n# Runtime and Lib directories default to /bin and /lib.  When present, the 3rd element\r\n\n# specifies both Runtime and Lib directories.  4th specifies linux install path.\r\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# VS_IDE (and perhaps others) make Release and Debug subfolders.  This removes them.\r\n",
        "Line" : 218,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# FreeCADBase, SMDS, Driver, MEFISTO2 and area-native libs don't depend on parts from CMAKE_INSTALL_LIBDIR\r\n",
        "Line" : 237,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# Set python prefix & suffix together\r\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# 0000661: cmake build on Mac OS: dealing with dylib versus so\r\n",
        "Line" : 256,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 15
    },
    "cMake/UseLibPack10x.cmake" : {
      "ObjectId" : "019e0d8aea8d21cbfb524a236a27d2a6097f500f",
      "LastModified" : "2018-04-28T10:10:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ================================================================================\n\n# == Win32 is default behaviour use the LibPack copied in Source tree ============\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --------------------------------------------------------------------------------\n\n# General includes \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# OpenGL\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Python\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# XercesC\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Boost\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Zlib\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# SMESH\n\n#set(SMESH_INCLUDE_DIR ${FREECAD_LIBPACK_DIR}/include/smesh)\n\n#set(SMESH_LIBRARIES\n\n#    StdMeshers.lib\n\n#    MEFISTO2.lib\n\n#    SMESH.lib\n\n#    DriverUNV.lib\n\n#    SMESHDS.lib\n\n#    DriverSTL.lib\n\n#    DriverDAT.lib\n\n#    Driver.lib\n\n#    SMDS.lib\n\n#)\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Coin3D\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# QT\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#SET(_QT4_DOING_OPTIONS FALSE)\n",
        "Line" : 166,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "#  IF (\"${_currentArg}\" STREQUAL \"OPTIONS\")\n\n#\tSET(_QT4_DOING_OPTIONS TRUE)\n\n#  ELSE (\"${_currentArg}\" STREQUAL \"OPTIONS\")\n\n#\tIF(_QT4_DOING_OPTIONS) \n\n#\t  LIST(APPEND ${_qt4_options} \"${_currentArg}\")\n\n#\tELSE(_QT4_DOING_OPTIONS)\n",
        "Line" : 168,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "#\tENDIF(_QT4_DOING_OPTIONS)\n\n#  ENDIF (\"${_currentArg}\" STREQUAL \"OPTIONS\")\n",
        "Line" : 175,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# macro used to create the names of output files preserving relative dirs\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# This is a special version of the built in macro qt4_wrap_cpp\n\n# It is required since moc'ed files are now included instead of being added to projects directly\n\n# It adds a reverse dependency to solve this\n\n# This has the unfortunate side effect that some files are always rebuilt\n\n# There is probably a cleaner solution than this\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# fixes bug 0000585: bug with boost 1.48\n",
        "Line" : 229,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "#  parse file for dependencies \n\n#  all files are absolute paths or relative to the location of the qrc file\n",
        "Line" : 254,
        "CharPositionInLine" : 3
      },
      "17" : {
        "Text" : "# SoQt\n",
        "Line" : 294,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# OpenCV\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# NGLIB (NetGen)\n",
        "Line" : 344,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Pointscloud library\n",
        "Line" : 358,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# FreeType\n",
        "Line" : 499,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#  SHIBOKEN_INCLUDE_DIR        - Directories to include to use SHIBOKEN\n\n#  SHIBOKEN_LIBRARY            - Files to link against to use SHIBOKEN\n\n#  SHIBOKEN_BINARY             - Executable name\n",
        "Line" : 517,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#  PYSIDE_INCLUDE_DIR   - Directories to include to use PySide\n\n#  PYSIDE_LIBRARY       - Files to link against to use PySide\n\n#  PYSIDE_PYTHONPATH    - Path to where the PySide Python module files could be found\n\n#  PYSIDE_TYPESYSTEMS   - Type system files that should be used by other bindings extending PySide\n",
        "Line" : 525,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24
    },
    "cMake/UseLibPack6x.cmake" : {
      "ObjectId" : "ef7e4af79d96613e25bb5f49abf32f09dede28e0",
      "LastModified" : "2018-04-28T10:10:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ================================================================================\r\n\n# == Win32 is default behaviour use the LibPack copied in Source tree ============\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --------------------------------------------------------------------------------\r\n\n# General includes \r\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# OpenGL\r\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Python\r\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# XercesC\r\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Boost\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#optimized boost_graph-vc80-mt.lib \r\n",
        "Line" : 30,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "#debug boost_graph-vc80-mt-gd.lib \r\n",
        "Line" : 36,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# Zlib\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# SMESH\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Coin3D\r\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# QT\r\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#SET(_QT4_DOING_OPTIONS FALSE)\r\n",
        "Line" : 148,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "#  IF (\"${_currentArg}\" STREQUAL \"OPTIONS\")\r\n\n#\tSET(_QT4_DOING_OPTIONS TRUE)\r\n\n#  ELSE (\"${_currentArg}\" STREQUAL \"OPTIONS\")\r\n\n#\tIF(_QT4_DOING_OPTIONS) \r\n\n#\t  LIST(APPEND ${_qt4_options} \"${_currentArg}\")\r\n\n#\tELSE(_QT4_DOING_OPTIONS)\r\n",
        "Line" : 150,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "#\tENDIF(_QT4_DOING_OPTIONS)\r\n\n#  ENDIF (\"${_currentArg}\" STREQUAL \"OPTIONS\")\r\n",
        "Line" : 157,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# macro used to create the names of output files preserving relative dirs\r\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# This is a special version of the built in macro qt4_wrap_cpp\r\n\n# It is required since moc'ed files are now included instead of being added to projects directly\r\n\n# It adds a reverse dependency to solve this\r\n\n# This has the unfortunate side effect that some files are always rebuilt\r\n\n# There is probably a cleaner solution than this\r\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# fixes bug 0000585: bug with boost 1.48\r\n",
        "Line" : 211,
        "CharPositionInLine" : 1
      },
      "18" : {
        "Text" : "#  parse file for dependencies \r\n\n#  all files are absolute paths or relative to the location of the qrc file\r\n",
        "Line" : 236,
        "CharPositionInLine" : 3
      },
      "19" : {
        "Text" : "# SoQt\r\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# OpenCV\r\n",
        "Line" : 282,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# OCC\r\n",
        "Line" : 287,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 22
    },
    "cMake/UseLibPack7x.cmake" : {
      "ObjectId" : "8b3849836588ca9840bdd76a078613387940c293",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ================================================================================\r\n\n# == Win32 is default behaviour use the LibPack copied in Source tree ============\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --------------------------------------------------------------------------------\r\n\n# General includes \r\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# OpenGL\r\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Python\r\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# XercesC\r\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Boost\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Zlib\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# SMESH\r\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Coin3D\r\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# QT\r\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#SET(_QT4_DOING_OPTIONS FALSE)\r\n",
        "Line" : 159,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "#  IF (\"${_currentArg}\" STREQUAL \"OPTIONS\")\r\n\n#\tSET(_QT4_DOING_OPTIONS TRUE)\r\n\n#  ELSE (\"${_currentArg}\" STREQUAL \"OPTIONS\")\r\n\n#\tIF(_QT4_DOING_OPTIONS) \r\n\n#\t  LIST(APPEND ${_qt4_options} \"${_currentArg}\")\r\n\n#\tELSE(_QT4_DOING_OPTIONS)\r\n",
        "Line" : 161,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "#\tENDIF(_QT4_DOING_OPTIONS)\r\n\n#  ENDIF (\"${_currentArg}\" STREQUAL \"OPTIONS\")\r\n",
        "Line" : 168,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# macro used to create the names of output files preserving relative dirs\r\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# This is a special version of the built in macro qt4_wrap_cpp\r\n\n# It is required since moc'ed files are now included instead of being added to projects directly\r\n\n# It adds a reverse dependency to solve this\r\n\n# This has the unfortunate side effect that some files are always rebuilt\r\n\n# There is probably a cleaner solution than this\r\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# fixes bug 0000585: bug with boost 1.48\r\n",
        "Line" : 222,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "#  parse file for dependencies \r\n\n#  all files are absolute paths or relative to the location of the qrc file\r\n",
        "Line" : 247,
        "CharPositionInLine" : 3
      },
      "17" : {
        "Text" : "# SoQt\r\n",
        "Line" : 287,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# OpenCV\r\n",
        "Line" : 293,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# OCC\r\n",
        "Line" : 298,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "cMake/UseLibPack8x.cmake" : {
      "ObjectId" : "5ea79417d043c79a81106606d8b69ead79c00f1a",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ================================================================================\r\n\n# == Win32 is default behaviour use the LibPack copied in Source tree ============\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --------------------------------------------------------------------------------\r\n\n# General includes \r\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# OpenGL\r\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Python\r\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# XercesC\r\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Boost\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Zlib\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# SMESH\r\n\n#set(SMESH_INCLUDE_DIR ${FREECAD_LIBPACK_DIR}/include/smesh)\r\n\n#set(SMESH_LIBRARIES   \r\n\n#\toptimized  StdMeshers.lib\r\n\n#    optimized  MEFISTO2.lib\r\n\n#\toptimized  SMESH.lib\r\n\n#\toptimized  DriverUNV.lib\r\n\n#\toptimized  SMESHDS.lib\r\n\n#\toptimized  NETGENPlugin.lib\r\n\n#\toptimized  DriverSTL.lib\r\n\n#\toptimized  DriverDAT.lib\r\n\n#\toptimized  Driver.lib\r\n\n#\toptimized  SMDS.lib\r\n\n#)\r\n\n#set(SMESH_DEBUG_LIBRARIES   \r\n\n#\tdebug  StdMeshersd.lib\r\n\n#\tdebug  MEFISTO2d.lib\r\n\n#\tdebug  SMESHd.lib\r\n\n#\tdebug  DriverUNVd.lib\r\n\n#\tdebug  SMESHDSd.lib\r\n\n#\tdebug  NETGENPlugind.lib\r\n\n#\tdebug  DriverSTLd.lib\r\n\n#\tdebug  DriverDATd.lib\r\n\n#\tdebug  Driverd.lib\r\n\n#\tdebug  SMDSd.lib\r\n\n#) \r\n\n#set(SMESH_FOUND TRUE) \r\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Coin3D\r\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# QT\r\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#  SHIBOKEN_INCLUDE_DIR        - Directories to include to use SHIBOKEN\r\n\n#  SHIBOKEN_LIBRARY            - Files to link against to use SHIBOKEN\r\n\n#  SHIBOKEN_BINARY             - Executable name\r\n",
        "Line" : 167,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "#  PYSIDE_INCLUDE_DIR   - Directories to include to use PySide\r\n\n#  PYSIDE_LIBRARY       - Files to link against to use PySide\r\n\n#  PYSIDE_PYTHONPATH    - Path to where the PySide Python module files could be found\r\n\n#  PYSIDE_TYPESYSTEMS   - Type system files that should be used by other bindings extending PySide\r\n",
        "Line" : 175,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "#SET(PYSIDE_PYTHONPATH  ${FREECAD_LIBPACK_DIR}/pyside/Lib/site-packages)\r\n\n#SET(PYSIDE_TYPESYSTEMS ${FREECAD_LIBPACK_DIR}/pyside/share/PySide/typesystems)\r\n",
        "Line" : 182,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "#SET(_QT4_DOING_OPTIONS FALSE)\r\n",
        "Line" : 189,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "#  IF (\"${_currentArg}\" STREQUAL \"OPTIONS\")\r\n\n#\tSET(_QT4_DOING_OPTIONS TRUE)\r\n\n#  ELSE (\"${_currentArg}\" STREQUAL \"OPTIONS\")\r\n\n#\tIF(_QT4_DOING_OPTIONS) \r\n\n#\t  LIST(APPEND ${_qt4_options} \"${_currentArg}\")\r\n\n#\tELSE(_QT4_DOING_OPTIONS)\r\n",
        "Line" : 191,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "#\tENDIF(_QT4_DOING_OPTIONS)\r\n\n#  ENDIF (\"${_currentArg}\" STREQUAL \"OPTIONS\")\r\n",
        "Line" : 198,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "# macro used to create the names of output files preserving relative dirs\r\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# This is a special version of the built in macro qt4_wrap_cpp\r\n\n# It is required since moc'ed files are now included instead of being added to projects directly\r\n\n# It adds a reverse dependency to solve this\r\n\n# This has the unfortunate side effect that some files are always rebuilt\r\n\n# There is probably a cleaner solution than this\r\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# fixes bug 0000585: bug with boost 1.48\r\n",
        "Line" : 252,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "#  parse file for dependencies \r\n\n#  all files are absolute paths or relative to the location of the qrc file\r\n",
        "Line" : 277,
        "CharPositionInLine" : 3
      },
      "20" : {
        "Text" : "# SoQt\r\n",
        "Line" : 317,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# OpenCV\r\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# NGLIB (NetGen)\r\n",
        "Line" : 328,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# OCC\r\n",
        "Line" : 343,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# FreeType\r\n",
        "Line" : 426,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "cMake/UseLibPack9x.cmake" : {
      "ObjectId" : "caca2fdcbc77b2c9295526250e26551e17fe007f",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ================================================================================\n\n# == Win32 is default behaviour use the LibPack copied in Source tree ============\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --------------------------------------------------------------------------------\n\n# General includes \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# OpenGL\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Python\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# XercesC\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Boost\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Zlib\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# SMESH\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Coin3D\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# QT\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#SET(_QT4_DOING_OPTIONS FALSE)\n",
        "Line" : 174,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "#  IF (\"${_currentArg}\" STREQUAL \"OPTIONS\")\n\n#\tSET(_QT4_DOING_OPTIONS TRUE)\n\n#  ELSE (\"${_currentArg}\" STREQUAL \"OPTIONS\")\n\n#\tIF(_QT4_DOING_OPTIONS) \n\n#\t  LIST(APPEND ${_qt4_options} \"${_currentArg}\")\n\n#\tELSE(_QT4_DOING_OPTIONS)\n",
        "Line" : 176,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "#\tENDIF(_QT4_DOING_OPTIONS)\n\n#  ENDIF (\"${_currentArg}\" STREQUAL \"OPTIONS\")\n",
        "Line" : 183,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# macro used to create the names of output files preserving relative dirs\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# This is a special version of the built in macro qt4_wrap_cpp\n\n# It is required since moc'ed files are now included instead of being added to projects directly\n\n# It adds a reverse dependency to solve this\n\n# This has the unfortunate side effect that some files are always rebuilt\n\n# There is probably a cleaner solution than this\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# fixes bug 0000585: bug with boost 1.48\n",
        "Line" : 237,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "#  parse file for dependencies \n\n#  all files are absolute paths or relative to the location of the qrc file\n",
        "Line" : 262,
        "CharPositionInLine" : 3
      },
      "17" : {
        "Text" : "# SoQt\n",
        "Line" : 302,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# OpenCV\n",
        "Line" : 308,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# NGLIB (NetGen)\n",
        "Line" : 313,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# OCC\n\n#set(OCC_INCLUDE_DIR C:/Projects/LibPack/oce-0.10.0/include/oce)\n\n#set(OCC_LIBRARY_DIR C:/Projects/LibPack/oce-0.10.0/Win64/lib)\n\n#set(OCC_LIBRARIES\n\n#    ${OCC_LIBRARY_DIR}/TKFillet.lib\n\n#    ${OCC_LIBRARY_DIR}/TKMesh.lib\n\n#    ${OCC_LIBRARY_DIR}/TKernel.lib\n\n#    ${OCC_LIBRARY_DIR}/TKG2d.lib\n\n#    ${OCC_LIBRARY_DIR}/TKG3d.lib\n\n#    ${OCC_LIBRARY_DIR}/TKMath.lib\n\n#    ${OCC_LIBRARY_DIR}/TKIGES.lib\n\n#    ${OCC_LIBRARY_DIR}/TKSTL.lib\n\n#    ${OCC_LIBRARY_DIR}/TKShHealing.lib\n\n#    ${OCC_LIBRARY_DIR}/TKXSBase.lib\n\n#    ${OCC_LIBRARY_DIR}/TKBool.lib\n\n#    ${OCC_LIBRARY_DIR}/TKBO.lib\n\n#    ${OCC_LIBRARY_DIR}/TKBRep.lib\n\n#    ${OCC_LIBRARY_DIR}/TKTopAlgo.lib\n\n#    ${OCC_LIBRARY_DIR}/TKGeomAlgo.lib\n\n#    ${OCC_LIBRARY_DIR}/TKGeomBase.lib\n\n#    ${OCC_LIBRARY_DIR}/TKOffset.lib\n\n#    ${OCC_LIBRARY_DIR}/TKPrim.lib\n\n#    ${OCC_LIBRARY_DIR}/TKSTEP.lib\n\n#    ${OCC_LIBRARY_DIR}/TKSTEPBase.lib\n\n#    ${OCC_LIBRARY_DIR}/TKSTEPAttr.lib\n\n#    ${OCC_LIBRARY_DIR}/TKHLR.lib\n\n#    ${OCC_LIBRARY_DIR}/TKFeat.lib\n\n#)\n\n#set(OCC_OCAF_LIBRARIES\n\n#    ${OCC_LIBRARY_DIR}/TKCAF.lib\n\n#    ${OCC_LIBRARY_DIR}/TKXCAF.lib\n\n#    ${OCC_LIBRARY_DIR}/TKLCAF.lib\n\n#    ${OCC_LIBRARY_DIR}/TKXDESTEP.lib\n\n#    ${OCC_LIBRARY_DIR}/TKXDEIGES.lib\n\n#)\n",
        "Line" : 326,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# FreeType\n",
        "Line" : 438,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#  SHIBOKEN_INCLUDE_DIR        - Directories to include to use SHIBOKEN\n\n#  SHIBOKEN_LIBRARY            - Files to link against to use SHIBOKEN\n\n#  SHIBOKEN_BINARY             - Executable name\n",
        "Line" : 456,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#  PYSIDE_INCLUDE_DIR   - Directories to include to use PySide\n\n#  PYSIDE_LIBRARY       - Files to link against to use PySide\n\n#  PYSIDE_PYTHONPATH    - Path to where the PySide Python module files could be found\n\n#  PYSIDE_TYPESYSTEMS   - Type system files that should be used by other bindings extending PySide\n",
        "Line" : 464,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Pointscloud library\n",
        "Line" : 475,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "cMake/UseLibPackCLbundler.cmake" : {
      "ObjectId" : "ec0aef8a2fe838af827f05f1bd1beed4e4ff6451",
      "LastModified" : "2019-03-31T11:13:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(PYTHON_EXECUTABLE ${FREECAD_LIBPACK_DIR}/bin/python.exe CACHE FILEPATH \"\" FORCE)\n\n#set(PYTHON_LIBRARY ${FREECAD_LIBPACK_DIR}/lib/python27.lib CACHE FILEPATH \"\" FORCE)\n\n#set(PYTHON_DEBUG_LIBRARY ${FREECAD_LIBPACK_DIR}/lib/python27_d.lib CACHE FILEPATH \"\" FORCE)\n\n#set(PYTHON_INCLUDE_DIR ${FREECAD_LIBPACK_DIR}/include/python2.7 CACHE PATH \"\" FORCE)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# default Qt5 stuff\n\n# Set paths to cmake config files for each Qt module\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cMake/UseLibPackCustom.cmake" : {
      "ObjectId" : "f0b30388478c0a1c6944f3592401c6a0b231a8b6",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ================================================================================\r\n\n# == Win32 is default behaviour use the LibPack copied in Source tree ============\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --------------------------------------------------------------------------------\r\n\n# General includes \r\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# OpenGL\r\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Python\r\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# XercesC\r\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Boost\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Zlib\r\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# SMESH\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Coin3D\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# QT\r\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#SET(_QT4_DOING_OPTIONS FALSE)\r\n",
        "Line" : 179,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "#  IF (\"${_currentArg}\" STREQUAL \"OPTIONS\")\r\n\n#\tSET(_QT4_DOING_OPTIONS TRUE)\r\n\n#  ELSE (\"${_currentArg}\" STREQUAL \"OPTIONS\")\r\n\n#\tIF(_QT4_DOING_OPTIONS) \r\n\n#\t  LIST(APPEND ${_qt4_options} \"${_currentArg}\")\r\n\n#\tELSE(_QT4_DOING_OPTIONS)\r\n",
        "Line" : 181,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "#\tENDIF(_QT4_DOING_OPTIONS)\r\n\n#  ENDIF (\"${_currentArg}\" STREQUAL \"OPTIONS\")\r\n",
        "Line" : 188,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# macro used to create the names of output files preserving relative dirs\r\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# This is a special version of the built in macro qt4_wrap_cpp\r\n\n# It is required since moc'ed files are now included instead of being added to projects directly\r\n\n# It adds a reverse dependency to solve this\r\n\n# This has the unfortunate side effect that some files are always rebuilt\r\n\n# There is probably a cleaner solution than this\r\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# fixes bug 0000585: bug with boost 1.48\r\n",
        "Line" : 242,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "#  parse file for dependencies \r\n\n#  all files are absolute paths or relative to the location of the qrc file\r\n",
        "Line" : 267,
        "CharPositionInLine" : 3
      },
      "17" : {
        "Text" : "# SoQt\r\n",
        "Line" : 307,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# OpenCV\r\n",
        "Line" : 313,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# NGLIB (NetGen)\r\n",
        "Line" : 318,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# OCC\r\n\n#set(OCC_INCLUDE_DIR C:/Projects/LibPack/oce-0.10.0/include/oce)\r\n\n#set(OCC_LIBRARY_DIR C:/Projects/LibPack/oce-0.10.0/Win64/lib)\r\n\n#set(OCC_LIBRARIES\r\n\n#    ${OCC_LIBRARY_DIR}/TKFillet.lib\r\n\n#    ${OCC_LIBRARY_DIR}/TKMesh.lib\r\n\n#    ${OCC_LIBRARY_DIR}/TKernel.lib\r\n\n#    ${OCC_LIBRARY_DIR}/TKG2d.lib\r\n\n#    ${OCC_LIBRARY_DIR}/TKG3d.lib\r\n\n#    ${OCC_LIBRARY_DIR}/TKMath.lib\r\n\n#    ${OCC_LIBRARY_DIR}/TKIGES.lib\r\n\n#    ${OCC_LIBRARY_DIR}/TKSTL.lib\r\n\n#    ${OCC_LIBRARY_DIR}/TKShHealing.lib\r\n\n#    ${OCC_LIBRARY_DIR}/TKXSBase.lib\r\n\n#    ${OCC_LIBRARY_DIR}/TKBool.lib\r\n\n#    ${OCC_LIBRARY_DIR}/TKBO.lib\r\n\n#    ${OCC_LIBRARY_DIR}/TKBRep.lib\r\n\n#    ${OCC_LIBRARY_DIR}/TKTopAlgo.lib\r\n\n#    ${OCC_LIBRARY_DIR}/TKGeomAlgo.lib\r\n\n#    ${OCC_LIBRARY_DIR}/TKGeomBase.lib\r\n\n#    ${OCC_LIBRARY_DIR}/TKOffset.lib\r\n\n#    ${OCC_LIBRARY_DIR}/TKPrim.lib\r\n\n#    ${OCC_LIBRARY_DIR}/TKSTEP.lib\r\n\n#    ${OCC_LIBRARY_DIR}/TKSTEPBase.lib\r\n\n#    ${OCC_LIBRARY_DIR}/TKSTEPAttr.lib\r\n\n#    ${OCC_LIBRARY_DIR}/TKHLR.lib\r\n\n#    ${OCC_LIBRARY_DIR}/TKFeat.lib\r\n\n#)\r\n\n#set(OCC_OCAF_LIBRARIES\r\n\n#    ${OCC_LIBRARY_DIR}/TKCAF.lib\r\n\n#    ${OCC_LIBRARY_DIR}/TKXCAF.lib\r\n\n#    ${OCC_LIBRARY_DIR}/TKLCAF.lib\r\n\n#    ${OCC_LIBRARY_DIR}/TKXDESTEP.lib\r\n\n#    ${OCC_LIBRARY_DIR}/TKXDEIGES.lib\r\n\n#)\r\n",
        "Line" : 331,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# FreeType\r\n",
        "Line" : 408,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 22
    },
    "config.h.cmake" : {
      "ObjectId" : "43c8ffce36fad5a33dcab727b5b5e51c63ad0538",
      "LastModified" : "2018-04-28T10:10:55Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/* config.h.  Generated from config.h.cmake by cmake.  */",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/* Define to 1 if you have the <bits/sigset.h> header file. */",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/* Define to 1 if you have the <bstring.h> header file. */",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* Define to 1 if you have the <dlfcn.h> header file. */",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* Define to 1 if you have the <float.h> header file. */",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* Define to 1 if you have the <fstream> header file. */",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/* Define to use GetEnvironmentVariable() instead of getenv() */",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/* define if the GL header should be included as GL/gl.h */",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "/* Define to 1 if you have the <inttypes.h> header file. */",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "/* Define to 1 if you have the <iomanip> header file. */",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "/* Define to 1 if you have the <iomanip.h> header file. */",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "/* Define to 1 if you have the <ios> header file. */",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "/* Define to 1 if you have the <iostream> header file. */",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "/* Define to 1 if you have the <istream> header file. */",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "/* Define to 1 if you have the <libc.h> header file. */",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "/* Define to 1 if you have the <limits.h> header file. */",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "/* Define to 1 if you have the <memory.h> header file. */",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "/* define if the compiler implements namespaces */",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "/* Define to 1 if you have the <ostream> header file. */",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "/* Define this to 1 if operator==(QGLFormat&, QGLFormat&) is available */",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "/* Define this to 1 if QGLFormat::setOverlay() is available */",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "/* Define this to 1 if QGLWidget::setAutoBufferSwap() is available */",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "/* Define this if Qt::Keypad is available */",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "/* Define this if QWidget::showFullScreen() is available */",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "/* Define to 1 if you have the <siginfo.h> header file. */",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "/* Define to 1 if you have the <sstream> header file. */",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "/* Define to 1 if you have the <stdint.h> header file. */",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "/* Define to 1 if you have the <stdlib.h> header file. */",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "/* define if the compiler has std compliant iostream library */",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "/* Define to 1 if you have the <strings.h> header file. */",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "/* Define to 1 if you have the <string.h> header file. */",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "/* Define to 1 if you have the <sys/dir.h> header file. */",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "/* Define to 1 if you have the <sys/filio.h> header file. */",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "/* Define to 1 if you have the <sys/mman.h> header file. */",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "/* Define to 1 if you have the <sys/select.h> header file. */",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "/* Define to 1 if you have the <sys/stat.h> header file. */",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "/* Define to 1 if you have the <sys/types.h> header file. */",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "/* Define to 1 if you have the <unistd.h> header file. */",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "/* Define to 1 if you have the <values.h> header file. */",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "/* Name of package */",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "/* Define to the address where bug reports for this package should be sent. */",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "/* Define to the full name of this package. */",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "/* Define to the full name and version of this package. */",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "/* Define to the one symbol short name of this package. */",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "/* Define to the version of this package. */",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "/* Define to 1 if you have the ANSI C header files. */",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "/* Define to 1 to build zipios++ sources with iostream. */",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "/* Version number of package */",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "/* Define to 1 if the X Window System is missing or not being used. */\n/* #cmakedefine X_DISPLAY_MISSING */",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 49
    },
    "data/CMakeLists.txt" : {
      "ObjectId" : "fa8e5aa310bb622d60e39eec4c412bdc5ed519cf",
      "LastModified" : "2018-04-28T10:10:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "data/examples/CMakeLists.txt" : {
      "ObjectId" : "44d9e6908e6f81ce00edcfdebc4fd8b7f7e9f88b",
      "LastModified" : "2018-04-28T10:10:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# 0001097: CMake stops with error \"Circular ... <- ... dependency dropped.\"\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# pivy\n",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# shiboken\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# PySide\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# PySide tools\n",
        "Line" : 69,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Python extension modules\n",
        "Line" : 104,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "src/3rdParty/CMakeLists.txt" : {
      "ObjectId" : "b509ba78146c9194af485d2018663c6650ab10ab",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build SalomeMesh for all Platforms since heavily patched\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/3rdParty/libkdtree/CMakeLists.txt" : {
      "ObjectId" : "a84b167ccdcaf9cf9034dbe7a5f276c859140407",
      "LastModified" : "2018-04-28T10:10:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Maximum warning level\n",
        "Line" : 8,
        "CharPositionInLine" : 3
      },
      "1" : {
        "Text" : "# Be strict about warnings... make them errors\n",
        "Line" : 11,
        "CharPositionInLine" : 3
      },
      "2" : {
        "Text" : "# Detect 64-bit portability issues\n",
        "Line" : 14,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "# Maximum warning level\n",
        "Line" : 19,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# turn on debugging\n",
        "Line" : 22,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 5
    },
    "src/3rdParty/libkdtree/examples/CMakeLists.txt" : {
      "ObjectId" : "9b4cc4ff0c4d8e67102aaf7a00816f86de1e67bb",
      "LastModified" : "2018-04-28T10:10:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/3rdParty/libkdtree/python-bindings/CMakeLists.txt" : {
      "ObjectId" : "4200cf4110b18e37586eac6105ca9d50c5aab664",
      "LastModified" : "2018-04-28T10:10:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build the _kdtree python module\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copy the test file into the build dir\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/3rdParty/salomesmesh/CMakeLists.txt" : {
      "ObjectId" : "b3a2ecdd832a79778cdc27a6c504ca8f274ada00",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# SGEOM cmake build file\n\n#PROJECT(SMESH Fortran CXX)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# see main CMakeLists.txt of FreeCAD\n",
        "Line" : 4,
        "CharPositionInLine" : 28
      },
      "2" : {
        "Text" : "#Universal C runtime introduced in VS 2015 (cl version 19)\n",
        "Line" : 76,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#SET(CMAKE_BUILD_TYPE \"Release\") # By default, build in release mode\n\n#SET(BUILD_SHARED_LIBS ON)\n\n#SET(LIBRARY_OUTPUT_PATH cmake-build)\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})\n\n#INCLUDE_DIRECTORIES(inc)\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#############\n\n# FindBoost #\n\n#############\n\n#FIND_PACKAGE(Boost REQUIRED)\n\n#MESSAGE(\"-- Boost found: ${Boost_FOUND}\")\n\n#INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIR})\n\n#MESSAGE(\"Popo: ${Boost_INCLUDE_DIR}\")\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "########################################\n\n# OpenCASCADE include and lib location #\n\n########################################\n\n# Find OpenCASCADE library, set include and lib path\n\n#SET(OCC_INCLUDE_PATH ${OCC_INCLUDE_DIR})\n\n#SET(OCC_LIB_PATH ${OCC_LIBRARY_DIR})\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Tells CMake where are the required headers\n\n#INCLUDE_DIRECTORIES(${OCC_INCLUDE_PATH})\n\n#LINK_DIRECTORIES(${OCC_LIB_PATH})\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "############################\n\n# Check 32/64 bit platform #\n\n############################\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# It is 64bit, 32 bit systems returns 4\n",
        "Line" : 133,
        "CharPositionInLine" : 40
      },
      "10" : {
        "Text" : "# 0001715: Mefisto Mesh Fails since translated by f2c\n\n#    ADD_DEFINITIONS(-DPCLINUX64)\n",
        "Line" : 136,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "#MESSAGE(\"-- Build 64bit\")\n",
        "Line" : 139,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "#MESSAGE(\"-- Build 32bit\")\n",
        "Line" : 141,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "######################################################\n\n# Configure Build settings according to the platform #\n\n######################################################\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Same settings are used for both MacOSX and Unix/Linux\n",
        "Line" : 148,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "######### Windows ###########\n\n#MESSAGE(\"-- Windows system detected\")\n",
        "Line" : 152,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "#########\n\n# SMDS #\n\n#########\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "##########\n\n# Driver #\n\n##########\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#IF(WIN32)\n\n#  SET_TARGET_PROPERTIES(Driver PROPERTIES COMPILE_FLAGS \"-DMESHDRIVER_EXPORTS\")\n\n#ENDIF(WIN32)\n\n#IF(MINGW)\n\n#  SET_TARGET_PROPERTIES(Driver PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)\n\n#ENDIF(MINGW)\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#############\n\n# DriverSTL #\n\n#############\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#TARGET_LINK_LIBRARIES(DriverSTL TKernel TKMath Driver SMDS)\n\n#IF(WIN32)\n\n#  SET_TARGET_PROPERTIES(DriverSTL PROPERTIES COMPILE_FLAGS \"-DMESHDRIVERSTL_EXPORTS\")\n\n#ENDIF(WIN32)\n\n#IF(MINGW)\n\n#  SET_TARGET_PROPERTIES(DriverSTL PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)\n\n#ENDIF(MINGW)\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#############\n\n# DriverDAT #\n\n#############\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#IF(WIN32)\n\n# SET_TARGET_PROPERTIES(DriverDAT PROPERTIES COMPILE_FLAGS \"-DMESHDRIVERDAT_EXPORTS\")\n\n#ENDIF(WIN32)\n\n#IF(MINGW)\n\n#  SET_TARGET_PROPERTIES(DriverDAT PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)\n\n#ENDIF(MINGW)\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#############\n\n# DriverUNV #\n\n#############\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#IF(WIN32)\n\n#  SET_TARGET_PROPERTIES(DriverUNV PROPERTIES COMPILE_FLAGS \"-DMESHDRIVERUNV_EXPORTS\")\n\n#ENDIF(WIN32)\n\n#IF(MINGW)\n\n#  SET_TARGET_PROPERTIES(DriverUNV PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)\n\n#ENDIF(MINGW)\n",
        "Line" : 251,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "###########\n\n# SMESHDS #\n\n###########\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#IF(MINGW)\n\n#  SET_TARGET_PROPERTIES(SMESHDS PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)\n\n#ENDIF(MINGW)\n",
        "Line" : 268,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#########\n\n# SMESH #\n\n#########\n",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#IF(WIN32)\n",
        "Line" : 285,
        "CharPositionInLine" : 1
      },
      "29" : {
        "Text" : "#  SET_TARGET_PROPERTIES(SMESH PROPERTIES COMPILE_FLAGS \"-DSMESHimpl_EXPORTS -DSMESHCONTROLS_EXPORTS\")\n\n#ENDIF(WIN32)\n\n#IF(MINGW)\n\n#  SET_TARGET_PROPERTIES(SMESH PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)\n\n#ENDIF(MINGW)\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "##############\n\n# MEFISTO2   #\n\n##############\n\n#if (MSVC)\n",
        "Line" : 293,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#IF(CMAKE_SIZEOF_VOID_P EQUAL 8)\n\n#    # Mefisto2f.lib was built using f2c which created\n\n#    # all function names with an '_' at the end.\n\n#    FILE(GLOB MEFISTO2_source_files\n\n#        src/MEFISTO2/*.cpp\n\n#        inc/Rn.h\n\n#        inc/aptrte.h\n\n#    )\n\n#ELSE(CMAKE_SIZEOF_VOID_P EQUAL 8)\n\n#    FILE(GLOB MEFISTO2_source_files\n\n#        src/MEFISTO2/*.cpp\n\n#        src/MEFISTO2/MEFISTO2F.def\n\n#        inc/Rn.h\n\n#        inc/aptrte.h\n\n#    )\n\n#ENDIF(CMAKE_SIZEOF_VOID_P EQUAL 8)\n",
        "Line" : 297,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "#else(MSVC)\n\n#    FILE(GLOB MEFISTO2_source_files\n\n#        src/MEFISTO2/*.cpp\n\n#        src/MEFISTO2/trte.f\n\n#        inc/Rn.h\n\n#        inc/aptrte.h\n\n#    )\n\n#endif(MSVC)\n",
        "Line" : 321,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#if(MSVC)\n",
        "Line" : 333,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# in case of Windows link the prebuild Fortran lib\n",
        "Line" : 334,
        "CharPositionInLine" : 50
      },
      "35" : {
        "Text" : "#    if(CMAKE_SIZEOF_VOID_P EQUAL 8)\n\n#        set_target_properties(MEFISTO2 PROPERTIES COMPILE_FLAGS \"-DMEFISTO2D_EXPORTS\")\n\n#    else(CMAKE_SIZEOF_VOID_P EQUAL 8)\n\n#        set_target_properties(MEFISTO2 PROPERTIES COMPILE_FLAGS \"-DMEFISTO2D_EXPORTS -D__WATCOM__\")\n\n#    endif(CMAKE_SIZEOF_VOID_P EQUAL 8)\n\n#elseif(MINGW)\n\n#    TARGET_LINK_LIBRARIES(MEFISTO2 ${SMESH_LIBS} gfortran)\n\n#    set_target_properties(MEFISTO2 PROPERTIES COMPILE_FLAGS \"-DMEFISTO2D_EXPORTS\")\n\n#else(MSVC)\n\n#    TARGET_LINK_LIBRARIES(MEFISTO2 ${SMESH_LIBS} gfortran)\n\n#    set_target_properties(MEFISTO2 PROPERTIES COMPILE_FLAGS \"${MEFISTO2_CFLAGS}\")\n\n#endif(MSVC)\n",
        "Line" : 336,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "##############\n\n# StdMeshers #\n\n##############\n",
        "Line" : 350,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#SET(StdMeshers_CFLAGS \"\")\n\n#IF(WIN32)\n\n#  SET(StdMeshers_CFLAGS \"-DSTDMESHERS_EXPORTS -DMEFISTO2D_EXPORTS\")\n\n#ENDIF(WIN32)\n\n#IF(MINGW)\n\n#  SET_TARGET_PROPERTIES(StdMeshers PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)\n\n#ENDIF(MINGW)\n",
        "Line" : 365,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Disable for all other compilers but MSVC\n",
        "Line" : 373,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "################\n\n# NETGENPlugin #\n\n################\n",
        "Line" : 376,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Version >= 6.2\n",
        "Line" : 389,
        "CharPositionInLine" : 48
      },
      "41" : {
        "Text" : "# Standard std=c++1y could work aswell\n",
        "Line" : 391,
        "CharPositionInLine" : 67
      },
      "42" : {
        "Text" : "#IF(WIN32)\n\n#  SET_TARGET_PROPERTIES(SMESH PROPERTIES COMPILE_FLAGS \"-DNETGENPluginimpl_EXPORTS \")\n\n#ENDIF(WIN32)\n\n#IF(MINGW)\n\n#  SET_TARGET_PROPERTIES(SMESH PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)\n\n#ENDIF(MINGW)\n",
        "Line" : 396,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 43
    },
    "src/App/CMakeLists.txt" : {
      "ObjectId" : "703d48070b3f3a393820aa11ac7461efef80e230",
      "LastModified" : "2019-04-15T11:31:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This causes some problems with the resource files to be found, especially with the StartPage\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#if you want to use the old DAG structure uncomment this line\n\n#add_definitions(-DUSE_OLD_DAG)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# -----------------------------------------------------------------------------\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#write relevant cmake variables to a file for later access with python. Exported are all variables \n\n#starting with BUILD. As the variable only exists if the user set it to ON a dict is useless, we\n\n#use a python list for export.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# -----------------------------------------------------------------------------\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The document stuff\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The property stuff\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "src/Base/CMakeLists.txt" : {
      "ObjectId" : "46a1f73023b8c5c28a7e77272c6feade4690797c",
      "LastModified" : "2019-04-15T11:31:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Universal C runtime introduced in VS 2015 (cl version 19)\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# needed for OpenSUSE\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Create the file swigpyrun.hh and then compare with the file swigpyrun.h.\n\n# If the files are different or if swigpyrun.h doesn't exist then copy swigpyrun.hh.\n\n# This is to avoid to having to build the target each time cmake configure is executed.\n",
        "Line" : 93,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Use external zipios++ if specified.\n",
        "Line" : 365,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/Build/CMakeLists.txt" : {
      "ObjectId" : "403ffcb2c42d3d3f5ba0f4450029edeed91d4cef",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If the sources don't include a Version.h then create one\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# as fallback if Version.h isn't created for any reason\r\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/Build/Version.h.cmake" : {
      "ObjectId" : "b9a172caa64c927fd262b6df3892d4a07af8eb9e",
      "LastModified" : "2018-04-28T10:10:55Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "// Version Number",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "// test: $Format:Hash (%H), Date: %ci$",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "a2eb27a4eb936422ed0d2942b31c35b697221ad2",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Doc/CMakeLists.txt" : {
      "ObjectId" : "5b15d1284781a7126c0fdb7a402d537c348fd370",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# note: this test is obsolete if DevDoc target is used\r\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# directory order seems important for correct macro expansion\r\n\n# (files containing macros definitions must be parsed before the files using them)\r\n",
        "Line" : 53,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# exclude some subdirectories\r\n\n# src/Tools : content not relevant ?\r\n\n# src/3rdParty/CxImage : Windows thumbnailer\r\n",
        "Line" : 73,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# deprecated modules\r\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Try to get some git information about the source tree\r\n",
        "Line" : 99,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# reconfigure to have all sources files generated from xml, whatever build options were\r\n\n# generate source documentation\r\n\n# delete CMakeCache to reset to default build options next time \r\n",
        "Line" : 122,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# lightweight version for the web\r\n",
        "Line" : 131,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "src/Doc/sphinx/Makefile" : {
      "ObjectId" : "750032ae50bb5f1f9f4535592ca66d9375c7f4ca",
      "LastModified" : "2018-04-28T10:10:55Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Internal variables.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/Ext/CMakeLists.txt" : {
      "ObjectId" : "7b7a5a13a1657494c41a414521584a3f55c07cdf",
      "LastModified" : "2018-04-28T10:10:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# this directory is the entry point for namespace modules. Any package\n\n# installed to a directory \"freecad\" which is in sys.path can be imported\n\n# with \"from freecad import package\" and is checked for a init_gui.py \n\n# module, which is imported at startup. (FreeCADGuiInit.py)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/Ext/freecad/CMakeLists.txt" : {
      "ObjectId" : "4d0420aac47778f88d783cd7d3062b150a1f9fbf",
      "LastModified" : "2018-04-28T10:10:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Gui/CMakeLists.txt" : {
      "ObjectId" : "40777f87851dbbae4d7c279adb18eb97c09c1414",
      "LastModified" : "2019-04-15T11:31:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_subdirectory(Icons)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The XML files\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The 3D Connexion SDK files\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#SOURCE_GROUP(\"Moc\" FILES ${Gui_MOC_SRCS})\n",
        "Line" : 355,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The command sources\n",
        "Line" : 441,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The dialog sources\n",
        "Line" : 463,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The customize dialog sources\n",
        "Line" : 566,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# The settings dialog sources\n",
        "Line" : 602,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# The dock windows sources\n",
        "Line" : 649,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# The editor sources\n",
        "Line" : 688,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# The help system\n",
        "Line" : 717,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# The i18n sources\n",
        "Line" : 734,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# The property editor\n",
        "Line" : 741,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# The task view\n",
        "Line" : 754,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#SET(Resource_RCS\n\n#   Icons/resource.qrc\n\n#   Language/translation.qrc)\n\n#qt4_add_resources(Resource_SRCS ${Resource_RCS})\n\n#SET(Resource_SRCS\n\n#   ${Resource_SRCS}\n\n#   Icons/resource.qrc\n\n#   Language/translation.qrc\n\n#)\n\n#SOURCE_GROUP(\"Resource\" FILES ${Resource_SRCS})\n",
        "Line" : 852,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# The 3d view\n",
        "Line" : 863,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#quarter sources\n",
        "Line" : 909,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# The view provider sources\n",
        "Line" : 936,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# The Inventor sources\n",
        "Line" : 1000,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# The widget sources\n",
        "Line" : 1052,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# The view sources\n",
        "Line" : 1086,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# The workbench sources\n",
        "Line" : 1103,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# The FreeCADGui sources\n",
        "Line" : 1140,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "src/Gui/Quarter/CMakeLists.txt" : {
      "ObjectId" : "45ee147fdda9c0bd3f6a49f36df1505bf3e95a2c",
      "LastModified" : "2018-04-28T10:10:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We R internal\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Generate list of sources and headers for compilation\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find the headers that should be Moc'ed\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Moc both the public and private headers\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Some convenient variables. The inclusion of the headers in the source variable is to force CMake to include the headers in VS project generation.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Ensure export of DLL definitions on Windows\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add some files and filters to make the VS project more hierarchical and practical to work with\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Create the library\n\n# FIXME: Support building as a framework on Mac OS X. kintel 20080707.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#  Install configuration\n\n#\n\n# Quarter will be installed into the directory configured by CMAKE_INSTALL_PREFIX. This\n\n# defaults to /usr/local/ on UNIX and c:/Program Files/Quarter on Windows.\n\n#\n\n# On Windows, the namimg convention is as follows (ripped from the \"Coin\" way of doing stuff):\n\n# Dynamic Release: Quarter.dll and Quarter.lib\n\n# Dynamic Debug: Quarterd.dll and Quarterd.lib\n\n# Static Release: Quarters.lib\n\n# Static Debug: Quartersd.lib\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "src/Gui/Stylesheets/CMakeLists.txt" : {
      "ObjectId" : "3d78cb7a73682d49f36b15bd5109b63ca65eb087",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find all the image files\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/Gui/iisTaskPanel/config.pri" : {
      "ObjectId" : "51d796ac2d92c544d3a2b1c9a6e2e39c719bc2b7",
      "LastModified" : "2018-04-28T10:10:55Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#SUFFIX        = \"snapshot\"\r\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Do not change this line\r\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Choose one of the following two lines to configure the build\r\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#CONFIG += release\t\t\r\n\n#CONFIG += debug\t\t\r\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Configuration for MacOS X\r\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Using gcc\r\n",
        "Line" : 16,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# uncomment this line if you want use xcode\r\n\n# QMAKESPEC=macx-xcode\r\n",
        "Line" : 18,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Choose one of the following two lines to configure the build\r\n\n#LIB_CONFIG = staticlib\r\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "src/Gui/iisTaskPanel/src/src.pro" : {
      "ObjectId" : "361f01992536db4883d4ccc0bf6400feb235e248",
      "LastModified" : "2018-04-28T10:10:55Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "######################################################################\n\n# Automatically generated by qmake (2.01a) ?? ???. 18 20:19:40 2008\n\n######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Input\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/Gui/iisTaskPanel/taskpanel.pro" : {
      "ObjectId" : "a66214eec64f6b185cacc1108af880d6701b6b32",
      "LastModified" : "2018-04-28T10:10:55Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "src/Gui/iisTaskPanel/tests/styles/styles.pro" : {
      "ObjectId" : "bef53dd94593cb282376c6ce4ab7597e8a98f66b",
      "LastModified" : "2018-04-28T10:10:55Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "src/Gui/iisTaskPanel/tests/test/test.pro" : {
      "ObjectId" : "306a9ed5cc4791528257c24523c11bed84e0dcde",
      "LastModified" : "2018-04-28T10:10:55Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "src/Gui/iisTaskPanel/tests/tests.pri" : {
      "ObjectId" : "e3d7e59c31b95328d538a1fc2ad80978c7619e52",
      "LastModified" : "2018-04-28T10:10:55Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "src/Gui/iisTaskPanel/tests/tests.pro" : {
      "ObjectId" : "f453b09eb9428bf5d880a8d1132b4c3d26bb6c3a",
      "LastModified" : "2018-04-28T10:10:55Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "src/MacAppBundle/CMakeLists.txt" : {
      "ObjectId" : "91a56866ad1bdd4560c1963a1ea7fc5baf9e2e97",
      "LastModified" : "2018-04-28T10:10:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#framework\n",
        "Line" : 4,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "#unix\n",
        "Line" : 7,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#qtwebkitwidgets references qtwebkit with a relative path,\n\n#so we need to add its location to the search paths\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#Homebrew installs python dependencies to a site dir in prefix/libexec\n\n#and installs a .pth file containing its path to the HOMEBREW_PREFIX site dir.\n",
        "Line" : 26,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#update the paths of the .pth files copied into the bundle\n",
        "Line" : 40,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# add qt assistant to bundle\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Ensure the actual plugin files are installed instead of symlinks.\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#files installed by homebrew do not have write permission for regular user\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "src/Main/CMakeLists.txt" : {
      "ObjectId" : "bebbc5ebc0db864808f88806255e86318b7191ec",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_defintions(-D_FC_GUI_ENABLED_)\n\n#add_defintions(-DFREECADMAINPY)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "######################## FreeCADMain ########################\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "######################## FreeCADMainCmd ########################\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "######################## FreeCADMainPy ########################\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "######################## FreeCADGuiPy ########################\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Name clash with target \"FreeCADGui\"\n\n# Must be called \"FreeCADGuiPy_d\" and \"FreeCADGuiPy\" to work so override default\n",
        "Line" : 146,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 6
    },
    "src/Mod/AddonManager/CMakeLists.txt" : {
      "ObjectId" : "488eacf4726333ef1ab0a34410e2d3daca08b35a",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/Arch/CMakeLists.txt" : {
      "ObjectId" : "13f3819694bc17cabd46863ad17333788271088c",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/Assembly/App/CMakeLists.txt" : {
      "ObjectId" : "5640dc2b12985a6f9224530968bedfa62b87a5b4",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#${ODE_INCLUDE_DIRS}\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "#${ODE_LIBRARIES}\n",
        "Line" : 27,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#generate_from_xml(PartRefPy)\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#PartRef.cpp\n\n#PartRef.h\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#externalization is not possible for msvc as a stupid bug prevents the function definition resolving\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#PartRefPy.xml\n\n#PartRefPyImp.cpp\n",
        "Line" : 89,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "src/Mod/Assembly/CMakeLists.txt" : {
      "ObjectId" : "7db711b9cc15e6740b934bd9c9430f0438ad4e6c",
      "LastModified" : "2018-04-28T10:10:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/Assembly/Gui/CMakeLists.txt" : {
      "ObjectId" : "4f6ee3f94b06aa1332193c3bda17c209a408ea81",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#${ODE_LIBRARIES}\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "#TaskAssemblyConstraints.h\n\n#TaskDlgAssemblyConstraints.h\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#TaskAssemblyConstraints.ui\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#ViewProviderPartRef.cpp\n\n#ViewProviderPartRef.h\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#TaskDlgAssemblyConstraints.cpp\n\n#TaskDlgAssemblyConstraints.h\n\n#TaskAssemblyConstraints.h\n\n#TaskAssemblyConstraints.cpp\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#qrc_Assembly.cxx\n",
        "Line" : 79,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 6
    },
    "src/Mod/CMakeLists.txt" : {
      "ObjectId" : "a6906e165bca8b24723a1d844499bc0672ddc94d",
      "LastModified" : "2018-04-28T10:10:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_subdirectory(TemplatePyMod)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/Mod/Cam/App/CMakeLists.txt" : {
      "ObjectId" : "1320150f66697e7e602bdd8f81e340c3c4aa7dba",
      "LastModified" : "2018-04-28T10:10:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#${CMAKE_SOURCE_DIR}/src/3rdParty/OCCAdaptMesh/Include\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "#${ATLAS_LIBRARIES}\n",
        "Line" : 30,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "src/Mod/Cam/CMakeLists.txt" : {
      "ObjectId" : "fac0a1a32b3cbaa04ba50703cde60cefbe628902",
      "LastModified" : "2018-04-28T10:10:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/Cam/Gui/CMakeLists.txt" : {
      "ObjectId" : "3fd06786f3ae1abeb0ebc1621dacd8b47f685555",
      "LastModified" : "2018-04-28T10:10:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#OCCAdaptMesh\n",
        "Line" : 31,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 1
    },
    "src/Mod/Complete/CMakeLists.txt" : {
      "ObjectId" : "fc33c960fe5129f66611f8fbca3362c4298bbd65",
      "LastModified" : "2018-04-28T10:10:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/Complete/Gui/CMakeLists.txt" : {
      "ObjectId" : "d4c0a4a680d429bdbf8654ba9cdc068210c1b287",
      "LastModified" : "2018-04-28T10:10:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/Draft/App/CMakeLists.txt" : {
      "ObjectId" : "d801f51d616b6183f886b7fdbd613330586fbe8e",
      "LastModified" : "2018-04-28T10:10:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/Draft/CMakeLists.txt" : {
      "ObjectId" : "01d12775638770f0a3df653f570032ad44c8929a",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/Drawing/App/CMakeLists.txt" : {
      "ObjectId" : "d176c535fcde32fec36f09ca2592bb2b6fff0b3c",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/Drawing/CMakeLists.txt" : {
      "ObjectId" : "c67a314558cc67470f5e02ab9fe4d90037d7a5a0",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/Drawing/Gui/CMakeLists.txt" : {
      "ObjectId" : "2b5c83a4a35110bf988d4c378bb18b677072a450",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/Fem/App/CMakeLists.txt" : {
      "ObjectId" : "a3b59e328e02862ef999dacef4ab64f248f1edac",
      "LastModified" : "2018-04-28T10:10:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/Fem/CMakeLists.txt" : {
      "ObjectId" : "1751731e68302a9fd00f3bfc2de596f2ec24eee4",
      "LastModified" : "2019-04-15T11:31:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# suppress warnings from smesh\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Python non Gui packages and modules\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# install Python packages (for make install)\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Python Gui packages and modules\n",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# install Python packages (for make install)\n",
        "Line" : 305,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "src/Mod/Fem/Gui/CMakeLists.txt" : {
      "ObjectId" : "135dcbe3d307be829364c76eab60998be2fb1f61",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Python modules ui files, they are copied as they are, thus the need not to be added to Fem.qrc\n\n# see https://forum.freecadweb.org/viewtopic.php?f=10&t=25833\n",
        "Line" : 388,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/Mod/Idf/CMakeLists.txt" : {
      "ObjectId" : "7f8ae51787b35873389d8471f30fcbd2009c6162",
      "LastModified" : "2018-04-28T10:10:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/Image/App/CMakeLists.txt" : {
      "ObjectId" : "ce790e55c4b74efb2cddc02e513e08781574d16a",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/Image/CMakeLists.txt" : {
      "ObjectId" : "0921a856a01141231a3ea19b3ba19a30b21a81cf",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/Image/Gui/CMakeLists.txt" : {
      "ObjectId" : "5fd78952d93a3c183d83e1d41f937005aa2b7a1f",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#   ${ImageGui_MOC_SRCS}\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/Mod/Import/App/CMakeLists.txt" : {
      "ObjectId" : "a8a8da6bb85205926ffd2e9c50a8eef581e4326d",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Assembly\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "#ImportOCAFAssembly.cpp\n\n#ImportOCAFAssembly.h\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# AP214e3\n\n# IFC\n\n# IFC 4\n",
        "Line" : 66,
        "CharPositionInLine" : 29
      },
      "CommentCount" : 3
    },
    "src/Mod/Import/CMakeLists.txt" : {
      "ObjectId" : "2e7713840e59692f9de0b70cdaf763b15508ef4e",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#IF (BUILD_GUI)\n\n#    PYSIDE_WRAP_RC(Import_QRC_SRCS Resources/Import.qrc)\n\n#ENDIF (BUILD_GUI)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#ADD_CUSTOM_TARGET(ImportRC ALL\n\n#    SOURCES ${Import_QRC_SRCS}\n\n#)\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#IF (BUILD_GUI)\n\n#    fc_target_copy_resource(ImportRC\n\n#        ${CMAKE_CURRENT_BINARY_DIR}\n\n#        ${CMAKE_BINARY_DIR}/Mod/Import\n\n#        Import_rc.py)\n\n#ENDIF (BUILD_GUI)\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#${Import_QRC_SRCS}\n",
        "Line" : 72,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 4
    },
    "src/Mod/Import/Gui/CMakeLists.txt" : {
      "ObjectId" : "101c7fae57287b7b57d744629b3f97c1ff07ed05",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/Inspection/App/CMakeLists.txt" : {
      "ObjectId" : "e205400f38a32349a8697268cc822f30ec09e80a",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/Inspection/CMakeLists.txt" : {
      "ObjectId" : "7062bb0f5d9bb4bc9c4259a5acaea55a929a53f7",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/Inspection/Gui/CMakeLists.txt" : {
      "ObjectId" : "bb1d7f4b7cc10156cb066844347b5b94e8192a82",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/JtReader/App/CMakeLists.txt" : {
      "ObjectId" : "7fb13bd2cf468a1915f8e854789e86f075b0fc25",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#${OCC_OCAF_LIBRARIES}\n\n#${OCC_OCAF_DEBUG_LIBRARIES}\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "src/Mod/JtReader/CMakeLists.txt" : {
      "ObjectId" : "bbc2c82a054bab3e83d59f269d0fb5bfb3558d45",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_subdirectory(Gui)\n",
        "Line" : 4,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "src/Mod/Material/CMakeLists.txt" : {
      "ObjectId" : "bf325f28034d0dc7e323d9df0f351099aa6e4db9",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# collect all the material cards:\n\n#FILE( GLOB MaterialLib_Files ./StandardMaterial/*.FCMat ./StandardMaterial/*.txt  )\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# When a target copies files to different output directories then apparently it always builds the project\n\n# which is very annoying. So, the trick is to split this into two targets to avoid this behaviour.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/Mod/Measure/App/CMakeLists.txt" : {
      "ObjectId" : "43ba5f8fa331d27c17195efa9e03f1ae7976493c",
      "LastModified" : "2019-04-15T11:31:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if(MSVC)\n\n#    set_target_properties(Measure PROPERTIES SUFFIX \".pyd\")\n\n#    set_target_properties(Measure PROPERTIES DEBUG_OUTPUT_NAME \"Measure_d\")\n\n#    set_target_properties(Measure PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/Mod/Measure)\n\n#    set_target_properties(Measure PROPERTIES PREFIX \"../\")\n\n#elseif(MINGW)\n\n#    set_target_properties(Measure PROPERTIES SUFFIX \".pyd\")\n\n#    set_target_properties(Measure PROPERTIES DEBUG_OUTPUT_NAME \"Measure_d\")\n\n#    set_target_properties(Measure PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/Mod/Measure)\n\n#    set_target_properties(Measure PROPERTIES PREFIX \"\")\n\n#else(MSVC)\n\n#    set_target_properties(Measure PROPERTIES LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/Mod/Measure)\n\n#    set_target_properties(Measure PROPERTIES PREFIX \"\")\n\n#    set_target_properties(Measure PROPERTIES INSTALL_RPATH ${INSTALL_RPATH})\n\n#endif(MSVC)\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/Mod/Measure/CMakeLists.txt" : {
      "ObjectId" : "3ab73a386094c47797880021ef5487df686facb7",
      "LastModified" : "2018-04-28T10:10:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_subdirectory(Gui)\n",
        "Line" : 4,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "src/Mod/Mesh/App/CMakeLists.txt" : {
      "ObjectId" : "a0d547c3b586dba68e99847a07f52a4ad4aadb5b",
      "LastModified" : "2019-04-15T11:31:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#   GTSAlgos.cpp\n\n#   GTSAlgos.h\n",
        "Line" : 346,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/Mod/Mesh/CMakeLists.txt" : {
      "ObjectId" : "e9c35d1be78b38abdf199655f9364bfa0156ee0e",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/Mesh/Gui/CMakeLists.txt" : {
      "ObjectId" : "f5cd37612fe529c78200d8739892bfd4255a8454",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/MeshPart/App/CMakeLists.txt" : {
      "ObjectId" : "b62337cc9435e295664179941b183b26a1130637",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################ flat mesh ###############################\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# boost-python >= 1.67 on some platforms has suffix\n",
        "Line" : 103,
        "CharPositionInLine" : 12
      },
      "2" : {
        "Text" : "# try just the major version\n",
        "Line" : 108,
        "CharPositionInLine" : 16
      },
      "3" : {
        "Text" : "# unversioned\n",
        "Line" : 111,
        "CharPositionInLine" : 20
      },
      "4" : {
        "Text" : "############################################################################\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/Mod/MeshPart/CMakeLists.txt" : {
      "ObjectId" : "60e74bf07133a93327827cc363503aa68c926098",
      "LastModified" : "2018-04-28T10:10:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/MeshPart/Gui/CMakeLists.txt" : {
      "ObjectId" : "b757744ddb28da9bd79979d555ed75f26d9371f4",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/OpenSCAD/CMakeLists.txt" : {
      "ObjectId" : "0d404a37b624e2e72fec98eebe57b0980db83be7",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/Part/App/CMakeLists.txt" : {
      "ObjectId" : "f2f61d05c2cbedbc9f85030f621da2f6099b5932",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# make sure to create the directory at configure time\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Geom2d wrappers\n",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/Mod/Part/CMakeLists.txt" : {
      "ObjectId" : "ca26dcc3c57f8111f92f9eca5b0011792e6a1fd4",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/Part/Gui/CMakeLists.txt" : {
      "ObjectId" : "bee5d964cb2991a27928375c545e356b260d1d43",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/PartDesign/App/CMakeLists.txt" : {
      "ObjectId" : "5f62acef7539dd2404f817417420aa62f5c3bbcb",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/PartDesign/CMakeLists.txt" : {
      "ObjectId" : "177550408ad6ccf1686091491ac24ba6693643ef",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/PartDesign/Gui/CMakeLists.txt" : {
      "ObjectId" : "78969402fd13288732a42cad4e7251ceac08b1aa",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/Path/App/CMakeLists.txt" : {
      "ObjectId" : "72d437af95831d845e86a551f23aa1278ff6211a",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#fix for gcc and qt5\n",
        "Line" : 6,
        "CharPositionInLine" : 48
      },
      "1" : {
        "Text" : "#   Robot\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#if (WIN32) uncomment to use KDL\n\n#    FILE( GLOB KDL_SRCS ${CMAKE_SOURCE_DIR}/src/Mod/Robot/App/kdl_cp/[^.]*.cpp )\n\n#    FILE( GLOB KDL_HPPS ${CMAKE_SOURCE_DIR}/src/Mod/Robot/App/kdl_cp/[^.]*.hpp\n\n#                        ${CMAKE_SOURCE_DIR}/src/Mod/Robot/App/kdl_cp/[^.]*.inl)\n\n#\n\n#    FILE( GLOB UTIL_SRCS ${CMAKE_SOURCE_DIR}/src/Mod/Robot/App/kdl_cp/utilities/[^.]*.cpp\n\n#                         ${CMAKE_SOURCE_DIR}/src/Mod/Robot/App/kdl_cp/utilities/[^.]*.cxx)\n\n#    FILE( GLOB UTIL_HPPS ${CMAKE_SOURCE_DIR}/src/Mod/Robot/App/kdl_cp/utilities/[^.]*.h\n\n#                         ${CMAKE_SOURCE_DIR}/src/Mod/Robot/App/kdl_cp/utilities/[^.]*.hpp)\n\n#\n\n#    SET(Path_SRCS\n\n#        ${Path_SRCS}\n\n#        ${KDL_SRCS}\n\n#        ${KDL_HPPS}\n\n#        ${UTIL_SRCS}\n\n#        ${UTIL_HPPS}\n\n#    )\n\n#\n\n#    SOURCE_GROUP(\"KDL\" FILES ${KDL_SRCS} ${KDL_HPPS} ${UTIL_SRCS} ${UTIL_HPPS} )\n\n#endif(WIN32)\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/Mod/Path/CMakeLists.txt" : {
      "ObjectId" : "b84625403a262efd72cbc3cee7bfda841ba7e162",
      "LastModified" : "2019-04-15T11:31:31Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/Path/Gui/CMakeLists.txt" : {
      "ObjectId" : "21d007e5fdd6329c2b93d1d4fd66ebf62afbc2f5",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/Path/PathSimulator/App/CMakeLists.txt" : {
      "ObjectId" : "3f4de55fbc4c852d1fa4a6944864d33efa22b64e",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/Path/PathSimulator/CMakeLists.txt" : {
      "ObjectId" : "de72a72c4af59682fa416ec4e9790471a132ebaa",
      "LastModified" : "2018-04-28T10:10:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# if(BUILD_GUI)\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add_subdirectory(Gui)\n",
        "Line" : 4,
        "CharPositionInLine" : 5
      },
      "2" : {
        "Text" : "# endif(BUILD_GUI)\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# install(\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# FILES\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Gui/PathSimulator.py\n",
        "Line" : 9,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# DESTINATION\n",
        "Line" : 10,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Mod/Path\n",
        "Line" : 11,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# )\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "src/Mod/Path/libarea/CMakeLists.txt" : {
      "ObjectId" : "3e223f258a34aecdcaf435af1d2607d836c0b806",
      "LastModified" : "2019-04-15T11:31:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Turn compiler warnings on for gcc \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# boost-python >= 1.67 on some platforms has suffix\n",
        "Line" : 17,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# try just the major version\n",
        "Line" : 22,
        "CharPositionInLine" : 12
      },
      "3" : {
        "Text" : "# unversioned\n",
        "Line" : 25,
        "CharPositionInLine" : 16
      },
      "4" : {
        "Text" : "# this defines the source-files for library\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# this defines the additional source-files for python module (wrapper to libarea)\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# this defines the headers\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# this makes the Python module\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#Universal C runtime introduced in VS 2015 (cl version 19)\n",
        "Line" : 114,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# this figures out where to install the Python modules\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# this installs the python library\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "src/Mod/Plot/CMakeLists.txt" : {
      "ObjectId" : "3dfb371793d333a2e402cfc56f8c9173ea9063bb",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/Points/App/CMakeLists.txt" : {
      "ObjectId" : "be40884dfbb84ac3065f460aacd6a4e99a31b146",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/Points/CMakeLists.txt" : {
      "ObjectId" : "a1e872e02bc06808952665565ec3b3292f8ea994",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/Points/Gui/CMakeLists.txt" : {
      "ObjectId" : "8d37fc2129946ded9217a4325fbeeaec304ae47e",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/Raytracing/App/CMakeLists.txt" : {
      "ObjectId" : "f625755989f4f206200ddcd98a1498c8506b5c78",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/Raytracing/CMakeLists.txt" : {
      "ObjectId" : "9c707dec7e4b465ca584d54ca7385b6e53d1d0bc",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/Raytracing/Gui/CMakeLists.txt" : {
      "ObjectId" : "7e6c95df369484c4104be229d8abf19593adc910",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/ReverseEngineering/App/CMakeLists.txt" : {
      "ObjectId" : "8a7b949f584d528138063e9f6e9e5ef7dd59717e",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/ReverseEngineering/CMakeLists.txt" : {
      "ObjectId" : "f7c322b85c9854d859413e8ecde64cde57057472",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/ReverseEngineering/Gui/CMakeLists.txt" : {
      "ObjectId" : "a8c99480101ed78c94affda8c9b4bcd84bda8b15",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/Robot/App/CMakeLists.txt" : {
      "ObjectId" : "f794c28112cf50db8855c3c74183289500809d2c",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIXME: The bundled KDL has some extensions which makes it incompatible\n\n# to an installed KDL. To fix the issue two things must be done:\n\n# * revert the changes (and look for an alternative)\n\n# * it must be avoided to include headers of the bundled version if the\n\n#   installed version is used\n\n#\n\n# use external kdl\n\n#if (FREECAD_USE_EXTERNAL_KDL)\n\n#  find_library(KDL_LIBRARY orocos-kdl)\n\n#  find_path(KDL_INCLUDES kdl/kdl.hpp)\n\n#  if(KDL_LIBRARY)\n\n#     message(STATUS \"Found orocos-kdl: ${KDL_LIBRARY}\")\n\n#  endif()\n\n#  if(KDL_INCLUDES)\n\n#     message(STATUS \"Found orocus_kdl headers: ${KDL_INCLUDES}\")\n\n#  endif()\n\n#  if(KDL_LIBRARY AND KDL_INCLUDES)\n\n#      list(APPEND Robot_LIBS ${KDL_LIBRARY})\n\n#      include_directories(${KDL_INCLUDES})\n\n#  else()\n\n#      message(FATAL_ERROR \"Using external orocos-kdl was specified but was not found.\")\n\n#  endif()\n\n#\n\n#else(FREECAD_USE_EXTERNAL_KDL)\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# here we use the internal supplied kdl\n",
        "Line" : 102,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#endif(FREECAD_USE_EXTERNAL_KDL)\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/Mod/Robot/App/kdl_cp/CMakeLists.txt" : {
      "ObjectId" : "4acd4665d5100ecde029493d3aaf79cc6995fe8d",
      "LastModified" : "2018-04-28T10:10:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Sanity check, inform the user\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#In Windows (Visual Studio) it is necessary to specify the postfix\n\n#of the debug library name and no symbols are exported by kdl, \n\n#so it is necessary to compile it as a static library\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#### Settings for rpath\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#add the option to disable RPATH\n",
        "Line" : 70,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "#Configure RPATH\n",
        "Line" : 76,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "#enable RPATH on OSX. This also suppress warnings on CMake >= 3.0\n",
        "Line" : 77,
        "CharPositionInLine" : 37
      },
      "6" : {
        "Text" : "# when building, don't use the install RPATH already\n\n# (but later on when installing)\n",
        "Line" : 78,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "#build directory by default is built with RPATH\n",
        "Line" : 81,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "#This is relative RPATH for libraries built in the same project\n\n#I assume that the directory is\n\n# - install_dir/something for binaries\n\n# - install_dir/lib for libraries\n",
        "Line" : 84,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# add the automatically determined parts of the RPATH\n\n# which point to directories outside the build tree to the install RPATH\n",
        "Line" : 97,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "#very important!\n",
        "Line" : 99,
        "CharPositionInLine" : 52
      },
      "11" : {
        "Text" : "#####end RPATH\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#### Settings for rpath disabled (back-compatibility)\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#####end RPATH\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Needed so that the generated config.h can be used\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Orocos convention:\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "src/Mod/Robot/CMakeLists.txt" : {
      "ObjectId" : "03376fce7acd24fc4a2dca728747f16e2cd351f9",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/Robot/Gui/CMakeLists.txt" : {
      "ObjectId" : "7aea7b263983de3fef56f6026451dd9b422d40e7",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/Sandbox/App/CMakeLists.txt" : {
      "ObjectId" : "7b3b8b59bef5219d635a2370af63ea11ffd4f8d8",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/Sandbox/CMakeLists.txt" : {
      "ObjectId" : "25dcb857f6ded8e682962dcc8ff1a355b556e639",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/Sandbox/Gui/CMakeLists.txt" : {
      "ObjectId" : "67431d322b10ee2fb022a74aed972ab32412d1b9",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/Ship/CMakeLists.txt" : {
      "ObjectId" : "910bd4588bf301ae3cc8dd8e755252bdd5d4dc1f",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/Show/CMakeLists.txt" : {
      "ObjectId" : "94b668229b751a969dd789c2318f9a06f0aa1f54",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/Sketcher/App/CMakeLists.txt" : {
      "ObjectId" : "903b721820431e380c817605e947e27abdad6861",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Uncomment this code if you want to try Eigen's multithread\n\n#find_package(OpenMP)\n\n#if (OPENMP_FOUND)\n\n#    set (CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}\")\n\n#    set (CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}\")\n\n#endif()\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set (CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -DEIGEN_NO_DEBUG\") # Necessary to avoid SparseQR crash with Eigen 3.2 due to a wrong assertion\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/Mod/Sketcher/CMakeLists.txt" : {
      "ObjectId" : "4be9472e0613ba2a7cb1dcbdfbd4aaa86aea6fcb",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/Sketcher/Gui/CMakeLists.txt" : {
      "ObjectId" : "6196a1aba163ba50c022526b2acffd1077f1e059",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/Spreadsheet/App/CMakeLists.txt" : {
      "ObjectId" : "feeff91abb793c1e155e53bc12a8d63515c5f805",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/Spreadsheet/CMakeLists.txt" : {
      "ObjectId" : "42dea69cc3650b9ba8010dd822361d96e60e9874",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/Spreadsheet/Gui/CMakeLists.txt" : {
      "ObjectId" : "5c6b85620bc4897f25c18b0075b32e0c9ee0bafe",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#   ${SpreadsheetGui_MOC_SRCS}\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/Mod/Start/App/CMakeLists.txt" : {
      "ObjectId" : "ef7d5d11e0b608cec52b5a85cf099549adf05c1b",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/Start/CMakeLists.txt" : {
      "ObjectId" : "4f4cb9939c97c8d342107a9e741e0cec27edb708",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/Start/Gui/CMakeLists.txt" : {
      "ObjectId" : "79a8d341823e58cf433e8a938cb9a555769b5e72",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/Start/StartPage/CMakeLists.txt" : {
      "ObjectId" : "147e4781cee4b42ed8f7eb52ed8e349608201d1c",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/Surface/App/CMakeLists.txt" : {
      "ObjectId" : "78b8a6218e037767624a587bec94c467dd86be65",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/Surface/CMakeLists.txt" : {
      "ObjectId" : "ce0575e0f11f3637cbc92edbdc733eecbfe18c20",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/Surface/Gui/CMakeLists.txt" : {
      "ObjectId" : "87b1579491740ee0c90f921fa1b27aeb7909d594",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#    ViewProviderCut.cpp\n\n#    ViewProviderCut.h\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/Mod/TechDraw/App/CMakeLists.txt" : {
      "ObjectId" : "e749f3e4bb21af450f8871f50f55209f9b0b4df8",
      "LastModified" : "2019-04-15T11:31:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_definitions(-D_PreComp_)\n\n#GET_MSVC_PRECOMPILED_SOURCE(\"PreCompiled.cpp\" TechDrawCPP_SRCS ${TechDraw_SRCS} ${Draw_SRCS} )\n\n#ADD_MSVC_PRECOMPILED_HEADER(TechDraw PreCompiled.h PreCompiled.cpp TechDrawCPP_SRCS)\n",
        "Line" : 158,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "src/Mod/TechDraw/App/Makefile.am" : {
      "ObjectId" : "0f5a2d6f2a8e5a379b2ec3e3609c7c4aeb40cc08",
      "LastModified" : "2018-04-28T10:10:55Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# the library search path.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#--------------------------------------------------------------------------------------\n\n# Loader of libDrawing\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# the library search path.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#--------------------------------------------------------------------------------------\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# set the include path found by configure\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/Mod/TechDraw/CMakeLists.txt" : {
      "ObjectId" : "1d28eda75211ff1ba1aad052d0326aca0334b309",
      "LastModified" : "2019-04-15T11:31:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#unit test files\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# install Python packages (for make install)\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/Mod/TechDraw/Gui/CMakeLists.txt" : {
      "ObjectId" : "f947127b92e028c13369070d390234a213fe675a",
      "LastModified" : "2019-04-15T11:31:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##install OSIFONT\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/Mod/TemplatePyMod/CMakeLists.txt" : {
      "ObjectId" : "374925ad183f86c1dccc09c39841e1d3c30a788c",
      "LastModified" : "2018-04-28T10:10:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/Test/CMakeLists.txt" : {
      "ObjectId" : "81d1422ed81e24c26148f44765b834515e716fe1",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/Test/Gui/CMakeLists.txt" : {
      "ObjectId" : "5723401f1804f133ec815121b9b4dc79f6dd7e9b",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/Tux/CMakeLists.txt" : {
      "ObjectId" : "656e883fc203685ab8f56257893b7ab04193d7ad",
      "LastModified" : "2018-04-28T10:10:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/Web/App/CMakeLists.txt" : {
      "ObjectId" : "3cb32fe3053991b18abf9af3fcb20c53ba54c50a",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/Web/CMakeLists.txt" : {
      "ObjectId" : "0a71c7c987044a36cafd63626d92ceaa8f286fa8",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Mod/Web/Gui/CMakeLists.txt" : {
      "ObjectId" : "98b20b2bdf140a047d0b1318bd3d8b2c3ef4414f",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Qt5 and Qt4\n",
        "Line" : 12,
        "CharPositionInLine" : 52
      },
      "1" : {
        "Text" : "# QWebkit only\n\n# QWebkit only\n",
        "Line" : 43,
        "CharPositionInLine" : 20
      },
      "CommentCount" : 2
    },
    "src/QtOpenGL.h.cmake" : {
      "ObjectId" : "04b639dc7b1563226d1bb9a2a5f397e289fec365",
      "LastModified" : "2018-04-28T10:10:55Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/***************************************************************************\n *   Copyright (c) 2017 Werner Mayer <wmayer[at]users.sourceforge.net>     *\n *                                                                         *\n *   This file is part of the FreeCAD CAx development system.              *\n *                                                                         *\n *   This library is free software; you can redistribute it and/or         *\n *   modify it under the terms of the GNU Library General Public           *\n *   License as published by the Free Software Foundation; either          *\n *   version 2 of the License, or (at your option) any later version.      *\n *                                                                         *\n *   This library  is distributed in the hope that it will be useful,      *\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *\n *   GNU Library General Public License for more details.                  *\n *                                                                         *\n *   You should have received a copy of the GNU Library General Public     *\n *   License along with this library; see the file COPYING.LIB. If not,    *\n *   write to the Free Software Foundation, Inc., 59 Temple Place,         *\n *   Suite 330, Boston, MA  02111-1307, USA                                *\n *                                                                         *\n ***************************************************************************/",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/* QtOpenGL.h.  Generated from QtOpenGL.h.cmake by cmake.  */",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/Tools/ImageTools/ImageConv/ImageConv.pro" : {
      "ObjectId" : "b702f57074305e0da1f3d8d457d153a1170cb902",
      "LastModified" : "2018-04-28T10:10:55Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Input\r\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/Tools/RegExp/CMakeLists.txt" : {
      "ObjectId" : "0b6b027694068e79f47af874afda9a60be7f47ed",
      "LastModified" : "2018-04-28T10:10:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# dirty hack to avoid Debug/Release subdirectory\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/Tools/RegExp/RegExp.pro" : {
      "ObjectId" : "e5d89d09a836397ffbc6291f9abb444b8d4afc3c",
      "LastModified" : "2018-04-28T10:10:55Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "######################################################################\r\n\n# Automatically generated by qmake (2.01a) Di 3. Jul 11:56:12 2012\r\n\n######################################################################\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Input\r\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/Tools/_TEMPLATEPY_/CMakeLists.txt" : {
      "ObjectId" : "34b14da6ea46b86ed7cfb67d9c30df30e0d30f9d",
      "LastModified" : "2018-04-28T10:10:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Tools/_TEMPLATE_/App/CMakeLists.txt" : {
      "ObjectId" : "298b7115ce1cf20672df8d872a40886c2be59341",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Tools/_TEMPLATE_/CMakeLists.txt" : {
      "ObjectId" : "b797a29a72f01da0fbb911c392217810cb831259",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Tools/_TEMPLATE_/Gui/CMakeLists.txt" : {
      "ObjectId" : "910c33cc4a2cb4018385fea1e4076f245f45a489",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Tools/embedded/Qt/Qt.pro" : {
      "ObjectId" : "79ea029b5fb0a837017d1b4e924402c0432289d0",
      "LastModified" : "2018-04-28T10:10:55Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "######################################################################\r\n\n# Automatically generated by qmake (2.01a) Di 15. Mrz 12:13:51 2011\r\n\n######################################################################\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Input\r\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/Tools/embedded/Qt/cxx/CMakeLists.txt" : {
      "ObjectId" : "12770ec85ed2b4cbc9c73c5a9d1d4104d5cccb00",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Qt5\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Boost\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Coin3d\n\n#find_package(Coin3D REQUIRED)\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Python\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# FreeCAD\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# -----------------------------------------------------------------------------\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#${COIN3D_INCLUDE_DIRS}\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# -----------------------------------------------------------------------------\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#${COIN3D_LIBRARIES}\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# -----------------------------------------------------------------------------\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#${COIN3D_LIBRARIES}\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "#debug Mesh_d\n",
        "Line" : 85,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "#optimized Mesh\n",
        "Line" : 89,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "#Mesh\n",
        "Line" : 97,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 14
    },
    "src/Tools/plugins/imageformats/svg/svg.pro" : {
      "ObjectId" : "8451fc4260f27985d7b66ca568d92cb83ecf70d5",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "src/Tools/plugins/widget/plugin.pro" : {
      "ObjectId" : "4e11ebe1f5eb202938e274211bac3557c839fdc8",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Input\r\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/Tools/thumbs/ThumbnailProvider/CMakeLists.txt" : {
      "ObjectId" : "1fb3e771a230dad87acba9783333879fc7e45712",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=================================================\n\n#                  zlib\n\n#=================================================\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=================================================\n\n#                  png\n\n#=================================================\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#=================================================\n\n#                  CxImage\n\n#=================================================\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#=================================================\n\n#                  FCStdThumbnail\n\n#=================================================\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/WindowsInstaller/CMakeLists.txt" : {
      "ObjectId" : "ee819faec5e7b700db9533281966c2fe3ed484eb",
      "LastModified" : "2019-03-31T08:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Building Installer\r",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/XDGData/CMakeLists.txt" : {
      "ObjectId" : "facafad584ab237a3a81af15b68bc0fd203c48dc",
      "LastModified" : "2019-04-15T11:31:31Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 150,
    "CMAKESOURCE" : 5,
    "QMAKE" : 12,
    "MAKEFILE" : 1,
    "AUTOMAKE" : 1
  },
  "ElapsedTime" : 8136
}