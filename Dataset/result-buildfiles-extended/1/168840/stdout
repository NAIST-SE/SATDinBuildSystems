{
  "Repository" : "168840",
  "Revision" : "HEAD",
  "ObjectId" : "5066ce411e96726f4f416535b95a41f7742c0a1b",
  "CommitTime" : "2018-04-17T12:38:52Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "cdf8e0427c48852a4a559d5822f87a6b9125cf4f",
      "LastModified" : "2015-08-05T12:46:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Data/CMakeLists.txt" : {
      "ObjectId" : "259a7d4d7a3fc9fe4516b16550ef30663c0c7dc7",
      "LastModified" : "2012-06-19T18:36:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "DynaMind-BasicModules/CMakeLists.txt" : {
      "ObjectId" : "3b0d77ee0534141e1861dda0a1d76e55cc31165b",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "DynaMind-BasicModules/cmake/FindGDAL.cmake" : {
      "ObjectId" : "942f14bb50a14623b543a8cfd7529c644652ef5b",
      "LastModified" : "2015-07-18T09:42:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find GDAL\n\n# ~~~~~~~~~\n\n# Copyright (c) 2007, Magnus Homann <magnus at homann dot se>\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n\n#\n\n# Once run this will define: \n\n# \n\n# GDAL_FOUND       = system has GDAL lib\n\n#\n\n# GDAL_LIBRARY     = full path to the library\n\n#\n\n# GDAL_INCLUDE_DIR      = where to find headers \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# try to use framework on mac\n\n# want clean framework path, not unix compatibility path\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# they're all the same in a framework\n",
        "Line" : 49,
        "CharPositionInLine" : 10
      },
      "3" : {
        "Text" : "# set GDAL_CONFIG to make later test happy, not used here, may not exist\n",
        "Line" : 51,
        "CharPositionInLine" : 10
      },
      "4" : {
        "Text" : "# version in info.plist\n",
        "Line" : 53,
        "CharPositionInLine" : 10
      },
      "5" : {
        "Text" : "# didn't find OS X framework, and was not set by user\n",
        "Line" : 69,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# MESSAGE(\"DBG GDAL_CONFIG ${GDAL_CONFIG}\")\n",
        "Line" : 78,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "## extract gdal version \n",
        "Line" : 82,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# MESSAGE(\"DBG GDAL_VERSION ${GDAL_VERSION}\")\n\n# MESSAGE(\"DBG GDAL_VERSION_MAJOR ${GDAL_VERSION_MAJOR}\")\n\n# MESSAGE(\"DBG GDAL_VERSION_MINOR ${GDAL_VERSION_MINOR}\")\n",
        "Line" : 89,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# check for gdal version\n\n# version 1.2.5 is known NOT to be supported (missing CPL_STDCALL macro)\n\n# According to INSTALL, 1.4.0+ is required\n",
        "Line" : 93,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# set INCLUDE_DIR to prefix+include\n",
        "Line" : 100,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "#SET(GDAL_INCLUDE_DIR ${GDAL_PREFIX}/include CACHE STRING INTERNAL)\n",
        "Line" : 104,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "## extract link dirs for rpath  \n",
        "Line" : 113,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "## split off the link dirs (for rpath)\n\n## use regular expression to match wildcard equivalent \"-L*<endchar>\"\n\n## with <endchar> is a space or a semicolon\n",
        "Line" : 118,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "#      MESSAGE(\"DBG  GDAL_LINK_DIRECTORIES_WITH_PREFIX=${GDAL_LINK_DIRECTORIES_WITH_PREFIX}\")\n",
        "Line" : 124,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "## remove prefix -L because we need the pure directory for LINK_DIRECTORIES\n",
        "Line" : 126,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "## split off the name\n\n## use regular expression to match wildcard equivalent \"-l*<endchar>\"\n\n## with <endchar> is a space or a semicolon\n",
        "Line" : 132,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "#      MESSAGE(\"DBG  GDAL_LIB_NAME_WITH_PREFIX=${GDAL_LIB_NAME_WITH_PREFIX}\")\n",
        "Line" : 138,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "## remove prefix -l because we need the pure name\n",
        "Line" : 141,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# work around empty GDAL_LIBRARY left by framework check\n\n# while still preserving user setting if given\n\n# ***FIXME*** need to improve framework check so below not needed\n",
        "Line" : 149,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 20
    },
    "DynaMind-BasicModules/doc/CMakeLists.txt" : {
      "ObjectId" : "aea769f3730b05c44c09de7d3f7d8afc9b1ad948",
      "LastModified" : "2015-07-18T09:42:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "DynaMind-BasicModules/scripts/CMakeLists.txt" : {
      "ObjectId" : "51b8f8678f2c0f224ca8f35fe889905806111258",
      "LastModified" : "2015-07-18T09:42:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "DynaMind-BasicModules/src/DynaMind-BasicModules/CMakeLists.txt" : {
      "ObjectId" : "8b25cef30dbecad10cab1788d2b34a8a989c4816",
      "LastModified" : "2015-07-18T09:42:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "DynaMind-BasicModules/unit-tests/CMakeLists.txt" : {
      "ObjectId" : "9393bc5d4ff1d4c7a4c56259dff4d280e0f73b17",
      "LastModified" : "2015-07-18T09:42:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "DynaMind-ComplexUnitTests/CMakeLists.txt" : {
      "ObjectId" : "3419b079dd2f23492576c31141a1087efd23c745",
      "LastModified" : "2015-07-18T09:42:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "DynaMind-ComplexUnitTests/src/CMakeLists.txt" : {
      "ObjectId" : "37e4587778ef75b5b325ef5cf618b1fd13d2cb43",
      "LastModified" : "2015-07-18T09:42:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "DynaMind-ComplexUnitTests/src/gtest-1.6.0/CMakeLists.txt" : {
      "ObjectId" : "0fe26540b345fcab7b3260a8d7f6e784a1128e14",
      "LastModified" : "2015-07-18T09:42:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# CMake build script for Google Test.\n\n#\n\n# To run the tests for Google Test itself on Linux, use 'make test' or\n\n# ctest.  You can select which tests to run using 'ctest -R regex'.\n\n# For more options, run 'ctest --help'.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BUILD_SHARED_LIBS is a standard CMake variable, but we declare it here to\n\n# make it prominent in the GUI.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# When other libraries are using a shared version of runtime libraries,\n\n# Google Test also has to use one.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Defines pre_project_set_up_hermetic_build() and set_up_hermetic_build().\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "########################################################################\n\n#\n\n# Project-wide settings\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Name of the project.\n\n#\n\n# CMake files in this project can refer to the root source directory\n\n# as ${gtest_SOURCE_DIR} and to the root binary directory as\n\n# ${gtest_BINARY_DIR}.\n\n# Language \"C\" is required for find_package(Threads).\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define helper functions and macros used by Google Test.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Defined in internal_utils.cmake.\n",
        "Line" : 52,
        "CharPositionInLine" : 30
      },
      "8" : {
        "Text" : "# Where Google Test's .h files can be found.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Where Google Test's libraries can be found.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "########################################################################\n\n#\n\n# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Google Test libraries.  We build them using more strict warnings than what\n\n# are used for other targets, to ensure that gtest can be compiled by a user\n\n# aggressive about warnings.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "########################################################################\n\n#\n\n# Samples on how to link user tests with gtest or gtest_main.\n\n#\n\n# They are not built by default.  To build them, set the\n\n# gtest_build_samples option to ON.  You can do it by running ccmake\n\n# or specifying the -Dbuild_gtest_samples=ON flag when running cmake.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "########################################################################\n\n#\n\n# Google Test's own tests.\n\n#\n\n# You can skip this section if you aren't interested in testing\n\n# Google Test itself.\n\n#\n\n# The tests are not built by default.  To build them, set the\n\n# gtest_build_tests option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_tests=ON flag when running cmake.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# This must be set in the root directory for the tests to be run by\n\n# 'make test' or ctest.\n",
        "Line" : 107,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "############################################################\n\n# C++ tests built with standard compiler flags.\n",
        "Line" : 111,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "############################################################\n\n# C++ tests built with non-standard compiler flags.\n",
        "Line" : 140,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# The C++ Standard specifies tuple_element<int, class>.\n\n# Yet MSVC 10's <utility> declares tuple_element<size_t, class>.\n\n# That declaration conflicts with our own standard-conforming\n\n# tuple implementation.  Therefore using our own tuple with\n\n# MSVC 10 doesn't compile.\n",
        "Line" : 170,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "############################################################\n\n# Python tests.\n",
        "Line" : 186,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 19
    },
    "DynaMind-ComplexUnitTests/src/gtest-1.6.0/Makefile.am" : {
      "ObjectId" : "cb350b75bc5a58bba70faa8a070144a4a09d4330",
      "LastModified" : "2015-07-18T09:42:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Automake file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Nonstandard package files for distribution\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# gtest source files that we don't compile directly.  They are\n\n# #included by gtest-all.cc.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Sample files that we don't compile.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# C++ test files that we don't compile directly.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Python tests that we don't run.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# CMake script\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# MSVC project files\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# xcode project files\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# xcode sample files\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# C++Builder project files\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Distribute and install M4 macro\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# We define the global AM_CPPFLAGS as everything we compile includes from these\n\n# directories.\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Modifies compiler and linker flags for pthreads compatibility.\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Build rules for libraries.\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Bulid rules for samples and tests. Automake's naming for some of\n\n# these variables isn't terribly obvious, so this is a brief\n\n# reference:\n\n#\n\n# TESTS -- Programs run automatically by \"make check\"\n\n# check_PROGRAMS -- Programs built by \"make check\" but not necessarily run\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# A simple sample on using gtest.\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Another sample.  It also verifies that libgtest works.\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# This tests most constructs of gtest and verifies that libgtest_main\n\n# and libgtest work.\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Tests that fused gtest files compile and work.\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Build rules for putting fused Google Test files into the distribution\n\n# package. The user can also create those files by manually running\n\n# scripts/fuse_gtest_files.py.\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Death tests may produce core dumps in the build directory. In case\n\n# this happens, clean them to keep distcleancheck happy.\n",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Disables 'make install' as installing a compiled version of Google\n\n# Test can lead to undefined behavior due to violation of the\n\n# One-Definition Rule.\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "DynaMind-ComplexUnitTests/src/gtest-1.6.0/cmake/internal_utils.cmake" : {
      "ObjectId" : "7efc2ac797aa6ec29cb011191373b3bb5242b74f",
      "LastModified" : "2015-07-18T09:42:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Defines functions and macros useful for building Google Test and\n\n# Google Mock.\n\n#\n\n# Note:\n\n#\n\n# - This file will be run twice when building Google Mock (once via\n\n#   Google Test's CMakeLists.txt, and once via Google Mock's).\n\n#   Therefore it shouldn't have any side effects other than defining\n\n#   the functions and macros.\n\n#\n\n# - The functions/macros defined in this file may depend on Google\n\n#   Test and Google Mock's option() definitions, and thus must be\n\n#   called *after* the options have been defined.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Tweaks CMake's default compiler/linker settings to suit Google Test's needs.\n\n#\n\n# This must be a macro(), as inside a function string() can only\n\n# update variables in the function scope.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For MSVC, CMake sets certain flags to defaults we want to override.\n\n# This replacement code is taken from sample in the CMake Wiki at\n\n# http://www.cmake.org/Wiki/CMake_FAQ#Dynamic_Replace.\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# When Google Test is built as a shared library, it should also use\n\n# shared runtime libraries.  Otherwise, it may end up with multiple\n\n# copies of runtime library data in different modules, resulting in\n\n# hard-to-find crashes. When it is built as a static library, it is\n\n# preferable to use CRT as static libraries, as we don't have to rely\n\n# on CRT DLLs being available. CMake always defaults to using shared\n\n# CRT libraries, so we override that default here.\n",
        "Line" : 28,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# We prefer more strict warning checking for building Google Test.\n\n# Replaces /W3 with /W4 in defaults.\n",
        "Line" : 38,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Defines the compiler/linker flags used to build Google Test and\n\n# Google Mock.  You can tweak these definitions to suit your need.  A\n\n# variable's value is empty before it's explicitly assigned to.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Defines CMAKE_USE_PTHREADS_INIT and CMAKE_THREAD_LIBS_INIT.\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Newlines inside flags variables break CMake's NMake generator.\n\n# TODO(vladl@google.com): Add -RTCs and -RTCu to debug builds.\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Until version 4.3.2, GCC doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 68,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Sun Pro doesn't provide macros to indicate whether exceptions and\n\n# RTTI are enabled, so we define GTEST_HAS_* explicitly.\n",
        "Line" : 75,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# CMake 2.8 changes Visual Age's compiler ID to \"XL\".\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Until version 9.0, Visual Age doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 84,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# RTTI can not be disabled in HP aCC compiler.\n",
        "Line" : 92,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# The pthreads library is available and allowed.\n",
        "Line" : 96,
        "CharPositionInLine" : 32
      },
      "14" : {
        "Text" : "# For building gtest's own tests and samples.\n",
        "Line" : 102,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# For building the gtest libraries.\n",
        "Line" : 110,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# type can be either STATIC or SHARED to denote a static or shared library.\n\n# ARGN refers to additional arguments after 'cxx_flags'.\n",
        "Line" : 117,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "########################################################################\n\n#\n\n# Helper functions for creating build targets.\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# cxx_executable_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ executable that depends on the given libraries and\n\n# is built from the given source files with the given compiler flags.\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# To support mixing linking in static and dynamic libraries, link each\n\n# library in with an extra call to target_link_libraries.\n",
        "Line" : 161,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# cxx_executable(name dir lib srcs...)\n\n#\n\n# creates a named target that depends on the given libs and is built\n\n# from the given source files.  dir/name.cc is implicitly included in\n\n# the source file list.\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Sets PYTHONINTERP_FOUND and PYTHON_EXECUTABLE.\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# cxx_test_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ test that depends on the given libs and is built\n\n# from the given source files with the given compiler flags.\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# cxx_test(name libs srcs...)\n\n#\n\n# creates a named test target that depends on the given libs and is\n\n# built from the given source files.  Unlike cxx_test_with_flags,\n\n# test/name.cc is already implicitly included in the source file list.\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# py_test(name)\n\n#\n\n# creates a Python test with the given name whose main module is in\n\n# test/name.py.  It does nothing if Python is not installed.\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# We are not supporting Python tests on Linux yet as they consider\n\n# all Linux environments to be google3 and try to use google3 features.\n",
        "Line" : 205,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# ${CMAKE_BINARY_DIR} is known at configuration time, so we can\n\n# directly bind it from cmake. ${CTEST_CONFIGURATION_TYPE} is known\n\n# only at ctest runtime (by calling ctest -c <Configuration>), so\n\n# we have to escape $ to delay variable substitution here.\n",
        "Line" : 208,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 28
    },
    "DynaMind-DynAlp/CMakeLists.txt" : {
      "ObjectId" : "1449fdaadf4710b4fa20f5acad0351fd8f462d25",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ADD_SUBDIRECTORY(scripts)\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "DynaMind-DynAlp/src/CMakeLists.txt" : {
      "ObjectId" : "8ce4a9c3c4dbf1dfa72acdce8d5ef8c39c65c4d5",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "DynaMind-DynAlp/src/climate/CMakeLists.txt" : {
      "ObjectId" : "4068395c79d0b4f815d27ead5ea43702d25645f1",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "DynaMind-Executable/CMakeLists.txt" : {
      "ObjectId" : "92b31df2b82968994773f0276cc52c226b0b1bc4",
      "LastModified" : "2015-10-16T09:39:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ADD_DEFINITIONS(-DQT_NO_KEYWORDS)\r\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Building Executable\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "DynaMind-Extensions/CMakeLists.txt" : {
      "ObjectId" : "36c36b6e444ef5f1b1f678b93df23e2024b8235f",
      "LastModified" : "2015-10-12T20:48:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "DynaMind-Extensions/python-swig/CMakeLists.txt" : {
      "ObjectId" : "6762d127b3cf487b1e46485df61b5774282a2727",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "DynaMind-Extensions/src/CMakeLists.txt" : {
      "ObjectId" : "fd9c3d4cfcecf800b08896568788e3c15a441d33",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "DynaMind-Extensions/unit-tests/CMakeLists.txt" : {
      "ObjectId" : "e45ca1e2f206b833fd2c281a446bef61e087f945",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "DynaMind-Extensions/unit-tests/gtest-1.6.0/CMakeLists.txt" : {
      "ObjectId" : "0fe26540b345fcab7b3260a8d7f6e784a1128e14",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# CMake build script for Google Test.\n\n#\n\n# To run the tests for Google Test itself on Linux, use 'make test' or\n\n# ctest.  You can select which tests to run using 'ctest -R regex'.\n\n# For more options, run 'ctest --help'.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BUILD_SHARED_LIBS is a standard CMake variable, but we declare it here to\n\n# make it prominent in the GUI.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# When other libraries are using a shared version of runtime libraries,\n\n# Google Test also has to use one.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Defines pre_project_set_up_hermetic_build() and set_up_hermetic_build().\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "########################################################################\n\n#\n\n# Project-wide settings\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Name of the project.\n\n#\n\n# CMake files in this project can refer to the root source directory\n\n# as ${gtest_SOURCE_DIR} and to the root binary directory as\n\n# ${gtest_BINARY_DIR}.\n\n# Language \"C\" is required for find_package(Threads).\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define helper functions and macros used by Google Test.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Defined in internal_utils.cmake.\n",
        "Line" : 52,
        "CharPositionInLine" : 30
      },
      "8" : {
        "Text" : "# Where Google Test's .h files can be found.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Where Google Test's libraries can be found.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "########################################################################\n\n#\n\n# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Google Test libraries.  We build them using more strict warnings than what\n\n# are used for other targets, to ensure that gtest can be compiled by a user\n\n# aggressive about warnings.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "########################################################################\n\n#\n\n# Samples on how to link user tests with gtest or gtest_main.\n\n#\n\n# They are not built by default.  To build them, set the\n\n# gtest_build_samples option to ON.  You can do it by running ccmake\n\n# or specifying the -Dbuild_gtest_samples=ON flag when running cmake.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "########################################################################\n\n#\n\n# Google Test's own tests.\n\n#\n\n# You can skip this section if you aren't interested in testing\n\n# Google Test itself.\n\n#\n\n# The tests are not built by default.  To build them, set the\n\n# gtest_build_tests option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_tests=ON flag when running cmake.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# This must be set in the root directory for the tests to be run by\n\n# 'make test' or ctest.\n",
        "Line" : 107,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "############################################################\n\n# C++ tests built with standard compiler flags.\n",
        "Line" : 111,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "############################################################\n\n# C++ tests built with non-standard compiler flags.\n",
        "Line" : 140,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# The C++ Standard specifies tuple_element<int, class>.\n\n# Yet MSVC 10's <utility> declares tuple_element<size_t, class>.\n\n# That declaration conflicts with our own standard-conforming\n\n# tuple implementation.  Therefore using our own tuple with\n\n# MSVC 10 doesn't compile.\n",
        "Line" : 170,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "############################################################\n\n# Python tests.\n",
        "Line" : 186,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 19
    },
    "DynaMind-Extensions/unit-tests/gtest-1.6.0/Makefile.am" : {
      "ObjectId" : "cb350b75bc5a58bba70faa8a070144a4a09d4330",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Automake file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Nonstandard package files for distribution\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# gtest source files that we don't compile directly.  They are\n\n# #included by gtest-all.cc.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Sample files that we don't compile.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# C++ test files that we don't compile directly.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Python tests that we don't run.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# CMake script\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# MSVC project files\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# xcode project files\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# xcode sample files\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# C++Builder project files\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Distribute and install M4 macro\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# We define the global AM_CPPFLAGS as everything we compile includes from these\n\n# directories.\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Modifies compiler and linker flags for pthreads compatibility.\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Build rules for libraries.\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Bulid rules for samples and tests. Automake's naming for some of\n\n# these variables isn't terribly obvious, so this is a brief\n\n# reference:\n\n#\n\n# TESTS -- Programs run automatically by \"make check\"\n\n# check_PROGRAMS -- Programs built by \"make check\" but not necessarily run\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# A simple sample on using gtest.\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Another sample.  It also verifies that libgtest works.\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# This tests most constructs of gtest and verifies that libgtest_main\n\n# and libgtest work.\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Tests that fused gtest files compile and work.\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Build rules for putting fused Google Test files into the distribution\n\n# package. The user can also create those files by manually running\n\n# scripts/fuse_gtest_files.py.\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Death tests may produce core dumps in the build directory. In case\n\n# this happens, clean them to keep distcleancheck happy.\n",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Disables 'make install' as installing a compiled version of Google\n\n# Test can lead to undefined behavior due to violation of the\n\n# One-Definition Rule.\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "DynaMind-Extensions/unit-tests/gtest-1.6.0/cmake/internal_utils.cmake" : {
      "ObjectId" : "7efc2ac797aa6ec29cb011191373b3bb5242b74f",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Defines functions and macros useful for building Google Test and\n\n# Google Mock.\n\n#\n\n# Note:\n\n#\n\n# - This file will be run twice when building Google Mock (once via\n\n#   Google Test's CMakeLists.txt, and once via Google Mock's).\n\n#   Therefore it shouldn't have any side effects other than defining\n\n#   the functions and macros.\n\n#\n\n# - The functions/macros defined in this file may depend on Google\n\n#   Test and Google Mock's option() definitions, and thus must be\n\n#   called *after* the options have been defined.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Tweaks CMake's default compiler/linker settings to suit Google Test's needs.\n\n#\n\n# This must be a macro(), as inside a function string() can only\n\n# update variables in the function scope.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For MSVC, CMake sets certain flags to defaults we want to override.\n\n# This replacement code is taken from sample in the CMake Wiki at\n\n# http://www.cmake.org/Wiki/CMake_FAQ#Dynamic_Replace.\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# When Google Test is built as a shared library, it should also use\n\n# shared runtime libraries.  Otherwise, it may end up with multiple\n\n# copies of runtime library data in different modules, resulting in\n\n# hard-to-find crashes. When it is built as a static library, it is\n\n# preferable to use CRT as static libraries, as we don't have to rely\n\n# on CRT DLLs being available. CMake always defaults to using shared\n\n# CRT libraries, so we override that default here.\n",
        "Line" : 28,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# We prefer more strict warning checking for building Google Test.\n\n# Replaces /W3 with /W4 in defaults.\n",
        "Line" : 38,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Defines the compiler/linker flags used to build Google Test and\n\n# Google Mock.  You can tweak these definitions to suit your need.  A\n\n# variable's value is empty before it's explicitly assigned to.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Defines CMAKE_USE_PTHREADS_INIT and CMAKE_THREAD_LIBS_INIT.\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Newlines inside flags variables break CMake's NMake generator.\n\n# TODO(vladl@google.com): Add -RTCs and -RTCu to debug builds.\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Until version 4.3.2, GCC doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 68,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Sun Pro doesn't provide macros to indicate whether exceptions and\n\n# RTTI are enabled, so we define GTEST_HAS_* explicitly.\n",
        "Line" : 75,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# CMake 2.8 changes Visual Age's compiler ID to \"XL\".\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Until version 9.0, Visual Age doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 84,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# RTTI can not be disabled in HP aCC compiler.\n",
        "Line" : 92,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# The pthreads library is available and allowed.\n",
        "Line" : 96,
        "CharPositionInLine" : 32
      },
      "14" : {
        "Text" : "# For building gtest's own tests and samples.\n",
        "Line" : 102,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# For building the gtest libraries.\n",
        "Line" : 110,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# type can be either STATIC or SHARED to denote a static or shared library.\n\n# ARGN refers to additional arguments after 'cxx_flags'.\n",
        "Line" : 117,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "########################################################################\n\n#\n\n# Helper functions for creating build targets.\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# cxx_executable_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ executable that depends on the given libraries and\n\n# is built from the given source files with the given compiler flags.\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# To support mixing linking in static and dynamic libraries, link each\n\n# library in with an extra call to target_link_libraries.\n",
        "Line" : 161,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# cxx_executable(name dir lib srcs...)\n\n#\n\n# creates a named target that depends on the given libs and is built\n\n# from the given source files.  dir/name.cc is implicitly included in\n\n# the source file list.\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Sets PYTHONINTERP_FOUND and PYTHON_EXECUTABLE.\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# cxx_test_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ test that depends on the given libs and is built\n\n# from the given source files with the given compiler flags.\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# cxx_test(name libs srcs...)\n\n#\n\n# creates a named test target that depends on the given libs and is\n\n# built from the given source files.  Unlike cxx_test_with_flags,\n\n# test/name.cc is already implicitly included in the source file list.\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# py_test(name)\n\n#\n\n# creates a Python test with the given name whose main module is in\n\n# test/name.py.  It does nothing if Python is not installed.\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# We are not supporting Python tests on Linux yet as they consider\n\n# all Linux environments to be google3 and try to use google3 features.\n",
        "Line" : 205,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# ${CMAKE_BINARY_DIR} is known at configuration time, so we can\n\n# directly bind it from cmake. ${CTEST_CONFIGURATION_TYPE} is known\n\n# only at ctest runtime (by calling ctest -c <Configuration>), so\n\n# we have to escape $ to delay variable substitution here.\n",
        "Line" : 208,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 28
    },
    "DynaMind-GDALModules/3rdparty/sqlite3/CMakeLists.txt" : {
      "ObjectId" : "25c4e7e5554e9063057967d4bdb636b40e8b1ef1",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "DynaMind-GDALModules/3rdparty/swmm/CMakeLists.txt" : {
      "ObjectId" : "2cb1611a07bd63b7eaa805ee540dd8e4d836fe82",
      "LastModified" : "2016-04-20T01:06:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "DynaMind-GDALModules/CMake/Packages/FindGEOS.cmake" : {
      "ObjectId" : "4580740ab4bd70134986052d6c42c76874950582",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find GEOS\n\n# ~~~~~~~~~\n\n# Copyright (c) 2008, Mateusz Loskot <mateusz@loskot.net>\n\n# (based on FindGDAL.cmake by Magnus Homann)\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n\n# CMake module to search for GEOS library\n\n#\n\n# If it's found it sets GEOS_FOUND to TRUE\n\n# and following variables are set:\n\n#    GEOS_INCLUDE_DIR\n\n#    GEOS_LIBRARY\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in CMake 3.1.0+\n",
        "Line" : 16,
        "CharPositionInLine" : 20
      },
      "2" : {
        "Text" : "# keep old-style @VAR@ expansion\n",
        "Line" : 17,
        "CharPositionInLine" : 33
      },
      "3" : {
        "Text" : "#INCLUDE (@CMAKE_SOURCE_DIR@/cmake/MacPlistMacros.cmake)\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# try to use framework on mac\n\n# want clean framework path, not unix compatibility path\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# didn't find OS X framework, and was not set by user\n",
        "Line" : 48,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "#MESSAGE(\"DBG GEOS_CONFIG ${GEOS_CONFIG}\")\n",
        "Line" : 55,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# set INCLUDE_DIR to prefix+include\n",
        "Line" : 69,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "## extract link dirs for rpath\n",
        "Line" : 81,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "## split off the link dirs (for rpath)\n\n## use regular expression to match wildcard equivalent \"-L*<endchar>\"\n\n## with <endchar> is a space or a semicolon\n",
        "Line" : 86,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "#MESSAGE(\"DBG  GEOS_LINK_DIRECTORIES_WITH_PREFIX=${GEOS_LINK_DIRECTORIES_WITH_PREFIX}\")\n",
        "Line" : 92,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "## remove prefix -L because we need the pure directory for LINK_DIRECTORIES\n",
        "Line" : 94,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "### XXX - mloskot: geos-config --libs does not return -lgeos_c, so set it manually\n\n## split off the name\n\n## use regular expression to match wildcard equivalent \"-l*<endchar>\"\n\n## with <endchar> is a space or a semicolon\n\n#STRING(REGEX MATCHALL \"[-][l]([^ ;])+\"\n\n#  GEOS_LIB_NAME_WITH_PREFIX\n\n#  \"${GEOS_CONFIG_LIBS}\" )\n\n#MESSAGE(\"DBG  GEOS_CONFIG_LIBS=${GEOS_CONFIG_LIBS}\")\n\n#MESSAGE(\"DBG  GEOS_LIB_NAME_WITH_PREFIX=${GEOS_LIB_NAME_WITH_PREFIX}\")\n",
        "Line" : 100,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "## remove prefix -l because we need the pure name\n",
        "Line" : 111,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "#MESSAGE(\"DBG  GEOS_LIB_NAME=${GEOS_LIB_NAME}\")\n",
        "Line" : 116,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# work around empty GEOS_LIBRARY left by framework check\n\n# while still preserving user setting if given\n\n# ***FIXME*** need to improve framework check so below not needed\n",
        "Line" : 120,
        "CharPositionInLine" : 12
      },
      "16" : {
        "Text" : "#MESSAGE(\"DBG  GEOS_LIBRARY=${GEOS_LIBRARY}\")\n",
        "Line" : 128,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 17
    },
    "DynaMind-GDALModules/CMake/Packages/FindSFCGAL.cmake" : {
      "ObjectId" : "5d48441d6780c432289af93bd765f9805b807377",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-- SFCGAL finder\n\n#\n\n# search variables :\n\n#     SFCGAL_DIR(cmake/environment) : SFCGAL install directory\n\n#     SFCGAL_INCLUDE_DIR(cmake) : directory containing SFCGAL.h      \n\n#     SFCGAL_LIBRARY_DIR(cmake) : directory containing SFCGAL libraries\n\n#\n\n# defined variables :\n\n#     SFCGAL_FOUND : true if library found\n\n#     SFCGAL_INCLUDE_DIRS : full path to SFCGAL libraries\n\n#     SFCGAL_LIBRARIES : full path to SFCGAL libraries\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -- parse version\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# -- parse version\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# from http://www.cmake.org/Wiki/CMakeCompareVersionStrings \n\n# Breaks up a string in the form n1.n2.n3 into three parts and stores\n\n# them in major, minor, and patch.  version should be a value, not a\n\n# variable, while major, minor and patch should be variables.\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# find library (Release)\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# find library (Debug)\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# set output variables\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set <NAME>_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "DynaMind-GDALModules/CMake/Packages/FindSQLITE.cmake" : {
      "ObjectId" : "01e9e50380e9b2824363ccee37ca9352ccd2bae9",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find Sqlite3\n\n# ~~~~~~~~~~~~\n\n# Copyright (c) 2007, Martin Dobias <wonder.sk at gmail.com>\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n\n# CMake module to search for Sqlite3 library\n\n#\n\n# If it's found it sets SQLITE3_FOUND to TRUE\n\n# and following variables are set:\n\n#    SQLITE3_INCLUDE_DIR\n\n#    SQLITE3_LIBRARY\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FIND_PATH and FIND_LIBRARY normally search standard locations\n\n# before the specified paths. To search non-standard paths first,\n\n# FIND_* is invoked first with specified paths and NO_DEFAULT_PATH\n\n# and then again with no specified paths to search the default\n\n# locations. When an earlier FIND_* succeeds, subsequent FIND_*s\n\n# searching for the same item do nothing.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# try to use framework on mac\n\n# want clean framework path, not unix compatibility path\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#FIND_PATH(SQLITE3_INCLUDE_DIR SQLite3/sqlite3.h)\n",
        "Line" : 30,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# FIND_PATH doesn't add \"Headers\" for a framework\n",
        "Line" : 33,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "#mingw\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#mingw\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    },
    "DynaMind-GDALModules/CMakeLists.txt" : {
      "ObjectId" : "45a86a18ba899c92f715dd0d3b80bf16ffed5316",
      "LastModified" : "2016-04-20T01:06:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Add test data\n",
        "Line" : 102,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "DynaMind-GDALModules/scripts/CMakeLists.txt" : {
      "ObjectId" : "ac00de88fe996598e5649ef3e11c1585318dc9f1",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "DynaMind-GDALModules/src/drainage/CMakeLists.txt" : {
      "ObjectId" : "797995d58fba427fefb425f112be164ad1adc8f9",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "DynaMind-GDALModules/src/spatialite_extensions/CMakeLists.txt" : {
      "ObjectId" : "f5a6c740c0dcf1e3f023e329a730b012a61a5f32",
      "LastModified" : "2016-04-20T01:06:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "DynaMind-GDALModules/src/standard/CMakeLists.txt" : {
      "ObjectId" : "6e3aee9f600da17cdd9e73ce94d9bbb82ec6cbde",
      "LastModified" : "2016-04-20T01:06:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#INCLUDE_DIRECTORIES( ${SQLITE3_INCLUDE_DIR})\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "DynaMind-GDALModules/test_data/CMakeLists.txt" : {
      "ObjectId" : "2b5246674d7630635cf9a9ae7ecfdcb5083fd279",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "DynaMind-GDALModules/unit-tests/CMakeLists.txt" : {
      "ObjectId" : "a0df7ff52d1f65c72b16b5f9ebe9776be44f2cfc",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "DynaMind-Gui/CMakeLists.txt" : {
      "ObjectId" : "7bd2bed8428a96d5d8144226d0557e839ca21552",
      "LastModified" : "2016-05-23T06:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#create menu entry in ubuntu\r\n\n#IF(UNIX AND NOT WIN32)\r\n\n#    ADD_SUBDIRECTORY(data)\r\n\n#ENDIF()\r\n\n#INCLUDE(DynaMindGuiCPack.txt)\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "DynaMind-Gui/DynaMind-Viewer/CMake/Packages/FindQGLViewer.cmake" : {
      "ObjectId" : "7dc6fa7517e929902d3c5cb2f9bf745c19245ec0",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find QGLViewer\n\n# Once done this will define\n\n#\n\n#  QGLVIEWER_FOUND - system has QGLViewer\n\n#  QGLVIEWER_INCLUDE_DIR - the QGLViewer include directory\n\n#  QGLVIEWER_LIBRARIES - Link these to use QGLViewer\n\n#  QGLVIEWER_DEFINITIONS - Compiler switches required for using QGLViewer\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "DynaMind-Gui/DynaMind-Viewer/CMakeLists.txt" : {
      "ObjectId" : "68bb3d4c6257359294d69fb0b4b5aa23dce181d0",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#TODO remove branch when build is reliable\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# skip download\n",
        "Line" : 48,
        "CharPositionInLine" : 32
      },
      "2" : {
        "Text" : "# skip installation\n",
        "Line" : 50,
        "CharPositionInLine" : 31
      },
      "3" : {
        "Text" : "# skip download\n",
        "Line" : 57,
        "CharPositionInLine" : 32
      },
      "4" : {
        "Text" : "# skip installation\n",
        "Line" : 59,
        "CharPositionInLine" : 31
      },
      "5" : {
        "Text" : "#INSTALL(TARGETS dynamind-viewer\n\n#        DESTINATION \"lib\"\n\n#\t\tPERMISSIONS OWNER_WRITE OWNER_READ OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "DynaMind-Gui/DynaMind-Viewer/lib/QGLViewer/QGLViewer.pro" : {
      "ObjectId" : "d805aa07ae8817fef24aab6876d48e8d06c809a5",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#\t\t    l i b Q G L V i e w e r\n\n#\tC o m p i l a t i o n    c o n f i g u r a t i o n\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Run \"qmake; make; make install\" to compile and install the library on Unix systems.\n\n# Optional arguments can tune install paths (as in \"qmake PREFIX=$HOME\"). See doc/download.html for details.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# -----------------------------------\n\n# --  I m a g e I n t e r f a c e  --\n\n# -----------------------------------\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ---------------------------------------------\n\n# --  V e c t o r i a l   R e n d e r i n g  --\n\n# ---------------------------------------------\n\n# In case of compilation troubles with vectorial rendering, uncomment this line\n\n# DEFINES *= NO_VECTORIAL_RENDER\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ---------------\n\n# --  U n i x  --\n\n# ---------------\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# INCLUDE_DIR and LIB_DIR specify where to install the include files and the library.\n\n# Use qmake INCLUDE_DIR=... LIB_DIR=... , or qmake PREFIX=... to customize your installation.\n",
        "Line" : 113,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# GLUT for Unix architecture\n",
        "Line" : 145,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# GLU is part of the OpenGL framework\n",
        "Line" : 151,
        "CharPositionInLine" : 3
      },
      "8" : {
        "Text" : "# Adds a -P option so that \"make install\" as root creates files owned by root and links are preserved.\n\n# This is not a standard option, and it may have to be removed on old Unix flavors.\n",
        "Line" : 159,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Make much smaller libraries (and packages) by removing debugging informations\n",
        "Line" : 165,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# install header\n",
        "Line" : 169,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Should be $$replace(TRANSLATIONS, .ts, .qm), but 'replace' only appeared in Qt 4.3\n",
        "Line" : 171,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# install documentation html\n",
        "Line" : 174,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# install documentation images\n",
        "Line" : 178,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# install documentation examples\n\n#docExamples.path = $${DOC_DIR}/examples\n\n#docExamples.files = ../examples/*../examples/*/*\n",
        "Line" : 182,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# install documentation refManual\n",
        "Line" : 186,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# install static library\n\n#staticlib.extra = make -f Makefile.Release staticlib\n\n#staticlib.path = $${LIB_DIR_}\n\n#staticlib.files = lib$${TARGET}.a\n",
        "Line" : 190,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# install library\n",
        "Line" : 195,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# \"make install\" configuration options\n",
        "Line" : 198,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# -----------------------\n\n# --  S G I   I r i x  --\n\n# -----------------------\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# GLUT for SGI architecture\n",
        "Line" : 219,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# -------------------\n\n# --  M a c O S X  --\n\n# -------------------\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# This setting creates a Mac framework. Comment out this line to create a dylib instead.\n",
        "Line" : 231,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Should be $$replace(TRANSLATIONS, .ts, .qm), but 'replace' is only available in Qt 4.3\n",
        "Line" : 238,
        "CharPositionInLine" : 1
      },
      "24" : {
        "Text" : "# For a Framework, 'include' and 'lib' do no make sense.\n\n# These and prefix will all define the DESTDIR, in that order in case several are defined\n",
        "Line" : 245,
        "CharPositionInLine" : 1
      },
      "25" : {
        "Text" : "#QMAKE_LFLAGS_SONAME  = -Wl,-install_name,@executable_path/../Frameworks/\n\n#QMAKE_LFLAGS_SONAME  = -Wl,-install_name,\n",
        "Line" : 261,
        "CharPositionInLine" : 1
      },
      "26" : {
        "Text" : "# Framework already installed, with includes\n",
        "Line" : 264,
        "CharPositionInLine" : 1
      },
      "27" : {
        "Text" : "#QMAKE_LFLAGS_SONAME  = -Wl,-install_name,libQGLViewer.dylib\n",
        "Line" : 267,
        "CharPositionInLine" : 1
      },
      "28" : {
        "Text" : "# GLUT for Macintosh architecture\n",
        "Line" : 270,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# ---------------------\n\n# --  W i n d o w s  --\n\n# ---------------------\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Windows requires a debug lib version to link against debug applications\n",
        "Line" : 282,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# Needed by Intel C++, (icl.exe) so that WINGDIAPI is a defined symbol in gl.h.\n",
        "Line" : 285,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# TP : C++ source code\n\n# GR : Enables run-time type information (RTTI).\n\n# Zi : Generates complete debugging information (removed)\n\n# EHs : The exception-handling model that catches C++ exceptions only and tells the\n\n#       compiler to assume that functions declared as extern \"C\" may throw an exception.\n\n# FS : Enable parallel compilation\n\n# Any feedback on these flags is welcome.\n",
        "Line" : 296,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 33
    },
    "DynaMind-Gui/data/CMakeLists.txt" : {
      "ObjectId" : "1dec818aea441b67c59c61b9d8df96f0d82ba225",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "DynaMind-Gui/src/3dparty/qwt-5.2.0/designer/designer.pro" : {
      "ObjectId" : "74be4eac2e8a3687c3c1f2bf7f73787af1315780",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# -*- mode: sh -*- ###########################\r\n\n# Qwt Widget Library\r\n\n# Copyright (C) 1997   Josef Wilgen\r\n\n# Copyright (C) 2002   Uwe Rathmann\r\n\n#\r\n\n# This library is free software; you can redistribute it and/or\r\n\n# modify it under the terms of the Qwt License, Version 1.0\r\n\n##############################################\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Qt 3\r\n",
        "Line" : 23,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# isEmpty(QT_VERSION) does not work with Qt-4.1.0/MinGW\r\n",
        "Line" : 73,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Qt 3 \r\n",
        "Line" : 77,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Qt 4\r\n",
        "Line" : 104,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# do nothing\r\n",
        "Line" : 134,
        "CharPositionInLine" : 30
      },
      "CommentCount" : 6
    },
    "DynaMind-Gui/src/3dparty/qwt-5.2.0/examples/bode/bode.pro" : {
      "ObjectId" : "c8e0aad307db2b86bb23cedfb0716ff95865d0e4",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# -*- mode: sh -*- ################################################\r\n\n# Qwt Widget Library\r\n\n# Copyright (C) 1997   Josef Wilgen\r\n\n# Copyright (C) 2002   Uwe Rathmann\r\n\n#\r\n\n# This library is free software; you can redistribute it and/or\r\n\n# modify it under the terms of the Qwt License, Version 1.0\r\n\n###################################################################\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "DynaMind-Gui/src/3dparty/qwt-5.2.0/examples/cpuplot/cpuplot.pro" : {
      "ObjectId" : "c23ce33c9f02f5872ac4d4036bd57e244358401b",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# -*- mode: sh -*- ################################################\r\n\n# Qwt Widget Library\r\n\n# Copyright (C) 1997   Josef Wilgen\r\n\n# Copyright (C) 2002   Uwe Rathmann\r\n\n#\r\n\n# This library is free software; you can redistribute it and/or\r\n\n# modify it under the terms of the Qwt License, Version 1.0\r\n\n###################################################################\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "DynaMind-Gui/src/3dparty/qwt-5.2.0/examples/curvdemo1/curvdemo1.pro" : {
      "ObjectId" : "8e8f61b96b7f879aaf159e274d2e38efdf02c65c",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# -*- mode: sh -*- ################################################\r\n\n# Qwt Widget Library\r\n\n# Copyright (C) 1997   Josef Wilgen\r\n\n# Copyright (C) 2002   Uwe Rathmann\r\n\n#\r\n\n# This library is free software; you can redistribute it and/or\r\n\n# modify it under the terms of the Qwt License, Version 1.0\r\n\n###################################################################\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "DynaMind-Gui/src/3dparty/qwt-5.2.0/examples/curvdemo2/curvdemo2.pro" : {
      "ObjectId" : "eb025bdcd92ec2868640dc4ad3148b6f22ae81f5",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# -*- mode: sh -*- ################################################\r\n\n# Qwt Widget Library\r\n\n# Copyright (C) 1997   Josef Wilgen\r\n\n# Copyright (C) 2002   Uwe Rathmann\r\n\n#\r\n\n# This library is free software; you can redistribute it and/or\r\n\n# modify it under the terms of the Qwt License, Version 1.0\r\n\n###################################################################\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "DynaMind-Gui/src/3dparty/qwt-5.2.0/examples/data_plot/data_plot.pro" : {
      "ObjectId" : "f867570ce2c0d00a1f9e773d0c147c6364d5ff04",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# -*- mode: sh -*- ################################################\r\n\n# Qwt Widget Library\r\n\n# Copyright (C) 1997   Josef Wilgen\r\n\n# Copyright (C) 2002   Uwe Rathmann\r\n\n#\r\n\n# This library is free software; you can redistribute it and/or\r\n\n# modify it under the terms of the Qwt License, Version 1.0\r\n\n###################################################################\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "DynaMind-Gui/src/3dparty/qwt-5.2.0/examples/dials/dials.pro" : {
      "ObjectId" : "c11638689d54f1150e7ac41474a1d6153158833b",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# -*- mode: sh -*- ################################################\r\n\n# Qwt Widget Library\r\n\n# Copyright (C) 1997   Josef Wilgen\r\n\n# Copyright (C) 2002   Uwe Rathmann\r\n\n#\r\n\n# This library is free software; you can redistribute it and/or\r\n\n# modify it under the terms of the Qwt License, Version 1.0\r\n\n###################################################################\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "DynaMind-Gui/src/3dparty/qwt-5.2.0/examples/event_filter/event_filter.pro" : {
      "ObjectId" : "59cc7d7cfe0c2272e925b29bfab38b7abe9cbbc4",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# -*- mode: sh -*- ################################################\r\n\n# Qwt Widget Library\r\n\n# Copyright (C) 1997   Josef Wilgen\r\n\n# Copyright (C) 2002   Uwe Rathmann\r\n\n#\r\n\n# This library is free software; you can redistribute it and/or\r\n\n# modify it under the terms of the Qwt License, Version 1.0\r\n\n###################################################################\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "DynaMind-Gui/src/3dparty/qwt-5.2.0/examples/examples.pri" : {
      "ObjectId" : "6b70b5fe356029109f32f46cb4ff2e525cd3efb2",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# -*- mode: sh -*- ################################################\r\n\n# Qwt Widget Library\r\n\n# Copyright (C) 1997   Josef Wilgen\r\n\n# Copyright (C) 2002   Uwe Rathmann\r\n\n#\r\n\n# This library is free software; you can redistribute it and/or\r\n\n# modify it under the terms of the Qwt License, Version 1.0\r\n\n###################################################################\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Qt 3\r\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "DynaMind-Gui/src/3dparty/qwt-5.2.0/examples/examples.pro" : {
      "ObjectId" : "97fd3452464bdef3b9dff0146c076014827a83e7",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# -*- mode: sh -*- ################################################\r\n\n# Qwt Widget Library\r\n\n# Copyright (C) 1997   Josef Wilgen\r\n\n# Copyright (C) 2002   Uwe Rathmann\r\n\n#\r\n\n# This library is free software; you can redistribute it and/or\r\n\n# modify it under the terms of the Qwt License, Version 1.0\r\n\n###################################################################\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "DynaMind-Gui/src/3dparty/qwt-5.2.0/examples/histogram/histogram.pro" : {
      "ObjectId" : "0a8cb0dc9464bf28e5ec9765752bcd4d0ee5f1a5",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# -*- mode: sh -*- ################################################\r\n\n# Qwt Widget Library\r\n\n# Copyright (C) 1997   Josef Wilgen\r\n\n# Copyright (C) 2002   Uwe Rathmann\r\n\n#\r\n\n# This library is free software; you can redistribute it and/or\r\n\n# modify it under the terms of the Qwt License, Version 1.0\r\n\n###################################################################\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "DynaMind-Gui/src/3dparty/qwt-5.2.0/examples/radio/radio.pro" : {
      "ObjectId" : "4bf99335ef471f8b192c61e14ae1fe71165dee4c",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# -*- mode: sh -*- ################################################\r\n\n# Qwt Widget Library\r\n\n# Copyright (C) 1997   Josef Wilgen\r\n\n# Copyright (C) 2002   Uwe Rathmann\r\n\n#\r\n\n# This library is free software; you can redistribute it and/or\r\n\n# modify it under the terms of the Qwt License, Version 1.0\r\n\n###################################################################\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "DynaMind-Gui/src/3dparty/qwt-5.2.0/examples/realtime_plot/realtime_plot.pro" : {
      "ObjectId" : "e5f98b69286775227469467a577d309cb5cda717",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# -*- mode: sh -*- ################################################\r\n\n# Qwt Widget Library\r\n\n# Copyright (C) 1997   Josef Wilgen\r\n\n# Copyright (C) 2002   Uwe Rathmann\r\n\n#\r\n\n# This library is free software; you can redistribute it and/or\r\n\n# modify it under the terms of the Qwt License, Version 1.0\r\n\n###################################################################\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "DynaMind-Gui/src/3dparty/qwt-5.2.0/examples/simple_plot/simple_plot.pro" : {
      "ObjectId" : "e13d90a7160954ed42f223dca4f62a4c9835729c",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# -*- mode: sh -*- ################################################\r\n\n# Qwt Widget Library\r\n\n# Copyright (C) 1997   Josef Wilgen\r\n\n# Copyright (C) 2002   Uwe Rathmann\r\n\n#\r\n\n# This library is free software; you can redistribute it and/or\r\n\n# modify it under the terms of the Qwt License, Version 1.0\r\n\n###################################################################\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "DynaMind-Gui/src/3dparty/qwt-5.2.0/examples/sliders/sliders.pro" : {
      "ObjectId" : "fd7fc2e0cb6e25ca28d1403b011f2ac9b3976c33",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# -*- mode: sh -*- ################################################\r\n\n# Qwt Widget Library\r\n\n# Copyright (C) 1997   Josef Wilgen\r\n\n# Copyright (C) 2002   Uwe Rathmann\r\n\n#\r\n\n# This library is free software; you can redistribute it and/or\r\n\n# modify it under the terms of the Qwt License, Version 1.0\r\n\n###################################################################\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "DynaMind-Gui/src/3dparty/qwt-5.2.0/examples/spectrogram/spectrogram.pro" : {
      "ObjectId" : "927ef859ea2cb5cc5da91974b75b3f4cba5b4601",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# -*- mode: sh -*- ################################################\r\n\n# Qwt Widget Library\r\n\n# Copyright (C) 1997   Josef Wilgen\r\n\n# Copyright (C) 2002   Uwe Rathmann\r\n\n#\r\n\n# This library is free software; you can redistribute it and/or\r\n\n# modify it under the terms of the Qwt License, Version 1.0\r\n\n###################################################################\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "DynaMind-Gui/src/3dparty/qwt-5.2.0/examples/svgmap/svgmap.pro" : {
      "ObjectId" : "b165f2dbecb2b92b91cee6a329c436adc1d9949b",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# -*- mode: sh -*- ################################################\r\n\n# Qwt Widget Library\r\n\n# Copyright (C) 1997   Josef Wilgen\r\n\n# Copyright (C) 2002   Uwe Rathmann\r\n\n#\r\n\n# This library is free software; you can redistribute it and/or\r\n\n# modify it under the terms of the Qwt License, Version 1.0\r\n\n###################################################################\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "DynaMind-Gui/src/3dparty/qwt-5.2.0/examples/sysinfo/sysinfo.pro" : {
      "ObjectId" : "43f652acf5f1e5994ed6025bfe6ae68b4ac74d6d",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# -*- mode: sh -*- ################################################\r\n\n# Qwt Widget Library\r\n\n# Copyright (C) 1997   Josef Wilgen\r\n\n# Copyright (C) 2002   Uwe Rathmann\r\n\n#\r\n\n# This library is free software; you can redistribute it and/or\r\n\n# modify it under the terms of the Qwt License, Version 1.0\r\n\n###################################################################\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "DynaMind-Gui/src/3dparty/qwt-5.2.0/qwt.pro" : {
      "ObjectId" : "f122d1498003deff55d116a64ba47736006461a4",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# -*- mode: sh -*- ###########################\r\n\n# Qwt Widget Library\r\n\n# Copyright (C) 1997   Josef Wilgen\r\n\n# Copyright (C) 2002   Uwe Rathmann\r\n\n#\r\n\n# This library is free software; you can redistribute it and/or\r\n\n# modify it under the terms of the Qwt License, Version 1.0\r\n\n##############################################\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "DynaMind-Gui/src/3dparty/qwt-5.2.0/qwtconfig.pri" : {
      "ObjectId" : "6e5f2dd390e00dcdab84ed419f55be40829a827c",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "######################################################################\r\n\n# Install paths\r\n\n######################################################################\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "######################################################################\r\n\n# qmake internal options\r\n\n######################################################################\r\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Also for Qtopia Core!\r\n",
        "Line" : 26,
        "CharPositionInLine" : 27
      },
      "3" : {
        "Text" : "######################################################################\r\n\n# release/debug mode\r\n\n# If you want to build both DEBUG_SUFFIX and RELEASE_SUFFIX\r\n\n# have to differ to avoid, that they overwrite each other.\r\n\n######################################################################\r\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Qt 3\r\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# release/debug\r\n",
        "Line" : 40,
        "CharPositionInLine" : 36
      },
      "6" : {
        "Text" : "# Qt 4\r\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# On Windows you can't mix release and debug libraries.\r\n\n# The designer is built in release mode. If you like to use it\r\n\n# you need a release version. For your own application development you\r\n\n# might need a debug version. \r\n\n# Enable debug_and_release + build_all if you want to build both.\r\n",
        "Line" : 45,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# release/debug/debug_and_release\r\n",
        "Line" : 51,
        "CharPositionInLine" : 40
      },
      "9" : {
        "Text" : "#CONFIG           += release_and_release\r\n\n#CONFIG           += build_all\r\n",
        "Line" : 52,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# release/debug\r\n",
        "Line" : 56,
        "CharPositionInLine" : 40
      },
      "11" : {
        "Text" : "######################################################################\r\n\n# If you want to have different names for the debug and release \r\n\n# versions you can add a suffix rule below.\r\n\n######################################################################\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "######################################################################\r\n\n# Build the static/shared libraries.\r\n\n# If QwtDll is enabled, a shared library is built, otherwise\r\n\n# it will be a static library.\r\n\n######################################################################\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "######################################################################\r\n\n# QwtPlot enables all classes, that are needed to use the QwtPlot \r\n\n# widget. \r\n\n######################################################################\r\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "######################################################################\r\n\n# QwtWidgets enables all classes, that are needed to use the all other\r\n\n# widgets (sliders, dials, ...), beside QwtPlot. \r\n\n######################################################################\r\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "######################################################################\r\n\n# If you want to display svg imageson the plot canvas, enable the \r\n\n# line below. Note that Qwt needs the svg+xml, when enabling \r\n\n# QwtSVGItem.\r\n\n######################################################################\r\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#CONFIG     += QwtSVGItem\r\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "######################################################################\r\n\n# If you have a commercial license you can use the MathML renderer\r\n\n# of the Qt solutions package to enable MathML support in Qwt.\r\n\n# So if you want this, copy qtmmlwidget.h + qtmmlwidget.cpp to\r\n\n# textengines/mathml and enable the line below.\r\n\n######################################################################\r\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#CONFIG     += QwtMathML\r\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "######################################################################\r\n\n# If you want to build the Qwt designer plugin, \r\n\n# enable the line below.\r\n\n# Otherwise you have to build it from the designer directory.\r\n\n######################################################################\r\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "######################################################################\r\n\n# If you want to auto build the examples, enable the line below\r\n\n# Otherwise you have to build them from the examples directory.\r\n\n######################################################################\r\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#CONFIG     += QwtExamples\r\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 22
    },
    "DynaMind-Gui/src/3dparty/qwt-5.2.0/src/CMakeLists.txt" : {
      "ObjectId" : "1922eb89c10d831d80dbd30136214c6eb956cb94",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "DynaMind-Gui/src/3dparty/qwt-5.2.0/src/src.pro" : {
      "ObjectId" : "a93fb31eb08a20e8c6b650f2b876a5588dee16f9",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# -*- mode: sh -*- ###########################\r\n\n# Qwt Widget Library\r\n\n# Copyright (C) 1997   Josef Wilgen\r\n\n# Copyright (C) 2002   Uwe Rathmann\r\n\n#\r\n\n# This library is free software; you can redistribute it and/or\r\n\n# modify it under the terms of the Qwt License, Version 1.0\r\n\n##############################################\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# qmake project file for building the qwt libraries\r\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Qt 3\r\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Install directives\r\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "DynaMind-Gui/src/3dparty/qwt-5.2.0/textengines/mathml/mathml.pro" : {
      "ObjectId" : "5f1803bb10521be30def64e8007df70a61425ac5",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# -*- mode: sh -*- ###########################\r\n\n# Qwt Widget Library\r\n\n# Copyright (C) 1997   Josef Wilgen\r\n\n# Copyright (C) 2002   Uwe Rathmann\r\n\n#\r\n\n# This library is free software; you can redistribute it and/or\r\n\n# modify it under the terms of the Qwt License, Version 1.0\r\n\n##############################################\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Qt3\r\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Qt4\r\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# The files below can be found in the MathML tarball of the Qt Solution \r\n\n# package http://www.trolltech.com/products/qt/addon/solutions/catalog/4/Widgets/qtmmlwidget\r\n\n# that is available for owners of a commercial Qt license.\r\n\n#\r\n\n# Copy them here, or modify the pro file to your installation.\r\n",
        "Line" : 36,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 4
    },
    "DynaMind-Gui/src/3dparty/qwt-5.2.0/textengines/textengines.pri" : {
      "ObjectId" : "95e53fdea8956f3937886b77e5a947841dbbae0f",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# -*- mode: sh -*- ###########################\r\n\n# Qwt Widget Library\r\n\n# Copyright (C) 1997   Josef Wilgen\r\n\n# Copyright (C) 2002   Uwe Rathmann\r\n\n#\r\n\n# This library is free software; you can redistribute it and/or\r\n\n# modify it under the terms of the Qwt License, Version 1.0\r\n\n##############################################\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Qt 3\r\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "DynaMind-Gui/src/3dparty/qwt-5.2.0/textengines/textengines.pro" : {
      "ObjectId" : "5931155be07cd8341feb9a92f044ae7b26335846",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# -*- mode: sh -*- ################################################\r\n\n# Qwt Widget Library\r\n\n# Copyright (C) 1997   Josef Wilgen\r\n\n# Copyright (C) 2002   Uwe Rathmann\r\n\n#\r\n\n# This library is free software; you can redistribute it and/or\r\n\n# modify it under the terms of the Qwt License, Version 1.0\r\n\n###################################################################\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "DynaMind-Gui/src/dynamind-modelbuilder/CMakeLists.txt" : {
      "ObjectId" : "ea376125a6afef18f33be8466820bdbab6ae74bd",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "DynaMind-Gui/src/libdynamind-gui/CMakeLists.txt" : {
      "ObjectId" : "856193b03a657a89be79a875d4dd11613b3af0fe",
      "LastModified" : "2016-05-23T06:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#INSTALL(TARGETS dynamindgui\r\n\n#        DESTINATION \"lib\"\r\n\n#\t\tPERMISSIONS OWNER_WRITE OWNER_READ OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "DynaMind-Performance-Assessment/3rdparty/CMakeLists.txt" : {
      "ObjectId" : "d29c1b0e50feb8c7919b3a3311f9def68307e1e5",
      "LastModified" : "2018-03-19T16:09:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "DynaMind-Performance-Assessment/CMakeLists.txt" : {
      "ObjectId" : "12bd721d0c787ada52c01c43d3b97fa1c0e3c04b",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#INCLUDE_DIRECTORIES(cd3/src/app)\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "DynaMind-Performance-Assessment/cd3/CMakeLists.txt" : {
      "ObjectId" : "47dad19a7e3e33cf308421f350c07434ba5a109f",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##check for Qt4 which is a definitive requirement for building cd3\n\n#find_package(Qt4 REQUIRED)\n\n#set(QT_USE_QTXML true)\n\n#set(QT_USE_QTGUI true)\n\n#set(QT_USE_QTSVG true)\n\n#add_definitions(-DQT_NO_KEYWORDS)\n\n#INCLUDE(${QT_USE_FILE})\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#include python scripting capabilites\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#check for boost which is a definitive requirement for building cd3\n\n#status makes problems when compiling in linux\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#check for openmp. also disables the code using qt thread\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#check for graphviz\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "##'NOF CHECKING... BUILDING##\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#add_subdirectory(src/gui)\n\n#add_subdirectory(src/plugindoc)\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#option(WITH_PLUGINDOC \"Build the plugindoc app\" OFF)\n\n#if (WITH_PLUGINDOC)\n\n#\tadd_subdirectory(src/plugindoc)\n\n#endif()\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "DynaMind-Performance-Assessment/cd3/src/app/CMakeLists.txt" : {
      "ObjectId" : "2d10327ac844785e94f36921bc7139d10b99f5ed",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "DynaMind-Performance-Assessment/cd3/src/cd3core/CMakeLists.txt" : {
      "ObjectId" : "1d3f429221e15255354f38c2e56df59f9dcf4f40",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "DynaMind-Performance-Assessment/cd3/src/gui/CMakeLists.txt" : {
      "ObjectId" : "9db8ed558cdd6fa802ae7048ef6374958cdcc182",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "DynaMind-Performance-Assessment/cd3/src/python-swig/CMakeLists.txt" : {
      "ObjectId" : "5ee7c67be5f5bf2021ba7dff93bae101139e76a0",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#execute_process(COMMAND ${SWIG_EXECUTABLE} -python -c++ -o pycd3WRAP.cpp ${CMAKE_CURRENT_SOURCE_DIR}/pycd3.i\n\n#\tWORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR})\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#add_custom_target(pycd3gen ALL ${SWIG_EXECUTABLE} -python -c++ -o pycd3WRAP.cpp ${CMAKE_CURRENT_SOURCE_DIR}/pycd3.i\n\n#\tWORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}\n\n#\tSOURCES ${CMAKE_CURRENT_SOURCE_DIR}/pycd3.i)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "DynaMind-Performance-Assessment/cd3/src/tests/CMakeLists.txt" : {
      "ObjectId" : "6a56a02eb1a66edc7522c7638233eaae3aa8a7f9",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "DynaMind-Performance-Assessment/scripts/CMakeLists.txt" : {
      "ObjectId" : "7ad5651fad804d0c054b7e1af785b126c04cfb73",
      "LastModified" : "2018-03-19T16:09:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#MACRO(list_subdirectories retval curdir return_relative)\n\n#  FILE(GLOB sub-dir RELATIVE ${curdir} *)\n\n#  SET(list_of_dirs \"\")\n\n#  FOREACH(dir ${sub-dir})\n\n#    IF(IS_DIRECTORY ${curdir}/${dir})\n\n#      IF(${return_relative})\n\n#        SET(list_of_dirs ${list_of_dirs} ${dir})\n\n#      ELSE()\n\n#        SET(list_of_dirs ${list_of_dirs} ${curdir}/${dir})\n\n#      ENDIF()\n\n#    ENDIF()\n\n#  ENDFOREACH()\n\n#  SET(${retval} ${list_of_dirs})\n\n#  MESSAGE(STATUS \"Found subdirectories in ${curdir}: ${list_of_dirs}\")\n\n#ENDMACRO()\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#LIST_SUBDIRECTORIES(DIRS ${dynamind-performance-assessment_SOURCE_DIR}/scripts/ 1)\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#FOREACH(DIR ${DIRS})\n\n#    FILE(GLOB SCRIPTFILES \"${dynamind-performance-assessment_SOURCE_DIR}/scripts/${DIR}/*.py\")\n\n#    INSTALL(FILES ${SCRIPTFILES} DESTINATION \"${SCRIPT_PATH}/${DIR}\")\n\n#ENDFOREACH(DIR)\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#FILE(GLOB BASESCRIPTS \"${dynamind-performance-assessment_SOURCE_DIR}/scripts/*.py\")\n\n#INSTALL(FILES ${BASESCRIPTS} DESTINATION \"${SCRIPT_PATH}\")\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "DynaMind-Performance-Assessment/src/DynaMind-Performance-Assessment/CMakeLists.txt" : {
      "ObjectId" : "f4ce888114273f636d90e356aa8ba5f419e2c51e",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "DynaMind-Performance-Assessment/src/cd3-modules/CMakeLists.txt" : {
      "ObjectId" : "24fdd8386fc5504761b9f1050ce3f8df99168d84",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "DynaMind-Performance-Assessment/src/unit-tests/CMakeLists.txt" : {
      "ObjectId" : "6d1cdbd38a4232bdd7b9ea54e14c86cdac314190",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "DynaMind/CMake/CMakeLists.txt" : {
      "ObjectId" : "cbf3f4c5140ea5c753f72a85766f557c73125966",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "DynaMind/CMakeLists.txt" : {
      "ObjectId" : "170c500babc1287a36c6bfef019b01a1b0c37853",
      "LastModified" : "2018-03-19T16:09:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#execute_process ( COMMAND ${PYTHON_EXECUTABLE} -c \"from distutils.sysconfig import get_python_lib; print get_python_lib()\" OUTPUT_VARIABLE PYTHON_SITE_PACKAGES OUTPUT_STRIP_TRAILING_WHITESPACE)\n",
        "Line" : 68,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "#INCLUDE(DynaMindCPack.txt)\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "DynaMind/scripts/CMakeLists.txt" : {
      "ObjectId" : "b0d3fdea297aacb95a87391da3937605a4824838",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "DynaMind/src/DMExampleSimulations/CMakeLists.txt" : {
      "ObjectId" : "031dbafbfcb404b5a403293e676239067e0489d6",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Installation of the program\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "DynaMind/src/DMTestModules/CMakeLists.txt" : {
      "ObjectId" : "55e3491c0650ebea64ccc4f6ed0464ee5a9a33e3",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "DynaMind/src/DMToolboxes/CMakeLists.txt" : {
      "ObjectId" : "81f3d4eb41e2f08ed02cc7e19569c1837cbb1f5d",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "DynaMind/src/core/CMakeLists.txt" : {
      "ObjectId" : "77ea9e2765171174c3e013048d97cebfe9483845",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ADD_DEPENDENCIES(dynamindcore pydynamindgen pydmtoolboxgen)\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "DynaMind/src/core/core.pro" : {
      "ObjectId" : "601bd717d1803db8d140e16d28ba0a8e64513641",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "DynaMind/src/memory_test/CMakeLists.txt" : {
      "ObjectId" : "7ce44c683ef7c6d87ecb72e76f6f147f3c37e534",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "DynaMind/src/python-swig/CMakeLists.txt" : {
      "ObjectId" : "a9e5f880bbee1b63ec12f46a9cae5f06d2031d72",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ADD_DEPENDENCIES(pydynamind.i dynamindcore dynamindtoolbox )\n\n#ADD_DEPENDENCIES(pydmtoolbox.i dynamindcore )\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "DynaMind/src/unit-test/CMakeLists.txt" : {
      "ObjectId" : "575141a528c1d802d86dfc11ec38865474ebb9c0",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "DynaMind/src/unit-test/gtest-1.7.0/CMakeLists.txt" : {
      "ObjectId" : "57470c84f3af0772c411bbb8bbbb41b515747ecd",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# CMake build script for Google Test.\n\n#\n\n# To run the tests for Google Test itself on Linux, use 'make test' or\n\n# ctest.  You can select which tests to run using 'ctest -R regex'.\n\n# For more options, run 'ctest --help'.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BUILD_SHARED_LIBS is a standard CMake variable, but we declare it here to\n\n# make it prominent in the GUI.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# When other libraries are using a shared version of runtime libraries,\n\n# Google Test also has to use one.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Defines pre_project_set_up_hermetic_build() and set_up_hermetic_build().\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "########################################################################\n\n#\n\n# Project-wide settings\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Name of the project.\n\n#\n\n# CMake files in this project can refer to the root source directory\n\n# as ${gtest_SOURCE_DIR} and to the root binary directory as\n\n# ${gtest_BINARY_DIR}.\n\n# Language \"C\" is required for find_package(Threads).\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define helper functions and macros used by Google Test.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Defined in internal_utils.cmake.\n",
        "Line" : 52,
        "CharPositionInLine" : 30
      },
      "8" : {
        "Text" : "# Where Google Test's .h files can be found.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Where Google Test's libraries can be found.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "########################################################################\n\n#\n\n# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Google Test libraries.  We build them using more strict warnings than what\n\n# are used for other targets, to ensure that gtest can be compiled by a user\n\n# aggressive about warnings.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "########################################################################\n\n#\n\n# Samples on how to link user tests with gtest or gtest_main.\n\n#\n\n# They are not built by default.  To build them, set the\n\n# gtest_build_samples option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_samples=ON flag when running cmake.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "########################################################################\n\n#\n\n# Google Test's own tests.\n\n#\n\n# You can skip this section if you aren't interested in testing\n\n# Google Test itself.\n\n#\n\n# The tests are not built by default.  To build them, set the\n\n# gtest_build_tests option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_tests=ON flag when running cmake.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# This must be set in the root directory for the tests to be run by\n\n# 'make test' or ctest.\n",
        "Line" : 107,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "############################################################\n\n# C++ tests built with standard compiler flags.\n",
        "Line" : 111,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "############################################################\n\n# C++ tests built with non-standard compiler flags.\n",
        "Line" : 142,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 145,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# The C++ Standard specifies tuple_element<int, class>.\n\n# Yet MSVC 10's <utility> declares tuple_element<size_t, class>.\n\n# That declaration conflicts with our own standard-conforming\n\n# tuple implementation.  Therefore using our own tuple with\n\n# MSVC 10 doesn't compile.\n",
        "Line" : 175,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "############################################################\n\n# Python tests.\n",
        "Line" : 191,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 197,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 234,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 22
    },
    "DynaMind/src/unit-test/gtest-1.7.0/Makefile.am" : {
      "ObjectId" : "9c96b42572ca943d5fb4d4303842f12a545e8523",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Automake file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Nonstandard package files for distribution\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# gtest source files that we don't compile directly.  They are\n\n# #included by gtest-all.cc.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Sample files that we don't compile.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# C++ test files that we don't compile directly.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Python tests that we don't run.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# CMake script\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# MSVC project files\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# xcode project files\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# xcode sample files\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# C++Builder project files\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Distribute and install M4 macro\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# We define the global AM_CPPFLAGS as everything we compile includes from these\n\n# directories.\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Modifies compiler and linker flags for pthreads compatibility.\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Build rules for libraries.\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Bulid rules for samples and tests. Automake's naming for some of\n\n# these variables isn't terribly obvious, so this is a brief\n\n# reference:\n\n#\n\n# TESTS -- Programs run automatically by \"make check\"\n\n# check_PROGRAMS -- Programs built by \"make check\" but not necessarily run\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# A simple sample on using gtest.\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Another sample.  It also verifies that libgtest works.\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# This tests most constructs of gtest and verifies that libgtest_main\n\n# and libgtest work.\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Tests that fused gtest files compile and work.\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Build rules for putting fused Google Test files into the distribution\n\n# package. The user can also create those files by manually running\n\n# scripts/fuse_gtest_files.py.\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Death tests may produce core dumps in the build directory. In case\n\n# this happens, clean them to keep distcleancheck happy.\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Disables 'make install' as installing a compiled version of Google\n\n# Test can lead to undefined behavior due to violation of the\n\n# One-Definition Rule.\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "DynaMind/src/unit-test/gtest-1.7.0/cmake/internal_utils.cmake" : {
      "ObjectId" : "8cb21894cebacd5bdfb598c8663a5be50325d70f",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Defines functions and macros useful for building Google Test and\n\n# Google Mock.\n\n#\n\n# Note:\n\n#\n\n# - This file will be run twice when building Google Mock (once via\n\n#   Google Test's CMakeLists.txt, and once via Google Mock's).\n\n#   Therefore it shouldn't have any side effects other than defining\n\n#   the functions and macros.\n\n#\n\n# - The functions/macros defined in this file may depend on Google\n\n#   Test and Google Mock's option() definitions, and thus must be\n\n#   called *after* the options have been defined.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Tweaks CMake's default compiler/linker settings to suit Google Test's needs.\n\n#\n\n# This must be a macro(), as inside a function string() can only\n\n# update variables in the function scope.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For MSVC, CMake sets certain flags to defaults we want to override.\n\n# This replacement code is taken from sample in the CMake Wiki at\n\n# http://www.cmake.org/Wiki/CMake_FAQ#Dynamic_Replace.\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# When Google Test is built as a shared library, it should also use\n\n# shared runtime libraries.  Otherwise, it may end up with multiple\n\n# copies of runtime library data in different modules, resulting in\n\n# hard-to-find crashes. When it is built as a static library, it is\n\n# preferable to use CRT as static libraries, as we don't have to rely\n\n# on CRT DLLs being available. CMake always defaults to using shared\n\n# CRT libraries, so we override that default here.\n",
        "Line" : 28,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# We prefer more strict warning checking for building Google Test.\n\n# Replaces /W3 with /W4 in defaults.\n",
        "Line" : 38,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Defines the compiler/linker flags used to build Google Test and\n\n# Google Mock.  You can tweak these definitions to suit your need.  A\n\n# variable's value is empty before it's explicitly assigned to.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Defines CMAKE_USE_PTHREADS_INIT and CMAKE_THREAD_LIBS_INIT.\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Newlines inside flags variables break CMake's NMake generator.\n\n# TODO(vladl@google.com): Add -RTCs and -RTCu to debug builds.\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Suppress spurious warnings MSVC 7.1 sometimes issues.\n\n# Forcing value to bool.\n",
        "Line" : 60,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# Copy constructor and assignment operator could not be generated.\n",
        "Line" : 63,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# Compatibility warnings not applicable to Google Test.\n\n# Resolved overload was found by argument-dependent lookup.\n",
        "Line" : 65,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# Until version 4.3.2, GCC doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 78,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Sun Pro doesn't provide macros to indicate whether exceptions and\n\n# RTTI are enabled, so we define GTEST_HAS_* explicitly.\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# CMake 2.8 changes Visual Age's compiler ID to \"XL\".\n",
        "Line" : 92,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Until version 9.0, Visual Age doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# RTTI can not be disabled in HP aCC compiler.\n",
        "Line" : 103,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# The pthreads library is available and allowed.\n",
        "Line" : 107,
        "CharPositionInLine" : 32
      },
      "17" : {
        "Text" : "# For building gtest's own tests and samples.\n",
        "Line" : 113,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# For building the gtest libraries.\n",
        "Line" : 121,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# type can be either STATIC or SHARED to denote a static or shared library.\n\n# ARGN refers to additional arguments after 'cxx_flags'.\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "########################################################################\n\n#\n\n# Helper functions for creating build targets.\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# cxx_executable_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ executable that depends on the given libraries and\n\n# is built from the given source files with the given compiler flags.\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# To support mixing linking in static and dynamic libraries, link each\n\n# library in with an extra call to target_link_libraries.\n",
        "Line" : 172,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# cxx_executable(name dir lib srcs...)\n\n#\n\n# creates a named target that depends on the given libs and is built\n\n# from the given source files.  dir/name.cc is implicitly included in\n\n# the source file list.\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Sets PYTHONINTERP_FOUND and PYTHON_EXECUTABLE.\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# cxx_test_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ test that depends on the given libs and is built\n\n# from the given source files with the given compiler flags.\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# cxx_test(name libs srcs...)\n\n#\n\n# creates a named test target that depends on the given libs and is\n\n# built from the given source files.  Unlike cxx_test_with_flags,\n\n# test/name.cc is already implicitly included in the source file list.\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# py_test(name)\n\n#\n\n# creates a Python test with the given name whose main module is in\n\n# test/name.py.  It does nothing if Python is not installed.\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# We are not supporting Python tests on Linux yet as they consider\n\n# all Linux environments to be google3 and try to use google3 features.\n",
        "Line" : 216,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# ${CMAKE_BINARY_DIR} is known at configuration time, so we can\n\n# directly bind it from cmake. ${CTEST_CONFIGURATION_TYPE} is known\n\n# only at ctest runtime (by calling ctest -c <Configuration>), so\n\n# we have to escape $ to delay variable substitution here.\n",
        "Line" : 219,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 31
    },
    "DynaVIBe/CMakeLists.txt" : {
      "ObjectId" : "2cd0d009b6e2305549681a7fc0cf668b057e2e27",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ADD_DEFINITIONS(-DQT_NO_KEYWORDS)\n",
        "Line" : 67,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "#INCLUDE_DIRECTORIES(epanet/src)\n\n#INCLUDE_DIRECTORIES(swmm/src)\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "DynaVIBe/epanet/CMakeLists.txt" : {
      "ObjectId" : "e3d9ec4194ebdfe7330469b769b5b5293844097f",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "DynaVIBe/epanet/src/CMakeLists.txt" : {
      "ObjectId" : "3de4a0d1719a492c0fb51010e4b9094e1700243a",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "DynaVIBe/src/CMakeLists.txt" : {
      "ObjectId" : "3c68fe0b3e72c0f3ad7f6ea866769180159b12a4",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "DynaVIBe/swmm/CMakeLists.txt" : {
      "ObjectId" : "e3d9ec4194ebdfe7330469b769b5b5293844097f",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "DynaVIBe/swmm/src/CMakeLists.txt" : {
      "ObjectId" : "ae9a67c0f4b32186ea68917ec30dc4f9682d1c61",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/CMakeLists.txt" : {
      "ObjectId" : "13ae8e184405f3ea9afb6a91d6185f4c05a0db8a",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# configured documentation tools and intermediate build results\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sphinx cache with pickled ReST documents\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# HTML output directory\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#create directory before install target\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "doc/cmake/FindSphinx.cmake" : {
      "ObjectId" : "4574ebeff318225f2f9c5fcb6127181f3824d982",
      "LastModified" : "2015-10-05T11:09:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 73,
    "QMAKE" : 26,
    "AUTOMAKE" : 3
  },
  "ElapsedTime" : 2575
}