{
  "Repository" : "73428321",
  "Revision" : "HEAD",
  "ObjectId" : "805c5b595d785104793d3938c7396b106f603d60",
  "CommitTime" : "2019-04-18T09:24:29Z",
  "Files" : {
    "pom.xml" : {
      "ObjectId" : "87c2b848aa1eaff984f003dead5821b7d96b278d",
      "LastModified" : "2019-04-17T20:28:33Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Other properties such as kafka.version are derived from parent project(s) such as\n         https://github.com/confluentinc/common (see common's pom.xml for kafka.version).\n    ",
        "Line" : 49,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : " This version must be compatible with the Scala version of the Kafka dependency. ",
        "Line" : 107,
        "CharPositionInLine" : 101
      },
      "2" : {
        "Text" : " This could be a test-only dependency, but we keep it a compile dependency so that\n                 users are able to package the examples via `mvn package` and actually run the examples\n                 against a Kafka cluster. ",
        "Line" : 113,
        "CharPositionInLine" : 46
      },
      "3" : {
        "Text" : "\n            This dependency is included to demonstrate the use of\n            Confluent Monitoring Interceptors in conjunction with\n            Kafka Streams but isn't a required\n            dependency for running Kafka Streams.\n        ",
        "Line" : 162,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : " Test dependencies ",
        "Line" : 180,
        "CharPositionInLine" : 35
      },
      "5" : {
        "Text" : " Required for e.g. schema registry's RestApp ",
        "Line" : 247,
        "CharPositionInLine" : 65
      },
      "6" : {
        "Text" : " The following dependencies on ScalaTest are only required for the Scala tests\n             under src/test/scala/.  They are not required for Java code/tests.\n        ",
        "Line" : 254,
        "CharPositionInLine" : 12
      },
      "7" : {
        "Text" : " This is a compile-time dependency but included only for scalatest below,\n                 so still list it under test dependencies. ",
        "Line" : 257,
        "CharPositionInLine" : 63
      },
      "8" : {
        "Text" : "\n                Add Scala sources and tests to project.\n                See http://www.mojohaus.org/build-helper-maven-plugin/usage.html\n            ",
        "Line" : 291,
        "CharPositionInLine" : 16
      },
      "9" : {
        "Text" : " See http://davidb.github.io/scala-maven-plugin/usage.html ",
        "Line" : 326,
        "CharPositionInLine" : 79
      },
      "10" : {
        "Text" : "\n                           In combination with Scala 2.11, `-Xexperimental` enables SAM\n                           for Java 8 lambda support.  Make sure `kafka.scala.version`\n                           is set to `2.11`, not `2.10`.\n                        ",
        "Line" : 337,
        "CharPositionInLine" : 28
      },
      "11" : {
        "Text" : " Emit warning and location for usages of features that should be imported explicitly. ",
        "Line" : 339,
        "CharPositionInLine" : 118
      },
      "12" : {
        "Text" : " Emit warning and location for usages of deprecated APIs. ",
        "Line" : 341,
        "CharPositionInLine" : 90
      },
      "13" : {
        "Text" : " Enable additional warnings where generated code depends on assumptions. ",
        "Line" : 343,
        "CharPositionInLine" : 105
      },
      "14" : {
        "Text" : " Enable recommended additional warnings. ",
        "Line" : 345,
        "CharPositionInLine" : 73
      },
      "15" : {
        "Text" : " Warn if an argument list is modified to match the receiver. ",
        "Line" : 347,
        "CharPositionInLine" : 93
      },
      "16" : {
        "Text" : " Fail on compiler warnings ",
        "Line" : 350,
        "CharPositionInLine" : 59
      },
      "17" : {
        "Text" : "TODO: enable this once we have warnings under control<arg>-Xfatal-warnings</arg>",
        "Line" : 351,
        "CharPositionInLine" : 112
      },
      "18" : {
        "Text" : "TODO: enable this once we have warnings under control<arg>-Werror</arg>",
        "Line" : 374,
        "CharPositionInLine" : 103
      },
      "19" : {
        "Text" : "\n                   See https://wiki.jasig.org/display/LIC/maven-notice-plugin\n                   In a nutshell: `mvn notice:check` and `mvn notice:generate`\n                ",
        "Line" : 439,
        "CharPositionInLine" : 20
      },
      "20" : {
        "Text" : "\n                     This declaration merges with the one in the parent, rather\n                     than overriding it, so we need to disable the \"validate\" phase\n                     execution that the parent declares and declare our own\n                     during \"test-compile\".\n\n                     One reason for this is that avro codegen runs during compile,\n                     and while it's not strictly a precondition, it's\n                     confusing to address style violations while the IDE is telling you\n                     that some generated class doesn't exist. Test-compile is the first phase\n                     that's guaranteed to run after compile and before any unit or integration\n                     tests.\n\n                     Also, we want to disable the parent's configuration because it declares stuff\n                     we don't care about, like suppressions. (Honestly, it shouldn't)\n                     ",
        "Line" : 476,
        "CharPositionInLine" : 25
      },
      "CommentCount" : 21
    }
  },
  "FileTypes" : {
    "MAVEN" : 1
  },
  "ElapsedTime" : 1032
}