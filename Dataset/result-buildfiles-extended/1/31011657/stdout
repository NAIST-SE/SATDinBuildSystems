{
  "Repository" : "31011657",
  "Revision" : "HEAD",
  "ObjectId" : "9f9fb248177b44046d4f26c6b1480502310695bc",
  "CommitTime" : "2018-12-28T16:58:48Z",
  "Files" : {
    "source/Makefile" : {
      "ObjectId" : "5991577acf2a58f3c761216e4f472c89ae1dbc29",
      "LastModified" : "2018-08-06T02:31:26Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# > Select YaneuraOu edition below.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#YANEURAOU_EDITION = HELP_MATE_ENGINE\n\n#YANEURAOU_EDITION = MATE_ENGINE\n\n#YANEURAOU_EDITION = YANEURAOU_2018_GOKU_ENGINE\n\n#YANEURAOU_EDITION = YANEURAOU_2018_TNK_ENGINE\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# clangでコンパイルしたほうがgccより数%速いっぽい。\n\n#COMPILER = g++\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# 標準的なコンパイルオプション\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# -I../include\n",
        "Line" : 19,
        "CharPositionInLine" : 11
      },
      "5" : {
        "Text" : "# clang用にCFLAGSなどを変更\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# stdlib\n",
        "Line" : 23,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# 関数の引数が関数本体で使われていないときに警告出るのうざすぎるので抑制。\n",
        "Line" : 26,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# static リンクを行う際に __cxa_guard_acquire __cxa_guard_release の生成を抑止\n\n#   undefined reference to `__imp___cxa_guard_acquire'\n\n#   undefined reference to `__imp___cxa_guard_release'\n\n# static 変数を初期化したかを pthread_mutex_t でロックを取って確認し、\n\n# 最初の実行なら初期化するスレッドセーフなコードを生成するためのもの。\n\n# → 本当に消してしまっても大丈夫か？\n",
        "Line" : 29,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# msys2用のclangでは、OpenMP使えない？インスコ仕方がわからん。\n",
        "Line" : 37,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# リンク時最適化。これをつけるとmsys2環境だとセグフォで落ちる。\n\n# 落ちない環境なら有効にしたほうが速い実行ファイルが生成されるはず。\n\n# CFLAGS += -flto\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# CFLAGSとLDFLAGSの両方で-fltoを指定する必要がある。\n\n# cf. https://gcc.gnu.org/onlinedocs/gcc-6.3.0/gcc/Optimize-Options.html#Optimize-Options\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# wstringを使うためにこのシンボル定義が必要。\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# stripの指示。(実行ファイルのサイズを小さく)\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# mingw64では-D_WIN64,-D_WIN32は環境に応じて自動で設定されるので指定すべきではない。\n\n# CFLAGS += -D_WIN64\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# これを指定していると、各CPU向けの実行ファイルが生成されないので指定すべきではない。\n\n# CFLAGS   += -march=native\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# デバッグ情報を付加\n\n# CFLAGS  += -g3 -ggdb\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# OpenMPを使うときにCFLAGSとして指定するオプション\n\n# ※ 学習部ではOpenMpを用いるので、学習用のビルドではこのオプションを指定する。\n\n# clangでOPENMPを有効にしてビルドする方法については、解説.txtを参照のこと。\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#SOURCES  = $(wildcard *.cpp)\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# 学習用バイナリのときは、openmpを有効にする。\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 869
}