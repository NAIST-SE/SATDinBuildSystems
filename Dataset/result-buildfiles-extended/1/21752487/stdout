{
  "Repository" : "21752487",
  "Revision" : "HEAD",
  "ObjectId" : "c8bec26c8e1efefc01a9686b3ab9297c192548f6",
  "CommitTime" : "2019-01-27T08:03:47Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "e7002a5bfae0dfce64d16ea0e4547ddeddc13e7e",
      "LastModified" : "2016-01-08T04:34:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############\n\n# Cmake Blerg #\n\n###############\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find the modules\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set sane output paths\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Default to Release builds\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Version jiggery-pokery\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Manually set the version\n",
        "Line" : 27,
        "CharPositionInLine" : 24
      },
      "6" : {
        "Text" : "# git describe as versioning\n",
        "Line" : 30,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "############################\n\n## User-definable options ##\n\n############################\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "###############################\n\n## Find Packages and Headers ##\n\n###############################\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Eigen is header only, no need for libs\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "##########################\n\n## Set Compiler Options ##\n\n##########################\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Set CFLAGS\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Headers occur in these dirs\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Finally, configure the config header\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Libary sources\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "cmake/FindEigen3.cmake" : {
      "ObjectId" : "4732f79d39f616d8e793bcbb6ed1f132c10426c1",
      "LastModified" : "2016-01-10T05:50:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Eigen3 lib\n\n#\n\n# This module supports requiring a minimum version, e.g. you can do\n\n#   find_package(Eigen3 3.1.2)\n\n# to require version 3.1.2 or newer of Eigen3.\n\n#\n\n# Once done this will define\n\n#\n\n#  EIGEN3_FOUND - system has eigen lib with correct version\n\n#  EIGEN3_INCLUDE_DIR - the eigen include directory\n\n#  EIGEN3_VERSION - eigen version\n\n#\n\n# This module reads hints about search locations from \n\n# the following enviroment variables:\n\n#\n\n# EIGEN3_ROOT\n\n# EIGEN3_ROOT_DIR\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Copyright (c) 2009 Benoit Jacob <jacob.benoit.1@gmail.com>\n\n# Redistribution and use is allowed according to the terms of the 2-clause BSD license.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/Findoxli.cmake" : {
      "ObjectId" : "eaebda5c836b5b6f102a4e063af17936e846085b",
      "LastModified" : "2015-08-06T02:52:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find oxli\n\n# Find the native oxli includes and library.\n\n# Once done this will define\n\n#\n\n#  OXLI_INCLUDE_DIRS   - where to find qes.h, etc.\n\n#  OXLI_LIBRARIES      - List of libraries when using oxli.\n\n#  OXLI_FOUND          - True if oxli found.\n\n#\n\n#  OXLI_VERSION_STRING - The version of oxli found (x.y.z)\n\n#  OXLI_VERSION_MAJOR  - The major version of oxli\n\n#  OXLI_VERSION_MINOR  - The minor version of oxli\n\n#  OXLI_VERSION_PATCH  - The patch version of oxli\n\n#  OXLI_VERSION_PREREL - The pre-release version of oxli\n\n#  OXLI_VERSION_GIT    - The git version of oxli\n\n#\n\n# An includer may set OXLI_ROOT to a oxli installation root to tell\n\n# this module where to look.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Search OXLI_ROOT first if it is set.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Normal search.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Try each search configuration.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set OXLI_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "doc/Makefile" : {
      "ObjectId" : "c1c28e46db9427e3833c1da512c3a89996940d68",
      "LastModified" : "2015-08-06T02:52:37Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# User-friendly check for sphinx-build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Internal variables.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "9b53cf5e73782d8bf64b22603bfc03cb0840b4d4",
      "LastModified" : "2016-07-22T07:08:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/ext/oxli/Makefile" : {
      "ObjectId" : "7797f34d60f7acbae5dcad4655d49e99d0361620",
      "LastModified" : "2015-11-06T09:13:21Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This file is part of khmer, https://github.com/dib-lab/khmer/, and is\n\n# Copyright (C) 2010-2015, Michigan State University.\n\n# Copyright (C) 2015, The Regents of the University of California.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are\n\n# met:\n\n#\n\n#     * Redistributions of source code must retain the above copyright\n\n#       notice, this list of conditions and the following disclaimer.\n\n#\n\n#     * Redistributions in binary form must reproduce the above\n\n#       copyright notice, this list of conditions and the following\n\n#       disclaimer in the documentation and/or other materials provided\n\n#       with the distribution.\n\n#\n\n#     * Neither the name of the Michigan State University nor the names\n\n#       of its contributors may be used to endorse or promote products\n\n#       derived from this software without specific prior written\n\n#       permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n# Contact: khmer-project@idyll.org\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Should we use the standard system zlib and libbz2?\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Profile?\n\n# Set this variable to true if you wish to profile the codes.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Which profiling tool to use?\n\n# Assuming you have TAU installed and setup properly,\n\n# you can instrument codes with it to get detailed multi-threaded profiling.\n\n# Otherwise, gprof is able to give you some information without threading info.\n\n# Choose one of: gprof, TAU\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Perform extra sanity checking?\n\n# Set this variable to true\n\n# if you wish the codes to perform extra sanity checking\n\n# (to the possible detriment of performance).\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Compile with debugging symbols?\n\n# Set this variable to true\n\n# if you wish the codes to be built with debugging symbols\n\n# (increases code size\n\n# and does not always produce accurate stepping in a debugger\n\n# when optimization is turned on).\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "### NOTE: No user-serviceable parts below this line! ###\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Warnings in common to C and C++\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Flags in common to C and C++\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Base C/CXXFLAGS\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Place POSIX threads last in linking order, if needed.\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# The ABI version of liboxli\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#### Third party dependencies ####\n\n# ZLIB, use .lo not .o, so we get -fPIC and other library-related flags\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# BZ2\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#### oxli proper below here ####\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# START OF RULES #\n",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# The all rule comes first!\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# MurMur3\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "630ec2d17024e6c2235c9f1a07eca35bdbedd1f8",
      "LastModified" : "2016-04-11T00:21:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copy test files over to bin dir & make output\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# NOT GCOV_PATH\n",
        "Line" : 63,
        "CharPositionInLine" : 12
      },
      "2" : {
        "Text" : "# NOT LCOV_PATH\n",
        "Line" : 66,
        "CharPositionInLine" : 12
      },
      "3" : {
        "Text" : "# NOT GENHTML_PATH\n",
        "Line" : 69,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "# Clang version 3.0.0 and greater now supports gcov as well.\n",
        "Line" : 71,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# NOT CMAKE_COMPILER_IS_GNUCXX\n",
        "Line" : 76,
        "CharPositionInLine" : 12
      },
      "6" : {
        "Text" : "# Setup target\n",
        "Line" : 78,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Cleanup lcov\n",
        "Line" : 80,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# Run tests\n",
        "Line" : 83,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Capturing lcov counters and generating report\n",
        "Line" : 86,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Show info where to find the report\n",
        "Line" : 97,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# build type coverage\n",
        "Line" : 103,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 12
    },
    "tests/data/Makefile" : {
      "ObjectId" : "a35a5b519f5dace2e6dc68f61bfd152894100829",
      "LastModified" : "2015-11-06T09:13:21Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 5,
    "MAKEFILE" : 3
  },
  "ElapsedTime" : 1080
}