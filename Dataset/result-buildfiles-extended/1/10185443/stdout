{
  "Repository" : "10185443",
  "Revision" : "HEAD",
  "ObjectId" : "339c300cd6055716606f63b6153604c232b08b51",
  "CommitTime" : "2019-04-07T15:56:23Z",
  "Files" : {
    ".indent.pro" : {
      "ObjectId" : "8502046a2267bd79aa703572ba0dd45fb867e07e",
      "LastModified" : "2018-09-28T15:55:29Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0,
      "Errorlog" : "line 7:80 token recognition error at: '\\w'\nline 7:83 token recognition error at: '\\s'\nline 7:86 token recognition error at: '\\w'\nline 7:89 token recognition error at: '\\s'\nline 7:93 token recognition error at: '\\w'\n"
    },
    "CMakeLists.txt" : {
      "ObjectId" : "fe566fe96306592853bb4982af322c8b46159bbc",
      "LastModified" : "2018-07-18T12:42:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  :copyright: (c) 2017 Alex Huszagh.\n\n#  :license: FreeBSD, see LICENSE.txt for more details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Description\n\n# ===========\n\n#\n\n#   Use:\n\n#       Move to a custom directory, ideally out of source, and\n\n#       type `cmake $LXW_SOURCE $FLAGS`, where `LXW_SOURCE` is the\n\n#       path to the libxlsxwriter project, and `FLAGS` are custom\n\n#       flags to pass to the compiler.\n\n#\n\n#   Example:\n\n#       For example, in the project directory, to build libxlsxwriter\n\n#       and the unittests in release mode, type:\n\n#           mkdir build && cd build\n\n#           cmake .. -DBUILD_TESTS=ON -DCMAKE_BUILD_TYPE=Release\n\n#           cmake --build . --config Release\n\n#           ctest -C Release -V\n\n#           cmake --build . --config Release --target install\n\n#\n\n#       If using a Makefile generator, you may use the simpler\n\n#           mkdir build && cd build\n\n#           cmake .. -DBUILD_TESTS=ON -DCMAKE_BUILD_TYPE=Release\n\n#           make\n\n#           make test\n\n#           make install\n\n#\n\n#   Flags:\n\n#       ZLIB_ROOT\n\n#           The ZLIB root directory can be specified either through\n\n#           an environment variable (`export ZLIB_ROOT=/usr/include`)\n\n#           or using a flag with CMake (`-DZLIB_ROOT:STRING=/usr/include`).\n\n#           This sets the preferred search path for the ZLIB installation.\n\n#\n\n#       BUILD_TESTS\n\n#           Build unittests (default off). To build the unittests,\n\n#           pass `-DBUILD_TESTS=ON` during configuration.\n\n#\n\n#       BUILD_EXAMPLES\n\n#           Build example files (default off). To build the examples,\n\n#           pass `-DBUILD_EXAMPLES=ON` during configuration.\n\n#\n\n#       USE_STANDARD_TMPFILE\n\n#           Use the standard tmpfile() function (default off). To enable\n\n#           the standard tmpfile, pass `-DUSE_STANDARD_TMPFILE=ON`\n\n#           during configuration. This may produce bugs while cross-\n\n#           compiling or using MinGW/MSYS.\n\n#\n\n#       USE_STATIC_MSVC_RUNTIME\n\n#           Use the static msvc runtime library when compiling with msvc (default off)\n\n#           To enable, pass `-DUSE_STATIC_MSVC_RUNTIME` during configuration.\n\n#\n\n#   Toolchains:\n\n#       On multiarch Linux systems, which can build and run multiple\n\n#       binary targets on the same system, we include an `i686-toolchain`\n\n#       file to enable building i686 (x86 32-bit) targets on x86_64 systems.\n\n#       To use the i686 toolchain, pass the `-DCMAKE_TOOLCHAIN_FILE` option\n\n#       during CMake configuration. For example, from the build directory,\n\n#       you would use:\n\n#           cmake .. -DCMAKE_TOOLCHAIN_FILE=../cmake/i686-toolchain.cmake\n\n#\n\n#   CMake Options:\n\n#       CMake sets debug and release builds with the `CMAKE_BUILD_TYPE`\n\n#       option, which can be set as a flag during configuration.\n\n#       To build in release mode, pass `-DCMAKE_BUILD_TYPE=Release`\n\n#       during configuration.\n\n#\n\n#       CMake sets the creation of static and shared libraries with the\n\n#       `BUILD_SHARED_LIBS` option, which can be set as a flag during\n\n#       configuration. To build a static library, pass\n\n#       `-DBUILD_SHARED_LIBS=OFF` during configuration.\n\n#\n\n#   Generators:\n\n#       CMake also supports custom build generators, such as MakeFiles,\n\n#       Ninja, Visual Studio, and XCode. For example, to generate\n\n#       a Visual Studio solution, configure with:\n\n#           cmake .. -G \"Visual Studio 14 2015 Win64\"\n\n#\n\n#       For more information on using generators, see:\n\n#           https://cmake.org/cmake/help/v3.0/manual/cmake-generators.7.html\n\n#\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# OPTIONS\n\n# -------\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# CONFIGURATIONS\n\n# --------------\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# INCLUDES\n\n# --------\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ZLIB\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# MINIZIP\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# LIBRARY\n\n# -------\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Fix for modified zconf.h on Gentoo.\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Ensure CRT Secure warnings are disabled\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Ensure \"TESTING\" macro is defined if building tests\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# TESTS\n\n# -----\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Create test and runner.\n\n#\n\n# Args:\n\n#   sources       Name of variable holding source files\n\n#   target        Test name\n\n#\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# unit tests\n",
        "Line" : 277,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# functional tests\n\n# WARNING: currently doesn't work, since the Python tests expect\n\n# in-source builds\n\n#find_program(PYTHON python)\n\n#foreach(source ${LXW_FUNCTIONAL_SOURCES})\n\n#    get_filename_component(basename ${source} NAME_WE)\n\n#    add_executable(${basename} ${source})\n\n#    target_link_libraries(${basename} xlsxwriter)\n\n#endforeach(source)\n",
        "Line" : 280,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# EXAMPLES\n\n# --------\n",
        "Line" : 291,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# INSTALL\n\n# -------\n",
        "Line" : 304,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "Makefile" : {
      "ObjectId" : "92da4b4f2fc7a146c18788781c1280d43380f18c",
      "LastModified" : "2019-02-10T21:11:46Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\n\n#\n\n# Makefile for libxlsxwriter library.\n\n#\n\n# Copyright 2014-2019, John McNamara, jmcnamara@cpan.org\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Keep the output quiet by default.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Build the libs.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Build the example programs.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Clean src and test directories.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Run the unit tests.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Test for C++ const correctness on APIs.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Run the functional tests.\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Run all tests.\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Test the functional test exes with valgrind (in 64bit mode only).\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Minimal target for quick compile without creating the libs.\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Indent the source files with the .indent.pro settings.\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Build the doxygen docs.\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Simple minded install.\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Simpler minded uninstall.\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Strip the lib files.\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Run a coverity static analysis.\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Run a scan-build static analysis.\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "cmake/FindMINIZIP.cmake" : {
      "ObjectId" : "ed19782ed68b4d3b697842ef2def8a01d2dfb660",
      "LastModified" : "2017-10-24T17:47:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  :copyright: (c) 2017 Alex Huszagh.\n\n#  :license: FreeBSD, see LICENSE.txt for more details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FindMINIZIP\n\n# -----------\n\n#\n\n# Find MINIZIP include dirs and libraries\n\n#\n\n# Use this module by invoking find_package with the form::\n\n#\n\n#   find_package(MINIZIP\n\n#     [version] [EXACT]      # Minimum or EXACT version e.g. 1.0.6\n\n#     [REQUIRED]             # Fail with error if MINIZIP is not found\n\n#     )\n\n#\n\n# You may also set `MINIZIP_USE_STATIC_LIBS` to prefer static libraries\n\n# to shared ones.\n\n#\n\n# If found, `MINIZIP_FOUND` will be set to true, and `MINIZIP_LIBRARIES`\n\n# and `MINIZIP_INCLUDE_DIRS` will both be set.\n\n#\n\n# You may optionally set `MINIZIP_ROOT` to specify a custom root directory\n\n# for the MINIZIP installation.\n\n#\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# PATHS\n\n# -----\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# FIND\n\n# ----\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# INCLUDE DIRECTORY\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# LIBRARY PATHS\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# VERSION\n\n# -------\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# COMPILATION\n\n# -----------\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake/FindPackage.cmake" : {
      "ObjectId" : "f9b381efd0ff69c833ed9a72a06d5b34e0d9f31d",
      "LastModified" : "2017-10-24T17:47:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  :copyright: (c) 2017 Alex Huszagh.\n\n#  :license: FreeBSD, see LICENSE.txt for more details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FindPackage\n\n# -----------\n\n#\n\n# Macros and functions to help find packages. Do not invoke this module\n\n# directly, it merely provides library definitions to be invoked\n\n# by other find utilities.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Return if the package name has previously been found\n\n#\n\n# Args:\n\n#   packageName         Name of the package\n\n#\n\n# Example:\n\n#   ReturnFound(Iconv)\n\n#\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set the library extensions for a given package dependent on whether\n\n# to search for static or dynamic libraries.\n\n#\n\n# Args:\n\n#   packageName         Name of the package\n\n#\n\n# Example:\n\n#   SetSuffixes(IConv)\n\n#\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Check if the package was found.\n\n#\n\n# Args:\n\n#   packageName         Name of the package\n\n#\n\n# Example:\n\n#   CheckFound(IConv)\n\n#\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Replace a dynamic library with a `.dll.a` extension with the corresponding\n\n# library removing the `.dll`.\n\n#\n\n# Args:\n\n#   libraryName         Variable name for path to found library\n\n#\n\n# Example:\n\n#   ReplaceDynamic(/mingw64/lib/libiconv.dll.a)\n\n#\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Replace a dynamic libraries with the static variants, with integrity\n\n# checks for the package.\n\n#\n\n# Args:\n\n#   packageName         Name of the package\n\n#\n\n# Example:\n\n#   FindStaticLibs(IConv)\n\n#\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# convert `.dll.a` to `.a`\n",
        "Line" : 100,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# replace each dynamic library with a single one\n",
        "Line" : 104,
        "CharPositionInLine" : 12
      },
      "9" : {
        "Text" : "# Checks if a suitable version for the found library was identified,\n\n# if provided. The library can either force exact or inexact matching.\n\n#\n\n# Args:\n\n#   packageName         Name of the package\n\n#\n\n# Example:\n\n#   MatchVersion(ICU)\n\n#\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# MATCH VERSION\n",
        "Line" : 124,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# EXACT VERSION\n",
        "Line" : 126,
        "CharPositionInLine" : 12
      },
      "12" : {
        "Text" : "# GREATER THAN VERSION\n",
        "Line" : 132,
        "CharPositionInLine" : 12
      },
      "13" : {
        "Text" : "# Check if a sample program compiles, if not, set the library to not found.\n\n#\n\n# Args:\n\n#   packageName         Name of the package\n\n#   code                String of simple program depending on the library\n\n#\n\n# Example:\n\n#   set(IConv_CODE \"int main(int argc, char **argv){ return 0; }\")\n\n#   CheckCompiles(IConv)\n\n#\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# FLAGS\n",
        "Line" : 152,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# COMPILATION\n",
        "Line" : 156,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Send an error if a required package was not found. Otherwise, if the\n\n# package is found, report to the user it was identified.\n\n#\n\n# Args:\n\n#   packageName         Name of the package\n\n#\n\n# Example:\n\n#   RequiredPackageFound(ICU)\n\n#\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "cmake/FindZLIB.cmake" : {
      "ObjectId" : "949e5d0e91b627c5a78a71670f76f30c9e7ab235",
      "LastModified" : "2017-10-24T17:47:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  :copyright: (c) 2017 Alex Huszagh.\n\n#  :license: FreeBSD, see LICENSE.txt for more details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FindZLIB\n\n# --------\n\n#\n\n# Find ZLIB include dirs and libraries\n\n#\n\n# Use this module by invoking find_package with the form::\n\n#\n\n#   find_package(ZLIB\n\n#     [version] [EXACT]      # Minimum or EXACT version e.g. 1.0.6\n\n#     [REQUIRED]             # Fail with error if ZLIB is not found\n\n#     )\n\n#\n\n# You may also set `ZLIB_USE_STATIC_LIBS` to prefer static libraries\n\n# to shared ones.\n\n#\n\n# If found, `ZLIB_FOUND` will be set to true, and `ZLIB_LIBRARIES`\n\n# and `ZLIB_INCLUDE_DIRS` will both be set.\n\n#\n\n# You may optionally set `ZLIB_ROOT` to specify a custom root directory\n\n# for the ZLIB installation.\n\n#\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# PATHS\n\n# -----\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# FIND\n\n# ----\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# INCLUDE DIRECTORY\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# LIBRARY PATHS\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# VERSION\n\n# -------\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# COMPILATION\n\n# -----------\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake/i686-toolchain.cmake" : {
      "ObjectId" : "864f2bff5a12ef8a92a4eb1a3fd99c20b01363fd",
      "LastModified" : "2018-04-27T19:52:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "docs/Makefile" : {
      "ObjectId" : "353610d0638e05b4bf9af669d9b44160b58bc7fe",
      "LastModified" : "2019-02-10T21:11:46Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\n\n#\n\n# Makefile for libxlsxwriter library.\n\n#\n\n# Copyright 2014-2019, John McNamara, jmcnamara@cpan.org\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Keep the output quiet by default.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Make everything.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Clean up.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Build the doxygen docs.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "examples/Makefile" : {
      "ObjectId" : "877ffd9efe8f8d0208a17a6e76dcb19092c4425c",
      "LastModified" : "2018-04-27T19:52:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\n\n#\n\n# Makefile for libxlsxwriter examples.\n\n#\n\n# Copyright 2014, John McNamara, jmcnamara@cpan.org\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Keep the output quiet by default.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Directory variables.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Flags passed to the C++ compiler.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Source files to compile.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Executable targets.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/Makefile" : {
      "ObjectId" : "9eb9e27bd1b3c6a509171a9ef749b964302b0fac",
      "LastModified" : "2019-02-10T21:11:46Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\n\n#\n\n# Makefile for libxlsxwriter library.\n\n#\n\n# Copyright 2014-2019, John McNamara, jmcnamara@cpan.org\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Keep the output quiet by default.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Directory variables.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Use the local copy of minizip.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Use standard/C tmpfile().\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Use tmpfileplus (the default).\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set flag for big endian architecture.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Use a user-defined double number formatting function.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Flags passed to compiler.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Fix for modified zconf.h on Gentoo.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Ignore icc remarks about inlining limits.\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Library names.\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Library with additional non-static functions for testing.\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Flags passed to static linker.\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Flags passed to dynamic linker.\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Get Env/OS name.\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Change make options on OS X.\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Check for MinGW/MinGW64/Cygwin environments.\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Change make options on MinGW/MinGW64/Cygwin.\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Headers as dependecies.\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Ojects to compile.\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# End of OBJS\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Build the object files and the libraries.\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# The static library.\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# The dynamic library.\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# The test library.\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Minimal target for quick compile without creating the libs.\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Targets for the object files.\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Clean up any temp/build files.\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 29
    },
    "test/functional/src/Makefile" : {
      "ObjectId" : "d587b14290d21b07f6b24c62ffd15718413317e9",
      "LastModified" : "2019-02-10T21:11:46Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\n\n#\n\n# Makefile for libxlsxwriter functional test executables.\n\n#\n\n# Copyright 2014-2019, John McNamara, jmcnamara@cpan.org\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Keep the output quiet by default.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Directory variables.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Flags passed to the C++ compiler.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Source files to compile.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Use a user-defined double number formatting function.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Executable targets.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "test/unit/Makefile" : {
      "ObjectId" : "0fa27df4e32458c695bc89ff1bba483d835ed06a",
      "LastModified" : "2019-02-10T21:11:46Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\n\n#\n\n# Makefile for libxlsxwriter library.\n\n#\n\n# Copyright 2014-2019, John McNamara, jmcnamara@cpan.org\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Keep the output quiet by default.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Directory variables.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Flags passed to the C compiler.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# All tests produced by this Makefile.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Objects to link for test_all executable.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# End of SRCS\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Libs to link.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# End of LIBS\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Use a user-defined double number formatting function.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# House-keeping build targets.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# END make all\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# END make clean\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "###############################################################################\n\n#\n\n# Builds the tests.\n\n#\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "###############################################################################\n\n#\n\n# Run the tests.\n\n#\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "test/unit/app/Makefile" : {
      "ObjectId" : "b0a0426dc990b111f00c23f546e78ea74efb23d6",
      "LastModified" : "2019-02-10T21:11:46Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\n\n#\n\n# Makefile for libxlsxwriter library.\n\n#\n\n# Copyright 2014-2019, John McNamara, jmcnamara@cpan.org\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/unit/chart/Makefile" : {
      "ObjectId" : "b0a0426dc990b111f00c23f546e78ea74efb23d6",
      "LastModified" : "2019-02-10T21:11:46Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\n\n#\n\n# Makefile for libxlsxwriter library.\n\n#\n\n# Copyright 2014-2019, John McNamara, jmcnamara@cpan.org\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/unit/chartsheet/Makefile" : {
      "ObjectId" : "2c05b8e297f4ff101cb503548a532746b3d0592f",
      "LastModified" : "2019-02-10T21:11:46Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\n\n#\n\n# Makefile for libxlsxwriter library.\n\n#\n\n# Copyright 2014-2015, John McNamara, jmcnamara@cpan.org\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/unit/content_types/Makefile" : {
      "ObjectId" : "b0a0426dc990b111f00c23f546e78ea74efb23d6",
      "LastModified" : "2019-02-10T21:11:46Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\n\n#\n\n# Makefile for libxlsxwriter library.\n\n#\n\n# Copyright 2014-2019, John McNamara, jmcnamara@cpan.org\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/unit/core/Makefile" : {
      "ObjectId" : "b0a0426dc990b111f00c23f546e78ea74efb23d6",
      "LastModified" : "2019-02-10T21:11:46Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\n\n#\n\n# Makefile for libxlsxwriter library.\n\n#\n\n# Copyright 2014-2019, John McNamara, jmcnamara@cpan.org\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/unit/custom/Makefile" : {
      "ObjectId" : "b0a0426dc990b111f00c23f546e78ea74efb23d6",
      "LastModified" : "2019-02-10T21:11:46Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\n\n#\n\n# Makefile for libxlsxwriter library.\n\n#\n\n# Copyright 2014-2019, John McNamara, jmcnamara@cpan.org\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/unit/drawing/Makefile" : {
      "ObjectId" : "b0a0426dc990b111f00c23f546e78ea74efb23d6",
      "LastModified" : "2019-02-10T21:11:46Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\n\n#\n\n# Makefile for libxlsxwriter library.\n\n#\n\n# Copyright 2014-2019, John McNamara, jmcnamara@cpan.org\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/unit/relationships/Makefile" : {
      "ObjectId" : "b0a0426dc990b111f00c23f546e78ea74efb23d6",
      "LastModified" : "2019-02-10T21:11:46Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\n\n#\n\n# Makefile for libxlsxwriter library.\n\n#\n\n# Copyright 2014-2019, John McNamara, jmcnamara@cpan.org\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/unit/sst/Makefile" : {
      "ObjectId" : "b0a0426dc990b111f00c23f546e78ea74efb23d6",
      "LastModified" : "2019-02-10T21:11:46Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\n\n#\n\n# Makefile for libxlsxwriter library.\n\n#\n\n# Copyright 2014-2019, John McNamara, jmcnamara@cpan.org\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/unit/styles/Makefile" : {
      "ObjectId" : "b0a0426dc990b111f00c23f546e78ea74efb23d6",
      "LastModified" : "2019-02-10T21:11:46Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\n\n#\n\n# Makefile for libxlsxwriter library.\n\n#\n\n# Copyright 2014-2019, John McNamara, jmcnamara@cpan.org\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/unit/utility/Makefile" : {
      "ObjectId" : "b0a0426dc990b111f00c23f546e78ea74efb23d6",
      "LastModified" : "2019-02-10T21:11:46Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\n\n#\n\n# Makefile for libxlsxwriter library.\n\n#\n\n# Copyright 2014-2019, John McNamara, jmcnamara@cpan.org\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/unit/workbook/Makefile" : {
      "ObjectId" : "b0a0426dc990b111f00c23f546e78ea74efb23d6",
      "LastModified" : "2019-02-10T21:11:46Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\n\n#\n\n# Makefile for libxlsxwriter library.\n\n#\n\n# Copyright 2014-2019, John McNamara, jmcnamara@cpan.org\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/unit/worksheet/Makefile" : {
      "ObjectId" : "b0a0426dc990b111f00c23f546e78ea74efb23d6",
      "LastModified" : "2019-02-10T21:11:46Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\n\n#\n\n# Makefile for libxlsxwriter library.\n\n#\n\n# Copyright 2014-2019, John McNamara, jmcnamara@cpan.org\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/unit/xmlwriter/Makefile" : {
      "ObjectId" : "b0a0426dc990b111f00c23f546e78ea74efb23d6",
      "LastModified" : "2019-02-10T21:11:46Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\n\n#\n\n# Makefile for libxlsxwriter library.\n\n#\n\n# Copyright 2014-2019, John McNamara, jmcnamara@cpan.org\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "third_party/minizip/Makefile" : {
      "ObjectId" : "02f04c79457261f0eea035e833cfc03854ed24f4",
      "LastModified" : "2019-02-10T21:11:46Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\n\n#\n\n# Simplied Makefile to build the minizip objects for the libxlsxwriter library.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Keep the output quiet by default.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check for MinGW/MinGW64/Cygwin environments.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Change make options on MinGW/MinGW64/Cygwin.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Fix for modified zconf.h on Gentoo.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "third_party/minizip/Makefile.am" : {
      "ObjectId" : "d343011ebc3b3fd78d2bc3a29801a083c038cf0c",
      "LastModified" : "2019-02-10T21:11:46Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "third_party/tmpfileplus/Makefile" : {
      "ObjectId" : "da691cd782acca3470a0c9145820bc1c3fcc9c30",
      "LastModified" : "2019-02-10T21:11:46Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\n\n#\n\n# Simplied Makefile to build tmpfileplus for the libxlsxwriter library.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Keep the output quiet by default.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check for MinGW/MinGW64/Cygwin environments.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Change make options on MinGW/MinGW64/Cygwin.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    }
  },
  "FileTypes" : {
    "CMAKE" : 5,
    "QMAKE" : 1,
    "MAKEFILE" : 22,
    "AUTOMAKE" : 1
  },
  "ElapsedTime" : 1315
}