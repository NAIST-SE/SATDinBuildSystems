{
  "Repository" : "27110112",
  "Revision" : "HEAD",
  "ObjectId" : "1e520e03f335a898ccdfd199be9839f7d0d96c48",
  "CommitTime" : "2019-04-17T13:31:04Z",
  "Files" : {
    "archive/uppsrc/TServ/Makefile" : {
      "ObjectId" : "46cb3e3799075f9119639f3dcd99630b7957f5a4",
      "LastModified" : "2017-12-26T10:28:32Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "bazaar/FTGL/src/Makefile.am" : {
      "ObjectId" : "b0c0430d19dd20f2dccc33b8076bf7062ebcbb12",
      "LastModified" : "2017-12-26T10:28:32Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "bazaar/FreeType/src/tools/ftrandom/Makefile" : {
      "ObjectId" : "2e619299cdfcdb13ec98282f200b013d60a002c3",
      "LastModified" : "2017-12-26T10:28:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# TOP_DIR and OBJ_DIR should be set by the user to the right directories,\n\n# if necessary.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The setup below is for gcc on a Unix-like platform.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# EOF\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "bazaar/PixRaster/lib/Makefile.am" : {
      "ObjectId" : "1a0c98c4bafac6129561ddf6a182df01f3435e80",
      "LastModified" : "2017-12-26T10:28:32Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# The endianness is computed before compilation by the Makefile\n\n# in the root directory.  To do this, it compiles and runs a\n\n# small testing program.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "bazaar/ZMQ/lib/src/Makefile.am" : {
      "ObjectId" : "b730f388cbe7e32830ef20e6a5657c3f29b88922",
      "LastModified" : "2017-12-26T10:28:32Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "bazaar/plugin/gdal/frmts/pcidsk/sdk/Makefile" : {
      "ObjectId" : "0ace8a1e7ac6bcde4f48fdaa7b29beb442cbbc72",
      "LastModified" : "2017-12-26T10:28:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Comment out to skip use of libjpeg\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "bazaar/plugin/gdal/frmts/pcidsk/sdk/channel/Makefile" : {
      "ObjectId" : "a954348d54638edb4b1e0ea7bebb24001888587c",
      "LastModified" : "2017-12-26T10:28:32Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "bazaar/plugin/gdal/frmts/pcidsk/sdk/core/Makefile" : {
      "ObjectId" : "a954348d54638edb4b1e0ea7bebb24001888587c",
      "LastModified" : "2017-12-26T10:28:32Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "bazaar/plugin/gdal/frmts/pcidsk/sdk/port/Makefile" : {
      "ObjectId" : "a954348d54638edb4b1e0ea7bebb24001888587c",
      "LastModified" : "2017-12-26T10:28:32Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "bazaar/plugin/gdal/frmts/pcidsk/sdk/segment/Makefile" : {
      "ObjectId" : "a954348d54638edb4b1e0ea7bebb24001888587c",
      "LastModified" : "2017-12-26T10:28:32Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "bazaar/plugin/gdal/ogr/ogrsf_frmts/dgn/dist/Makefile" : {
      "ObjectId" : "efca3c3c602045fb84ccadae47435091b6107f0f",
      "LastModified" : "2017-12-26T10:28:32Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "bazaar/plugin/gdal/ogr/ogrsf_frmts/libkml/.indent.pro" : {
      "ObjectId" : "ebc80a0b4b9fb043c3313bd0d95ee86eb6137f8f",
      "LastModified" : "2017-12-26T10:28:32Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "bazaar/plugin/tcc/Makefile" : {
      "ObjectId" : "5c27b0aeebed414506023352f75acb1d595c3bb9",
      "LastModified" : "2017-12-26T10:28:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Tiny C Compiler Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# run local version of tcc with local libraries and includes\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# auto test\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# iterated test2 (compile tcc then compile tcctest.c !)\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# iterated test3 (compile tcc then compile tcc then compile tcctest.c !)\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# binary output test\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# dynamic output\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# static output\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# object + link output\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# dynamic output + bound check\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# memory and bound check auto test\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# speed test\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Host Tiny C Compiler\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Cross Tiny C Compilers\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# windows utilities\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# TinyCC runtime libraries\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# for windows, we must use TCC because we generate ELF objects\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# profiling version\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# libtcc generation and example\n",
        "Line" : 243,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# targets for development\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# tiny assembler testing\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# XXX: we compute tcc.c to go faster during development !\n",
        "Line" : 281,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#\t./tcc tcc.c -c asmtest.S\n\n#asmtest.out: asmtest.S tcc\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# documentation and man page\n",
        "Line" : 298,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# tar release (use 'make -k tar' on a checkouted tree)\n",
        "Line" : 308,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "uppbox/Scripts/Makefile" : {
      "ObjectId" : "95900590cd1d9f8b68af6bc5dceaa8cb9d287bb3",
      "LastModified" : "2019-02-23T07:06:28Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "uppbox/lpbuild/Makefile" : {
      "ObjectId" : "5f951212b52d0fbde4d58a9ccb55b272558372ad",
      "LastModified" : "2019-01-22T08:08:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "########################################################################\n\n#     __  __  __   ____  __  __  __   __  ____  ___     _      _       #\n\n#    (  )(  )(  ) (_  _)(  )(  \\/  ) (  )(_  _)(  _)  _( )_  _( )_     #\n\n#     )(__)(  )(__  )(   )(  )    (  /__\\  )(   ) _) (_   _)(_   _)    #\n\n#     \\____/ (____)(__) (__)(_/\\/\\_)(_)(_)(__) (___)   (_)    (_)      #\n\n#        ___  ___    __   __  __  ___  _    _  __   ___   _  _         #\n\n#       (  _)(  ,)  (  ) (  \\/  )(  _)( \\/\\/ )/  \\ (  ,) ( )/ )        #\n\n#        ) _) )  \\  /__\\  )    (  ) _) \\    /( () ) )  \\  )  \\         #\n\n#       (_)  (_)\\_)(_)(_)(_/\\/\\_)(___)  \\/\\/  \\__/ (_)\\_)(_)\\_)        #\n\n#              __  __   __   _  _  ___  ___  __  __    ___             #\n\n#             (  \\/  ) (  ) ( )/ )(  _)(  _)(  )(  )  (  _)            #\n\n#              )    (  /__\\  )  \\  ) _) ) _) )(  )(__  ) _)            #\n\n#             (_/\\/\\_)(_)(_)(_)\\_)(___)(_)  (__)(____)(___)            #\n\n#                                                                      #\n\n########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "############################## USAGE ###################################\n\n# This makefile is controlled through a set of variables, similar to   #\n\n# any other makefile. The prefered way to change them is via command   #\n\n# line, e.g.: make \"PKG=ide usvn\" CC=g++                               #\n\n#                                                                      #\n\n# All of the variables that can control the bahaviour are listed below #\n\n# in DEFAULTS section. Also their default value is shown here.         #\n\n#                                                                      #\n\n# For boolean type of variables, values of y, Y, yes, YES, Yes, true,  #\n\n# True, TRUE, T, t, 1, on, On, ON and @ are considered true. Anything  #\n\n# else is evaluated as false.                                          #\n\n############################# TARGETS ##################################\n\n# This makefile defines four targets that are meant to be used by user #\n\n# from the command line:                                               #\n\n#                                                                      #\n\n# all    - builds all (default if any packages are selected)           #\n\n# help   - shows this help (default if no packages are selected)       #\n\n# clean  - deletes OBJDIR                                              #\n\n# export - exports preparsed Makefile to file EXPORT                   #\n\n############################# EXAMPLES #################################\n\n# Typical usage:                                                       #\n\n#    make PKG=ide FLAGS=\"GUI MT\"                                       #\n\n# More complicated usage:                                              #\n\n#    make PKG=\"ide UWord Bombs\" FLAGS=\"GUI GCC NOGTK\" VERBOSE=y        #\n\n# Building \"theide\" instead of \"ide\":                                  #\n\n#    make PKG=ide BINPREFIX=bin/the                                    #\n\n# Export makefile with full dependencies:                              #\n\n#    make export PKG=ide FAST=n                                        #\n\n# Show help:                                                           #\n\n#    make OR make help                                                 #\n\n# Simulation mode:                                                     #\n\n#    make PKG=ide SIMULATE=y                                           #\n\n# Silent mode:                                                         #\n\n#    make PKG=ide SILENT=y                                             #\n\n# Paralel compilation (3 paralel processes):                           #\n\n#    make PKG=ide JOBS=3                                               #\n\n############################# DEFAULTS #################################\n\n# List of packages to build (space separated).                         #\n\n# If empty, this help text will be shown.                              #\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Paths where to look for packages.                                    #\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Flags as in TheIDE.\n\n# The only difference is, that if you use SPEED or SIZE flag, then     #\n\n# the application will be optimized for Speed or Size, respectively.   #\n\n# Flags STATIC and ALLSHARED will determine the linking mode.          #\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Additional include paths for compiler (without  leading \"-I\").       #\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Paths to libraries for linker.                                       #\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Directory to store intermediate object files                         #\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Extension added to resulting executables                             #\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Prefix for resulting binaries. Usually used with \"/\" at the end,     #\n\n# to specify the directory (hence the name)                            #\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ar command                                                           #\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# C compiler command                                                   #\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# C++ compiler command                                                 #\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Options for C compiler                                               #\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Options for C++ compiler                                             #\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Options for linker                                                   #\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Additional options for speed optimization                            #\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Additional options for size optimization                             #\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Platform flag, added to FLAGS                                        #\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Suppress all messagges                                               #\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Print each executed command                                          #\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Print each executed command, prepended with \"SIMULATE: \", without    #\n\n# actually executing it.                                               #\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Do not make full dependency scan (using gcc -M switch).              #\n\n# This saves a lot of time and usually doesn't make any harm.          #\n\n# FAST mode must by turned on only if you modified include files (*.h, #\n\n# *.lay, ...) without modifying the *.c/cpp files that include them.   # \n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Add flags from based on mainconfig section (not implemented yet)     #\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Number of parallel jobs to use (like \"make -jN\" option).             #\n\n# The JOBS variable must be used instead of -j option (as -j would not #\n\n# work as expected). Default value is the number of cores (if it is    #\n\n# possible to detect) or 1.                                            #\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# External parser to use instead of the contained one. Also used       #\n\n# for manipulation with the internal parser (see update-parser,        #\n\n# and export-parser targets in this Makefile for details).             #\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Exported makefile (used only with export target)                     #\n\n# If multiple packages are being exported, each produces additional    #\n\n# Makefile, which name is EXPORT.package_name                          #\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Awk binary. Used only for export.                                    #\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "########################################################################\n\n# HELP END\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# no need to parse dependencies just to clean up or to read help etc.\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Determine the name of this Makefile\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Helper functions to put variables on cmdline\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# list of user variables to pass to child processes\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# verbose/silent/fast mode switches\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# echo a string if silent mode is not on\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# MacOsX specific things\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Return true, if package $2 is to be compiled with flag $1\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#Join array with \"_\"\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Return output directory for .o files, based on pkg name and flags\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# prepare output directories targets\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# get dependencies recursively\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Compiler commands\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# file counting utilities for progress reports\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# general target scheme (args:{deps,target,pkg,lang,flags}\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "#compile .cpp/.c/.icpp into .o/.io\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# ditto with speed optimization\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# ditto with size optimization\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# call appropriate compile functions for all files\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# prepare some variables neccesary early in the build process\n",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# compile all .c/cpp files in package $1 and create .a\n",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# create target to link libraries into executable\n",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# single-package\n",
        "Line" : 285,
        "CharPositionInLine" : 6
      },
      "51" : {
        "Text" : "# call make to parse, compile and build package $1\n",
        "Line" : 287,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# create targets for the main tasks\n",
        "Line" : 299,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# if skip-parse\n",
        "Line" : 310,
        "CharPositionInLine" : 6
      },
      "54" : {
        "Text" : "# create target to export makefile for package $1\n",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# create targets for help, clean up, export and developper targets\n",
        "Line" : 320,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "#For developers:\n\n# print the parser to stdout (usage: make export-parser)\n",
        "Line" : 330,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# print the parser to PARSER (usage: make export-parser PARSER=parser.sh)\n",
        "Line" : 335,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# load $(PARSER) into this Makefile (usage: make update-parser PARSER=parser.new > Makefile.new)\n",
        "Line" : 339,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "#create export target\n",
        "Line" : 346,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "#        |sed -n '/^. Files/,$$$${/^[\\x23]/!{/:$$$$/!H}};$$$${g;p;}'\\\n\n",
        "Line" : 356,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "#://p;' $(filename) | sh -s '$(PKG)' '$(NESTS)' '$(flags)'))\n",
        "Line" : 384,
        "CharPositionInLine" : 26
      },
      "62" : {
        "Text" : "# single-package\n",
        "Line" : 394,
        "CharPositionInLine" : 6
      },
      "63" : {
        "Text" : "# Call link on main package and create all directories\n\n# and build targets needed for current task\n\n# OR\n\n# run makefile for each package from $(PKG)\n",
        "Line" : 396,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# not skip-parse\n",
        "Line" : 405,
        "CharPositionInLine" : 6
      },
      "65" : {
        "Text" : "# Everything marked with '#:' is a shell script used to parse .upp files\n\n#:NESTS=\"$2\"\n\n#:FLAGS=\"$3\"\n\n#:\n\n#:# GENERAL FUNCTIONS\n\n#:FindUpp(){\n\n#:\tpkg=`/bin/echo \"$1\" | sed -e 's|.*/||;'`\n\n#:\tfor n in $NESTS\n\n#:\tdo\n\n#:\t\tif [ -f \"$n/$1/$pkg.upp\" ]\n\n#:\t\tthen\n\n#:\t\t\tFILE=\"$n/$1/$pkg.upp\"\n\n#:\t\t\tNEST=\"$n\"\n\n#:\t\t\treturn\n\n#:\t\tfi\n\n#:\tdone\n\n#:}\n\n#:PrintFiles() {\n\n#:\tlocal files=\"$1\"\n\n#:\tshift\n\n#:\tlocal s\n\n#:\twhile [ \"x\" != \"x$1\" ]\n\n#:\tdo\n\n#:\t\ts=$s\"/[.]\"$2\"\\$/ {s/[.]\"$2\"\\$/.\"$3\"/;s|\\\"||g;s|^[ ]*||g;s|[ ]*\\$||g;s|.*|\\$(eval \"$PKG\"_\"$1\"+=&)|p;};\"\n\n#:\t\tshift 3\n\n#:\tdone\n\n#:\t/bin/echo \"$files\" | sed -n -e \"$s\"\n\n#:}\n\n#:Pop(){\n\n#:\t/bin/echo \"$1\"\n\n#:}\n\n#:Shift(){\n\n#:\tshift\n\n#:\t/bin/echo \"$@\"\n\n#:}\n\n#:\n\n#:# SED PARSERS\n\n#:# WARNING: Don't try to fix the ugly looking syntax of sed scripts - it is \n\n#:#          neccesary to make it work with BSD sed!\n\n#:#\n\n#:# Parser for booleans\n\n#:p=\"/^description/! {\"\n\n#:# change (..(..)..) to (..[..]..)\n\n#:p=$p\"\n\n#::a;\n\n#:s/(\\(.*\\)(\\([^()]*\\))\\(.*\\))/(\\1[\\2]\\3)/\n\n#:t a;\n\n#:\"\n\n#:# change (...) to ([...])\n\n#:p=$p\"s/(\\(.*\\))/([\\1])/g;\"\n\n#:# delete spaces on left ...\n\n#:p=$p\":b;\n\n#:s/\\[\\([^ ]*\\)[ ][ ]*\\([&|]\\)\\(.*\\)\\]/[\\1\\2\\3]/;\"\n\n#:# ... and right side of operator\n\n#:p=$p\"s/\\[\\([^ ]*\\)\\([&|]\\)[ ][ ]*\\(.*\\)\\]/[\\1\\2\\3]/;\n\n#:t b;\n\n#:\"\n\n#:# insert implicit &\n\n#:p=$p\":c;\n\n#:s/\\[\\([a-zA-Z0-9_!&|]*\\)[ ][ ]*\\(.*\\)\\]/[\\1\\&\\2]/;\n\n#:t c;\n\n#:\"\n\n#:# place {} around flags\n\n#:p=$p\"s/\\([![&|]\\)\\([a-zA-Z0-9_][a-zA-Z0-9_]*\\)/\\1{\\2}/g;\"\n\n#:# evalualte flags\n\n#:p=$p\"s/{\\([^{}]*\\)}/{\\$(call has-flag,\\1,$FLAGS)}/g;\"\n\n#:# evaluate negations\n\n#:p=$p\":d;\n\n#:s/!{\\([^{}]*\\)}/{\\$(if \\1,,T)}/g;\"\n\n#:# evaluate ANDs\n\n#:p=$p\"s/{\\([^{}]*\\)}&{\\([^{}]*\\)}/{\\$(call and,\\1,\\2)}/g;\"\n\n#:# evaluate ORs\n\n#:p=$p\"s/{\\([^{}]*\\)}|{\\([^{}]*\\)}/{\\$(call or,\\1,\\2)}/g;\"\n\n#:# remove [] around already evaluated statements\n\n#:p=$p\"s/\\[\\({[^{}]*}\\)\\]/\\1/g;\n\n#:t d;\n\n#:\"\n\n#:p=$p\"s/({\\([^{}]*\\)})\\(.*\\)/\\$(if \\1,\\2,)/g;\n\n#:}\"\n\n#:\n\n#:# File list parser\n\n#:# strip quotes\n\n#:f=\"s/\\\"//g;\"\n\n#:# remove separators\n\n#:f=$f\"s/,[ ]*[^,]*separator[ ]*,/,/g;\"\n\n#:# file.cpp optimize_xyz -> file.cpp_xyz\n\n#:f=$f\"s/,[ ]*\\([^ ,]*\\)[ ]*optimize_/,\\1_/g;\"\n\n#:# drop modificators (charset, readonly, highlight, tabsize, font, ...)\n\n#:f=$f\"s/,[ ]*\\([^ ,][^ ,]*\\)[^,]*/,\\1/g;\"\n\n#:# convert \\ -> / and print\n\n#:f=$f's/\\\\/\\//g;p;'\n\n#:\n\n#:# Simple sections parser\n\n#:# note: charset and blitz are ignored\n\n#:Simples() {\n\n#:\t/bin/echo \"$2\" | sed -n -e '\n\n#:\t/^library[ ]*/ {s/^library[ ]*//;'\"s|\\\"||g;s|^[ ]*||g;s|[ ]*\\$||g;s|.*|\\$(eval $1\"_\"LIBS+=&)|;p;};\"'\n\n#:\t/^link[ ]*/ {s/^link[ ]*//;'\"s|\\\"||g;s|^[ ]*||g;s|[ ]*\\$||g;s|.*|\\$(eval $1\"_\"LINK+=&)|;p;};\"'\n\n#:\t/^acceptflags[ ]*/ {s/^acceptflags[ ]*//;'\"s|\\\"||g;s|^[ ]*||g;s|[ ]*\\$||g;s|.*|\\$(eval $1\"_\"ACCEPT+=&)|;p;};\"'\n\n#:\t/^mainconfig[ ]*/ {s/^mainconfig[ ]*//;'\"s|\\\"||g;s|^[ ]*||g;s|[ ]*\\$||g;s|.*|\\$(eval $1\"_\"CFG+=&)|;p;};\"'\n\n#:\t/^target[ ]*/ {s/^target[ ]*//;'\"s|\\\"||g;s|^[ ]*||g;s|[ ]*\\$||g;s|.*|\\$(eval $1\"_\"TARGET+=&)|;p;};\"'\n\n#:\t/^include[ ]*/ {s/^include[ ]*//;'\"s|\\\"||g;s|^[ ]*||g;s|[ ]*\\$||g;s|.*|\\$(eval $1\"_\"INC+=&)|;p;};\"'\n\n#:\t/^options[ ]*/ {s/^options[ ]*//;'\"s|\\\"||g;s|^[ ]*||g;s|[ ]*\\$||g;s|.*|\\$(eval $1\"_\"OPTS+=&)|;p;};\"'\n\n#:\t/^flags[ ]*/ {s/^flags[ ]*//;'\"s|\\\"||g;s|^[ ]*||g;s|[ ]*\\$||g;s|.*|\\$(eval $1\"_\"FLAGS+=&)|;p;};\"\n\n#:}\n\n#:\n\n#:# THE MAIN PARSER FUNCTION\n\n#:Parse(){\n\n#:\tPKG=\"$1\"\n\n#:\tFindUpp \"$PKG\"\n\n#:\t/bin/echo '$(eval '$package'_NEST:='$NEST')'\n\n#:\t/bin/echo '$(eval '$package'_FLAGS+='$FLAGS')'\n\n#:\n\n#:\tif [ -z \"$FILE\" ]\n\n#:\tthen\n\n#:\t\t/bin/echo \"ERROR: Package $PKG not found!\"\n\n#:\t\texit 1\n\n#:\tfi\n\n#:\t# get the .upp contents, parse the boolean expresions and translate them to the language of make\n\n#:\tUPP=`cat $FILE | tr \"\\n\\r;\" \"  \\n\" | sed -e \"s/^[ \t]*//g;s/[ \t]*\\$//g;s/[ \t][ \t]*/ /g; $p\"`\n\n#:# FILE SECTION PARSER\n\n#:\tFILES=`/bin/echo \"$UPP\" | sed -n -e '/^'file'[ ]*/ {s/^'file'[ ]*//;s/.*/, & ,/;'\"$f}\" | tr \",\" \"\\n\";`\n\n#:\tPrintFiles \"$FILES\" \\\n#:\t\tFILES_CPP        cpp        cpp \\\n#:\t\tFILES_CPP_SPEED  cpp_speed  cpp \\\n#:\t\tFILES_CPP_SIZE   cpp_size   cpp \\\n#:\t\tFILES_ICPP       icpp       icpp \\\n#:\t\tFILES_ICPP_SPEED icpp_speed icpp \\\n#:\t\tFILES_ICPP_SIZE  icpp_size  icpp \\\n#:\t\tFILES_C          c          c   \\\n#:\t\tFILES_C_SPEED    c_speed    c   \\\n#:\t\tFILES_C_SIZE     c_size     c\n",
        "Line" : 413,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "#:# DESCRIPTION SECTION PARSER\n\n#:\t/bin/echo \"$UPP\" | sed -n -e '/^'description'[ ]*/{s/^'description'[ ]*//;s/^\"\\(.*\\)\"$/\\1/;s/\\\\[^ ]*$//;'\"s|\\\"||g;s|^[ ]*||g;s|[ ]*\\$||g;s|.*|\\$(eval \"$PKG\"_DESC=&)|p;}\"\n\n#:# USES SECTION PARSER\n\n#:\tUSES=$( /bin/echo \"$UPP\" | sed -n -e '/^'uses'[ ]*/{s/^'uses'[ ]*//;s/\\\\/\\//g;/^\\$/!s/[ ]*,[ ]*/ /g;p;}' )\n\n#:\t/bin/echo \"$USES\" | sed -e \"s|\\\"||g;s|^[ ]*||g;s|[ ]*\\$||g;s|.*|\\$(eval \"$PKG\"_USES+=&)|;\"\n\n#:# GLOBAL OPTIMIZATION FLAGS PARSER\n\n#:\t/bin/echo \"$UPP\" | sed -n -e 's|^optimize_speed[ ]*|$(eval '\"$PKG\"'_SPEED=T)|p;\n\n#:\ts|^optimize_size[ ]*|$(eval '\"$PKG\"'_SIZE=T)|p;'\n\n#:# SIMPLE SECTIONS PARSERS\n\n#:\tSimples \"$PKG\" \"$UPP\"\n\n#:}\n\n#:\n\n#:# MAIN LOOP\n\n#:NEEDED=\"$1\"\n\n#:PARSED=\"\"\n\n#:while [ -n \"$NEEDED\" ]\n\n#:do\n\n#:\tpackage=`Pop $NEEDED`\n\n#:\tNEEDED=`Shift $NEEDED`\n\n#:\tParse $package;\n\n#:\tPARSED=\"$PARSED $package\"\n\n#:\tuses=$( /bin/echo \"$USES\" | sed -e 's/\\\\/\\//g;/^\\$(/{s/.*, \\([^, ]*\\),[)]*$/\\1/;}' )\n\n#:\tfor dep in $uses\n\n#:\tdo\n\n#:\t\tif [ -z \"`/bin/echo \" $NEEDED $PARSED \" | grep \" $dep \"`\" ]\n\n#:\t\tthen\n\n#:\t\t\tNEEDED=\"$NEEDED $dep\"\n\n#:\t\tfi\n\n#:\tdone\n\n#:done;\n\n#:#\n\n#:/bin/echo '$(eval PARSED:='\"$PARSED\"')'\n",
        "Line" : 545,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 67,
      "Errorlog" : "line 354:36 token recognition error at: '\\x'\n"
    },
    "uppbox/lpbuild2/Makefile" : {
      "ObjectId" : "97dcb806142cfe590b8b548411810776225bba91",
      "LastModified" : "2017-12-26T10:28:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# this is just a trick to rename files\n",
        "Line" : 25,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1,
      "Errorlog" : "line 14:65 token recognition error at: '\\1'\nline 18:65 token recognition error at: '\\1'\n"
    },
    "uppsrc/Core/SSH/libssh2/CMakeLists.txt" : {
      "ObjectId" : "6401acff24cf369f707c54db3c39870afd8165ea",
      "LastModified" : "2019-01-22T08:08:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2014 Alexander Lamaison <alexander.lamaison@gmail.com>\n\n#\n\n# Redistribution and use in source and binary forms,\n\n# with or without modification, are permitted provided\n\n# that the following conditions are met:\n\n#\n\n#   Redistributions of source code must retain the above\n\n#   copyright notice, this list of conditions and the\n\n#   following disclaimer.\n\n#\n\n#   Redistributions in binary form must reproduce the above\n\n#   copyright notice, this list of conditions and the following\n\n#   disclaimer in the documentation and/or other materials\n\n#   provided with the distribution.\n\n#\n\n#   Neither the name of the copyright holder nor the names\n\n#   of any other contributors may be used to endorse or\n\n#   promote products derived from this software without\n\n#   specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND\n\n# CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n\n# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n\n# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n\n# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n\n# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n\n# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\n# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\n\n# USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY\n\n# OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Cryptography backend choice\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If the crypto backend was given, rather than searching for the first\n\n# we are able to find, the find_package commands must abort configuration\n\n# and report to the user.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Statically linking to OpenSSL requires crypt32 for some Windows APIs.\n\n# This should really be handled by FindOpenSSL.cmake.\n",
        "Line" : 74,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# Not all OpenSSL have AES-CTR functions.\n",
        "Line" : 102,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# The check actually compiles the header.  This requires windows.h.\n",
        "Line" : 126,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Reading keys from files is optional and depends on Wincrypt\n",
        "Line" : 141,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "## Library definition\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# we want it to be called libssh2 on all platforms\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## Options\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable debugging logging by default if the user configured a debug build\n",
        "Line" : 269,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## Platform checks\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Try _strtoi64 if strtoll isn't available\n",
        "Line" : 311,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# poll() does not work on these platforms\n\n#\n\n# Interix: \"does provide poll(), but the implementing developer must\n\n# have been in a bad mood, because poll() only works on the /proc\n\n# filesystem here\"\n\n#\n\n# Mac OS X's poll has funny behaviors, like:\n\n# not being able to do poll on no fildescriptors (10.3?)\n\n# not being able to poll on some files (like anything in /dev)\n\n# not having reliable timeout support\n\n# inconsistent return of POLLHUP where other implementations give POLLIN\n",
        "Line" : 318,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Non-blocking socket support tests.  Must be after after library tests to\n\n# link correctly\n",
        "Line" : 336,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# to find generated header\n",
        "Line" : 346,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Check for the OS.\n\n# Daniel's note: this should not be necessary and we need to work to\n\n# get this removed.\n",
        "Line" : 349,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Fall back to over-linking dependencies\n",
        "Line" : 359,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "## Installation\n",
        "Line" : 365,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Package config\n",
        "Line" : 386,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## During package installation, install Libssh2Config.cmake\n",
        "Line" : 388,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "## During build, register directly from build tree\n\n# create Libssh2Config.cmake\n",
        "Line" : 393,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# register it\n",
        "Line" : 396,
        "CharPositionInLine" : 24
      },
      "23" : {
        "Text" : "## Export a .pc file for client projects not using CMaek\n",
        "Line" : 398,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "## Versioning\n",
        "Line" : 410,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "uppsrc/Core/SSH/libssh2/Makefile.am" : {
      "ObjectId" : "31d58ed57301de9658338c16e418c2a46390591a",
      "LastModified" : "2019-01-22T08:08:12Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# $Id: Makefile.am,v 1.21 2009/05/07 17:21:56 bagder Exp $\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Get the CRYPTO_CSOURCES, CRYPTO_HHEADERS and CRYPTO_LTLIBS defines\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Makefile.inc provides the CSOURCES and HHEADERS defines\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# srcdir/include for the shipped headers\n\n# builddir/src for the generated config header when building out of the source\n\n# tree\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This flag accepts an argument of the form current[:revision[:age]]. So,\n\n# passing -version-info 3:12:1 sets current to 3, revision to 12, and age to\n\n# 1.\n\n#\n\n# If either revision or age are omitted, they default to 0. Also note that age\n\n# must be less than or equal to the current interface number.\n\n#\n\n# Here are a set of rules to help you update your library version information:\n\n#\n\n# 1.Start with version information of 0:0:0 for each libtool library.\n\n#\n\n# 2.Update the version information only immediately before a public release of\n\n# your software. More frequent updates are unnecessary, and only guarantee\n\n# that the current interface number gets larger faster.\n\n#\n\n# 3.If the library source code has changed at all since the last update, then\n\n# increment revision (c:r+1:a)\n\n#\n\n# 4.If any interfaces have been added, removed, or changed since the last\n\n# update, increment current, and set revision to 0. (c+1:r=0:a)\n\n#\n\n# 5.If any interfaces have been added since the last public release, then\n\n# increment age. (c:r:a+1)\n\n#\n\n# 6.If any interfaces have been removed since the last public release, then\n\n# set age to 0. (c:r:a=0)\n\n#\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "uppsrc/plugin/glm/CMakeLists.txt" : {
      "ObjectId" : "01c594f47fe35dd90974758637d42bcf60c2bde7",
      "LastModified" : "2019-02-04T10:59:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "uppsrc/plugin/tif/lib/CMakeLists.txt" : {
      "ObjectId" : "1cf1b75981488421d56adb4c7f39edcb713b9bc8",
      "LastModified" : "2019-03-22T11:23:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake build for libtiff\n\n#\n\n# Copyright © 2015 Open Microscopy Environment / University of Dundee\n\n# Written by Roger Leigh <rleigh@codelibre.net>\n\n#\n\n# Permission to use, copy, modify, distribute, and sell this software and\n\n# its documentation for any purpose is hereby granted without fee, provided\n\n# that (i) the above copyright notices and this permission notice appear in\n\n# all copies of the software and related documentation, and (ii) the names of\n\n# Sam Leffler and Silicon Graphics may not be used in any advertising or\n\n# publicity relating to the software without the specific, prior written\n\n# permission of Sam Leffler and Silicon Graphics.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND,\n\n# EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY\n\n# WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n\n#\n\n# IN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR\n\n# ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,\n\n# OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,\n\n# WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF\n\n# LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE\n\n# OF THIS SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Generate headers\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This property causes shared libraries on Linux to have the full version\n\n# encoded into their final filename.  We disable this on Cygwin because\n\n# it causes cygz-${TIFF_FULL_VERSION}.dll to be created when cygz.dll\n\n# seems to be the default.\n",
        "Line" : 126,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# This property causes shared libraries on Linux to have the full version\n\n# encoded into their final filename.  We disable this on Cygwin because\n\n# it causes cygz-${TIFF_FULL_VERSION}.dll to be created when cygz.dll\n\n# seems to be the default.\n",
        "Line" : 150,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "uppsrc/plugin/tif/lib/Makefile.am" : {
      "ObjectId" : "14a250a5a620ae90df2c42357a423379f85b2497",
      "LastModified" : "2019-03-22T11:23:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Tag Image File Format (TIFF) Software\n\n#\n\n# Copyright (C) 2004, Andrey Kiselev <dron@ak4719.spb.edu>\n\n#\n\n# Permission to use, copy, modify, distribute, and sell this software and \n\n# its documentation for any purpose is hereby granted without fee, provided\n\n# that (i) the above copyright notices and this permission notice appear in\n\n# all copies of the software and related documentation, and (ii) the names of\n\n# Sam Leffler and Silicon Graphics may not be used in any advertising or\n\n# publicity relating to the software without the specific, prior written\n\n# permission of Sam Leffler and Silicon Graphics.\n\n# \n\n# THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND, \n\n# EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY \n\n# WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  \n\n# \n\n# IN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR\n\n# ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,\n\n# OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,\n\n# WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF \n\n# LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE \n\n# OF THIS SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Process this file with automake to produce Makefile.in.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# The finite state machine tables used by the G3/G4 decoders\n\n# are generated by the mkg3states program.  On systems without\n\n# make these rules have to be manually carried out.\n\n#\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    }
  },
  "FileTypes" : {
    "CMAKE" : 3,
    "QMAKE" : 1,
    "MAKEFILE" : 12,
    "AUTOMAKE" : 5
  },
  "ElapsedTime" : 15736
}