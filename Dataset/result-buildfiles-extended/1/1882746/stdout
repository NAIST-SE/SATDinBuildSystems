{
  "Repository" : "1882746",
  "Revision" : "HEAD",
  "ObjectId" : "05fe1d01b68f50d1220f4b1f51159e67f211078b",
  "CommitTime" : "2018-10-05T17:47:01Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "cb40a90e4b3f226a1fc2075185a49655bff6e1ce",
      "LastModified" : "2018-10-05T17:47:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# New TI-RPC  Cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Current version as of Fedora 16.  Not tested with earlier.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add maintainer mode for (mainly) strict builds\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# version numbers\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# version string used for packaging\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Up scope for embedding in ganesha\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Install destination, if built standalone\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Allow overriding of prefix\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Set default base directory\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Build configure options\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# MSPAC support -lwbclient link flag\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Set LTTNG_PATH_HINT on the command line\n\n# if your LTTng is not in a standard place\n",
        "Line" : 97,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Choose a shortcut build config\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Build source locations and parameters\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Find packages and libs we need for building\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# workaround bug in some include_directories when no extra includes\n",
        "Line" : 167,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Find misc system libs\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# extended Pthreads functions\n",
        "Line" : 184,
        "CharPositionInLine" : 25
      },
      "18" : {
        "Text" : "# sockets\n",
        "Line" : 194,
        "CharPositionInLine" : 20
      },
      "19" : {
        "Text" : "# subst files (need add_custom_command for dependency, fyi)\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# display configuration vars\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#force command line options to be stored in cache\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# grist files\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Define CPACK component (to deal with sub packages)\n",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Include custom config and cpack module\n",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "########### install files ###############\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 26
    },
    "cmake/build_configurations/everything.cmake" : {
      "ObjectId" : "1ee9e465fa981e08c56a9b465adcef734b37a7bf",
      "LastModified" : "2013-03-13T18:36:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Turn on everything in the options for a complete build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(USE_TIRPC_IPV6 ON) # exports.c is broken here...\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/cpack_config.cmake" : {
      "ObjectId" : "01b7efee7f94759f38b8c0ccf6f26e8d11edef8f",
      "LastModified" : "2017-07-28T19:49:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# A few CPack related variables\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CPack's debian stuff\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Tell CPack the kind of packages to be generated\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/maintainer_mode.cmake" : {
      "ObjectId" : "f5f427e41131c172144ce5857935cd42fbf8f31b",
      "LastModified" : "2017-07-28T19:49:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Update the documentation string of CMAKE_BUILD_TYPE for GUIs\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindASan.cmake" : {
      "ObjectId" : "fcebb43757e47b0233d0cc6d4f5946efcca32ae2",
      "LastModified" : "2017-08-02T22:02:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\n\n#\n\n# Copyright (c)\n\n#   2013 Matthew Arsenault\n\n#   2015-2016 RWTH Aachen University, Federal Republic of Germany\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Clang 3.2+ use this version. The no-omit-frame-pointer option is optional.\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Older deprecated flag for ASan\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "cmake/modules/FindEPOLL.cmake" : {
      "ObjectId" : "511db807598ed81d3f78e2beff5a255bbaec272e",
      "LastModified" : "2018-07-12T13:36:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find EPOLL\n\n#\n\n# This module defines the following variables:\n\n#    EPOLL_FOUND       = Was EPOLL found or not?\n\n#\n\n# On can set EPOLL_PATH_HINT before using find_package(EPOLL) and the\n\n# module with use the PATH as a hint to find EPOLL.\n\n#\n\n# The hint can be given on the command line too:\n\n#   cmake -DEPOLL_PATH_HINT=/DATA/ERIC/EPOLL /path/to/source\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set PRELUDE_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindGperftools.cmake" : {
      "ObjectId" : "f3a1c70066c28435c086259606c9ed0ef4f2bd8c",
      "LastModified" : "2018-07-12T13:36:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tries to find Gperftools.\n\n#\n\n# Usage of this module as follows:\n\n#\n\n#     find_package(Gperftools)\n\n#\n\n# Variables used by this module, they can change the default behaviour and need\n\n# to be set before calling find_package:\n\n#\n\n#  Gperftools_ROOT_DIR  Set this variable to the root installation of\n\n#                       Gperftools if the module has problems finding\n\n#                       the proper installation path.\n\n#\n\n# Variables defined by this module:\n\n#\n\n#  GPERFTOOLS_FOUND              System has Gperftools libs/headers\n\n#  GPERFTOOLS_LIBRARIES          The Gperftools libraries (tcmalloc & profiler)\n\n#  GPERFTOOLS_INCLUDE_DIR        The location of Gperftools headers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindJeMalloc.cmake" : {
      "ObjectId" : "5c7aa2cf1e10ea90c4a279aebfa8357044d24d12",
      "LastModified" : "2018-07-12T13:36:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find JeMalloc library\n\n# Find the native JeMalloc includes and library\n\n# This module defines\n\n#  JEMALLOC_INCLUDE_DIRS, where to find jemalloc.h, Set when\n\n#                        JEMALLOC_INCLUDE_DIR is found.\n\n#  JEMALLOC_LIBRARIES, libraries to link against to use JeMalloc.\n\n#  JEMALLOC_ROOT_DIR, The base directory to search for JeMalloc.\n\n#                    This can also be an environment variable.\n\n#  JEMALLOC_FOUND, If false, do not try to use JeMalloc.\n\n#\n\n# also defined, but not for general use are\n\n#  JEMALLOC_LIBRARY, where to find the JeMalloc library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2011 Blender Foundation.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If JEMALLOC_ROOT_DIR was defined in the environment, use it.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Fink\n",
        "Line" : 33,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 34,
        "CharPositionInLine" : 13
      },
      "5" : {
        "Text" : "# Blastwave\n",
        "Line" : 35,
        "CharPositionInLine" : 11
      },
      "6" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set JEMALLOC_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/modules/FindKrb5.cmake" : {
      "ObjectId" : "637f2d2db74da24e08645f06f260aaf9fb3020a9",
      "LastModified" : "2018-07-12T13:36:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find kerberos 5\n\n# Find the native Kerberos 5 headers and libraries.\n\n#  KRB5_INCLUDE_DIRS      - where to find krb5.h, etc.\n\n#  KRB5_LIBRARIES         - List of libraries when using kerberos 5.\n\n#  KRB5_FOUND             - True if kerberos 5 found.\n\n# KRB5 modules may be specified as components for this find module.\n\n# Modules may be listed by running \"krb5-config\".  Modules include:\n\n#  krb5              Kerberos 5 application\n\n#  gssapi            GSSAPI application with Kerberos 5 bindings\n\n#  krb4              Kerberos 4 application\n\n#  kadm-client       Kadmin client\n\n#  kadm-server       Kadmin server\n\n#  kdb               Application that accesses the kerberos database\n\n# Typical usage:\n\n#  FIND_PACKAGE(KRB5 REQUIRED gssapi)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# First find the config script from which to obtain other values.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check whether we found anything.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Lookup the include directories needed for the components requested.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Use the newer EXECUTE_PROCESS command if it is available.\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Parse the include flags.\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Convert the compile flags to a CMake list.\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Look for -I options.\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Lookup the libraries needed for the components requested.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Use the newer EXECUTE_PROCESS command if it is available.\n",
        "Line" : 76,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Parse the library names and directories.\n",
        "Line" : 91,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Look for -L flags for directories and -l flags for library names.\n",
        "Line" : 96,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# add gssapi_krb5 (MIT)\n",
        "Line" : 110,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Search for each library needed using the directories given.\n",
        "Line" : 113,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Look for this library.\n",
        "Line" : 115,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# If any library is not found then the whole package is not found.\n",
        "Line" : 124,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# Build an ordered list of all the libraries needed.\n",
        "Line" : 129,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# Report the results.\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "cmake/modules/FindLTTng.cmake" : {
      "ObjectId" : "bddecad4d2cb236d0eeff2e9d082ba93ec8bc605",
      "LastModified" : "2018-07-31T13:54:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find LTTng\n\n# Find the Linux Trace Toolkit - next generation with associated includes path.\n\n# See http://lttng.org/\n\n#\n\n# This module accepts the following optional variables:\n\n#    LTTNG_PATH_HINT   = A hint on LTTNG install path.\n\n#\n\n# This module defines the following variables:\n\n#    LTTNG_FOUND       = Was LTTng found or not?\n\n#    LTTNG_EXECUTABLE  = The path to lttng command\n\n#    LTTNG_LIBRARIES   = The list of libraries to link to when using LTTng\n\n#    LTTNG_INCLUDE_DIR = The path to LTTng include directory\n\n#\n\n# On can set LTTNG_PATH_HINT before using find_package(LTTng) and the\n\n# module with use the PATH as a hint to find LTTng.\n\n#\n\n# The hint can be given on the command line too:\n\n#   cmake -DLTTNG_PATH_HINT=/DATA/ERIC/LTTng /path/to/source\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#One can add his/her own builtin PATH.\n\n#FILE(TO_CMAKE_PATH \"/DATA/ERIC/LTTng\" MYPATH)\n\n#list(APPEND LTTNG_PATH_HINT ${MYPATH})\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# FIND_PROGRAM twice using NO_DEFAULT_PATH on first shot\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set PRELUDE_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# VERSION FPHSA options not handled by CMake version < 2.8.2)\n\n#                                  VERSION_VAR)\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/modules/FindMSan.cmake" : {
      "ObjectId" : "3b0a4addcb9b6f8c95268443285f0217140c491a",
      "LastModified" : "2018-07-31T13:54:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\n\n#\n\n# Copyright (c)\n\n#   2013 Matthew Arsenault\n\n#   2015-2016 RWTH Aachen University, Federal Republic of Germany\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindNSL.cmake" : {
      "ObjectId" : "5d435cd1ace94f979cf61f621d9a128a50aab61c",
      "LastModified" : "2018-07-31T13:54:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find NSL\n\n#\n\n# This module defines the following variables:\n\n#    NSL_FOUND       = Was NSL found or not?\n\n#\n\n# On can set NSL_PATH_HINT before using find_package(NSL) and the\n\n# module with use the PATH as a hint to find NSL.\n\n#\n\n# The hint can be given on the command line too:\n\n#   cmake -DNSL_PATH_HINT=/DATA/ERIC/NSL /path/to/source\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#find_path(NSL_INCLUDE_DIR\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#NAMES yp.h\n\n#PATHS ${NSL_HINT_PATH}\n\n#PATH_SUFFIXES nsl/rpcsvc\n\n#DOC \"The NSL include headers\")\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set PRELUDE_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#FIND_PACKAGE_HANDLE_STANDARD_ARGS(NSL REQUIRED_VARS NSL_INCLUDE_DIR NSL_LIBRARY)\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/modules/FindNTIRPC.cmake" : {
      "ObjectId" : "9794e6826801015bd1a3a2658cb49987b6e96b1a",
      "LastModified" : "2018-07-31T13:54:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find NTIRPC\n\n# Find the New TIRPC RPC library\n\n#\n\n# This module accepts the following optional variables:\n\n#    NTIRPC_PATH_HINT   = A hint on NTIRPC install path.\n\n#\n\n# This module defines the following variables:\n\n#    NTIRPC_FOUND       = Was NTIRPC found or not?\n\n#    NTIRPC_LIBRARY   = The list of libraries to link to when using NTIRPC\n\n#    NTIRPC_INCLUDE_DIR = The path to NTIRPC include directory(s)\n\n#\n\n# On can set NTIRPC_PATH_HINT before using find_package(NTIRPC) and the\n\n# module with use the PATH as a hint to find NTIRPC.\n\n#\n\n# The hint can be given on the command line too:\n\n#   cmake -DNTIRPC_PATH_HINT=/DATA/ERIC/NTIRPC /path/to/source\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set PRELUDE_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# VERSION FPHSA options not handled by CMake version < 2.8.2)\n\n#                                  VERSION_VAR)\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/modules/FindRDMA.cmake" : {
      "ObjectId" : "4b681b5fb9ebed0285fdf4b411611dc8c8a15bfc",
      "LastModified" : "2018-07-31T13:54:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find RDMA\n\n# Find the New TIRPC RPC library\n\n#\n\n# This module accepts the following optional variables:\n\n#    RDMA_PATH_HINT   = A hint on RDMA install path.\n\n#\n\n# This module defines the following variables:\n\n#    RDMA_FOUND       = Was RDMA found or not?\n\n#    RDMA_LIBRARY   = The list of libraries to link to when using RDMA\n\n#    RDMA_INCLUDE_DIR = The path to RDMA include directory(s)\n\n#\n\n# One can set RDMA_PATH_HINT before using find_package(RDMA) and the\n\n# module with use the PATH as a hint to find RDMA.\n\n# Alternatively, one can set LIBIBVERBS_PREFIX and LIBRDMACM_PREFIX to the individual\n\n# hints for those libraries.\n\n#\n\n# The hint can be given on the command line too:\n\n#   cmake -DRDMA_PATH_HINT=/DATA/ERIC/RDMA /path/to/source\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ibverbs\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# rdmacm\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#if (RDMA_LIBRARY)\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#libfind_version_header(RDMA version.h RDMA_VERSION)\n",
        "Line" : 53,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "#endif (RDMA_LIBRARY)\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set PRELUDE_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# VERSION FPHSA options not handled by CMake version < 2.8.2)\n\n#                                  VERSION_VAR)\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake/modules/FindSanitizers.cmake" : {
      "ObjectId" : "627ee243d050c469300a7a37c260d0144d7b444a",
      "LastModified" : "2018-07-31T13:54:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\n\n#\n\n# Copyright (c)\n\n#   2013 Matthew Arsenault\n\n#   2015-2016 RWTH Aachen University, Federal Republic of Germany\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If any of the used compiler is a GNU compiler, add a second option to static\n\n# link against the sanitizers.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindTSan.cmake" : {
      "ObjectId" : "0e80f29b6484bf20109e8eeb8eaae7d93b320736",
      "LastModified" : "2018-07-31T13:54:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\n\n#\n\n# Copyright (c)\n\n#   2013 Matthew Arsenault\n\n#   2015-2016 RWTH Aachen University, Federal Republic of Germany\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ThreadSanitizer is not compatible with MemorySanitizer.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindTcMalloc.cmake" : {
      "ObjectId" : "68a8bc62a3a533c8f1cb7f2d16364b0b950f2783",
      "LastModified" : "2018-07-31T13:54:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find Tcmalloc library\n\n# Find the native Tcmalloc includes and library\n\n# This module defines\n\n#  TCMALLOC_INCLUDE_DIRS, where to find tcmalloc.h, Set when\n\n#                        TCMALLOC_INCLUDE_DIR is found.\n\n#  TCMALLOC_LIBRARIES, libraries to link against to use Tcmalloc.\n\n#  TCMALLOC_ROOT_DIR, The base directory to search for Tcmalloc.\n\n#                    This can also be an environment variable.\n\n#  TCMALLOC_FOUND, If false, do not try to use Tcmalloc.\n\n#\n\n# also defined, but not for general use are\n\n#  TCMALLOC_LIBRARY, where to find the Tcmalloc library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2011 Blender Foundation.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If TCMALLOC_ROOT_DIR was defined in the environment, use it.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Fink\n",
        "Line" : 33,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 34,
        "CharPositionInLine" : 13
      },
      "5" : {
        "Text" : "# Blastwave\n",
        "Line" : 35,
        "CharPositionInLine" : 11
      },
      "6" : {
        "Text" : "# Debain tcmalloc minimal\n",
        "Line" : 36,
        "CharPositionInLine" : 22
      },
      "7" : {
        "Text" : "# Debian gperftools\n",
        "Line" : 37,
        "CharPositionInLine" : 26
      },
      "8" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set TCMALLOC_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "cmake/modules/FindUBSan.cmake" : {
      "ObjectId" : "69486742a4449564c794e40e18c6277894768ff0",
      "LastModified" : "2018-07-31T13:54:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\n\n#\n\n# Copyright (c)\n\n#   2013 Matthew Arsenault\n\n#   2015-2016 RWTH Aachen University, Federal Republic of Germany\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindWBclient.cmake" : {
      "ObjectId" : "a23611aff11e693126d6fd808f9bcea5eeb35123",
      "LastModified" : "2018-07-31T13:54:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find a sufficiently recent wbclient\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# the stdint and stdbool includes are required (silly Cmake)\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# XXX this check is doing the heavy lifting\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/modules/GetGitRevisionDescription.cmake" : {
      "ObjectId" : "b06207530662c9a216aa2f953cb1b8f55d70d44c",
      "LastModified" : "2018-07-31T13:54:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Returns a version string from Git\n\n#\n\n# These functions force a re-configure on each git commit so that you can\n\n# trust the values of the variables in your build system.\n\n#\n\n#  get_git_head_revision(<refspecvar> <hashvar> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the refspec and sha hash of the current head revision\n\n#\n\n#  git_describe(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe on the source tree, and adjusting\n\n# the output so that it tests false if an error occurs.\n\n#\n\n#  git_get_exact_tag(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe --exact-match on the source tree,\n\n# and adjusting the output so that it tests false if there was no exact\n\n# matching tag.\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We must run the following at \"include\" time, not at function call time,\n\n# to find the path to this module rather than the path to a calling list file\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# .git dir not found, search parent directories\n",
        "Line" : 45,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "# We have reached the root directory, we are not in git\n",
        "Line" : 49,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# TODO sanitize\n\n#if((${ARGN}\" MATCHES \"&&\") OR\n\n#\t(ARGN MATCHES \"||\") OR\n\n#\t(ARGN MATCHES \"\\\\;\"))\n\n#\tmessage(\"Please report the following error to the project!\")\n\n#\tmessage(FATAL_ERROR \"Looks like someone's doing something nefarious with git_describe! Passed arguments ${ARGN}\")\n\n#endif()\n",
        "Line" : 90,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "#message(STATUS \"Arguments to execute_process: ${ARGN}\")\n",
        "Line" : 98,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 6
    },
    "cmake/modules/LibFindMacros.cmake" : {
      "ObjectId" : "81fef7d8e7bd5e9adcfd42cc3fe6a06924b8ab38",
      "LastModified" : "2018-07-31T13:54:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Version 2.2\n\n# Public Domain, originally written by Lasse Kärkkäinen <tronic>\n\n# Maintained at https://github.com/Tronic/cmake-modules\n\n# Please send your improvements as pull requests on Github.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find another package and make it a dependency of the current package.\n\n# This also automatically forwards the \"REQUIRED\" argument.\n\n# Usage: libfind_package(<prefix> <another package> [extra args to find_package])\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# A simple wrapper to make pkg-config searches a bit easier.\n\n# Works the same as CMake's internal pkg_check_modules but is always quiet.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Avoid useless copy&pasta by doing what most simple libraries do anyway:\n\n# pkg-config, find headers, find library.\n\n# Usage: libfind_pkg_detect(<prefix> <pkg-config args> FIND_PATH <name> [other args] FIND_LIBRARY <name> [other args])\n\n# E.g. libfind_pkg_detect(SDL2 sdl2 FIND_PATH SDL.h PATH_SUFFIXES SDL2 FIND_LIBRARY SDL2)\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Parse arguments\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Find library\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Extracts a version #define from a version.h file, output stored to <PREFIX>_VERSION.\n\n# Usage: libfind_version_header(Foobar foobar/version.h FOOBAR_VERSION_STR)\n\n# Fourth argument \"QUIET\" may be used for silently testing different define names.\n\n# This function does nothing if the version variable is already defined.\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Skip processing if we already have a version or if the include dir was not found\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Process optional arguments\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Read the header and parse for version number\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# No regex match?\n",
        "Line" : 85,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Export the version string\n",
        "Line" : 92,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Do the final processing once the paths have been detected.\n\n# If include dirs are needed, ${PREFIX}_PROCESS_INCLUDES should be set to contain\n\n# all the variables, each of which contain one include directory.\n\n# Ditto for ${PREFIX}_PROCESS_LIBS and library files.\n\n# Will set ${PREFIX}_FOUND, ${PREFIX}_INCLUDE_DIRS and ${PREFIX}_LIBRARIES.\n\n# Also handles errors in case library detection was required, etc.\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Skip processing if already processed during this configuration run\n",
        "Line" : 103,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Start with the assumption that the package was found\n",
        "Line" : 108,
        "CharPositionInLine" : 19
      },
      "15" : {
        "Text" : "# Did we find any files? Did we miss includes? These are for formatting better error messages.\n",
        "Line" : 110,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Shorthands for some variables that we need often\n",
        "Line" : 114,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Lists of config option names (all, includes, libs)\n",
        "Line" : 121,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Process deps to add to\n",
        "Line" : 126,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# The package seems to export option lists that we can use, woohoo!\n",
        "Line" : 129,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "# If plural forms don't exist or they equal singular forms\n",
        "Line" : 133,
        "CharPositionInLine" : 6
      },
      "21" : {
        "Text" : "# Singular forms can be used\n",
        "Line" : 136,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# Oh no, we don't know the option names\n",
        "Line" : 144,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "# Include/library names separated by spaces (notice: not CMake lists)\n",
        "Line" : 163,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Process all includes and set found false if any are missing\n",
        "Line" : 167,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Process all libraries and set found false if any are missing\n",
        "Line" : 178,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Version checks\n",
        "Line" : 188,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# If all-OK, hide all config options, export variables, print status and exit\n",
        "Line" : 198,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# Format messages for debug info and the type of error\n",
        "Line" : 221,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# Fatal error out if REQUIRED\n",
        "Line" : 256,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# Otherwise just print a nasty warning\n",
        "Line" : 261,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 31
    },
    "cmake/modules/sanitize-helpers.cmake" : {
      "ObjectId" : "88da66ea76cf157579ef26d1145dfc7eda61e200",
      "LastModified" : "2018-07-31T13:54:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\n\n#\n\n# Copyright (c)\n\n#   2013 Matthew Arsenault\n\n#   2015-2016 RWTH Aachen University, Federal Republic of Germany\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Helper function to get the language of a source file.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Helper function to get compilers used by a target.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Check if all sources for target use the same compiler. If a target uses\n\n# e.g. C and Fortran mixed and uses different compilers (e.g. clang and\n\n# gfortran) this can trigger huge problems, because different compilers may\n\n# use different implementations for sanitizers.\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# If expression was found, FILE is a generator-expression for an object\n\n# library. Object libraries will be ignored.\n",
        "Line" : 53,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Helper function to check compiler flags for language compiler.\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# CheckFortranCompilerFlag was introduced in CMake 3.x. To be compatible\n\n# with older Cmake versions, we will check if this module is present\n\n# before we use it. Otherwise we will define Fortran coverage support as\n\n# not available.\n",
        "Line" : 80,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Helper function to test compiler flags.\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Sanitizer flags are not dependend on language, but the used compiler.\n\n# So instead of searching flags foreach language, search flags foreach\n\n# compiler used.\n",
        "Line" : 102,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# If compiler is a GNU compiler, search for static flag, if\n\n# SANITIZE_LINK_STATIC is enabled.\n",
        "Line" : 118,
        "CharPositionInLine" : 20
      },
      "10" : {
        "Text" : "# Helper to assign sanitizer flags for TARGET.\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Get list of compilers used by target and check, if target can be checked\n\n# by sanitizer.\n",
        "Line" : 150,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Set compile- and link-flags for target.\n",
        "Line" : 166,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 13
    },
    "config-h.in.cmake" : {
      "ObjectId" : "e259d6e9ae702de198ff0fe1b8162a972582c9a8",
      "LastModified" : "2018-07-31T13:54:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#include \"ntirpc/version.h\"\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#ifndef CONFIG_H\n\n#define CONFIG_H\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#cmakedefine _MSPAC_SUPPORT 1\n\n#cmakedefine HAVE_STDBOOL_H 1\n\n#cmakedefine HAVE_KRB5 1\n\n#cmakedefine LINUX 1\n\n#cmakedefine FREEBSD 1\n\n#cmakedefine _HAVE_GSSAPI 1\n\n#cmakedefine HAVE_STRING_H 1\n\n#cmakedefine HAVE_STRINGS_H 1\n\n#cmakedefine LITTLEEND 1\n\n#cmakedefine BIGEND 1\n\n#cmakedefine TIRPC_EPOLL 1\n\n#cmakedefine USE_RPC_RDMA 1\n\n#cmakedefine USE_LTTNG_NTIRPC 1\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#define PACKAGE \"libntirpc\"\n\n#define PACKAGE_BUGREPORT \"\"\n\n#define PACKAGE_NAME \"libntirpc\"\n\n#define PACKAGE_STRING \"libntirpc ${NTIRPC_VERSION_MAJOR}.${NTIRPC_VERSION_MINOR}.${NTIRPC_PATCH_LEVEL}\"\n\n#define PACKAGE_TARNAME \"libntirpc\"\n\n#define PACKAGE_URL \"\"\n\n#define PACKAGE_VERSION \"${NTIRPC_VERSION_MAJOR}.${NTIRPC_VERSION_MINOR}.${NTIRPC_PATCH_LEVEL}\"\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#endif /* CONFIG_H */\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "libntirpc.pc.in.cmake" : {
      "ObjectId" : "eea5fafb7e580a551ce6e835c994b7b860f9feb4",
      "LastModified" : "2018-07-31T13:54:48Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libntirpc.spec-in.cmake" : {
      "ObjectId" : "aa139300e8c3d57780e7163a4707acd575343859",
      "LastModified" : "2018-07-31T13:54:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# libtirpc has /etc/netconfig, most machines probably have it anyway\n\n# for NFS client\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## make install is broken in various ways\n\n## make install DESTDIR=%%{buildroot}\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "34b025d19f4317c3fc47da1b0afd2b42f1d80c3d",
      "LastModified" : "2018-07-31T13:54:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ok on Linux and FreeBSD w/GCC and clang compilers\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### next target ###############\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# fixme\n\n# libntirpc_la_LDFLAGS += $(GSSGLUE_LIBS)\n\n# libntirpc_la_CFLAGS = -DHAVE_RPCSEC_GSS $(GSSGLUE_CFLAGS)\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# declares the library\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# add required libraries--for Ganesha build, it's ok for them to\n\n# propagate (i.e., omit PRIVATE)\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# set library version and symbol namespace(s) from gen'd map file\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "########### install files ###############\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# We are still missing the install of docs and stuff\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "src/libntirpc.map.in.cmake" : {
      "ObjectId" : "2e465df66d335858bd24dec1f230d0bee27a395e",
      "LastModified" : "2018-08-10T17:35:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# __*\n",
        "Line" : 3,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# _*\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# a*\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# b*\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# c*\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# e*\n",
        "Line" : 73,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# f*\n",
        "Line" : 78,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# g*\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# n*\n",
        "Line" : 89,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# o*\n",
        "Line" : 93,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# r*\n",
        "Line" : 105,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# s*\n",
        "Line" : 126,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# t*\n",
        "Line" : 167,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# u*\n",
        "Line" : 171,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# x*\n",
        "Line" : 174,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 15
    },
    "src/lttng/CMakeLists.txt" : {
      "ObjectId" : "d621a58473560776782339e9de8de181e67d0a67",
      "LastModified" : "2018-07-31T13:54:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_sanitizers(ntirpc_tracepoints)\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#add_sanitizers(ntirpc_lttng)\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "1ff75fa96eb424f4a51867a64c490403ae14fd9a",
      "LastModified" : "2018-07-31T13:54:48Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "version-h.in.cmake" : {
      "ObjectId" : "e7a859e5fbdd419b7bfb73cd29ce9291c978b2cc",
      "LastModified" : "2018-07-31T13:54:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ifndef VERSION_H\n\n#define VERSION_H\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#define NTIRPC_VERSION_MAJOR @NTIRPC_MAJOR_VERSION@\n\n#define NTIRPC_VERSION_MINOR @NTIRPC_MINOR_VERSION@\n\n#define NTIRPC_PATCH_LEVEL @NTIRPC_PATCH_LEVEL@\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#define NTIRPC_VERSION \"@NTIRPC_MAJOR_VERSION@.@NTIRPC_MINOR_VERSION@.@NTIRPC_PATCH_LEVEL@\"\n\n#define NTIRPC_VERSION_COMMENT \"@VERSION_COMMENT@\"\n\n#define _GIT_HEAD_COMMIT \"@_GIT_HEAD_COMMIT@\"\n\n#define _GIT_DESCRIBE \"@_GIT_DESCRIBE@\"\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#endif /* VERSION_H */\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    }
  },
  "FileTypes" : {
    "CMAKE" : 30
  },
  "ElapsedTime" : 1750
}