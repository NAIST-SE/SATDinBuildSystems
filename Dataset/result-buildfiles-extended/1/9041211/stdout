{
  "Repository" : "9041211",
  "Revision" : "HEAD",
  "ObjectId" : "204980004a3feb010436fc31e94f7c683e5eaed7",
  "CommitTime" : "2018-05-09T19:10:46Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "5c270a725f9d248d006771c44d33bd171535d765",
      "LastModified" : "2018-04-10T20:54:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# BSD libc includes the dl* functions and there's no libdl on them.\n\n# Unfortunately, CMake doesn't seem to distinguish *BSD from the other *nixen.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/CodeCoverage.cmake" : {
      "ObjectId" : "a0b0ef5269ef3cba688e16b06e9dd167a6dcf1ed",
      "LastModified" : "2017-09-10T21:22:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2012 - 2015, Lars Bilke\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without modification,\n\n# are permitted provided that the following conditions are met:\n\n#\n\n# 1. Redistributions of source code must retain the above copyright notice, this\n\n#    list of conditions and the following disclaimer.\n\n#\n\n# 2. Redistributions in binary form must reproduce the above copyright notice,\n\n#    this list of conditions and the following disclaimer in the documentation\n\n#    and/or other materials provided with the distribution.\n\n#\n\n# 3. Neither the name of the copyright holder nor the names of its contributors\n\n#    may be used to endorse or promote products derived from this software without\n\n#    specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n\n# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\n# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\n# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\n# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n\n# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\n# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n#\n\n#\n\n# 2012-01-31, Lars Bilke\n\n# - Enable Code Coverage\n\n#\n\n# 2013-09-17, Joakim SÃ¶derberg\n\n# - Added support for Clang.\n\n# - Some additional usage instructions.\n\n#\n\n# USAGE:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# 0. (Mac only) If you use Xcode 5.1 make sure to patch geninfo as described here:\n\n#      http://stackoverflow.com/a/22404544/80480\n\n#\n\n# 1. Copy this file into your cmake modules path.\n\n#\n\n# 2. Add the following line to your CMakeLists.txt:\n\n#      INCLUDE(CodeCoverage)\n\n#\n\n# 3. Set compiler flags to turn off optimization and enable coverage:\n\n#    SET(CMAKE_CXX_FLAGS \"-g -O0 -fprofile-arcs -ftest-coverage\")\n\n#\t SET(CMAKE_C_FLAGS \"-g -O0 -fprofile-arcs -ftest-coverage\")\n\n#\n\n# 3. Use the function SETUP_TARGET_FOR_COVERAGE to create a custom make target\n\n#    which runs your test executable and produces a lcov code coverage report:\n\n#    Example:\n\n#\t SETUP_TARGET_FOR_COVERAGE(\n\n#\t\t\t\tmy_coverage_target  # Name for custom target.\n\n#\t\t\t\ttest_driver         # Name of the test driver executable that runs the tests.\n\n#\t\t\t\t\t\t\t\t\t# NOTE! This should always have a ZERO as exit code\n\n#\t\t\t\t\t\t\t\t\t# otherwise the coverage generation will not complete.\n\n#\t\t\t\tcoverage            # Name of output directory.\n\n#\t\t\t\t)\n\n#\n\n# 4. Build a Debug build:\n\n#\t cmake -DCMAKE_BUILD_TYPE=Debug ..\n\n#\t make\n\n#\t make my_coverage_target\n\n#\n\n#\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check prereqs\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# NOT GCOV_PATH\n",
        "Line" : 78,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# CHECK VALID COMPILER\n",
        "Line" : 86,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# NOT CMAKE_BUILD_TYPE STREQUAL \"Debug\"\n",
        "Line" : 112,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Param _targetname     The name of new the custom make target\n\n# Param _testrunner     The name of the target which runs the tests.\n\n#\t\t\t\t\t\tMUST return ZERO always, even on errors.\n\n#\t\t\t\t\t\tIf not, no coverage report will be created!\n\n# Param _outputname     lcov output is generated as _outputname.info\n\n#                       HTML report is generated in _outputname/index.html\n\n# Optional fourth parameter is passed as arguments to _testrunner\n\n#   Pass them in list form, e.g.: \"-j;2\" for -j 2\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# NOT LCOV_PATH\n",
        "Line" : 127,
        "CharPositionInLine" : 9
      },
      "8" : {
        "Text" : "# NOT GENHTML_PATH\n",
        "Line" : 131,
        "CharPositionInLine" : 9
      },
      "9" : {
        "Text" : "# Setup target\n",
        "Line" : 138,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# Cleanup lcov\n",
        "Line" : 141,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Run tests\n",
        "Line" : 144,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Capturing lcov counters and generating report\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Show info where to find the report\n",
        "Line" : 157,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# SETUP_TARGET_FOR_COVERAGE\n",
        "Line" : 163,
        "CharPositionInLine" : 14
      },
      "15" : {
        "Text" : "# Param _targetname     The name of new the custom make target\n\n# Param _testrunner     The name of the target which runs the tests\n\n# Param _outputname     cobertura output is generated as _outputname.xml\n\n# Optional fourth parameter is passed as arguments to _testrunner\n\n#   Pass them in list form, e.g.: \"-j;2\" for -j 2\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# NOT PYTHON_EXECUTABLE\n",
        "Line" : 174,
        "CharPositionInLine" : 9
      },
      "17" : {
        "Text" : "# NOT GCOVR_PATH\n",
        "Line" : 178,
        "CharPositionInLine" : 9
      },
      "18" : {
        "Text" : "# Run tests\n",
        "Line" : 182,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Running gcovr\n",
        "Line" : 185,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Show info where to find the report\n",
        "Line" : 191,
        "CharPositionInLine" : 1
      },
      "21" : {
        "Text" : "# SETUP_TARGET_FOR_COVERAGE_COBERTURA\n",
        "Line" : 197,
        "CharPositionInLine" : 14
      },
      "CommentCount" : 22
    },
    "run/CMakeLists.txt" : {
      "ObjectId" : "659b25eec88474a77ee3f9c5519d70e7fcfa5214",
      "LastModified" : "2017-09-10T21:22:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "sandbox/CMakeLists.txt" : {
      "ObjectId" : "17f6c7a9c8f723d627df5495928ac8e8a6ff394e",
      "LastModified" : "2017-09-10T21:22:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "7c1627078e723c8dd3d63ec507731855141d07d5",
      "LastModified" : "2017-09-10T21:22:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The goal is to have a lily executable that's standalone, and a shared liblily\n\n# library. The two use the same sources, put together in an object library.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -fPIC is needed for it to work properly as a shared library.\n",
        "Line" : 12,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# This prevents the shared library being named libliblily\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "e1cb18f138e91e7da51e3a9cf0ff2130ee8352fd",
      "LastModified" : "2017-10-03T07:46:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 6
  },
  "ElapsedTime" : 1635
}