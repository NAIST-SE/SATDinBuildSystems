{
  "Repository" : "53099229",
  "Revision" : "HEAD",
  "ObjectId" : "0626849746af5ad0c8d3bca715c64122914e09bc",
  "CommitTime" : "2019-03-20T20:06:43Z",
  "Files" : {
    "3rdparty/CMakeLists.txt" : {
      "ObjectId" : "a46ec2e5daf94785b0beb30c5264581c4ae13007",
      "LastModified" : "2016-12-20T16:00:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/perfparser.cmake" : {
      "ObjectId" : "dbb40e36ba6f97e650ab2f5bb345f6c0bd42db4d",
      "LastModified" : "2018-05-07T08:14:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMakeLists.txt" : {
      "ObjectId" : "d901f5f95e0a3fed0d25f02260f10b7f55e0618a",
      "LastModified" : "2018-02-07T19:43:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enable the test harness\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Version setup\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO: make optional, use internal copy\n",
        "Line" : 47,
        "CharPositionInLine" : 32
      },
      "CommentCount" : 3
    },
    "cmake/ECMEnableSanitizers.cmake" : {
      "ObjectId" : "6e413116c8d0c8c6174e61fcd0d5192fc52b1363",
      "LastModified" : "2016-12-20T16:00:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# ECMEnableSanitizers\n\n# -------------------\n\n#\n\n# Enable compiler sanitizer flags.\n\n#\n\n# The following sanitizers are supported:\n\n#\n\n# - Address Sanitizer\n\n# - Memory Sanitizer\n\n# - Thread Sanitizer\n\n# - Leak Sanitizer\n\n# - Undefined Behaviour Sanitizer\n\n#\n\n# All of them are implemented in Clang, depending on your version, and\n\n# there is an work in progress in GCC, where some of them are currently\n\n# implemented.\n\n#\n\n# This module will check your current compiler version to see if it\n\n# supports the sanitizers that you want to enable\n\n#\n\n# Usage\n\n# =====\n\n#\n\n# Simply add::\n\n#\n\n#    include(ECMEnableSanitizers)\n\n#\n\n# to your ``CMakeLists.txt``. Note that this module is included in\n\n# KDECompilerSettings, so projects using that module do not need to also\n\n# include this one.\n\n#\n\n# The sanitizers are not enabled by default. Instead, you must set\n\n# ``ECM_ENABLE_SANITIZERS`` (either in your ``CMakeLists.txt`` or on the\n\n# command line) to a semicolon-separated list of sanitizers you wish to enable.\n\n# The options are:\n\n#\n\n# - address\n\n# - memory\n\n# - thread\n\n# - leak\n\n# - undefined\n\n#\n\n# The sanitizers \"address\", \"memory\" and \"thread\" are mutually exclusive.  You\n\n# cannot enable two of them in the same build.\n\n#\n\n# \"leak\" requires the  \"address\" sanitizer.\n\n#\n\n# .. note::\n\n#\n\n#   To reduce the overhead induced by the instrumentation of the sanitizers, it\n\n#   is advised to enable compiler optimizations (``-O1`` or higher).\n\n#\n\n# Example\n\n# =======\n\n#\n\n# This is an example of usage::\n\n#\n\n#   mkdir build\n\n#   cd build\n\n#   cmake -DECM_ENABLE_SANITIZERS='address;leak;undefined' ..\n\n#\n\n# .. note::\n\n#\n\n#   Most of the sanitizers will require Clang. To enable it, use::\n\n#\n\n#     -DCMAKE_CXX_COMPILER=clang++\n\n#\n\n# Since 1.3.0.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2014 Mathieu Tarral <mathieu.tarral@gmail.com>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# 1. Redistributions of source code must retain the copyright\n\n#    notice, this list of conditions and the following disclaimer.\n\n# 2. Redistributions in binary form must reproduce the copyright\n\n#    notice, this list of conditions and the following disclaimer in the\n\n#    documentation and/or other materials provided with the distribution.\n\n# 3. The name of the author may not be used to endorse or promote products\n\n#    derived from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n\n# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n\n# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n\n# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\n\n# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n\n# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n\n# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# MACRO check_compiler_version\n\n#-----------------------------\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# error !\n",
        "Line" : 113,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# MACRO check_compiler_support\n\n#------------------------------\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# for each element of the ECM_ENABLE_SANITIZERS list\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# lowercase filter\n",
        "Line" : 150,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# check option and enable appropriate flags\n",
        "Line" : 152,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "cmake/FindElfutils.cmake" : {
      "ObjectId" : "d9219a0f4c53f7d56ce93d23ed9ac37420614d04",
      "LastModified" : "2016-12-20T16:00:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find libdwarf\n\n# Once done this will define\n\n#\n\n#  LIBDWARF_FOUND - system has libdwarf\n\n#  LIBDWARF_INCLUDE_DIRS - the libdwarf include directory\n\n#  LIBDWARF_LIBRARIES - Link these to use libdwarf\n\n#  LIBDWARF_DEFINITIONS - Compiler switches required for using libdwarf\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# PATH and INCLUDE will also work\n",
        "Line" : 22,
        "CharPositionInLine" : 17
      },
      "2" : {
        "Text" : "# PATH and LIB will also work\n",
        "Line" : 44,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LIBDWARF_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/FindLibElf.cmake" : {
      "ObjectId" : "e9b72c420e371d5729fad607991d3f6da32bb47f",
      "LastModified" : "2017-03-24T14:55:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find libelf\n\n# Once done this will define\n\n#\n\n#  LIBELF_FOUND - system has libelf\n\n#  LIBELF_INCLUDE_DIRS - the libelf include directory\n\n#  LIBELF_LIBRARIES - Link these to use libelf\n\n#  LIBELF_DEFINITIONS - Compiler switches required for using libelf\n\n#\n\n#  Copyright (c) 2008 Bernhard Walle <bernhard.walle@gmx.de>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# 1. Redistributions of source code must retain the copyright\n\n#    notice, this list of conditions and the following disclaimer.\n\n# 2. Redistributions in binary form must reproduce the copyright\n\n#    notice, this list of conditions and the following disclaimer in the\n\n#    documentation and/or other materials provided with the distribution.\n\n# 3. The name of the author may not be used to endorse or promote products\n\n#    derived from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n\n# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n\n# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n\n# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\n\n# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n\n# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n\n# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LIBELF_FOUND to TRUE if all listed variables are TRUE\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "hotspot-config.h.cmake" : {
      "ObjectId" : "2c2396353062bab1c156da9d28c872dba6afeb27",
      "LastModified" : "2019-01-02T16:40:12Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/*\n  hotspot-config.h\n\n  This file is part of Hotspot, the Qt GUI for performance analysis.\n\n  Copyright (C) 2016-2019 Klar√§lvdalens Datakonsult AB, a KDAB Group company, info@kdab.com\n  Author: Milian Wolff <milian.wolff@kdab.com>\n\n  Licensees holding valid commercial KDAB Hotspot licenses may use this file in\n  accordance with Hotspot Commercial License Agreement provided with the Software.\n\n  Contact info@kdab.com if any conditions of this licensing are not clear to you.\n\n  This program is free software; you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation, either version 2 of the License, or\n  (at your option) any later version.\n\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n\n  You should have received a copy of the GNU General Public License\n  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scripts/CMakeLists.txt" : {
      "ObjectId" : "35941d5d6c6911448353e94c576edd7e3b0bf2ce",
      "LastModified" : "2018-05-07T08:14:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "e6302cd897ba9aac6b0b168a2d46c07077277596",
      "LastModified" : "2018-05-07T08:14:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# enable more pedantic compiler warnings\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# but allow signal/slot keywords\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ui files:\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# resources:\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "src/models/CMakeLists.txt" : {
      "ObjectId" : "5e1113e3acd073af1ddf7e2c8707a31dbb1ffaab",
      "LastModified" : "2019-02-09T19:22:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "77d8c7efa9adc6c488209154da1e5652771a87de",
      "LastModified" : "2017-06-21T07:45:23Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/integrationtests/CMakeLists.txt" : {
      "ObjectId" : "a6225f9c3dbfa25f3957999f0baa5410b49aac56",
      "LastModified" : "2018-01-15T13:29:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/modeltests/CMakeLists.txt" : {
      "ObjectId" : "086b5fd00b9c56ccfd99061179883984d426857c",
      "LastModified" : "2017-09-21T16:03:28Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/test-clients/CMakeLists.txt" : {
      "ObjectId" : "cd4e953323347ac9219244087bba3e870a2bd0af",
      "LastModified" : "2018-02-07T19:43:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check if static linking works at all.\n\n# For example OpenSuse 42.3 with clang doesn't ship a static libc++.a,\n\n# making static linking fail.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/test-clients/c-syscalls/CMakeLists.txt" : {
      "ObjectId" : "58f248a64ec4a47e7c803ffb360cece1b2c261f4",
      "LastModified" : "2017-09-21T16:03:28Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/test-clients/cpp-inlining/CMakeLists.txt" : {
      "ObjectId" : "4bc9d09408def4e864f061133b2d794a74e3e39d",
      "LastModified" : "2017-09-21T16:03:28Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/test-clients/cpp-locking/CMakeLists.txt" : {
      "ObjectId" : "27177f18a78f68d217a742f1490010a29187b1af",
      "LastModified" : "2017-09-21T16:03:28Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/test-clients/cpp-minimal-static/CMakeLists.txt" : {
      "ObjectId" : "3c90315add15759762a28de6e3dfa4ac3981e148",
      "LastModified" : "2018-02-07T19:43:50Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/test-clients/cpp-parallel/CMakeLists.txt" : {
      "ObjectId" : "d90f51eb8b48d36d0ce5db19e5fad42e4759c7fc",
      "LastModified" : "2018-02-07T19:43:50Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/test-clients/cpp-recursion/CMakeLists.txt" : {
      "ObjectId" : "5edd691c05a5436fe81efca2a12ca828417e4984",
      "LastModified" : "2018-02-07T19:43:50Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/test-clients/cpp-sleep/CMakeLists.txt" : {
      "ObjectId" : "1967cb0e49ad18840b4ae12ad3410266f73f0251",
      "LastModified" : "2018-02-07T19:43:50Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/test-clients/cpp-stdin/CMakeLists.txt" : {
      "ObjectId" : "df689363dc257a3d61032e74af10027ec685aa90",
      "LastModified" : "2018-02-07T19:43:50Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/test-clients/cpp-threadnames/CMakeLists.txt" : {
      "ObjectId" : "aaed5ca0ccd300020975b54f904b7d96850c3ca9",
      "LastModified" : "2018-02-07T19:43:50Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 22,
    "CMAKESOURCE" : 1
  },
  "ElapsedTime" : 1087
}