{
  "Repository" : "25445898",
  "Revision" : "HEAD",
  "ObjectId" : "e9b5ea69fc606d87a864c27a6aaf17486d9f749b",
  "CommitTime" : "2019-04-16T16:19:59Z",
  "Files" : {
    "pom.xml" : {
      "ObjectId" : "58b3790fae2c63e83b16ab9e2b8664204b412019",
      "LastModified" : "2019-04-16T16:19:59Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Used by RedisCache ",
        "Line" : 59,
        "CharPositionInLine" : 36
      },
      "1" : {
        "Text" : " The application logger. ",
        "Line" : 65,
        "CharPositionInLine" : 41
      },
      "2" : {
        "Text" : " Used by S3Source and S3Cache ",
        "Line" : 76,
        "CharPositionInLine" : 46
      },
      "3" : {
        "Text" : " In-memory object cache: https://github.com/ben-manes/caffeine",
        "Line" : 87,
        "CharPositionInLine" : 78
      },
      "4" : {
        "Text" : " Used in tests to test that System.exit() is called ",
        "Line" : 93,
        "CharPositionInLine" : 68
      },
      "5" : {
        "Text" : " Used by HeapCache ",
        "Line" : 100,
        "CharPositionInLine" : 35
      },
      "6" : {
        "Text" : " Used by JdbcSourceTest and JdbcCacheTest ",
        "Line" : 106,
        "CharPositionInLine" : 58
      },
      "7" : {
        "Text" : " Used by com.mortennobel.imagescaling ",
        "Line" : 113,
        "CharPositionInLine" : 54
      },
      "8" : {
        "Text" : " Used by AzureStorageSource and AzureStorageCache",
        "Line" : 119,
        "CharPositionInLine" : 65
      },
      "9" : {
        "Text" : " Provides a JDBC connection pool for JdbcSource and JdbcCache ",
        "Line" : 125,
        "CharPositionInLine" : 78
      },
      "10" : {
        "Text" : " Manages the test configuration. ",
        "Line" : 131,
        "CharPositionInLine" : 49
      },
      "11" : {
        "Text" : " IOUtils is used widely ",
        "Line" : 138,
        "CharPositionInLine" : 40
      },
      "12" : {
        "Text" : " Used by S3SourceTest and S3CacheTest ",
        "Line" : 144,
        "CharPositionInLine" : 54
      },
      "13" : {
        "Text" : " S3 client for S3Source ",
        "Line" : 151,
        "CharPositionInLine" : 40
      },
      "14" : {
        "Text" : " Dependency on part of Java EE that's available by default in Java 8\n        but not 9 ",
        "Line" : 158,
        "CharPositionInLine" : 22
      },
      "15" : {
        "Text" : " Enhanced ImageIO TIFF plugin supporting BigTIFF:\n         https://github.com/geosolutions-it/imageio-ext/ ",
        "Line" : 165,
        "CharPositionInLine" : 61
      },
      "16" : {
        "Text" : " This is used to fix a CVE-2015-6420 in commons-collections-3.2.1, a\n        transitive dependency ",
        "Line" : 183,
        "CharPositionInLine" : 34
      },
      "17" : {
        "Text" : " Provides PDFBox for PdfBoxProcessor. Note that there are also some\n        other dependencies in this POM used only by PDFBox. ",
        "Line" : 190,
        "CharPositionInLine" : 64
      },
      "18" : {
        "Text" : " Assists PDFBox in decoding JBIG2-encoded images ",
        "Line" : 196,
        "CharPositionInLine" : 65
      },
      "19" : {
        "Text" : " Unit tests ",
        "Line" : 202,
        "CharPositionInLine" : 28
      },
      "20" : {
        "Text" : " Performance tests ",
        "Line" : 209,
        "CharPositionInLine" : 35
      },
      "21" : {
        "Text" : " Assists in parsing XMP metadata in RDF/XML ",
        "Line" : 222,
        "CharPositionInLine" : 60
      },
      "22" : {
        "Text" : " Used for media type detection ",
        "Line" : 233,
        "CharPositionInLine" : 47
      },
      "23" : {
        "Text" : " Assists PDFBox in decoding certain PDFs ",
        "Line" : 239,
        "CharPositionInLine" : 57
      },
      "24" : {
        "Text" : " Supports <if> expressions in logback.xml ",
        "Line" : 245,
        "CharPositionInLine" : 58
      },
      "25" : {
        "Text" : " Provides HTTP/2 support in the Jetty client.\n        N.B.: ALPN support is in a different module. ",
        "Line" : 252,
        "CharPositionInLine" : 57
      },
      "26" : {
        "Text" : " Provides HTTP/2 support in the Jetty server.\n        N.B.: ALPN support is in a different module. ",
        "Line" : 264,
        "CharPositionInLine" : 57
      },
      "27" : {
        "Text" : " Enables support for ALPN in Jetty client.\n        N.B.: in Java 8, this requires an alpn-boot JAR on the boot classpath. ",
        "Line" : 271,
        "CharPositionInLine" : 83
      },
      "28" : {
        "Text" : " Enables support for ALPN in Jetty server.\n        N.B.: in Java 8, this requires an alpn-boot JAR on the boot classpath. ",
        "Line" : 278,
        "CharPositionInLine" : 83
      },
      "29" : {
        "Text" : " Enables Jetty client to support the ALPN built into Java 9 ",
        "Line" : 284,
        "CharPositionInLine" : 76
      },
      "30" : {
        "Text" : " Enables Jetty server to support the ALPN built into Java 9 ",
        "Line" : 290,
        "CharPositionInLine" : 76
      },
      "31" : {
        "Text" : " Used by HttpSource ",
        "Line" : 296,
        "CharPositionInLine" : 36
      },
      "32" : {
        "Text" : " Provides the standalone servlet container ",
        "Line" : 312,
        "CharPositionInLine" : 59
      },
      "33" : {
        "Text" : " Enables colorized Logback console output in Windows ",
        "Line" : 333,
        "CharPositionInLine" : 69
      },
      "34" : {
        "Text" : " JRuby is used to execute delegate script methods. ",
        "Line" : 339,
        "CharPositionInLine" : 67
      },
      "35" : {
        "Text" : " Needed by tests, but not necessary at compile time. ",
        "Line" : 345,
        "CharPositionInLine" : 69
      },
      "36" : {
        "Text" : " Jackson for data serialization ",
        "Line" : 352,
        "CharPositionInLine" : 48
      },
      "37" : {
        "Text" : " Makes Jackson aware of JDK8 date/time objects ",
        "Line" : 368,
        "CharPositionInLine" : 63
      },
      "38" : {
        "Text" : " Enables Jackson to handle Optionals ",
        "Line" : 374,
        "CharPositionInLine" : 53
      },
      "39" : {
        "Text" : " Provides Velocity for the landing and error page templates ",
        "Line" : 380,
        "CharPositionInLine" : 76
      },
      "40" : {
        "Text" : " Selenium is used to test the control panel, using a headless HtmlUnit\n        browser. ",
        "Line" : 387,
        "CharPositionInLine" : 21
      },
      "41" : {
        "Text" : " Logging interface used by the application ",
        "Line" : 406,
        "CharPositionInLine" : 59
      },
      "42" : {
        "Text" : " intercepts jcl log messages from Commons etc. ",
        "Line" : 412,
        "CharPositionInLine" : 63
      },
      "43" : {
        "Text" : " Assembles the release zip archive. ",
        "Line" : 418,
        "CharPositionInLine" : 52
      },
      "44" : {
        "Text" : " Provides imageio-ext-tiff ",
        "Line" : 428,
        "CharPositionInLine" : 43
      },
      "45" : {
        "Text" : " Find bugs with mvn findbugs:findbugs findbugs:gui ",
        "Line" : 448,
        "CharPositionInLine" : 71
      },
      "46" : {
        "Text" : " About the build: it's easy to build a JAR using the Maven Shade\n            plugin, and it's easy to build a WAR using the Maven WAR plugin. However,\n            this application is packaged as a special WAR that can also be run like a\n            JAR, and there's no all-in-one Maven plugin for that. So, from here, we\n            have to go through a sequence of steps to build the custom WAR. ",
        "Line" : 470,
        "CharPositionInLine" : 80
      },
      "47" : {
        "Text" : " The first step is to unpack dependencies (direct and transient)\n            needed in standalone mode into the root, for compatibility with\n            `java -jar` invocation. Note that this plugin is not smart about handling\n            dependencies with the same filename, which mainly is a problem with\n            same-named META-INF/services files from e.g. Jetty, so we will have to\n            work around that in a later step. ",
        "Line" : 477,
        "CharPositionInLine" : 50
      },
      "48" : {
        "Text" : " The previous step copied only dependencies. Now we copy the\n            application classes needed for standalone mode into the root. ",
        "Line" : 507,
        "CharPositionInLine" : 78
      },
      "49" : {
        "Text" : " And also add back a missing Jetty service that didn't get\n                    copied in the unpack-dependencies execution. ",
        "Line" : 536,
        "CharPositionInLine" : 69
      },
      "50" : {
        "Text" : " Create the war file from the stuff we just unpacked. ",
        "Line" : 555,
        "CharPositionInLine" : 74
      },
      "51" : {
        "Text" : " Assemble the created war into a release package. ",
        "Line" : 584,
        "CharPositionInLine" : 70
      },
      "52" : {
        "Text" : " Enables running with mvn exec:java ",
        "Line" : 604,
        "CharPositionInLine" : 56
      },
      "CommentCount" : 53
    }
  },
  "FileTypes" : {
    "MAVEN" : 1
  },
  "ElapsedTime" : 2044
}