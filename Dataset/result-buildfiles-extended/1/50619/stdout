{
  "Repository" : "50619",
  "Revision" : "HEAD",
  "ObjectId" : "b06466ce4b8b71c1cd67162cba87031a55a2efa5",
  "CommitTime" : "2019-01-09T16:23:40Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "7708df8e8319cc797c11a9285844f8474f2778cd",
      "LastModified" : "2016-08-06T17:53:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#    C M A K E L I S T S . T X T   F O R   S T E P C O D E\n\n#\n\n# This file is Copyright (c) 2010 United States Government as\n\n# represented by the U.S. Army Research Laboratory.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# 1. Redistributions of source code must retain the above copyright\n\n# notice, this list of conditions and the following disclaimer.\n\n#\n\n# 2. Redistributions in binary form must reproduce the above\n\n# copyright notice, this list of conditions and the following\n\n# disclaimer in the documentation and/or other materials provided\n\n# with the distribution.\n\n#\n\n# 3. The name of the author may not be used to endorse or promote\n\n# products derived from this software without specific prior written\n\n# permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS\n\n# OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\n# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY\n\n# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\n\n# GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n\n# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\n# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\n# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# *******************************************************************\n\n# ***                 STEPcode's CMakeLists.txt                   ***\n\n# *******************************************************************\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This file contains the top level CMakeLists.txt logic for the\n\n# STEPcode software package.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# SC version\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# SC ABI version. SC_ABI_SOVERSION should be incremented\n\n# for each release introducing API incompatibilities\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Minimum required version of CMake\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# CMake derives much of its functionality from modules, typically\n\n# stored in one directory - let CMake know where to find them.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# testing and compilation options, build output dirs, install dirs, uninstall, package creation, etc\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# SC_ADDEXEC and SC_ADDLIB macros, dllimport/export, etc\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Macros related to paths\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# locale stuff\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# logic related to regenerating the lexer and parser source code\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#this makes SC_BUILD_SCHEMAS show up in cmake-gui\n",
        "Line" : 94,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# create config headers sc_cf.h and sc_version_string.h\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "################\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Disable warning for preferred usage of secure functions (example strcpy should be strcpy_s, ...)\n",
        "Line" : 113,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# 'make core' builds everything that isn't generated. for devs.\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# CONFIG_END_MESSAGES - list of messages to be printed after everything else is done.\n\n# THIS MUST BE LAST to ensure that they are visible to the user without scrolling.\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Local Variables:\n\n# tab-width: 8\n\n# mode: cmake\n\n# indent-tabs-mode: t\n\n# End:\n\n# ex: shiftwidth=2 tabstop=8\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "CTestConfig.cmake" : {
      "ObjectId" : "6592e676e57edeeec0b78b3079f3578e169ccb37",
      "LastModified" : "2014-03-01T03:06:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Local Variables:\n\n# tab-width: 8\n\n# mode: cmake\n\n# indent-tabs-mode: t\n\n# End:\n\n# ex: shiftwidth=2 tabstop=8\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindLEMON.cmake" : {
      "ObjectId" : "19aa0d500a6dad6a83fea2a297342cea6a387bdc",
      "LastModified" : "2016-08-06T14:53:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# - Find lemon executable and provides macros to generate custom build rules\n\n# The module defines the following variables\n\n#\n\n#  LEMON_EXECUTABLE - path to the lemon program\n\n#  LEMON_TEMPLATE - location of the lemon template file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n#                 F I N D L E M O N . C M A K E\n\n#\n\n# Originally based off of FindBISON.cmake from Kitware's CMake distribution\n\n#\n\n# Copyright (c) 2010-2016 United States Government as represented by\n\n#                the U.S. Army Research Laboratory.\n\n# Copyright 2009 Kitware, Inc.\n\n# Copyright 2006 Tristan Carel\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n#\n\n# * The names of the authors may not be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# look for the template in share\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# look for the template in bin dir\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# fallback\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Define the macro\n\n#  LEMON_TARGET(<Name> <LemonInput> <LemonSource> <LemonHeader>\n\n#\t\t[<ArgString>])\n\n# which will create a custom rule to generate a parser. <LemonInput> is\n\n# the path to a lemon file. <LemonSource> is the desired name for the\n\n# generated source file. <LemonHeader> is the desired name for the\n\n# generated header which contains the token list. Anything in the optional\n\n# <ArgString> parameter is appended to the lemon command line.\n\n#\n\n#  ====================================================================\n\n#  Example:\n\n#\n\n#   find_package(LEMON)\n\n#   LEMON_TARGET(MyParser parser.y parser.c parser.h)\n\n#   add_executable(Foo main.cpp ${LEMON_MyParser_OUTPUTS})\n\n#  ====================================================================\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Need a working directory\n",
        "Line" : 116,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Output source file\n",
        "Line" : 122,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Output header file\n",
        "Line" : 133,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# input file\n",
        "Line" : 144,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# names of lemon output files will be based on the name of the input file\n",
        "Line" : 153,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# copy input to bin directory and run lemon\n",
        "Line" : 158,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# rename generated outputs\n",
        "Line" : 169,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# make sure we clean up generated output and copied input\n",
        "Line" : 189,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# macro ran successfully\n",
        "Line" : 193,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "#============================================================\n\n# FindLEMON.cmake ends here\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Local Variables:\n\n# tab-width: 8\n\n# mode: cmake\n\n# indent-tabs-mode: t\n\n# End:\n\n# ex: shiftwidth=2 tabstop=8\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "cmake/FindPERPLEX.cmake" : {
      "ObjectId" : "22d63203267fabba87e83f27615765ac448f46f5",
      "LastModified" : "2016-08-06T14:53:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# - Find perplex executable and provides macros to generate custom build rules\n\n# The module defines the following variables\n\n#\n\n#  PERPLEX_EXECUTABLE - path to the perplex program\n\n#  PERPLEX_TEMPLATE - location of the perplex template file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n#                 F I N D P E R P L E X . C M A K E\n\n#\n\n# Originally based off of FindBISON.cmake from Kitware's CMake distribution\n\n#\n\n# Copyright (c) 2010-2016 United States Government as represented by\n\n#                the U.S. Army Research Laboratory.\n\n# Copyright 2009 Kitware, Inc.\n\n# Copyright 2006 Tristan Carel\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n#\n\n# * The names of the authors may not be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Defines two macros - PERPLEX_TARGET, which takes perplex inputs and\n\n# runs both perplex and re2c to generate C source code/headers, and\n\n# ADD_PERPLEX_LEMON_DEPENDENCY which is used to set up dependencies between\n\n# scanner and parser targets when necessary.\n\n#\n\n# #====================================================================\n\n#  Example:\n\n#\n\n#   find_package(LEMON)\n\n#   find_package(RE2C)\n\n#   find_package(PERPLEX)\n\n#\n\n#   LEMON_TARGET(MyParser parser.y \"${CMAKE_CURRENT_BINARY_DIR}/parser.cpp\")\n\n#   PERPLEX_TARGET(MyScanner scanner.re  \"${CMAKE_CURRENT_BINARY_DIR}/scanner.cpp\" \"${CMAKE_CURRENT_BINARY_DIR}/scanner_header.hpp\")\n\n#   ADD_PERPLEX_LEMON_DEPENDENCY(MyScanner MyParser)\n\n#\n\n#   include_directories(\"${CMAKE_CURRENT_BINARY_DIR}\")\n\n#   add_executable(Foo\n\n#      Foo.cc\n\n#      ${LEMON_MyParser_OUTPUTS}\n\n#      ${PERPLEX_MyScanner_OUTPUTS}\n\n#   )\n\n#  ====================================================================\n\n#\n\n#=============================================================================\n\n#\n\n# Originally based off of FindBISON.cmake from Kitware's CMake distribution\n\n#\n\n# Copyright (c) 2010-2016 United States Government as represented by\n\n#                the U.S. Army Research Laboratory.\n\n# Copyright 2009 Kitware, Inc.\n\n# Copyright 2006 Tristan Carel\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n#\n\n# * The names of the authors may not be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#============================================================\n\n# PERPLEX_TARGET (public macro)\n\n#============================================================\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Need a working directory\n",
        "Line" : 148,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Set up intermediate and final output names\n",
        "Line" : 154,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Output source file\n",
        "Line" : 156,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Output header file\n",
        "Line" : 167,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# input file\n",
        "Line" : 178,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Intermediate file\n",
        "Line" : 186,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Make sure we have a template\n",
        "Line" : 189,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "#============================================================\n\n# ADD_PERPLEX_LEMON_DEPENDENCY (public macro)\n\n#============================================================\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#============================================================\n\n# FindPERPLEX.cmake ends here\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Local Variables:\n\n# tab-width: 8\n\n# mode: cmake\n\n# indent-tabs-mode: t\n\n# End:\n\n# ex: shiftwidth=2 tabstop=8\n",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "cmake/FindRE2C.cmake" : {
      "ObjectId" : "5450c34a95c0f28e1b316ac1539bfb1c22cc2781",
      "LastModified" : "2016-08-06T14:53:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The module defines the following variables:\n\n#  RE2C_EXECUTABLE - the path to the re2c executable\n\n#\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Provide a macro to generate custom build rules:\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# RE2C_TARGET(Name RE2CInput RE2COutput [COMPILE_FLAGS <string>])\n\n# which creates a custom command  to generate the <RE2COutput> file from\n\n# the <RE2CInput> file.  If  COMPILE_FLAGS option is specified, the next\n\n# parameter is added to the re2c  command line. Name is an alias used to\n\n# get  details of  this custom  command.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This module also defines a macro:\n\n#  ADD_RE2C_LEMON_DEPENDENCY(RE2CTarget LemonTarget)\n\n# which  adds the  required dependency  between a  scanner and  a parser\n\n# where  <RE2CTarget>  and <LemonTarget>  are  the  first parameters  of\n\n# respectively RE2C_TARGET and LEMON_TARGET macros.\n\n#\n\n#  ====================================================================\n\n#  Example:\n\n#\n\n#   find_package(LEMON)\n\n#   find_package(RE2C)\n\n#\n\n#   LEMON_TARGET(MyParser parser.y \"${CMAKE_CURRENT_BINARY_DIR}/parser.cpp\")\n\n#   RE2C_TARGET(MyScanner scanner.re  \"${CMAKE_CURRENT_BINARY_DIR}/scanner.cpp\")\n\n#   ADD_RE2C_LEMON_DEPENDENCY(MyScanner MyParser)\n\n#\n\n#   include_directories(\"${CMAKE_CURRENT_BINARY_DIR}\")\n\n#   add_executable(Foo\n\n#      Foo.cc\n\n#      ${LEMON_MyParser_OUTPUTS}\n\n#      ${RE2C_MyScanner_OUTPUTS}\n\n#   )\n\n#  ====================================================================\n\n#\n\n#=============================================================================\n\n# Copyright (c) 2010-2016 United States Government as represented by\n\n#                the U.S. Army Research Laboratory.\n\n# Copyright 2009 Kitware, Inc.\n\n# Copyright 2006 Tristan Carel\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n#\n\n# * The names of the authors may not be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#============================================================\n\n# RE2C_TARGET (public macro)\n\n#============================================================\n\n#\n\n# TODO - rework this macro to make use of CMakeParseArguments, see\n\n# http://www.cmake.org/pipermail/cmake/2012-July/051309.html\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#============================================================\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#============================================================\n\n# ADD_RE2C_LEMON_DEPENDENCY (public macro)\n\n#============================================================\n\n#\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#============================================================\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# RE2C_Util.cmake ends here\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Local Variables:\n\n# tab-width: 8\n\n# mode: cmake\n\n# indent-tabs-mode: t\n\n# End:\n\n# ex: shiftwidth=2 tabstop=8\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "cmake/Generated_Source_Utils.cmake" : {
      "ObjectId" : "601f9236430b3b6ac0380eb2ea37e65713966af5",
      "LastModified" : "2016-08-06T15:23:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Utility routines for managing generated files with CMake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Deal with absolute and relative paths a bit differently\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Got filename components sorted - proceed\n",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Deal with absolute and relative paths a bit differently\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Got filename components sorted - proceed\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Local Variables:\n\n# tab-width: 8\n\n# mode: cmake\n\n# indent-tabs-mode: t\n\n# End:\n\n# ex: shiftwidth=2 tabstop=8\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/SC_Build_opts.cmake" : {
      "ObjectId" : "5a3661e45121d0b0ba57bf0f0acacc475caa3e99",
      "LastModified" : "2016-08-06T17:53:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# BIN and LIB directories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# testing and compilation options, build output dirs, install dirs, etc\n\n# included by root CMakeLists\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# By default set debug build\n",
        "Line" : 26,
        "CharPositionInLine" : 55
      },
      "3" : {
        "Text" : "# Define helper macro OPTION_WITH_DEFAULT\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# build shared libs by default\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# don't build static libs by default\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Should we use C++11?\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Get version from git\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#---------------------------------------------------------------------\n\n# Coverage option\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# build static libs, better coverage report\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#won't build with static libs\n",
        "Line" : 75,
        "CharPositionInLine" : 31
      },
      "11" : {
        "Text" : "#---------------------------------------------------------------------\n\n# Testing option\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#test all schemas, unless otherwise specified\n",
        "Line" : 83,
        "CharPositionInLine" : 32
      },
      "13" : {
        "Text" : "#---------------------------------------------------------------------\n\n# Executable install option\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#---------------------------------------------------------------------\n\n# The following logic is what allows binaries to run successfully in\n\n# the build directory AND install directory.  Thanks to plplot for\n\n# identifying the necessity of setting CMAKE_INSTALL_NAME_DIR on OSX.\n\n# Documentation of these options is available at\n\n# http://www.cmake.org/Wiki/CMake_RPATH_handling\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# use, i.e. don't skip the full RPATH for the build tree\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# when building, don't use the install RPATH already\n\n# (but later on when installing)\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# the RPATH/INSTALL_NAME_DIR to be used when installing\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# On OSX, we need to set INSTALL_NAME_DIR instead of RPATH\n\n# http://www.cmake.org/cmake/help/cmake-2-8-docs.html#variable:CMAKE_INSTALL_NAME_DIR\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# add the automatically determined parts of the RPATH which point to\n\n# directories outside the build tree to the install RPATH\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# When this is a subbuild, assume that the parent project controls all of the following\n\n#======================================================================================\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Output directories. In a separate file so it can be used by the schema scanner CMake as well.\n",
        "Line" : 126,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Configure install locations. Only do this if CMAKE_INSTALL_PREFIX hasn't\n\n# been set already, to try and allow parent builds (if any) some control.\n\n#\n\n# Need a good Debug location for Windows.\n",
        "Line" : 129,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# SC Packaging\n\n# $make package\n",
        "Line" : 145,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Uninstall target\n\n# From http://www.cmake.org/Wiki/CMake_FAQ#Can_I_do_.22make_uninstall.22_with_CMake.3F\n",
        "Line" : 156,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Local Variables:\n\n# tab-width: 8\n\n# mode: cmake\n\n# indent-tabs-mode: t\n\n# End:\n\n# ex: shiftwidth=2 tabstop=8\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 26
    },
    "cmake/SC_CXX_schema_macros.cmake" : {
      "ObjectId" : "ddb26705387c536cce6b0d9cb2cf47629f1d653b",
      "LastModified" : "2016-08-06T15:23:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# macros to be used in the CMakeLists generated by the schema scanner\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# uses SC_GENERATE_CXX_ONESHOT - if true, files will only be generated once. this is useful when debugging and modifying code, not otherwise. TODO: print a warning when set\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# find all part 21 files in schema dir, add a test for each one\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# create p21read_sdai_*, lazy_sdai_*, any exes listed in SC_SDAI_ADDITIONAL_EXES_SRCS\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#add_dependencies(p21read_${PROJECT_NAME} version_string)\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#add_dependencies(lazy_${PROJECT_NAME} version_string)\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#add user-defined executables\n",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#set_target_properties(${name}_${PROJECT_NAME} PROPERTIES COMPILE_FLAGS \"${${PROJECT_NAME}_COMPILE_FLAGS} -I${path}\")\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# label the tests and set dependencies\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# SCHEMA_TARGETS macro -\n\n# expFile: path to express file\n\n# schemaName: name of the schema\n\n# sourceFiles: list of .cc and .h files\n\n#\n\n# create targets for the schema(s) in expFile\n\n# targets include gen_cxx_*, sdai_cxx_*, p21read_*, lazyp21_*, ...\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# schema scanner comes up with a short schema name for PROJECT() (which sets ${PROJECT_NAME})\n",
        "Line" : 80,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# this calls a cmake script because it doesn't seem to be possible\n\n# to divert stdout, stderr in cmake except via execute_process\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# if testing is enabled, \"TESTABLE\" sets property EXCLUDE_FROM_ALL and prevents installation\n",
        "Line" : 98,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# TODO add test to verify that schema scanner output matches fedex_plus output\n",
        "Line" : 105,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Local Variables:\n\n# tab-width: 8\n\n# mode: cmake\n\n# indent-tabs-mode: t\n\n# End:\n\n# ex: shiftwidth=2 tabstop=8\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "cmake/SC_Config_Headers.cmake" : {
      "ObjectId" : "f272c94d3e4bff59d43f52b91a80f035b849d9d9",
      "LastModified" : "2017-08-19T19:41:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# create sc_cf.h and sc_version_string.h\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Take the sc config file template as the starting point for\n\n# sc_cf.h.in - scripts may need to append to the template, so\n\n# it is read into memory initially.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# vars probably need set for embarcadero, etc\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#quotes are *required*!\n",
        "Line" : 60,
        "CharPositionInLine" : 66
      },
      "4" : {
        "Text" : "# vars probably need set for embarcadero, etc\n",
        "Line" : 75,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#quotes are *required*!\n",
        "Line" : 77,
        "CharPositionInLine" : 66
      },
      "6" : {
        "Text" : "# vars probably need set for embarcadero, etc\n",
        "Line" : 89,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#quotes are *required*!\n",
        "Line" : 91,
        "CharPositionInLine" : 60
      },
      "8" : {
        "Text" : "# Now that all the tests are done, configure the sc_cf.h file:\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ------------------------\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# create sc_version_string.h, http://stackoverflow.com/questions/3780667\n\n# Using 'ver_string' instead of 'sc_version_string.h' is a trick to force the\n\n# command to always execute when the custom target is built. It works because\n\n# a file by that name never exists.\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# creates sc_version_string.h using cmake script\n",
        "Line" : 109,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# sc_version_string.h is a generated file\n",
        "Line" : 113,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Local Variables:\n\n# tab-width: 8\n\n# mode: cmake\n\n# indent-tabs-mode: t\n\n# End:\n\n# ex: shiftwidth=2 tabstop=8\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "cmake/SC_Locale.cmake" : {
      "ObjectId" : "f04a5865dc967c3c07f9caa0500f54e1067bf7a8",
      "LastModified" : "2016-08-06T15:23:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Save the current LC_ALL, LC_MESSAGES, and LANG environment variables and set them\n\n# to \"C\" so things like date output are as expected\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Local Variables:\n\n# tab-width: 8\n\n# mode: cmake\n\n# indent-tabs-mode: t\n\n# End:\n\n# ex: shiftwidth=2 tabstop=8\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/SC_Outdirs.cmake" : {
      "ObjectId" : "49547d013460269b82b778b3b933039d7410e147",
      "LastModified" : "2016-08-06T15:23:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# in its own file so that it can be used by the schema scanner as well\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Local Variables:\n\n# tab-width: 8\n\n# mode: cmake\n\n# indent-tabs-mode: t\n\n# End:\n\n# ex: shiftwidth=2 tabstop=8\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/SC_Paths.cmake" : {
      "ObjectId" : "29f1a81f1ca120dfaf364b598683e239406cfdb6",
      "LastModified" : "2016-08-06T15:23:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#is it a path relative to build dir?\n",
        "Line" : 68,
        "CharPositionInLine" : 51
      },
      "1" : {
        "Text" : "# path relative to STEPcode/data?\n",
        "Line" : 70,
        "CharPositionInLine" : 57
      },
      "2" : {
        "Text" : "# already an absolute path\n",
        "Line" : 72,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "#if it is a dir, look for one .exp file inside\n",
        "Line" : 78,
        "CharPositionInLine" : 34
      },
      "4" : {
        "Text" : "# Local Variables:\n\n# tab-width: 8\n\n# mode: cmake\n\n# indent-tabs-mode: t\n\n# End:\n\n# ex: shiftwidth=2 tabstop=8\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/SC_Regenerate.cmake" : {
      "ObjectId" : "513b4787a99886a6cf18e8b663760cf4685bbd95",
      "LastModified" : "2016-08-06T15:23:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The Express parser uses the tools Perplex, RE2C and Lemon to generate code\n\n# from higher level inputs.  Depending on available tools and options, the\n\n# SC build can either re-generate code as part of the build, or use cached\n\n# files that are ready for compilation.\n\n#\n\n# SC_GENERATE_LEXER_PARSER is the \"high level\" control a user sets to determine\n\n# how the SC build will interact (or not) with these tools.  AUTO (the\n\n# default) means it will search for the necessary tools, and use them only if\n\n# everything is found.  If not, it will fall back to the cached versions.  If\n\n# this option is set to ON and the necessary tools are not found, the\n\n# configure step will fail.  If it is set to OFF, SC will not even try to use\n\n# the generators and will instead use the cached sources.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If the generators have not been turned off, we need to check for them\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Templates may be anywhere - make sure we have a stable path if a relative\n\n# path was specified at CMake time\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Local Variables:\n\n# tab-width: 8\n\n# mode: cmake\n\n# indent-tabs-mode: t\n\n# End:\n\n# ex: shiftwidth=2 tabstop=8\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/SC_Run_exp2cxx.cmake" : {
      "ObjectId" : "dc4111f0283e4ae2884200cd63ff7b36bae35da8",
      "LastModified" : "2016-08-06T15:23:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# if oneshot is true, don't run exp2cxx if source files exist. if schema.cc exists, assume others do\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO count number of lines in stdout/stderr and tell user?\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Local Variables:\n\n# tab-width: 8\n\n# mode: cmake\n\n# indent-tabs-mode: t\n\n# End:\n\n# ex: shiftwidth=2 tabstop=8\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/SC_Targets.cmake" : {
      "ObjectId" : "d451658d22782e7e43a3d30ed2c0f347f5333465",
      "LastModified" : "2016-08-06T17:53:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set compile definitions for dll exports on windows\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set compile definitions for dll imports on windows\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#SC_ADDEXEC(execname \"source files\" \"linked libs\" [\"TESTABLE\"] [\"NO_INSTALL\"])\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#add import definitions for all libs that the executable is linked to\n",
        "Line" : 41,
        "CharPositionInLine" : 49
      },
      "4" : {
        "Text" : "# Enable extra compiler flags if local executables and/or global options dictate\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#SC_ADDLIB(libname \"source files\" \"linked libs\" [\"TESTABLE\"] [\"NO_INSTALL\"] [\"SO_SRCS ...\"] [\"STATIC_SRCS ...\"])\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# We need the lib prefix on win32, so add it even if our add_library\n\n# wrapper function has removed it due to the target name - see\n\n# http://www.cmake.org/Wiki/CMake_FAQ#How_do_I_make_my_shared_and_static_libraries_have_the_same_root_name.2C_but_different_suffixes.3F\n",
        "Line" : 113,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# Enable extra compiler flags if local libraries and/or global options dictate\n",
        "Line" : 132,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Local Variables:\n\n# tab-width: 8\n\n# mode: cmake\n\n# indent-tabs-mode: t\n\n# End:\n\n# ex: shiftwidth=2 tabstop=8\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "cmake/sc_version_string.cmake" : {
      "ObjectId" : "c6669c8d7d05b0747c592231f67331c34a2cf5f7",
      "LastModified" : "2018-07-13T23:12:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# creates sc_version_string.h, which defines sc_version()\n\n# sc_version() returns a pretty commit description and a build timestamp.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# only update the file if the git commit has changed, because whenever the file is updated files including the header must rebuild\n\n# parallel rebuilds can result in race conditions and failures, particularly when running ctest in parallel\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# http://stackoverflow.com/questions/3780667\n\n# http://www.cmake.org/pipermail/cmake/2009-February/027014.html\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#---------- find commit id ------------------\n\n#use git for a pretty commit id\n\n#uses 'git describe --tags', so tags are required in the repo\n\n#create a tag with 'git tag <name>' and 'git push --tags'\n\n#if git can't be found, uses contents of SC_VERSION.txt\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#-------------- date and time ---------------\n\n#once cmake_minimum_required is >= 2.8.11, we can use TIMESTAMP:\n\n#string(TIMESTAMP date_time_string)\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#don't update the file unless something changed\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Local Variables:\n\n# tab-width: 8\n\n# mode: cmake\n\n# indent-tabs-mode: t\n\n# End:\n\n# ex: shiftwidth=2 tabstop=8\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/schema_scanner/CMakeLists.txt" : {
      "ObjectId" : "13bbb24ddb19e879b3622417c5e869515f460f78",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# SC_ROOT: SC root dir\n\n# SC_BUILDDIR: SC build dir, so generated headers can be found\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set all target location variables so that MSVC will put the executable the same place as other compilers\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Disable warning for preferred usage of secure functions (example strcpy should be strcpy_s, ...)\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Local Variables:\n\n# tab-width: 8\n\n# mode: cmake\n\n# indent-tabs-mode: t\n\n# End:\n\n# ex: shiftwidth=2 tabstop=8\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/schema_scanner/schemaScanner.cmake" : {
      "ObjectId" : "6b066339be50206c1fc149dc1304fc6fcb87294f",
      "LastModified" : "2016-08-06T15:23:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# this file should be included from data/CMakeLists.txt\n\n#\n\n# at configure time, this builds a small program\n\n# which will parse express schemas to determine\n\n# what files exp2cxx will create for that schema.\n\n#\n\n# The SCHEMA_CMLIST macro is to be used to run this\n\n# program. It will set variables for schema name(s),\n\n# headers, and implementation files.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in a unity build, many small .cc files are #included to create a few large translation units\n\n# this makes compilation faster, but sometimes runs into compiler limitations\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# --- variables ---\n\n# SC_ROOT: SC root dir\n\n# SC_BUILDDIR: SC build dir, so generated headers can be found\n\n# SCANNER_SRC_DIR: dir this file is in\n\n# SCANNER_OUT_DIR: location of binary, same dir as SC uses\n\n# SCANNER_BUILD_DIR: location scanner is built\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#write a cmake file for the cache. the alternative is a very long\n\n# command line - and the command line can't have newlines in it\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# should take far less than 2m\n",
        "Line" : 66,
        "CharPositionInLine" : 29
      },
      "5" : {
        "Text" : "# not sure if it makes sense to install this or not...\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# macro SCHEMA_CMLIST\n\n# runs the schema scanner on one express file, creating a CMakeLists.txt file for each schema found. Those files are added via add_subdirectory().\n\n#\n\n# SCHEMA_FILE - path to the schema\n\n# TODO should we have a result variable to return schema name(s) found?\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#check size of output, put in file if large?\n",
        "Line" : 97,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# scanner output format: each line contains an absolute path. each path is a dir containing a CMakeLists for one schema\n\n# there will usually be a single line of output, but it is not illegal for multiple schemas to exist in one .exp file\n",
        "Line" : 100,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#specify source and binary dirs as the same\n",
        "Line" : 105,
        "CharPositionInLine" : 38
      },
      "10" : {
        "Text" : "# configure_file forces cmake to run again if the schema has been modified\n\n#if multiple schemas in one file, _schema is the last one printed.\n",
        "Line" : 107,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 11
    },
    "ctest_matrix.cmake" : {
      "ObjectId" : "d2288acb51dacb3b677fcdd4bee7443e6ae0d987",
      "LastModified" : "2016-08-06T15:23:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# run_ctest.cmake\n\n# `ctest -S run_ctest.cmake`\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Local Variables:\n\n# tab-width: 8\n\n# mode: cmake\n\n# indent-tabs-mode: t\n\n# End:\n\n# ex: shiftwidth=2 tabstop=8\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "data/CMakeLists.txt" : {
      "ObjectId" : "4e99f0b70d87a7e2407702641240e3ed786866fa",
      "LastModified" : "2016-08-06T15:23:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# To build one or more schemas, configure with\n\n# 'cmake -DSC_BUILD_SCHEMAS=\"path/to/schema.exp;path/to/schema2.exp\"\n\n# you can specify a schema in 3 ways:\n\n#  * path relative to build dir\n\n#  * path relative to sc/data (this dir)\n\n#  * absolute path\n\n#\n\n# cmake goes through the above options in order until it finds one\n\n# that exists. if ${path} is a dir, cmake expects to find a single\n\n# .exp file inside, which it uses. otherwise, ${path} is assumed to\n\n# be an express file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# figure out an absolute path to the file\n",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Local Variables:\n\n# tab-width: 8\n\n# mode: cmake\n\n# indent-tabs-mode: t\n\n# End:\n\n# ex: shiftwidth=2 tabstop=8\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "doc/CMakeLists.txt" : {
      "ObjectId" : "30ba3e5bd8e039e1f105d295268e6c133c5c6fd1",
      "LastModified" : "2016-08-06T15:23:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Local Variables:\n\n# tab-width: 8\n\n# mode: cmake\n\n# indent-tabs-mode: t\n\n# End:\n\n# ex: shiftwidth=2 tabstop=8\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "example/ap203min/CMakeLists.txt" : {
      "ObjectId" : "3765fa48a762dc0d8cbcbba009bb0fcb57327403",
      "LastModified" : "2016-08-06T15:23:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# CMakeLists.txt for AP203 Minimum\n\n#\n\n#  This file is released to the public domain.  Any part of this file may be\n\n# freely copied in part or in full for any purpose.  No acknowledgment is required\n\n# for the use of this file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set STEPCODE_ROOT_DIR to point to the root of the STEPcode source tree.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# STEPCODE_ROOT_DIR is relative or absolute path?\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Use STEPcode as library, but build from this build process.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Build type, DEBUG or RELEASE\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Path to STEPcode\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# STEP schema to build and link against.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Parse out schema name and library.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add STEPCode project to CMake build.\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Set up STEPcode include directories.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Reset sane values for build destination.  Otherwise, everything ends up in ${CMAKE_BINARY_DIR}/sc\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Application sources and headers\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Local Variables:\n\n# tab-width: 8\n\n# mode: cmake\n\n# indent-tabs-mode: t\n\n# End:\n\n# ex: shiftwidth=2 tabstop=8\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "example/ap203min/ExternalProjectBuild/CMakeLists.txt" : {
      "ObjectId" : "c73d648a20e2aee6ec1ea8b2f2d08da7575f6ffe",
      "LastModified" : "2016-08-06T15:23:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# CMakeLists.txt for AP203 Minimum\n\n#\n\n#  This file is released to the public domain.  Any part of this file may be\n\n# freely copied in part or in full for any purpose.  No acknowledgment is required\n\n# for the use of this file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#####\n\n# Variables ideally set by FindSTEPCode.cmake\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# End of variables ideally set by FindSTEPCode.cmake\n\n######\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Local Variables:\n\n# tab-width: 8\n\n# mode: cmake\n\n# indent-tabs-mode: t\n\n# End:\n\n# ex: shiftwidth=2 tabstop=8",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "example/ap203min/ExternalProjectBuild/cmake/External_STEPCode.cmake" : {
      "ObjectId" : "62df14322180260d6ad44fa0e6f0c63fbbf92d3c",
      "LastModified" : "2016-08-06T15:23:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# SC CMake does not honor -DCMAKE_INSTALL_PREFIX:PATH=<INSTALL_DIR>\n\n# Consequently, force Debug so it installs in ../sc-install directory\n\n# instead of /usr/local/lib.\n\n#\n\n# SC's own programs fail to build with -DSC_BUILD_SHARED_LIBS=OFF",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "include/CMakeLists.txt" : {
      "ObjectId" : "566c3780dc2c7800c7f516e110db909470b36aec",
      "LastModified" : "2016-08-06T15:23:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Local Variables:\n\n# tab-width: 8\n\n# mode: cmake\n\n# indent-tabs-mode: t\n\n# End:\n\n# ex: shiftwidth=2 tabstop=8\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lcov.cmake" : {
      "ObjectId" : "4ca1388db4dc19fbb616cb30da5b0b64ebfab6fc",
      "LastModified" : "2016-08-06T15:23:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# lcov.cmake\n\n# `ctest -S lcov.cmake`\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# copy files so lcov won't complain\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Local Variables:\n\n# tab-width: 8\n\n# mode: cmake\n\n# indent-tabs-mode: t\n\n# End:\n\n# ex: shiftwidth=2 tabstop=8\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "run_ctest.cmake" : {
      "ObjectId" : "096cfb1c58765dcc4715939ab94863135cc3eb6d",
      "LastModified" : "2016-08-06T15:23:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# run_ctest.cmake\n\n# `ctest -S run_ctest.cmake`\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "######################################################\n\n######################################################\n\n# use config variables such as these in\n\n#   ../.SC_CTEST_PREFS.cmake\n\n#\n\n#set(CTEST_SITE \"username\")\n\n#set(CTEST_BUILD_NAME \"build type, os, arch\")\n\n#\n\n#\n\n# setting any of these to true causes that set of tests\n\n# to be skipped (unless another test depends on that test)\n\n# SKIP_CPP_TEST_SCHEMA_GEN\n\n# SKIP_CPP_TEST_SCHEMA_BUILD\n\n# SKIP_CPP_TEST_SCHEMA_RW\n\n# SKIP_TEST_UNITARY_SCHEMAS\n\n# SKIP_TEST_EXCHANGE_FILE\n\n#\n\n# setting this one disables result submission to my.cdash.org\n\n# SKIP_SUBMISSION\n\n######################################################\n\n######################################################\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "######################################################\n\n##### To disable reporting of a set of tests, comment\n\n##### out the SUBMIT_TEST line immediately following\n\n##### the set you wish to disable.\n\n#####\n\n##### To do this for all tests:\n\n##### set(SKIP_SUBMISSION TRUE)\n\n######################################################\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ctest_memcheck(BUILD \"${CTEST_BINARY_DIRECTORY}\" RETURN_VALUE res)\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ctest_coverage()\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Local Variables:\n\n# tab-width: 8\n\n# mode: cmake\n\n# indent-tabs-mode: t\n\n# End:\n\n# ex: shiftwidth=2 tabstop=8\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/base/CMakeLists.txt" : {
      "ObjectId" : "6f391e7c26355a0990b2b500815da29eaa0de10e",
      "LastModified" : "2016-08-06T15:23:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Local Variables:\n\n# tab-width: 8\n\n# mode: cmake\n\n# indent-tabs-mode: t\n\n# End:\n\n# ex: shiftwidth=2 tabstop=8\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/base/judy/CMakeLists.txt" : {
      "ObjectId" : "4ba30087cd63a5a5af1b67bd29da4f3dc7a9973c",
      "LastModified" : "2016-08-06T15:23:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set( CMAKE_BUILD_TYPE \"RelWithDebInfo\" ) #optimize, but include debug info\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#test for LTO; this uses an internal variable so it may break\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#elseif( MSVC )\n\n#  set( JUDY_OPTIMIZE_FLAGS \"...\" ) # <--- set MSVC flags here <---\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Local Variables:\n\n# tab-width: 8\n\n# mode: cmake\n\n# indent-tabs-mode: t\n\n# End:\n\n# ex: shiftwidth=2 tabstop=8\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/cldai/CMakeLists.txt" : {
      "ObjectId" : "4630296a36e90c07e8af34f9345274a3cfbe013a",
      "LastModified" : "2016-08-06T15:23:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Local Variables:\n\n# tab-width: 8\n\n# mode: cmake\n\n# indent-tabs-mode: t\n\n# End:\n\n# ex: shiftwidth=2 tabstop=8\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/cleditor/CMakeLists.txt" : {
      "ObjectId" : "dafbfd6af362f1140907cb9db8a5dd28ac05f143",
      "LastModified" : "2016-08-06T15:23:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Local Variables:\n\n# tab-width: 8\n\n# mode: cmake\n\n# indent-tabs-mode: t\n\n# End:\n\n# ex: shiftwidth=2 tabstop=8\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/cllazyfile/CMakeLists.txt" : {
      "ObjectId" : "1ff85d6e830f91785b35c05fb50a32a159c9023a",
      "LastModified" : "2016-08-06T15:43:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Local Variables:\n\n# tab-width: 8\n\n# mode: cmake\n\n# indent-tabs-mode: t\n\n# End:\n\n# ex: shiftwidth=2 tabstop=8\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/clstepcore/CMakeLists.txt" : {
      "ObjectId" : "c182579864a4ce974446c88416f60a65bfe6d940",
      "LastModified" : "2016-08-06T15:23:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Local Variables:\n\n# tab-width: 8\n\n# mode: cmake\n\n# indent-tabs-mode: t\n\n# End:\n\n# ex: shiftwidth=2 tabstop=8\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/clstepcore/test/CMakeLists.txt" : {
      "ObjectId" : "3ed91a9f25e5eb922334bd15cbe293f12f9f3c53",
      "LastModified" : "2016-08-06T15:23:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#c++ tests for clstepcore\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#all these libs are necessary?\n",
        "Line" : 24,
        "CharPositionInLine" : 85
      },
      "2" : {
        "Text" : "# Local Variables:\n\n# tab-width: 8\n\n# mode: cmake\n\n# indent-tabs-mode: t\n\n# End:\n\n# ex: shiftwidth=2 tabstop=8\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/clutils/CMakeLists.txt" : {
      "ObjectId" : "22506bf00f550a990ad1d34e8f53e3509320f412",
      "LastModified" : "2016-08-06T15:23:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Local Variables:\n\n# tab-width: 8\n\n# mode: cmake\n\n# indent-tabs-mode: t\n\n# End:\n\n# ex: shiftwidth=2 tabstop=8\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/exp2cxx/CMakeLists.txt" : {
      "ObjectId" : "c50e66734fe0be616698b3fc4f693d787f98d1ef",
      "LastModified" : "2016-08-06T17:53:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Local Variables:\n\n# tab-width: 8\n\n# mode: cmake\n\n# indent-tabs-mode: t\n\n# End:\n\n# ex: shiftwidth=2 tabstop=8\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/exp2cxx/test/CMakeLists.txt" : {
      "ObjectId" : "51053757dacdc7f81bd2643890b9478c0304f811",
      "LastModified" : "2016-08-06T15:23:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#tests specific to exp2cxx\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Local Variables:\n\n# tab-width: 8\n\n# mode: cmake\n\n# indent-tabs-mode: t\n\n# End:\n\n# ex: shiftwidth=2 tabstop=8\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/exp2cxx/test/inverse_qualifiers.cmake" : {
      "ObjectId" : "dec2fe81f60732714088a9851b9224e25341d895",
      "LastModified" : "2016-08-06T15:23:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# executable is ${EXE}, input file is ${INFILE}\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#9051 bytes now\n",
        "Line" : 12,
        "CharPositionInLine" : 38
      },
      "2" : {
        "Text" : "# new Inverse_attribute(\"product_occurrence.occurrence_contexts\"\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Local Variables:\n\n# tab-width: 8\n\n# mode: cmake\n\n# indent-tabs-mode: t\n\n# End:\n\n# ex: shiftwidth=2 tabstop=8\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/exp2cxx/test/unique_qualifiers.cmake" : {
      "ObjectId" : "b4b41f5dfd461aa3dfcab939438de73f50059a54",
      "LastModified" : "2016-08-06T15:23:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# executable is ${EXE}, input file is ${INFILE}\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set( ofile \"SdaiAll.cc\" )\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ur = new Uniqueness_rule(\"UR1 : SELF\\shape_aspect_relationship.name;\\n\");\n\n#entity/SdaiConnection_zone_interface_plane_relationship.cc:57:    str.append( \"SELF\\\\shape_aspect_relationship.name\\n\" );\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# string( REGEX MATCH \"new  *Uniqueness_rule *\\\\\\( *\\\\\\\" *[uU][rR]1 *: *SELF *\\\\\\\\ *shape_aspect_relationship *\\\\. *name\" match_result ${cxx} )\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Local Variables:\n\n# tab-width: 8\n\n# mode: cmake\n\n# indent-tabs-mode: t\n\n# End:\n\n# ex: shiftwidth=2 tabstop=8\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/exp2python/CMakeLists.txt" : {
      "ObjectId" : "ae4ac96861bacde4eb03acee052491e93ef90925",
      "LastModified" : "2016-08-06T17:53:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Local Variables:\n\n# tab-width: 8\n\n# mode: cmake\n\n# indent-tabs-mode: t\n\n# End:\n\n# ex: shiftwidth=2 tabstop=8\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/exppp/CMakeLists.txt" : {
      "ObjectId" : "b528213252bbf9a112bcb800e3920a9415a862ec",
      "LastModified" : "2016-08-06T15:23:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Local Variables:\n\n# tab-width: 8\n\n# mode: cmake\n\n# indent-tabs-mode: t\n\n# End:\n\n# ex: shiftwidth=2 tabstop=8\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/exppp/test/CMakeLists.txt" : {
      "ObjectId" : "f99c932afb09f1cd34b20117b5d65a517a1de2bd",
      "LastModified" : "2016-08-06T15:23:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# this executable doesn't really check the results, just ensures no segfaults. ought to improve it...\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#could run test schemas through exppp, then check line length...\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ---- syntax tests ----\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Local Variables:\n\n# tab-width: 8\n\n# mode: cmake\n\n# indent-tabs-mode: t\n\n# End:\n\n# ex: shiftwidth=2 tabstop=8\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/exppp/test/exppp_div_slash.cmake" : {
      "ObjectId" : "3c81b6860e40142bfaefe7d13aca97bfab52ddb9",
      "LastModified" : "2016-08-06T15:23:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# executable is ${EXPPP}, input file is ${INFILE}\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# file( READ ${INFILE} pretty_in LIMIT 1024 )\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#        VAR rmax_in : BOOLEAN\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#    r : REAL (should not have VAR)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/exppp/test/exppp_lost_var.cmake" : {
      "ObjectId" : "d564d7f1b2b5cf990c13d87c0d100ecc1d720a98",
      "LastModified" : "2016-08-06T15:23:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# executable is ${EXPPP}, input file is ${INFILE}\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# file( READ ${INFILE} pretty_in LIMIT 1024 )\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#        VAR rmax_in : BOOLEAN\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#    r : REAL (should not have VAR)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/exppp/test/exppp_supertype_andor.cmake" : {
      "ObjectId" : "547ad70a52fed477c621e4616987ea1ec58e1bf8",
      "LastModified" : "2016-08-06T15:23:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# executable is ${EXPPP}, input file is ${INFILE}\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# file( READ ${INFILE} pretty_in LIMIT 1024 )\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# need to be 3 parens after path\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Local Variables:\n\n# tab-width: 8\n\n# mode: cmake\n\n# indent-tabs-mode: t\n\n# End:\n\n# ex: shiftwidth=2 tabstop=8\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/exppp/test/inverse_qualifiers.cmake" : {
      "ObjectId" : "ab64af9c0bd9be6a4183f9edcde079e9f8af6ed4",
      "LastModified" : "2017-12-27T02:23:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# executable is ${EXPPP}, input file is ${INFILE}\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# file( READ ${INFILE} pretty_in LIMIT 1024 )\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#  SELF\\product_occurrence.occurrence_contexts : SET [1 : ?] OF assembly_component_relationship FOR related_view;\n\n# one backslash balloons into 4 x(\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Local Variables:\n\n# tab-width: 8\n\n# mode: cmake\n\n# indent-tabs-mode: t\n\n# End:\n\n# ex: shiftwidth=2 tabstop=8\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/exppp/test/unique_qualifiers.cmake" : {
      "ObjectId" : "b2c7878629b553077be8231d9d0b87eca06a7083",
      "LastModified" : "2017-12-27T02:23:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# executable is ${EXPPP}, input file is ${INFILE}\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# file( READ ${INFILE} pretty_in LIMIT 1024 )\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#      ur1 : SELF\\shape_aspect_relationship.name;\n\n# one backslash balloons into 4, and I can't figure out how to escape the semicolon x(\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Local Variables:\n\n# tab-width: 8\n\n# mode: cmake\n\n# indent-tabs-mode: t\n\n# End:\n\n# ex: shiftwidth=2 tabstop=8\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/express/CMakeLists.txt" : {
      "ObjectId" : "a63f2aa936dd442c5fd51050eac09cb820d1e082",
      "LastModified" : "2017-12-27T02:23:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set up the information we need to feed the generated source management\n\n# scripts\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Convenience target to generate an updated verification_info.cmake file\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Target for actually checking cached MD5 sums against files\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Depending on whether we're using pre-generated sources or building them on\n\n# the fly, set up targets and source lists.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# TODO\n\n# Currently, fedex.c provides the main() for multiple programs. These programs\n\n# provide custom behavior by defining EXPRESSinit_init (called by fedex.c's\n\n# main) which sets other callbacks.\n\n#\n\n# What would be better is to remove the call to EXPRESSinit_init and turn\n\n# fedex.c's main() into an express library function. That way, programs only\n\n# need to link against express (not fedex.o too) and they can do initialization\n\n# in their own main (instead of in a local EXPRESSinit_init definition).\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Local Variables:\n\n# tab-width: 8\n\n# mode: cmake\n\n# indent-tabs-mode: t\n\n# End:\n\n# ex: shiftwidth=2 tabstop=8\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/express/generated/verification_info.cmake" : {
      "ObjectId" : "078ca43d5579d55a5f85fccd053a0b945baf4fd9",
      "LastModified" : "2016-08-06T15:23:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Autogenerated verification information\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/express/test/CMakeLists.txt" : {
      "ObjectId" : "2c932d3cfc959aa37cbf40ec06c63ce625f2c515",
      "LastModified" : "2016-08-06T15:23:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Local Variables:\n\n# tab-width: 8\n\n# mode: cmake\n\n# indent-tabs-mode: t\n\n# End:\n\n# ex: shiftwidth=2 tabstop=8\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "05530cb5bac4b0c7bce4dd457451534ede9f66b1",
      "LastModified" : "2016-08-06T15:23:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Adding unittest for unitary schemas\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#if the file name begins with fail_, then testing it should result in an error.\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Local Variables:\n\n# tab-width: 8\n\n# mode: cmake\n\n# indent-tabs-mode: t\n\n# End:\n\n# ex: shiftwidth=2 tabstop=8\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "test/cpp/CMakeLists.txt" : {
      "ObjectId" : "cccf68811b2073b67aee96833b8ad89dec4d4e6a",
      "LastModified" : "2016-08-06T15:23:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#c++ tests\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Local Variables:\n\n# tab-width: 8\n\n# mode: cmake\n\n# indent-tabs-mode: t\n\n# End:\n\n# ex: shiftwidth=2 tabstop=8\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "test/cpp/schema_specific/CMakeLists.txt" : {
      "ObjectId" : "51d9c3172311d61fc3b23549d9514f2d42949e52",
      "LastModified" : "2016-08-06T15:23:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#c++ tests that depend on a particular schema\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# helper function for add_schema_dependent_test\n\n# given an sdai target, set out_path_var to the include dir\n\n# added as a workaround for changed behavior in newer cmake\n\n# versions (changes somewhere between 2.8 and 3.1)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ${name} is used for the C++ file name (${name}.cc), and as the suffix for the target and test names\n\n# ${sdai_lib} is the name of the schema lib that is used\n\n# ${exe_args} are additional args for the test executable\n\n# three optional args: ARGV3, ARGV4, ARGV5 are include paths, compile flags, and libs, respectively.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# INCLUDE_DIRECTORIES property added in cmake 2.8.8\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#if you need a schema that won't be built automatically (i.e. not in sc/data), put it in here\n\n#temporarily disabling testing ensures that the schema will be built before these tests run\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#can't use the macro for this one because it depends on the test above and needs WILL_FAIL\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# for best results, use a large file. as1-oc-214.stp is currently the largest file in the repo that sc works with.\n",
        "Line" : 102,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Local Variables:\n\n# tab-width: 8\n\n# mode: cmake\n\n# indent-tabs-mode: t\n\n# End:\n\n# ex: shiftwidth=2 tabstop=8\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "test/p21/CMakeLists.txt" : {
      "ObjectId" : "b16bdd7b3d6956225a6e5a0bbed2019bad5a9b2c",
      "LastModified" : "2016-08-06T15:23:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#test part 21 files\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#necessary macros won't already be defined if SC_BUILD_SCHEMAS is set to \"\"\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#used to create a number of small files at test-time. you probably don't want to modify.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# used in INSTANCE_TEST\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#MACRO INSTANCE_TEST - create a file with one or more instances and test with p21read\n\n#sname is the schema name\n\n#instance is a p21 instance, without the number\n\n#test_mode is PASS or FAIL - whether the test should pass or fail. affects the WILL_FAIL property\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# test schema names\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#compare the schema name in a p21 file with than in the sdai lib\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#these test for required attrs that are missing\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#test acceptance of comments within p21 entity, i.e. FILE_NAME(/* name */ 'ferrari sharknose', ...);\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#not sure how multiple schema names should be handled for testing, by p21read, or by the schema and stepeditor libs\n\n#add_test(multi_schema)\n\n#rotator_asm:\n\n# FILE_SCHEMA(('CONFIG_CONTROL_DESIGN', 'GEOMETRIC_VALIDATION_PROPERTIES_MIM','SHAPE_APPEARANCE_LAYER_MIM'));\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#check for a segmentation fault with selects. the files are a subset of the 210e3 schema and of SurfaceMountFlasher.stp, respectively\n\n#p21read will report errors with the file, but they don't matter as long as there isn't a segfault.\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#schema for multiple inheritance where two attrs with same name are inherited; one is derived\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#p21read reports no errors on this one; I'm not certain whether that is right or wrong.\n\n#INSTANCE_TEST(${mid} FAIL \"AABB(4,.BEE.,4.5);\"               )\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Local Variables:\n\n# tab-width: 8\n\n# mode: cmake\n\n# indent-tabs-mode: t\n\n# End:\n\n# ex: shiftwidth=2 tabstop=8\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    }
  },
  "FileTypes" : {
    "CMAKE" : 54
  },
  "ElapsedTime" : 2193
}