{
  "Repository" : "56304494",
  "Revision" : "HEAD",
  "ObjectId" : "4e3c5e88eb13f0919b63e9e1310deddeddd61183",
  "CommitTime" : "2019-04-14T15:35:48Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "947ccb34d6feffade6d537a23660ea073d632df8",
      "LastModified" : "2019-04-01T02:22:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# slang - cmake entry point\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Default build type if none is set\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Defaults for a bunch of Windows-specific junk\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Always require C++17 or later, no extensions\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Prefer the latest standard, and enable full conformance\n",
        "Line" : 38,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Function-level linking\n",
        "Line" : 42,
        "CharPositionInLine" : 27
      },
      "6" : {
        "Text" : "# Ignore warnings in external headers\n",
        "Line" : 44,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# Use fast linking\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Disable buffer overrun checks\n",
        "Line" : 52,
        "CharPositionInLine" : 28
      },
      "9" : {
        "Text" : "# Whole program optimization\n\n# Generate debug info even in release\n",
        "Line" : 53,
        "CharPositionInLine" : 27
      },
      "10" : {
        "Text" : "# Always include debug info\n",
        "Line" : 92,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# Color in diagnostics please\n",
        "Line" : 95,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# Only MSBuild needs this, other generators will compile one file at a time\n",
        "Line" : 128,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# Install dependencies via conan\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "cmake/conan.cmake" : {
      "ObjectId" : "bcda55fa73660fad07c5bd6e6b6c4a14b0601aad",
      "LastModified" : "2019-04-06T15:15:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2018 JFrog\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# This file comes from: https://github.com/conan-io/cmake-conan. Please refer\n\n# to this repository for issues and documentation.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Its purpose is to wrap and launch Conan C/C++ Package Manager when cmake is called.\n\n# It will take CMake current settings (os, compiler, compiler version, architecture)\n\n# and translate them to conan settings for installing and retrieving dependencies.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# It is intended to facilitate developers building projects that have conan dependencies,\n\n# but it is only necessary on the end-user side. It is not necessary to create conan\n\n# packages, in fact it shouldn't be use for that. Check the project documentation.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#message(STATUS \"COMPILER \" ${CMAKE_CXX_COMPILER})\n\n#message(STATUS \"COMPILER \" ${CMAKE_CXX_COMPILER_ID})\n\n#message(STATUS \"VERSION \" ${CMAKE_CXX_COMPILER_VERSION})\n\n#message(STATUS \"FLAGS \" ${CMAKE_LANG_FLAGS})\n\n#message(STATUS \"LIB ARCH \" ${CMAKE_CXX_LIBRARY_ARCHITECTURE})\n\n#message(STATUS \"BUILD TYPE \" ${CMAKE_BUILD_TYPE})\n\n#message(STATUS \"GENERATOR \" ${CMAKE_GENERATOR})\n\n#message(STATUS \"GENERATOR WIN64 \" ${CMAKE_CL_64})\n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#handle -s os setting\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "#use default conan os setting if CMAKE_SYSTEM_NAME is not defined\n",
        "Line" : 88,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "#check if the cmake system is a conan supported one\n",
        "Line" : 96,
        "CharPositionInLine" : 12
      },
      "12" : {
        "Text" : "# using GCC\n\n# TODO: Handle other params\n",
        "Line" : 115,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# using AppleClang\n",
        "Line" : 131,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# If profile is defined it is used\n",
        "Line" : 197,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Automatic from CMake\n",
        "Line" : 219,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Take into account any -stdlib in compile options\n",
        "Line" : 239,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Take into account any _GLIBCXX_USE_CXX11_ABI in compile definitions\n",
        "Line" : 242,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Allow -D_GLIBCXX_USE_CXX11_ABI=ON/OFF as argument to cmake\n",
        "Line" : 261,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# Either the compiler is missing the define because it is old, and so\n\n# it can't use the new abi, or the compiler was configured to use the\n\n# old abi by the user or distro (e.g. devtoolset on RHEL/CentOS)\n",
        "Line" : 275,
        "CharPositionInLine" : 12
      },
      "20" : {
        "Text" : "# Calls \"conan install\"\n\n# Argument BUILD is equivalant to --build={missing, PkgName,...} or\n\n# --build when argument is 'BUILD all' (which builds all packages from source)\n\n# Argument CONAN_COMMAND, to specify the conan path, e.g. in case of running from source\n\n# cmake does not identify conan as command, even if it is +x and it is in the path\n",
        "Line" : 316,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# A conan file has been specified - apply specified options as well if provided\n",
        "Line" : 346,
        "CharPositionInLine" : 6
      },
      "22" : {
        "Text" : "# configure_file will make sure cmake re-runs when conanfile is updated\n",
        "Line" : 396,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# Generate, writing in disk a conanfile.txt with the requires, options, and imports\n\n# specified as arguments\n\n# This will be considered as temporary file, generated in CMAKE_CURRENT_BINARY_DIR)\n",
        "Line" : 405,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Checks for the existence of conanbuildinfo.cmake, and loads it\n\n# important that it is macro, so variables defined at parent scope\n",
        "Line" : 434,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# Checks conan availability in PATH\n\n# Arguments REQUIRED and VERSION are optional\n\n# Example usage:\n\n#    conan_check(VERSION 1.0.0 REQUIRED)\n",
        "Line" : 488,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# Adds a remote\n\n# Arguments URL and NAME are required, INDEX is optional\n\n# Example usage:\n\n#    conan_add_remote(NAME bincrafters INDEX 1\n\n#       URL https://api.bintray.com/conan/bincrafters/public-conan)\n",
        "Line" : 519,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 27
    },
    "cmake/gitversion.cmake" : {
      "ObjectId" : "4abb44ccedf3c2d67b186097ad91b531b332e4d5",
      "LastModified" : "2019-04-06T15:15:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/CMakeLists.txt" : {
      "ObjectId" : "3c52646cb4ecc960d38cda052c3764f31714a2b4",
      "LastModified" : "2019-04-14T15:35:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Warnings as errors\n",
        "Line" : 85,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Link against C++17 filesystem\n",
        "Line" : 88,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "tests/regression/CMakeLists.txt" : {
      "ObjectId" : "8207077076cabf0739085f5e192e6ffb561884a8",
      "LastModified" : "2019-04-14T12:16:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/unittests/CMakeLists.txt" : {
      "ObjectId" : "f804db27d7fae2fa594d2f9a4c2f741e417a1b4a",
      "LastModified" : "2019-04-06T15:15:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copy the data directory for running tests from the build folder.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/CMakeLists.txt" : {
      "ObjectId" : "1b0c2aedb27a529cc02109c72d99bdca7e8889ce",
      "LastModified" : "2019-04-06T15:15:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 7
  },
  "ElapsedTime" : 1529
}