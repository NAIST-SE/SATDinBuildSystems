{
  "Repository" : "28181924",
  "Revision" : "HEAD",
  "ObjectId" : "ce86a76c83a4eca4978d1ea8b2c27a778638951d",
  "CommitTime" : "2019-02-13T15:22:32Z",
  "Files" : {
    "ProgramData/SystemFiles/Python/Lib/site-packages/PyQt4/mkspecs/modules/qt_webkit_version.pri" : {
      "ObjectId" : "056c2c9d7e4206dcb3ae8670155c486d70eb991c",
      "LastModified" : "2017-01-13T00:21:54Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/Python/Lib/site-packages/PyQt4/mkspecs/qconfig.pri" : {
      "ObjectId" : "ec10e99362c2614f8b95169e03a766425713bc45",
      "LastModified" : "2017-01-13T00:21:54Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#versioning \n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Qt for Windows CE c-runtime deployment\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Qt for Symbian FPU settings\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "ProgramData/SystemFiles/Python/Lib/site-packages/scipy/fftpack/tests/Makefile" : {
      "ObjectId" : "39fdb58e7326669bce6f6fe79d74ed1f6b840b04",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/Python/tcl/tix8.4.3/Makefile" : {
      "ObjectId" : "33800b1f4a5dfec9636848b0012161bb9bcf9b24",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/Python/tcl/tix8.4.3/pref/Makefile" : {
      "ObjectId" : "7c6acc0f157e79e6931a6e8401bfcc18d8667092",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# $Id: Makefile,v 1.2 2000/10/12 01:45:23 idiscovery Exp $\n\n#\n\n# WARNING\n\n#\n\n# This Makefile is NOT for installation purposes. Please read the file\n\n# docs/Install.html for information about installing Tix.\n\n#\n\n#\n\n#\n\n#\n\n#\n\n#\n\n# fs = font scheme source \n\n# cs = color scheme source \n\n#\n\n# fsc = font scheme compiled\n\n# csc = color scheme compiled\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ProgramData/SystemFiles/opencv/sources/3rdparty/ffmpeg/ffmpeg_version.cmake" : {
      "ObjectId" : "48fba2b91380fc139175ccad06d98fe5f6abbfec",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/3rdparty/ippicv/downloader.cmake" : {
      "ObjectId" : "f25e5cc704728fe06bf4d533ff91868297cc854c",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# The script downloads ICV package\n\n#\n\n# On return this will define:\n\n# OPENCV_ICV_PATH - path to unpacked downloaded package\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define actual ICV versions\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Not supported\n",
        "Line" : 29,
        "CharPositionInLine" : 13
      },
      "3" : {
        "Text" : "# Package has been downloaded and checked by the previous build\n",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Don't remove this code, because EXPECTED_MD5 parameter doesn't fail \"file(DOWNLOAD)\" step\n\n# on wrong hash \n",
        "Line" : 77,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 5
    },
    "ProgramData/SystemFiles/opencv/sources/3rdparty/libjasper/CMakeLists.txt" : {
      "ObjectId" : "c1a82261262220d9d4aaa509dc59f03f224fac95",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n#  CMake file for libjasper. See root CMakeLists.txt\n\n#\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------------\n\n#         Define the library target:\n\n# ----------------------------------------------------------------------------------\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# clang\n",
        "Line" : 29,
        "CharPositionInLine" : 55
      },
      "3" : {
        "Text" : "# vs2005\n",
        "Line" : 30,
        "CharPositionInLine" : 84
      },
      "CommentCount" : 4
    },
    "ProgramData/SystemFiles/opencv/sources/3rdparty/libjpeg/CMakeLists.txt" : {
      "ObjectId" : "d79f00adaec336d30d5b6af9995d279ad31d2dda",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n#  CMake file for libjpeg. See root CMakeLists.txt\n\n#\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------------\n\n#         Define the library target:\n\n# ----------------------------------------------------------------------------------\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# clang\n",
        "Line" : 42,
        "CharPositionInLine" : 55
      },
      "3" : {
        "Text" : "# vs2005\n",
        "Line" : 43,
        "CharPositionInLine" : 60
      },
      "CommentCount" : 4
    },
    "ProgramData/SystemFiles/opencv/sources/3rdparty/libpng/CMakeLists.txt" : {
      "ObjectId" : "c5a93ea8b6b1e891a3727d9fe9a1aea00a7c5dba",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n#  CMake file for libpng. See root CMakeLists.txt\n\n#\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------------\n\n#         Define the library target:\n\n# ----------------------------------------------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "ProgramData/SystemFiles/opencv/sources/3rdparty/libtiff/CMakeLists.txt" : {
      "ObjectId" : "b7739e0e4e380d181c64c1ecd113c25341db561c",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n#  CMake file for libtiff. See root CMakeLists.txt\n\n#\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# clang\n",
        "Line" : 90,
        "CharPositionInLine" : 55
      },
      "2" : {
        "Text" : "# vs2005\n",
        "Line" : 92,
        "CharPositionInLine" : 86
      },
      "3" : {
        "Text" : "# vs2008\n",
        "Line" : 93,
        "CharPositionInLine" : 46
      },
      "4" : {
        "Text" : "# vs2008 Win64\n",
        "Line" : 94,
        "CharPositionInLine" : 62
      },
      "5" : {
        "Text" : "# vs2012\n",
        "Line" : 95,
        "CharPositionInLine" : 46
      },
      "CommentCount" : 6
    },
    "ProgramData/SystemFiles/opencv/sources/3rdparty/libwebp/CMakeLists.txt" : {
      "ObjectId" : "74519ec820816416eac9f6cefca3589026f3fa13",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n#  CMake file for libwebp. See root CMakeLists.txt\n\n#\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------------\n\n#         Define the library target:\n\n# ----------------------------------------------------------------------------------\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# vs2005\n",
        "Line" : 44,
        "CharPositionInLine" : 52
      },
      "CommentCount" : 3
    },
    "ProgramData/SystemFiles/opencv/sources/3rdparty/openexr/CMakeLists.txt" : {
      "ObjectId" : "e15bc5270e9a3ed81e4473dda025ec7295ed6baf",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n#  CMake file for openexr\n\n#\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# vs2005\n",
        "Line" : 43,
        "CharPositionInLine" : 150
      },
      "2" : {
        "Text" : "# vs2005 Win64\n\n# vs2008\n\n# vs2008 Win64\n",
        "Line" : 44,
        "CharPositionInLine" : 46
      },
      "CommentCount" : 3
    },
    "ProgramData/SystemFiles/opencv/sources/3rdparty/tbb/CMakeLists.txt" : {
      "ObjectId" : "06de2498105ff3fd877b67c69bc6923d4005caac",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Cross compile TBB from source\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# 4.1 update 4 - The first release that supports Windows RT. Hangs on some Android devices\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# 4.1 update 2 - works fine\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# 4.1 update 3 dev - Hangs on some Android devices\n\n#set(tbb_ver \"tbb41_20130401oss\")\n\n#set(tbb_url \"http://threadingbuildingblocks.org/sites/default/files/software_releases/source/tbb41_20130401oss_src.tgz\")\n\n#set(tbb_md5 \"f2f591a0d2ca8f801e221ce7d9ea84bb\")\n\n#set(tbb_version_file \"version_string.ver\")\n\n#ocv_warnings_disable(CMAKE_CXX_FLAGS -Wshadow)\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# 4.1 update 2 - works fine\n\n#set(tbb_ver \"tbb41_20130116oss\")\n\n#set(tbb_url \"http://threadingbuildingblocks.org/sites/default/files/software_releases/source/tbb41_20130116oss_src.tgz\")\n\n#set(tbb_md5 \"3809790e1001a1b32d59c9fee590ee85\")\n\n#set(tbb_version_file \"version_string.ver\")\n\n#ocv_warnings_disable(CMAKE_CXX_FLAGS -Wshadow)\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# 4.1 update 1 - works fine\n\n#set(tbb_ver \"tbb41_20121003oss\")\n\n#set(tbb_url \"http://threadingbuildingblocks.org/sites/default/files/software_releases/source/tbb41_20121003oss_src.tgz\")\n\n#set(tbb_md5 \"2a684fefb855d2d0318d1ef09afa75ff\")\n\n#set(tbb_version_file \"version_string.ver\")\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# 4.1 - works fine\n\n#set(tbb_ver \"tbb41_20120718oss\")\n\n#set(tbb_url \"http://threadingbuildingblocks.org/sites/default/files/software_releases/source/tbb41_20120718oss_src.tgz\")\n\n#set(tbb_md5 \"31b9ec300f3d09da2504d5d882788dd4\")\n\n#set(tbb_version_file \"version_string.ver\")\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# 4.0 update 5 - works fine\n\n#set(tbb_ver \"tbb40_20120613oss\")\n\n#set(tbb_url \"http://threadingbuildingblocks.org/sites/default/files/software_releases/source/tbb40_20120613oss_src.tgz\")\n\n#set(tbb_md5 \"da01ed74944ec5950cfae3476901a172\")\n\n#set(tbb_version_file \"version_string.ver\")\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# 4.0 update 4 - works fine\n\n#set(tbb_ver \"tbb40_20120408oss\")\n\n#set(tbb_url \"http://threadingbuildingblocks.org/sites/default/files/software_releases/source/tbb40_20120408oss_src.tgz\")\n\n#set(tbb_md5 \"734b356da7fe0ed308741f3e6018251e\")\n\n#set(tbb_version_file \"version_string.ver\")\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# 4.0 update 3 - build broken\n\n#set(tbb_ver \"tbb40_20120201oss\")\n\n#set(tbb_url \"http://threadingbuildingblocks.org/sites/default/files/software_releases/source/tbb40_20120201oss_src.tgz\")\n\n#set(tbb_md5 \"4669e7d4adee018de7a7b8b972987218\")\n\n#set(tbb_version_file \"version_string.tmp\")\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# 4.0 update 2 - works fine\n\n#set(tbb_ver \"tbb40_20111130oss\")\n\n#set(tbb_url \"http://threadingbuildingblocks.org/sites/default/files/software_releases/source/tbb40_20111130oss_src.tgz\")\n\n#set(tbb_md5 \"1e6926b21e865e79772119cd44fc3ad8\")\n\n#set(tbb_version_file \"version_string.tmp\")\n\n#set(tbb_need_GENERIC_DWORD_LOAD_STORE TRUE)\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# 4.0 update 1 - works fine\n\n#set(tbb_ver \"tbb40_20111003oss\")\n\n#set(tbb_url \"http://threadingbuildingblocks.org/sites/default/files/software_releases/source/tbb40_20111003oss_src.tgz\")\n\n#set(tbb_md5 \"7b5d94eb35a563b29ef402e0fd8f15c9\")\n\n#set(tbb_version_file \"version_string.tmp\")\n\n#set(tbb_need_GENERIC_DWORD_LOAD_STORE TRUE)\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# untar TBB sources\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# defines were copied from windows.cl.inc\n",
        "Line" : 145,
        "CharPositionInLine" : 17
      },
      "14" : {
        "Text" : "#required\n\n#required\n\n#no cilk support\n\n#just to be sure\n\n#don't need backward compatibility\n\n#it seems that we don't need these notifications\n",
        "Line" : 155,
        "CharPositionInLine" : 57
      },
      "15" : {
        "Text" : "#required for Unix\n",
        "Line" : 165,
        "CharPositionInLine" : 33
      },
      "16" : {
        "Text" : "#required for ARM GCC\n",
        "Line" : 169,
        "CharPositionInLine" : 44
      },
      "17" : {
        "Text" : "#needed by TBB 4.0 update 1,2; fixed in TBB 4.0 update 3 but it has 2 new problems\n",
        "Line" : 178,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# to fit pragmas in _windef.h inside TBB\n",
        "Line" : 218,
        "CharPositionInLine" : 34
      },
      "19" : {
        "Text" : "# get TBB version\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "ProgramData/SystemFiles/opencv/sources/3rdparty/zlib/CMakeLists.txt" : {
      "ObjectId" : "853571ef4cfe9c211a288291614c6c414b982ad0",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n#  CMake file for zlib. See root CMakeLists.txt\n\n#\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Check for fseeko\n\n#\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Check for unistd.h\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Check to see if we have large file support\n\n#\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "ProgramData/SystemFiles/opencv/sources/CMakeLists.txt" : {
      "ObjectId" : "d9a17b3820342490a92f7bb7d08da88b96d8d246",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n#  Root CMake file for OpenCV\n\n#\n\n#    From the off-tree build directory, invoke:\n\n#      $ cmake <PATH_TO_OPENCV_ROOT>\n\n#\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Required to resolve linker error issues due to incompatibility with CMake v3.0+ policies.\n\n#CMake fails to find _fseeko() which leads to subsequent linker error.\n\n#See details here: http://www.cmake.org/Wiki/CMake/Policies\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Following block can broke build in case of cross-compilng\n\n# but CMAKE_CROSSCOMPILING variable will be set only on project(OpenCV) command\n\n# so we will try to detect crosscompiling by presense of CMAKE_TOOLCHAIN_FILE\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# it _must_ go before project(OpenCV) in order to work\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#Android: set output folder to ${CMAKE_BINARY_DIR}\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# any crosscompiling\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Making definitions available to other configurations and\n\n# to filter dependency restrictions at compile time.\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# silence cmake 3.0+ warnings about reading LOCATION attribute\n",
        "Line" : 73,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# silence cmake 3.0+ warnings about MACOSX_RPATH\n",
        "Line" : 78,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# must go before the project command\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Break in case of popular CMake configuration mistakes\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Detect compiler and target platform architecture\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Add these standard paths to the search paths for FIND_LIBRARY\n\n# to find libraries from these locations first\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Add these standard paths to the search paths for FIND_PATH\n\n# to find include files from these locations first\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# OpenCV cmake options\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Optional 3rd party components\n\n# ===================================================\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# experimental\n",
        "Line" : 202,
        "CharPositionInLine" : 84
      },
      "17" : {
        "Text" : "# OpenCV build components\n\n# ===================================================\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# 3rd party libs\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# OpenCV installation options\n\n# ===================================================\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# OpenCV build options\n\n# ===================================================\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n#  Get actual OpenCV version number from sources\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n#  Build & install layouts\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 284,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Save libs and executables in the same place\n",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Postfix of DLLs:\n",
        "Line" : 405,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Postfix of so's:\n",
        "Line" : 409,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n#  Path for build/platform -specific headers\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 422,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n#  Path for additional modules\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 428,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n#  Autodetect if we are in a GIT repository\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 433,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# We don't have git:\n",
        "Line" : 450,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# OpenCV compiler and linker options\n\n# ----------------------------------------------------------------------------\n\n# In case of Makefiles if the user does not setup CMAKE_BUILD_TYPE, assume it's Release:\n",
        "Line" : 455,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Use statically or dynamically linked CRT?\n\n# Default: dynamic\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 466,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n#       CHECK FOR SYSTEM LIBRARIES, OPTIONS, ETC..\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 479,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# no need to link to system libs with emscripten\n",
        "Line" : 494,
        "CharPositionInLine" : 6
      },
      "34" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n#  Detect endianness of build platform\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 506,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# test_big_endian needs try_compile, which doesn't work for iOS\n\n# http://public.kitware.com/Bug/view.php?id=12288\n",
        "Line" : 511,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n#  Detect 3rd-party libraries\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 519,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n#  Detect other 3rd-party libraries/tools\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 528,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# --- Doxygen and PlantUML for documentation ---\n",
        "Line" : 532,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# --- Python Support ---\n",
        "Line" : 550,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# --- Java Support ---\n",
        "Line" : 553,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# --- OpenCL ---\n",
        "Line" : 571,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# --- DirectX ---\n",
        "Line" : 576,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# --- Matlab/Octave ---\n",
        "Line" : 581,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Add CUDA libraries (needed for apps/tools, samples)\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 586,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Solution folders:\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 598,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Extra OpenCV targets: uninstall, package_source, perf, etc.\n",
        "Line" : 606,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Process subdirectories\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 610,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# opencv.hpp and legacy headers\n",
        "Line" : 614,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# OpenCV modules\n",
        "Line" : 617,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Generate targets for documentation\n",
        "Line" : 620,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# various data that is used by cv libraries and/or demo applications.\n",
        "Line" : 623,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# extra applications\n",
        "Line" : 626,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# examples\n",
        "Line" : 631,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Finalization: generate configuration-based files\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 640,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# Generate platform-dependent and configuration-dependent headers\n",
        "Line" : 644,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# Generate opencv.pc for pkg-config command\n",
        "Line" : 647,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# Generate OpenCV.mk for ndk-build (Android build tool)\n",
        "Line" : 650,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# Generate OpenCVСonfig.cmake and OpenCVConfig-version.cmake for cmake projects\n",
        "Line" : 653,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# Generate Info.plist for the IOS framework\n",
        "Line" : 656,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# Generate ABI descriptor\n",
        "Line" : 659,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# Generate environment setup file\n",
        "Line" : 662,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# for UNIX it does not make sense as LICENSE and readme will be part of the package automatically\n",
        "Line" : 693,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Summary:\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 705,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# ========================== build platform ==========================\n",
        "Line" : 714,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# ========================== C/C++ options ==========================\n",
        "Line" : 734,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# ========================== Dependencies ============================\n",
        "Line" : 764,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# ========================== OpenCV modules ==========================\n",
        "Line" : 769,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# ========================== Android details ==========================\n",
        "Line" : 796,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# ================== Windows RT features ==================\n",
        "Line" : 815,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# ========================== GUI ==========================\n",
        "Line" : 826,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# ========================== MEDIA IO ==========================\n",
        "Line" : 866,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# ========================== VIDEO IO ==========================\n",
        "Line" : 914,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# ========================== Other third-party libraries ==========================\n",
        "Line" : 1029,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# ========================== python ==========================\n",
        "Line" : 1101,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# ========================== java ==========================\n",
        "Line" : 1131,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# ========================= matlab =========================\n",
        "Line" : 1141,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# ========================== documentation ==========================\n",
        "Line" : 1149,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# ========================== samples and tests ==========================\n",
        "Line" : 1157,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# ========================== auxiliary ==========================\n",
        "Line" : 1164,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Warn in the case of in-source build\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 1174,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# CPack stuff\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 1181,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 82
    },
    "ProgramData/SystemFiles/opencv/sources/apps/CMakeLists.txt" : {
      "ObjectId" : "095c7fc23f65eb0a2ca99c79de9ac223e8290156",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/apps/annotation/CMakeLists.txt" : {
      "ObjectId" : "57b133df12821b4121761d7d21ccdb6c615c6357",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/apps/createsamples/CMakeLists.txt" : {
      "ObjectId" : "24506231e0335cc20b17b4aefaf9d65b2e5550c5",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/apps/traincascade/CMakeLists.txt" : {
      "ObjectId" : "b21fb87367f06a77b6b8deb4c85296ef95193613",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/cmake/FindCUDA.cmake" : {
      "ObjectId" : "5efd36c4ed1827cfa8f61ce4cd2b890144e0ca27",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindCUDA\n\n# --------\n\n#\n\n# Tools for building CUDA C files: libraries and build dependencies.\n\n#\n\n# This script locates the NVIDIA CUDA C tools.  It should work on linux,\n\n# windows, and mac and should be reasonably up to date with CUDA C\n\n# releases.\n\n#\n\n# This script makes use of the standard find_package arguments of\n\n# <VERSION>, REQUIRED and QUIET.  CUDA_FOUND will report if an\n\n# acceptable version of CUDA was found.\n\n#\n\n# The script will prompt the user to specify CUDA_TOOLKIT_ROOT_DIR if\n\n# the prefix cannot be determined by the location of nvcc in the system\n\n# path and REQUIRED is specified to find_package().  To use a different\n\n# installed version of the toolkit set the environment variable\n\n# CUDA_BIN_PATH before running cmake (e.g.\n\n# CUDA_BIN_PATH=/usr/local/cuda1.0 instead of the default\n\n# /usr/local/cuda) or set CUDA_TOOLKIT_ROOT_DIR after configuring.  If\n\n# you change the value of CUDA_TOOLKIT_ROOT_DIR, various components that\n\n# depend on the path will be relocated.\n\n#\n\n# It might be necessary to set CUDA_TOOLKIT_ROOT_DIR manually on certain\n\n# platforms, or to use a cuda runtime not installed in the default\n\n# location.  In newer versions of the toolkit the cuda library is\n\n# included with the graphics driver- be sure that the driver version\n\n# matches what is needed by the cuda runtime version.\n\n#\n\n# The following variables affect the behavior of the macros in the\n\n# script (in alphebetical order).  Note that any of these flags can be\n\n# changed multiple times in the same directory before calling\n\n# CUDA_ADD_EXECUTABLE, CUDA_ADD_LIBRARY, CUDA_COMPILE, CUDA_COMPILE_PTX,\n\n# CUDA_COMPILE_FATBIN, CUDA_COMPILE_CUBIN or CUDA_WRAP_SRCS::\n\n#\n\n#   CUDA_64_BIT_DEVICE_CODE (Default matches host bit size)\n\n#   -- Set to ON to compile for 64 bit device code, OFF for 32 bit device code.\n\n#      Note that making this different from the host code when generating object\n\n#      or C files from CUDA code just won't work, because size_t gets defined by\n\n#      nvcc in the generated source.  If you compile to PTX and then load the\n\n#      file yourself, you can mix bit sizes between device and host.\n\n#\n\n#   CUDA_ATTACH_VS_BUILD_RULE_TO_CUDA_FILE (Default ON)\n\n#   -- Set to ON if you want the custom build rule to be attached to the source\n\n#      file in Visual Studio.  Turn OFF if you add the same cuda file to multiple\n\n#      targets.\n\n#\n\n#      This allows the user to build the target from the CUDA file; however, bad\n\n#      things can happen if the CUDA source file is added to multiple targets.\n\n#      When performing parallel builds it is possible for the custom build\n\n#      command to be run more than once and in parallel causing cryptic build\n\n#      errors.  VS runs the rules for every source file in the target, and a\n\n#      source can have only one rule no matter how many projects it is added to.\n\n#      When the rule is run from multiple targets race conditions can occur on\n\n#      the generated file.  Eventually everything will get built, but if the user\n\n#      is unaware of this behavior, there may be confusion.  It would be nice if\n\n#      this script could detect the reuse of source files across multiple targets\n\n#      and turn the option off for the user, but no good solution could be found.\n\n#\n\n#   CUDA_BUILD_CUBIN (Default OFF)\n\n#   -- Set to ON to enable and extra compilation pass with the -cubin option in\n\n#      Device mode. The output is parsed and register, shared memory usage is\n\n#      printed during build.\n\n#\n\n#   CUDA_BUILD_EMULATION (Default OFF for device mode)\n\n#   -- Set to ON for Emulation mode. -D_DEVICEEMU is defined for CUDA C files\n\n#      when CUDA_BUILD_EMULATION is TRUE.\n\n#\n\n#   CUDA_GENERATED_OUTPUT_DIR (Default CMAKE_CURRENT_BINARY_DIR)\n\n#   -- Set to the path you wish to have the generated files placed.  If it is\n\n#      blank output files will be placed in CMAKE_CURRENT_BINARY_DIR.\n\n#      Intermediate files will always be placed in\n\n#      CMAKE_CURRENT_BINARY_DIR/CMakeFiles.\n\n#\n\n#   CUDA_HOST_COMPILATION_CPP (Default ON)\n\n#   -- Set to OFF for C compilation of host code.\n\n#\n\n#   CUDA_HOST_COMPILER (Default CMAKE_C_COMPILER, $(VCInstallDir)/bin for VS)\n\n#   -- Set the host compiler to be used by nvcc.  Ignored if -ccbin or\n\n#      --compiler-bindir is already present in the CUDA_NVCC_FLAGS or\n\n#      CUDA_NVCC_FLAGS_<CONFIG> variables.  For Visual Studio targets\n\n#      $(VCInstallDir)/bin is a special value that expands out to the path when\n\n#      the command is run from withing VS.\n\n#\n\n#   CUDA_NVCC_FLAGS\n\n#   CUDA_NVCC_FLAGS_<CONFIG>\n\n#   -- Additional NVCC command line arguments.  NOTE: multiple arguments must be\n\n#      semi-colon delimited (e.g. --compiler-options;-Wall)\n\n#\n\n#   CUDA_PROPAGATE_HOST_FLAGS (Default ON)\n\n#   -- Set to ON to propagate CMAKE_{C,CXX}_FLAGS and their configuration\n\n#      dependent counterparts (e.g. CMAKE_C_FLAGS_DEBUG) automatically to the\n\n#      host compiler through nvcc's -Xcompiler flag.  This helps make the\n\n#      generated host code match the rest of the system better.  Sometimes\n\n#      certain flags give nvcc problems, and this will help you turn the flag\n\n#      propagation off.  This does not affect the flags supplied directly to nvcc\n\n#      via CUDA_NVCC_FLAGS or through the OPTION flags specified through\n\n#      CUDA_ADD_LIBRARY, CUDA_ADD_EXECUTABLE, or CUDA_WRAP_SRCS.  Flags used for\n\n#      shared library compilation are not affected by this flag.\n\n#\n\n#   CUDA_SEPARABLE_COMPILATION (Default OFF)\n\n#   -- If set this will enable separable compilation for all CUDA runtime object\n\n#      files.  If used outside of CUDA_ADD_EXECUTABLE and CUDA_ADD_LIBRARY\n\n#      (e.g. calling CUDA_WRAP_SRCS directly),\n\n#      CUDA_COMPUTE_SEPARABLE_COMPILATION_OBJECT_FILE_NAME and\n\n#      CUDA_LINK_SEPARABLE_COMPILATION_OBJECTS should be called.\n\n#\n\n#   CUDA_VERBOSE_BUILD (Default OFF)\n\n#   -- Set to ON to see all the commands used when building the CUDA file.  When\n\n#      using a Makefile generator the value defaults to VERBOSE (run make\n\n#      VERBOSE=1 to see output), although setting CUDA_VERBOSE_BUILD to ON will\n\n#      always print the output.\n\n#\n\n# The script creates the following macros (in alphebetical order)::\n\n#\n\n#   CUDA_ADD_CUFFT_TO_TARGET( cuda_target )\n\n#   -- Adds the cufft library to the target (can be any target).  Handles whether\n\n#      you are in emulation mode or not.\n\n#\n\n#   CUDA_ADD_CUBLAS_TO_TARGET( cuda_target )\n\n#   -- Adds the cublas library to the target (can be any target).  Handles\n\n#      whether you are in emulation mode or not.\n\n#\n\n#   CUDA_ADD_EXECUTABLE( cuda_target file0 file1 ...\n\n#                        [WIN32] [MACOSX_BUNDLE] [EXCLUDE_FROM_ALL] [OPTIONS ...] )\n\n#   -- Creates an executable \"cuda_target\" which is made up of the files\n\n#      specified.  All of the non CUDA C files are compiled using the standard\n\n#      build rules specified by CMAKE and the cuda files are compiled to object\n\n#      files using nvcc and the host compiler.  In addition CUDA_INCLUDE_DIRS is\n\n#      added automatically to include_directories().  Some standard CMake target\n\n#      calls can be used on the target after calling this macro\n\n#      (e.g. set_target_properties and target_link_libraries), but setting\n\n#      properties that adjust compilation flags will not affect code compiled by\n\n#      nvcc.  Such flags should be modified before calling CUDA_ADD_EXECUTABLE,\n\n#      CUDA_ADD_LIBRARY or CUDA_WRAP_SRCS.\n\n#\n\n#   CUDA_ADD_LIBRARY( cuda_target file0 file1 ...\n\n#                     [STATIC | SHARED | MODULE] [EXCLUDE_FROM_ALL] [OPTIONS ...] )\n\n#   -- Same as CUDA_ADD_EXECUTABLE except that a library is created.\n\n#\n\n#   CUDA_BUILD_CLEAN_TARGET()\n\n#   -- Creates a convience target that deletes all the dependency files\n\n#      generated.  You should make clean after running this target to ensure the\n\n#      dependency files get regenerated.\n\n#\n\n#   CUDA_COMPILE( generated_files file0 file1 ... [STATIC | SHARED | MODULE]\n\n#                 [OPTIONS ...] )\n\n#   -- Returns a list of generated files from the input source files to be used\n\n#      with ADD_LIBRARY or ADD_EXECUTABLE.\n\n#\n\n#   CUDA_COMPILE_PTX( generated_files file0 file1 ... [OPTIONS ...] )\n\n#   -- Returns a list of PTX files generated from the input source files.\n\n#\n\n#   CUDA_COMPILE_FATBIN( generated_files file0 file1 ... [OPTIONS ...] )\n\n#   -- Returns a list of FATBIN files generated from the input source files.\n\n#\n\n#   CUDA_COMPILE_CUBIN( generated_files file0 file1 ... [OPTIONS ...] )\n\n#   -- Returns a list of CUBIN files generated from the input source files.\n\n#\n\n#   CUDA_COMPUTE_SEPARABLE_COMPILATION_OBJECT_FILE_NAME( output_file_var\n\n#                                                        cuda_target\n\n#                                                        object_files )\n\n#   -- Compute the name of the intermediate link file used for separable\n\n#      compilation.  This file name is typically passed into\n\n#      CUDA_LINK_SEPARABLE_COMPILATION_OBJECTS.  output_file_var is produced\n\n#      based on cuda_target the list of objects files that need separable\n\n#      compilation as specified by object_files.  If the object_files list is\n\n#      empty, then output_file_var will be empty.  This function is called\n\n#      automatically for CUDA_ADD_LIBRARY and CUDA_ADD_EXECUTABLE.  Note that\n\n#      this is a function and not a macro.\n\n#\n\n#   CUDA_INCLUDE_DIRECTORIES( path0 path1 ... )\n\n#   -- Sets the directories that should be passed to nvcc\n\n#      (e.g. nvcc -Ipath0 -Ipath1 ... ). These paths usually contain other .cu\n\n#      files.\n\n#\n\n#\n\n#\n\n#   CUDA_LINK_SEPARABLE_COMPILATION_OBJECTS( output_file_var cuda_target\n\n#                                            nvcc_flags object_files)\n\n#\n\n#   -- Generates the link object required by separable compilation from the given\n\n#      object files.  This is called automatically for CUDA_ADD_EXECUTABLE and\n\n#      CUDA_ADD_LIBRARY, but can be called manually when using CUDA_WRAP_SRCS\n\n#      directly.  When called from CUDA_ADD_LIBRARY or CUDA_ADD_EXECUTABLE the\n\n#      nvcc_flags passed in are the same as the flags passed in via the OPTIONS\n\n#      argument.  The only nvcc flag added automatically is the bitness flag as\n\n#      specified by CUDA_64_BIT_DEVICE_CODE.  Note that this is a function\n\n#      instead of a macro.\n\n#\n\n#   CUDA_WRAP_SRCS ( cuda_target format generated_files file0 file1 ...\n\n#                    [STATIC | SHARED | MODULE] [OPTIONS ...] )\n\n#   -- This is where all the magic happens.  CUDA_ADD_EXECUTABLE,\n\n#      CUDA_ADD_LIBRARY, CUDA_COMPILE, and CUDA_COMPILE_PTX all call this\n\n#      function under the hood.\n\n#\n\n#      Given the list of files (file0 file1 ... fileN) this macro generates\n\n#      custom commands that generate either PTX or linkable objects (use \"PTX\" or\n\n#      \"OBJ\" for the format argument to switch).  Files that don't end with .cu\n\n#      or have the HEADER_FILE_ONLY property are ignored.\n\n#\n\n#      The arguments passed in after OPTIONS are extra command line options to\n\n#      give to nvcc.  You can also specify per configuration options by\n\n#      specifying the name of the configuration followed by the options.  General\n\n#      options must preceed configuration specific options.  Not all\n\n#      configurations need to be specified, only the ones provided will be used.\n\n#\n\n#         OPTIONS -DFLAG=2 \"-DFLAG_OTHER=space in flag\"\n\n#         DEBUG -g\n\n#         RELEASE --use_fast_math\n\n#         RELWITHDEBINFO --use_fast_math;-g\n\n#         MINSIZEREL --use_fast_math\n\n#\n\n#      For certain configurations (namely VS generating object files with\n\n#      CUDA_ATTACH_VS_BUILD_RULE_TO_CUDA_FILE set to ON), no generated file will\n\n#      be produced for the given cuda file.  This is because when you add the\n\n#      cuda file to Visual Studio it knows that this file produces an object file\n\n#      and will link in the resulting object file automatically.\n\n#\n\n#      This script will also generate a separate cmake script that is used at\n\n#      build time to invoke nvcc.  This is for several reasons.\n\n#\n\n#        1. nvcc can return negative numbers as return values which confuses\n\n#        Visual Studio into thinking that the command succeeded.  The script now\n\n#        checks the error codes and produces errors when there was a problem.\n\n#\n\n#        2. nvcc has been known to not delete incomplete results when it\n\n#        encounters problems.  This confuses build systems into thinking the\n\n#        target was generated when in fact an unusable file exists.  The script\n\n#        now deletes the output files if there was an error.\n\n#\n\n#        3. By putting all the options that affect the build into a file and then\n\n#        make the build rule dependent on the file, the output files will be\n\n#        regenerated when the options change.\n\n#\n\n#      This script also looks at optional arguments STATIC, SHARED, or MODULE to\n\n#      determine when to target the object compilation for a shared library.\n\n#      BUILD_SHARED_LIBS is ignored in CUDA_WRAP_SRCS, but it is respected in\n\n#      CUDA_ADD_LIBRARY.  On some systems special flags are added for building\n\n#      objects intended for shared libraries.  A preprocessor macro,\n\n#      <target_name>_EXPORTS is defined when a shared library compilation is\n\n#      detected.\n\n#\n\n#      Flags passed into add_definitions with -D or /D are passed along to nvcc.\n\n#\n\n#\n\n#\n\n# The script defines the following variables::\n\n#\n\n#   CUDA_VERSION_MAJOR    -- The major version of cuda as reported by nvcc.\n\n#   CUDA_VERSION_MINOR    -- The minor version.\n\n#   CUDA_VERSION\n\n#   CUDA_VERSION_STRING   -- CUDA_VERSION_MAJOR.CUDA_VERSION_MINOR\n\n#\n\n#   CUDA_TOOLKIT_ROOT_DIR -- Path to the CUDA Toolkit (defined if not set).\n\n#   CUDA_SDK_ROOT_DIR     -- Path to the CUDA SDK.  Use this to find files in the\n\n#                            SDK.  This script will not directly support finding\n\n#                            specific libraries or headers, as that isn't\n\n#                            supported by NVIDIA.  If you want to change\n\n#                            libraries when the path changes see the\n\n#                            FindCUDA.cmake script for an example of how to clear\n\n#                            these variables.  There are also examples of how to\n\n#                            use the CUDA_SDK_ROOT_DIR to locate headers or\n\n#                            libraries, if you so choose (at your own risk).\n\n#   CUDA_INCLUDE_DIRS     -- Include directory for cuda headers.  Added automatically\n\n#                            for CUDA_ADD_EXECUTABLE and CUDA_ADD_LIBRARY.\n\n#   CUDA_LIBRARIES        -- Cuda RT library.\n\n#   CUDA_CUFFT_LIBRARIES  -- Device or emulation library for the Cuda FFT\n\n#                            implementation (alternative to:\n\n#                            CUDA_ADD_CUFFT_TO_TARGET macro)\n\n#   CUDA_CUBLAS_LIBRARIES -- Device or emulation library for the Cuda BLAS\n\n#                            implementation (alterative to:\n\n#                            CUDA_ADD_CUBLAS_TO_TARGET macro).\n\n#   CUDA_cupti_LIBRARY    -- CUDA Profiling Tools Interface library.\n\n#                            Only available for CUDA version 4.0+.\n\n#   CUDA_curand_LIBRARY   -- CUDA Random Number Generation library.\n\n#                            Only available for CUDA version 3.2+.\n\n#   CUDA_cusparse_LIBRARY -- CUDA Sparse Matrix library.\n\n#                            Only available for CUDA version 3.2+.\n\n#   CUDA_npp_LIBRARY      -- NVIDIA Performance Primitives lib.\n\n#                            Only available for CUDA version 4.0+.\n\n#   CUDA_nppc_LIBRARY     -- NVIDIA Performance Primitives lib (core).\n\n#                            Only available for CUDA version 5.5+.\n\n#   CUDA_nppi_LIBRARY     -- NVIDIA Performance Primitives lib (image processing).\n\n#                            Only available for CUDA version 5.5+.\n\n#   CUDA_npps_LIBRARY     -- NVIDIA Performance Primitives lib (signal processing).\n\n#                            Only available for CUDA version 5.5+.\n\n#   CUDA_nvcuvenc_LIBRARY -- CUDA Video Encoder library.\n\n#                            Only available for CUDA version 3.2+.\n\n#                            Windows only.\n\n#   CUDA_nvcuvid_LIBRARY  -- CUDA Video Decoder library.\n\n#                            Only available for CUDA version 3.2+.\n\n#                            Windows only.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#   James Bigler, NVIDIA Corp (nvidia.com - jbigler)\n\n#   Abe Stephens, SCI Institute -- http://www.sci.utah.edu/~abe/FindCuda.html\n\n#\n\n#   Copyright (c) 2008 - 2009 NVIDIA Corporation.  All rights reserved.\n\n#\n\n#   Copyright (c) 2007-2009\n\n#   Scientific Computing and Imaging Institute, University of Utah\n\n#\n\n#   This code is licensed under the MIT License.  See the FindCUDA.cmake script\n\n#   for the text of the license.\n",
        "Line" : 297,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The MIT License\n\n#\n\n# License for the specific language governing rights and limitations under\n\n# Permission is hereby granted, free of charge, to any person obtaining a\n\n# copy of this software and associated documentation files (the \"Software\"),\n\n# to deal in the Software without restriction, including without limitation\n\n# the rights to use, copy, modify, merge, publish, distribute, sublicense,\n\n# and/or sell copies of the Software, and to permit persons to whom the\n\n# Software is furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included\n\n# in all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\n# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n\n# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n\n# DEALINGS IN THE SOFTWARE.\n\n#\n\n###############################################################################\n",
        "Line" : 308,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# FindCUDA.cmake\n",
        "Line" : 331,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This macro helps us find the location of helper files we will need the full path to\n",
        "Line" : 333,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# CMAKE_CURRENT_LIST_FILE contains the full path to the file currently being\n\n# processed.  Using this variable, we can pull out the current path, and\n\n# provide a way to get access to the other files we need local to here.\n",
        "Line" : 336,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Set this variable as internal, so the user isn't bugged with it.\n",
        "Line" : 351,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#####################################################################\n\n## CUDA_INCLUDE_NVCC_DEPENDENCIES\n\n##\n",
        "Line" : 355,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# So we want to try and include the dependency file if it exists.  If\n\n# it doesn't exist then we need to create an empty one, so we can\n\n# include it.\n",
        "Line" : 359,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# If it does exist, then we need to check to see if all the files it\n\n# depends on exist.  If they don't then we should clear the dependency\n\n# file and regenerate it later.  This covers the case where a header\n\n# file has disappeared or moved.\n",
        "Line" : 363,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Include the dependency file.  Create it first if it doesn't exist .  The\n\n# INCLUDE puts a dependency that will force CMake to rerun and bring in the\n\n# new info when it changes.  DO NOT REMOVE THIS (as I did and spent a few\n\n# hours figuring out why it didn't work.\n",
        "Line" : 373,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Always include this file to force CMake to run again next\n\n# invocation and rebuild the dependencies.\n\n#message(\"including dependency_file = ${dependency_file}\")\n",
        "Line" : 380,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Now we need to verify the existence of all the included files\n\n# here.  If they aren't there we need to just blank this variable and\n\n# make the file regenerate again.\n",
        "Line" : 385,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#   if(DEFINED CUDA_NVCC_DEPEND)\n\n#     message(\"CUDA_NVCC_DEPEND set\")\n\n#   else()\n\n#     message(\"CUDA_NVCC_DEPEND NOT set\")\n\n#   endif()\n",
        "Line" : 388,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#message(\"CUDA_NVCC_DEPEND found\")\n",
        "Line" : 394,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# message(\"searching for ${f}\")\n",
        "Line" : 396,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "#message(\"file ${f} not found\")\n",
        "Line" : 398,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "#message(\"CUDA_NVCC_DEPEND false\")\n\n# No dependencies, so regenerate the file.\n",
        "Line" : 403,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "#message(\"CUDA_NVCC_DEPEND_REGENERATE = ${CUDA_NVCC_DEPEND_REGENERATE}\")\n\n# No incoming dependencies, so we need to generate them.  Make the\n\n# output depend on the dependency file itself, which should cause the\n\n# rule to re-run.\n",
        "Line" : 408,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "#message(\"Generating an empty dependency_file: ${dependency_file}\")\n",
        "Line" : 414,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# Setup variables' defaults\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 420,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Allow the user to specify if the device code is supposed to be 32 or 64 bit.\n",
        "Line" : 426,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Attach the build rule to the source file in VS.  This option\n",
        "Line" : 434,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Prints out extra information about the cuda file during compilation\n",
        "Line" : 437,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Set whether we are using emulation or device mode.\n",
        "Line" : 440,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Where to put the generated output.\n",
        "Line" : 443,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Parse HOST_COMPILATION mode.\n",
        "Line" : 446,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Extra user settable flags\n",
        "Line" : 449,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Using cc which is symlink to clang may let NVCC think it is GCC and issue\n\n# unhandled -dumpspecs option to clang. Also in case neither\n\n# CMAKE_C_COMPILER is defined (project does not use C language) nor\n\n# CUDA_HOST_COMPILER is specified manually we should skip -ccbin and let\n\n# nvcc use its own default C compiler.\n",
        "Line" : 455,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# Propagate the host flags to the host compiler via -Xcompiler\n",
        "Line" : 468,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Enable CUDA_SEPARABLE_COMPILATION\n",
        "Line" : 471,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Specifies whether the commands used when compiling the .cu file will be printed out.\n",
        "Line" : 474,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Makefile and similar generators don't define CMAKE_CONFIGURATION_TYPES, so we\n\n# need to add another entry for the CMAKE_BUILD_TYPE.  We also need to add the\n\n# standerd set of 4 build types (Debug, MinSizeRel, Release, and RelWithDebInfo)\n\n# for completeness.  We need run this loop in order to accomodate the addition\n\n# of extra configuration types.  Duplicate entries will be removed by\n\n# REMOVE_DUPLICATES.\n",
        "Line" : 486,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# Locate CUDA, Set Build Type, etc.\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 500,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Make sure you run this before you unset CUDA_VERSION.\n",
        "Line" : 510,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# This only existed in the 3.0 version of the CUDA toolkit\n",
        "Line" : 512,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# Check to see if the CUDA_TOOLKIT_ROOT_DIR and CUDA_SDK_ROOT_DIR have changed,\n\n# if they have then clear the cache variables, so that will be detected again.\n",
        "Line" : 530,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# No specific variables to catch.  Use this kind of code before calling\n\n# find_package(CUDA) to clean up any variables that may depend on this path.\n",
        "Line" : 546,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "#   unset(MY_SPECIAL_CUDA_SDK_INCLUDE_DIR CACHE)\n\n#   unset(MY_SPECIAL_CUDA_SDK_LIBRARY CACHE)\n",
        "Line" : 549,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "# Search for the cuda distribution.\n",
        "Line" : 553,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Search in the CUDA_BIN_PATH first.\n",
        "Line" : 556,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# Now search default paths\n",
        "Line" : 566,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# We need to force this back into the cache.\n",
        "Line" : 576,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "# CUDA_NVCC_EXECUTABLE\n",
        "Line" : 588,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Search default search paths, after we search our own set of paths.\n",
        "Line" : 597,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Compute the version.\n",
        "Line" : 602,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "# Need to set these based off of the cached value\n",
        "Line" : 609,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "# Always set this convenience variable\n",
        "Line" : 614,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# Target CPU architecture\n",
        "Line" : 617,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Target OS variant\n",
        "Line" : 630,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Target triplet\n",
        "Line" : 639,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Target directory\n",
        "Line" : 660,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# CUDA_TOOLKIT_INCLUDE\n",
        "Line" : 665,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# Header included in toolkit\n",
        "Line" : 667,
        "CharPositionInLine" : 21
      },
      "54" : {
        "Text" : "# Search default search paths, after we search our own set of paths.\n",
        "Line" : 674,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# Set the user list of include dir to nothing to initialize it.\n",
        "Line" : 678,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# CUDA 3.2+ on Windows moved the library directories, so we need the new\n\n# and old paths.\n",
        "Line" : 684,
        "CharPositionInLine" : 4
      },
      "57" : {
        "Text" : "# CUDA 3.2+ on Windows moved the library directories, so we need to new\n\n# (lib/Win32) and the old path (lib).\n",
        "Line" : 694,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# Search default search paths, after we search our own set of paths.\n",
        "Line" : 705,
        "CharPositionInLine" : 2
      },
      "59" : {
        "Text" : "# CUDA_LIBRARIES\n",
        "Line" : 722,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# The cudartemu library only existed for the 3.0 version of CUDA.\n",
        "Line" : 725,
        "CharPositionInLine" : 2
      },
      "61" : {
        "Text" : "# CUPTI library showed up in cuda toolkit 4.0\n",
        "Line" : 732,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# If we are using emulation mode and we found the cudartemu library then use\n\n# that one instead of cudart.\n",
        "Line" : 738,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# 1.1 toolkit on linux doesn't appear to have a separate library on\n\n# some platforms.\n",
        "Line" : 746,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "#######################\n\n# Look for some of the toolkit helper libraries\n",
        "Line" : 755,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "#######################\n\n# Disable emulation for v3.1 onward\n",
        "Line" : 762,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# Search for additional CUDA toolkit libraries.\n",
        "Line" : 770,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# Emulation libraries aren't available in version 3.1 onward.\n",
        "Line" : 772,
        "CharPositionInLine" : 2
      },
      "68" : {
        "Text" : "# cusparse showed up in version 3.2\n",
        "Line" : 779,
        "CharPositionInLine" : 2
      },
      "69" : {
        "Text" : "# In CUDA 5.5 NPP was splitted onto 3 separate libraries.\n",
        "Line" : 788,
        "CharPositionInLine" : 2
      },
      "70" : {
        "Text" : "########################\n\n# Look for the SDK stuff.  As of CUDA 3.0 NVSDKCUDA_ROOT has been replaced with\n\n# NVSDKCOMPUTE_ROOT with the old CUDA C contents moved into the C subdirectory\n",
        "Line" : 805,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Keep the CUDA_SDK_ROOT_DIR first in order to be able to override the\n\n# environment variables.\n",
        "Line" : 817,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# Example of how to find an include file from the CUDA_SDK_ROOT_DIR\n",
        "Line" : 829,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# find_path(CUDA_CUT_INCLUDE_DIR\n\n#   cutil.h\n\n#   PATHS ${CUDA_SDK_SEARCH_PATH}\n\n#   PATH_SUFFIXES \"common/inc\"\n\n#   DOC \"Location of cutil.h\"\n\n#   NO_DEFAULT_PATH\n\n#   )\n\n# # Now search system paths\n\n# find_path(CUDA_CUT_INCLUDE_DIR cutil.h DOC \"Location of cutil.h\")\n",
        "Line" : 831,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# mark_as_advanced(CUDA_CUT_INCLUDE_DIR)\n",
        "Line" : 841,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# Example of how to find a library in the CUDA_SDK_ROOT_DIR\n",
        "Line" : 844,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# # cutil library is called cutil64 for 64 bit builds on windows.  We don't want\n\n# # to get these confused, so we are setting the name based on the word size of\n\n# # the build.\n",
        "Line" : 846,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# if(CMAKE_SIZEOF_VOID_P EQUAL 8)\n\n#   set(cuda_cutil_name cutil64)\n\n# else()\n\n#   set(cuda_cutil_name cutil32)\n\n# endif()\n",
        "Line" : 850,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# find_library(CUDA_CUT_LIBRARY\n\n#   NAMES cutil ${cuda_cutil_name}\n\n#   PATHS ${CUDA_SDK_SEARCH_PATH}\n\n#   # The new version of the sdk shows up in common/lib, but the old one is in lib\n\n#   PATH_SUFFIXES \"common/lib\" \"lib\"\n\n#   DOC \"Location of cutil library\"\n\n#   NO_DEFAULT_PATH\n\n#   )\n\n# # Now search system paths\n\n# find_library(CUDA_CUT_LIBRARY NAMES cutil ${cuda_cutil_name} DOC \"Location of cutil library\")\n\n# mark_as_advanced(CUDA_CUT_LIBRARY)\n\n# set(CUDA_CUT_LIBRARIES ${CUDA_CUT_LIBRARY})\n",
        "Line" : 856,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "#############################\n\n# Check for required components\n",
        "Line" : 871,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# Macros\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 897,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "###############################################################################\n\n# Add include directories to pass to the nvcc command.\n",
        "Line" : 903,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "##############################################################################\n",
        "Line" : 912,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "##############################################################################\n\n# Separate the OPTIONS out from the sources\n\n#\n",
        "Line" : 917,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# Assume this is a file\n",
        "Line" : 941,
        "CharPositionInLine" : 8
      },
      "85" : {
        "Text" : "##############################################################################\n\n# Parse the OPTIONS from ARGN and set the variables prefixed by _option_prefix\n\n#\n",
        "Line" : 948,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# Determine if we are dealing with a perconfiguration flag\n",
        "Line" : 954,
        "CharPositionInLine" : 4
      },
      "87" : {
        "Text" : "# Set arg to nothing to keep it from being processed further\n",
        "Line" : 959,
        "CharPositionInLine" : 8
      },
      "88" : {
        "Text" : "##############################################################################\n\n# Helper to add the include directory for CUDA only once\n",
        "Line" : 970,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# If SHARED, MODULE, or STATIC aren't already in the list of arguments, then\n\n# add SHARED or STATIC based on the value of BUILD_SHARED_LIBS.\n",
        "Line" : 989,
        "CharPositionInLine" : 2
      },
      "90" : {
        "Text" : "##############################################################################\n\n# Helper to avoid clashes of files with the same basename but different paths.\n\n# This doesn't attempt to do exactly what CMake internals do, which is to only\n\n# add this path when there is a conflict, since by the time a second collision\n\n# in names is detected it's already too late to fix the first one.  For\n\n# consistency sake the relative path will be added to all files.\n",
        "Line" : 1008,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "#message(\"CUDA_COMPUTE_BUILD_PATH([${path}] ${build_path})\")\n\n# Only deal with CMake style paths from here on out\n",
        "Line" : 1015,
        "CharPositionInLine" : 2
      },
      "92" : {
        "Text" : "# Absolute paths are generally unnessary, especially if something like\n\n# file(GLOB_RECURSE) is used to pick up the files.\n",
        "Line" : 1019,
        "CharPositionInLine" : 4
      },
      "93" : {
        "Text" : "# This recipe is from cmLocalGenerator::CreateSafeUniqueObjectFileName in the\n\n# CMake source.\n",
        "Line" : 1030,
        "CharPositionInLine" : 2
      },
      "94" : {
        "Text" : "# Remove leading /\n",
        "Line" : 1033,
        "CharPositionInLine" : 2
      },
      "95" : {
        "Text" : "# Avoid absolute paths by removing ':'\n",
        "Line" : 1035,
        "CharPositionInLine" : 2
      },
      "96" : {
        "Text" : "# Avoid relative paths that go up the tree\n",
        "Line" : 1037,
        "CharPositionInLine" : 2
      },
      "97" : {
        "Text" : "# Avoid spaces\n",
        "Line" : 1039,
        "CharPositionInLine" : 2
      },
      "98" : {
        "Text" : "# Strip off the filename.  I wait until here to do it, since removin the\n\n# basename can make a path that looked like path/../basename turn into\n\n# path/.. (notice the trailing slash).\n",
        "Line" : 1042,
        "CharPositionInLine" : 2
      },
      "99" : {
        "Text" : "#message(\"${build_path} = ${bpath}\")\n",
        "Line" : 1048,
        "CharPositionInLine" : 2
      },
      "100" : {
        "Text" : "##############################################################################\n\n# This helper macro populates the following variables and setups up custom\n\n# commands and targets to invoke the nvcc compiler to generate C or PTX source\n\n# dependent upon the format parameter.  The compiler is invoked once with -M\n\n# to generate a dependency file and a second time with -cuda or -ptx to generate\n\n# a .cpp or .ptx file.\n\n# INPUT:\n\n#   cuda_target         - Target name\n\n#   format              - PTX, CUBIN, FATBIN or OBJ\n\n#   FILE1 .. FILEN      - The remaining arguments are the sources to be wrapped.\n\n#   OPTIONS             - Extra options to NVCC\n\n# OUTPUT:\n\n#   generated_files     - List of generated files\n\n##############################################################################\n\n##############################################################################\n",
        "Line" : 1051,
        "CharPositionInLine" : 0
      },
      "101" : {
        "Text" : "# If CMake doesn't support separable compilation, complain\n",
        "Line" : 1069,
        "CharPositionInLine" : 2
      },
      "102" : {
        "Text" : "# Set up all the command line flags here, so that they can be overridden on a per target basis.\n",
        "Line" : 1074,
        "CharPositionInLine" : 2
      },
      "103" : {
        "Text" : "# Emulation if the card isn't present.\n",
        "Line" : 1078,
        "CharPositionInLine" : 2
      },
      "104" : {
        "Text" : "# Emulation.\n",
        "Line" : 1080,
        "CharPositionInLine" : 4
      },
      "105" : {
        "Text" : "# Device mode.  No flags necessary.\n",
        "Line" : 1083,
        "CharPositionInLine" : 4
      },
      "106" : {
        "Text" : "# CPU architecture is either ARM or X86. Patch AARCH64 to be ARM\n",
        "Line" : 1106,
        "CharPositionInLine" : 4
      },
      "107" : {
        "Text" : "# This needs to be passed in at this stage, because VS needs to fill out the\n\n# value of VCInstallDir from within VS.  Note that CCBIN is only used if\n\n# -ccbin or --compiler-bindir isn't used and CUDA_HOST_COMPILER matches\n\n# $(VCInstallDir)/bin.\n",
        "Line" : 1115,
        "CharPositionInLine" : 2
      },
      "108" : {
        "Text" : "# Figure out which configure we will use and pass that in as an argument to\n\n# the script.  We need to defer the decision until compilation time, because\n\n# for VS projects we won't know if we are making a debug or release build\n\n# until build time.\n",
        "Line" : 1125,
        "CharPositionInLine" : 2
      },
      "109" : {
        "Text" : "# Initialize our list of includes with the user ones followed by the CUDA system ones.\n",
        "Line" : 1135,
        "CharPositionInLine" : 2
      },
      "110" : {
        "Text" : "# Get the include directories for this directory and use them for our nvcc command.\n\n# Remove duplicate entries which may be present since include_directories\n\n# in CMake >= 2.8.8 does not remove them.\n",
        "Line" : 1137,
        "CharPositionInLine" : 2
      },
      "111" : {
        "Text" : "# Reset these variables\n",
        "Line" : 1148,
        "CharPositionInLine" : 2
      },
      "112" : {
        "Text" : "# Figure out if we are building a shared library.  BUILD_SHARED_LIBS is\n\n# respected in CUDA_ADD_LIBRARY.\n",
        "Line" : 1158,
        "CharPositionInLine" : 2
      },
      "113" : {
        "Text" : "# SHARED, MODULE\n",
        "Line" : 1161,
        "CharPositionInLine" : 2
      },
      "114" : {
        "Text" : "# STATIC\n",
        "Line" : 1167,
        "CharPositionInLine" : 2
      },
      "115" : {
        "Text" : "# CUDA_HOST_FLAGS\n",
        "Line" : 1173,
        "CharPositionInLine" : 2
      },
      "116" : {
        "Text" : "# If we are setting up code for a shared library, then we need to add extra flags for\n\n# compiling objects for shared libraries.\n",
        "Line" : 1175,
        "CharPositionInLine" : 4
      },
      "117" : {
        "Text" : "# Only add the CMAKE_{C,CXX}_FLAGS if we are propagating host flags.  We\n\n# always need to set the SHARED_FLAGS, though.\n",
        "Line" : 1181,
        "CharPositionInLine" : 2
      },
      "118" : {
        "Text" : "# Loop over all the configuration types to generate appropriate flags for run_nvcc.cmake\n",
        "Line" : 1190,
        "CharPositionInLine" : 2
      },
      "119" : {
        "Text" : "# CMAKE_FLAGS are strings and not lists.  By not putting quotes around CMAKE_FLAGS\n\n# we convert the strings to lists (like we want).\n",
        "Line" : 1193,
        "CharPositionInLine" : 4
      },
      "120" : {
        "Text" : "# nvcc chokes on -g3 in versions previous to 3.0, so replace it with -g\n",
        "Line" : 1197,
        "CharPositionInLine" : 6
      },
      "121" : {
        "Text" : "# Note that if we ever want CUDA_NVCC_FLAGS_<CONFIG> to be string (instead of a list\n\n# like it is currently), we can remove the quotes around the\n\n# ${CUDA_NVCC_FLAGS_${config_upper}} variable like the CMAKE_HOST_FLAGS_<CONFIG> variable.\n",
        "Line" : 1217,
        "CharPositionInLine" : 4
      },
      "122" : {
        "Text" : "# Get the list of definitions from the directory property\n",
        "Line" : 1223,
        "CharPositionInLine" : 2
      },
      "123" : {
        "Text" : "# Reset the output variable\n",
        "Line" : 1235,
        "CharPositionInLine" : 2
      },
      "124" : {
        "Text" : "# Iterate over the macro arguments and create custom\n\n# commands for all the .cu files.\n",
        "Line" : 1238,
        "CharPositionInLine" : 2
      },
      "125" : {
        "Text" : "# Ignore any file marked as a HEADER_FILE_ONLY\n",
        "Line" : 1241,
        "CharPositionInLine" : 4
      },
      "126" : {
        "Text" : "# Allow per source file overrides of the format.\n",
        "Line" : 1245,
        "CharPositionInLine" : 6
      },
      "127" : {
        "Text" : "# Don't use any of the host compilation flags for PTX targets.\n",
        "Line" : 1267,
        "CharPositionInLine" : 8
      },
      "128" : {
        "Text" : "# Determine output directory\n",
        "Line" : 1275,
        "CharPositionInLine" : 6
      },
      "129" : {
        "Text" : "# Add a custom target to generate a c or ptx file. ######################\n",
        "Line" : 1288,
        "CharPositionInLine" : 6
      },
      "130" : {
        "Text" : "# Set all of our file names.  Make sure that whatever filenames that have\n\n# generated_file_path in them get passed in through as a command line\n\n# argument, so that the ${CMAKE_CFG_INTDIR} gets expanded at run time\n\n# instead of configure time.\n",
        "Line" : 1306,
        "CharPositionInLine" : 6
      },
      "131" : {
        "Text" : "# Setup properties for obj files:\n",
        "Line" : 1316,
        "CharPositionInLine" : 6
      },
      "132" : {
        "Text" : "# This is an object file not to be compiled, but only be linked.\n",
        "Line" : 1320,
        "CharPositionInLine" : 31
      },
      "133" : {
        "Text" : "# Don't add CMAKE_CURRENT_SOURCE_DIR if the path is already an absolute path.\n",
        "Line" : 1324,
        "CharPositionInLine" : 6
      },
      "134" : {
        "Text" : "# Bring in the dependencies.  Creates a variable CUDA_NVCC_DEPEND #######\n",
        "Line" : 1336,
        "CharPositionInLine" : 6
      },
      "135" : {
        "Text" : "# Convience string for output ###########################################\n",
        "Line" : 1339,
        "CharPositionInLine" : 6
      },
      "136" : {
        "Text" : "# Build the NVCC made dependency file ###################################\n",
        "Line" : 1346,
        "CharPositionInLine" : 6
      },
      "137" : {
        "Text" : "# Configure the build script\n",
        "Line" : 1354,
        "CharPositionInLine" : 6
      },
      "138" : {
        "Text" : "# So if a user specifies the same cuda file as input more than once, you\n\n# can have bad things happen with dependencies.  Here we check an option\n\n# to see if this is the behavior they want.\n",
        "Line" : 1357,
        "CharPositionInLine" : 6
      },
      "139" : {
        "Text" : "# Create up the comment string\n",
        "Line" : 1374,
        "CharPositionInLine" : 6
      },
      "140" : {
        "Text" : "# Build the generated file and dependency file ##########################\n",
        "Line" : 1382,
        "CharPositionInLine" : 6
      },
      "141" : {
        "Text" : "# These output files depend on the source_file and the contents of cmake_dependency_file\n",
        "Line" : 1385,
        "CharPositionInLine" : 8
      },
      "142" : {
        "Text" : "# Make sure the output directory exists before trying to write to it.\n",
        "Line" : 1389,
        "CharPositionInLine" : 8
      },
      "143" : {
        "Text" : "# Make sure the build system knows the file is generated.\n",
        "Line" : 1402,
        "CharPositionInLine" : 6
      },
      "144" : {
        "Text" : "# Add the other files that we want cmake to clean on a cleanup ##########\n",
        "Line" : 1407,
        "CharPositionInLine" : 6
      },
      "145" : {
        "Text" : "# Set the return parameter\n",
        "Line" : 1415,
        "CharPositionInLine" : 2
      },
      "146" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# Separable Compilation Link\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1430,
        "CharPositionInLine" : 0
      },
      "147" : {
        "Text" : "# Compute the filename to be used by CUDA_LINK_SEPARABLE_COMPILATION_OBJECTS\n",
        "Line" : 1436,
        "CharPositionInLine" : 0
      },
      "148" : {
        "Text" : "# Setup the build rule for the separable compilation intermediate link file.\n",
        "Line" : 1448,
        "CharPositionInLine" : 0
      },
      "149" : {
        "Text" : "# This is an object file not to be compiled, but only\n\n# be linked.\n\n# This file is generated during the build\n",
        "Line" : 1454,
        "CharPositionInLine" : 27
      },
      "150" : {
        "Text" : "# For now we are ignoring all the configuration specific flags.\n",
        "Line" : 1459,
        "CharPositionInLine" : 4
      },
      "151" : {
        "Text" : "# If -ccbin, --compiler-bindir has been specified, don't do anything.  Otherwise add it here.\n",
        "Line" : 1467,
        "CharPositionInLine" : 4
      },
      "152" : {
        "Text" : "# Create a list of flags specified by CUDA_NVCC_FLAGS_${CONFIG}\n",
        "Line" : 1473,
        "CharPositionInLine" : 4
      },
      "153" : {
        "Text" : "# Add config specific flags\n",
        "Line" : 1478,
        "CharPositionInLine" : 6
      },
      "154" : {
        "Text" : "# Add our general CUDA_NVCC_FLAGS with the configuration specifig flags\n",
        "Line" : 1488,
        "CharPositionInLine" : 4
      },
      "155" : {
        "Text" : "# Some generators don't handle the multiple levels of custom command\n\n# dependencies correctly (obj1 depends on file1, obj2 depends on obj1), so\n\n# we work around that issue by compiling the intermediate link object as a\n\n# pre-link custom command in that situation.\n",
        "Line" : 1493,
        "CharPositionInLine" : 4
      },
      "156" : {
        "Text" : "# VS 2010 and 2012 have this problem.  If future versions fix this issue,\n\n# it should still work, it just won't be as nice as the other method.\n",
        "Line" : 1499,
        "CharPositionInLine" : 6
      },
      "157" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# ADD LIBRARY\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1523,
        "CharPositionInLine" : 0
      },
      "158" : {
        "Text" : "# Separate the sources from the options\n",
        "Line" : 1532,
        "CharPositionInLine" : 2
      },
      "159" : {
        "Text" : "# Create custom commands and targets for each file.\n",
        "Line" : 1535,
        "CharPositionInLine" : 2
      },
      "160" : {
        "Text" : "# Compute the file name of the intermedate link file used for separable\n\n# compilation.\n",
        "Line" : 1540,
        "CharPositionInLine" : 2
      },
      "161" : {
        "Text" : "# Add the library.\n",
        "Line" : 1544,
        "CharPositionInLine" : 2
      },
      "162" : {
        "Text" : "# Add a link phase for the separable compilation if it has been enabled.  If\n\n# it has been enabled then the ${cuda_target}_SEPARABLE_COMPILATION_OBJECTS\n\n# variable will have been defined.\n",
        "Line" : 1551,
        "CharPositionInLine" : 2
      },
      "163" : {
        "Text" : "# We need to set the linker language based on what the expected generated file\n\n# would be. CUDA_C_OR_CXX is computed based on CUDA_HOST_COMPILATION_CPP.\n",
        "Line" : 1560,
        "CharPositionInLine" : 2
      },
      "164" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# ADD EXECUTABLE\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1570,
        "CharPositionInLine" : 0
      },
      "165" : {
        "Text" : "# Separate the sources from the options\n",
        "Line" : 1579,
        "CharPositionInLine" : 2
      },
      "166" : {
        "Text" : "# Create custom commands and targets for each file.\n",
        "Line" : 1581,
        "CharPositionInLine" : 2
      },
      "167" : {
        "Text" : "# Compute the file name of the intermedate link file used for separable\n\n# compilation.\n",
        "Line" : 1584,
        "CharPositionInLine" : 2
      },
      "168" : {
        "Text" : "# Add the library.\n",
        "Line" : 1588,
        "CharPositionInLine" : 2
      },
      "169" : {
        "Text" : "# Add a link phase for the separable compilation if it has been enabled.  If\n\n# it has been enabled then the ${cuda_target}_SEPARABLE_COMPILATION_OBJECTS\n\n# variable will have been defined.\n",
        "Line" : 1595,
        "CharPositionInLine" : 2
      },
      "170" : {
        "Text" : "# We need to set the linker language based on what the expected generated file\n\n# would be. CUDA_C_OR_CXX is computed based on CUDA_HOST_COMPILATION_CPP.\n",
        "Line" : 1604,
        "CharPositionInLine" : 2
      },
      "171" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# (Internal) helper for manually added cuda source files with specific targets\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1614,
        "CharPositionInLine" : 0
      },
      "172" : {
        "Text" : "# Separate the sources from the options\n",
        "Line" : 1621,
        "CharPositionInLine" : 2
      },
      "173" : {
        "Text" : "# Create custom commands and targets for each file.\n",
        "Line" : 1623,
        "CharPositionInLine" : 2
      },
      "174" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# CUDA COMPILE\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1631,
        "CharPositionInLine" : 0
      },
      "175" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# CUDA COMPILE PTX\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1640,
        "CharPositionInLine" : 0
      },
      "176" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# CUDA COMPILE FATBIN\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1649,
        "CharPositionInLine" : 0
      },
      "177" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# CUDA COMPILE CUBIN\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1658,
        "CharPositionInLine" : 0
      },
      "178" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# CUDA ADD CUFFT TO TARGET\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1668,
        "CharPositionInLine" : 0
      },
      "179" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# CUDA ADD CUBLAS TO TARGET\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1681,
        "CharPositionInLine" : 0
      },
      "180" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# CUDA BUILD CLEAN TARGET\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1694,
        "CharPositionInLine" : 0
      },
      "181" : {
        "Text" : "# Call this after you add all your CUDA targets, and you will get a convience\n\n# target.  You should also make clean after running this target to get the\n\n# build system to generate all the code again.\n",
        "Line" : 1700,
        "CharPositionInLine" : 2
      },
      "182" : {
        "Text" : "# Clear out the variable, so the next time we configure it will be empty.\n\n# This is useful so that the files won't persist in the list after targets\n\n# have been removed.\n",
        "Line" : 1711,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 183
    },
    "ProgramData/SystemFiles/opencv/sources/cmake/FindCUDA/make2cmake.cmake" : {
      "ObjectId" : "c433fa8ed4e1d9e7fb8d5ecb026c3536c9449050",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  James Bigler, NVIDIA Corp (nvidia.com - jbigler)\n\n#  Abe Stephens, SCI Institute -- http://www.sci.utah.edu/~abe/FindCuda.html\n\n#\n\n#  Copyright (c) 2008 - 2009 NVIDIA Corporation.  All rights reserved.\n\n#\n\n#  Copyright (c) 2007-2009\n\n#  Scientific Computing and Imaging Institute, University of Utah\n\n#\n\n#  This code is licensed under the MIT License.  See the FindCUDA.cmake script\n\n#  for the text of the license.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The MIT License\n\n#\n\n# License for the specific language governing rights and limitations under\n\n# Permission is hereby granted, free of charge, to any person obtaining a\n\n# copy of this software and associated documentation files (the \"Software\"),\n\n# to deal in the Software without restriction, including without limitation\n\n# the rights to use, copy, modify, merge, publish, distribute, sublicense,\n\n# and/or sell copies of the Software, and to permit persons to whom the\n\n# Software is furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included\n\n# in all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\n# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n\n# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n\n# DEALINGS IN THE SOFTWARE.\n\n#\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#######################################################################\n\n# This converts a file written in makefile syntax into one that can be included\n\n# by CMake.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# message(\"FOUND DEPENDS\")\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# This works for the nvcc -M generated dependency files.\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# OK, now if we had a UNC path, nvcc has a tendency to only output the first '/'\n\n# instead of '//'.  Here we will test to see if the file exists, if it doesn't then\n\n# try to prepend another '/' to the path and test again.  If it still fails remove the\n\n# path.\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# If softlinks start to matter, we should change this to REALPATH.  For now we need\n\n# to flatten paths, because nvcc can generate stuff like /bin/../include instead of\n\n# just /include.\n",
        "Line" : 71,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# message(\"FOUND NO DEPENDS\")\n",
        "Line" : 81,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Remove the duplicate entries and sort them.\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "ProgramData/SystemFiles/opencv/sources/cmake/FindCUDA/parse_cubin.cmake" : {
      "ObjectId" : "25ceb49f3dd8e684e35cac49834c4db0aa5c338a",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  James Bigler, NVIDIA Corp (nvidia.com - jbigler)\n\n#  Abe Stephens, SCI Institute -- http://www.sci.utah.edu/~abe/FindCuda.html\n\n#\n\n#  Copyright (c) 2008 - 2009 NVIDIA Corporation.  All rights reserved.\n\n#\n\n#  Copyright (c) 2007-2009\n\n#  Scientific Computing and Imaging Institute, University of Utah\n\n#\n\n#  This code is licensed under the MIT License.  See the FindCUDA.cmake script\n\n#  for the text of the license.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The MIT License\n\n#\n\n# License for the specific language governing rights and limitations under\n\n# Permission is hereby granted, free of charge, to any person obtaining a\n\n# copy of this software and associated documentation files (the \"Software\"),\n\n# to deal in the Software without restriction, including without limitation\n\n# the rights to use, copy, modify, merge, publish, distribute, sublicense,\n\n# and/or sell copies of the Software, and to permit persons to whom the\n\n# Software is furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included\n\n# in all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\n# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n\n# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n\n# DEALINGS IN THE SOFTWARE.\n\n#\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#######################################################################\n\n# Parses a .cubin file produced by nvcc and reports statistics about the file.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Only look at \"code { }\" blocks.\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Break into individual lines.\n",
        "Line" : 52,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Extract kernel names.\n",
        "Line" : 57,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Check to see if the kernel name starts with \"_\"\n",
        "Line" : 61,
        "CharPositionInLine" : 10
      },
      "7" : {
        "Text" : "# if (${entry} MATCHES \"^_\")\n",
        "Line" : 63,
        "CharPositionInLine" : 10
      },
      "8" : {
        "Text" : "# Skip the rest of this block.\n\n# message(\"Skipping ${entry}\")\n\n# set(skip TRUE)\n",
        "Line" : 64,
        "CharPositionInLine" : 12
      },
      "9" : {
        "Text" : "# else ()\n",
        "Line" : 67,
        "CharPositionInLine" : 10
      },
      "10" : {
        "Text" : "# endif ()\n",
        "Line" : 69,
        "CharPositionInLine" : 10
      },
      "11" : {
        "Text" : "# Skip the rest of the block if necessary\n",
        "Line" : 73,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# Registers\n",
        "Line" : 76,
        "CharPositionInLine" : 10
      },
      "13" : {
        "Text" : "# Local memory\n",
        "Line" : 82,
        "CharPositionInLine" : 10
      },
      "14" : {
        "Text" : "# Shared memory\n",
        "Line" : 88,
        "CharPositionInLine" : 10
      },
      "15" : {
        "Text" : "# message(\"FOUND NO DEPENDS\")\n",
        "Line" : 108,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 16
    },
    "ProgramData/SystemFiles/opencv/sources/cmake/FindCUDA/run_nvcc.cmake" : {
      "ObjectId" : "abdd3079e13e2f5f44556c6b393844747042b36a",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  James Bigler, NVIDIA Corp (nvidia.com - jbigler)\n\n#\n\n#  Copyright (c) 2008 - 2009 NVIDIA Corporation.  All rights reserved.\n\n#\n\n#  This code is licensed under the MIT License.  See the FindCUDA.cmake script\n\n#  for the text of the license.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The MIT License\n\n#\n\n# License for the specific language governing rights and limitations under\n\n# Permission is hereby granted, free of charge, to any person obtaining a\n\n# copy of this software and associated documentation files (the \"Software\"),\n\n# to deal in the Software without restriction, including without limitation\n\n# the rights to use, copy, modify, merge, publish, distribute, sublicense,\n\n# and/or sell copies of the Software, and to permit persons to whom the\n\n# Software is furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included\n\n# in all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\n# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n\n# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n\n# DEALINGS IN THE SOFTWARE.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##########################################################################\n\n# This file runs the nvcc commands to produce the desired output file along with\n\n# the dependency file needed by CMake to compute dependencies.  In addition the\n\n# file checks the output of each command and if the command fails it deletes the\n\n# output files.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Input variables\n\n#\n\n# verbose:BOOL=<>          OFF: Be as quiet as possible (default)\n\n#                          ON : Describe each step\n\n#\n\n# build_configuration:STRING=<> Typically one of Debug, MinSizeRel, Release, or\n\n#                               RelWithDebInfo, but it should match one of the\n\n#                               entries in CUDA_HOST_FLAGS. This is the build\n\n#                               configuration used when compiling the code.  If\n\n#                               blank or unspecified Debug is assumed as this is\n\n#                               what CMake does.\n\n#\n\n# generated_file:STRING=<> File to generate.  This argument must be passed in.\n\n#\n\n# generated_cubin_file:STRING=<> File to generate.  This argument must be passed\n\n#                                                   in if build_cubin is true.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set these up as variables to make reading the generated file easier\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# path\n",
        "Line" : 58,
        "CharPositionInLine" : 37
      },
      "6" : {
        "Text" : "# path\n",
        "Line" : 59,
        "CharPositionInLine" : 33
      },
      "7" : {
        "Text" : "# path\n",
        "Line" : 60,
        "CharPositionInLine" : 71
      },
      "8" : {
        "Text" : "# path\n",
        "Line" : 61,
        "CharPositionInLine" : 53
      },
      "9" : {
        "Text" : "# path\n",
        "Line" : 62,
        "CharPositionInLine" : 41
      },
      "10" : {
        "Text" : "# path\n",
        "Line" : 63,
        "CharPositionInLine" : 43
      },
      "11" : {
        "Text" : "# bool\n",
        "Line" : 64,
        "CharPositionInLine" : 31
      },
      "12" : {
        "Text" : "# path\n",
        "Line" : 65,
        "CharPositionInLine" : 47
      },
      "13" : {
        "Text" : "# We won't actually use these variables for now, but we need to set this, in\n\n# order to force this file to be run again if it changes.\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# path\n",
        "Line" : 68,
        "CharPositionInLine" : 49
      },
      "15" : {
        "Text" : "# path\n",
        "Line" : 69,
        "CharPositionInLine" : 48
      },
      "16" : {
        "Text" : "# path\n",
        "Line" : 70,
        "CharPositionInLine" : 60
      },
      "17" : {
        "Text" : "# path\n",
        "Line" : 72,
        "CharPositionInLine" : 51
      },
      "18" : {
        "Text" : "# list\n",
        "Line" : 73,
        "CharPositionInLine" : 72
      },
      "19" : {
        "Text" : "# list\n",
        "Line" : 75,
        "CharPositionInLine" : 29
      },
      "20" : {
        "Text" : "# list (needs to be in quotes to handle spaces properly).\n",
        "Line" : 76,
        "CharPositionInLine" : 55
      },
      "21" : {
        "Text" : "# string\n",
        "Line" : 77,
        "CharPositionInLine" : 33
      },
      "22" : {
        "Text" : "# This is the list of host compilation flags.  It C or CXX should already have\n\n# been chosen by FindCUDA.cmake.\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Take the compiler flags and package them up to be sent to the compiler via -Xcompiler\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# If we weren't given a build_configuration, use Debug.\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#message(\"CUDA_NVCC_HOST_COMPILER_FLAGS = ${CUDA_NVCC_HOST_COMPILER_FLAGS}\")\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Extra quotes are added around each flag to help nvcc parse out flags with spaces.\n",
        "Line" : 96,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "#message(\"nvcc_host_compiler_flags = \\\"${nvcc_host_compiler_flags}\\\"\")\n\n# Add the build specific configuration flags\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Any -ccbin existing in CUDA_NVCC_FLAGS gets highest priority\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# cuda_execute_process - Executes a command with optional command echo and status message.\n\n#\n\n#   status  - Status message to print if verbose is true\n\n#   command - COMMAND argument from the usual execute_process argument structure\n\n#   ARGN    - Remaining arguments are the command with arguments\n\n#\n\n#   CUDA_result - return value from running the command\n\n#\n\n# Make this a macro instead of a function, so that things like RESULT_VARIABLE\n\n# and other return variables are present after executing the process.\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Now we need to build up our command string.  We are accounting for quotes\n\n# and spaces, anything else is left up to the user to fix if they want to\n\n# copy and paste a runnable command line.\n",
        "Line" : 134,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# If there are quotes, excape them, so they come through.\n",
        "Line" : 139,
        "CharPositionInLine" : 6
      },
      "32" : {
        "Text" : "# Args with spaces need quotes around them to get them to be parsed as a single argument.\n",
        "Line" : 141,
        "CharPositionInLine" : 6
      },
      "33" : {
        "Text" : "# Echo the command\n",
        "Line" : 148,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# Run the command\n",
        "Line" : 151,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# Delete the target file\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# For CUDA 2.3 and below, -G -M doesn't work, so remove the -G flag\n\n# for dependency generation and hope for the best.\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# CMake policy 0007 NEW states that empty list elements are not\n\n# ignored.  I'm just setting it to avoid the warning that's printed.\n",
        "Line" : 167,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# Note that this will remove all occurances of -G.\n",
        "Line" : 170,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "# nvcc doesn't define __CUDACC__ for some reason when generating dependency files.  This\n\n# can cause incorrect dependencies when #including files based on this macro which is\n\n# defined in the generating passes of nvcc invokation.  We will go ahead and manually\n\n# define this for now until a future version fixes this bug.\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Generate the dependency file\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Generate the cmake readable dependency file to a temp file.  Don't put the\n\n# quotes just around the filenames for the input_file and output_file variables.\n\n# CMake will pass the quotes through and not be able to find the file.\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Copy the file if it is different\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Delete the temporary file\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Generate the code\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Since nvcc can sometimes leave half done files make sure that we delete the output file.\n",
        "Line" : 251,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "# Cubin resource report commands.\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Run with -cubin to produce resource usage report.\n",
        "Line" : 265,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "# Execute the parser script.\n",
        "Line" : 280,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 49
    },
    "ProgramData/SystemFiles/opencv/sources/cmake/OpenCVCRTLinkage.cmake" : {
      "ObjectId" : "2168c72e6536cc29acfe27bacb2a81c3c899cb4c",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if (${CMAKE_SYSTEM_NAME} MATCHES \"WindowsStore\" OR ${CMAKE_SYSTEM_NAME} MATCHES \"WindowsPhone\")\n\n#  set(WINRT TRUE)\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Removing LNK4075 warnings for debug WinRT builds\n\n# \"LNK4075: ignoring '/INCREMENTAL' due to '/OPT:ICF' specification\"\n\n# \"LNK4075: ignoring '/INCREMENTAL' due to '/OPT:REF' specification\"\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Optional verification checks since we don't know existing contents of variables below\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Mandatory\n",
        "Line" : 32,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "ProgramData/SystemFiles/opencv/sources/cmake/OpenCVCompilerOptions.cmake" : {
      "ObjectId" : "6c235ebfbfeb485acc21ed6ffe0a8eb020d9b4ad",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# mingw compiler is known to produce unstable SSE code with -O3 hence we are trying to use -O2 instead\n",
        "Line" : 2,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# override cmake default exception handling option\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# OpenCV fails some tests when 'char' is 'unsigned' by default\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# http://gcc.gnu.org/bugzilla/show_bug.cgi?id=40838\n\n# here we are trying to workaround the problem\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# High level of warnings.\n",
        "Line" : 63,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# The -Wno-long-long is required in 64bit systems when including sytem headers.\n",
        "Line" : 91,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# We need pthread's\n",
        "Line" : 96,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Other optimizations\n",
        "Line" : 117,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# SSE3 and further should be disabled under MingW because it generates compiler errors\n",
        "Line" : 144,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# GCC depresses SSEx instructions when -mavx is used. Instead, it generates new AVX instructions or AVX equivalence for all SSEx instructions when needed.\n",
        "Line" : 159,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# !! important - be on the same wave with x64 compilers\n",
        "Line" : 194,
        "CharPositionInLine" : 47
      },
      "11" : {
        "Text" : "# Profiling?\n",
        "Line" : 201,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# turn off incompatible options\n",
        "Line" : 204,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Remove unreferenced functions: function level linking\n",
        "Line" : 211,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# 64-bit portability warnings, in MSVC80\n",
        "Line" : 226,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Remove unreferenced functions: function level linking\n",
        "Line" : 235,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# 64-bit MSVC compiler uses SSE/SSE2 by default\n",
        "Line" : 260,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# !! important - be on the same wave with x64 compilers\n",
        "Line" : 275,
        "CharPositionInLine" : 63
      },
      "18" : {
        "Text" : "# Extra link libs if the user selects building static libs:\n",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Android does not need these settings because they are already set by toolchain file\n",
        "Line" : 291,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Add user supplied extra options (optimization, etc...)\n\n# ==========================================================\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# set default visibility to hidden\n",
        "Line" : 307,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#combine all \"extra\" options\n",
        "Line" : 313,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# avoid warnings from MSVC about overriding the /W* option\n\n# we replace /W3 with /W4 only for C++ files,\n\n# since all the 3rd-party libraries OpenCV uses are in C,\n\n# and we do not care about their warnings.\n",
        "Line" : 325,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# allow extern \"C\" functions throw exceptions\n",
        "Line" : 337,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# class 'std::XXX' needs to have dll-interface to be used by clients of YYY\n\n# 'struct_name' : structure was padded due to __declspec(align())\n",
        "Line" : 346,
        "CharPositionInLine" : 50
      },
      "CommentCount" : 26
    },
    "ProgramData/SystemFiles/opencv/sources/cmake/OpenCVConfig.cmake" : {
      "ObjectId" : "83bcb39fe7d62993105263fe62fc1a9397a5580c",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===================================================================================\n\n#  The OpenCV CMake configuration file\n\n#\n\n#             ** File generated automatically, do not modify **\n\n#\n\n#  Usage from an external project:\n\n#    In your CMakeLists.txt, add these lines:\n\n#\n\n#    FIND_PACKAGE(OpenCV REQUIRED)\n\n#    TARGET_LINK_LIBRARIES(MY_TARGET_NAME ${OpenCV_LIBS})\n\n#\n\n#    Or you can search for specific OpenCV modules:\n\n#\n\n#    FIND_PACKAGE(OpenCV REQUIRED core imgcodecs)\n\n#\n\n#    If the module is found then OPENCV_<MODULE>_FOUND is set to TRUE.\n\n#\n\n#    This file will define the following variables:\n\n#      - OpenCV_LIBS                     : The list of libraries to link against.\n\n#      - OpenCV_LIB_DIR                  : The directory(es) where lib files are. Calling LINK_DIRECTORIES\n\n#                                          with this path is NOT needed.\n\n#      - OpenCV_INCLUDE_DIRS             : The OpenCV include directories.\n\n#      - OpenCV_COMPUTE_CAPABILITIES     : The version of compute capability\n\n#      - OpenCV_ANDROID_NATIVE_API_LEVEL : Minimum required level of Android API\n\n#      - OpenCV_VERSION                  : The version of this OpenCV build. Example: \"2.4.0\"\n\n#      - OpenCV_VERSION_MAJOR            : Major version part of OpenCV_VERSION. Example: \"2\"\n\n#      - OpenCV_VERSION_MINOR            : Minor version part of OpenCV_VERSION. Example: \"4\"\n\n#      - OpenCV_VERSION_PATCH            : Patch version part of OpenCV_VERSION. Example: \"0\"\n\n#\n\n#    Advanced variables:\n\n#      - OpenCV_SHARED\n\n#      - OpenCV_CONFIG_PATH\n\n#      - OpenCV_LIB_COMPONENTS\n\n#\n\n# ===================================================================================\n\n#\n\n#    Windows pack specific options:\n\n#      - OpenCV_STATIC\n\n#      - OpenCV_CUDA\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# look for global setting\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# if user' app uses CUDA, then it probably wants CUDA-enabled OpenCV binaries\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# see Modules/CmakeGenericSystem.cmake\n",
        "Line" : 69,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "ProgramData/SystemFiles/opencv/sources/cmake/OpenCVDetectAndroidSDK.cmake" : {
      "ObjectId" : "3bfb10e2d6c2efd2ebefc67dad4567989617f94c",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#find android SDK: search in ANDROID_SDK first\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Now search default paths\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#read source.properties\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#fix missing revision (SDK tools before r9 don't set revision number correctly)\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#fix missing description\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#warn about outdated SDK\n",
        "Line" : 73,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#get installed targets\n",
        "Line" : 90,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#old SDKs (r11 and older) don't provide compact list\n",
        "Line" : 100,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# clear ANDROID_SDK_TARGET if no target is provided by user\n",
        "Line" : 123,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# finds minimal installed SDK target compatible with provided names or API levels\n\n# usage:\n\n#   get_compatible_android_api_level(VARIABLE [level1] [level2] ...)\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#find minimal level mathing to all provided levels\n",
        "Line" : 141,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "#search for compatible levels\n",
        "Line" : 149,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "#look for exact match\n",
        "Line" : 153,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "#exact match was found\n",
        "Line" : 161,
        "CharPositionInLine" : 18
      },
      "14" : {
        "Text" : "# add_android_project(target_name ${path} NATIVE_DEPS opencv_core LIBRARY_DEPS ${OpenCV_BINARY_DIR} SDK_TARGET 11)\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# parse arguments\n",
        "Line" : 182,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# get compatible SDK target\n",
        "Line" : 201,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# check native dependencies\n",
        "Line" : 209,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# find if native_app_glue is used\n",
        "Line" : 217,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# get project sources\n",
        "Line" : 231,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# copy sources out from the build tree\n",
        "Line" : 238,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# process Android library dependencies\n",
        "Line" : 253,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# fix Android project\n",
        "Line" : 260,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# build native part\n",
        "Line" : 273,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# find local module name in Android.mk file to build native lib\n",
        "Line" : 278,
        "CharPositionInLine" : 6
      },
      "25" : {
        "Text" : "# build java part\n",
        "Line" : 307,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# needed because ant does not update the timestamp of updated apk\n",
        "Line" : 312,
        "CharPositionInLine" : 93
      },
      "27" : {
        "Text" : "# needed because ant does not update the timestamp of updated apk\n",
        "Line" : 320,
        "CharPositionInLine" : 93
      },
      "28" : {
        "Text" : "# as we are part of OpenCV we can just force this dependency\n",
        "Line" : 323,
        "CharPositionInLine" : 78
      },
      "29" : {
        "Text" : "# put the final .apk to the OpenCV's bin folder\n",
        "Line" : 355,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "#apk\n",
        "Line" : 358,
        "CharPositionInLine" : 6
      },
      "31" : {
        "Text" : "#java part\n",
        "Line" : 361,
        "CharPositionInLine" : 6
      },
      "32" : {
        "Text" : "#jni part + eclipse files\n",
        "Line" : 367,
        "CharPositionInLine" : 6
      },
      "33" : {
        "Text" : "#update proj\n",
        "Line" : 374,
        "CharPositionInLine" : 6
      },
      "34" : {
        "Text" : "#empty 'gen'\n",
        "Line" : 381,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 35
    },
    "ProgramData/SystemFiles/opencv/sources/cmake/OpenCVDetectApacheAnt.cmake" : {
      "ObjectId" : "7b7e9a6da9b47b8cbd1d99404bff5d111f736e6d",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/cmake/OpenCVDetectCStripes.cmake" : {
      "ObjectId" : "279a3399686eacf3874d444610b9343a64793c72",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/cmake/OpenCVDetectCUDA.cmake" : {
      "ObjectId" : "5789421a444f487fbbd4baad086d7903b80225df",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Ckeck if user specified 1.0 compute capability: we don't support it\n",
        "Line" : 108,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# NVCC flags to be set\n",
        "Line" : 115,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# These vars will be passed into the templates\n",
        "Line" : 118,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Tell NVCC to add binaries for the specified GPUs\n",
        "Line" : 123,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# User explicitly specified PTX for the concrete BIN\n",
        "Line" : 127,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# User didn't explicitly specify PTX for the concrete BIN, we assume PTX=BIN\n",
        "Line" : 132,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# Tell NVCC to add PTX intermediate code for the specified architectures\n",
        "Line" : 139,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# These vars will be processed in other scripts\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# we remove /EHa as it generates warnings under windows\n",
        "Line" : 169,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# we remove -ggdb3 flag as it leads to preprocessor errors when compiling CUDA files (CUDA 4.1)\n",
        "Line" : 172,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# we remove -Wsign-promo as it generates warnings under linux\n",
        "Line" : 175,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# we remove -Wno-sign-promo as it generates warnings under linux\n",
        "Line" : 178,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# we remove -Wno-delete-non-virtual-dtor because it's used for C++ compiler\n\n# but NVCC uses C compiler by default\n",
        "Line" : 181,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# we remove -frtti because it's used for C++ compiler\n\n# but NVCC uses C compiler by default\n",
        "Line" : 185,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# disabled because of multiple warnings during building nvcc auto generated files\n",
        "Line" : 203,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 15
    },
    "ProgramData/SystemFiles/opencv/sources/cmake/OpenCVDetectCXXCompiler.cmake" : {
      "ObjectId" : "49413467d0397970a814ad5a8505f2435cf5408f",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Detect Microsoft compiler:\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Detect Intel ICC compiler -- for -fPIC in 3rdparty ( UNIX ONLY ):\n\n#  see  include/opencv/cxtypes.h file for related   ICC & CV_ICC defines.\n\n# NOTE: The system needs to determine if the '-fPIC' option needs to be added\n\n#  for the 3rdparty static libs being compiled.  The CMakeLists.txt files\n\n#  in 3rdparty use the CV_ICC definition being set here to determine if\n\n#  the -fPIC flag should be used.\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Detect GNU version:\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Typical output in CMAKE_OPENCV_GCC_VERSION_FULL: \"c+//0 (whatever) 4.2.3 (...)\"\n\n# Look for the version number\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Split the three parts:\n",
        "Line" : 82,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Similar code exists in OpenCVConfig.cmake\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# look for global setting\n",
        "Line" : 119,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# see Modules/CmakeGenericSystem.cmake\n",
        "Line" : 131,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "ProgramData/SystemFiles/opencv/sources/cmake/OpenCVDetectDirectX.cmake" : {
      "ObjectId" : "9136986204e9e21596d6c0a494367aaf533b56f6",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/cmake/OpenCVDetectOpenCL.cmake" : {
      "ObjectId" : "67e10ede890225d4731f4267d34c5d3a2098e9ac",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/cmake/OpenCVDetectPython.cmake" : {
      "ObjectId" : "f883525c8063660820ed6e85499bfbb020ffeeac",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find specified Python version\n\n# Arguments:\n\n#   preferred_version (value): Version to check for first\n\n#   min_version (value): Minimum supported version\n\n#   library_env (value): Name of Python library ENV variable to check\n\n#   include_dir_env (value): Name of Python include directory ENV variable to check\n\n#   found (variable): Set if interpreter found\n\n#   executable (variable): Output of executable found\n\n#   version_string (variable): Output of found version\n\n#   version_major (variable): Output of found major version\n\n#   version_minor (variable): Output of found minor version\n\n#   libs_found (variable): Set if libs found\n\n#   libs_version_string (variable): Output of found libs version\n\n#   libraries (variable): Output of found Python libraries\n\n#   library (variable): Output of found Python library\n\n#   debug_libraries (variable): Output of found Python debug libraries\n\n#   debug_library (variable): Output of found Python debug library\n\n#   include_path (variable): Output of found Python include path\n\n#   include_dir (variable): Output of found Python include dir\n\n#   include_dir2 (variable): Output of found Python include dir2\n\n#   packages_path (variable): Output of found Python packages path\n\n#   numpy_include_dirs (variable): Output of found Python Numpy include dirs\n\n#   numpy_version (variable): Output of found Python Numpy version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# search for executable with the same bitness as resulting binaries\n\n# standard FindPythonInterp always prefers executable from system path\n\n# this is really important because we are using the interpreter for numpy search and for choosing the install location\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Copy outputs\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Clear find_host_package side effects\n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# not using _version_string here, because it might not conform to the CMake version format\n",
        "Line" : 85,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# builder version can differ from target, matching base version (e.g. 2.7)\n",
        "Line" : 87,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Copy outputs\n",
        "Line" : 94,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Clear find_host_package side effects\n",
        "Line" : 108,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "#debian based assumed, install to the dist-packages.\n",
        "Line" : 135,
        "CharPositionInLine" : 15
      },
      "9" : {
        "Text" : "# Attempt to discover the NumPy include directory. If this succeeds, then build python API with NumPy\n",
        "Line" : 171,
        "CharPositionInLine" : 10
      },
      "10" : {
        "Text" : "# Export return values\n",
        "Line" : 199,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Use Python 2 as default Python interpreter\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "ProgramData/SystemFiles/opencv/sources/cmake/OpenCVDetectTBB.cmake" : {
      "ObjectId" : "8ff78bb3d4b19890914c245074305216237f8920",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# get TBB version\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ProgramData/SystemFiles/opencv/sources/cmake/OpenCVDetectVTK.cmake" : {
      "ObjectId" : "2b55a9c3f1fbd9494cf7af3a13ce9dff292fb1f3",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# VTK 6.x components\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# VTK 5.x components\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Don't support ealier VTKs\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Different Qt versions can't be linked together\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Different Qt versions can't be linked together. VTK 6.0.0 doesn't provide a way to get Qt version it was linked with\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Different Qt versions can't be linked together\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "ProgramData/SystemFiles/opencv/sources/cmake/OpenCVExtraTargets.cmake" : {
      "ObjectId" : "ecb2a3b36a6b746b2f801bb7a59d75266b56940f",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n#   Uninstall target, for \"make uninstall\"\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# target building all OpenCV modules\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# targets building all tests\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "ProgramData/SystemFiles/opencv/sources/cmake/OpenCVFindIPP.cmake" : {
      "ObjectId" : "71001d9c6c3934dfc8e1f38cf7e4ba8307ff11a8",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# The script to detect Intel(R) Integrated Performance Primitives (IPP)\n\n# installation/package\n\n#\n\n# By default, ICV version will be used.\n\n# To use standalone IPP update cmake command line:\n\n# cmake ... -DIPPROOT=<path> ...\n\n#\n\n# Note: Backward compatibility is broken, IPPROOT environment path is ignored\n\n#\n\n#\n\n# On return this will define:\n\n#\n\n# HAVE_IPP          - True if Intel IPP found\n\n# HAVE_IPP_ICV_ONLY - True if Intel IPP ICV version is available\n\n# IPP_ROOT_DIR      - root of IPP installation\n\n# IPP_INCLUDE_DIRS  - IPP include folder\n\n# IPP_LIBRARIES     - IPP libraries that are used by OpenCV\n\n# IPP_VERSION_STR   - string with the newest detected IPP version\n\n# IPP_VERSION_MAJOR - numbers of IPP version (MAJOR.MINOR.BUILD)\n\n# IPP_VERSION_MINOR\n\n# IPP_VERSION_BUILD\n\n#\n\n# Created: 30 Dec 2010 by Vladimir Dudnik (vladimir.dudnik@intel.com)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This function detects IPP version by analyzing .h file\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# read IPP version info from file\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# extract info and assign to variables\n",
        "Line" : 66,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# export info to parent scope\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# This macro uses IPP_ROOT_DIR variable\n\n# TODO Cleanup code after ICV package stabilization\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# nothing\n",
        "Line" : 97,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# dynamic linking is only supported for standalone version of IPP\n",
        "Line" : 130,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# When using dynamic libraries from standalone IPP it is your responsibility to install those on the target system\n",
        "Line" : 140,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# CMake doesn't support \"install(TARGETS ${IPP_PREFIX}${name} \" command with imported targets\n",
        "Line" : 149,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# dynamic not threaded libs suffix IPP 7.x\n",
        "Line" : 164,
        "CharPositionInLine" : 30
      },
      "11" : {
        "Text" : "# static not threaded libs suffix IPP 7.x\n",
        "Line" : 166,
        "CharPositionInLine" : 30
      },
      "12" : {
        "Text" : "# dynamic not threaded libs suffix IPP 8.x for Windows\n",
        "Line" : 171,
        "CharPositionInLine" : 30
      },
      "13" : {
        "Text" : "# static not threaded libs suffix IPP 8.x for Windows\n",
        "Line" : 173,
        "CharPositionInLine" : 30
      },
      "14" : {
        "Text" : "# static not threaded libs suffix IPP 8.x for Linux/OS X\n",
        "Line" : 176,
        "CharPositionInLine" : 30
      },
      "15" : {
        "Text" : "#message(STATUS \"IPP libs: ${IPP_LIBRARIES}\")\n",
        "Line" : 227,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# OPENCV_IPP_PATH is an environment variable for internal usage only, do not use it\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Since IPP built with Microsoft compiler and /GS option\n\n# ======================================================\n\n# From Windows SDK 7.1\n\n#   (usually in \"C:\\Program Files\\Microsoft Visual Studio 10.0\\VC\\lib\"),\n\n# to avoid undefined reference to __security_cookie and _chkstk:\n",
        "Line" : 251,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# To avoid undefined reference to _alldiv and _chkstk\n\n# ===================================================\n\n# NB: it may require a recompilation of w32api (after having modified\n\n#     the file ntdll.def) to export the required functions\n\n#     See http://code.opencv.org/issues/1906 for additional details\n",
        "Line" : 259,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 19
    },
    "ProgramData/SystemFiles/opencv/sources/cmake/OpenCVFindIPPAsync.cmake" : {
      "ObjectId" : "6f4765cbc982e9a56695b7772d05e2579405f2f3",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Main variables:\n\n# IPP_A_LIBRARIES and IPP_A_INCLUDE to use IPP Async\n\n# HAVE_IPP_A for conditional compilation OpenCV with/without IPP Async\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# IPP_ASYNC_ROOT - root of IPP Async installation\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "ProgramData/SystemFiles/opencv/sources/cmake/OpenCVFindIntelPerCSDK.cmake" : {
      "ObjectId" : "7243105601933574bfb89db88a6e71facfb75b73",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Main variables:\n\n# INTELPERC_LIBRARIES and INTELPERC_INCLUDE to link Intel Perceptial Computing SDK modules\n\n# HAVE_INTELPERC for conditional compilation OpenCV with/without Intel Perceptial Computing SDK\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#if(INTELPERC_INCLUDE_DIR AND INTELPERC_LIBRARIES)\n",
        "Line" : 18,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "ProgramData/SystemFiles/opencv/sources/cmake/OpenCVFindLATEX.cmake" : {
      "ObjectId" : "fb324ce9b23be2d82bb6a9d0a6125e92ed030ec4",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find Latex\n\n# This module finds if Latex is installed and determines where the\n\n# executables are. This code sets the following variables:\n\n#\n\n#  LATEX_COMPILER:       path to the LaTeX compiler\n\n#  PDFLATEX_COMPILER:    path to the PdfLaTeX compiler\n\n#  BIBTEX_COMPILER:      path to the BibTeX compiler\n\n#  MAKEINDEX_COMPILER:   path to the MakeIndex compiler\n\n#  DVIPS_CONVERTER:      path to the DVIPS converter\n\n#  PS2PDF_CONVERTER:     path to the PS2PDF converter\n\n#  LATEX2HTML_CONVERTER: path to the LaTeX2Html converter\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Try to find the MikTex binary path (look for its package manager).\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Try to find the GhostScript binary path (look for gswin32).\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "ProgramData/SystemFiles/opencv/sources/cmake/OpenCVFindLibsGUI.cmake" : {
      "ObjectId" : "1c13619d59d3eacfa32989db1e9a85e265ace364",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n#  Detect 3rd-party GUI libraries\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#--- Win32 UI ---\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# --- QT4 ---\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# --- GTK ---\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# --- OpenGl ---\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# --- Carbon & Cocoa ---\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "ProgramData/SystemFiles/opencv/sources/cmake/OpenCVFindLibsGrfmt.cmake" : {
      "ObjectId" : "b5f38279e38b76c0ef9179ee07f3f52bf8ee887d",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n#  Detect 3rd-party image IO libraries\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --- zlib (required) ---\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# --- libtiff (optional, should be searched after zlib) ---\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# --- libjpeg (optional) ---\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# --- libwebp (optional) ---\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# --- Add libwebp to 3rdparty/libwebp and compile it if not available ---\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# --- libjasper (optional, should be searched after libjpeg) ---\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# --- libpng (optional, should be searched after zlib) ---\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# --- OpenEXR (optional) ---\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# --- GDAL (optional) ---\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "ProgramData/SystemFiles/opencv/sources/cmake/OpenCVFindLibsPerf.cmake" : {
      "ObjectId" : "bda5d792a39db6a920f8ba4dd954ae5e0dd4b291",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n#  Detect other 3rd-party performance and math libraries\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --- TBB ---\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# --- IPP ---\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# --- IPP Async ---\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# --- CUDA ---\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# --- Eigen ---\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# --- Clp ---\n\n# Ubuntu: sudo apt-get install coinor-libclp-dev coinor-libcoinutils-dev\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# --- C= ---\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# --- GCD ---\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# --- Concurrency ---\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# --- OpenMP ---\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "ProgramData/SystemFiles/opencv/sources/cmake/OpenCVFindLibsVideo.cmake" : {
      "ObjectId" : "279787a34d83e09d0a05a07171a17f7e27a92686",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n#  Detect 3rd-party video IO libraries\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --- GStreamer ---\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# try to find gstreamer 1.x first\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# if gstreamer 1.x was not found, or we specified we wanted 0.10, try to find it\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# --- unicap ---\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# --- PvApi ---\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# --- GigEVisionSDK ---\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# --- Dc1394 ---\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# --- xine ---\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# --- V4L ---\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# --- OpenNI ---\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# --- XIMEA ---\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# --- FFMPEG ---\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Find the bzip2 library because it is required on some systems\n",
        "Line" : 213,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# Do an other trial\n",
        "Line" : 216,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# --- VideoInput/DirectShow ---\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# always have VideoInput on Windows\n",
        "Line" : 272,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# --- VideoInput/Microsoft Media Foundation ---\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# --- Extra HighGUI and VideoIO libs on Windows ---\n",
        "Line" : 282,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# --- Apple AV Foundation ---\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# --- QuickTime ---\n",
        "Line" : 301,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# --- Intel Perceptual Computing SDK ---\n",
        "Line" : 310,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# --- gPhoto2 ---\n",
        "Line" : 315,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "ProgramData/SystemFiles/opencv/sources/cmake/OpenCVFindMatlab.cmake" : {
      "ObjectId" : "c4a174c3940dfbee583c339456946d5dbf1ba6a2",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ----- Find Matlab/Octave -----\n\n#\n\n# OpenCVFindMatlab.cmake attempts to locate the install path of Matlab in order\n\n# to extract the mex headers, libraries and shell scripts. If found\n\n# successfully, the following variables will be defined\n\n#\n\n#   MATLAB_FOUND:       true/false\n\n#   MATLAB_ROOT_DIR:    Root of Matlab installation\n\n#   MATLAB_BIN:         The main Matlab \"executable\" (shell script)\n\n#   MATLAB_MEX_SCRIPT:  The mex script used to compile mex files\n\n#   MATLAB_INCLUDE_DIRS:Path to \"mex.h\"\n\n#   MATLAB_LIBRARY_DIRS:Path to mex and matrix libraries\n\n#   MATLAB_LIBRARIES:   The Matlab libs, usually mx, mex, mat\n\n#   MATLAB_MEXEXT:      The mex library extension. It will be one of:\n\n#                         mexwin32, mexwin64,  mexglx, mexa64, mexmac,\n\n#                         mexmaci,  mexmaci64, mexsol, mexs64\n\n#   MATLAB_ARCH:        The installation architecture. It is **usually**\n\n#                       the MEXEXT with the preceding \"mex\" removed,\n\n#                       though it's different for linux distros.\n\n#\n\n# There doesn't appear to be an elegant way to detect all versions of Matlab\n\n# across different platforms. If you know the matlab path and want to avoid\n\n# the search, you can define the path to the Matlab root when invoking cmake:\n\n#\n\n#   cmake -DMATLAB_ROOT_DIR='/PATH/TO/ROOT_DIR' ..\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----- set_library_presuffix -----\n\n#\n\n# Matlab tends to use some non-standard prefixes and suffixes on its libraries.\n\n# For example, libmx.dll on Windows (Windows does not add prefixes) and\n\n# mkl.dylib on OS X (OS X uses \"lib\" prefixes).\n\n# On some versions of Windows the .dll suffix also appears to not be checked.\n\n#\n\n# This function modifies the library prefixes and suffixes used by\n\n# find_library when finding Matlab libraries. It does not affect scopes\n\n# outside of this file.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----- locate_matlab_root -----\n\n#\n\n# Attempt to find the path to the Matlab installation. If successful, sets\n\n# the absolute path in the variable MATLAB_ROOT_DIR\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# --- UNIX/APPLE ---\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# possible root locations, in order of likelihood\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# sort in order from highest to lowest\n\n# normally it's in the format MATLAB_R[20XX][A/B]\n\n# TODO: numerical rather than lexicographic sort. However,\n\n# CMake does not support floating-point MATH(EXPR ...) at this time.\n",
        "Line" : 67,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# --- WINDOWS ---\n",
        "Line" : 79,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# 1. search the path environment variable\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# get the root directory from the full path\n\n# /path/to/matlab/rootdir/bin/matlab.exe\n",
        "Line" : 84,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# 2. search the registry\n\n# determine the available Matlab versions\n",
        "Line" : 92,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# select the highest version\n",
        "Line" : 104,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# request the MATLABROOT from the registry\n",
        "Line" : 110,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# ----- locate_matlab_components -----\n\n#\n\n# Given a directory MATLAB_ROOT_DIR, attempt to find the Matlab components\n\n# (include directory and libraries) under the root. If everything is found,\n\n# sets the variable MATLAB_FOUND to TRUE\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# get the mex extension\n",
        "Line" : 129,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# map the mexext to an architecture extension\n",
        "Line" : 138,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# get the path to the libraries\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# get the libraries\n",
        "Line" : 150,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# get the include path\n",
        "Line" : 157,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# get the mex shell script\n",
        "Line" : 160,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# get the Matlab executable\n",
        "Line" : 163,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# export into parent scope\n",
        "Line" : 166,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# FIND MATLAB COMPONENTS\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# attempt to find the Matlab root folder\n",
        "Line" : 185,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# given the matlab root folder, find the library locations\n",
        "Line" : 190,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 24
    },
    "ProgramData/SystemFiles/opencv/sources/cmake/OpenCVFindOpenEXR.cmake" : {
      "ObjectId" : "c0a46806e1504ba1f91c80ff4ee593cac58e4fc8",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The script is taken from http://code.google.com/p/nvidia-texture-tools/\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Try to find OpenEXR's libraries, and include path.\n\n# Once done this will define:\n\n#\n\n# OPENEXR_FOUND = OpenEXR found.\n\n# OPENEXR_INCLUDE_PATHS = OpenEXR include directories.\n\n# OPENEXR_LIBRARIES = libraries that are needed to use OpenEXR.\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "ProgramData/SystemFiles/opencv/sources/cmake/OpenCVFindOpenNI.cmake" : {
      "ObjectId" : "754186894f5dc3b928214be6dd5ce644b5a10669",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Main variables:\n\n# OPENNI_LIBRARY and OPENNI_INCLUDES to link OpenCV modules with OpenNI\n\n# HAVE_OPENNI for conditional compilation OpenCV with/without OpenNI\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# the check: are PrimeSensor Modules for OpenNI installed\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#if(OPENNI_LIBRARY AND OPENNI_INCLUDES)\n",
        "Line" : 49,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 3
    },
    "ProgramData/SystemFiles/opencv/sources/cmake/OpenCVFindOpenNI2.cmake" : {
      "ObjectId" : "08e55e6a2b85670de741e89327d045f91fe1bd9b",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Main variables:\n\n# OPENNI2_LIBRARY and OPENNI2_INCLUDES to link OpenCV modules with OpenNI2\n\n# HAVE_OPENNI2 for conditional compilation OpenCV with/without OpenNI2\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#if(OPENNI2_LIBRARY AND OPENNI2_INCLUDES)\n",
        "Line" : 30,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "ProgramData/SystemFiles/opencv/sources/cmake/OpenCVFindWebP.cmake" : {
      "ObjectId" : "740e9851284fc0c17a8f7bfd6a0dd87dd167635f",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n# Find WebP library\n\n#=============================================================================\n\n# Find the native WebP headers and libraries.\n\n#\n\n#  WEBP_INCLUDE_DIRS - where to find webp/decode.h, etc.\n\n#  WEBP_LIBRARIES    - List of libraries when using webp.\n\n#  WEBP_FOUND        - True if webp is found.\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Look for the header file.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look for the library.\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set WEBFOUND_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 26,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "ProgramData/SystemFiles/opencv/sources/cmake/OpenCVFindXimea.cmake" : {
      "ObjectId" : "2d93292c197abb591016f400a614e04ffa4772fa",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find XIMEA\n\n# This module finds if XIMEA Software package is installed\n\n# and determines where the binaries and header files are.\n\n# This code sets the following variables:\n\n#\n\n#  XIMEA_FOUND          - True if XIMEA API found\n\n#  XIMEA_PATH:          - Path to the XIMEA API folder\n\n#  XIMEA_LIBRARY_DIR    - XIMEA libraries folder\n\n#\n\n# Created: 5 Aug 2011 by Marian Zajko (marian.zajko@ximea.com)\n\n# Updated: 25 June 2012 by Igor Kuzmin (parafin@ximea.com)\n\n# Updated: 22 October 2012 by Marian Zajko (marian.zajko@ximea.com)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Try to find the XIMEA API path in registry.\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# set LIB folders\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# set folders\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "ProgramData/SystemFiles/opencv/sources/cmake/OpenCVGenABI.cmake" : {
      "ObjectId" : "35cc10d8eda7ac2482b8c0404e17e90ceb88a455",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Headers\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Libraries\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# headers\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# libraries\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Options\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "ProgramData/SystemFiles/opencv/sources/cmake/OpenCVGenAndroidMK.cmake" : {
      "ObjectId" : "627d86016920c0487efdf5200fa7f05b296f6570",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# --------------------------------------------------------------------------------------------\n\n#  Installation for Android ndk-build makefile:  OpenCV.mk\n\n#  Part 1/2: ${BIN_DIR}/OpenCV.mk              -> For use *without* \"make install\"\n\n#  Part 2/2: ${BIN_DIR}/unix-install/OpenCV.mk -> For use with \"make install\"\n\n# -------------------------------------------------------------------------------------------\n",
        "Line" : 2,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# build type\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# build the list of opencv libs and dependencies for all modules\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# list -> string\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# replace 'opencv_<module>' -> '<module>''\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# prepare 3rd-party component list without TBB for armeabi and mips platforms. TBB is useless there.\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# -------------------------------------------------------------------------------------------\n\n#  Part 1/2: ${BIN_DIR}/OpenCV.mk              -> For use *without* \"make install\"\n\n# -------------------------------------------------------------------------------------------\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# -------------------------------------------------------------------------------------------\n\n#  Part 2/2: ${BIN_DIR}/unix-install/OpenCV.mk -> For use with \"make install\"\n\n# -------------------------------------------------------------------------------------------\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "ProgramData/SystemFiles/opencv/sources/cmake/OpenCVGenConfig.cmake" : {
      "ObjectId" : "ae8fc893993b2263197ad44125e1c850e6184419",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# --------------------------------------------------------------------------------------------\n\n#  Installation for CMake Module:  OpenCVConfig.cmake\n\n#  Part 1/3: ${BIN_DIR}/OpenCVConfig.cmake              -> For use *without* \"make install\"\n\n#  Part 2/3: ${BIN_DIR}/unix-install/OpenCVConfig.cmake -> For use with \"make install\"\n\n#  Part 3/3: ${BIN_DIR}/win-install/OpenCVConfig.cmake  -> For use within binary installers/packages\n\n# -------------------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#build list of modules available for the OpenCV user\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# -------------------------------------------------------------------------------------------\n\n#  Part 1/3: ${BIN_DIR}/OpenCVConfig.cmake              -> For use *without* \"make install\"\n\n# -------------------------------------------------------------------------------------------\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#export TBB headers location because static linkage of TBB might be troublesome if application wants to use TBB itself\n",
        "Line" : 73,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# the REPLACE here is needed, because OpenCVModules_armeabi.cmake includes\n\n# OpenCVModules_armeabi-*.cmake, which would match OpenCVModules_armeabi-v7a*.cmake.\n",
        "Line" : 79,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#support for version checking when finding opencv. find_package(OpenCV 2.3.1 EXACT) should now work.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# --------------------------------------------------------------------------------------------\n\n#  Part 2/3: ${BIN_DIR}/unix-install/OpenCVConfig.cmake -> For use *with* \"make install\"\n\n# -------------------------------------------------------------------------------------------\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# ANDROID configuration is created here also\n",
        "Line" : 106,
        "CharPositionInLine" : 9
      },
      "8" : {
        "Text" : "#http://www.vtk.org/Wiki/CMake/Tutorials/Packaging reference\n\n# For a command \"find_package(<name> [major[.minor]] [EXACT] [REQUIRED|QUIET])\"\n\n# cmake will look in the following dir on unix:\n\n#                <prefix>/(share|lib)/cmake/<name>*/                     (U)\n\n#                <prefix>/(share|lib)/<name>*/                           (U)\n\n#                <prefix>/(share|lib)/<name>*/(cmake|CMake)/             (U)\n",
        "Line" : 107,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# --------------------------------------------------------------------------------------------\n\n#  Part 3/3: ${BIN_DIR}/win-install/OpenCVConfig.cmake  -> For use within binary installers/packages\n\n# --------------------------------------------------------------------------------------------\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "ProgramData/SystemFiles/opencv/sources/cmake/OpenCVGenHeaders.cmake" : {
      "ObjectId" : "2988979045352a3671bd3c3b873a1f9988a37dd5",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# platform-specific config file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n#  opencv_modules.hpp based on actual modules list\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#set(OPENCV_MOD_LIST ${OPENCV_MODULES_DISABLED_USER} ${OPENCV_MODULES_DISABLED_AUTO} ${OPENCV_MODULES_DISABLED_FORCE})\n\n#ocv_list_sort(OPENCV_MOD_LIST)\n\n#foreach(m ${OPENCV_MOD_LIST})\n\n#  string(TOUPPER \"${m}\" m)\n\n#  set(OPENCV_MODULE_DEFINITIONS_CONFIGMAKE \"${OPENCV_MODULE_DEFINITIONS_CONFIGMAKE}#undef HAVE_${m}\\n\")\n\n#endforeach()\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "ProgramData/SystemFiles/opencv/sources/cmake/OpenCVGenInfoPlist.cmake" : {
      "ObjectId" : "680afb2df42e9b02d7e3aefaf77fea573b92aac1",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/cmake/OpenCVGenPkgconfig.cmake" : {
      "ObjectId" : "28a6da686e1d0381d8dc0aac48feb1a4272f92bf",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# --------------------------------------------------------------------------------------------\n\n# according to man pkg-config\n\n#  The package name specified on the pkg-config command line is defined to\n\n#      be the name of the metadata file, minus the .pc extension. If a library\n\n#      can install multiple versions simultaneously, it must give each version\n\n#      its own name (for example, GTK 1.2 might have the package  name  \"gtk+\"\n\n#      while GTK 2.0 has \"gtk+-2.0\").\n\n#\n\n# ${BIN_DIR}/unix-install/opencv.pc -> For use *with* \"make install\"\n\n# -------------------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# build the list of opencv libs and dependencies for all modules\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#build the list of components\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Note:\n\n#   when linking against static libraries, if libfoo depends on libbar, then\n\n#   libfoo must come first in the linker flags.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# world and contrib_world are special targets whose library should come first,\n\n# especially for static link.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#generate the .pc file\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "ProgramData/SystemFiles/opencv/sources/cmake/OpenCVMinDepVersions.cmake" : {
      "ObjectId" : "e8591e26e2277bb58975d0d7f38f2531233de6dc",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/cmake/OpenCVModule.cmake" : {
      "ObjectId" : "a1a1b902028a5b0b5c57f41eab0addbffa0a3b51",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Local variables (set for each module):\n\n#\n\n# name       - short name in lower case i.e. core\n\n# the_module - full name in lower case i.e. opencv_core\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Global variables:\n\n#\n\n# OPENCV_MODULE_${the_module}_LOCATION\n\n# OPENCV_MODULE_${the_module}_BINARY_DIR\n\n# OPENCV_MODULE_${the_module}_DESCRIPTION\n\n# OPENCV_MODULE_${the_module}_CLASS - PUBLIC|INTERNAL|BINDINGS\n\n# OPENCV_MODULE_${the_module}_HEADERS\n\n# OPENCV_MODULE_${the_module}_SOURCES\n\n# OPENCV_MODULE_${the_module}_DEPS - final flattened set of module dependencies\n\n# OPENCV_MODULE_${the_module}_DEPS_TO_LINK - differs from above for world build only\n\n# OPENCV_MODULE_${the_module}_DEPS_EXT - non-module dependencies\n\n# OPENCV_MODULE_${the_module}_REQ_DEPS\n\n# OPENCV_MODULE_${the_module}_OPT_DEPS\n\n# OPENCV_MODULE_${the_module}_PRIVATE_REQ_DEPS\n\n# OPENCV_MODULE_${the_module}_PRIVATE_OPT_DEPS\n\n# OPENCV_MODULE_${the_module}_IS_PART_OF_WORLD\n\n# OPENCV_MODULE_${the_module}_CUDA_OBJECTS - compiled CUDA objects list\n\n# OPENCV_MODULE_${the_module}_CHILDREN - list of submodules for compound modules (cmake >= 2.8.8)\n\n# OPENCV_MODULE_${the_module}_WRAPPERS - list of wrappers supporting this module\n\n# HAVE_${the_module} - for fast check of module availability\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# To control the setup of the module you could also set:\n\n# the_description - text to be used as current module description\n\n# OPENCV_MODULE_TYPE - STATIC|SHARED - set to force override global settings for current module\n\n# OPENCV_MODULE_IS_PART_OF_WORLD - ON|OFF (default ON) - should the module be added to the opencv_world?\n\n# BUILD_${the_module}_INIT - ON|OFF (default ON) - initial value for BUILD_${the_module}\n\n# OPENCV_MODULE_CHILDREN - list of submodules\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The verbose template for OpenCV module:\n\n#\n\n#   ocv_add_module(modname <dependencies>)\n\n#   ocv_glob_module_sources(([EXCLUDE_CUDA] <extra sources&headers>)\n\n#                          or glob them manually and ocv_set_module_sources(...)\n\n#   ocv_module_include_directories(<extra include directories>)\n\n#   ocv_create_module()\n\n#   <add extra link dependencies, compiler options, etc>\n\n#   ocv_add_precompiled_headers(${the_module})\n\n#   <add extra installation rules>\n\n#   ocv_add_accuracy_tests(<extra dependencies>)\n\n#   ocv_add_perf_tests(<extra dependencies>)\n\n#   ocv_add_samples(<extra dependencies>)\n\n#\n\n#\n\n# If module have no \"extra\" then you can define it in one line:\n\n#\n\n#   ocv_define_module(modname <dependencies>)\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# clean flags for modules enabled on previous cmake run\n\n# this is necessary to correctly handle modules removal\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# clean modules info which needs to be recalculated\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# adds dependencies to OpenCV module\n\n# Usage:\n\n#   add_dependencies(opencv_<name> [REQUIRED] [<list of dependencies>] [OPTIONAL <list of modules>] [WRAP <list of wrappers>])\n\n# Notes:\n\n# * <list of dependencies> - can include full names of modules or full pathes to shared/static libraries or cmake targets\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#we don't clean the dependencies here to allow this macro several times for every module\n",
        "Line" : 82,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# hack for python\n",
        "Line" : 100,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# declare new OpenCV module in current folder\n\n# Usage:\n\n#   ocv_add_module(<name> [INTERNAL|BINDINGS] [REQUIRED] [<list of dependencies>] [OPTIONAL <list of optional dependencies>] [WRAP <list of wrappers>])\n\n# Example:\n\n#   ocv_add_module(yaom INTERNAL opencv_core opencv_highgui opencv_flann OPTIONAL opencv_cudev)\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# the first pass - collect modules info, the second pass - create targets\n",
        "Line" : 137,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "#guard agains redefinition\n",
        "Line" : 139,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# create option to enable/disable this module\n",
        "Line" : 155,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# remember the module details\n",
        "Line" : 158,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# parse list of dependencies\n",
        "Line" : 164,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# add HAL as dependency\n",
        "Line" : 179,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# add self to the world dependencies\n",
        "Line" : 184,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# add submodules if any\n",
        "Line" : 202,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# add reverse wrapper dependencies\n",
        "Line" : 205,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# stop processing of current file\n",
        "Line" : 210,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# extra protection from redefinition\n",
        "Line" : 215,
        "CharPositionInLine" : 15
      },
      "21" : {
        "Text" : "# excludes module from current configuration\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# touch variable controlling build of the module to suppress \"unused variable\" CMake warning\n",
        "Line" : 234,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# leave the current folder\n",
        "Line" : 237,
        "CharPositionInLine" : 11
      },
      "24" : {
        "Text" : "# collect modules from specified directories\n\n# NB: must be called only once!\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# collect modules\n",
        "Line" : 249,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# resolve dependencies\n",
        "Line" : 284,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# create modules\n",
        "Line" : 287,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# disables OpenCV module with missing dependencies\n",
        "Line" : 319,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# sort modules by dependencies\n",
        "Line" : 332,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# check if module is in the result already\n",
        "Line" : 340,
        "CharPositionInLine" : 6
      },
      "31" : {
        "Text" : "# scan through module dependencies...\n",
        "Line" : 342,
        "CharPositionInLine" : 8
      },
      "32" : {
        "Text" : "# ... which are not already in the result and are enabled\n",
        "Line" : 345,
        "CharPositionInLine" : 10
      },
      "33" : {
        "Text" : "# chek if all dependencies for this module has been resolved\n",
        "Line" : 351,
        "CharPositionInLine" : 8
      },
      "34" : {
        "Text" : "# check for infinite loop or unresolved dependencies\n",
        "Line" : 359,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# resolve dependensies\n",
        "Line" : 373,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# disable MODULES with unresolved dependencies\n",
        "Line" : 382,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# TODO Remove this condition in the future and use HAVE_ variables only\n",
        "Line" : 392,
        "CharPositionInLine" : 35
      },
      "38" : {
        "Text" : "#  message(STATUS \"List of active modules: ${OPENCV_MODULES_BUILD}\")\n",
        "Line" : 405,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#    message(STATUS \"Initial deps of ${m} (w/o private deps): ${deps_${m}}\")\n",
        "Line" : 416,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# propagate dependencies\n",
        "Line" : 419,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# transfer deps of m2 to m\n",
        "Line" : 423,
        "CharPositionInLine" : 40
      },
      "42" : {
        "Text" : "#              message(STATUS \"  Transfer dependency ${d} from ${m2} to ${m}\")\n",
        "Line" : 428,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# process private deps\n",
        "Line" : 438,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "#    message(STATUS \"FULL deps of ${m}: ${deps_${m}}\")\n",
        "Line" : 457,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# reorder dependencies\n",
        "Line" : 466,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "# process world\n",
        "Line" : 473,
        "CharPositionInLine" : 4
      },
      "47" : {
        "Text" : "#    message(STATUS \"  module deps of ${m}: ${OPENCV_MODULE_${m}_DEPS}\")\n\n#    message(STATUS \"  module link deps of ${m}: ${OPENCV_MODULE_${m}_DEPS_TO_LINK}\")\n\n#    message(STATUS \"  extra deps of ${m}: ${OPENCV_MODULE_${m}_DEPS_EXT}\")\n\n#    message(STATUS \"\")\n",
        "Line" : 497,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# setup include paths for the list of passed modules\n",
        "Line" : 512,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# same as previous but with dependencies\n",
        "Line" : 525,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# setup include paths for the list of passed modules\n",
        "Line" : 537,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# setup include paths for the list of passed modules and recursively add dependent modules\n",
        "Line" : 550,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# setup include path for OpenCV headers for specified module\n\n# ocv_module_include_directories(<extra include directories/extra include modules>)\n",
        "Line" : 566,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# for precompiled headers\n",
        "Line" : 572,
        "CharPositionInLine" : 36
      },
      "54" : {
        "Text" : "# sets header and source files for the current module\n\n# NB: all files specified as headers will be installed\n\n# Usage:\n\n# ocv_set_module_sources([HEADERS] <list of files> [SOURCES] <list of files>)\n",
        "Line" : 578,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# the hacky way to embeed any files into the OpenCV without modification of its build system\n",
        "Line" : 596,
        "CharPositionInLine" : 2
      },
      "56" : {
        "Text" : "# use full paths for module to be independent from the module location\n",
        "Line" : 601,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "# finds and sets headers and sources for the standard OpenCV module\n\n# Usage:\n\n# ocv_glob_module_sources([EXCLUDE_CUDA] <extra sources&headers in the same format as used in ocv_set_module_sources>)\n",
        "Line" : 608,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# creates OpenCV module in current folder\n\n# creates new target, configures standard dependencies, compilers flags, install rules\n\n# Usage:\n\n#   ocv_create_module(<extra link dependencies>)\n\n#   ocv_create_module()\n",
        "Line" : 676,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# nothing\n",
        "Line" : 685,
        "CharPositionInLine" : 4
      },
      "60" : {
        "Text" : "# The condition we ought to be testing here is whether ocv_add_precompiled_headers will\n\n# be called at some point in the future. We can't look into the future, though,\n\n# so this will have to do.\n",
        "Line" : 694,
        "CharPositionInLine" : 2
      },
      "61" : {
        "Text" : "# TODO: is it needed?\n",
        "Line" : 727,
        "CharPositionInLine" : 2
      },
      "62" : {
        "Text" : "# For dynamic link numbering convenions\n",
        "Line" : 760,
        "CharPositionInLine" : 2
      },
      "63" : {
        "Text" : "# Android SDK build scripts can include only .so files into final .apk\n\n# As result we should not set version properties for Android\n",
        "Line" : 762,
        "CharPositionInLine" : 4
      },
      "64" : {
        "Text" : "# only \"public\" headers need to be installed\n",
        "Line" : 795,
        "CharPositionInLine" : 4
      },
      "65" : {
        "Text" : "# copy COMPILE_DEFINITIONS\n",
        "Line" : 809,
        "CharPositionInLine" : 4
      },
      "66" : {
        "Text" : "# use same PCH\n",
        "Line" : 814,
        "CharPositionInLine" : 4
      },
      "67" : {
        "Text" : "# opencv precompiled headers macro (can add pch to modules and tests)\n\n# this macro must be called after any \"add_definitions\" commands, otherwise precompiled headers will not work\n\n# Usage:\n\n# ocv_add_precompiled_headers(${the_module})\n",
        "Line" : 821,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# short command for adding simple OpenCV module\n\n# see ocv_add_module for argument details\n\n# Usage:\n\n# ocv_define_module(module_name  [INTERNAL] [EXCLUDE_CUDA] [REQUIRED] [<list of dependencies>] [OPTIONAL <list of optional dependencies>] [WRAP <list of wrappers>])\n",
        "Line" : 839,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# ensures that all passed modules are available\n\n# sets OCV_DEPENDENCIES_FOUND variable to TRUE/FALSE\n",
        "Line" : 864,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# auxiliary macro to parse arguments of ocv_add_accuracy_tests and ocv_add_perf_tests commands\n",
        "Line" : 876,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# spaces to avoid CMP0054\n",
        "Line" : 893,
        "CharPositionInLine" : 90
      },
      "72" : {
        "Text" : "# this is a command for adding OpenCV performance tests to the module\n\n# ocv_add_perf_tests(<extra_dependencies>)\n",
        "Line" : 904,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# opencv_imgcodecs is required for imread/imwrite\n",
        "Line" : 913,
        "CharPositionInLine" : 4
      },
      "74" : {
        "Text" : "# project(${the_target})\n",
        "Line" : 919,
        "CharPositionInLine" : 6
      },
      "75" : {
        "Text" : "# Additional target properties\n",
        "Line" : 938,
        "CharPositionInLine" : 6
      },
      "76" : {
        "Text" : "# TODO: warn about unsatisfied dependencies\n",
        "Line" : 952,
        "CharPositionInLine" : 6
      },
      "77" : {
        "Text" : "# this is a command for adding OpenCV accuracy/regression tests to the module\n\n# ocv_add_accuracy_tests([FILES <source group name> <list of sources>] [DEPENDS_ON] <list of extra dependencies>)\n",
        "Line" : 960,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# opencv_imgcodecs is required for imread/imwrite\n",
        "Line" : 969,
        "CharPositionInLine" : 4
      },
      "79" : {
        "Text" : "# project(${the_target})\n",
        "Line" : 974,
        "CharPositionInLine" : 6
      },
      "80" : {
        "Text" : "# Additional target properties\n",
        "Line" : 993,
        "CharPositionInLine" : 6
      },
      "81" : {
        "Text" : "# TODO: warn about unsatisfied dependencies\n",
        "Line" : 1011,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 82
    },
    "ProgramData/SystemFiles/opencv/sources/cmake/OpenCVPCHSupport.cmake" : {
      "ObjectId" : "e5fb90e6ffee1eaa5ceea5923c09efee44e7d5ff",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# taken from http://public.kitware.com/Bug/view.php?id=1260 and slightly adjusted\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Try to find precompiled headers support for GCC 3.4 and 4.x\n\n# Once done this will define:\n\n#\n\n# Variable:\n\n#   PCHSupport_FOUND\n\n#\n\n# Macro:\n\n#   ADD_PRECOMPILED_HEADER  _targetName _input  _dowarn\n\n#   ADD_PRECOMPILED_HEADER_TO_TARGET _targetName _input _pch_output_to_use _dowarn\n\n#   ADD_NATIVE_PRECOMPILED_HEADER _targetName _input _dowarn\n\n#   GET_NATIVE_PRECOMPILED_HEADER _targetName _input\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#MESSAGE(\"GCC Version: ${gcc_compiler_version}\")\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "## TODO ... ? or does it work out of the box\n",
        "Line" : 59,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "#MESSAGE(\"_directory_flags ${_directory_flags} ${_global_definitions}\" )\n",
        "Line" : 82,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# remove leading space in compiler argument\n",
        "Line" : 128,
        "CharPositionInLine" : 12
      },
      "6" : {
        "Text" : "#/out:${_output}\n",
        "Line" : 147,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# for use with distcc and gcc >4.0.1 if preprocessed files are accessible\n\n# on all remote machines set\n\n# PCH_ADDITIONAL_COMPILER_FLAGS to -fpch-preprocess\n\n# if you want warnings for invalid header files (which is very inconvenient\n\n# if you have different versions of the headers for different build types\n\n# you may set _pch_dowarn\n",
        "Line" : 159,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# to do: test whether compiler flags match between target  _targetName\n\n# and _pch_output_to_use\n",
        "Line" : 191,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#MESSAGE(\"Add flags ${_target_cflags} to ${_targetName} \" )\n",
        "Line" : 202,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "#MESSAGE(\"_compile_FLAGS: ${_compile_FLAGS}\")\n\n#message(\"COMMAND ${CMAKE_CXX_COMPILER}\t${_compile_FLAGS} -x c++-header -o ${_output} ${_input}\")\n",
        "Line" : 269,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# ensure same directory! Required by gcc\n",
        "Line" : 274,
        "CharPositionInLine" : 91
      },
      "12" : {
        "Text" : "#message(\"_command  ${_input} ${_output}\")\n",
        "Line" : 278,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Generates the use of precompiled in a target,\n\n# without using depency targets (2 extra for each target)\n\n# Using Visual, must also add ${_targetName}_pch to sources\n\n# Not needed by Xcode\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Check if contents is the same, if not rewrite\n\n# todo\n",
        "Line" : 308,
        "CharPositionInLine" : 12
      },
      "15" : {
        "Text" : "# Auto include the precompile (useful for moc processing, since the use of\n\n# precompiled is specified at the target level\n\n# and I don't want to specifiy /F- for each moc/res/ui generated files (using Qt)\n",
        "Line" : 328,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "#also inlude ${oldProps} to have the same compile options\n",
        "Line" : 340,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# For Xcode, cmake needs my patch to process\n\n# GCC_PREFIX_HEADER and GCC_PRECOMPILE_PREFIX_HEADER as target properties\n",
        "Line" : 345,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# When buiding out of the tree, precompiled may not be located\n\n# Use full path instead.\n",
        "Line" : 348,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "#Fallback to the \"old\" precompiled suppport\n\n#ADD_PRECOMPILED_HEADER(${_targetName} ${_input} ${_dowarn})\n",
        "Line" : 357,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 20
    },
    "ProgramData/SystemFiles/opencv/sources/cmake/OpenCVPackaging.cmake" : {
      "ObjectId" : "59d602c5d254f8f9e31ad4349e4c8a3df9afdc08",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#arch\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#rpm options\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#deb options\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#display names\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#depencencies\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "ProgramData/SystemFiles/opencv/sources/cmake/OpenCVUtils.cmake" : {
      "ObjectId" : "3e2ea8a7a472481767cf370c4c9b32ef6bff11b2",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Debugging function\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Search packages for host system instead of packages for target system\n\n# in case of cross compilation thess macro should be defined by toolchain file\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# assert macro\n\n# Note: it doesn't support lists in arguments\n\n# Usage samples:\n\n#   ocv_assert(MyLib_FOUND)\n\n#   ocv_assert(DEFINED MyLib_INCLUDE_DIRS)\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#  string(REPLACE \";\" \" \" __msg \"${ARGN}\")\n\n#  message(STATUS \"${__msg}\")\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Assume that we receive paths\n",
        "Line" : 54,
        "CharPositionInLine" : 47
      },
      "5" : {
        "Text" : "# rename modules target to world if needed\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# adds include directories in such way that directories from the OpenCV source tree go first\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# adds include directories in such way that directories from the OpenCV source tree go first\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# clears all passed variables\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# GNU\n",
        "Line" : 117,
        "CharPositionInLine" : 65
      },
      "10" : {
        "Text" : "# GNU\n",
        "Line" : 118,
        "CharPositionInLine" : 59
      },
      "11" : {
        "Text" : "# GNU\n\n# Clang\n\n# MSVC\n\n# MSVC, any lang\n\n# Intel\n\n# HP\n\n# SunPro\n\n# XL\n",
        "Line" : 119,
        "CharPositionInLine" : 48
      },
      "12" : {
        "Text" : "# AIX\n",
        "Line" : 127,
        "CharPositionInLine" : 57
      },
      "13" : {
        "Text" : "# PGI\n\n# Open64\n",
        "Line" : 128,
        "CharPositionInLine" : 48
      },
      "14" : {
        "Text" : "# turns off warnings\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Provides an option that the user can optionally select.\n\n# Can accept condition to control when option is available for user.\n\n# Usage:\n\n#   option(<option_variable> \"help string describing the option\" <initial value or boolean expression> [IF <condition>])\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Macros that checks if module have been installed.\n\n# After it adds module to build and define\n\n# constants passed as second arg\n",
        "Line" : 307,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Status report function.\n\n# Automatically align right column and selects text based on condition.\n\n# Usage:\n\n#   status(<text>)\n\n#   status(<heading> <value1> [<value2> ...])\n\n#   status(<heading> <condition> THEN <text for TRUE> ELSE <text for FALSE> )\n",
        "Line" : 362,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# remove all matching elements from the list\n",
        "Line" : 418,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# stable & safe duplicates removal macro\n",
        "Line" : 428,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# safe list reversal macro\n",
        "Line" : 436,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# safe list sorting macro\n",
        "Line" : 444,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# add prefix to each item in the list\n",
        "Line" : 452,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# add suffix to each item in the list\n",
        "Line" : 463,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# gets and removes the first element from list\n",
        "Line" : 474,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# simple regex escaping routine (does not cover all cases!!!)\n",
        "Line" : 485,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# convert list of paths to full paths\n",
        "Line" : 491,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# convert list of paths to libraries names without lib prefix\n",
        "Line" : 505,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# add install command\n",
        "Line" : 519,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#      message(STATUS \"Process ${__target} dst=${__dst}...\")\n",
        "Line" : 566,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# CMake 2.8.12 brokes PDB support in STATIC libraries for MSVS\n",
        "Line" : 581,
        "CharPositionInLine" : 10
      },
      "31" : {
        "Text" : "# read set of version defines from the header file\n",
        "Line" : 589,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# read single version define from the header file\n",
        "Line" : 630,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# append a TWEAK version if it exists:\n",
        "Line" : 652,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# read single version info from the pkg file\n",
        "Line" : 665,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "################################################################################################\n\n# short command to setup source group\n",
        "Line" : 673,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# add '/'\n",
        "Line" : 701,
        "CharPositionInLine" : 33
      },
      "37" : {
        "Text" : "# process world\n",
        "Line" : 715,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# Add OBJECT library (added in cmake 2.8.8) to use in compound modules\n",
        "Line" : 766,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "# build the list of opencv libs and dependencies for all modules\n\n#  _modules - variable to hold list of all modules\n\n#  _extra - variable to hold list of extra dependencies\n\n#  _3rdparty - variable to hold list of prebuilt 3rdparty libraries\n",
        "Line" : 789,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# ippicv specific handling\n",
        "Line" : 819,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# split 3rdparty libs and modules\n",
        "Line" : 826,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# convert CMake lists to makefile literals\n",
        "Line" : 829,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 43
    },
    "ProgramData/SystemFiles/opencv/sources/cmake/OpenCVVersion.cmake" : {
      "ObjectId" : "60ac16420a0937fe95e2a3dc9bdc0f2286ad2d85",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# create a dependency on version file\n\n# we never use output of the following command but cmake will rerun automatically if the version file changes\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ProgramData/SystemFiles/opencv/sources/cmake/cl2cpp.cmake" : {
      "ObjectId" : "700f12fb5ca8cc8ac6352444a83d6475c0f4968d",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#message(\"${cl_filename}\")\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# multiline comments\n\n# single-line comments\n\n# single-line comments\n\n# empty lines & leading whitespace\n\n# leading new line\n",
        "Line" : 52,
        "CharPositionInLine" : 79
      },
      "2" : {
        "Text" : "# unneeded \" at the eof\n",
        "Line" : 62,
        "CharPositionInLine" : 50
      },
      "CommentCount" : 3
    },
    "ProgramData/SystemFiles/opencv/sources/cmake/copyAndroidLibs.cmake" : {
      "ObjectId" : "4e9e17f4c19fe579098bc0d4f2695b5390bd5306",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# helper file for Android samples build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ProgramData/SystemFiles/opencv/sources/data/CMakeLists.txt" : {
      "ObjectId" : "1f0d7200844152d7ca33b256d72d987e7e0371ce",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/doc/CMakeLists.txt" : {
      "ObjectId" : "bb17f7fe1162ff76a8838665411c286b063c6747",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------\n\n#  CMake file for OpenCV docs\n\n#-----------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# build lists of modules to be documented\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# ========= Doxygen docs =========\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# not documented modules list\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# gathering headers\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# include folder\n",
        "Line" : 50,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# doc folder\n",
        "Line" : 56,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# sample folder\n",
        "Line" : 62,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# tutorial folder\n",
        "Line" : 68,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# BiBTeX file\n",
        "Line" : 74,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# Reference entry\n",
        "Line" : 80,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "#   set(one_ref \"@ref ${m} | ${m}\\n\")\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# fix references\n\n# set(ref_header \"Module name | Folder\\n----------- | ------\")\n\n# if(refs_main)\n\n#    set(refs_main \"### Main modules\\n${ref_header}\\n${refs_main}\")\n\n# endif()\n\n# if(refs_extra)\n\n#   set(refs_extra \"### Extra modules\\n${ref_header}\\n${refs_extra}\")\n\n# endif()\n",
        "Line" : 92,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# additional config\n",
        "Line" : 107,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# set export variables\n",
        "Line" : 116,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# TODO: remove paths_doc from EXAMPLE_PATH after face module tutorials/samples moved to separate folders\n",
        "Line" : 119,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# writing file\n",
        "Line" : 145,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 17
    },
    "ProgramData/SystemFiles/opencv/sources/include/CMakeLists.txt" : {
      "ObjectId" : "b4e48e6fa7f0134e206ff31384517251e9efef85",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/modules/CMakeLists.txt" : {
      "ObjectId" : "2c6c34304e81032ef2685b2d6fefd244ff2e27f5",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/modules/calib3d/CMakeLists.txt" : {
      "ObjectId" : "b79944da590413524bd77da1fef8163cefc7a8ee",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/modules/core/CMakeLists.txt" : {
      "ObjectId" : "c45760c654072e154b032ed309a8b6f8adb24f81",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/modules/cudaarithm/CMakeLists.txt" : {
      "ObjectId" : "29155560ef6097323e4c77f694123c256c5e9ad8",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/modules/cudabgsegm/CMakeLists.txt" : {
      "ObjectId" : "c60fdd07696e58b006a161ae0f6c1218c11926ee",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/modules/cudacodec/CMakeLists.txt" : {
      "ObjectId" : "f2e955b6cd7f737cc83d2570ed1f1146291b664f",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/modules/cudafeatures2d/CMakeLists.txt" : {
      "ObjectId" : "af1945a250a06d9e533f5db56da150711720c0df",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/modules/cudafilters/CMakeLists.txt" : {
      "ObjectId" : "04f2d19212eb6346dadec72fa8ab15cb334c6122",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/modules/cudaimgproc/CMakeLists.txt" : {
      "ObjectId" : "84ee2f91bac3a2aa5d84426bca48e8e2c33d5215",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/modules/cudalegacy/CMakeLists.txt" : {
      "ObjectId" : "7fe342e11cb0ad6fbcd6eada6ca8a029d79c1d11",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/modules/cudaobjdetect/CMakeLists.txt" : {
      "ObjectId" : "351f6e87b45d234058b8e3a559c6e1eb5af2d19b",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/modules/cudaoptflow/CMakeLists.txt" : {
      "ObjectId" : "5db2b096c2d297324e21e94b1cedee1988894567",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/modules/cudastereo/CMakeLists.txt" : {
      "ObjectId" : "982609b82f5ea158e80088f88fb580c685e8daf0",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/modules/cudawarping/CMakeLists.txt" : {
      "ObjectId" : "5d0fa4ad9340099e8a0bc7bde391a5a9e1b36f36",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/modules/cudev/CMakeLists.txt" : {
      "ObjectId" : "c5520b1e69cbbe27c60a4a0661fd728dee4fa57d",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/modules/cudev/test/CMakeLists.txt" : {
      "ObjectId" : "89213e236dd98049504fde0aaa01f3526d0c794b",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# we remove /EHa as it generates warnings under windows\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# we remove -ggdb3 flag as it leads to preprocessor errors when compiling CUDA files (CUDA 4.1)\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# we remove -Wsign-promo as it generates warnings under linux\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# we remove -fvisibility-inlines-hidden because it's used for C++ compiler\n\n# but NVCC uses C compiler by default\n",
        "Line" : 26,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Additional target properties\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "ProgramData/SystemFiles/opencv/sources/modules/features2d/CMakeLists.txt" : {
      "ObjectId" : "bf7d66e4332ecf1550dc6e4edce818c880fee9e2",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/modules/flann/CMakeLists.txt" : {
      "ObjectId" : "78e041129b942881a3f6b97dbacdfed7466db468",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/modules/hal/CMakeLists.txt" : {
      "ObjectId" : "b5b2abb81e67848576d017f920531ea54c42a6c8",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set(OPENCV_MODULE_IS_PART_OF_WORLD FALSE)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ProgramData/SystemFiles/opencv/sources/modules/highgui/CMakeLists.txt" : {
      "ObjectId" : "0b7f8fe526a67c42c2672ac8624b9f050bd32a7b",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n#  CMake file for highgui. See root CMakeLists.txt\n\n#   Some parts taken from version of Hartmut Seichter, HIT Lab NZ.\n\n#   Jose Luis Blanco, 2008\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compilation with /ZW is not allowed for *.c files\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#these variables are set by CHECK_MODULE macro\n",
        "Line" : 87,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#stop automatic dependencies propagation for this module\n",
        "Line" : 118,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "ProgramData/SystemFiles/opencv/sources/modules/imgcodecs/CMakeLists.txt" : {
      "ObjectId" : "6d565217a03cda38a217d9aca99d41b498c5bee6",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n#  CMake file for imgcodecs. See root CMakeLists.txt\n\n#   Some parts taken from version of Hartmut Seichter, HIT Lab NZ.\n\n#   Jose Luis Blanco, 2008\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#these variables are set by CHECK_MODULE macro\n",
        "Line" : 90,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#stop automatic dependencies propagation for this module\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "ProgramData/SystemFiles/opencv/sources/modules/imgproc/CMakeLists.txt" : {
      "ObjectId" : "afe89aaa1eab6f6fb2c20e766704fc60e5c44105",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/modules/java/CMakeLists.txt" : {
      "ObjectId" : "0528fa486e91d0533f98fce92d53e9c8940b29ec",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n#  CMake file for java support\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# output locations\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# get list of modules to wrap\n\n# message(STATUS \"Wrapped in java:\")\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# message(STATUS \"\\topencv_${m}\")\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "######################################################################################################################################\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# UTILITY: make C headers go first\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# UTILITY: force cmake to rerun when files from list have changed\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# UTILITY: glob specific sources and append them to list (type is in H, CPP, JAVA, AIDL)\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# UTILITY: copy common java test files and add them to _deps\n\n# copy_common_tests(<source-folder> <destination-folder> <variable-to-store-deps>)\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# UTILITY: copy all java tests for specific module and add them to _deps\n\n# copy_modules_tests(<modules-list> <destination-folder> <variable-to-store-deps>)\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "######################################################################################################################################\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# scripts\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# directory to store temporary files generated on first gen_java.py run\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# handwritten C/C++ and Java sources\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# headers of OpenCV modules\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# first run of gen_java.py (to get list of generated files)\n",
        "Line" : 163,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# IMPORTANT: add dependencies to cmake (we should rerun cmake if any of these files is modified)\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "######################################################################################################################################\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# step 1: generate .cpp/.java from OpenCV headers\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# second run of gen_java.py (at build time)\n",
        "Line" : 192,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# step 2: TODO: generate documentation somewhere\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# step 3: copy files to destination\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# library project jni sources (nothing really depends on them so we will not add them to step3_input_files)\n",
        "Line" : 238,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# step 3.5: generate Android library project\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# creating empty 'gen' and 'res' folders\n",
        "Line" : 272,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# step 4: build jar\n",
        "Line" : 285,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# build the library project\n\n# normally we should do this after a native part, but for a library project we can build the java part first\n",
        "Line" : 289,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# can not rely on classes.jar because different versions of SDK update timestamp at different times\n",
        "Line" : 293,
        "CharPositionInLine" : 81
      },
      "28" : {
        "Text" : "# ditto\n",
        "Line" : 299,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# step 5: build native part\n",
        "Line" : 325,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# workarounding lack of `__attribute__ ((visibility(\"default\")))` in jni_md.h/JNIEXPORT\n",
        "Line" : 327,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# filterout INTERNAL (like opencv_ts) and BINDINGS (like opencv_python) modules\n",
        "Line" : 336,
        "CharPositionInLine" : 37
      },
      "32" : {
        "Text" : "# Additional target properties\n",
        "Line" : 360,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# for Mat <=> Bitmap converters\n",
        "Line" : 371,
        "CharPositionInLine" : 55
      },
      "34" : {
        "Text" : "# force strip library after the build command\n\n# because samples and tests will make a copy of the library before install\n",
        "Line" : 373,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# Turn off stripping in debug build\n",
        "Line" : 376,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "######################################################################################################################################\n",
        "Line" : 406,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 37
    },
    "ProgramData/SystemFiles/opencv/sources/modules/java/android_test/CMakeLists.txt" : {
      "ObjectId" : "e1957322897ab2a5d2fe724c983997bfa6dba8a1",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# 1. gather and copy common test files (resources, utils, etc.)\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# 2. gather and copy tests from each module\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# 3. gather and copy specific files for Android\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# fix Android project\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# build java part\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# needed because ant does not update the timestamp of updated apk\n",
        "Line" : 54,
        "CharPositionInLine" : 93
      },
      "6" : {
        "Text" : "# put the final .apk to the OpenCV's bin folder\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "ProgramData/SystemFiles/opencv/sources/modules/java/pure_test/CMakeLists.txt" : {
      "ObjectId" : "6c9766c7d598362d4b996b1fe9197ecb6493eb40",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# make sure the build directory exists\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# 1. gather and copy common test files (resources, utils, etc.)\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# 2. gather and copy tests from each module\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# 3. gather and copy specific files for pure java\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Copy the OpenCV jar after it has been generated.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Not add_custom_command because generator expressions aren't supported in\n\n# OUTPUT file names, and we need to generate different files for different\n\n# configurations.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "ProgramData/SystemFiles/opencv/sources/modules/java/pure_test/build.xml" : {
      "ObjectId" : "4b25a3c1e36e8c75267718fd4d39ca528ce3d9e7",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "ANT",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/modules/ml/CMakeLists.txt" : {
      "ObjectId" : "1b64cc4f17b6989c3d149ee3b51e7283facfb7cd",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/modules/objdetect/CMakeLists.txt" : {
      "ObjectId" : "d42e9e8f119be495e311147e8cb63800c9029315",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/modules/photo/CMakeLists.txt" : {
      "ObjectId" : "88ac35d83fa8bc527c84d3113bd3e81ab6ea8dad",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/modules/python/CMakeLists.txt" : {
      "ObjectId" : "37673da345e45b49864e37a7a45b02fd870de628",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n#  CMake file for python support\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ProgramData/SystemFiles/opencv/sources/modules/python/common.cmake" : {
      "ObjectId" : "57439809b7933360226fe881baa56089e548e110",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is included from a subdirectory\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# get list of modules to wrap\n\n# message(STATUS \"Wrapped in ${MODULE_NAME}:\")\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# message(STATUS \"\\t${m}\")\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# header blacklist\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#unreferenced formal parameter\n\n#conditional expression is constant\n\n#unreferenced local function has been removed\n",
        "Line" : 85,
        "CharPositionInLine" : 52
      },
      "CommentCount" : 5
    },
    "ProgramData/SystemFiles/opencv/sources/modules/python/python2/CMakeLists.txt" : {
      "ObjectId" : "158763ec50b6728503dd7d1d1c7f8c8f385152c0",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Buildbot requires Python 2 to be in root lib dir\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ProgramData/SystemFiles/opencv/sources/modules/python/python3/CMakeLists.txt" : {
      "ObjectId" : "4b6fe4f141f0ad9e96dde9d560d8a735f042ded3",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/modules/shape/CMakeLists.txt" : {
      "ObjectId" : "fcd317089a9a0535822b523ce39b5c958fa2c090",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/modules/stitching/CMakeLists.txt" : {
      "ObjectId" : "9a24f43160b4b460f060e57622010c135809de10",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/modules/superres/CMakeLists.txt" : {
      "ObjectId" : "7c3fc14a17fb47c9be6323c4c5395741556d4316",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/modules/ts/CMakeLists.txt" : {
      "ObjectId" : "c0158ba416f06a1bcee27b4fb6ce91732a045aad",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/modules/video/CMakeLists.txt" : {
      "ObjectId" : "15705cfc3aef4c3e6a8eb8e1ed5962c3bbfc0a48",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/modules/videoio/CMakeLists.txt" : {
      "ObjectId" : "594263388bddf40e96ddc0dee1b36320a6971989",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n#  CMake file for videoio. See root CMakeLists.txt\n\n#   Some parts taken from version of Hartmut Seichter, HIT Lab NZ.\n\n#   Jose Luis Blanco, 2008\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Removing WinRT API headers by default\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Dependencies used by the implementation referenced\n\n# below are not available on WinRT 8.0.\n\n# Enabling it for WiRT 8.1+ only.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# WinRT detected. Adding WinRT API header\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Adding WinRT internal sources and headers\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# for ffmpeg wrapper only\n",
        "Line" : 198,
        "CharPositionInLine" : 56
      },
      "6" : {
        "Text" : "# for directshow in VS2005 and multi-monitor support on MinGW\n",
        "Line" : 199,
        "CharPositionInLine" : 76
      },
      "7" : {
        "Text" : "# for tests\n",
        "Line" : 200,
        "CharPositionInLine" : 84
      },
      "8" : {
        "Text" : "#these variables are set by CHECK_MODULE macro\n",
        "Line" : 204,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#stop automatic dependencies propagation for this module\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#copy ffmpeg dll to the output folder\n",
        "Line" : 242,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 11
    },
    "ProgramData/SystemFiles/opencv/sources/modules/videostab/CMakeLists.txt" : {
      "ObjectId" : "49e75f9ad13a0bc30c12349ab32485f00cc25adb",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/modules/viz/CMakeLists.txt" : {
      "ObjectId" : "9fd03016351383cd75fca400bc07a2dac7dcabf0",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/modules/world/CMakeLists.txt" : {
      "ObjectId" : "8a4170a79badd774ba889133984882c24d8f4869",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_subdirectory(\"${OPENCV_MODULE_${m}_LOCATION}\" ${CMAKE_CURRENT_BINARY_DIR}/${m})\n",
        "Line" : 24,
        "CharPositionInLine" : 6
      },
      "1" : {
        "Text" : "#message(STATUS \"${OPENCV_MODULE_${the_module}_HEADERS}\")\n\n#message(STATUS \"${OPENCV_MODULE_${the_module}_SOURCES}\")\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "ProgramData/SystemFiles/opencv/sources/platforms/android/android.toolchain.cmake" : {
      "ObjectId" : "b540ea47dfb6b378e44cdc709f64a09027ce3be7",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2010-2011, Ethan Rublee\n\n# Copyright (c) 2011-2014, Andrey Kamaev\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# 1.  Redistributions of source code must retain the above copyright notice,\n\n#     this list of conditions and the following disclaimer.\n\n#\n\n# 2.  Redistributions in binary form must reproduce the above copyright notice,\n\n#     this list of conditions and the following disclaimer in the documentation\n\n#     and/or other materials provided with the distribution.\n\n#\n\n# 3.  Neither the name of the copyright holder nor the names of its\n\n#     contributors may be used to endorse or promote products derived from this\n\n#     software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ------------------------------------------------------------------------------\n\n#  Android CMake toolchain file, for use with the Android NDK r5-r10d\n\n#  Requires cmake 2.6.3 or newer (2.8.5 or newer is recommended).\n\n#  See home page: https://github.com/taka-no-me/android-cmake\n\n#\n\n#  Usage Linux:\n\n#   $ export ANDROID_NDK=/absolute/path/to/the/android-ndk\n\n#   $ mkdir build && cd build\n\n#   $ cmake -DCMAKE_TOOLCHAIN_FILE=path/to/the/android.toolchain.cmake ..\n\n#   $ make -j8\n\n#\n\n#  Usage Linux (using standalone toolchain):\n\n#   $ export ANDROID_STANDALONE_TOOLCHAIN=/absolute/path/to/android-toolchain\n\n#   $ mkdir build && cd build\n\n#   $ cmake -DCMAKE_TOOLCHAIN_FILE=path/to/the/android.toolchain.cmake ..\n\n#   $ make -j8\n\n#\n\n#  Usage Windows:\n\n#     You need native port of make to build your project.\n\n#     Android NDK r7 (and newer) already has make.exe on board.\n\n#     For older NDK you have to install it separately.\n\n#     For example, this one: http://gnuwin32.sourceforge.net/packages/make.htm\n\n#\n\n#   $ SET ANDROID_NDK=C:\\absolute\\path\\to\\the\\android-ndk\n\n#   $ mkdir build && cd build\n\n#   $ cmake.exe -G\"MinGW Makefiles\"\n\n#       -DCMAKE_TOOLCHAIN_FILE=path\\to\\the\\android.toolchain.cmake\n\n#       -DCMAKE_MAKE_PROGRAM=\"%ANDROID_NDK%\\prebuilt\\windows\\bin\\make.exe\" ..\n\n#   $ cmake.exe --build .\n\n#\n\n#\n\n#  Options (can be set as cmake parameters: -D<option_name>=<value>):\n\n#    ANDROID_NDK=/opt/android-ndk - path to the NDK root.\n\n#      Can be set as environment variable. Can be set only at first cmake run.\n\n#\n\n#    ANDROID_STANDALONE_TOOLCHAIN=/opt/android-toolchain - path to the\n\n#      standalone toolchain. This option is not used if full NDK is found\n\n#      (ignored if ANDROID_NDK is set).\n\n#      Can be set as environment variable. Can be set only at first cmake run.\n\n#\n\n#    ANDROID_ABI=armeabi-v7a - specifies the target Application Binary\n\n#      Interface (ABI). This option nearly matches to the APP_ABI variable\n\n#      used by ndk-build tool from Android NDK.\n\n#\n\n#      Possible targets are:\n\n#        \"armeabi\" - ARMv5TE based CPU with software floating point operations\n\n#        \"armeabi-v7a\" - ARMv7 based devices with hardware FPU instructions\n\n#            this ABI target is used by default\n\n#        \"armeabi-v7a with NEON\" - same as armeabi-v7a, but\n\n#            sets NEON as floating-point unit\n\n#        \"armeabi-v7a with VFPV3\" - same as armeabi-v7a, but\n\n#            sets VFPV3 as floating-point unit (has 32 registers instead of 16)\n\n#        \"armeabi-v6 with VFP\" - tuned for ARMv6 processors having VFP\n\n#        \"x86\" - IA-32 instruction set\n\n#        \"mips\" - MIPS32 instruction set\n\n#\n\n#      64-bit ABIs for NDK r10 and newer:\n\n#        \"arm64-v8a\" - ARMv8 AArch64 instruction set\n\n#        \"x86_64\" - Intel64 instruction set (r1)\n\n#        \"mips64\" - MIPS64 instruction set (r6)\n\n#\n\n#    ANDROID_NATIVE_API_LEVEL=android-8 - level of Android API compile for.\n\n#      Option is read-only when standalone toolchain is used.\n\n#      Note: building for \"android-L\" requires explicit configuration.\n\n#\n\n#    ANDROID_TOOLCHAIN_NAME=arm-linux-androideabi-4.9 - the name of compiler\n\n#      toolchain to be used. The list of possible values depends on the NDK\n\n#      version. For NDK r10c the possible values are:\n\n#\n\n#        * aarch64-linux-android-4.9\n\n#        * aarch64-linux-android-clang3.4\n\n#        * aarch64-linux-android-clang3.5\n\n#        * arm-linux-androideabi-4.6\n\n#        * arm-linux-androideabi-4.8\n\n#        * arm-linux-androideabi-4.9 (default)\n\n#        * arm-linux-androideabi-clang3.4\n\n#        * arm-linux-androideabi-clang3.5\n\n#        * mips64el-linux-android-4.9\n\n#        * mips64el-linux-android-clang3.4\n\n#        * mips64el-linux-android-clang3.5\n\n#        * mipsel-linux-android-4.6\n\n#        * mipsel-linux-android-4.8\n\n#        * mipsel-linux-android-4.9\n\n#        * mipsel-linux-android-clang3.4\n\n#        * mipsel-linux-android-clang3.5\n\n#        * x86-4.6\n\n#        * x86-4.8\n\n#        * x86-4.9\n\n#        * x86-clang3.4\n\n#        * x86-clang3.5\n\n#        * x86_64-4.9\n\n#        * x86_64-clang3.4\n\n#        * x86_64-clang3.5\n\n#\n\n#    ANDROID_FORCE_ARM_BUILD=OFF - set ON to generate 32-bit ARM instructions\n\n#      instead of Thumb. Is not available for \"x86\" (inapplicable) and\n\n#      \"armeabi-v6 with VFP\" (is forced to be ON) ABIs.\n\n#\n\n#    ANDROID_NO_UNDEFINED=ON - set ON to show all undefined symbols as linker\n\n#      errors even if they are not used.\n\n#\n\n#    ANDROID_SO_UNDEFINED=OFF - set ON to allow undefined symbols in shared\n\n#      libraries. Automatically turned for NDK r5x and r6x due to GLESv2\n\n#      problems.\n\n#\n\n#    LIBRARY_OUTPUT_PATH_ROOT=${CMAKE_SOURCE_DIR} - where to output binary\n\n#      files. See additional details below.\n\n#\n\n#    ANDROID_SET_OBSOLETE_VARIABLES=ON - if set, then toolchain defines some\n\n#      obsolete variables which were used by previous versions of this file for\n\n#      backward compatibility.\n\n#\n\n#    ANDROID_STL=gnustl_static - specify the runtime to use.\n\n#\n\n#      Possible values are:\n\n#        none           -> Do not configure the runtime.\n\n#        system         -> Use the default minimal system C++ runtime library.\n\n#                          Implies -fno-rtti -fno-exceptions.\n\n#                          Is not available for standalone toolchain.\n\n#        system_re      -> Use the default minimal system C++ runtime library.\n\n#                          Implies -frtti -fexceptions.\n\n#                          Is not available for standalone toolchain.\n\n#        gabi++_static  -> Use the GAbi++ runtime as a static library.\n\n#                          Implies -frtti -fno-exceptions.\n\n#                          Available for NDK r7 and newer.\n\n#                          Is not available for standalone toolchain.\n\n#        gabi++_shared  -> Use the GAbi++ runtime as a shared library.\n\n#                          Implies -frtti -fno-exceptions.\n\n#                          Available for NDK r7 and newer.\n\n#                          Is not available for standalone toolchain.\n\n#        stlport_static -> Use the STLport runtime as a static library.\n\n#                          Implies -fno-rtti -fno-exceptions for NDK before r7.\n\n#                          Implies -frtti -fno-exceptions for NDK r7 and newer.\n\n#                          Is not available for standalone toolchain.\n\n#        stlport_shared -> Use the STLport runtime as a shared library.\n\n#                          Implies -fno-rtti -fno-exceptions for NDK before r7.\n\n#                          Implies -frtti -fno-exceptions for NDK r7 and newer.\n\n#                          Is not available for standalone toolchain.\n\n#        gnustl_static  -> Use the GNU STL as a static library.\n\n#                          Implies -frtti -fexceptions.\n\n#        gnustl_shared  -> Use the GNU STL as a shared library.\n\n#                          Implies -frtti -fno-exceptions.\n\n#                          Available for NDK r7b and newer.\n\n#                          Silently degrades to gnustl_static if not available.\n\n#\n\n#    ANDROID_STL_FORCE_FEATURES=ON - turn rtti and exceptions support based on\n\n#      chosen runtime. If disabled, then the user is responsible for settings\n\n#      these options.\n\n#\n\n#  What?:\n\n#    android-cmake toolchain searches for NDK/toolchain in the following order:\n\n#      ANDROID_NDK - cmake parameter\n\n#      ANDROID_NDK - environment variable\n\n#      ANDROID_STANDALONE_TOOLCHAIN - cmake parameter\n\n#      ANDROID_STANDALONE_TOOLCHAIN - environment variable\n\n#      ANDROID_NDK - default locations\n\n#      ANDROID_STANDALONE_TOOLCHAIN - default locations\n\n#\n\n#    Make sure to do the following in your scripts:\n\n#      SET( CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${my_cxx_flags}\" )\n\n#      SET( CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} ${my_cxx_flags}\" )\n\n#    The flags will be prepopulated with critical flags, so don't loose them.\n\n#    Also be aware that toolchain also sets configuration-specific compiler\n\n#    flags and linker flags.\n\n#\n\n#    ANDROID and BUILD_ANDROID will be set to true, you may test any of these\n\n#    variables to make necessary Android-specific configuration changes.\n\n#\n\n#    Also ARMEABI or ARMEABI_V7A or X86 or MIPS or ARM64_V8A or X86_64 or MIPS64\n\n#    will be set true, mutually exclusive. NEON option will be set true\n\n#    if VFP is set to NEON.\n\n#\n\n#    LIBRARY_OUTPUT_PATH_ROOT should be set in cache to determine where Android\n\n#    libraries will be installed.\n\n#    Default is ${CMAKE_SOURCE_DIR}, and the android libs will always be\n\n#    under the ${LIBRARY_OUTPUT_PATH_ROOT}/libs/${ANDROID_NDK_ABI_NAME}\n\n#    (depending on the target ABI). This is convenient for Android packaging.\n\n#\n\n# ------------------------------------------------------------------------------\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# subsequent toolchain loading is not really needed\n",
        "Line" : 214,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# touch toolchain variable to suppress \"unused variable\" warning\n",
        "Line" : 219,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# inherit settings in recursive loads\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# this one is important\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# this one not so much\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# rpath makes low sence for Android\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# NDK search paths\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# known ABIs\n",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# API level defaults\n",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# fight against cygwin\n",
        "Line" : 378,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# remove cygwin from PATH\n",
        "Line" : 387,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# detect current host platform\n",
        "Line" : 396,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# see if we have path to Android NDK\n",
        "Line" : 421,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# see if we have path to Android standalone toolchain\n",
        "Line" : 424,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "#try to find Android NDK in one of the the default locations\n",
        "Line" : 428,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "#try to find Android standalone toolchain in one of the the default locations\n",
        "Line" : 442,
        "CharPositionInLine" : 3
      },
      "18" : {
        "Text" : "# remember found paths\n",
        "Line" : 453,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# try to detect change\n",
        "Line" : 470,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "# android NDK layout\n",
        "Line" : 494,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# try to automatically detect the layout\n",
        "Line" : 497,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# only 32-bit at the moment\n",
        "Line" : 509,
        "CharPositionInLine" : 71
      },
      "23" : {
        "Text" : "# only 32-bit at the moment\n",
        "Line" : 514,
        "CharPositionInLine" : 71
      },
      "24" : {
        "Text" : "# ANDROID_NDK_LAYOUT STREQUAL \"RELEASE\"\n",
        "Line" : 518,
        "CharPositionInLine" : 8
      },
      "25" : {
        "Text" : "# try to detect change of NDK\n",
        "Line" : 525,
        "CharPositionInLine" : 1
      },
      "26" : {
        "Text" : "# get all the details about standalone toolchain\n",
        "Line" : 539,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#message(\"machine: !${__machine}!\\narch: !${__arch}!\\nversion: !${__version}!\\ntoolchain: !${__toolchain}!\\n\")\n",
        "Line" : 606,
        "CharPositionInLine" : 3
      },
      "28" : {
        "Text" : "# get all the details about NDK\n",
        "Line" : 618,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# do not go through all toolchains if we know the name\n",
        "Line" : 627,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# we need clang to go after gcc\n",
        "Line" : 640,
        "CharPositionInLine" : 39
      },
      "31" : {
        "Text" : "# build list of available ABIs\n",
        "Line" : 658,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# choose target ABI\n",
        "Line" : 671,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# verify that target ABI is supported\n",
        "Line" : 673,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# set target ABI options\n",
        "Line" : 683,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# need always fallback to older platform\n",
        "Line" : 729,
        "CharPositionInLine" : 1
      },
      "36" : {
        "Text" : "# really dirty hack\n\n# it is not possible to change CMAKE_SYSTEM_PROCESSOR after the first run...\n",
        "Line" : 757,
        "CharPositionInLine" : 1
      },
      "37" : {
        "Text" : "# choose toolchain\n",
        "Line" : 770,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# choose native API level\n",
        "Line" : 819,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# adjust API level\n",
        "Line" : 823,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# validate\n",
        "Line" : 835,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# remember target ABI\n",
        "Line" : 856,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# runtime choice (STL, rtti, exceptions)\n",
        "Line" : 864,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# honor legacy ANDROID_USE_STLPORT\n",
        "Line" : 866,
        "CharPositionInLine" : 1
      },
      "44" : {
        "Text" : "# setup paths and STL for standalone toolchain\n",
        "Line" : 941,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# old location ( pre r8c )\n",
        "Line" : 950,
        "CharPositionInLine" : 3
      },
      "46" : {
        "Text" : "# always search static GNU STL to get the location of libsupc++.a\n",
        "Line" : 960,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "# clang\n",
        "Line" : 995,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# setup paths and STL for NDK\n",
        "Line" : 1019,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# do nothing\n",
        "Line" : 1025,
        "CharPositionInLine" : 2
      },
      "50" : {
        "Text" : "# before r7\n",
        "Line" : 1035,
        "CharPositionInLine" : 42
      },
      "51" : {
        "Text" : "# before r8d\n",
        "Line" : 1043,
        "CharPositionInLine" : 46
      },
      "52" : {
        "Text" : "# before r7\n",
        "Line" : 1048,
        "CharPositionInLine" : 42
      },
      "53" : {
        "Text" : "# gnustl binary for 4.7 compiler is buggy :(\n\n# TODO: look for right fix\n",
        "Line" : 1060,
        "CharPositionInLine" : 4
      },
      "54" : {
        "Text" : "# find libsupc++.a - rtti & exceptions\n",
        "Line" : 1078,
        "CharPositionInLine" : 1
      },
      "55" : {
        "Text" : "# r8b or newer\n",
        "Line" : 1080,
        "CharPositionInLine" : 137
      },
      "56" : {
        "Text" : "# r7-r8\n",
        "Line" : 1082,
        "CharPositionInLine" : 110
      },
      "57" : {
        "Text" : "# before r7\n",
        "Line" : 1084,
        "CharPositionInLine" : 36
      },
      "58" : {
        "Text" : "# case of shared STL linkage\n",
        "Line" : 1104,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# TODO: check if .so file exists before the renaming\n",
        "Line" : 1107,
        "CharPositionInLine" : 1
      },
      "60" : {
        "Text" : "# ccache support\n",
        "Line" : 1111,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# setup the cross-compiler\n",
        "Line" : 1124,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Force set compilers because standard identification works badly for us\n",
        "Line" : 1167,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# force ASM compiler (required for CMake < 2.8.5)\n",
        "Line" : 1190,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# flags and definitions\n",
        "Line" : 1206,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# try to convert path to 8.3 form\n",
        "Line" : 1212,
        "CharPositionInLine" : 2
      },
      "66" : {
        "Text" : "# quotes can break try_compile and compiler identification\n",
        "Line" : 1227,
        "CharPositionInLine" : 2
      },
      "67" : {
        "Text" : "# NDK flags\n",
        "Line" : 1234,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# always compile ARMEABI_V6 in arm mode; otherwise there is no difference from ARMEABI\n",
        "Line" : 1251,
        "CharPositionInLine" : 2
      },
      "69" : {
        "Text" : "# good/necessary when porting desktop libraries\n",
        "Line" : 1278,
        "CharPositionInLine" : 62
      },
      "70" : {
        "Text" : "# see https://android-review.googlesource.com/#/c/47564/\n",
        "Line" : 1285,
        "CharPositionInLine" : 72
      },
      "71" : {
        "Text" : "# ABI-specific flags\n",
        "Line" : 1288,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# vfp == vfpv2\n",
        "Line" : 1299,
        "CharPositionInLine" : 91
      },
      "73" : {
        "Text" : "# STL\n",
        "Line" : 1314,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# C objects:\n",
        "Line" : 1325,
        "CharPositionInLine" : 2
      },
      "75" : {
        "Text" : "# variables controlling optional build flags\n",
        "Line" : 1343,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# before r7\n",
        "Line" : 1344,
        "CharPositionInLine" : 40
      },
      "77" : {
        "Text" : "# libGLESv2.so in NDK's prior to r7 refers to missing external symbols.\n\n# So this flag option is required for all projects using OpenGL from native.\n",
        "Line" : 1345,
        "CharPositionInLine" : 1
      },
      "78" : {
        "Text" : "# linker flags\n",
        "Line" : 1365,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# this is *required* to use the following linker flags that routes around\n\n# a CPU bug in some Cortex-A8 implementations:\n",
        "Line" : 1369,
        "CharPositionInLine" : 1
      },
      "80" : {
        "Text" : "# there is some sysroot-related problem in mips linker...\n",
        "Line" : 1376,
        "CharPositionInLine" : 2
      },
      "81" : {
        "Text" : "# after r8b\n",
        "Line" : 1397,
        "CharPositionInLine" : 48
      },
      "82" : {
        "Text" : "# version 4.6\n",
        "Line" : 1405,
        "CharPositionInLine" : 8
      },
      "83" : {
        "Text" : "# cache flags\n",
        "Line" : 1427,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# put flags to cache (for debug purpose only)\n",
        "Line" : 1438,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# finish flags\n",
        "Line" : 1444,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# pie/pic\n",
        "Line" : 1461,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# configure rtti\n",
        "Line" : 1471,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "# configure exceptios\n",
        "Line" : 1480,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# global includes and link directories\n",
        "Line" : 1491,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "# avoid CMP0015 policy warning\n",
        "Line" : 1493,
        "CharPositionInLine" : 111
      },
      "91" : {
        "Text" : "# detect if need link crtbegin_so.o explicitly\n",
        "Line" : 1496,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "# setup output directories\n",
        "Line" : 1533,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "# copy shaed stl library to build directory\n",
        "Line" : 1546,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "# set these global flags for cmake client scripts to change behavior\n",
        "Line" : 1558,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "# where is the target environment\n",
        "Line" : 1562,
        "CharPositionInLine" : 0
      },
      "96" : {
        "Text" : "# only search for libraries and includes in the ndk toolchain\n",
        "Line" : 1565,
        "CharPositionInLine" : 0
      },
      "97" : {
        "Text" : "# macro to find packages on the host OS\n",
        "Line" : 1571,
        "CharPositionInLine" : 0
      },
      "98" : {
        "Text" : "# macro to find programs on the host OS\n",
        "Line" : 1593,
        "CharPositionInLine" : 0
      },
      "99" : {
        "Text" : "# export toolchain settings for the try_compile() command\n",
        "Line" : 1630,
        "CharPositionInLine" : 0
      },
      "100" : {
        "Text" : "# force cmake to produce / instead of \\ in build commands for Ninja generator\n",
        "Line" : 1667,
        "CharPositionInLine" : 0
      },
      "101" : {
        "Text" : "# it is a bad hack after all\n\n# CMake generates Ninja makefiles with UNIX paths only if it thinks that we are going to build with MinGW\n",
        "Line" : 1669,
        "CharPositionInLine" : 1
      },
      "102" : {
        "Text" : "# tell CMake that we are MinGW\n\n# stop recursion\n",
        "Line" : 1671,
        "CharPositionInLine" : 37
      },
      "103" : {
        "Text" : "# unset( CMAKE_COMPILER_IS_MINGW ) # can't unset because CMake does not convert back-slashes in response files without it\n",
        "Line" : 1675,
        "CharPositionInLine" : 1
      },
      "104" : {
        "Text" : "# set some obsolete variables for backward compatibility\n",
        "Line" : 1680,
        "CharPositionInLine" : 0
      },
      "105" : {
        "Text" : "# Variables controlling behavior or set by cmake toolchain:\n\n#   ANDROID_ABI : \"armeabi-v7a\" (default), \"armeabi\", \"armeabi-v7a with NEON\", \"armeabi-v7a with VFPV3\", \"armeabi-v6 with VFP\", \"x86\", \"mips\", \"arm64-v8a\", \"x86_64\", \"mips64\"\n\n#   ANDROID_NATIVE_API_LEVEL : 3,4,5,8,9,14,15,16,17,18,19,21 (depends on NDK version)\n\n#   ANDROID_STL : gnustl_static/gnustl_shared/stlport_static/stlport_shared/gabi++_static/gabi++_shared/system_re/system/none\n\n#   ANDROID_FORBID_SYGWIN : ON/OFF\n\n#   ANDROID_NO_UNDEFINED : ON/OFF\n\n#   ANDROID_SO_UNDEFINED : OFF/ON  (default depends on NDK version)\n\n#   ANDROID_FUNCTION_LEVEL_LINKING : ON/OFF\n\n#   ANDROID_GOLD_LINKER : ON/OFF\n\n#   ANDROID_NOEXECSTACK : ON/OFF\n\n#   ANDROID_RELRO : ON/OFF\n\n#   ANDROID_FORCE_ARM_BUILD : ON/OFF\n\n#   ANDROID_STL_FORCE_FEATURES : ON/OFF\n\n#   ANDROID_SET_OBSOLETE_VARIABLES : ON/OFF\n\n# Can be set only at the first run:\n\n#   ANDROID_NDK\n\n#   ANDROID_STANDALONE_TOOLCHAIN\n\n#   ANDROID_TOOLCHAIN_NAME : the NDK name of compiler toolchain\n\n#   ANDROID_NDK_HOST_X64 : try to use x86_64 toolchain (default for x64 host systems)\n\n#   ANDROID_NDK_LAYOUT : the inner NDK structure (RELEASE, LINARO, ANDROID)\n\n#   LIBRARY_OUTPUT_PATH_ROOT : <any valid path>\n\n#   NDK_CCACHE : <path to your ccache executable>\n\n# Obsolete:\n\n#   ANDROID_API_LEVEL : superseded by ANDROID_NATIVE_API_LEVEL\n\n#   ARM_TARGET : superseded by ANDROID_ABI\n\n#   ARM_TARGETS : superseded by ANDROID_ABI (can be set only)\n\n#   ANDROID_NDK_TOOLCHAIN_ROOT : superseded by ANDROID_STANDALONE_TOOLCHAIN (can be set only)\n\n#   ANDROID_USE_STLPORT : superseded by ANDROID_STL=stlport_static\n\n#   ANDROID_LEVEL : superseded by ANDROID_NATIVE_API_LEVEL (completely removed)\n\n#\n\n# Primary read-only variables:\n\n#   ANDROID : always TRUE\n\n#   ARMEABI : TRUE for arm v6 and older devices\n\n#   ARMEABI_V6 : TRUE for arm v6\n\n#   ARMEABI_V7A : TRUE for arm v7a\n\n#   ARM64_V8A : TRUE for arm64-v8a\n\n#   NEON : TRUE if NEON unit is enabled\n\n#   VFPV3 : TRUE if VFP version 3 is enabled\n\n#   X86 : TRUE if configured for x86\n\n#   X86_64 : TRUE if configured for x86_64\n\n#   MIPS : TRUE if configured for mips\n\n#   MIPS64 : TRUE if configured for mips64\n\n#   BUILD_ANDROID : always TRUE\n\n#   BUILD_WITH_ANDROID_NDK : TRUE if NDK is used\n\n#   BUILD_WITH_STANDALONE_TOOLCHAIN : TRUE if standalone toolchain is used\n\n#   ANDROID_NDK_HOST_SYSTEM_NAME : \"windows\", \"linux-x86\" or \"darwin-x86\" depending on host platform\n\n#   ANDROID_NDK_ABI_NAME : \"armeabi\", \"armeabi-v7a\", \"x86\", \"mips\", \"arm64-v8a\", \"x86_64\", \"mips64\" depending on ANDROID_ABI\n\n#   ANDROID_NDK_RELEASE : from r5 to r10d; set only for NDK\n\n#   ANDROID_NDK_RELEASE_NUM : numeric ANDROID_NDK_RELEASE version (1000*major+minor)\n\n#   ANDROID_ARCH_NAME : \"arm\", \"x86\", \"mips\", \"arm64\", \"x86_64\", \"mips64\" depending on ANDROID_ABI\n\n#   ANDROID_SYSROOT : path to the compiler sysroot\n\n#   TOOL_OS_SUFFIX : \"\" or \".exe\" depending on host platform\n\n#   ANDROID_COMPILER_IS_CLANG : TRUE if clang compiler is used\n\n# Obsolete:\n\n#   ARMEABI_NDK_NAME : superseded by ANDROID_NDK_ABI_NAME\n\n#\n\n# Secondary (less stable) read-only variables:\n\n#   ANDROID_COMPILER_VERSION : GCC version used (not Clang version)\n\n#   ANDROID_CLANG_VERSION : version of clang compiler if clang is used\n\n#   ANDROID_CXX_FLAGS : C/C++ compiler flags required by Android platform\n\n#   ANDROID_SUPPORTED_ABIS : list of currently allowed values for ANDROID_ABI\n\n#   ANDROID_TOOLCHAIN_MACHINE_NAME : \"arm-linux-androideabi\", \"arm-eabi\" or \"i686-android-linux\"\n\n#   ANDROID_TOOLCHAIN_ROOT : path to the top level of toolchain (standalone or placed inside NDK)\n\n#   ANDROID_CLANG_TOOLCHAIN_ROOT : path to clang tools\n\n#   ANDROID_SUPPORTED_NATIVE_API_LEVELS : list of native API levels found inside NDK\n\n#   ANDROID_STL_INCLUDE_DIRS : stl include paths\n\n#   ANDROID_RTTI : if rtti is enabled by the runtime\n\n#   ANDROID_EXCEPTIONS : if exceptions are enabled by the runtime\n\n#   ANDROID_GCC_TOOLCHAIN_NAME : read-only, differs from ANDROID_TOOLCHAIN_NAME only if clang is used\n\n#   ANDROID_LIBM_PATH : path to libm.so (set to something like $(TOP)/out/target/product/<product_name>/obj/lib/libm.so) to workaround unresolved `sincos`\n\n#\n\n# Defaults:\n\n#   ANDROID_DEFAULT_NDK_API_LEVEL\n\n#   ANDROID_DEFAULT_NDK_API_LEVEL_${ARCH}\n\n#   ANDROID_NDK_SEARCH_PATHS\n\n#   ANDROID_STANDALONE_TOOLCHAIN_SEARCH_PATH\n\n#   ANDROID_SUPPORTED_ABIS_${ARCH}\n\n#   ANDROID_SUPPORTED_NDK_VERSIONS\n",
        "Line" : 1690,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 106
    },
    "ProgramData/SystemFiles/opencv/sources/platforms/android/service/CMakeLists.txt" : {
      "ObjectId" : "b031003177fb64406d03ba18d98ca9e002756d4a",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/platforms/android/service/engine/CMakeLists.txt" : {
      "ObjectId" : "a31790a9031648ff7bb42d2522c14a26a7886a62",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/platforms/android/service/engine/build.xml" : {
      "ObjectId" : "98ddc3eac178619430fc6e4134c1c1fd1a716d5c",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " The local.properties file is created and updated by the 'android' tool.\n         It contains the path to the SDK. It should *NOT* be checked into\n         Version Control Systems. ",
        "Line" : 6,
        "CharPositionInLine" : 38
      },
      "1" : {
        "Text" : " The ant.properties file can be created by you. It is only edited by the\n         'android' tool to add properties to it.\n         This is the place to change some Ant specific build properties.\n         Here are some properties you may want to change/update:\n\n         source.dir\n             The name of the source directory. Default is 'src'.\n         out.dir\n             The name of the output directory. Default is 'bin'.\n\n         For other overridable properties, look at the beginning of the rules\n         files in the SDK, at tools/ant/build.xml\n\n         Properties related to the SDK location or the project target should\n         be updated using the 'android' tool with the 'update' action.\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems.\n\n         ",
        "Line" : 28,
        "CharPositionInLine" : 13
      },
      "2" : {
        "Text" : " if sdk.dir was not set from one of the property file, then\n         get it from the ANDROID_HOME env var.\n         This must be done before we load project.properties since\n         the proguard config can use sdk.dir ",
        "Line" : 34,
        "CharPositionInLine" : 49
      },
      "3" : {
        "Text" : " The project.properties file is created and updated by the 'android'\n         tool, as well as ADT.\n\n         This contains project specific properties such as project target, and library\n         dependencies. Lower level build properties are stored in ant.properties\n         (or in .classpath for Eclipse projects).\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems. ",
        "Line" : 48,
        "CharPositionInLine" : 77
      },
      "4" : {
        "Text" : " quick check on sdk.dir ",
        "Line" : 51,
        "CharPositionInLine" : 36
      },
      "5" : {
        "Text" : "\n        Import per project custom build rules if present at the root of the project.\n        This is the place to put custom intermediary targets such as:\n            -pre-build\n            -pre-compile\n            -post-compile (This is typically used for code obfuscation.\n                           Compiled code location: ${out.classes.absolute.dir}\n                           If this is not done in place, override ${out.dex.input.absolute.dir})\n            -post-package\n            -post-build\n            -pre-clean\n    ",
        "Line" : 68,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : " Import the actual build file.\n\n         To customize existing targets, there are two options:\n         - Customize only one target:\n             - copy/paste the target into this file, *before* the\n               <import> task.\n             - customize it to your needs.\n         - Customize the whole content of build.xml\n             - copy/paste the content of the rules files (minus the top node)\n               into this file, replacing the <import> task.\n             - customize to your needs.\n\n         ***********************\n         ****** IMPORTANT ******\n         ***********************\n         In all cases you must update the value of version-tag below to read 'custom' instead of an integer,\n         in order to avoid having your file be overridden by tools such as \"android update project\"\n    ",
        "Line" : 88,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : " version-tag: 1 ",
        "Line" : 89,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 8
    },
    "ProgramData/SystemFiles/opencv/sources/platforms/ios/cmake/Modules/Platform/iOS.cmake" : {
      "ObjectId" : "3a80e84ae10e5559770b9816b2db6c77fa23d3ae",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is based off of the Platform/Darwin.cmake and Platform/UnixPaths.cmake\n\n# files which are included with CMake 2.8.4\n\n# It has been altered for iOS development\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Darwin versions:\n\n#   6.x == Mac OSX 10.2\n\n#   7.x == Mac OSX 10.3\n\n#   8.x == Mac OSX 10.4\n\n#   9.x == Mac OSX 10.5\n\n#  10.x == Mac OSX 10.6 (Snow Leopard)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Do not use the \"-Wl,-search_paths_first\" flag with the OSX 10.2 compiler.\n\n# Done this way because it is too early to do a TRY_COMPILE.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# More desirable, but does not work:\n\n#INCLUDE(CheckCXXCompilerFlag)\n\n#CHECK_CXX_COMPILER_FLAG(\"-Wl,-search_paths_first\" HAVE_FLAG_SEARCH_PATHS_FIRST)\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Hidden visibilty is required for cxx on iOS\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# hack: if a new cmake (which uses CMAKE_INSTALL_NAME_TOOL) runs on an old build tree\n\n# (where install_name_tool was hardcoded) and where CMAKE_INSTALL_NAME_TOOL isn't in the cache\n\n# and still cmake didn't fail in CMakeFindBinUtils.cmake (because it isn't rerun)\n\n# hardcode CMAKE_INSTALL_NAME_TOOL here to install_name_tool, so it behaves as it did before, Alex\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Setup iOS developer location\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Find installed iOS SDKs\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Find and use the most recent iOS sdk\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Set the sysroot default to the most recent SDK\n",
        "Line" : 85,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# set the architecture for iOS - this env var sets armv6,armv7 and appears to be XCode's standard. The other found is ARCHS_UNIVERSAL_IPHONE_OS but that is armv7 only\n",
        "Line" : 88,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Set the default based on this file and not the environment variable\n",
        "Line" : 91,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# default to searching for frameworks first\n",
        "Line" : 94,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# set up the default search directories for frameworks\n",
        "Line" : 97,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Enable shared library versioning.  This flag is not actually referenced\n\n# but the fact that the setting exists will cause the generators to support\n\n# soname computation.\n",
        "Line" : 110,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# Xcode does not support -isystem yet.\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Need to list dependent shared libraries on link line.  When building\n\n# with -isysroot (for universal binaries), the linker always looks for\n\n# dependent libraries under the sysroot.  Listing them on the link\n\n# line works around the problem.\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Add the install directory of the running cmake to the search directories\n\n# CMAKE_ROOT is CMAKE_INSTALL_PREFIX/share/cmake, so we need to go two levels up\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# List common installation prefixes.  These will be used for all search types\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Standard\n",
        "Line" : 155,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# CMake install location\n",
        "Line" : 159,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Project install destination.\n",
        "Line" : 162,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 22
    },
    "ProgramData/SystemFiles/opencv/sources/platforms/ios/cmake/Toolchains/Toolchain-iPhoneOS_Xcode.cmake" : {
      "ObjectId" : "14555cd6a994bb92f84964db74c240cba87844f9",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Standard settings\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Include extra modules for the iOS platform files\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Force the compilers to clang for iOS\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#CMAKE_FORCE_C_COMPILER (clang GNU)\n\n#CMAKE_FORCE_CXX_COMPILER (clang++ GNU)\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Skip the platform compiler checks for cross compiling\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Search for programs in the build host directories\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#   for libraries and headers in the target directories\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "ProgramData/SystemFiles/opencv/sources/platforms/ios/cmake/Toolchains/Toolchain-iPhoneSimulator_Xcode.cmake" : {
      "ObjectId" : "937079d18205cd8fdad4f907b2a3ce97920e80ad",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Standard settings\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Include extra modules for the iOS platform files\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Force the compilers to clang for iOS\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#CMAKE_FORCE_C_COMPILER (clang GNU)\n\n#CMAKE_FORCE_CXX_COMPILER (clang++ GNU)\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Skip the platform compiler checks for cross compiling\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Search for programs in the build host directories\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#   for libraries and headers in the target directories\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "ProgramData/SystemFiles/opencv/sources/platforms/linux/arm-gnueabi.toolchain.cmake" : {
      "ObjectId" : "448dfa6b1c2ab40f5a241879a4dbe6d6c4c7467b",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# macro to find programs on the host OS\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# macro to find packages on the host OS\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "ProgramData/SystemFiles/opencv/sources/platforms/winrt/arm.winrt.toolchain.cmake" : {
      "ObjectId" : "a5158d01fa4d218c28971530917e3637d84c5cde",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/samples/CMakeLists.txt" : {
      "ObjectId" : "467ca162a7a0f4a1d374363b487da66285e33472",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Detect if we want to build samples with library binaries or not\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# BUILD CASE 1: Build samples with library sources\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n#  CMake file for samples. See root CMakeLists.txt\n\n#\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# END OF BUILD CASE 1: Build samples with library sources\n\n#\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# BUILD CASE 2: Build samples with library binaries\n\n#\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# FIXIT: can't use cvconfig.h in samples: add_subdirectory(gpu)\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# END OF BUILD CASE 2: Build samples with library binaries\n\n#\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "ProgramData/SystemFiles/opencv/sources/samples/android/15-puzzle/CMakeLists.txt" : {
      "ObjectId" : "447931955429e653e68bb34b24e56bb1aa7ca5ca",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/samples/android/CMakeLists.txt" : {
      "ObjectId" : "dbb539fc580ca535f085d876ddd4357b3779f2dc",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n#  CMake file for Android samples. See root CMakeLists.txt\n\n#\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# hello-android sample\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "ProgramData/SystemFiles/opencv/sources/samples/android/camera-calibration/CMakeLists.txt" : {
      "ObjectId" : "83b11b3647d69b04a87ce5b8df9077198dc0aeaf",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/samples/android/color-blob-detection/CMakeLists.txt" : {
      "ObjectId" : "42051bc3a20721469252ab5d27e8818d8bed65f4",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/samples/android/face-detection/CMakeLists.txt" : {
      "ObjectId" : "0f89b2a362c194ab684c64b3c199005f7ee65c51",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/samples/android/hello-android/CMakeLists.txt" : {
      "ObjectId" : "032d98369d35765a4aa61cf070a4b1312cb27216",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#########################################################\n\n# Set project name\n\n#########################################################\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#########################################################\n\n# Find OpenCV\n\n#########################################################\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#########################################################\n\n# c/c++ flags, includes and lib dependencies\n\n#########################################################\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#notice the \"recycling\" of CMAKE_C_FLAGS\n\n#this is necessary to pick up android flags\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#########################################################\n\n# source files\n\n#########################################################\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#########################################################\n\n# Summary report\n\n#########################################################\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "ProgramData/SystemFiles/opencv/sources/samples/android/image-manipulations/CMakeLists.txt" : {
      "ObjectId" : "70adb1dbe1e9d4b7e37d8c9a9e397386439d5407",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/samples/android/tutorial-1-camerapreview/CMakeLists.txt" : {
      "ObjectId" : "7e5c5cb1b5fdda22d81b797cbce011eac5153ecd",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/samples/android/tutorial-2-mixedprocessing/CMakeLists.txt" : {
      "ObjectId" : "e8771ede1a391e26ee79bc6404c358dc6bdc642a",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/samples/android/tutorial-3-cameracontrol/CMakeLists.txt" : {
      "ObjectId" : "3fd69c929c3760e82ce56226bd4a481148b09466",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/samples/cpp/CMakeLists.txt" : {
      "ObjectId" : "ff5caa9fa8b63351c21dfbb7cf0e003d73b7e26f",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n#  CMake file for C samples. See root CMakeLists.txt\n\n#\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#for opencv.hpp\n",
        "Line" : 17,
        "CharPositionInLine" : 57
      },
      "2" : {
        "Text" : "# ---------------------------------------------\n\n#      Define executable targets\n\n# ---------------------------------------------\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "ProgramData/SystemFiles/opencv/sources/samples/cpp/example_cmake/CMakeLists.txt" : {
      "ObjectId" : "fe7e629812bb32eb7a7744ee55eadc547a92c6ca",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# cmake needs this line\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define project name\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find OpenCV, you may need to set OpenCV_DIR variable\n\n# to the absolute path to the directory containing OpenCVConfig.cmake file\n\n# via the command line or GUI\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If the package has been found, several variables will\n\n# be set, you can find the full list with descriptions\n\n# in the OpenCVConfig.cmake file.\n\n# Print some message showing some of them\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add OpenCV headers location to your include paths\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Declare the executable target built from your sources\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Link your application with OpenCV libraries\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "ProgramData/SystemFiles/opencv/sources/samples/cpp/example_cmake/Makefile" : {
      "ObjectId" : "f72911571f3bffa80d2e32d88e2f8b28c2c4cf83",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/samples/cpp/tutorial_code/calib3d/real_time_pose_estimation/CMakeLists.txt" : {
      "ObjectId" : "a3c5cfe4c49c49b6e84c382359952196e75725ec",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/samples/directx/CMakeLists.txt" : {
      "ObjectId" : "d0e60bdf3340246b2450df3a9a6defdceef9e2b5",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ---------------------------------------------\n\n#      Define executable targets\n\n# ---------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "ProgramData/SystemFiles/opencv/sources/samples/gpu/CMakeLists.txt" : {
      "ObjectId" : "32c53ecf1f30287072676b7bedc3155b792cf9e4",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ---------------------------------------------\n\n#      Define executable targets\n\n# ---------------------------------------------\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "ProgramData/SystemFiles/opencv/sources/samples/gpu/performance/CMakeLists.txt" : {
      "ObjectId" : "9c9fb5b6768155161e89a2815c38b0f0b0082771",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/samples/java/ant/build.xml" : {
      "ObjectId" : "d817aa63ddeab50d51cfb0e2f342461b3af39ebd",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "ANT",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/samples/python2/CMakeLists.txt" : {
      "ObjectId" : "7fa245447cacce9dd4ae8c7201069fe364ce2117",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ProgramData/SystemFiles/opencv/sources/samples/tapi/CMakeLists.txt" : {
      "ObjectId" : "74f51339ddce0b4637d8e86317f5691de350db8a",
      "LastModified" : "2018-05-10T17:42:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ---------------------------------------------\n\n#      Define executable targets\n\n# ---------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 132,
    "QMAKE" : 2,
    "MAKEFILE" : 4,
    "ANT" : 3
  },
  "ElapsedTime" : 23208
}