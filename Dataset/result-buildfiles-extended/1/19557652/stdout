{
  "Repository" : "19557652",
  "Revision" : "HEAD",
  "ObjectId" : "21f82a33bf74193b96a90a473999778440c87380",
  "CommitTime" : "2019-03-29T15:27:28Z",
  "Files" : {
    "OMEdit/OMEditGUI/OMEditGUI.pro" : {
      "ObjectId" : "78d736fb2c5dfa70494f8cd447828625b59deba0",
      "LastModified" : "2019-03-11T08:38:57Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This file is part of OpenModelica.\n\n#\n\n# Copyright (c) 1998-CurrentYear, Open Source Modelica Consortium (OSMC),\n\n# c/o Linköpings universitet, Department of Computer and Information Science,\n\n# SE-58183 Linköping, Sweden.\n\n#\n\n# All rights reserved.\n\n#\n\n# THIS PROGRAM IS PROVIDED UNDER THE TERMS OF GPL VERSION 3 LICENSE OR\n\n# THIS OSMC PUBLIC LICENSE (OSMC-PL) VERSION 1.2.\n\n# ANY USE, REPRODUCTION OR DISTRIBUTION OF THIS PROGRAM CONSTITUTES RECIPIENT'S ACCEPTANCE\n\n# OF THE OSMC PUBLIC LICENSE OR THE GPL VERSION 3, ACCORDING TO RECIPIENTS CHOICE.\n\n#\n\n# The OpenModelica software and the Open Source Modelica\n\n# Consortium (OSMC) Public License (OSMC-PL) are obtained\n\n# from OSMC, either from the above address,\n\n# from the URLs: http://www.ida.liu.se/projects/OpenModelica or\n\n# http://www.openmodelica.org, and in the OpenModelica distribution.\n\n# GNU version 3 is obtained from: http://www.gnu.org/copyleft/gpl.html.\n\n#\n\n# This program is distributed WITHOUT ANY WARRANTY; without\n\n# even the implied warranty of  MERCHANTABILITY or FITNESS\n\n# FOR A PARTICULAR PURPOSE, EXCEPT AS EXPRESSLY SET FORTH\n\n# IN THE BY RECIPIENT SELECTED SUBSIDIARY LICENSE CONDITIONS OF OSMC-PL.\n\n#\n\n# See the full OSMC Public License conditions for more details.\n\n#\n\n#/\n",
        "Line" : 2,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# This is very evil, lupdate just look for SOURCES variable and creates translations. This section is not compiled at all :)\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Windows libraries and includes\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# define used for OpenModelica C-API\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# win32 vs. win64\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# 32-bit\n",
        "Line" : 60,
        "CharPositionInLine" : 28
      },
      "7" : {
        "Text" : "# 64-bit\n",
        "Line" : 62,
        "CharPositionInLine" : 11
      },
      "8" : {
        "Text" : "# release vs debug\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# release\n",
        "Line" : 66,
        "CharPositionInLine" : 35
      },
      "10" : {
        "Text" : "# required for backtrace\n\n# In order to get the stack trace in Windows we must add -g flag. Qt automatically adds the -O2 flag for optimization.\n\n# We should also unset the QMAKE_LFLAGS_RELEASE define because it is defined as QMAKE_LFLAGS_RELEASE = -Wl,-s in qmake.conf file for MinGW\n\n# -s will remove all symbol table and relocation information from the executable.\n",
        "Line" : 67,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# win32 vs. win64\n",
        "Line" : 73,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# 32-bit\n",
        "Line" : 74,
        "CharPositionInLine" : 30
      },
      "13" : {
        "Text" : "# 64-bit\n",
        "Line" : 76,
        "CharPositionInLine" : 13
      },
      "14" : {
        "Text" : "# debug\n",
        "Line" : 80,
        "CharPositionInLine" : 11
      },
      "15" : {
        "Text" : "# 32-bit\n",
        "Line" : 81,
        "CharPositionInLine" : 30
      },
      "16" : {
        "Text" : "# 64-bit\n",
        "Line" : 83,
        "CharPositionInLine" : 13
      },
      "17" : {
        "Text" : "# Unix libraries and includes\n",
        "Line" : 101,
        "CharPositionInLine" : 9
      },
      "18" : {
        "Text" : "# required for backtrace\n\n# In order to get the stack trace in Windows we must add -g flag. Qt automatically adds the -O2 flag for optimization.\n\n# We should also unset the QMAKE_LFLAGS_RELEASE define because it is defined as QMAKE_LFLAGS_RELEASE = -Wl,-s in qmake.conf file for MinGW\n\n# -s will remove all symbol table and relocation information from the executable.\n\n# On unix we use backtrace of execinfo.h which requires -rdynamic\n\n# The symbol names may be unavailable without the use of special linker\n\n# options.  For systems using the GNU linker, it is necessary to use\n\n# the -rdynamic linker option.  Note that names of \"static\" functions\n\n# are not exposed, and won't be available in the backtrace.\n",
        "Line" : 103,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# 32-bit\n",
        "Line" : 116,
        "CharPositionInLine" : 92
      },
      "20" : {
        "Text" : "#    CONFIG += opengl\n\n#  }\n",
        "Line" : 305,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# if Qt 5.4 or greater\n",
        "Line" : 308,
        "CharPositionInLine" : 68
      },
      "22" : {
        "Text" : "# if Qt 5.4 or greater\n",
        "Line" : 326,
        "CharPositionInLine" : 68
      },
      "23" : {
        "Text" : "# Please read the warnings. They are like vegetables; good for you even if you hate them.\n",
        "Line" : 361,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Only disable the unused variable/function/parameter warning\n",
        "Line" : 363,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "qjson/CMakeLists.txt" : {
      "ObjectId" : "9666a17f62187b7414cd46686888b8695db57cab",
      "LastModified" : "2018-09-05T11:50:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Force cmake 2.8.8 in order to have a decent support of Qt5\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Do not link against qtmain on Windows\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Ability to disable verbose debug output\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# On Windows debug library should have 'd' postfix.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# BUILD_SHARED_LIBS is cmake variable. Need to change default value.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Don't use absolute path in qjson-targets-*.cmake\n\n# (This will have no effect with CMake < 2.8)\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Tell CMake to run moc when necessary:\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# As moc files are generated in the binary dir, tell CMake\n\n# to always look for includes there:\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# find \"-std=\" in the flags, some Qt5 cmake configs do not set it (centos el7)\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# check if we found it\n",
        "Line" : 63,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Find Qt4\n",
        "Line" : 74,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Include the cmake file needed to use qt4\n",
        "Line" : 77,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "#add extra search paths for libraries and includes\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# pkg-config\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Subdirs\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# figure out the relative path from the installed Config.cmake file to the install prefix (which may be at\n\n# runtime different from the chosen CMAKE_INSTALL_PREFIX if under Windows the package was installed anywhere)\n\n# This relative path will be configured into the QJSONConfig.cmake\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# cmake-modules\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "qjson/src/CMakeLists.txt" : {
      "ObjectId" : "df560a6e63704d0932983775ff607e37c0385cf3",
      "LastModified" : "2015-07-23T22:48:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add_custom_command (OUTPUT ${qjson_SOURCE_DIR}/lib/json_parser.cc\n\n#                    PRE_BUILD\n\n#                    COMMAND bison -t -o json_parser.cc -d json_parser.yy\n\n#                    DEPENDS json_parser.yy\n\n#                    WORKING_DIRECTORY ${qjson_SOURCE_DIR}/lib/\n\n#                    )\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# To regenerate json_scanner.cc use:\n\n# flex json_scanner.yy\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Required to use the intree copy of FlexLexer.h\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Special hack to fix scanner test compilation on Windows\n\n# JsonScanner class is not for export. So need to make static\n\n# lib what can be compiled against scanner test.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "qjson/tests/CMakeLists.txt" : {
      "ObjectId" : "dab0cdca83471dbf6cf5e100f7038fe0a5a38d20",
      "LastModified" : "2015-07-23T22:48:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "qjson/tests/benchmarks/CMakeLists.txt" : {
      "ObjectId" : "824b56ec3d471196e532175bb4fed3f18fa2c700",
      "LastModified" : "2015-07-23T22:48:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##### Probably don't want to edit below this line #####\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Include the library include directories, and the current build directory (moc)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Build the tests\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# produce XML output\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "qjson/tests/cmdline_tester/CMakeLists.txt" : {
      "ObjectId" : "c7cf4cd0b6b1599ac539b4c079635b90a7f668bb",
      "LastModified" : "2015-07-23T22:48:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##### Probably don't want to edit below this line #####\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use it\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Include the library include directories, and the current build directory (moc)\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "qjson/tests/parser/CMakeLists.txt" : {
      "ObjectId" : "bd86cee9b92c4f61528802377c1dbab837ab20ae",
      "LastModified" : "2015-07-23T22:48:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##### Probably don't want to edit below this line #####\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use it\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Include the library include directories, and the current build directory (moc)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Build the tests\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# produce XML output\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "qjson/tests/qobjecthelper/CMakeLists.txt" : {
      "ObjectId" : "d1636e6fb059fa78f882efb29ad0bf86b6c3e137",
      "LastModified" : "2015-07-23T22:48:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##### Probably don't want to edit below this line #####\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use it\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Include the library include directories, and the current build directory (moc)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Build the tests\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# produce XML output\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "qjson/tests/scanner/CMakeLists.txt" : {
      "ObjectId" : "48c1c18f394036933bae49ee7ddc8595cce77c33",
      "LastModified" : "2015-07-23T22:48:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##### Probably don't want to edit below this line #####\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use it\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Include the library include directories, and the current build directory (moc)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Build the tests\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# produce XML output\n",
        "Line" : 47,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "qjson/tests/serializer/CMakeLists.txt" : {
      "ObjectId" : "c3411bc7550b0ba2d28e023bf0850174735c7198",
      "LastModified" : "2015-07-23T22:48:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##### Probably don't want to edit below this line #####\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use it\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Include the library include directories, and the current build directory (moc)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Build the tests\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# produce XML output\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    }
  },
  "FileTypes" : {
    "CMAKE" : 9,
    "QMAKE" : 1
  },
  "ElapsedTime" : 2333
}