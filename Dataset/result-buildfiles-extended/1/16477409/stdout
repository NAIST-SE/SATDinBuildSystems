{
  "Repository" : "16477409",
  "Revision" : "HEAD",
  "ObjectId" : "fbaa134bfadfd0432a1951d825e2385ec0bd9389",
  "CommitTime" : "2019-04-06T15:41:28Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "913f914f894429ba891c05dfcc7bd4b015308d17",
      "LastModified" : "2019-02-17T19:58:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Check for ccache\n",
        "Line" : 6,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Do only set ccache compiler if we don't already use a ccache wrapper\n\n# Example: /usr/lib/ccache/g++\n",
        "Line" : 15,
        "CharPositionInLine" : 12
      },
      "2" : {
        "Text" : "# Figure out RTTR_REVISION (git hash) and RTTR_VERSION (date)\n\n# Those can be manually set to override the default values\n\n# By default those are non-Cache variables which regenerates them on every configure run\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Get git commit hash. Note: CMake will reconfigure if the git hash changes\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Just include required\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "################################################################################\n\n# Include platform specific config files\n\n################################################################################\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#Include cross-compile platform config\n",
        "Line" : 67,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#Include generic platform config\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Better portability\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "################################################################################\n\n# ClangFormat\n\n################################################################################\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "################################################################################\n\n# Set paths.\n\n# Note: Mixing relative and absolute paths is not recommended!\n\n# If RTTR_BINDIR is absolute then relative paths are relative to CMAKE_INSTALL_PREFIX\n\n# Else a prefix path is calculated based on RTTR_BINDIR and the current executable path so that we have <PrefixPath>/RTTR_BINDIR\n\n# In this case all relative paths are relative to that prefix path\n\n# Example: RTTR_BINDIR=\"bin\", RTTR_DATADIR=\"data\" executed in \"/foo/bar/bin/rttr.exe\" -> FULL_DATADIR=/foo/bar/data\n\n################################################################################\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Windows uses one directory only\n",
        "Line" : 114,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# (At least) bundling assumes, that all executables are in same folder inside MacOS\n\n# Additionally main executable is assumed to be in MacOS\n",
        "Line" : 129,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# Avoid using absolute path accidentally\n",
        "Line" : 140,
        "CharPositionInLine" : 12
      },
      "14" : {
        "Text" : "# The default contains PROJECTNAME which would be \"s25client\"\n",
        "Line" : 148,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# Avoid using absolute path accidentally\n",
        "Line" : 152,
        "CharPositionInLine" : 12
      },
      "16" : {
        "Text" : "# Output directories\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Helper function to set output dirs for all configurations\n\n# output_type is RUNTIME, LIBRARY, ...\n\n# subDir is the subdirectory in RTTR_OUTPUT_DIR_XXX\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "################################################################################\n\n# Definitions and flags\n\n################################################################################\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Clang bug workaround\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Code coverage\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "################################################################################\n\n# Configure files\n\n################################################################################\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "################################################################################\n\n# Set variables used by the release scripts and the updater:\n\n#   PLATFORM_NAME in lowercase (windows, linux,...)\n\n#   PLATFORM_ARCH: i386, x86_64, universal\n\n################################################################################\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Set PLATFORM_ARCH\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "################################################################################\n\n# Boost\n\n################################################################################\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# include Test\n",
        "Line" : 290,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Used by copyDepsToBuildDir\n",
        "Line" : 298,
        "CharPositionInLine" : 71
      },
      "27" : {
        "Text" : "# Copy the RTTR folder with the updated translations to the directory of the client.\n",
        "Line" : 305,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "################################################################################\n\n# Install\n\n################################################################################\n",
        "Line" : 317,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# RTTR directory, but exclude language input files\n",
        "Line" : 321,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Documentation. TODO: Avoid recursive entries?\n",
        "Line" : 326,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Placeholder for S2 installation\n",
        "Line" : 331,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "################################################################################\n\n# Postbuild\n\n################################################################################\n",
        "Line" : 334,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "################################################################################\n\n# Packing\n\n################################################################################\n",
        "Line" : 342,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# stable build?\n",
        "Line" : 353,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 35
    },
    "cmake/Modules/ArmConfig.cmake" : {
      "ObjectId" : "c9d031a9c71f389dd68bd1a41d7a1598dc6096a7",
      "LastModified" : "2018-07-20T07:51:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Arm specific configs. Values taken from https://gist.github.com/fm4dd/c663217935dc17f0fc73c9c81b0aa845\n\n#\n\n# Functions: get_arm_tune (cpu as tune target), get_arm_fpu (fpu target), get_arm_flags (full arm-specific optimization)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/CheckGitSubmodules.cmake" : {
      "ObjectId" : "d5b7ba5d7e78aaab00c5243d81a32c0e40150e94",
      "LastModified" : "2018-11-14T07:33:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Convert to CMake list\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "cmake/Modules/ConfigureExecutable.cmake" : {
      "ObjectId" : "b716171473e79ce68365176754d2ce36d394164b",
      "LastModified" : "2018-11-14T07:33:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configures the given input file and copies it to the output_dir/output_name with executable permissions\n\n# output_dir has to be a path relative to CMAKE_CURRENT_BINARY_DIR\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/ConstrainedOption.cmake" : {
      "ObjectId" : "f582113da098148bd337b590c906bf9e5b4cdccc",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add an option where the value can only be one of a list of values\n\n# Parameters:\n\n# DEFAULT     -- Default value\n\n# DESCRIPTION -- Description\n\n# VALUES      -- List of allowed values\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindSDL2.cmake" : {
      "ObjectId" : "95ab4806c2c43e0b081c6d397dbd1ee9d934ab3b",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find SDL2\n\n# Find the SDL2 headers and libraries\n\n#\n\n#  SDL2::SDL2 - Imported target to use for building a library\n\n#  SDL2::SDL2main - Imported interface target to use if you want SDL2main.\n\n#  SDL2_FOUND - True if SDL2 was found.\n\n#  SDL2_DYNAMIC - If we found a DLL version of SDL (meaning you might want to copy a DLL from SDL2::SDL2)\n\n#\n\n# Original Author:\n\n# 2015 Ryan Pavlik <ryan.pavlik@gmail.com> <abiryan@ryand.net>\n\n#\n\n# Copyright Sensics, Inc. 2015.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Invoke pkgconfig for hints\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# this file was introduced with SDL2\n",
        "Line" : 30,
        "CharPositionInLine" : 46
      },
      "3" : {
        "Text" : "# Need Cocoa here\n",
        "Line" : 114,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "# Compute what to do with SDL2main\n",
        "Line" : 121,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Dummy target\n",
        "Line" : 135,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 6
    },
    "cmake/Modules/GetGitRevisionDescription.cmake" : {
      "ObjectId" : "8ab03bc5f0b766462e05edb6afbe9c20e8115b46",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Returns a version string from Git\n\n#\n\n# These functions force a re-configure on each git commit so that you can\n\n# trust the values of the variables in your build system.\n\n#\n\n#  get_git_head_revision(<refspecvar> <hashvar> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the refspec and sha hash of the current head revision\n\n#\n\n#  git_describe(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe on the source tree, and adjusting\n\n# the output so that it tests false if an error occurs.\n\n#\n\n#  git_get_exact_tag(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe --exact-match on the source tree,\n\n# and adjusting the output so that it tests false if there was no exact\n\n# matching tag.\n\n#\n\n#  git_local_changes(<var>)\n\n#\n\n# Returns either \"CLEAN\" or \"DIRTY\" with respect to uncommitted changes.\n\n# Uses the return code of \"git diff-index --quiet HEAD --\".\n\n# Does not regard untracked files.\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We must run the following at \"include\" time, not at function call time,\n\n# to find the path to this module rather than the path to a calling list file\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# .git dir not found, search parent directories\n",
        "Line" : 51,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "# We have reached the root directory, we are not in git\n",
        "Line" : 55,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# check if this is a submodule\n",
        "Line" : 62,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# TODO sanitize\n\n#if((${ARGN}\" MATCHES \"&&\") OR\n\n#\t(ARGN MATCHES \"||\") OR\n\n#\t(ARGN MATCHES \"\\\\;\"))\n\n#\tmessage(\"Please report the following error to the project!\")\n\n#\tmessage(FATAL_ERROR \"Looks like someone's doing something nefarious with git_describe! Passed arguments ${ARGN}\")\n\n#endif()\n",
        "Line" : 103,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "#message(STATUS \"Arguments to execute_process: ${ARGN}\")\n",
        "Line" : 111,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 7
    },
    "cmake/Modules/ParseArguments.cmake" : {
      "ObjectId" : "1968e89f1cb9eef897a5cb1da17971d0819333fe",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Modules/SetIfUnset.cmake" : {
      "ObjectId" : "a3b87c261b7171b892a5379bb0e472938b5c70d5",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set the given variable to the default value if it is unset (empty)\n\n# Note: Does nothing even if the variable is falsy (OFF, ...)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/c.windows.cmake" : {
      "ObjectId" : "e27c752d34a5b7707a7f8ffd31eb51981d0a4900",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# disable rsp files to allow ccache to work\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/darwin.cmake" : {
      "ObjectId" : "6385e9b5f6a001b78d782db6becb0ab86bb2a12e",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Detect possible platforms\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set default to current (if not set)\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO if(... IN_LIST ...) at CMake 3.3\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Use all\n",
        "Line" : 13,
        "CharPositionInLine" : 55
      },
      "4" : {
        "Text" : "# Should not happen\n",
        "Line" : 14,
        "CharPositionInLine" : 11
      },
      "5" : {
        "Text" : "# Not both!\n",
        "Line" : 23,
        "CharPositionInLine" : 45
      },
      "6" : {
        "Text" : "# Filter by flags and print status\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# i386 only?\n",
        "Line" : 40,
        "CharPositionInLine" : 45
      },
      "8" : {
        "Text" : "# x86_64 only?\n",
        "Line" : 42,
        "CharPositionInLine" : 50
      },
      "9" : {
        "Text" : "# set linker flags\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "cmake/optimizations.cmake" : {
      "ObjectId" : "a0d24fb3084db21c8f87fdaf0a5950403b893c98",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# systemintern functions for faster code; Optimize whole program\n",
        "Line" : 3,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Strip unused symbols and us COMDAT folding\n",
        "Line" : 5,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Set allowed options\n",
        "Line" : 27,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# MinGW has a check for a bug(?) in GCC >=6 which warns/errors on \"-msse -mfpmath=sse\" which leads to an invalid __FLT_EVAL_METHOD__\n",
        "Line" : 31,
        "CharPositionInLine" : 16
      },
      "4" : {
        "Text" : "# Don't use this for GCC < 8 on apple due to ICE: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=78380\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Adding multiple mtune flags just uses the last one, so adding mtune=generic above is ok\n",
        "Line" : 50,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# ppc only?\n",
        "Line" : 55,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Clang and GCC version\n",
        "Line" : 57,
        "CharPositionInLine" : 50
      },
      "CommentCount" : 8
    },
    "cmake/toolchains/c.apple.common.cmake" : {
      "ObjectId" : "de4133cf54602014b3b18b7c7013691da7a947a0",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is a util script intended to be included by darwin toolchains\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# specify the cross compiler\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# set SDK (use newest first)\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#  10.x == Mac OSX 10.6 (Snow Leopard)\n\n#  11.x == Mac OSX 10.7 (Lion)\n\n#  12.x == Mac OSX 10.8 (Mountain Lion)\n\n#  etc.\n",
        "Line" : 58,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# search for programs in the build host directories\n\n# for libraries and headers in the target directories\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/toolchains/c.apple.i686.cmake" : {
      "ObjectId" : "8b7ee1d1233edc042371b2e0df71e3aa4ab05e6f",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set compilers...\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/toolchains/c.apple.ppc.cmake" : {
      "ObjectId" : "0fa8acc350bfa8d33ef6af3f0c610a38084f9028",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set compilers...\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/toolchains/c.apple.universal.cmake" : {
      "ObjectId" : "949d7f27167288fd8d090bd782ce5e8e3deb52f1",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#SET(CMAKE_OSX_ARCHITECTURES \"???\" CACHE STRING \"OSX-Architectures\" FORCE)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set compilers...\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/toolchains/c.apple.x86_64.cmake" : {
      "ObjectId" : "f6844bb14d8a1b96c1b462f18a225359d32f6bed",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set compilers...\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/toolchains/c.linux.arm.cmake" : {
      "ObjectId" : "8008b042ff998cb23a309eb98ce5fe19f498a7bb",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/toolchains/c.linux.common.cmake" : {
      "ObjectId" : "588006efa52d96a2b7a84eef06ef1dfd2fa830ae",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set search prefix\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# search for programs in the build host directories\n\n# for libraries and headers in the target directories\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/toolchains/c.linux.i686.cmake" : {
      "ObjectId" : "f2743275413099bb2ad5f35e896f2fec437f716d",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/toolchains/c.linux.x86_64.cmake" : {
      "ObjectId" : "b414fb84c1a3dcef0b947ba5d6e32de64a8641c5",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/toolchains/c.windows.common.cmake" : {
      "ObjectId" : "7bd58d0f5c01d0de209b032b396824bfaadd8031",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Default to Win10 if not set on command line\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Search for a matching MinGW compiler preferring the more recent w64 infix\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# set search prefix\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# search for programs in the build host directories\n\n# for libraries and headers in the target directories\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/toolchains/c.windows.i686.cmake" : {
      "ObjectId" : "47b46d23d9cf11579635f1122adfa810368b4346",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/toolchains/c.windows.x86_64.cmake" : {
      "ObjectId" : "d057712a8400c4a544a75fb401a3d13fc622e07a",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/windows.cmake" : {
      "ObjectId" : "641d5195b37929635dc64e16597114c88b1c79de",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enforce unicode\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If using MinGW under windows we detect this and add it to the CMAKE_PREFIX_PATH\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Note: Do not add the main MinGW path (e.g. C:\\MinGW) as adding C:\\MinGW\\include to the system include dirs causes GCC failures\n",
        "Line" : 12,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Add optimized debugging features\n",
        "Line" : 16,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# added in MSVC 2015\n",
        "Line" : 17,
        "CharPositionInLine" : 29
      },
      "CommentCount" : 5
    },
    "copyDepsToBuildDir.cmake" : {
      "ObjectId" : "5c74f04b412bdde11952ff2aa2f5af12b412ca34",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Needs to be configured with @ONLY and called with -DCMAKE_BUILD_TYPE=...\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "################################################################################\n\n# Copy data files for easier debugging\n\n################################################################################\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "external/CMakeLists.txt" : {
      "ObjectId" : "5037f1961bdc7028c9b2813a666ee5399e0436b1",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n# MSVC\n\n################################################################################\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Append msvcContribDir to CMAKE_PREFIX_PATH\n\n# Set CMAKE_LIBRARY_ARCHITECTURE and CONTRIB_DLL_DIR\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Add dlls to the gathered ones\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "################################################################################\n\n# Bzip2 sources\n\n################################################################################\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Building the updater when using non-default paths (especially absolute paths)\n\n# is not recommended as it most likely won't work\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "external/glad/CMakeLists.txt" : {
      "ObjectId" : "aef35cb5a9d55a3e7fa928efc4a505856be90e36",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Note: Sources and headers are generated using http://glad.dav1d.de/ on 07.07.2018\n\n# See glad.h for details\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "external/glad/openglCfg.hpp.cmake" : {
      "ObjectId" : "2a8f6c0959b9affd292eb24ec2c3bc3c381d43c0",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "// The OpenGL(ES) major and minor version to be used",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "// True(thy) if OpenGL ES should be used",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "// True(thy) if OpenGL compatibility profile should be used",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "extras/CMakeLists.txt" : {
      "ObjectId" : "e715733044868f8edf6dc36a1103135076988d96",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "extras/audioDrivers/CMakeLists.txt" : {
      "ObjectId" : "1c9c406027ac832e07c3553223c2760c1aedae01",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "extras/audioDrivers/SDL/CMakeLists.txt" : {
      "ObjectId" : "776560b052e9c83e118edd14f4113d06eb77ad47",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "extras/macosLauncher/CMakeLists.txt" : {
      "ObjectId" : "37bf7ceb93aa3b82b1508c05cff5220c73fa6ab4",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "extras/videoDrivers/CMakeLists.txt" : {
      "ObjectId" : "baaeb9d8034d9530f48c3cecd6f3af35264b5de9",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "extras/videoDrivers/SDL/CMakeLists.txt" : {
      "ObjectId" : "f38e68d635072bb55e429f3c28a20482e67870a9",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "extras/videoDrivers/SDL2/CMakeLists.txt" : {
      "ObjectId" : "b1cdae4ffb40e16ed4ec4c4463841dec18342b9e",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "extras/videoDrivers/WinAPI/CMakeLists.txt" : {
      "ObjectId" : "f04c68b5fd0bec1cc1cc5eb72fdf582efb18edf3",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/CMakeLists.txt" : {
      "ObjectId" : "e12a24720b81cf8f78db4ed36cdb23d96147bbf3",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/common/CMakeLists.txt" : {
      "ObjectId" : "2d5961b3753c8ec1b1ae2436d75a88f3318635fe",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/driver/CMakeLists.txt" : {
      "ObjectId" : "0a3bbdbb200c0370fd9c8f3a950c9ac1c3dea7ca",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Library interface to be consumed by users\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Base libraries to be used by driver implementations\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "libs/libGamedata/CMakeLists.txt" : {
      "ObjectId" : "de54c81f5192aafa002390dd65fdffa4b2fc7541",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n# LUA\n\n################################################################################\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Here we set hints to lua libraries used for official builds Normally those should be\n\n# on the build server but we make them available here for convenience.\n\n# As this will be appended to CMAKE_PREFIX_PATH one can use other version by setting\n\n# that appropriately\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Library is in contrib archive which is in prefix path.\n\n# We just need the includes (which we did not duplicate in the msvc-contrib\n",
        "Line" : 26,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# Set only if we have a library for this arch\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# For cross compilation we must set CMAKE_FIND_ROOT_PATH instead\n",
        "Line" : 50,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# CMake < 3.2 treats version 5.2.x as not equal to 5.2 but we want to allow all 5.2 versions\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "libs/rttrConfig/CMakeLists.txt" : {
      "ObjectId" : "e1b96c94f426e1ab901f4b2f6a00018a9d4cfd37",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This should happen in the top-level CMakeLists\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "libs/rttrConfig/build_paths.h.cmake" : {
      "ObjectId" : "a4d70425de6ec0297dd2b24ef8d46c7ed323c6f6",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/// Path where the source was when the application got compiled",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/// Install prefix path",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "///\tset binary directory (normal ./bin)",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "///\tset extra binary directory (normal ./libexec)",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "///\tset data directory (normal ./share/s25rttr)",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "///\tset game directory (normal RTTR_DATADIR/S2)",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "///\tset lib directory (normal RTTR_DATADIR)",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "///\tset driver directory (normal RTTR_LIBDIR/driver)",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "libs/rttrConfig/build_version_defines.h.cmake" : {
      "ObjectId" : "27a6f40f7874300ace138b48c4226d74973fae36",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKESOURCE",
      "CommentCount" : 0
    },
    "libs/s25client/CMakeLists.txt" : {
      "ObjectId" : "e89f751f89b6ac5deed4858209559463453688f7",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add Icon to Application\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "libs/s25main/CMakeLists.txt" : {
      "ObjectId" : "c194b53a92562ec573f5cf18eb8c5695a20ba1e2",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# For clock_gettime etc. this is required on some platforms/compilers\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For dynamic driver loading (DriverWrapper)\n",
        "Line" : 80,
        "CharPositionInLine" : 56
      },
      "CommentCount" : 2
    },
    "start.sh.cmake" : {
      "ObjectId" : "4034784b62dd28dd7b55fc49b9d000180fcbd4ef",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#!/bin/sh\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# != 0 ; do\n",
        "Line" : 14,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 2
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "97fb1ecae12268754346da915242bed7483004a2",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/common/CMakeLists.txt" : {
      "ObjectId" : "05a921d06ede63db4fb155a24c39ebce8dfbec6c",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/legacyFiles/CMakeLists.txt" : {
      "ObjectId" : "c581da549658218dddedbfdddfff3335e1d08221",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Library containing old files that are still useful for tests\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/libGameData/CMakeLists.txt" : {
      "ObjectId" : "97ef9719973db6f87c0d1e95b02fc857b0b7e546",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/mockupDrivers/CMakeLists.txt" : {
      "ObjectId" : "4f649d0ff9d1c4cc94ccda4b41b181cbd4d392db",
      "LastModified" : "2019-04-05T14:02:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/rttrConfig/CMakeLists.txt" : {
      "ObjectId" : "3092370474c03de3c0ff74649bcd03d29a165ac8",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/s25Main/CMakeLists.txt" : {
      "ObjectId" : "642e99b9c5d3b6ffb1b189a2256b12113c995c21",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/s25Main/IO/CMakeLists.txt" : {
      "ObjectId" : "30feafc9c55d36a3d013b64371c4625b4028a9c5",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tests using file I/OB\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/s25Main/UI/CMakeLists.txt" : {
      "ObjectId" : "cb5c2b0cc11983e137c900a6b4bd506274570198",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tests using the video system\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/s25Main/UI/uiHelper/CMakeLists.txt" : {
      "ObjectId" : "03a25cd50f5d5afb99345e5a024ec7b94f58e5ba",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/s25Main/audio/CMakeLists.txt" : {
      "ObjectId" : "6e8f870bc38a95f11ba48d6eb72ee33ef73c5bb7",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tests using the audio system\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/s25Main/integration/CMakeLists.txt" : {
      "ObjectId" : "558114ea222781159033acd6ef29f68f24187291",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tests testing more than single components\n\n# e.g. creating a whole world\n\n# Lua related tests are extra\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/s25Main/locale/CMakeLists.txt" : {
      "ObjectId" : "eaa094223353c879be5d1be4b36e4944581ad711",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tests beeing locale dependent\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/s25Main/lua/CMakeLists.txt" : {
      "ObjectId" : "3f95fc4fb54a910c27efdf9a386e27ddea3df973",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tests using lua\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/s25Main/mapGenerator/CMakeLists.txt" : {
      "ObjectId" : "720cd29f26e27eb666584a81e8f6c68afaddaa6d",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tests relating to the map generator\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/s25Main/network/CMakeLists.txt" : {
      "ObjectId" : "66ae1f1e9f8b6e50ea69fbb066c26d367b966b85",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tests using network I/O\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/s25Main/simple/CMakeLists.txt" : {
      "ObjectId" : "01afa406a326c8aaeeb3ec3765831141b6515d6b",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \"Simple\" test testing single classes\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/s25Main/testConfig.h.cmake" : {
      "ObjectId" : "7f4528e2b1facee260bedc509646e5b6857018aa",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/// Base directory with the sources",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/// Path to libsiedler2 test files",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tests/testHelpers/CMakeLists.txt" : {
      "ObjectId" : "a1fdbeeb6243915184cef2f330ae4c91df1593a2",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Heuristically guess if we are compiling against dynamic boost\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/release/CMakeLists.txt" : {
      "ObjectId" : "7159fda36b31332f241ef9c0200b1502a2e0e896",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Start script\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# copy Frameworks\n",
        "Line" : 15,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# copy miniupnpc\n",
        "Line" : 24,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Path used for searching by FIND_XXX(), with appropriate suffixes added\n",
        "Line" : 34,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# copy miniupnpc\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "tools/release/prepareRelease.sh.cmake" : {
      "ObjectId" : "466804dc12f260abdbd34966ba38e6c3f8c1aef0",
      "LastModified" : "2019-03-12T09:18:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#!/bin/bash\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Editable Variables\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###############################################################################\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###############################################################################\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###############################################################################\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "###############################################################################\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# strip ending slash from $DESTDIR\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# adding the slash again if DESTDIR is not empty\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "###############################################################################\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Can't extract symbols for apple, so just strip them\n",
        "Line" : 95,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#mkdir -vp dbg/$(dirname $FILE)\n\n#echo \"$OBJCOPY --only-keep-debug $FILE dbg/$FILE.dbg\"\n\n#$OBJCOPY --only-keep-debug $FILE dbg/$FILE.dbg\n",
        "Line" : 101,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "#echo \"$OBJCOPY --add-gnu-debuglink=dbg/$FILE.dbg $FILE\"\n\n#$OBJCOPY --add-gnu-debuglink=dbg/$FILE.dbg $FILE\n",
        "Line" : 106,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# strip out debug symbols into external file\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# All done in CMake\n",
        "Line" : 148,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# exclude system dlls\n",
        "Line" : 161,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Use fallback\n",
        "Line" : 225,
        "CharPositionInLine" : 5
      },
      "16" : {
        "Text" : "# Use fallback\n",
        "Line" : 233,
        "CharPositionInLine" : 5
      },
      "17" : {
        "Text" : "###############################################################################\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    }
  },
  "FileTypes" : {
    "CMAKE" : 64,
    "CMAKESOURCE" : 4
  },
  "ElapsedTime" : 2223
}