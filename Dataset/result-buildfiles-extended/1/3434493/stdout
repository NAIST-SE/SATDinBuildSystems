{
  "Repository" : "3434493",
  "Revision" : "HEAD",
  "ObjectId" : "a337c568486025d22443535b7c047a563bc34373",
  "CommitTime" : "2019-04-16T21:08:39Z",
  "Files" : {
    "CMake/GenerateMappings.cmake" : {
      "ObjectId" : "7a88e3d4457c21ae16a60ee6c9ab19307d7b212a",
      "LastModified" : "2018-02-13T17:57:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Usage:\n\n# cmake -P GenerateMappings.cmake <path/to/mappings.h.in> <path/to/mappings.h>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/i686-w64-mingw32-clang.cmake" : {
      "ObjectId" : "8726b2382fb030d19d88f0ca851e66fa7435005d",
      "LastModified" : "2019-04-07T18:44:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the environment for cross-compiling with 32-bit MinGW-w64 Clang\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Target system name\n",
        "Line" : 2,
        "CharPositionInLine" : 34
      },
      "2" : {
        "Text" : "# Configure the behaviour of the find commands\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "CMake/i686-w64-mingw32.cmake" : {
      "ObjectId" : "2ca4dcd9559339d7ffbf0052d496be0494b540ee",
      "LastModified" : "2019-04-01T15:40:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the environment for cross-compiling with 32-bit MinGW-w64 GCC\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Target system name\n",
        "Line" : 2,
        "CharPositionInLine" : 34
      },
      "2" : {
        "Text" : "# Configure the behaviour of the find commands\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "CMake/modules/FindEpollShim.cmake" : {
      "ObjectId" : "2facb4192cf052dac6579ce610cb854a75cc63b4",
      "LastModified" : "2019-04-01T15:40:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find EpollShim\n\n# Once done, this will define\n\n#\n\n#   EPOLLSHIM_FOUND - System has EpollShim\n\n#   EPOLLSHIM_INCLUDE_DIRS - The EpollShim include directories\n\n#   EPOLLSHIM_LIBRARIES - The libraries needed to use EpollShim\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/modules/FindOSMesa.cmake" : {
      "ObjectId" : "3194bd91aba752835fd7ecc4de3db403d8efc82e",
      "LastModified" : "2019-04-01T15:40:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find OSMesa on a Unix system\n\n#\n\n# This will define:\n\n#\n\n#   OSMESA_LIBRARIES   - Link these to use OSMesa\n\n#   OSMESA_INCLUDE_DIR - Include directory for OSMesa\n\n#\n\n# Copyright (c) 2014 Brandon Schaefer <brandon.schaefer@canonical.com>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/modules/FindWaylandProtocols.cmake" : {
      "ObjectId" : "8eb83f27ef88575f80a56198bd2635580452a914",
      "LastModified" : "2019-04-01T15:40:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/modules/FindXKBCommon.cmake" : {
      "ObjectId" : "0f571eeacb5cd91d4ef72a89a066142e5a6a0d0a",
      "LastModified" : "2019-04-01T15:40:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find XKBCommon\n\n# Once done, this will define\n\n#\n\n#   XKBCOMMON_FOUND - System has XKBCommon\n\n#   XKBCOMMON_INCLUDE_DIRS - The XKBCommon include directories\n\n#   XKBCOMMON_LIBRARIES - The libraries needed to use XKBCommon\n\n#   XKBCOMMON_DEFINITIONS - Compiler switches required for using XKBCommon\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/x86_64-w64-mingw32-clang.cmake" : {
      "ObjectId" : "60f7914df9c1221142effa556e54fadfc3e1484b",
      "LastModified" : "2019-04-07T18:44:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the environment for cross-compiling with 64-bit MinGW-w64 Clang\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Target system name\n",
        "Line" : 2,
        "CharPositionInLine" : 34
      },
      "2" : {
        "Text" : "# Configure the behaviour of the find commands\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "CMake/x86_64-w64-mingw32.cmake" : {
      "ObjectId" : "063e845aac4d8dd4d865811331f8cd4d56514841",
      "LastModified" : "2019-04-01T15:40:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the environment for cross-compiling with 64-bit MinGW-w64 GCC\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Target system name\n",
        "Line" : 2,
        "CharPositionInLine" : 34
      },
      "2" : {
        "Text" : "# Configure the behaviour of the find commands\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "CMakeLists.txt" : {
      "ObjectId" : "657fd09f39b8cccde06982cb5814e69bad6e25ad",
      "LastModified" : "2019-04-16T21:08:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# On Unix-like systems, shared libraries can use the soname system.\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# If you absolutely must do this, remove this line and add the Vulkan\n\n# loader static library via the CMAKE_SHARED_LINKER_FLAGS\n",
        "Line" : 58,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Set compiler specific flags\n\n#--------------------------------------------------------------------\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Workaround for VS 2008 not shipping with the DirectX 9 SDK\n",
        "Line" : 79,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Workaround for VS 2008 not shipping with stdint.h\n",
        "Line" : 85,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Workaround for legacy MinGW not providing XInput and DirectInput\n",
        "Line" : 108,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Enable link-time exploit mitigation features enabled by default on MSVC\n",
        "Line" : 117,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Compatibility with data execution prevention (DEP)\n",
        "Line" : 120,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Compatibility with address space layout randomization (ASLR)\n",
        "Line" : 127,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Compatibility with 64-bit address space layout randomization (ASLR)\n",
        "Line" : 134,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Detect and select backend APIs\n\n#--------------------------------------------------------------------\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Find and add Unix math and time libraries\n\n#--------------------------------------------------------------------\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Use Win32 for window creation\n\n#--------------------------------------------------------------------\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Use X11 for window creation\n\n#--------------------------------------------------------------------\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Set up library and include paths\n",
        "Line" : 209,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Check for XRandR (modern resolution switching and gamma control)\n",
        "Line" : 213,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Check for Xinerama (legacy multi-monitor support)\n",
        "Line" : 218,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Check for Xkb (X keyboard extension)\n",
        "Line" : 223,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Check for Xcursor (cursor creation from RGBA images)\n",
        "Line" : 228,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Use Wayland for window creation\n\n#--------------------------------------------------------------------\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Use OSMesa for offscreen context creation\n\n#--------------------------------------------------------------------\n",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Use Cocoa for window creation and NSOpenGL for context creation\n\n#--------------------------------------------------------------------\n",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Add the Vulkan loader as a dependency if necessary\n\n#--------------------------------------------------------------------\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Export GLFW library dependencies\n\n#--------------------------------------------------------------------\n",
        "Line" : 302,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Create generated files\n\n#--------------------------------------------------------------------\n",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Add subdirectories\n\n#--------------------------------------------------------------------\n",
        "Line" : 332,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Install files other than the library\n\n# The library is installed by src/CMakeLists.txt\n\n#--------------------------------------------------------------------\n",
        "Line" : 349,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Only generate this target if no higher-level project already has\n",
        "Line" : 367,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 28
    },
    "docs/CMakeLists.txt" : {
      "ObjectId" : "7a7407a1e21eb7724af726225a7aa1dbfe2648e7",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/CMakeLists.txt" : {
      "ObjectId" : "98da2cd7bd4a337e4ce1d154cbbe5716174ebd09",
      "LastModified" : "2019-04-15T00:45:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tell MSVC to use main instead of WinMain for Windows subsystem executables\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "0913579b61aeb162cf2fb70046e701addc0bcd27",
      "LastModified" : "2019-04-01T15:40:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# For some reason, CMake doesn't know about .m\n",
        "Line" : 76,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Make GCC and Clang warn about declarations that VS 2010 and 2012 won't accept\n\n# for all source files that VS will build\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# HACK: When building on MinGW, WINVER and UNICODE need to be defined before\n\n# the inclusion of stddef.h (by glfw3.h), which is itself included before\n\n# win32_platform.h.  We define them here until a saner solution can be found\n\n# NOTE: MinGW-w64 and Visual C++ do /not/ need this hack.\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Enable a reasonable set of warnings (no, -Wextra is not reasonable)\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Remove the lib prefix on the DLL (but not the import library)\n",
        "Line" : 128,
        "CharPositionInLine" : 12
      },
      "5" : {
        "Text" : "# Add a suffix to the import library to avoid naming conflicts\n",
        "Line" : 131,
        "CharPositionInLine" : 12
      },
      "6" : {
        "Text" : "# Add a suffix to the import library to avoid naming conflicts\n",
        "Line" : 134,
        "CharPositionInLine" : 12
      },
      "7" : {
        "Text" : "# Add -fno-common to work around a bug in Apple's GCC\n",
        "Line" : 138,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# Hide symbols not explicitly tagged for export from the shared library\n",
        "Line" : 144,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 9
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "97da4684c2d2034ec17b5a0e9823f7a4ad1cde7d",
      "LastModified" : "2019-04-15T12:35:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tell MSVC to use main instead of WinMain for Windows subsystem executables\n",
        "Line" : 61,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 14
  },
  "ElapsedTime" : 3227
}