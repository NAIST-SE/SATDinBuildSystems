{
  "Repository" : "6691989",
  "Revision" : "HEAD",
  "ObjectId" : "b11316ff03b3fb6e973b510db5da15c75bf28597",
  "CommitTime" : "2019-04-16T00:25:05Z",
  "Files" : {
    "3rdparty/SPMediaKeyTap/CMakeLists.txt" : {
      "ObjectId" : "9f51aa5bbfd4dabf203781595d81e286217a05f6",
      "LastModified" : "2011-05-30T10:09:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/google-breakpad/CMakeLists.txt" : {
      "ObjectId" : "9fd52dc2a9857ef171e6f06835a36f8ce0096cba",
      "LastModified" : "2011-05-30T10:09:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/libmygpo-qt/CMakeLists.txt" : {
      "ObjectId" : "64bd33cf26facab12b336354f0aa0305336687ff",
      "LastModified" : "2015-11-21T00:09:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Extra bits for Clementine.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rdparty/libprojectm/CMakeLists.txt" : {
      "ObjectId" : "a81a38fc60018e25988f6dbfdf18b7b3f3e3dab2",
      "LastModified" : "2018-11-25T22:11:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This policy was only added in cmake 2.8.4\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#ADD_DEFINITIONS(-DCMAKE_INSTALL_PREFIX=\"\\\\\\\"${CMAKE_INSTALL_PREFIX}\\\\\\\"\") \n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#set(CMAKE_INCLUDE_PATH ${CMAKE_INCLUDE_PATH};/opt/local/include;/Developer/SDKs/MACOSX10.5.sdk/usr/X11/include)\n\n#set(CMAKE_LIBRARY_PATH /opt/local/lib;/Developer/SDKs/MACOSX10.5.sdk;/Developer/SDKs/MacOSX10.5.sdk/usr/X11/lib/)\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "3rdparty/libprojectm/FindPkgConfig.cmake" : {
      "ObjectId" : "afae15cb021b201a90a44bcecc7873c0222e9de6",
      "LastModified" : "2011-05-30T10:09:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - a pkg-config module for CMake\n\n#\n\n# Usage:\n\n#   pkg_check_modules(<PREFIX> [REQUIRED] <MODULE> [<MODULE>]*)\n\n#     checks for all the given modules\n\n#\n\n#   pkg_search_module(<PREFIX> [REQUIRED] <MODULE> [<MODULE>]*)\n\n#     checks for given modules and uses the first working one\n\n#\n\n# When the 'REQUIRED' argument was set, macros will fail with an error\n\n# when module(s) could not be found\n\n#\n\n# It sets the following variables:\n\n#   PKG_CONFIG_FOUND         ... true iff pkg-config works on the system\n\n#   PKG_CONFIG_EXECUTABLE    ... pathname of the pkg-config program\n\n#   <PREFIX>_FOUND           ... set to 1 iff module(s) exist\n\n#\n\n# For the following variables two sets of values exist; first one is the\n\n# common one and has the given PREFIX. The second set contains flags\n\n# which are given out when pkgconfig was called with the '--static'\n\n# option.\n\n#   <XPREFIX>_LIBRARIES      ... only the libraries (w/o the '-l')\n\n#   <XPREFIX>_LIBRARY_DIRS   ... the paths of the libraries (w/o the '-L')\n\n#   <XPREFIX>_LDFLAGS        ... all required linker flags\n\n#   <XPREFIX>_LDFLAGS_OTHERS ... all other linker flags\n\n#   <XPREFIX>_INCLUDE_DIRS   ... the '-I' preprocessor flags (w/o the '-I')\n\n#   <XPREFIX>_CFLAGS         ... all required cflags\n\n#   <XPREFIX>_CFLAGS_OTHERS  ... the other compiler flags\n\n#\n\n#   <XPREFIX> = <PREFIX>        for common case\n\n#   <XPREFIX> = <PREFIX>_STATIC for static linking\n\n#\n\n# There are some special variables whose prefix depends on the count\n\n# of given modules. When there is only one module, <PREFIX> stays\n\n# unchanged. When there are multiple modules, the prefix will be\n\n# changed to <PREFIX>_<MODNAME>:\n\n#   <XPREFIX>_VERSION    ... version of the module\n\n#   <XPREFIX>_PREFIX     ... prefix-directory of the module\n\n#   <XPREFIX>_INCLUDEDIR ... include-dir of the module\n\n#   <XPREFIX>_LIBDIR     ... lib-dir of the module\n\n#\n\n#   <XPREFIX> = <PREFIX>  when |MODULES| == 1, else\n\n#   <XPREFIX> = <PREFIX>_<MODNAME>\n\n#\n\n# A <MODULE> parameter can have the following formats:\n\n#   {MODNAME}            ... matches any version\n\n#   {MODNAME}>={VERSION} ... at least version <VERSION> is required\n\n#   {MODNAME}={VERSION}  ... exactly version <VERSION> is required\n\n#   {MODNAME}<={VERSION} ... modules must not be newer than <VERSION>\n\n#\n\n# Examples\n\n#   pkg_check_modules (GLIB2   glib-2.0)\n\n#\n\n#   pkg_check_modules (GLIB2   glib-2.0>=2.10)\n\n#     requires at least version 2.10 of glib2 and defines e.g.\n\n#       GLIB2_VERSION=2.10.3\n\n#\n\n#   pkg_check_modules (FOO     glib-2.0>=2.10 gtk+-2.0)\n\n#     requires both glib2 and gtk2, and defines e.g.\n\n#       FOO_glib-2.0_VERSION=2.10.3\n\n#       FOO_gtk+-2.0_VERSION=2.8.20\n\n#\n\n#   pkg_check_modules (XRENDER REQUIRED xrender)\n\n#     defines e.g.:\n\n#       XRENDER_LIBRARIES=Xrender;X11\n\n#       XRENDER_STATIC_LIBRARIES=Xrender;X11;pthread;Xau;Xdmcp\n\n#\n\n#   pkg_search_module (BAR     libxml-2.0 libxml2 libxml>=2)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (C) 2006 Enrico Scholz <enrico.scholz@informatik.tu-chemnitz.de>\n\n#\n\n# Redistribution and use, with or without modification, are permitted\n\n# provided that the following conditions are met:\n\n# \n\n#    1. Redistributions must retain the above copyright notice, this\n\n#       list of conditions and the following disclaimer.\n\n#    2. The name of the author may not be used to endorse or promote\n\n#       products derived from this software without specific prior\n\n#       written permission.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n\n# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\n# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY\n\n# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\n\n# GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER\n\n# IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n\n# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n\n# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "### Common stuff ####\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Unsets the given variables\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Invokes pkgconfig, cleans up the result and sets variables\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#message(STATUS \"  ${_varname} ... ${_pkgconfig_invoke_result}\")\n",
        "Line" : 138,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Invokes pkgconfig two times; once without '--static' and once with\n\n# '--static'\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Splits given arguments into options and a package list\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "###\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# create a better addressable variable of the modules and calculate its size\n",
        "Line" : 188,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# give out status message telling checked module\n",
        "Line" : 193,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# iterate through module list and check whether they exist and match the required version\n",
        "Line" : 205,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# check whether version is given\n",
        "Line" : 209,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# handle the operands\n",
        "Line" : 220,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# create the final query which is of the format:\n\n# * --atleast-version <version> <pkg-name>\n\n# * --exact-version <version> <pkg-name>      \n\n# * --max-version <version> <pkg-name>\n\n# * --exists <pkg-name>\n",
        "Line" : 233,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# execute the query\n",
        "Line" : 252,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# evaluate result and tell failures\n",
        "Line" : 257,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# fail when requested\n",
        "Line" : 268,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# when we are here, we checked whether requested modules\n\n# exist. Now, go through them and set variables\n",
        "Line" : 273,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "# iterate through all modules again and set individual variables\n",
        "Line" : 279,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "# handle case when there is only one package required\n",
        "Line" : 281,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "# set variables which are combined for multiple modules\n",
        "Line" : 296,
        "CharPositionInLine" : 6
      },
      "22" : {
        "Text" : "###\n\n### User visible macros start here\n\n###\n",
        "Line" : 313,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "###\n",
        "Line" : 317,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# check cached value\n",
        "Line" : 319,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "###\n",
        "Line" : 328,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# check cached value\n",
        "Line" : 330,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# iterate through all modules and stop at the first working one.\n",
        "Line" : 337,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "### Local Variables:\n\n### mode: cmake\n\n### End:\n",
        "Line" : 358,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 29
    },
    "3rdparty/libprojectm/MilkdropPresetFactory/CMakeLists.txt" : {
      "ObjectId" : "2f737613bf689ba14b6afa47e175e3f50feeb3a1",
      "LastModified" : "2011-05-30T10:09:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/libprojectm/Renderer/CMakeLists.txt" : {
      "ObjectId" : "c9b9c137ac0696843eeeffefa36fbcec6e68e358",
      "LastModified" : "2017-11-21T12:38:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/qocoa/CMakeLists.txt" : {
      "ObjectId" : "92ac7ce29dcdc800da42188004eaf20f0a4e9fb9",
      "LastModified" : "2017-11-21T12:38:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/qocoa/Qocoa.pro" : {
      "ObjectId" : "8b325d1927033b8bda4c0646eda32c70877943b3",
      "LastModified" : "2017-11-21T12:38:57Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "3rdparty/qsqlite/CMakeLists.txt" : {
      "ObjectId" : "48ac16161027c700db038ce7b0e8e2f5b277ebef",
      "LastModified" : "2017-11-21T12:38:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Source files\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Header files that have Q_OBJECT in\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "3rdparty/qtiocompressor/CMakeLists.txt" : {
      "ObjectId" : "f339daba9c41888f12fc1f7f7109f7078c9565c8",
      "LastModified" : "2017-11-21T12:38:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/qtsingleapplication/CMakeLists.txt" : {
      "ObjectId" : "29f7844d5beacf95021f39666787a87abcc5e1a1",
      "LastModified" : "2018-12-05T14:02:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/qtwin/CMakeLists.txt" : {
      "ObjectId" : "c2df87bfc07960402cd31eb9bdb3d512eff81813",
      "LastModified" : "2017-11-21T12:38:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/qxt/CMakeLists.txt" : {
      "ObjectId" : "1db05ca69112a1d3d3f763d095c704dbbc4ebd14",
      "LastModified" : "2018-11-29T21:26:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/sha2/CMakeLists.txt" : {
      "ObjectId" : "3a5da0a2ff423ce1fde12a9c6a2463d0ef7e7719",
      "LastModified" : "2017-11-21T12:38:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/taglib/CMakeLists.txt" : {
      "ObjectId" : "f5b566d7ece2fcce0f70d13076b26c82188284ef",
      "LastModified" : "2018-11-29T21:26:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/taglib/taglib_config.h.cmake" : {
      "ObjectId" : "915f130aaa8a9232fce758bf6d5099ad10babb05",
      "LastModified" : "2018-11-29T21:26:51Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/* taglib_config.h. Generated by cmake from taglib_config.h.cmake */",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/* These values are no longer used. This file is present only for compatibility reasons. */",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "3rdparty/tinysvcmdns/CMakeLists.txt" : {
      "ObjectId" : "1c16a138a1e36facd82cfdebaab31780c8749054",
      "LastModified" : "2017-11-21T12:38:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/tinysvcmdns/Makefile" : {
      "ObjectId" : "479575d509ea87bf5c20f7bf92fe97a2f23f3cb7",
      "LastModified" : "2017-11-21T12:38:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Makefile for tinysvcmdns\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#CFLAGS += -g\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "3rdparty/utf8-cpp/CMakeLists.txt" : {
      "ObjectId" : "e438780c8c8f9e610a52d66d1528cf6bd88f84bc",
      "LastModified" : "2018-11-29T21:26:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMakeLists.txt" : {
      "ObjectId" : "3bbb47012ff0e8b18951ba23245720c063640048",
      "LastModified" : "2019-03-21T11:09:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# QT\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We can include the Qt definitions now\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find Qt's lconvert binary.  Try qt's binary dir first, fall back to looking in PATH\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Only use system taglib if it's greater than 1.11.1\n\n# There is a bug in version 1.11.1 corrupting Ogg files, see: https://github.com/taglib/taglib/issues/864\n\n# If you decide to use the systems taglib, make sure it has been patched with the following commit:\n\n# https://github.com/taglib/taglib/commit/9336c82da3a04552168f208cd7a5fa4646701ea4\n\n# The current taglib in 3rdparty also has the following features used by Clementine:\n\n# - Audio file detection by content.\n\n#\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set up definitions and paths\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# RC compiler\n",
        "Line" : 188,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Translations stuff\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Optional bits\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Remove GLU and GL from the link line - they're not really required\n\n# and don't exist on my mingw toolchain\n",
        "Line" : 330,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# When/if upstream accepts our patches then these options can be used to link\n\n# to system installed projectM instead.\n",
        "Line" : 338,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Build our copy of QSqlLiteDriver.\n\n# We do this because we can't guarantee that the driver shipped with Qt exposes the\n\n# raw sqlite3_ functions required for FTS support. This way we know that those symbols\n\n# exist at compile-time and that our code links to the same sqlite library as the\n\n# Qt driver.\n",
        "Line" : 350,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# When/if upstream accepts our patches then these options can be used to link\n\n# to system installed qtsingleapplication instead.\n",
        "Line" : 358,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# QtIoCompressor isn't patched, so we can use a system version if it's\n\n# available\n",
        "Line" : 371,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# When/if upstream accepts our or reimplement our patches then these options can be\n\n# used to link to system installed qxt instead.\n",
        "Line" : 381,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# We only need its header. We don't need to link to QxtCore.\n",
        "Line" : 388,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Use system gmock if it's available\n\n# We need to look for both gmock and gtest\n",
        "Line" : 399,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Use the system's sha2 if it's available.\n",
        "Line" : 412,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Use the system libmygpo-qt if a recent enough version was found\n",
        "Line" : 426,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Qocoa\n",
        "Line" : 437,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Subdirectories\n",
        "Line" : 440,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Uninstall support\n",
        "Line" : 471,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Show a summary of what we have enabled\n",
        "Line" : 480,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 22
    },
    "cmake/C++11Compat.cmake" : {
      "ObjectId" : "5c4d5151f32770348bb248b9308975fa8fcd988d",
      "LastModified" : "2018-11-29T21:26:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Hacky stuff to make C++11 features work with old compilers.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Deb.cmake" : {
      "ObjectId" : "f4e4e74a3f42295d3af91977713972bda687f0a5",
      "LastModified" : "2018-11-29T21:26:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/FindFFTW3.cmake" : {
      "ObjectId" : "e711dd3ab75fc0fa3b8999de5560470d55960308",
      "LastModified" : "2018-11-29T21:26:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# Try to find FFTW3  library  \n\n# (see www.fftw.org)\n\n# Once run this will define: \n\n# \n\n# FFTW3_FOUND\n\n# FFTW3_INCLUDE_DIR \n\n# FFTW3_LIBRARIES\n\n# FFTW3_LINK_DIRECTORIES\n\n#\n\n# You may set one of these options before including this file:\n\n#  FFTW3_USE_SSE2\n\n#\n\n#  TODO: _F_ versions.\n\n#\n\n# Jan Woetzel 05/2004\n\n# www.mip.informatik.uni-kiel.de\n\n# --------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#MESSAGE(\"DBG FFTW3_INCLUDE_DIR=${FFTW3_INCLUDE_DIR}\")  \n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# the lib prefix is containe din filename onf W32, unfortuantely. JW\n\n# teh \"general\" lib: \n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#MESSAGE(\"DBG FFTW3_FFTW_LIBRARY=${FFTW3_FFTW_LIBRARY}\")\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#MESSAGE(\"DBG FFTW3_FFTWF_LIBRARY=${FFTW3_FFTWF_LIBRARY}\")\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#MESSAGE(\"DBG FFTW3_FFTWF_LIBRARY=${FFTW3_FFTWL_LIBRARY}\")\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#MESSAGE(\"DBG FFTW3_FFTW_SSE2_LIBRARY=${FFTW3_FFTW_SSE2_LIBRARY}\")\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#MESSAGE(\"DBG FFTW3_FFTWF_SSE_LIBRARY=${FFTW3_FFTWF_SSE_LIBRARY}\")\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# --------------------------------\n\n# select one of the above\n\n# default: \n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# specialized: \n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# --------------------------------\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# OK, found all we need\n",
        "Line" : 112,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 12
    },
    "cmake/Format.cmake" : {
      "ObjectId" : "12475dc220dae6d2f2c17d757217b73ff6e429fb",
      "LastModified" : "2018-11-29T21:26:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/OptionalSource.cmake" : {
      "ObjectId" : "2b816984fecec4e8d0b0a3c729c8164186cd3055",
      "LastModified" : "2018-11-29T21:26:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/ParseArguments.cmake" : {
      "ObjectId" : "0abf43b29edca502b53d70560c2cf93d35a921d2",
      "LastModified" : "2018-11-29T21:26:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# From http://www.cmake.org/Wiki/CMakeMacroParseArguments\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/SpotifyVersion.cmake" : {
      "ObjectId" : "17ba9e7bfc9a34e8a70efa4cdbe65ac351f19260",
      "LastModified" : "2018-11-29T21:26:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Increment this whenever the user needs to download a new blob\n\n# Remember to upload and sign the new version of the blob.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Summary.cmake" : {
      "ObjectId" : "4202741aa257f7b489de6481ad867852e4f5b11b",
      "LastModified" : "2018-11-29T21:26:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create the option\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Was the option set?\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Check each of the dependencies\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# We have to do this instead of if(NOT ${arg}) so that tests may contain\n\n# \"NOT\" themselves.\n",
        "Line" : 65,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 4
    },
    "cmake/Translations.cmake" : {
      "ObjectId" : "462145e2c29974f0b383d67bcc902afd04c794fe",
      "LastModified" : "2018-11-29T21:26:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Make relative filenames for all source files\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Generate the .pot\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Syntax is:\n\n#   add_po(sources_var po_prefix\n\n#     LANGUAGES language1 language2 ...\n\n#     DIRECTORY dir\n\n#     \n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Convert the .po files to .qm files\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Generate a qrc file for the translations\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "cmake/Version.cmake" : {
      "ObjectId" : "5a3750ca3b45289d91be3923fd1e9b2cc3800a15",
      "LastModified" : "2018-11-29T21:26:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Change this file when releasing a new version.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Version numbers.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#set(CLEMENTINE_VERSION_PRERELEASE rc2)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This should be set to OFF in a release branch\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Rules about version number comparison on different platforms:\n\n#   Debian:\n\n#     Two stages are repeated until there are no more characters to compare:\n\n#     one block of consecutive digits (\\d+) is compared numerically, then one\n\n#     block of consecutive NON-digits (\\D+) is compared lexigraphically,\n\n#     with the exception that ~ sorts before everything else.\n\n#\n\n#     The \"upstream version\" and \"debian revision\" are separated by the last\n\n#     dash in the version number.\n\n#\n\n#     Algorithm is in \"man deb-version\", test comparisons with\n\n#     dpkg --compare-versions.\n\n#\n\n#     These are in sorted order:\n\n#       1.0~rc1\n\n#       1.0~rc2\n\n#       1.0\n\n#       1.0-1-g044287b\n\n#       1.0-506-g044287b\n\n#       1.0.1\n\n#       1.0.2\n\n#       1.0.a\n\n#\n\n#   Rpm:\n\n#     The string is split on non-alphanumeric characters.  Numeric sections are\n\n#     compared numerically and non-numeric sections are compared lexigraphically.\n\n#     If one sections is numeric and the other sections is non-numeric, the\n\n#     numeric sections is always NEWER.\n\n#\n\n#     The \"version\" and \"release\" fields are compared with the same algorithm -\n\n#     if the versions are equal the releases are compared to determine which\n\n#     package is newer.\n\n#\n\n#     Algorithm is described in:\n\n#       http://fedoraproject.org/wiki/Packaging:NamingGuidelines#Package_Versioning\n\n#     Test comparisons with:\n\n#       import rpm\n\n#       rpm.labelCompare((epoch, version, release), (epoch, version, release))\n\n#\n\n#     These are in sorted order:\n\n#       1.0-0.rc1\n\n#       1.0-0.rc2\n\n#       1.0-1\n\n#       1.0-2.506-g044287b\n\n#       1.0.1-1\n\n#       1.0.2-1\n\n#\n\n#   Sparkle (mac) and QtSparkle (windows):\n\n#     The strings are split into sections of characters that are all of the same\n\n#     \"type\" - where a \"type\" is period, digit, or other.  Sections are then\n\n#     compared against each other - digits are compared numerically and other\n\n#     are compared lexigraphically.  When two sections are of different types,\n\n#     the numeric section is always NEWER.\n\n#\n\n#     If the common parts of both strings are equal, but one string has more\n\n#     sections, the type of the first extra section is used to determine which\n\n#     version is newer.\n\n#     If the extra section is a string, the shorter result is NEWER, otherwise\n\n#     the shorter section is OLDER.  That means that 1.0 is NEWER than 1.0rc1,\n\n#     but 1.0 is OLDER than 1.0.1.\n\n#\n\n#     See compareversions.cpp in QtSparkle.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Version numbers in Clementine:\n\n#   Deb:\n\n#     With git:    $tagname-$commitcount-g$sha1\n\n#     Without git: $major.$minor.$patch[~$prerelease]\n\n#\n\n#   Rpm:           Version                 Release\n\n#     Prerelease:  $major.$minor.$patch    0.$prerelease\n\n#     Without git: $major.$minor.$patch    1\n\n#     With git:    $tagname                2.$commitcount.g$sha1\n\n#\n\n#   QtSparkle (Windows):\n\n#     With git:    $tagname-$commitcount-g$sha1\n\n#     Without git: $major.$minor.$patch[$prerelease]\n\n#\n\n#   Mac info.plist: CFBundleVersion\n\n#     Prerelease:   4096.$major.$minor.$patch.0\n\n#     Without git:  4096.$major.$minor.$patch.1\n\n#     With git:     4096.$tagname.2.$commitcount\n\n#   The 4096. prefix is because the previous versioning scheme used svn revision\n\n#   numbers, which got up to 3000+.\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add prerelease\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add git revision\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "debian/CMakeLists.txt" : {
      "ObjectId" : "2a8693f74addad26eddc98ffcb5a5f6ba0957183",
      "LastModified" : "2018-11-29T21:26:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dist/CMakeLists.txt" : {
      "ObjectId" : "b89966f7089d8a461d64d72ef5126bc4d337f4ff",
      "LastModified" : "2018-11-29T21:26:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create two installers, one for the normal version, one for the portable one\n\n# Create normal installer\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create portable installer\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# windows/windres.rc is done by src/CMakeLists.txt\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "ext/clementine-spotifyblob/CMakeLists.txt" : {
      "ObjectId" : "7568a29311a247c6b5935db1fd55b3fa938a02bf",
      "LastModified" : "2019-03-18T17:57:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# macdeploy.py takes care of this on mac\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Versioned name of the blob\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "ext/clementine-tagreader/CMakeLists.txt" : {
      "ObjectId" : "f4c7bb01e721f4ecb5656791d96bfa20a9cb2e7d",
      "LastModified" : "2018-11-29T21:26:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# macdeploy.py takes care of this on mac\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "ext/libclementine-common/CMakeLists.txt" : {
      "ObjectId" : "82e7829b16e8dde4c6cede2186635e618f13282a",
      "LastModified" : "2018-11-29T21:26:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ext/libclementine-remote/CMakeLists.txt" : {
      "ObjectId" : "5f860fbcd43a8507172d749da692312fe587877c",
      "LastModified" : "2018-11-29T21:26:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ext/libclementine-spotifyblob/CMakeLists.txt" : {
      "ObjectId" : "7a73b14437745141ab055818aede8f3890e05002",
      "LastModified" : "2018-11-29T21:26:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ext/libclementine-tagreader/CMakeLists.txt" : {
      "ObjectId" : "02d54897b9dbe43a7f3ee259c30375a07ececd1f",
      "LastModified" : "2018-11-29T21:26:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "gst/moodbar/CMakeLists.txt" : {
      "ObjectId" : "44c13625317edb79271ace4fde1d299d3a9b444a",
      "LastModified" : "2018-11-29T21:26:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "b67a7c38ce033443c0a859a6c5b512b47f77c1be",
      "LastModified" : "2019-03-18T17:57:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Activate fast QString concatenation\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# build LANGUAGES from all existing .po files\n",
        "Line" : 790,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Visualisations\n",
        "Line" : 808,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Lastfm\n",
        "Line" : 827,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Spotify support\n",
        "Line" : 847,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Platform specific - OS X\n",
        "Line" : 874,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Platform specific - Windows\n",
        "Line" : 903,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Platform specific - X11\n",
        "Line" : 914,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# DBUS and MPRIS - Unix specific\n",
        "Line" : 917,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# MPRIS 2.0 DBUS interfaces\n",
        "Line" : 921,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# MPRIS 2.1 DBUS interfaces\n",
        "Line" : 932,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# org.freedesktop.Notifications DBUS interface\n",
        "Line" : 937,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# org.gnome.SettingsDaemon interface\n",
        "Line" : 942,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# org.freedesktop.Avahi.Server interface\n",
        "Line" : 947,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# org.freedesktop.Avahi.EntryGroup interface\n",
        "Line" : 961,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# DeviceKit DBUS interfaces\n",
        "Line" : 975,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Wiimotedev interface classes\n",
        "Line" : 1017,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Libgpod device backend\n",
        "Line" : 1057,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# GIO device backend\n",
        "Line" : 1068,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# CDIO backend and device\n",
        "Line" : 1075,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# mtp device\n",
        "Line" : 1093,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Moodbar support\n",
        "Line" : 1105,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Google Drive support\n",
        "Line" : 1123,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Dropbox support\n",
        "Line" : 1139,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Skydrive support\n",
        "Line" : 1153,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Box support\n",
        "Line" : 1167,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Seafile support\n",
        "Line" : 1181,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Pulse audio integration\n",
        "Line" : 1197,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ALSA integration\n",
        "Line" : 1205,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Hack to add Clementine to the Unity system tray whitelist\n",
        "Line" : 1211,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Hack: the Gold linker pays attention to the order that libraries are\n\n# specified on the link line.  -lX11 and -ldl are provided earlier in the link\n\n# command but they're actually used by libraries that appear after them, so\n\n# they end up getting ignored.  This appends them to the very end of the link\n\n# line, ensuring they're always used.\n",
        "Line" : 1369,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "###############################################################################\n",
        "Line" : 1385,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Show the console window in debug mode on Windows\n",
        "Line" : 1389,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# resource file for windows\n",
        "Line" : 1394,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# macdeploy.py relies on the blob being built first.\n",
        "Line" : 1416,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 35
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "4227bb48e46350bb4e2837296b7d38aacabec735",
      "LastModified" : "2018-11-29T21:26:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Given a file foo_test.cpp, creates a target foo_test and adds it to the test target.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#add_test_file(albumcoverfetcher_test.cpp false)\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#add_test_file(albumcovermanager_test.cpp true)\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#add_test_file(cueparser_test.cpp false)\n\n#add_test_file(database_test.cpp false)\n\n#add_test_file(fileformats_test.cpp false)\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#add_test_file(librarybackend_test.cpp false)\n\n#add_test_file(librarymodel_test.cpp true)\n\n#add_test_file(m3uparser_test.cpp false)\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#add_test_file(playlist_test.cpp true)\n\n#add_test_file(plsparser_test.cpp false)\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#add_test_file(songloader_test.cpp false)\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#if(LINUX AND HAVE_DBUS)\n\n#  add_test_file(mpris1_test.cpp true)\n\n#endif(LINUX AND HAVE_DBUS)\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    }
  },
  "FileTypes" : {
    "CMAKE" : 39,
    "CMAKESOURCE" : 1,
    "QMAKE" : 1,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 10202
}