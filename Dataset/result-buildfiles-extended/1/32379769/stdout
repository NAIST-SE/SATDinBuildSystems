{
  "Repository" : "32379769",
  "Revision" : "HEAD",
  "ObjectId" : "8e4202f8f4b4b35c34de1493e11a80904338ce7f",
  "CommitTime" : "2019-04-16T17:23:59Z",
  "Files" : {
    "Makefile.am" : {
      "ObjectId" : "a160fe5f4dfc64da3b926bfc00b06734d6aa9b66",
      "LastModified" : "2018-01-04T22:50:17Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "depends/Makefile" : {
      "ObjectId" : "5c1fb9fdd34a1caae248f226df36c897562baaf9",
      "LastModified" : "2018-03-30T19:58:34Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "doc/man/Makefile.am" : {
      "ObjectId" : "27917a208491dba4e58f552653ca530fdbae829e",
      "LastModified" : "2017-03-02T19:18:44Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/Makefile.am" : {
      "ObjectId" : "5733549ff910175b592a592bfca442a33b7939b5",
      "LastModified" : "2019-03-12T20:01:31Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# NOTE: This dependency is not strictly necessary, but without it make may try to build both in parallel, which breaks the LevelDB build system in a race\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Make is not made aware of per-object dependencies to avoid limiting building parallelization\n\n# But to build the less dependent modules first, we manually select their order here:\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# bitcoin core #\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# server: zcashd\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# wallet: zcashd, but only linked when wallet enabled\n",
        "Line" : 299,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# crypto primitives library\n",
        "Line" : 321,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# common: shared between zcashd and non-server tools\n",
        "Line" : 354,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# util: shared between all executables.\n\n# This library *must* be included to make sure that the glibc\n\n# backward-compatibility objects and their sanity checks are linked.\n",
        "Line" : 388,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# cli: zcash-cli\n",
        "Line" : 416,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\n",
        "Line" : 425,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# bitcoind binary #\n",
        "Line" : 427,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# bitcoin-cli binary #\n",
        "Line" : 464,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#\n",
        "Line" : 486,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# zcash-tx binary #\n",
        "Line" : 488,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# FIXME: Is libzcash needed for zcash_tx?\n",
        "Line" : 498,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#\n",
        "Line" : 510,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# zcash protocol primitives #\n",
        "Line" : 512,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# zcashconsensus library #\n",
        "Line" : 536,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#\n",
        "Line" : 565,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "src/leveldb/Makefile" : {
      "ObjectId" : "2bd2cadcddeb9ba912c241fed604f5d4d2136886",
      "LastModified" : "2014-10-16T19:23:50Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n\n# Use of this source code is governed by a BSD-style license that can be\n\n# found in the LICENSE file. See the AUTHORS file for names of contributors.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------\n\n# Uncomment exactly one of the lines labelled (A), (B), and (C) below\n\n# to switch between compilation modes.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# (A) Production use (optimized mode)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# (B) Debug mode, w/ full line-level debugging symbols\n\n# OPT ?= -g2\n\n# (C) Profiling mode: opt, but w/debugging symbols\n\n# OPT ?= -O2 -g2 -DNDEBUG\n\n#-----------------------------------------------\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# detect what platform we're building on\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# this file is generated by the previous line to set build flags and sources\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Note: iOS should probably be using libtool, not ar.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Should we build shared libraries?\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Update db.h if you change these.\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# PLATFORM_SHARED_EXT\n",
        "Line" : 98,
        "CharPositionInLine" : 7
      },
      "10" : {
        "Text" : "# For iOS, create universal object files to be used on both the simulator and\n\n# a device.\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "src/secp256k1/Makefile.am" : {
      "ObjectId" : "c071fbe2753c9bda4c8d7b74143dc15878572c4b",
      "LastModified" : "2017-06-17T14:18:25Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/snark/Makefile" : {
      "ObjectId" : "aff19c603af874b2468ceebd5ac0bf05fe9a3256",
      "LastModified" : "2018-04-03T19:44:24Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#********************************************************************************\n\n# Makefile for the libsnark library.\n\n#********************************************************************************\n\n#* @author     This file is part of libsnark, developed by SCIPR Lab\n\n#*             and contributors (see AUTHORS).\n\n#* @copyright  MIT license (see LICENSE file)\n\n#*******************************************************************************/\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# To override these, use \"make OPTFLAGS=...\" etc.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Initialize this using \"CXXFLAGS=... make\". The makefile appends to that.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# List of .a files to include within libsnark.a and libsnark.so:\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# List of library files to install:\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Sentinel file to check existence of this directory (since directories don't work as a Make dependency):\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Compile GTest from sourcecode if we can (e.g., Ubuntu). Otherwise use precompiled one (e.g., Fedora).\n\n# See https://github.com/google/googletest/blob/master/googletest/docs/FAQ.md#why-is-it-not-recommended-to-install-a-pre-compiled-copy-of-google-test-for-example-into-usrlocal\n",
        "Line" : 31,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# Would have been nicer to roll supercop into libsnark.a (\"AR_LIBS += $(DEPINST)/lib/libsupercop.a\"), but it doesn't support position-independent code (libsnark issue #20).\n",
        "Line" : 43,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# FIXME: most of these are broken due to removed code.\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# For documentation of the following options, see README.md .\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable link-time optimization:\n",
        "Line" : 168,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# Create placeholder directories for installed dependencies. Some make settings (including the default) require actually running ./prepare-depends.sh to populate this directory.\n",
        "Line" : 186,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# In order to detect changes to #include dependencies. -MMD below generates a .d file for each .o file. Include the .d file.\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# libsnark.a will contains all of our relevant object files, and we also mash in the .a files of relevant dependencies built by ./prepare-depends.sh\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#\tTODO: Would be nice to enable \"-x smartypants\" but Ubuntu 12.04 doesn't support that.\n\n#\tTODO: switch to redcarpet, to produce same output as GitHub's processing of README.md. But what about TOC?\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Clean generated files, except locally-compiled dependencies\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Clean all, including locally-compiled dependencies\n",
        "Line" : 281,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "src/test/Makefile" : {
      "ObjectId" : "87bf73fec98d99ed7421093bfde8528d3ced4ddb",
      "LastModified" : "2014-10-16T19:23:50Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/univalue/Makefile.am" : {
      "ObjectId" : "532fa1949dc0b4f8ba864c189b85f8ca2063a992",
      "LastModified" : "2017-06-17T14:18:25Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 4,
    "AUTOMAKE" : 5
  },
  "ElapsedTime" : 7175
}