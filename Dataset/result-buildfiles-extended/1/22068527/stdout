{
  "Repository" : "22068527",
  "Revision" : "HEAD",
  "ObjectId" : "df3c2dd8f8bf00f57c6e745abb5bf99be55c0c9e",
  "CommitTime" : "2019-04-16T05:48:37Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "5556943c31a92b67831248ecd89d63bb3a25943d",
      "LastModified" : "2018-12-07T05:06:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Handle various switches, build types etc.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Default build type to Release\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-Werror\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "Makefile" : {
      "ObjectId" : "f39ce666ab67ef2b0dc2750842b6b75af8fc6e0d",
      "LastModified" : "2017-10-09T22:17:28Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "third_party/SDL2-2.0.8/CMakeLists.txt" : {
      "ObjectId" : "a3736c1a6a4f4af80de86d2054af669696986da7",
      "LastModified" : "2019-03-20T00:15:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# !!! FIXME: this should probably do \"MACOSX_RPATH ON\" as a target property\n\n# !!! FIXME:  for the SDL2 shared library (so you get an\n\n# !!! FIXME:  install_name (\"soname\") of \"@rpath/libSDL-whatever.dylib\"\n\n# !!! FIXME:  instead of \"/usr/local/lib/libSDL-whatever.dylib\"), but I'm\n\n# !!! FIXME:  punting for now and leaving the existing behavior. Until this\n\n# !!! FIXME:  properly resolved, this line silences a warning in CMake 3.0+.\n\n# !!! FIXME:  remove it and this comment entirely once the problem is\n\n# !!! FIXME:  properly resolved.\n\n#cmake_policy(SET CMP0042 OLD)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# General settings\n\n# Edit include/SDL_version.h and change the version, then:\n\n#   SDL_MICRO_VERSION += 1;\n\n#   SDL_INTERFACE_AGE += 1;\n\n#   SDL_BINARY_AGE += 1;\n\n# if any functions have been added, set SDL_INTERFACE_AGE to 0.\n\n# if backwards compatibility has been broken,\n\n# set SDL_BINARY_AGE and SDL_INTERFACE_AGE to 0.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set defaults preventing destination file conflicts\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Calculate a libtool-like version number\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# General settings & flags\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Check for 64 or 32 bit\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Get the platform\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# TODO: iOS?\n",
        "Line" : 119,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Don't mistake osx for unix\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# JavaScript does not yet have threading support, so disable pthreads when building for Emscripten.\n",
        "Line" : 139,
        "CharPositionInLine" : 40
      },
      "10" : {
        "Text" : "# Default option knobs\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Compiler info\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# VisualStudio 8.0+\n",
        "Line" : 162,
        "CharPositionInLine" : 34
      },
      "13" : {
        "Text" : "#set(CMAKE_C_FLAGS \"/ZI /WX- /\n",
        "Line" : 164,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Default flags, if not set otherwise\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Hackish, but does the trick on Win32\n",
        "Line" : 184,
        "CharPositionInLine" : 37
      },
      "16" : {
        "Text" : "# Make sure /RTC1 is disabled, otherwise it will use functions from the CRT\n",
        "Line" : 200,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Those are used for pkg-config and friends, so that the SDL2.pc, sdl2-config,\n\n# etc. are created correctly.\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Emscripten toolchain has a nonempty default value for this, and the checks \n\n# in this file need to change that, so remember the original value, and \n\n# restore back to that afterwards. For check_function_exists() to work in\n\n# Emscripten, this value must be at its default value.\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# We build SDL on cygwin without the UNIX emulation layer\n",
        "Line" : 220,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# General includes\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# All these ENABLED_BY_DEFAULT vars will default to ON if not specified, so\n\n#  you only need to have a platform override them if they are disabling.\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Set up default values for the currently supported set of subsystems:\n\n# Emscripten/Javascript does not have assembly support, a dynamic library \n\n# loading architecture, low-level CPU inspection or multithreading.\n",
        "Line" : 246,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "#set_option(DEPENDENCY_TRACKING \"Use gcc -MMD -MT dependency tracking\" ON)\n",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# TODO: We should (should we?) respect cmake's ${BUILD_SHARED_LIBS} flag here\n\n# The options below are for compatibility to configure's default behaviour.\n",
        "Line" : 337,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# General source files\n",
        "Line" : 345,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Do nada - use optimization settings to determine the assertion level\n",
        "Line" : 365,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Compiler option evaluation\n",
        "Line" : 379,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Check for -Wall first, so later things can override pieces of it.\n",
        "Line" : 381,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# TODO: Those all seem to be quite GCC specific - needs to be\n\n# reworked for better compiler support\n",
        "Line" : 460,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# if only HAVE_ALTIVEC_H_HDR is set\n",
        "Line" : 601,
        "CharPositionInLine" : 31
      },
      "31" : {
        "Text" : "# TODO: SDL_cpuinfo.h needs to support the user's configuration wish\n\n# for MSVC - right now it is always activated\n",
        "Line" : 610,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# TODO:\n\n#else()\n\n#  if(USE_GCC OR USE_CLANG)\n\n#    list(APPEND EXTRA_CFLAGS \"-mno-sse\" \"-mno-sse2\" \"-mno-sse3\" \"-mno-mmx\")\n\n#  endif()\n",
        "Line" : 621,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# TODO: Can't deactivate on FreeBSD? w/o LIBC, SDL_stdinc.h can't define\n\n# anything.\n",
        "Line" : 628,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# needed for M_PI\n",
        "Line" : 655,
        "CharPositionInLine" : 41
      },
      "35" : {
        "Text" : "# TODO: refine the mprotect check\n",
        "Line" : 671,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# Enable/disable various subsystems of the SDL library\n",
        "Line" : 727,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Haptic requires some private functions from the joystick subsystem.\n",
        "Line" : 740,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# TODO: in configure.in, the test for LOADSO and SDL_DLOPEN is a bit weird:\n\n# if LOADSO is not wanted, SDL_LOADSO_DISABLED is set\n\n# If however on Unix or APPLE dlopen() is detected via CheckDLOPEN(),\n\n# SDL_LOADSO_DISABLED will not be set, regardless of the LOADSO settings\n",
        "Line" : 750,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# General SDL subsystem options, valid for all platforms\n",
        "Line" : 755,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# CheckDummyAudio/CheckDiskAudio - valid for all platforms\n",
        "Line" : 757,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# Relevant for Unix/Darwin only\n",
        "Line" : 773,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# SDL_spinlock.c Needs to be compiled in ARM mode.\n\n# There seems to be no better way currently to set the ARM mode.\n\n# see: https://issuetracker.google.com/issues/62264618\n\n# Another option would be to set ARM mode to all compiled files\n",
        "Line" : 793,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# Core stuff\n",
        "Line" : 853,
        "CharPositionInLine" : 4
      },
      "44" : {
        "Text" : "#enable gles\n",
        "Line" : 860,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "# Platform-specific options and settings\n",
        "Line" : 891,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Hide noisy warnings that intend to aid mostly during initial stages of porting a new\n\n# project. Uncomment at will for verbose cross-compiling -I/../ path info.\n",
        "Line" : 893,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "#enable gles\n",
        "Line" : 936,
        "CharPositionInLine" : 4
      },
      "48" : {
        "Text" : "# Need to check for Raspberry PI first and add platform specific compiler flags, otherwise the test for GLES fails!\n",
        "Line" : 975,
        "CharPositionInLine" : 4
      },
      "49" : {
        "Text" : "# seems to be BSD specific - limit the test to BSD only?\n",
        "Line" : 1061,
        "CharPositionInLine" : 20
      },
      "50" : {
        "Text" : "# Prevent codegen that would use the VC runtime libraries.\n",
        "Line" : 1142,
        "CharPositionInLine" : 4
      },
      "51" : {
        "Text" : "# Check for DirectX\n",
        "Line" : 1149,
        "CharPositionInLine" : 2
      },
      "52" : {
        "Text" : "# xinput.h may need windows.h, but doesn't include it itself.\n",
        "Line" : 1162,
        "CharPositionInLine" : 6
      },
      "53" : {
        "Text" : "# TODO: change $ENV{DXSDL_DIR} to get the path from the include checks\n",
        "Line" : 1192,
        "CharPositionInLine" : 6
      },
      "54" : {
        "Text" : "# requires SDL_LOADSO on Windows (IME, DX, etc.)\n",
        "Line" : 1220,
        "CharPositionInLine" : 4
      },
      "55" : {
        "Text" : "# Libraries for Win32 native and MinGW\n",
        "Line" : 1263,
        "CharPositionInLine" : 2
      },
      "56" : {
        "Text" : "# TODO: in configure.in the check for timers is set on\n\n# cygwin | mingw32* - does this include mingw32CE?\n",
        "Line" : 1266,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "# TODO: rework this all for proper MacOS X, iOS and Darwin support\n",
        "Line" : 1348,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# We always need these libs on macOS at the moment.\n\n# !!! FIXME: we need Carbon for some very old API calls in\n\n# !!! FIXME:  src/video/cocoa/SDL_cocoakeyboard.c, but we should figure out\n\n# !!! FIXME:  how to dump those.\n",
        "Line" : 1350,
        "CharPositionInLine" : 2
      },
      "59" : {
        "Text" : "# Requires the darwin file implementation\n",
        "Line" : 1359,
        "CharPositionInLine" : 2
      },
      "60" : {
        "Text" : "# !!! FIXME: modern CMake doesn't need \"LANGUAGE C\" for Objective-C.\n",
        "Line" : 1363,
        "CharPositionInLine" : 4
      },
      "61" : {
        "Text" : "# !!! FIXME: why is COREVIDEO inside this if() block?\n",
        "Line" : 1366,
        "CharPositionInLine" : 4
      },
      "62" : {
        "Text" : "# !!! FIXME: modern CMake doesn't need \"LANGUAGE C\" for Objective-C.\n",
        "Line" : 1375,
        "CharPositionInLine" : 4
      },
      "63" : {
        "Text" : "# !!! FIXME: modern CMake doesn't need \"LANGUAGE C\" for Objective-C.\n",
        "Line" : 1435,
        "CharPositionInLine" : 4
      },
      "64" : {
        "Text" : "# Actually load the frameworks at the end so we don't duplicate include.\n",
        "Line" : 1441,
        "CharPositionInLine" : 2
      },
      "65" : {
        "Text" : "# iOS hack needed - http://code.google.com/p/ios-cmake/ ?\n",
        "Line" : 1471,
        "CharPositionInLine" : 2
      },
      "66" : {
        "Text" : "# TODO: Use FIND_PACKAGE(OpenGL) instead\n",
        "Line" : 1516,
        "CharPositionInLine" : 6
      },
      "67" : {
        "Text" : "# Dummies\n\n# configure.in does it differently:\n\n# if not have X\n\n#   if enable_X {  SDL_X_DISABLED = 1 }\n\n#   [add dummy sources]\n\n# so it always adds a dummy, without checking, if it was actually requested.\n\n# This leads to missing internal references on building, since the\n\n# src/X/*.c does not get included.\n",
        "Line" : 1532,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# results in unresolved symbols on OSX\n",
        "Line" : 1542,
        "CharPositionInLine" : 33
      },
      "69" : {
        "Text" : "# We always need to have threads and timers around\n",
        "Line" : 1564,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# Append the -MMD -MT flags\n\n# if(DEPENDENCY_TRACKING)\n\n#   if(COMPILER_IS_GNUCC)\n\n#     set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -MMD -MT \\$@\")\n\n#   endif()\n\n# endif()\n",
        "Line" : 1580,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Prepare the flags and remove duplicates\n",
        "Line" : 1590,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# Compat helpers for the configuration files\n",
        "Line" : 1603,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# TODO: we need a Windows script, too\n",
        "Line" : 1605,
        "CharPositionInLine" : 2
      },
      "74" : {
        "Text" : "# Clean up the different lists\n",
        "Line" : 1628,
        "CharPositionInLine" : 2
      },
      "75" : {
        "Text" : "# MESSAGE(STATUS \"SDL_LIBS: ${SDL_LIBS}\")\n\n# MESSAGE(STATUS \"SDL_STATIC_LIBS: ${SDL_STATIC_LIBS}\")\n",
        "Line" : 1637,
        "CharPositionInLine" : 2
      },
      "76" : {
        "Text" : "##### Info output #####\n",
        "Line" : 1650,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# Longest option is VIDEO_X11_XSCREENSAVER = 22 characters\n\n# Get the padding\n",
        "Line" : 1667,
        "CharPositionInLine" : 2
      },
      "78" : {
        "Text" : "# Ensure that the extra cflags are used at compile time\n",
        "Line" : 1693,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# Always build SDLmain\n",
        "Line" : 1696,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# Don't try to link with the default set of libraries.\n",
        "Line" : 1720,
        "CharPositionInLine" : 4
      },
      "81" : {
        "Text" : "# Note: Apparently, OUTPUT_NAME must really be unique; even when\n\n# CMAKE_IMPORT_LIBRARY_SUFFIX or the like are given. Otherwise\n\n# the static build may race with the import lib and one will get\n\n# clobbered, when the suffix is realized via subsequent rename.\n",
        "Line" : 1738,
        "CharPositionInLine" : 4
      },
      "82" : {
        "Text" : "# TODO: Win32 platforms keep the same suffix .lib for import and static\n\n# libraries - do we need to consider this?\n",
        "Line" : 1749,
        "CharPositionInLine" : 2
      },
      "83" : {
        "Text" : "##### Tests #####\n",
        "Line" : 1759,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "##### Installation targets #####\n",
        "Line" : 1768,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "##### Export files #####\n",
        "Line" : 1774,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# FreeBSD uses ${PREFIX}/libdata/pkgconfig\n",
        "Line" : 1826,
        "CharPositionInLine" : 4
      },
      "87" : {
        "Text" : "# TODO: what about the .spec file? Is it only needed for RPM creation?\n",
        "Line" : 1833,
        "CharPositionInLine" : 2
      },
      "88" : {
        "Text" : "##### Uninstall target #####\n",
        "Line" : 1837,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 89
    },
    "third_party/SDL2-2.0.8/SDL2Config.cmake" : {
      "ObjectId" : "4a5f646020ef4c415e082c799932104c37ddaa3a",
      "LastModified" : "2018-06-03T17:24:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third_party/SDL2-2.0.8/android-project/app/proguard-rules.pro" : {
      "ObjectId" : "eaf0e916cdf0b2a92e4ad3c261f620b2f0f50dbb",
      "LastModified" : "2018-06-03T17:24:34Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# By default, the flags in this file are appended to flags specified\n\n# in [sdk]/tools/proguard/proguard-android.txt\n\n# You can edit the include path and order by changing the proguardFiles\n\n# directive in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add any project specific keep options here:\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "third_party/SDL2-2.0.8/cmake/macros.cmake" : {
      "ObjectId" : "96a7ce8b1406692acaf32a25d9c864da3f94cb45",
      "LastModified" : "2018-06-03T17:24:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Message Output\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# prefix for each element\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Do not use string(REPLACE \";\" \" \") here to avoid messing up list\n\n# entries\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "third_party/SDL2-2.0.8/cmake/sdlchecks.cmake" : {
      "ObjectId" : "b822c7a560efaf084df7c01f769c32843daabd53",
      "LastModified" : "2018-06-03T17:24:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# reduce the library name for shared linking\n",
        "Line" : 7,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# resolves symlinks\n",
        "Line" : 9,
        "CharPositionInLine" : 69
      },
      "2" : {
        "Text" : "# Requires:\n\n# - n/a\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Requires:\n\n# - n/a\n\n# Optional:\n\n# - ALSA_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Requires:\n\n# - PkgCheckModules\n\n# Optional:\n\n# - PULSEAUDIO_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Requires:\n\n# - PkgCheckModules\n\n# Optional:\n\n# - JACK_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Requires:\n\n# - PkgCheckModules\n\n# Optional:\n\n# - ESD_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Requires:\n\n# - n/a\n\n# Optional:\n\n# - ARTS_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# TODO\n",
        "Line" : 243,
        "CharPositionInLine" : 10
      },
      "9" : {
        "Text" : "# Requires:\n\n# - n/a\n\n# Optional:\n\n# - NAS_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# TODO: set include paths properly, so the NAS headers are found\n",
        "Line" : 263,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Requires:\n\n# - n/a\n\n# Optional:\n\n# - SNDIO_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 287,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# TODO: set include paths properly, so the sndio headers are found\n",
        "Line" : 294,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Requires:\n\n# - PkgCheckModules\n\n# Optional:\n\n# - FUSIONSOUND_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 318,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Requires:\n\n# - LIBSAMPLERATE\n\n# Optional:\n\n# - LIBSAMPLERATE_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 348,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Requires:\n\n# - n/a\n\n# Optional:\n\n# - X11_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 373,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Check for multitouch\n",
        "Line" : 500,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# Requires:\n\n# - EGL\n\n# - PkgCheckModules\n\n# Optional:\n\n# - MIR_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 557,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Requires:\n\n# - EGL\n\n# - PkgCheckModules\n\n# Optional:\n\n# - WAYLAND_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 618,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# We have to generate some protocol interface code for some various Wayland features.\n",
        "Line" : 628,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# We have to generate some protocol interface code for some unstable Wayland features.\n",
        "Line" : 684,
        "CharPositionInLine" : 6
      },
      "21" : {
        "Text" : "# Requires:\n\n# - n/a\n\n#\n",
        "Line" : 722,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Apple always has Cocoa.\n",
        "Line" : 727,
        "CharPositionInLine" : 14
      },
      "23" : {
        "Text" : "# Requires:\n\n# - PkgCheckModules\n\n# Optional:\n\n# - DIRECTFB_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 740,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Requires:\n\n# - n/a\n",
        "Line" : 771,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Requires:\n\n# - nada\n",
        "Line" : 801,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Requires:\n\n# - nada\n",
        "Line" : 819,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Requires:\n\n# - nada\n\n# Optional:\n\n# - THREADS opt\n\n# Sets:\n\n# PTHREAD_CFLAGS\n\n# PTHREAD_LIBS\n",
        "Line" : 852,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# the android libc provides built-in support for pthreads, so no\n\n# additional linking or compile flags are necessary\n",
        "Line" : 862,
        "CharPositionInLine" : 6
      },
      "29" : {
        "Text" : "# causes Carbon.p complaints?\n\n# set(PTHREAD_CFLAGS \"-D_REENTRANT -D_THREAD_SAFE\")\n",
        "Line" : 872,
        "CharPositionInLine" : 6
      },
      "30" : {
        "Text" : "# Run some tests\n",
        "Line" : 904,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# Can be faked, if necessary\n\n# Can be faked, if necessary\n",
        "Line" : 971,
        "CharPositionInLine" : 65
      },
      "32" : {
        "Text" : "# Requires\n\n# - nada\n\n# Optional:\n\n# Sets:\n\n# USB_LIBS\n\n# USB_CFLAGS\n",
        "Line" : 988,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Requires:\n\n# - n/a\n",
        "Line" : 1128,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Requires:\n\n# - EGL\n\n# - PkgCheckModules\n\n# Optional:\n\n# - KMSDRM_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 1163,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 35
    },
    "third_party/SDL2-2.0.8/include/SDL_config.h.cmake" : {
      "ObjectId" : "a8d230c46574ef7aac8feb6442907e43519d0c98",
      "LastModified" : "2018-06-03T17:24:34Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/*\n  Simple DirectMedia Layer\n  Copyright (C) 1997-2018 Sam Lantinga <slouken@libsdl.org>\n\n  This software is provided 'as-is', without any express or implied\n  warranty.  In no event will the authors be held liable for any damages\n  arising from the use of this software.\n\n  Permission is granted to anyone to use this software for any purpose,\n  including commercial applications, and to alter it and redistribute it\n  freely, subject to the following restrictions:\n\n  1. The origin of this software must not be misrepresented; you must not\n     claim that you wrote the original software. If you use this software\n     in a product, an acknowledgment in the product documentation would be\n     appreciated but is not required.\n  2. Altered source versions must be plainly marked as such, and must not be\n     misrepresented as being the original software.\n  3. This notice may not be removed or altered from any source distribution.\n*/",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/**\n *  \\file SDL_config.h.in\n *\n *  This is a set of defines to configure the SDL features\n */",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/* General platform specific identifiers */",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* C language features */",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* C datatypes */\n/* Define SIZEOF_VOIDP for 64/32 architectures */",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* Comment this if you want to build without any C library requirements */",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/* Useful headers */",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/* C library functions */",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "/* We may need some replacement for stdarg.h here */",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "/* SDL internal assertion support */",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "/* Allow disabling of core subsystems */",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "/* Enable various audio drivers */",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "/* Enable various input drivers */",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "/* Enable various shared object loading systems */",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "/* Enable various threading systems */",
        "Line" : 294,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "/* Enable various timer systems */",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "/* Enable various video drivers */",
        "Line" : 307,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "/* Enable OpenGL support */",
        "Line" : 364,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "/* Enable Vulkan support */",
        "Line" : 376,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "/* Enable system power support */",
        "Line" : 379,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "/* Enable system filesystem support */",
        "Line" : 388,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "/* Enable assembly routines */",
        "Line" : 397,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "/* Enable dynamic libsamplerate support */",
        "Line" : 401,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "/* Platform specific definitions */",
        "Line" : 404,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "/* Older Visual C++ headers don't have the Win64-compatible typedefs... */",
        "Line" : 439,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "third_party/imgui/examples/example_glfw_opengl2/Makefile" : {
      "ObjectId" : "482b0e5d4c65df8ce6804fd81e3d686356855366",
      "LastModified" : "2019-03-20T00:15:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Cross Platform Makefile\n\n# Compatible with MSYS2/MINGW, Ubuntu 14.04.1 and Mac OS X\n\n#\n\n# You will need GLFW (http://www.glfw.org):\n\n# Linux:\n\n#   apt-get install libglfw-dev\n\n# Mac OS X:\n\n#   brew install glfw\n\n# MSYS2:\n\n#   pacman -S --noconfirm --needed mingw-w64-x86_64-toolchain mingw-w64-x86_64-glfw\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#CXX = g++\n\n#CXX = clang++\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#LINUX\n",
        "Line" : 26,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "#APPLE\n",
        "Line" : 35,
        "CharPositionInLine" : 26
      },
      "4" : {
        "Text" : "#LIBS += -L/usr/local/lib -lglfw3\n",
        "Line" : 38,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 5
    },
    "third_party/imgui/examples/example_glfw_opengl3/Makefile" : {
      "ObjectId" : "a9c7007f9163453247038fc9ea479155c96899a9",
      "LastModified" : "2019-03-20T00:15:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Cross Platform Makefile\n\n# Compatible with MSYS2/MINGW, Ubuntu 14.04.1 and Mac OS X\n\n#\n\n# You will need GLFW (http://www.glfw.org):\n\n# Linux:\n\n#   apt-get install libglfw-dev\n\n# Mac OS X:\n\n#   brew install glfw\n\n# MSYS2:\n\n#   pacman -S --noconfirm --needed mingw-w64-x86_64-toolchain mingw-w64-x86_64-glfw\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#CXX = g++\n\n#CXX = clang++\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##---------------------------------------------------------------------\n\n## OPENGL LOADER\n\n##---------------------------------------------------------------------\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Using OpenGL loader: gl3w [default]\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Using OpenGL loader: glew\n\n## (This assumes a system-wide installation)\n\n# CXXFLAGS = -lGLEW -DIMGUI_IMPL_OPENGL_LOADER_GLEW\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Using OpenGL loader: glad\n\n## (You'll also need to change the rule at line ~77 of this Makefile to compile/link glad.c/.o)\n\n# SOURCES += ../libs/glad/src/glad.c\n\n# CXXFLAGS = -I../libs/glad/include -DIMGUI_IMPL_OPENGL_LOADER_GLAD\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "##---------------------------------------------------------------------\n\n## BUILD FLAGS PER PLATFORM\n\n##---------------------------------------------------------------------\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#LINUX\n",
        "Line" : 45,
        "CharPositionInLine" : 25
      },
      "8" : {
        "Text" : "#APPLE\n",
        "Line" : 54,
        "CharPositionInLine" : 26
      },
      "9" : {
        "Text" : "#LIBS += -L/usr/local/lib -lglfw3\n",
        "Line" : 57,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "##---------------------------------------------------------------------\n\n## BUILD RULES\n\n##---------------------------------------------------------------------\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# %.o:../libs/glad/src/%.c\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "third_party/imgui/examples/example_glfw_vulkan/CMakeLists.txt" : {
      "ObjectId" : "82d7ab47df6b4b502b85df2119b92e7e071156ea",
      "LastModified" : "2019-03-20T00:15:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# GLFW\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set this to point to an up-to-date GLFW repo\n",
        "Line" : 12,
        "CharPositionInLine" : 28
      },
      "2" : {
        "Text" : "# ImGui\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Libraries\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Use vulkan headers from glfw:\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "third_party/imgui/examples/example_sdl_opengl2/Makefile" : {
      "ObjectId" : "4a948aa49c07d73772a01d0b04fb0350ea623eb3",
      "LastModified" : "2019-03-20T00:15:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Cross Platform Makefile\n\n# Compatible with MSYS2/MINGW, Ubuntu 14.04.1 and Mac OS X\n\n#\n\n# You will need SDL2 (http://www.libsdl.org):\n\n# Linux:\n\n#   apt-get install libsdl2-dev\n\n# Mac OS X:\n\n#   brew install sdl2\n\n# MSYS2:\n\n#   pacman -S mingw-w64-i686-SDL\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#CXX = g++\n\n#CXX = clang++\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#LINUX\n",
        "Line" : 25,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "#APPLE\n",
        "Line" : 34,
        "CharPositionInLine" : 26
      },
      "CommentCount" : 4
    },
    "third_party/imgui/examples/example_sdl_opengl3/Makefile" : {
      "ObjectId" : "69874119f66b1226c5bec9e0bd0bd15fd2b9ce11",
      "LastModified" : "2019-03-20T00:15:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Cross Platform Makefile\n\n# Compatible with MSYS2/MINGW, Ubuntu 14.04.1 and Mac OS X\n\n#\n\n# You will need SDL2 (http://www.libsdl.org):\n\n# Linux:\n\n#   apt-get install libsdl2-dev\n\n# Mac OS X:\n\n#   brew install sdl2\n\n# MSYS2:\n\n#   pacman -S mingw-w64-i686-SDL\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#CXX = g++\n\n#CXX = clang++\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##---------------------------------------------------------------------\n\n## OPENGL LOADER\n\n##---------------------------------------------------------------------\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Using OpenGL loader: gl3w [default]\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Using OpenGL loader: glew\n\n## (This assumes a system-wide installation)\n\n# CXXFLAGS = -lGLEW -DIMGUI_IMPL_OPENGL_LOADER_GLEW\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Using OpenGL loader: glad\n\n## (You'll also need to change the rule at line ~77 of this Makefile to compile/link glad.c/.o)\n\n# SOURCES += ../libs/glad/src/glad.c\n\n# CXXFLAGS = -I../libs/glad/include -DIMGUI_IMPL_OPENGL_LOADER_GLAD\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "##---------------------------------------------------------------------\n\n## BUILD FLAGS PER PLATFORM\n\n##---------------------------------------------------------------------\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#LINUX\n",
        "Line" : 45,
        "CharPositionInLine" : 25
      },
      "8" : {
        "Text" : "#APPLE\n",
        "Line" : 54,
        "CharPositionInLine" : 26
      },
      "9" : {
        "Text" : "##---------------------------------------------------------------------\n\n## BUILD RULES\n\n##---------------------------------------------------------------------\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    }
  },
  "FileTypes" : {
    "CMAKE" : 6,
    "CMAKESOURCE" : 1,
    "QMAKE" : 1,
    "MAKEFILE" : 5
  },
  "ElapsedTime" : 1840
}