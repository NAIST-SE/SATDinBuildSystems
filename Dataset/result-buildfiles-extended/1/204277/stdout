{
  "Repository" : "204277",
  "Revision" : "HEAD",
  "ObjectId" : "1fc56ec4819af81f94ad5339cce5e15534a4c3a7",
  "CommitTime" : "2019-04-03T08:14:45Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "f9634c641188429962cee1552e217cb4275378dc",
      "LastModified" : "2018-08-24T08:35:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# use c++11\n",
        "Line" : 4,
        "CharPositionInLine" : 28
      },
      "1" : {
        "Text" : "# XXX I don't know why this should be here\n",
        "Line" : 6,
        "CharPositionInLine" : 40
      },
      "2" : {
        "Text" : "# Modify where to find the modules\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "################\n\n# OpenMEEG Configuration and needed things\n\n################\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# install setup (do it before adding targets)\n",
        "Line" : 23,
        "CharPositionInLine" : 30
      },
      "5" : {
        "Text" : "# install setup (do it before adding targets)\n",
        "Line" : 24,
        "CharPositionInLine" : 32
      },
      "6" : {
        "Text" : "################\n\n# OpenMEEG stuff\n\n################\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "################\n\n# OpenMEEG Export\n\n################\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# XXX: Hot fix to be able to ship win binaries when OpenMP is active\n\n#\n\n# see:https://braintrekking.wordpress.com/2013/04/27/dll-hell-how-to-include-microsoft-redistributable-runtime-libraries-in-your-cmakecpack-project/\n\n# TODO:\n\n#   - Build a test that fails if this is not active\n\n#   - Find a way to find vcompXXX.dll in the system\n\n#   - Place this in the proper place (probably the entire install.cmake/thirdparty.cmake needs refactor)\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "OpenMEEG/CMakeLists.txt" : {
      "ObjectId" : "f867728911fedfbb144914203cb38d3bc90d64ef",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# OpenMP\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Progress bar\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# XXX: this is to include the generated file OpenMEEG_Export.h\n\n# XXX: this is to include the generated file OpenMEEGConfigure.h\n",
        "Line" : 45,
        "CharPositionInLine" : 57
      },
      "3" : {
        "Text" : "# XXX : this should become PRIVATE ! and transitive\n",
        "Line" : 54,
        "CharPositionInLine" : 13
      },
      "4" : {
        "Text" : "# 'make install' to the correct locations (provided by GNUInstallDirs).\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# This is for Windows\n",
        "Line" : 70,
        "CharPositionInLine" : 51
      },
      "CommentCount" : 6
    },
    "OpenMEEGMaths/CMakeLists.txt" : {
      "ObjectId" : "8d5dc299617468e7f89c65a4364c253077f1e044",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# OpenMEEGMath\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# XXX : this should not be here, transitive properties should work\n",
        "Line" : 25,
        "CharPositionInLine" : 29
      },
      "2" : {
        "Text" : "# XXX: this is to include the generated file OpenMEEGMaths_Export.h\n\n# XXX: this is to include the generated file OpenMEEGConfigure.h\n",
        "Line" : 27,
        "CharPositionInLine" : 57
      },
      "3" : {
        "Text" : "# XXX : this should become transitive prop.\n",
        "Line" : 31,
        "CharPositionInLine" : 32
      },
      "4" : {
        "Text" : "# XXX : this should become PRIVATE ! and hdf5 should come from matio\n",
        "Line" : 35,
        "CharPositionInLine" : 13
      },
      "5" : {
        "Text" : "# create_library(OpenMEEGMaths ${OpenMEEGMaths_SOURCES})\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# 'make install' to the correct locations (provided by GNUInstallDirs).\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This is for Windows\n",
        "Line" : 53,
        "CharPositionInLine" : 51
      },
      "8" : {
        "Text" : "############################################################\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# This are executables using OpenMEEGMath\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# add_subdirectory(apps)\n\n# add_subdirectory(OpenMEEGMath/tests)\n\n# add_subdirectory(OpenMEEGMath/apps)\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "OpenMEEGMaths/tests/CMakeLists.txt" : {
      "ObjectId" : "322f6e127e445596a750f2f95ba6b833deeadd02",
      "LastModified" : "2018-03-19T16:02:04Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "apps/CMakeLists.txt" : {
      "ObjectId" : "d251d788dcf6379c1e7f8e602379a618f72845d1",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# macro(OPENMEEG_EXECUTABLE EXECUTABLE)\n\n#     NEW_EXECUTABLE(${EXECUTABLE} ${ARGN} LIBRARIES OpenMEEG ${VTK_LIBRARIES} ${GIFTI_LIBRARIES})\n\n# endmacro()\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# OPENMEEG_EXECUTABLE(om_minverser minverser.cpp)\n\n# OPENMEEG_EXECUTABLE(om_gain gain.cpp)\n\n# OPENMEEG_EXECUTABLE(om_forward forward.cpp)\n\n# OPENMEEG_EXECUTABLE(om_assemble assemble.cpp)\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ================\n\n# = INSTALLATION =\n\n# ================\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# install(TARGETS om_assemble om_forward om_gain om_minverser\n\n#         RUNTIME DESTINATION ${INSTALL_BIN_DIR}\n\n#         LIBRARY DESTINATION ${INSTALL_LIB_DIR}\n\n#         ARCHIVE DESTINATION ${INSTALL_LIB_DIR})\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ===========\n\n# = TESTING =\n\n# ===========\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# those models should give same results !\n\n#TESTHEAD(0)\n\n#TESTHEAD(NNa0)\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# multiple nonconductive tests\n",
        "Line" : 84,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "apps/TestHead.cmake" : {
      "ObjectId" : "f3d1936cb6cef21e45b586924604ce710fd34597",
      "LastModified" : "2018-03-19T16:02:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#   This is the only test that should not use OPENMEEG_TEST\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# XXXX this has to be done OpenMEEG_BINARY_DIR\n",
        "Line" : 3,
        "CharPositionInLine" : 47
      },
      "2" : {
        "Text" : "# XXXX this has to be done differently\n",
        "Line" : 4,
        "CharPositionInLine" : 45
      },
      "3" : {
        "Text" : "# XXXX this has to be done differently\n",
        "Line" : 5,
        "CharPositionInLine" : 48
      },
      "4" : {
        "Text" : "#   assemble tests\n",
        "Line" : 85,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# corticalMat tests\n",
        "Line" : 94,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# EEG test\n",
        "Line" : 102,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Forward\n",
        "Line" : 111,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# MEG\n",
        "Line" : 117,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Forward\n",
        "Line" : 130,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# ECoG\n",
        "Line" : 135,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "############ TEST DIPOLE FORWARD RESULTS (Regression test) ##############\n",
        "Line" : 142,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# om_assemble -DSM geometry.geom conductivity.cond dipoles.dip dsm.bin\n",
        "Line" : 144,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# om_assemble -DS2MM dipoles.dip squidscoord.squids sToMEGmat.bin\n",
        "Line" : 148,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "#   ECoG gain matrix.\n",
        "Line" : 154,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# om_assemble -H2IPM geometry.geom conductivity.cond internalpoints.txt h2ip.bin\n",
        "Line" : 160,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# for Head1 and Head2, test EIT\n",
        "Line" : 164,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# EIT InternalPot\n",
        "Line" : 166,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# om_assemble -DS2IPM geometry.geom conductivity.cond dipoles.dip internalpoints.txt ds2ip.bin\n",
        "Line" : 173,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# forward gainmatrix.bin dipoleActivation.src estimatedeegdata.txt noiselevel\n",
        "Line" : 194,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# tests on Head3 for dipoles in the skull and scalp\n",
        "Line" : 215,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 21
    },
    "apps/tools/CMakeLists.txt" : {
      "ObjectId" : "ac2a992244ba4ac0020a1d2e24f28b975df6cccf",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# these are tools handling images (.inr format only for the moment!)\n",
        "Line" : 45,
        "CharPositionInLine" : 28
      },
      "1" : {
        "Text" : "# edge collapse feature is stabilized in version ? not 4.2\n",
        "Line" : 52,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# compile the OpenMEEGCgal library\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# compile each target\n",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# tests\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# tests\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/CompilerOptions.cmake" : {
      "ObjectId" : "f24fe005e52337fbedd001dd8d67cbdd8ae4b93a",
      "LastModified" : "2019-03-29T15:13:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---------------------------------------------------------------\n\n# Test and setup the C++ compiler features\n\n#---------------------------------------------------------------\n\n# XXX Instead of calling CHECK_CXX_STANDARD_LIBRARY with a bunch of\n\n#   unneeded options. The needed functionalities should be checked\n\n#   here\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindMKL.cmake" : {
      "ObjectId" : "2f4cc008e84271c345d19cc5969a19dfb20ab36f",
      "LastModified" : "2018-03-19T16:02:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindMKL\n\n# -------\n\n#\n\n# Find a Intel® Math Kernel Library (Intel® MKL) installation and provide\n\n# all necessary variables and macros to compile software for it.\n\n#\n\n# MKLROOT is required in your system\n\n#\n\n# we use mkl_link_tool to get the library needed depending on variables\n\n# There are few sets of libraries:\n\n#\n\n# Array indexes modes:\n\n#\n\n# ::\n\n#\n\n# LP - 32 bit indexes of arrays\n\n# ILP - 64 bit indexes of arrays\n\n#\n\n#\n\n#\n\n# Threading:\n\n#\n\n# ::\n\n#\n\n# SEQUENTIAL - no threading\n\n# INTEL - Intel threading library\n\n# GNU - GNU threading library\n\n# MPI support\n\n# NOMPI - no MPI support\n\n# INTEL - Intel MPI library\n\n# OPEN - Open MPI library\n\n# SGI - SGI MPT Library\n\n#\n\n#\n\n#\n\n#\n\n# The following are set after the configuration is done:\n\n#\n\n# ::\n\n#\n\n#  MKL_FOUND        -  system has MKL\n\n#  MKL_ROOT_DIR     -  path to the MKL base directory\n\n#  MKL_INCLUDE_DIR  -  the MKL include directory\n\n#  MKL_LIBRARIES    -  MKL libraries\n\n#  MKL_LIBRARY_DIR  -  MKL library dir (for dlls!)\n\n#\n\n#\n\n#\n\n# Sample usage:\n\n#\n\n# If MKL is required (i.e., not an optional part):\n\n#\n\n# ::\n\n#\n\n#    find_package(MKL REQUIRED)\n\n#    if (MKL_FOUND)\n\n#        include_directories(${MKL_INCLUDE_DIR})\n\n#        # and for each of your dependent executable/library targets:\n\n#        target_link_libraries(<YourTarget> ${MKL_LIBRARIES})\n\n#    endif()\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# NOTES\n\n#\n\n# If you want to use the module and your build type is not supported\n\n# out-of-the-box, please contact me to exchange information on how\n\n# your system is setup and I'll try to add support for it.\n\n#\n\n# AUTHOR\n\n#\n\n# Joan MASSICH (joan.massich-vall.AT.inria.fr).\n\n# Alexandre GRAMFORT (Alexandre.Gramfort.AT.inria.fr)\n\n# Théodore PAPADOPOULO (papadop.AT.inria.fr)\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find MKL ROOT\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Convert symlinks to real paths\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# set arguments to call the MKL provided tool for linking\n",
        "Line" : 97,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# check that the tools exists or quit\n",
        "Line" : 104,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# first the libs\n",
        "Line" : 109,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# possible versions\n\n# <11.3|11.2|11.1|11.0|10.3|10.2|10.1|10.0|ParallelStudioXE2016|ParallelStudioXE2015|ComposerXE2013SP1|ComposerXE2013|ComposerXE2011|CompilerPro>\n",
        "Line" : 112,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# not older than MKL 10 (2011)\n",
        "Line" : 115,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# version 11 ...\n",
        "Line" : 122,
        "CharPositionInLine" : 43
      },
      "11" : {
        "Text" : "# remove unwanted break\n",
        "Line" : 213,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# get the list of libs\n",
        "Line" : 216,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# UNIX and macOS\n",
        "Line" : 229,
        "CharPositionInLine" : 11
      },
      "14" : {
        "Text" : "# remove unwanted break\n",
        "Line" : 230,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# hack for lin with libiomp5.a\n",
        "Line" : 234,
        "CharPositionInLine" : 12
      },
      "16" : {
        "Text" : "# dynamic or sdl\n",
        "Line" : 241,
        "CharPositionInLine" : 15
      },
      "17" : {
        "Text" : "# get the lib dirs\n",
        "Line" : 242,
        "CharPositionInLine" : 12
      },
      "18" : {
        "Text" : "#   Work around a bug in mkl 2018\n",
        "Line" : 245,
        "CharPositionInLine" : 16
      },
      "19" : {
        "Text" : "# get the list of libs\n",
        "Line" : 254,
        "CharPositionInLine" : 12
      },
      "20" : {
        "Text" : "# set full path to libs\n",
        "Line" : 257,
        "CharPositionInLine" : 12
      },
      "21" : {
        "Text" : "# now definitions\n",
        "Line" : 275,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 22
    },
    "cmake/FindNumpy.cmake" : {
      "ObjectId" : "a146762e7e8037b00cbe7b13a8470dfd4a7b8641",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find the NumPy libraries\n\n# This module finds if NumPy is installed, and sets the following variables\n\n# indicating where it is.\n\n#\n\n# TODO: Update to provide the libraries and paths for linking npymath lib.\n\n#\n\n#  NUMPY_FOUND               - was NumPy found\n\n#  NUMPY_VERSION             - the version of NumPy found as a string\n\n#  NUMPY_VERSION_MAJOR       - the major version number of NumPy\n\n#  NUMPY_VERSION_MINOR       - the minor version number of NumPy\n\n#  NUMPY_VERSION_PATCH       - the patch version number of NumPy\n\n#  NUMPY_VERSION_DECIMAL     - e.g. version 1.6.1 is 10601\n\n#  NUMPY_INCLUDE_DIRS        - path to the NumPy include files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#============================================================================\n\n# Copyright 2012 Continuum Analytics, Inc.\n\n#\n\n# MIT License\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining\n\n# a copy of this software and associated documentation files\n\n# (the \"Software\"), to deal in the Software without restriction, including\n\n# without limitation the rights to use, copy, modify, merge, publish,\n\n# distribute, sublicense, and/or sell copies of the Software, and to permit\n\n# persons to whom the Software is furnished to do so, subject to\n\n# the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included\n\n# in all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\n# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n\n# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n\n# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n\n# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\n# OTHER DEALINGS IN THE SOFTWARE.\n\n#\n\n#============================================================================\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Finding NumPy involves calling the Python interpreter\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Convert the process output into a list\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Just in case there is unexpected output from the Python command.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The output from Python was unexpected. Raise an error always\n\n# here, because we found NumPy, but it appears to be corrupted somehow.\n",
        "Line" : 80,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Make sure all directory separators are '/'\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Get the major and minor version numbers\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake/FindOpenBLAS.cmake" : {
      "ObjectId" : "14b368410e51dcfca8ed34d315feb60e2936025a",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  Adapted from Caffe\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# the git version propose a OpenBLASConfig.cmake\n",
        "Line" : 4,
        "CharPositionInLine" : 20
      },
      "2" : {
        "Text" : "# mostly for debian\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#    Check include files\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#    Check libraries\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "cmake/Findmatio.cmake" : {
      "ObjectId" : "ee9ffcefe7215d726a6edcd754c92b615f6e3b09",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the matio headers and library.\n\n#\n\n#  matio_INCLUDE_DIRS - where to find matio.h, etc.\n\n#  matio_LIBRARIES    - List of libraries.\n\n#  matio_FOUND        - True if matio found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module will read the variable\n\n# MATIO_USE_STATIC_LIBRARIES to determine whether or not to prefer a\n\n# static link to a dynamic link for MATIO and all of it's dependencies.\n\n# To use this feature, make sure that the MATIO_USE_STATIC_LIBRARIES\n\n# variable is set before the call to find_package.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#   We provide a module in case matio has not been found in config mode.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# get_filename_component(ABS_LIB ${LIB} REALPATH)\n",
        "Line" : 26,
        "CharPositionInLine" : 16
      },
      "4" : {
        "Text" : "# Make a modern cmake interface to HDF5\n",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Look for the header file.\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Look for the library.\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# XXXX This needs to go out !\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set matio_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 9
    },
    "cmake/Packaging.cmake" : {
      "ObjectId" : "5044d5d2c255f5357bc2edce3989d836be434967",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------\n\n# packaging\n\n#-----------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set variables\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# set(PACKAGE_OPTIONS ${BLASLAPACK_IMPLEMENTATION})\n\n# set(PACKAGE_OPTIONS)\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# if (USE_OMP)\n\n#     set(PACKAGE_OPTIONS ${PACKAGE_OPTIONS}-OpenMP)\n\n# endif()\n",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# if (USE_VTK)\n\n#     set(PACKAGE_OPTIONS ${PACKAGE_OPTIONS}-vtk)\n\n# endif()\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# if (USE_CGAL)\n\n#     set(PACKAGE_OPTIONS ${PACKAGE_OPTIONS}-cgal)\n\n# endif()\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# if (ENABLE_PYTHON)\n\n#     set(PACKAGE_OPTIONS ${PACKAGE_OPTIONS}-python)\n\n# endif()\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# set(CPACK_PACKAGE_FILE_NAME \"${CPACK_PACKAGE_NAME}-${CPACK_PACKAGE_VERSION}-${PACKAGE_ARCH_SHORT}-${PACKAGE_OPTIONS}\")\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Following https://blog.quickmediasolutions.com/2017/11/24/using-windeployqt-with-cpack.html\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# set(CMAKE_INSTALL_OPENMP_LIBRARIES TRUE)\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 10
    },
    "cmake/Uninstall.cmake" : {
      "ObjectId" : "844c7e4ddb8dba2584d60ca08e046a705fa9fa9f",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------\n\n# Support for make uninstall\n\n#-----------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/install.cmake" : {
      "ObjectId" : "43ad827d70a7875eb5f6d5fdfaa588a98406de77",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install stuff\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# means if LINUX\n",
        "Line" : 8,
        "CharPositionInLine" : 14
      },
      "2" : {
        "Text" : "# to fix the installed rpath so it looks in ../lib\n\n# https://www.semipol.de/2012/02/16/relative-rpath-settings-with-cmake.html\n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Find absolute path to each external lib to avoid symlinks then package it\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# install_system_libs(HDF5::HDF5)\n\n# install_system_libs(MATIO::MATIO)\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/options.cmake" : {
      "ObjectId" : "26ce41ab2f1e299dd4eb828efa83ffe3eb30b44e",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Documentation configuration\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Installation options\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/thirdParties.cmake" : {
      "ObjectId" : "b7376611e0fbb18a193bdecf00916f5ba918d731",
      "LastModified" : "2019-03-29T15:13:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############\n\n# FindMKL stuff\n\n###############\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# user defined options for MKL\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# XXX: OpenBLAS should be set up using find_package(BLAS)\n",
        "Line" : 32,
        "CharPositionInLine" : 36
      },
      "3" : {
        "Text" : "# XXX This should be an option\n",
        "Line" : 58,
        "CharPositionInLine" : 41
      },
      "4" : {
        "Text" : "################\n\n# VTK stuff\n\n###############\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# what components do we want:\n",
        "Line" : 68,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# set(CMAKE_MSVCIDE_RUN_PATH ${VTK_RUNTIME_LIBRARY_DIRS} ${CMAKE_MSVCIDE_RUN_PATH}) # specially for windows\n",
        "Line" : 77,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 7
    },
    "cmake/utils/CheckCXXFeatures.cmake" : {
      "ObjectId" : "eadcf7bb151c8e30024babe7418f1dd94a2bf190",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#${CMAKE_ROOT}/Modules/TestForSTDNamespace.cxx\n",
        "Line" : 8,
        "CharPositionInLine" : 12
      },
      "1" : {
        "Text" : "# CHECK_CXX_FEATURE(HAVE_COMPLEX                       have_complex.cpp                  \"has complex<T>\")\n\n# CHECK_CXX_FEATURE(HAVE_COMPLEX_FCNS                  have_complex_fcns.cpp             \"has standard complex<T> functions\")\n\n# CHECK_HEADER(HAVE_CSTRING cstring)\n\n# CHECK_CXX_FEATURE(HAVE_NUMERIC_LIMITS                have_numeric_limits.cpp           \"has numeric_limits<T>\")\n\n# CHECK_CXX_FEATURE(HAVE_CLIMITS                       have_climits.cpp                  \"has <climits> header\")\n\n# CHECK_CXX_FEATURE(HAVE_VALARRAY                      have_valarray.cpp                 \"has valarray<T>\")\n\n# CHECK_CXX_FEATURE(HAVE_COMPLEX_MATH1                 have_complex_math1.cpp            \"has complex math functions\")\n\n# CHECK_CXX_FEATURE(HAVE_COMPLEX_MATH2                 have_complex_math2.cpp            \"has more complex math functions\")\n\n# CHECK_CXX_FEATURE(HAVE_IEEE_MATH                     have_ieee_math.cpp                \"supports IEEE math library\")\n\n# CHECK_CXX_FEATURE(HAVE_SYSTEM_V_MATH                 have_system_v_math.cpp            \"supports System V math library\")\n\n# CHECK_CXX_FEATURE(HAVE_MATH_FN_IN_NAMESPACE_STD      math_fn_in_namespace_std.cpp      \"has C math functions in namespace std\")\n\n# CHECK_CXX_FEATURE(HAVE_MATH_ABSINT_IN_NAMESPACE_STD  math_absint_in_namespace_std.cpp  \"has C math abs(integer type) in namespace std\")\n\n# CHECK_CXX_FEATURE(HAVE_COMPLEX_MATH_IN_NAMESPACE_STD complex_math_in_namespace_std.cpp \"supports complex math functions are in namespace std\")\n\n# CHECK_CXX_FEATURE(HAVE_ISNAN_IN_NAMESPACE_STD        isnan_in_namespace_std.cpp        \"has isnan function in namespace std\")\n",
        "Line" : 88,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# CHECK_CXX_FEATURE(HAVE_STD                           have_std.cpp                      \"supports ISO C++ standard library\")\n\n# CHECK_CXX_FEATURE(HAVE_STL                           have_stl.cpp                      \"supports Standard Template Library\")\n\n# CHECK_CXX_FEATURE(HAVE_RUSAGE                        have_rusage.cpp                   \"has getrusage() function\")\n",
        "Line" : 103,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# CHECK_CXX_GENERAL()\n\n# CHECK_CXX_KEYWORDS()\n\n# CHECK_CXX_TYPE_CASTS()\n\n# CHECK_CXX_TEMPLATES_FEATURES()\n",
        "Line" : 110,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "cmake/utils/NewExecutable.cmake" : {
      "ObjectId" : "25da429f38fb02b4323c223a0341a0d5d8f1b6d5",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/utils/UnitTest.cmake" : {
      "ObjectId" : "7badf5a18c3a04f878d8865c936bd3731cd510e9",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/utils/dump_target.cmake" : {
      "ObjectId" : "0b62465959f8d4b3eb5a3a41838ff46883f106e4",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Get all propreties that cmake supports\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Convert command output into a CMake list\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fix https://stackoverflow.com/questions/32197663/how-can-i-remove-the-the-location-property-may-not-be-read-from-target-error-i\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# message (\"Checking ${prop}\")\n",
        "Line" : 24,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 4
    },
    "cmake/utils/matioVersion.cmake" : {
      "ObjectId" : "9e7ff5cf98b9a59434fae0a19576ddb81d81f6a5",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#   If the matio config file already provided the variable HDF5_VERSION_STRING,\n\n#   there is nothing to do.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake_old/AddDemoTarget.cmake" : {
      "ObjectId" : "c9888a9a9b2c34e821d74237f73299235af8bbdc",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake_old/BlasLapackOption.cmake" : {
      "ObjectId" : "0e22aec296cce3b0e096a280a268c4ab0edd233e",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# the default case is Auto unless user tells something else\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# the list of possibilites depending on the OS\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the possible values of build type for cmake-gui\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Ensure that only one lapack implementation is selected by clearing all variable before setting the one chosen.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# unset unused variables\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "### now actually include the files\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# include the wanted BlasLapack\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Detect Fortran to C interface.\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# TODO windows goes in this ....\n\n# Last chance check...\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# if not we can build our LAPACK\n\n# if still no LAPACK and we are in the superproject then build it\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 10
    },
    "cmake_old/ComparisonTest.cmake" : {
      "ObjectId" : "9e915823316b6da3744417fece1af0b8c7787965",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake_old/CompileOptions.cmake" : {
      "ObjectId" : "fe776e085391874dee4671ff01ab1b737948eb3c",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#######################################################################\n\n# Setting compilation options\n\n#######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# to allow the use of and, or instead of && ||\n",
        "Line" : 37,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# for DLL windows\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake_old/CreateTestEnvironment.cmake" : {
      "ObjectId" : "6061df5088ea5c074ac271f5b4a42a071a7fe97d",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#   Create the proper environment variables for platforms that need those.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#   Python dir\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#   Hdf5 dir\n",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "cmake_old/FindAtlas.cmake" : {
      "ObjectId" : "7d453680046c4c24521eaf0a5b06dc1eee19bbf6",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake_old/FindLibrary.cmake" : {
      "ObjectId" : "871aee04d6e10627c548b2a5952278b20932c8d4",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Store in cache previous value of BUILD_SHARED_LIBS\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake_old/FindSoftware.cmake" : {
      "ObjectId" : "c904028161596701e72f520b4eea107f66219e9e",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake_old/FindvecLib.cmake" : {
      "ObjectId" : "6955f582bde84b92c480d5a983d404c53cfb7f55",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the vecLib libraries as part of Accelerate.framework or as standalon framework\n\n#\n\n# The following are set after configuration is done:\n\n#  VECLIB_FOUND\n\n#  vecLib_INCLUDE_DIR\n\n#  vecLib_LINKER_LIBS\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake_old/FortranCInterface.cmake" : {
      "ObjectId" : "39fa9665376de646b62b7d894a670c3f2c307407",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Fortran/C Interface Detection\n\n# This module automatically detects the API by which C and Fortran\n\n# languages interact.  Variables indicate if the mangling is found:\n\n#   FortranCInterface_GLOBAL_FOUND = Global subroutines and functions\n\n#   FortranCInterface_MODULE_FOUND = Module subroutines and functions\n\n#                                    (declared by \"MODULE PROCEDURE\")\n\n# A function is provided to generate a C header file containing macros\n\n# to mangle symbol names:\n\n#   FortranCInterface_HEADER(<file>\n\n#                            [MACRO_NAMESPACE <macro-ns>]\n\n#                            [SYMBOL_NAMESPACE <ns>]\n\n#                            [SYMBOLS [<module>:]<function> ...])\n\n# It generates in <file> definitions of the following macros:\n\n#   #define FortranCInterface_GLOBAL (name,NAME) ...\n\n#   #define FortranCInterface_GLOBAL_(name,NAME) ...\n\n#   #define FortranCInterface_MODULE (mod,name, MOD,NAME) ...\n\n#   #define FortranCInterface_MODULE_(mod,name, MOD,NAME) ...\n\n# These macros mangle four categories of Fortran symbols,\n\n# respectively:\n\n#   - Global symbols without '_': call mysub()\n\n#   - Global symbols with '_'   : call my_sub()\n\n#   - Module symbols without '_': use mymod; call mysub()\n\n#   - Module symbols with '_'   : use mymod; call my_sub()\n\n# If mangling for a category is not known, its macro is left undefined.\n\n# All macros require raw names in both lower case and upper case.\n\n# The MACRO_NAMESPACE option replaces the default \"FortranCInterface_\"\n\n# prefix with a given namespace \"<macro-ns>\".\n\n#\n\n# The SYMBOLS option lists symbols to mangle automatically with C\n\n# preprocessor definitions:\n\n#   <function>          ==> #define <ns><function> ...\n\n#   <module>:<function> ==> #define <ns><module>_<function> ...\n\n# If the mangling for some symbol is not known then no preprocessor\n\n# definition is created, and a warning is displayed.\n\n# The SYMBOL_NAMESPACE option prefixes all preprocessor definitions\n\n# generated by the SYMBOLS option with a given namespace \"<ns>\".\n\n#\n\n# Example usage:\n\n#   include(FortranCInterface)\n\n#   FortranCInterface_HEADER(FC.h MACRO_NAMESPACE \"FC_\")\n\n# This creates a \"FC.h\" header that defines mangling macros\n\n# FC_GLOBAL(), FC_GLOBAL_(), FC_MODULE(), and FC_MODULE_().\n\n#\n\n# Example usage:\n\n#   include(FortranCInterface)\n\n#   FortranCInterface_HEADER(FCMangle.h\n\n#                            MACRO_NAMESPACE \"FC_\"\n\n#                            SYMBOL_NAMESPACE \"FC_\"\n\n#                            SYMBOLS mysub mymod:my_sub)\n\n# This creates a \"FCMangle.h\" header that defines the same FC_*() mangling\n\n# macros as the previous example plus preprocessor symbols FC_mysub\n\n# and FC_mymod_my_sub.\n\n#\n\n# Another function is provided to verify that the Fortran and C/C++\n\n# compilers work together:\n\n#   FortranCInterface_VERIFY([CXX] [QUIET])\n\n# It tests whether a simple test executable using Fortran and C (and\n\n# C++ when the CXX option is given) compiles and links successfully.\n\n# The result is stored in the cache entry FortranCInterface_VERIFIED_C\n\n# (or FortranCInterface_VERIFIED_CXX if CXX is given) as a boolean.\n\n# If the check fails and QUIET is not given the function terminates\n\n# with a FATAL_ERROR message describing the problem.  The purpose of\n\n# this check is to stop a build early for incompatible compiler\n\n# combinations.\n\n#\n\n# FortranCInterface is aware of possible GLOBAL and MODULE manglings\n\n# for many Fortran compilers, but it also provides an interface to\n\n# specify new possible manglings.  Set the variables\n\n#   FortranCInterface_GLOBAL_SYMBOLS\n\n#   FortranCInterface_MODULE_SYMBOLS\n\n# before including FortranCInterface to specify manglings of the\n\n# symbols \"MySub\", \"My_Sub\", \"MyModule:MySub\", and \"My_Module:My_Sub\".\n\n# For example, the code:\n\n#   set(FortranCInterface_GLOBAL_SYMBOLS mysub_ my_sub__ MYSUB_)\n\n#     #                                  ^^^^^  ^^^^^^   ^^^^^\n\n#   set(FortranCInterface_MODULE_SYMBOLS\n\n#       __mymodule_MOD_mysub __my_module_MOD_my_sub)\n\n#     #   ^^^^^^^^     ^^^^^   ^^^^^^^^^     ^^^^^^\n\n#   include(FortranCInterface)\n\n# tells FortranCInterface to try given GLOBAL and MODULE manglings.\n\n# (The carets point at raw symbol names for clarity in this example\n\n# but are not needed.)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2008-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distributed this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Execute at most once in a project.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Use CMake 2.6.0 behavior for this module regardless of including context.\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Parse arguments.\n",
        "Line" : 113,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#set(FortranCInterface_SOURCE_DIR ${CMAKE_ROOT}/Modules/FortranCInterface)\n",
        "Line" : 138,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Create the interface detection project if it does not exist.\n",
        "Line" : 141,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Verify that C and Fortran are available.\n",
        "Line" : 162,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Detection of fortran mangling.\n",
        "Line" : 170,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Load the detection results.\n",
        "Line" : 176,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Generate macro definitions.\n",
        "Line" : 179,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Generate symbol mangling definitions.\n",
        "Line" : 194,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Module symbol name.  Parse \"<module>:<function>\" syntax.\n",
        "Line" : 203,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# Global symbol name.\n",
        "Line" : 222,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# Store the content.\n",
        "Line" : 238,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Check arguments.\n",
        "Line" : 243,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Build the verification project if not yet built.\n",
        "Line" : 265,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Build a sample project which reports symbols.\n",
        "Line" : 270,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Report results.\n",
        "Line" : 283,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Error if compilers are incompatible.\n",
        "Line" : 298,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Restore including context policies.\n",
        "Line" : 310,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "cmake_old/FortranCInterface/CMakeLists.txt" : {
      "ObjectId" : "18014af5a4694e3ff99f532e85b20bf3d70a7583",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n# Copyright 2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check if the C compiler supports '$' in identifiers.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# List manglings of global symbol names to try.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# VisualAge\n\n# GNU, Intel, HP, SunPro, MIPSpro\n\n# GNU g77\n\n# Intel on Windows\n\n# VisualAge\n\n# GNU, Intel, HP, SunPro, MIPSpro\n\n# Intel on Windows\n",
        "Line" : 25,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "# List manglings of module symbol names to try.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# GNU 4.3\n\n# VisualAge\n\n# GNU 4.2\n\n# GNU 4.3\n\n# VisualAge\n\n# GNU 4.2\n\n# HP\n\n# Intel\n\n# Intel on Windows\n\n# PGI\n\n# HP\n\n# Intel\n\n# Intel on Windows\n\n# PGI\n",
        "Line" : 38,
        "CharPositionInLine" : 26
      },
      "6" : {
        "Text" : "# Note that some compiler manglings cannot be invoked from C:\n\n#   MIPSpro uses \"MY_SUB.in.MY_MODULE\"\n\n#   SunPro uses \"my_module.my_sub_\"\n\n#   PathScale uses \"MY_SUB.in.MY_MODULE\"\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add module symbols only with Fortran90.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Generate C symbol sources.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Skip symbols with '$' if C cannot handle them.\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Provide symbols through Fortran.\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Provide symbols through C but fall back to Fortran.\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Require symbols through Fortran.\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "cmake_old/FortranCInterface/CreateOutput.cmake" : {
      "ObjectId" : "72ec8b173f643ac33d71535911bee5889b3d1608",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Construct mangling macro definitions.\n",
        "Line" : 2,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Summarize what is available.\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Record the detection results.\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Report the results.\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "cmake_old/FortranCInterface/Detect.cmake" : {
      "ObjectId" : "7c0ce69052ab2f265abce82769b4b0b8f5a638b2",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n# Copyright 2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Detect the Fortran/C interface on the first run or when the\n\n# configuration changes.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Invalidate verification results.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Build a sample project which reports symbols.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Locate the sample project executable.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Load symbols from INFO:symbol[] strings in the executable.\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Parse the symbol names.\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Look for global symbols.\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Look for module symbols.\n",
        "Line" : 107,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 9
    },
    "cmake_old/FortranCInterface/DetectFromLibrary.cmake" : {
      "ObjectId" : "9f92e8efa15140b1ab81eff8c56fd66e97449292",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n# Copyright 2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#  configure_file(${FortranCInterface_SOURCE_DIR}/Input.cmake.in\n\n#                 ${FortranCInterface_BINARY_DIR}/Input.cmake @ONLY)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#  # Detect the Fortran/C interface on the first run or when the\n\n#  # configuration changes.\n\n#  if(${FortranCInterface_BINARY_DIR}/Input.cmake\n\n#      IS_NEWER_THAN ${FortranCInterface_BINARY_DIR}/Output.cmake\n\n#      OR ${FortranCInterface_SOURCE_DIR}/Output.cmake.in\n\n#      IS_NEWER_THAN ${FortranCInterface_BINARY_DIR}/Output.cmake\n\n#      OR ${FortranCInterface_SOURCE_DIR}/CMakeLists.txt\n\n#      IS_NEWER_THAN ${FortranCInterface_BINARY_DIR}/Output.cmake\n\n#      OR ${CMAKE_CURRENT_LIST_FILE}\n\n#      IS_NEWER_THAN ${FortranCInterface_BINARY_DIR}/Output.cmake\n\n#      )\n\n#    message(STATUS \"Detecting Fortran/C Interface\")\n\n#  else()\n\n#    return()\n\n#  endif()\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Invalidate verification results.\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Detect the underscore/non underscore functions.\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Detect global/module functions.\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# How to deal with with MIDDLE ??\n",
        "Line" : 53,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# foreach(base ${sublo} ${subup})\n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "cmake_old/FortranCInterface/Verify/CMakeLists.txt" : {
      "ObjectId" : "052dd599f03b0852ee4598ebc69b3c82fd76da68",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n# Copyright 2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The entry point (main) is defined in C; link with the C compiler.\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "cmake_old/GenerateConfigFile.cmake" : {
      "ObjectId" : "7528150a24e7d1e8022b50c8822e0111ee1f7fff",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#   Offer the user the choice of overriding the installation directories\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# <- contains the list of FindDep.cmake needed to be installed\n",
        "Line" : 57,
        "CharPositionInLine" : 17
      },
      "2" : {
        "Text" : "#   Make relative paths absolute (needed later on)\n",
        "Line" : 87,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#   Creating files for companion projects\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#   Create a XXXConfig.cmake file for the use from the build tree\n",
        "Line" : 99,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "cmake_old/GithubOption.cmake" : {
      "ObjectId" : "bc307afb55bc75531f6498bc637c95cfc04b6346",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake_old/InstallMKL.cmake" : {
      "ObjectId" : "4f7e267d6fd537d726790700de3a7db5f93f1dc4",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#   Download MKL from Intel web site.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# 2018.0 does not unsupport the MacOS version of travis...\n\n#set(MKL_URL_DIR 12025)\n\n#set(MKL_BASE_NAME \"m_mkl_2018.0.104\")\n",
        "Line" : 10,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#   Unpack MKL in a local directory.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Linux\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#   Install MKL\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake_old/InstallPaths.cmake" : {
      "ObjectId" : "d17d593fea713e287e611bf42b2022547998f9d2",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#   Offer the user the choice of overriding the installation directories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake_old/KWStyle.cmake" : {
      "ObjectId" : "25d80c8968539017ec76b73857474d4165cc349f",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------\n\n# Code Syntax Checking with KWStyle\n\n#-----------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake_old/LibCorrections.cmake" : {
      "ObjectId" : "e81a02004992418174cdabc489183f47ca40b9a4",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake_old/OpenMEEGOptions.cmake" : {
      "ObjectId" : "4acecf049b5c93b7746312c018f04b6e3cd17cc2",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tell CMake to use rpath with the libs we build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# means if LINUX\n",
        "Line" : 8,
        "CharPositionInLine" : 14
      },
      "2" : {
        "Text" : "# to fix the installed rpath so it looks in ../lib\n\n# https://www.semipol.de/2012/02/16/relative-rpath-settings-with-cmake.html\n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Set CMAKE_BUILD_TYPE to Release by default.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set the possible values of build type for cmake-gui\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake_old/Options.cmake" : {
      "ObjectId" : "de01af31631796516f1fda4c9cac6e368d670a28",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Option: do we want a static or a dynamic build ?\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#   Various OpenMEEG options that will be forwarded.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#   Various matio options that will be forwarded.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake_old/ProgressBar.cmake" : {
      "ObjectId" : "a62689830fd379458f082ea6acbe5ceff2897bfe",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------\n\n# Progress bar\n\n#-----------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake_old/SetRevision.cmake" : {
      "ObjectId" : "59a7716ca8720b9eae727ad9855946353fd477d3",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake_old/SetTargets.cmake" : {
      "ObjectId" : "e6e8d9119f27d76bf049f9d3ad810c98800e56f9",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add Targets\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This adds targets that will be run in each external-projects\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake_old/Setup.cmake" : {
      "ObjectId" : "e46957b05132898aac6965711fe9ebc7aed737cc",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add CMAKE_MODULE_PATH to superProjectConfig.cmake\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add path of the get_revisions module to superProjectConfig.cmake\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake_old/TestOption.cmake" : {
      "ObjectId" : "eed3d561b31aa9e4d13998719c37562e2cc2fa64",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake_old/UseAtlas.cmake" : {
      "ObjectId" : "118d194167f451b506dbeca2beb635f22585672c",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#------------------------------------------------------------\n\n# Atlas library\n\n#------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake_old/UseAuto.cmake" : {
      "ObjectId" : "582f2d69c84a6868e4163abbf6529b06624fb025",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# this macro tries to use library in the defined priority\n",
        "Line" : 3,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# set the found BLASLAPACK_IMPLEMENTATION (in case it was Auto)\n",
        "Line" : 10,
        "CharPositionInLine" : 16
      },
      "2" : {
        "Text" : "# define here the priorities of BLAS/LAPACK to use\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "cmake_old/UseCGAL.cmake" : {
      "ObjectId" : "07ede7574bb971ef53f02a2b1852b2ae15673eb9",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#------------------------------------------------------------\n\n# CGAL library\n\n#------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# what components do we want:\n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# find_package(CGAL REQUIRED COMPONENTS Core OPTIONAL_COMPONENTS ImageIO) <- cannot since CGAL do not support OPTIONAL_COMPONENTS\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# for handling images (.inr format only for the moment!)\n",
        "Line" : 16,
        "CharPositionInLine" : 28
      },
      "4" : {
        "Text" : "# needed to remove quotes/spaces problems\n",
        "Line" : 28,
        "CharPositionInLine" : 39
      },
      "5" : {
        "Text" : "# old CGAL (trusty 4.2.5.ubuntu)\n",
        "Line" : 33,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 6
    },
    "cmake_old/UseGifti.cmake" : {
      "ObjectId" : "d4f059b6cfdb773a7323cadd598f81920a9315af",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#------------------------------------------------------------\n\n# GIFTI C library\n\n#------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake_old/UseLAPACK.cmake" : {
      "ObjectId" : "fa6b4800da44557e79713d739f6ae8eb3670d16f",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# first look for the compiled clapack\n",
        "Line" : 3,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# if not found, try to use the system lapack\n",
        "Line" : 10,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "cmake_old/UseMKL.cmake" : {
      "ObjectId" : "b4b4a71b95ad1b84f27a85d19fc61296d7281686",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# user defined options for MKL\n",
        "Line" : 2,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# e.g FIND_MODE can be REQUIRED or QUIET\n",
        "Line" : 7,
        "CharPositionInLine" : 35
      },
      "2" : {
        "Text" : "# case we were in Auto Mode\n",
        "Line" : 14,
        "CharPositionInLine" : 46
      },
      "CommentCount" : 3
    },
    "cmake_old/UseOpenBLAS.cmake" : {
      "ObjectId" : "c3cabee812e48e5255ec9e435cd5f074b7bb0afd",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#------------------------------------------------------------\n\n# OpenBLAS library\n\n#------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# special case for windows\n",
        "Line" : 7,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# so that the dlls can be found at runtime\n",
        "Line" : 9,
        "CharPositionInLine" : 12
      },
      "3" : {
        "Text" : "# add openblas as a shared imported lib\n",
        "Line" : 11,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "# set variables manually as the OpenBLASConfig.cmake given is wrong\n",
        "Line" : 22,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 5
    },
    "cmake_old/UseOpenMP.cmake" : {
      "ObjectId" : "e541742762b694d020e2b69d2bb901ffba663277",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#------------------------------------------------------------\n\n# OpenMP library\n\n#------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake_old/UseVTK.cmake" : {
      "ObjectId" : "7e4415fc75eb11bcbc42e17db212d6865b35b472",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#------------------------------------------------------------\n\n# VTK library\n\n#------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# what components do we want:\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# hack because else it is not defined\n",
        "Line" : 23,
        "CharPositionInLine" : 12
      },
      "3" : {
        "Text" : "# specially for windows\n",
        "Line" : 29,
        "CharPositionInLine" : 90
      },
      "4" : {
        "Text" : "# in case we are in the SuperProject :\n",
        "Line" : 30,
        "CharPositionInLine" : 11
      },
      "CommentCount" : 5
    },
    "cmake_old/UsevecLib.cmake" : {
      "ObjectId" : "ecd26f81d6c86eb63f904397ad1c2f659d927490",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake_old/Win32Compat.cmake" : {
      "ObjectId" : "9e7f2f9695d5d504b49e858a25dcd468f86fd686",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ==============================\n\n# = Fix DLL search pb on WIN32 =\n\n# ==============================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#   These are obsolete as per cmake 2.6\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "cmake_old/environment/CheckEnvironment.cmake" : {
      "ObjectId" : "88a791f2f0331e1640e1e232e54ae16ec5954723",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n#\n\n# OpenMEEG\n\n#\n\n# Copyright (c) INRIA 2013-2017. All rights reserved.\n\n# See LICENSE.txt for details.\n\n# \n\n#  This software is distributed WITHOUT ANY WARRANTY; without even\n\n#  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n\n#  PURPOSE.\n\n#\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This file checks that all dependencies are met, and it necessary sets up a few\n\n# things, like adding the github.com signature to known_hosts.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Assume Unix by default\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Look for windows specific programs\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#    # Check for DirectX SDK (for VTK)\n\n#    file(GLOB DIRECTX_SDK \"C:/Program Files*/Microsoft DirectX SDK*\")\n\n#    if (NOT DIRECTX_SDK)\n\n#        message(SEND_ERROR \"You need to install Microsoft DirectX SDK.\")\n\n#    else()\n\n#        mark_as_advanced(DIRECTX_SDK)\n\n#    endif()\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# GitBash\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Look for Git\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Look for SSH\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Test ssh access for github\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "cmake_old/environment/GithubSshTest.cmake" : {
      "ObjectId" : "cc252f54c9a73e37a052f6c372c5bca26c9c5016",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n#\n\n# OpenMEEG\n\n#\n\n# Copyright (c) INRIA 2013-2017. All rights reserved.\n\n# See LICENSE.txt for details.\n\n# \n\n#  This software is distributed WITHOUT ANY WARRANTY; without even\n\n#  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n\n#  PURPOSE.\n\n#\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## #############################################################################\n\n## Add github.com's SSH signature to the .ssh/known_hosts file\n\n## #############################################################################\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## #############################################################################\n\n## Make sure the user's key has been upload to GitHub\n\n## #############################################################################\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## #############################################################################\n\n## Test for a SSH key\n\n## #############################################################################\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake_old/externals/ConfigureExternalProjects.cmake" : {
      "ObjectId" : "bc1a74a2e5bd7bf71d4e267001d6c2c39a2bb067",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n#\n\n# OpenMEEG\n\n#\n\n# Copyright (c) INRIA 2013-2017. All rights reserved.\n\n# See LICENSE.txt for details.\n\n# \n\n#  This software is distributed WITHOUT ANY WARRANTY; without even\n\n#  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n\n#  PURPOSE.\n\n#\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add common variables for all external-projects\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Include cmake modules of external-project\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Include common configuration steps\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Include specific module of each project\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Call specific module of each project\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add custom targets update, and build to explicitly update and rebuild all.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Option: do we want use the system version ?\n",
        "Line" : 81,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "#   Add global targets.\n",
        "Line" : 106,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 9
    },
    "cmake_old/externals/configuration_steps/EP_AddCustomTargets.cmake" : {
      "ObjectId" : "ea7b46f85350fa445adbcfb505ab343387124225",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Git update \n",
        "Line" : 11,
        "CharPositionInLine" : 35
      },
      "1" : {
        "Text" : "## Svn update \n",
        "Line" : 18,
        "CharPositionInLine" : 40
      },
      "2" : {
        "Text" : "## build\n",
        "Line" : 26,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "cmake_old/externals/configuration_steps/EP_GeneratePatchCommand.cmake" : {
      "ObjectId" : "3088e8a41aa32de1cbbe40bcac906cf593bfe8a0",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## #############################################################################\n\n## Check which patch has to be applied\n\n## #############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#   If the source directory of the project does not exist all patches must be applied.\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#   If the source directory of the project already exists, prune the patch list\n\n#   and remove those that cannot be applied,\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "cmake_old/externals/configuration_steps/EP_Initialisation.cmake" : {
      "ObjectId" : "d4e772defa4af7a77e646945230ac956f3ccd79e",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#\n\n# OpenMEEG\n\n#\n\n# Copyright (c) INRIA 2013-2017. All rights reserved.\n\n# See LICENSE.txt for details.\n\n#\n\n#  This software is distributed WITHOUT ANY WARRANTY; without even\n\n#  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n\n#  PURPOSE.\n\n#\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Option: do we want a static or a dynamic build ?\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Add PIC flag if Static build on UNIX with amd64 arch\n",
        "Line" : 27,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Remove dependencies with other external-project if a system version is used.\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Add dependencies between the target of this project and the global target from the superproject\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Define a directory for each target of the project\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Look for and define the source directory of the project\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "cmake_old/externals/configuration_steps/EP_SetDependencies.cmake" : {
      "ObjectId" : "814946b7dcd9b1f25903a2a688b99215aef8e8dc",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#\n\n# OpenMEEG\n\n#\n\n# Copyright (c) INRIA 2013-2017. All rights reserved.\n\n# See LICENSE.txt for details.\n\n# \n\n#  This software is distributed WITHOUT ANY WARRANTY; without even\n\n#  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n\n#  PURPOSE.\n\n#\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake_old/externals/installOpenBLAS.cmake" : {
      "ObjectId" : "c8aa145c0612a5ea9acdd1ae804a384be8e7a1e2",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# download Openblas\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# file(DOWNLOAD \"https://downloads.sourceforge.net/project/openblas/v0.2.14/OpenBLAS-v0.2.14-Win32.zip\" ${CMAKE_SOURCE_DIR}/OpenBLAS.zip SHOW_PROGRESS EXPECTED_MD5 \"eefdf170439620d78fabb3139b7aeb2f\")\n",
        "Line" : 6,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# file(DOWNLOAD \"https://downloads.sourceforge.net/project/openblas/v0.2.14/OpenBLAS-v0.2.19-Win64-int32.zip\" ${CMAKE_SOURCE_DIR}/OpenBLAS.zip SHOW_PROGRESS EXPECTED_MD5 \"bb59507959975d8d55f3e7eb0ecd5ea3\")\n",
        "Line" : 14,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# extract the openblas/mingw archives\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake_old/externals/projects_modules/OpenMEEG.cmake" : {
      "ObjectId" : "02633553eda9448aa26db98694eb9e84132d1b27",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# OpenMEEG\n\n#\n\n# Copyright (c) INRIA 2013-2017. All rights reserved.\n\n# See LICENSE.txt for details.\n\n#\n\n#  This software is distributed WITHOUT ANY WARRANTY; without even\n\n#  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n\n#  PURPOSE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Prepare the project and list dependencies\n",
        "Line" : 12,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# No need to define repository where get the sources, since they are integrated.\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Set compilation flags\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Check if patch has to be applied\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Add external-project\n",
        "Line" : 61,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Set variable to provide infos about the project\n",
        "Line" : 76,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Add custom targets\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "cmake_old/externals/projects_modules/VTK.cmake" : {
      "ObjectId" : "3a883ef5c57f5077ad766129265d2708cceae568",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#\n\n# OpenMEEG\n\n#\n\n# Copyright (c) INRIA 2013-2017. All rights reserved.\n\n# See LICENSE.txt for details.\n\n# \n\n#  This software is distributed WITHOUT ANY WARRANTY; without even\n\n#  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n\n#  PURPOSE.\n\n#\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Prepare the project and list dependencies\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Define repository where get the sources\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Set GIT_TAG to latest commit of origin/release-6.3 known to work\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#set(location GIT_REPOSITORY \"git://vtk.org/VTK.git\" GIT_TAG ${tag})\n",
        "Line" : 26,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Add specific cmake arguments for configuration step of the project\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# set compilation flags\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Check if patch has to be applied\n",
        "Line" : 61,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Add external-project\n",
        "Line" : 65,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Set variable to provide infos about the project\n",
        "Line" : 76,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Add custom targets\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 11
    },
    "cmake_old/externals/projects_modules/clapack.cmake" : {
      "ObjectId" : "f59c7d30a91ff75e8c2d5db5af72ace577d8d58d",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# OpenMEEG\n\n#\n\n# Copyright (c) INRIA 2013-2017. All rights reserved.\n\n# See LICENSE.txt for details.\n\n# \n\n#  This software is distributed WITHOUT ANY WARRANTY; without even\n\n#  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n\n#  PURPOSE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#   Do nothing let OpenMEEG do the work.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Prepare the project and list dependencies\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Define repository where get the sources\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# set compilation flags\n",
        "Line" : 26,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Check if patch has to be applied\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Add external-project\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Set variable to provide infos about the project\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Add custom targets\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 9
    },
    "cmake_old/externals/projects_modules/hdf5.cmake" : {
      "ObjectId" : "29252a3f9086701e7582bd513a89895fc7cc8721",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# OpenMEEG\n\n#\n\n# Copyright (c) INRIA 2013-2017. All rights reserved.\n\n# See LICENSE.txt for details.\n\n# \n\n#  This software is distributed WITHOUT ANY WARRANTY; without even\n\n#  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n\n#  PURPOSE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#   Do nothing let OpenMEEG do the work.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Prepare the project and list dependencies\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Define repository where get the sources\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#set(location\n\n#    URL \"http://www.hdfgroup.org/ftp/HDF5/releases/hdf5-1.8.12/src/hdf5-1.8.12.tar.bz2\"\n\n#    URL_MD5 \"03ad766d225f5e872eb3e5ce95524a08\")\n",
        "Line" : 25,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# set compilation flags\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Check if patch has to be applied\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Add external-project\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#set(tag 1.8.14)\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Set variable to provide infos about the project\n",
        "Line" : 69,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Add custom targets\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 11
    },
    "cmake_old/externals/projects_modules/matio.cmake" : {
      "ObjectId" : "e1197448f1845c96118582320241b1ea7d7ff78e",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# OpenMEEG\n\n#\n\n# Copyright (c) INRIA 2013-2017. All rights reserved.\n\n# See LICENSE.txt for details.\n\n#\n\n#  This software is distributed WITHOUT ANY WARRANTY; without even\n\n#  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n\n#  PURPOSE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#   Do nothing let OpenMEEG do the work.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Prepare the project and list dependencies\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Define repository where get the sources\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# set compilation flags\n",
        "Line" : 27,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Check if patch has to be applied\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Add external-project\n",
        "Line" : 61,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Set variable to provide infos about the project\n",
        "Line" : 75,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Add custom targets\n",
        "Line" : 80,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 9
    },
    "cmake_old/externals/projects_modules/msinttypes.cmake" : {
      "ObjectId" : "ec0553ff402baa6b7f11a7eb488486a152bd843c",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# OpenMEEG\n\n#\n\n# Copyright (c) INRIA 2013-2017. All rights reserved.\n\n# See LICENSE.txt for details.\n\n# \n\n#  This software is distributed WITHOUT ANY WARRANTY; without even\n\n#  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n\n#  PURPOSE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Prepare the project\n",
        "Line" : 12,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Define repository where get the sources\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# set compilation flags\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Add external-project\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Set variable to provide infos about the project\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Add custom targets\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "cmake_old/externals/projects_modules/zlib.cmake" : {
      "ObjectId" : "70b6963eefeb273d90ff83c66a8d0fc84130726e",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# OpenMEEG\n\n#\n\n# Copyright (c) INRIA 2013-2017. All rights reserved.\n\n# See LICENSE.txt for details.\n\n# \n\n#  This software is distributed WITHOUT ANY WARRANTY; without even\n\n#  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n\n#  PURPOSE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#   Do nothing let OpenMEEG do the work.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Prepare the project and list dependencies\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Define repository where get the sources\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#set(location\n\n#    URL \"http://zlib.net/zlib-1.2.11.tar.gz\"\n\n#    URL_MD5 \"1c9f62f0778697a09d36121ead88e08e\")\n",
        "Line" : 25,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# set compilation flags\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Check if patch has to be applied\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Add external-project\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Set variable to provide infos about the project\n",
        "Line" : 61,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Add custom targets\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 10
    },
    "cmake_old/packaging/PackagingOpenMEEG.cmake" : {
      "ObjectId" : "31798b01d84ce7deb6b4a5910f0086339b3fa26a",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake_old/packaging/apple/PackagingConfiguration.cmake" : {
      "ObjectId" : "bc1f62ac19b26f78eefb8813f1dcd4e9e66046db",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# OpenMEEG\n\n#\n\n# Copyright (c) INRIA 2015-2017. All rights reserved.\n\n# See LICENSE.txt for details.\n\n# \n\n#  This software is distributed WITHOUT ANY WARRANTY; without even\n\n#  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n\n#  PURPOSE.\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#   Get distribution name and architecture\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake_old/packaging/linux/DEB.cmake" : {
      "ObjectId" : "3f9f7a4eb042711b979c5e34309169b95f942a41",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# OpenMEEG\n\n#\n\n# Copyright (c) INRIA 2015-2017. All rights reserved.\n\n# See LICENSE.txt for details.\n\n# \n\n#  This software is distributed WITHOUT ANY WARRANTY; without even\n\n#  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n\n#  PURPOSE.\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(CPACK_DEBIAN_PACKAGE_CONTROL_EXTRA ${CMAKE_BINARY_DIR}/packaging/linux/prerm;${CMAKE_BINARY_DIR}/packaging/linux/postinst)\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake_old/packaging/linux/PackagingConfiguration.cmake" : {
      "ObjectId" : "a6bcdffaa513515a683c91919b10413ea3b4c917",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# OpenMEEG\n\n#\n\n# Copyright (c) INRIA 2015-2017. All rights reserved.\n\n# See LICENSE.txt for details.\n\n# \n\n#  This software is distributed WITHOUT ANY WARRANTY; without even\n\n#  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n\n#  PURPOSE.\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#   Get distribution name and architecture\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# on debian /etc/os-release: string contain \"...\"\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#   Set the right package generator\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#   Remember the linux packaging source dir\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#   include settings specific to DEB and RPM\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake_old/packaging/linux/RPM.cmake" : {
      "ObjectId" : "b0382b0182b9e7af76cb8efd9d8f4259682c2f1a",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# OpenMEEG\n\n#\n\n# Copyright (c) INRIA 2015-2017. All rights reserved.\n\n# See LICENSE.txt for details.\n\n# \n\n#  This software is distributed WITHOUT ANY WARRANTY; without even\n\n#  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n\n#  PURPOSE.\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake_old/packaging/windows/PackagingConfiguration.cmake" : {
      "ObjectId" : "977339a4be3fcb5024f38c47a06f0c6d5c270be3",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# OpenMEEG\n\n#\n\n# Copyright (c) INRIA 2015-2017. All rights reserved.\n\n# See LICENSE.txt for details.\n\n#\n\n#  This software is distributed WITHOUT ANY WARRANTY; without even\n\n#  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n\n#  PURPOSE.\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#  - Text used in the installer GUI\n",
        "Line" : 21,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "#  - Registry key used to store info about the installation\n",
        "Line" : 23,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "#   There is a bug in NSIS that does not handle full unix paths properly. Make\n\n#   sure there is at least one set of four (4) backlasshes.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#   Dealing with the icon.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# set(CPACK_NSIS_INSTALLED_ICON_NAME bin\\\\\\\\om_assemble.exe)\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#   Add OpenMEEG to the PATH and shortcut in the Startup menu and/or on the desktop.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#   Add a link to the application website in the Startup menu.\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#   Run OpenMEEG after installation\n\n#set(CPACK_NSIS_MUI_FINISHPAGE_RUN \"om_assemble.exe\")\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "data/Head1/Makefile" : {
      "ObjectId" : "0e9799787f53325e6baa5accce216bc9d7825663",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# set paths\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# general settings\r\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#TYPE=MEG\r\n\n# TYPE=EEG\r\n\n# TYPE=EEG-dip\r\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# forward problem settings\r\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# inverse problem settings\r\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# provided files\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# computed files\r\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# symbolic targets\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8,
      "Errorlog" : "line 96:1 token recognition error at: '\\c'\nline 103:1 token recognition error at: '\\c'\n"
    },
    "data/Head2/Makefile" : {
      "ObjectId" : "a1f89b59d024ca0bbeb5723de8ad0563f054d628",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# set paths\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# general settings\r\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#TYPE=EEG-dip\r\n\n#TYPE=MEG\r\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# forward problem settings\r\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# inverse problem settings\r\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# provided files\r\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# SOURCEPOINTS=$(OPENMEEGDATAPATH)/$(HEADMODELDIR)/$(HEADMODELDIR)-100tangential.dip\r\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# SQUIDS=$(OPENMEEGDATAPATH)/$(COMPUTATIONDIR)/$(COMPUTATIONDIR)-largeradiustangential.squids\r\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# REALSOURCESDATA-DIP=$(OPENMEEGDATAPATH)/$(COMPUTATIONDIR)/$(COMPUTATIONDIR)-100.srcdip\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# computed files\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# symbolic targets\r\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11,
      "Errorlog" : "line 94:1 token recognition error at: '\\c'\nline 101:1 token recognition error at: '\\c'\n"
    },
    "data/Head3/Makefile" : {
      "ObjectId" : "b6f49f7c887742ad2f87d34cd04af02658113155",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# set paths\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# general settings\r\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#TYPE=EEG-dip\r\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# forward problem settings\r\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# inverse problem settings\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# provided files# provided files\r\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# SQUIDS=$(OPENMEEGDATAPATH)/$(COMPUTATIONDIR)/$(COMPUTATIONDIR).squids\r\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# computed files\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# symbolic targets\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9,
      "Errorlog" : "line 90:1 token recognition error at: '\\c'\nline 97:1 token recognition error at: '\\c'\n"
    },
    "data/nerve1/Makefile" : {
      "ObjectId" : "5fcfbc1ec87d0a1153bca4e8449e97955e053e96",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# set paths\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# model directory (where nerve parameters, geometry, etc are stored)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# directory containing the evaluation positions\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# directory containing the results\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "data/nerve1/positions/Makefile" : {
      "ObjectId" : "f7789812bb9024b32e70b709af0f0fd5e44d0821",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# root of openmeeg build directory \n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# model directory (where nerve parameters, geometry, etc are stored)\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# directory containing the evaluation positions\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# directory containing the results\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "documentation/CMakeLists.txt" : {
      "ObjectId" : "520627d15b68241b1d7d1ce79ff4437cd48b6eff",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# # Require dot, treat the other components as optional\n\n# find_package(Doxygen\n\n#              REQUIRED dot) # XXX if dot module if not present, cmake should stop generatio\n\n#              # OPTIONAL_COMPONENTS mscgen dia)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# XXX: the right condition should be (BUILD_REFERENCE_DOC and DOXYGEN_FOUND) therefore, Doxygen should be found ind documentation rather than its subdirectories\n",
        "Line" : 7,
        "CharPositionInLine" : 24
      },
      "2" : {
        "Text" : "# XXX: Add a test to ensure that documentation is generated properly\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "documentation/reference/CMakeLists.txt" : {
      "ObjectId" : "01ebb8a6de77441b29773222c358314ba99cc9b4",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Build the documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Configure the script and the doxyfile, then add target\n\n#\n\n# XXXX: This should not be done in this manner, or at least it should break when dot is not found.\n\n#       The way to do that is:\n\n#       find_package(Doxygen\n\n#                    REQUIRED dot\n\n#                    OPTIONAL_COMPONENTS gnuplot)\n\n#       if(NOT DOXYGEN_DOT_FOUND)\n\n#            message(WARNING \"Graphviz doesn't seem to be installed.\\\n\n#                             Doxygen will not be able to generate graphs.\\\n\n#                             Consider installing this package.\")\n\n#       endif(NOT DOXYGEN_DOT_FOUND)\n\n#\n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#   The ALL in the next directive is necessary to cope with a CMake bug !!!\n\n#   Otherwise the target is never activated.\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "5d4ea0d679d8c06edb45a3eee826ca36f5f69d62",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#   IO TESTS\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#   Test sensor is not used  Why ?\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#   TEST COMMON RESULTS ON HEAD1 (Regression test)\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Verify ECoG transfert matrices.\n\n# Verify that old and new call for H2ECOGM provide the same answer.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#   TEST EEG RESULTS ON DIPOLES\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# defining variables for those who do not use VTK\n\n# TODO handle comparison test for NNX1 geom when not USE_VTK...\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Compare EEG result with analytical solution obtained with Matlab\n",
        "Line" : 80,
        "CharPositionInLine" : 20
      },
      "7" : {
        "Text" : "# Compare EEG result with a numerical solution obtained with the tetrahedral FEM\n",
        "Line" : 94,
        "CharPositionInLine" : 12
      },
      "8" : {
        "Text" : "#   Set tests that are expected to fail :\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# all cmp-EEG-mag NNGc1 tests fail...\n",
        "Line" : 107,
        "CharPositionInLine" : 114
      },
      "10" : {
        "Text" : "# EIT tests\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# validationEIT geometry.geom conductivity.cond dipoles.dip source.dsm headmatinv.bin out.eit_qgradVj out.eit_diffVf\n",
        "Line" : 128,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# Compare the q.gradVj to diffVf in order to validate the EIT problem\n",
        "Line" : 136,
        "CharPositionInLine" : 13
      },
      "13" : {
        "Text" : "# Compare the potential results in a interior sphere of the Surf2Vol operator with analytical solution\n\n# obtained with Sphere (V.Hedou Modified)\n",
        "Line" : 148,
        "CharPositionInLine" : 12
      },
      "14" : {
        "Text" : "#   ECoG comparison tests\n\n#   Done only on dipoles 1, 2 and 3 because otherwise the error (even in the analytic model is poorly controlled.\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#   Set tests that are expected to fail :\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Compare MEG result with analytical solution obtained with Matlab\n",
        "Line" : 189,
        "CharPositionInLine" : 28
      },
      "17" : {
        "Text" : "# tests for the multiple nonconductive branch\n\n# compare with analytical solution\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "tests/clean_tests.cmake" : {
      "ObjectId" : "c3b232d0bf077ba0a8462b30e7a9ac8fe25a9d52",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "wrapping/CMakeLists.txt" : {
      "ObjectId" : "b6612d2384b962140afc7bf5d17e30cdea5ee547",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "wrapping/src/CMakeLists.txt" : {
      "ObjectId" : "a74405691951ac2d3d03b0a1501c9cf62014d895",
      "LastModified" : "2018-06-27T17:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#######################################################################\n\n# SWIG Embedding\n\n#######################################################################\n\n#\n\n# SWIG generation is driven by the following SWIG macros:\n\n#\n\n#   - swig_add_module\n\n#   - swig_add_library\n\n#   - swig_link_libraries\n\n#\n\n# those macros are driven by CMAKE_SWIG_FLAGS, and SWIG_MODULE_XXXXXXX_EXTRA_DEPS\n\n# where XXXXXXX is the name of the target object in swig_add_library(XXXXXXX ...)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# XXXX: this include_directories should be removed and transitive properties\n\n#       of OpenMEEG::OpenMEEG and OpenMEEG::OpenMEEGMaths should be used instead\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# load SWIG macros. The path to UseSWIG.cmake is provided by SWIG_USE_FILE which is set in FindSWIG\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# In order to generate python docstrings we use doxy2swig (which is bundled in our codebase)\n\n# doxy2swig takes xml output from doxygen and generates a .i file that can be include in openmeeg.i\n",
        "Line" : 37,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#extract correctly python location: e.g lib64/python2.7/site-packages\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Test Python wrapping\n\n#\n\n# XXXX: we copy all python scripts from source to binary so that openmeeg.py is in the path. There should be a manner of just adding\n\n#       it to the python path for the testing environment and allow to execute the python scripts from source.\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# due to this bug in the MKL\n",
        "Line" : 83,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 7
    }
  },
  "FileTypes" : {
    "CMAKE" : 88,
    "MAKEFILE" : 5
  },
  "ElapsedTime" : 2957
}