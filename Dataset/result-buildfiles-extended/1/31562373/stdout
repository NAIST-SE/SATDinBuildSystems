{
  "Repository" : "31562373",
  "Revision" : "HEAD",
  "ObjectId" : "9f09abb32641fdf8dbb2c49ee81717d434624218",
  "CommitTime" : "2018-10-30T14:26:46Z",
  "Files" : {
    "3rdParty/coveralls/Coveralls.cmake" : {
      "ObjectId" : "42503973103a563c8300da9a68fce806dfce33e6",
      "LastModified" : "2016-03-21T22:52:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# The MIT License (MIT)\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n\n#\n\n# Copyright (C) 2014 Joakim Söderberg <joakim.soderberg@gmail.com>\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# must be outside coveralls_setup() to get correct path\n",
        "Line" : 25,
        "CharPositionInLine" : 50
      },
      "2" : {
        "Text" : "#\n\n# Param _COVERAGE_SRCS\tA list of source files that coverage should be collected for.\n\n# Param _COVERALLS_UPLOAD Upload the result to coveralls?\n\n#\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# When passing a CMake list to an external process, the list\n\n# will be converted from the format \"1;2;3\" to \"1 2 3\".\n\n# This means the script we're calling won't see it as a list\n\n# of sources, but rather just one long path. We remedy this\n\n# by replacing \";\" with \"*\" and then reversing that in the script\n\n# that we're calling.\n\n# http://cmake.3232098.n2.nabble.com/Passing-a-CMake-list-quot-as-is-quot-to-a-custom-target-td6505681.html\n",
        "Line" : 47,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "#message(\"Coverage sources: ${COVERAGE_SRCS}\")\n",
        "Line" : 60,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Zero the coverage counters.\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Run regress tests.\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Generate Gcov and translate it into coveralls JSON.\n\n# We do this by executing an external CMake script.\n\n# (We don't want this to run at CMake generation time, but after compilation and everything has run).\n",
        "Line" : 71,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# TODO: This is passed like: \"a b c\", not \"a;b;c\"\n",
        "Line" : 75,
        "CharPositionInLine" : 39
      },
      "9" : {
        "Text" : "# Upload the JSON to coveralls.\n",
        "Line" : 95,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 10
    },
    "3rdParty/coveralls/CoverallsClear.cmake" : {
      "ObjectId" : "7206886c70d0ceba003cd5ecf6dbf201293cd311",
      "LastModified" : "2016-03-21T22:52:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# The MIT License (MIT)\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n\n#\n\n# Copyright (C) 2014 Joakim Söderberg <joakim.soderberg@gmail.com>\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# do not follow symlinks in file(GLOB_RECURSE ...)\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "3rdParty/coveralls/CoverallsGenerateGcov.cmake" : {
      "ObjectId" : "e58622c8a7891a98c1d973a941dbf1a9ad31d322",
      "LastModified" : "2016-03-21T22:52:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# The MIT License (MIT)\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n\n#\n\n# Copyright (C) 2014 Joakim Söderberg <joakim.soderberg@gmail.com>\n\n#\n\n# This is intended to be run by a custom target in a CMake project like this.\n\n# 0. Compile program with coverage support.\n\n# 1. Clear coverage data. (Recursively delete *.gcda in build dir)\n\n# 2. Run the unit tests.\n\n# 3. Run this script specifying which source files the coverage should be performed on.\n\n#\n\n# This script will then use gcov to generate .gcov files in the directory specified\n\n# via the COV_PATH var. This should probably be the same as your cmake build dir.\n\n#\n\n# It then parses the .gcov files to convert them into the Coveralls JSON format:\n\n# https://coveralls.io/docs/api\n\n#\n\n# Example for running as standalone CMake script from the command line:\n\n# (Note it is important the -P is at the end...)\n\n# $ cmake -DCOV_PATH=$(pwd)\n\n#         -DCOVERAGE_SRCS=\"catcierge_rfid.c;catcierge_timer.c\"\n\n#         -P ../cmake/CoverallsGcovUpload.cmake\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Make sure we have the needed arguments.\n\n#\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Since it's not possible to pass a CMake list properly in the\n\n# \"1;2;3\" format to an external process, we have replaced the\n\n# \";\" with \"*\", so reverse that here so we get it back into the\n\n# CMake list format.\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# convert all paths in COVERAGE_SRCS to absolute paths\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# TODO: Fill in git remote data\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Branch.\n",
        "Line" : 110,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "############################# Macros #########################################\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# This macro converts from the full path format gcov outputs:\n\n#\n\n#    /path/to/project/root/build/#path#to#project#root#subdir#the_file.c.gcov\n\n#\n\n# to the original source file path the .gcov is for:\n\n#\n\n#   /path/to/project/root/subdir/the_file.c\n\n#\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# /path/to/project/root/build/#path#to#project#root#subdir#the_file.c.gcov\n\n# ->\n\n# #path#to#project#root#subdir#the_file.c.gcov\n",
        "Line" : 163,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# #path#to#project#root#subdir#the_file.c.gcov -> /path/to/project/root/subdir/the_file.c\n",
        "Line" : 168,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "##############################################################################\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Get the coverage data.\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Get a list of all the object directories needed by gcov\n\n# (The directories the .gcda files and .o files are found in)\n\n# and run gcov on those.\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#\n\n# The -p below refers to \"Preserve path components\",\n\n# This means that the generated gcov filename of a source file will\n\n# keep the original files entire filepath, but / is replaced with #.\n\n# Example:\n\n#\n\n# /path/to/project/root/build/CMakeFiles/the_file.dir/subdir/the_file.c.gcda\n\n# ------------------------------------------------------------------------------\n\n# File '/path/to/project/root/subdir/the_file.c'\n\n# Lines executed:68.34% of 199\n\n# /path/to/project/root/subdir/the_file.c:creating '#path#to#project#root#subdir#the_file.c.gcov'\n\n#\n\n# If -p is not specified then the file is named only \"the_file.c.gcov\"\n\n#\n",
        "Line" : 188,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# TODO: Make these be absolute path\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Get only the filenames to use for filtering.\n\n#set(COVERAGE_SRCS_NAMES \"\")\n\n#foreach (COVSRC ${COVERAGE_SRCS})\n\n#\tget_filename_component(COVSRC_NAME ${COVSRC} NAME)\n\n#\tmessage(\"${COVSRC} -> ${COVSRC_NAME}\")\n\n#\tlist(APPEND COVERAGE_SRCS_NAMES \"${COVSRC_NAME}\")\n\n#endforeach()\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#\n\n# Filter out all but the gcov files we want.\n\n#\n\n# We do this by comparing the list of COVERAGE_SRCS filepaths that the\n\n# user wants the coverage data for with the paths of the generated .gcov files,\n\n# so that we only keep the relevant gcov files.\n\n#\n\n# Example:\n\n# COVERAGE_SRCS =\n\n#\t\t\t\t/path/to/project/root/subdir/the_file.c\n\n#\n\n# ALL_GCOV_FILES =\n\n#\t\t\t\t/path/to/project/root/build/#path#to#project#root#subdir#the_file.c.gcov\n\n#\t\t\t\t/path/to/project/root/build/#path#to#project#root#subdir#other_file.c.gcov\n\n#\n\n# Result should be:\n\n# GCOV_FILES =\n\n#\t\t\t\t/path/to/project/root/build/#path#to#project#root#subdir#the_file.c.gcov\n\n#\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#message(\"Look in coverage sources: ${COVERAGE_SRCS}\")\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#\n\n# /path/to/project/root/build/#path#to#project#root#subdir#the_file.c.gcov\n\n# ->\n\n# /path/to/project/root/subdir/the_file.c\n",
        "Line" : 247,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "# Is this in the list of source files?\n\n# TODO: We want to match against relative path filenames from the source file root...\n",
        "Line" : 254,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "# We remove it from the list, so we don't bother searching for it again.\n\n# Also files left in COVERAGE_SRCS_REMAINING after this loop ends should\n\n# have coverage data generated from them (no lines are covered).\n",
        "Line" : 262,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# TODO: Enable setting these\n",
        "Line" : 271,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Read the GCOV files line by line and get the coverage data.\n",
        "Line" : 299,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# The new coveralls API doesn't need the entire source (Yay!)\n\n# However, still keeping that part for now. Will cleanup in the future.\n",
        "Line" : 305,
        "CharPositionInLine" : 1
      },
      "24" : {
        "Text" : "# Loads the gcov file as a list of lines.\n\n# (We first open the file and replace all occurences of [] with _\n\n#  because CMake will fail to parse a line containing unmatched brackets...\n\n#  also the \\ to escaped \\n in macros screws up things.)\n\n# https://public.kitware.com/Bug/view.php?id=15369\n",
        "Line" : 310,
        "CharPositionInLine" : 1
      },
      "25" : {
        "Text" : "# Remove file contents to avoid encoding issues (cmake 2.8 has no ENCODING option)\n",
        "Line" : 320,
        "CharPositionInLine" : 1
      },
      "26" : {
        "Text" : "# Instead of trying to parse the source from the\n\n# gcov file, simply read the file contents from the source file.\n\n# (Parsing it from the gcov is hard because C-code uses ; in many places\n\n#  which also happens to be the same as the CMake list delimeter).\n",
        "Line" : 327,
        "CharPositionInLine" : 1
      },
      "27" : {
        "Text" : "# According to http://json.org/ these should be escaped as well.\n\n# Don't know how to do that in CMake however...\n\n#string(REPLACE \"\\b\" \"\\\\\\\\b\" GCOV_FILE_SOURCE \"${GCOV_FILE_SOURCE}\")\n\n#string(REPLACE \"\\f\" \"\\\\\\\\f\" GCOV_FILE_SOURCE \"${GCOV_FILE_SOURCE}\")\n\n#string(REGEX REPLACE \"\\u([a-fA-F0-9]{4})\" \"\\\\\\\\u\\\\1\" GCOV_FILE_SOURCE \"${GCOV_FILE_SOURCE}\")\n",
        "Line" : 338,
        "CharPositionInLine" : 1
      },
      "28" : {
        "Text" : "# We want a json array of coverage data as a single string\n\n# start building them from the contents of the .gcov\n",
        "Line" : 344,
        "CharPositionInLine" : 1
      },
      "29" : {
        "Text" : "# Line number for the .gcov.\n",
        "Line" : 348,
        "CharPositionInLine" : 24
      },
      "30" : {
        "Text" : "#message(\"${GCOV_LINE}\")\n\n# Example of what we're parsing:\n\n# Hitcount  |Line | Source\n\n# \"        8:   26:        if (!allowed || (strlen(allowed) == 0))\"\n",
        "Line" : 351,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# Check if we should exclude lines using the Lcov syntax.\n",
        "Line" : 361,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# Lines with 0 line numbers are metadata and can be ignored.\n",
        "Line" : 391,
        "CharPositionInLine" : 3
      },
      "33" : {
        "Text" : "# Translate the hitcount into valid JSON values.\n",
        "Line" : 397,
        "CharPositionInLine" : 5
      },
      "34" : {
        "Text" : "# Advanced way of removing the trailing comma in the JSON array.\n\n# \"[1, 2, 3, \" -> \"[1, 2, 3\"\n",
        "Line" : 419,
        "CharPositionInLine" : 1
      },
      "35" : {
        "Text" : "# Append the trailing ] to complete the JSON array.\n",
        "Line" : 423,
        "CharPositionInLine" : 1
      },
      "36" : {
        "Text" : "# Generate the final JSON for this file.\n",
        "Line" : 426,
        "CharPositionInLine" : 1
      },
      "37" : {
        "Text" : "# Loop through all files we couldn't find any coverage for\n\n# as well, and generate JSON for those as well with 0% coverage.\n",
        "Line" : 433,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Set variables for json replacement\n",
        "Line" : 437,
        "CharPositionInLine" : 1
      },
      "39" : {
        "Text" : "# Loads the source file as a list of lines.\n",
        "Line" : 442,
        "CharPositionInLine" : 1
      },
      "40" : {
        "Text" : "# Remove trailing comma, and complete JSON array with ]\n",
        "Line" : 458,
        "CharPositionInLine" : 1
      },
      "41" : {
        "Text" : "# Generate the final JSON for this file.\n",
        "Line" : 462,
        "CharPositionInLine" : 1
      },
      "42" : {
        "Text" : "# Get rid of trailing comma.\n",
        "Line" : 468,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Generate the final complete JSON!\n",
        "Line" : 472,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 44
    },
    "3rdParty/gtest/CMakeLists.txt" : {
      "ObjectId" : "6d07b352ad6cdfe4ed498502398c72d58ee3b158",
      "LastModified" : "2018-04-21T19:59:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#parent must define VERSION_GTEST\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ------------------------------------------------------------------------------------------------------------------------------\r\n\n# LIBRARY LOCATION: Library location for various build types/generators\r\n\n# ------------------------------------------------------------------------------------------------------------------------------\r\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# visual studio variants\r\n",
        "Line" : 16,
        "CharPositionInLine" : 7
      },
      "3" : {
        "Text" : "# ------------------------------------------------------------------------------------------------------------------------------\r\n\n# EXTERNAL PROJECT: Definition of the external project to build the third-party library\r\n\n# ------------------------------------------------------------------------------------------------------------------------------\r\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ------------------------------------------------------------------------------------------------------------------------------\r\n\n# EXPORT VARIABLES: Variables intended to help other projects find and use this library\r\n\n# ------------------------------------------------------------------------------------------------------------------------------\r\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Library\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# visual studio variants\r\n",
        "Line" : 55,
        "CharPositionInLine" : 7
      },
      "7" : {
        "Text" : "# add pthreads on non-windows platforms\r\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "CMakeLists.txt" : {
      "ObjectId" : "32001ebf86b4b0ee09864cba6fb7f38cfea93774",
      "LastModified" : "2018-04-21T19:59:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# cmake options\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# options to disable unit definitions. Turn these on for unused namespaces to improve compile speed\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# options to re-enable specific unit types. Only use these if DISABLE_PREDEFINED_UNITS is set to ON\r\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# header-only library target. To use this project as a subdirectory,\r\n\n# add the following to your code:\r\n\n#\r\n\n# add_subdirectory(units) # or whatever you named the directory\r\n\n# target_link_libraries(${PROJECT_NAME} units)\r\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# enable parallel build\r\n",
        "Line" : 67,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Increase warning levels\r\n",
        "Line" : 71,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# Remove IOStream from the library (useful for embdedded development)\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# unit tests\r\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#enable specific unit definitions\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# add a target to generate API documentation with Doxygen\r\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "unitTests/CMakeLists.txt" : {
      "ObjectId" : "b6108e95e05880d8c70ac3bc07bb0ca60068a312",
      "LastModified" : "2018-04-21T19:59:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# coveralls support\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# use absolute paths to help coveralls\n",
        "Line" : 17,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# The source files.\n",
        "Line" : 24,
        "CharPositionInLine" : 28
      },
      "3" : {
        "Text" : "# use gtags if present on the system to populate the vscode intellisense\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    }
  },
  "FileTypes" : {
    "CMAKE" : 6
  },
  "ElapsedTime" : 1270
}