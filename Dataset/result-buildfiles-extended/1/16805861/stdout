{
  "Repository" : "16805861",
  "Revision" : "HEAD",
  "ObjectId" : "3996cd5a4adfd4d4dfc88650c6462494157fd19b",
  "CommitTime" : "2019-04-08T15:19:55Z",
  "Files" : {
    "CMakeFiles/3.5.1/CMakeCCompiler.cmake" : {
      "ObjectId" : "e7e5092a1bfce5084cfdeaf0b5910016a2c5cc1f",
      "LastModified" : "2016-08-03T19:20:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Save compiler ABI information.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMakeLists.txt" : {
      "ObjectId" : "d8e9ea8d9068edad753c776ff8c3eb5f15244cbe",
      "LastModified" : "2018-12-04T20:41:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Default is release with debug info\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add path for custom modules\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# put static libraries first\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# indicate that we want z3 binary to be included in the binary distribution\n",
        "Line" : 126,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# We incorporate the CMake features provided by LLVM:\n",
        "Line" : 166,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Configure CPack.\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# install all the licenses\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# check for rt lib. Not needed on OSX.\n",
        "Line" : 269,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# add the include directory from the build tree\n",
        "Line" : 321,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "### add our include directories to the front, overriding directories\n\n### specified by external packages.\n",
        "Line" : 366,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "cmake/FindGmp.cmake" : {
      "ObjectId" : "dd04150ff0a46e4ee9a2c88171749250f3c23591",
      "LastModified" : "2016-08-03T19:20:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/FindZ3.cmake" : {
      "ObjectId" : "25826bed179a4b34303adf7b4aa09124bf620649",
      "LastModified" : "2016-08-03T19:20:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/TargetArch.cmake" : {
      "ObjectId" : "41578fac27bbba5b6cab6a3734402f1556b8b6ce",
      "LastModified" : "2016-08-03T19:20:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# from: https://raw.githubusercontent.com/petroules/solar-cmake/master/TargetArch.cmake\n\n# Based on the Qt 5 processor detection code, so should be very accurate\n\n# https://qt.gitorious.org/qt/qtbase/blobs/master/src/corelib/global/qprocessordetection.h\n\n# Currently handles arm (v5, v6, v7), x86 (32/64), ia64, and ppc (32/64)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Regarding POWER/PowerPC, just as is noted in the Qt source,\n\n# \"There are many more known variants/revisions that we do not handle/detect.\"\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set ppc_support to TRUE before including this file or ppc and ppc64\n\n# will be treated as invalid architectures since they are no longer supported by Apple\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# On OS X we use CMAKE_OSX_ARCHITECTURES *if* it was set\n\n# First let's normalize the order of the values\n",
        "Line" : 56,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Note that it's not possible to compile PowerPC applications if you are using\n\n# the OS X SDK version 10.6 or later - you'll need 10.4/10.5 for that, so we\n\n# disable it by default\n\n# See this page for more information:\n\n# http://stackoverflow.com/questions/5333490/how-can-we-restore-ppc-ppc64-as-well-as-full-10-4-10-5-sdk-support-to-xcode-4\n",
        "Line" : 59,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Architecture defaults to i386 or ppc on OS X 10.5 and earlier, depending on the CPU type detected at runtime.\n\n# On OS X 10.6+ the default is x86_64 if the CPU supports it, i386 otherwise.\n",
        "Line" : 65,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Now add all the architectures in our normalized order\n",
        "Line" : 82,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Detect the architecture in a rather creative way...\n\n# This compiles a small C program which is a series of ifdefs that selects a\n\n# particular #error preprocessor directive whose message string contains the\n\n# target architecture. The program will always fail to compile (both because\n\n# file is not a valid C program, and obviously because of the presence of the\n\n# #error preprocessor directives... but by exploiting the preprocessor in this\n\n# way, we can detect the correct target architecture even when cross-compiling,\n\n# since the program itself never needs to be run (only the compiler/preprocessor)\n",
        "Line" : 103,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# Parse the architecture name from the compiler output\n",
        "Line" : 120,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Get rid of the value marker leaving just the architecture name\n",
        "Line" : 123,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# If we are compiling with an unknown architecture this variable should\n\n# already be set to \"unknown\" but in the case that it's empty (i.e. due\n\n# to a typo in the code), then set it to unknown\n",
        "Line" : 126,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 11
    },
    "include/seahorn/config.h.cmake" : {
      "ObjectId" : "3732cadfe1e70e87581c27bd29b08ba7a32b2156",
      "LastModified" : "2016-08-03T19:20:21Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/* Define whether crab is available */",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/** Define whether crab-llvm is available */",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/** Define whether DSA library is available */",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/** Define whether llvm-seahorn is available */",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/** Define whether ldd is available */",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "lib/Analysis/CMakeLists.txt" : {
      "ObjectId" : "8a58c52043c9b1d1d16cbebe2afd9af8cb436c53",
      "LastModified" : "2017-07-04T23:41:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/CMakeLists.txt" : {
      "ObjectId" : "7029fbdd22ce22f01b4d853d2e0c6ba45d409e75",
      "LastModified" : "2017-09-13T04:59:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/Support/CMakeLists.txt" : {
      "ObjectId" : "1be71938a3f7c91af4110070d15e960ebce53873",
      "LastModified" : "2017-07-04T23:41:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/Transforms/CMakeLists.txt" : {
      "ObjectId" : "8eb136148cea953faaef7b550fa444430985e273",
      "LastModified" : "2016-08-03T19:20:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/Transforms/Instrumentation/CMakeLists.txt" : {
      "ObjectId" : "70fb1691ddf06a00a3a0d73cb3a4920c651c80b8",
      "LastModified" : "2017-12-27T15:58:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/Transforms/Scalar/CMakeLists.txt" : {
      "ObjectId" : "c14cd683aee4e2a8bae4d66c004688b84658d3bc",
      "LastModified" : "2018-01-13T21:18:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/Transforms/Utils/CMakeLists.txt" : {
      "ObjectId" : "8f25edafa5f22c131fa3da04a1400f258028ae98",
      "LastModified" : "2017-07-04T23:41:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/avy/CMakeLists.txt" : {
      "ObjectId" : "266b5e3e0f72128916296730acde25576df7a7c1",
      "LastModified" : "2016-08-03T19:20:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/seahorn/CMakeLists.txt" : {
      "ObjectId" : "6567605c4af16485419d937fcf3e27b30ec8199e",
      "LastModified" : "2017-07-04T23:41:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "play/memcex/Makefile" : {
      "ObjectId" : "ee28e2c29784d39b99bbba14bb8cc719217e2bdc",
      "LastModified" : "2018-12-04T20:41:59Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "py/CMakeLists.txt" : {
      "ObjectId" : "a43942e83bac54fca073e2d3ffab3ad53bcb13a5",
      "LastModified" : "2018-12-04T20:41:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# based on http://bloerg.net/2012/11/10/cmake-and-distutils.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "sea-rt/CMakeLists.txt" : {
      "ObjectId" : "c2559cd6c63989d0c5e60a90c8ee09b3f9916313",
      "LastModified" : "2018-12-04T20:41:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "812b4a0deea2b6f488d31b687d55d2e14b593e86",
      "LastModified" : "2018-12-04T20:41:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find lit. Assume we are using external lit installed from pip\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add the test suite\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "test/Makefile" : {
      "ObjectId" : "e0672807e0d586d4e7742c07efbfbc36895e5c56",
      "LastModified" : "2018-12-04T20:41:59Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "test/dsa/Makefile" : {
      "ObjectId" : "4d3b658aeb4d8e7cbc59b979fff0916387a2aa7f",
      "LastModified" : "2018-12-04T20:41:59Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tools/CMakeLists.txt" : {
      "ObjectId" : "14b8859a32f34d44a8a794eb7395cfb7ea1b6e92",
      "LastModified" : "2018-12-04T20:41:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/seahorn/CMakeLists.txt" : {
      "ObjectId" : "d98e3add0a84472c2af26f08cc883cfd272066cc",
      "LastModified" : "2018-12-04T20:41:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# XXX not clear why these last two are required\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "tools/seainspect/CMakeLists.txt" : {
      "ObjectId" : "614c5dd1c6ef6c27a7088844ffa1999fad653f0c",
      "LastModified" : "2018-12-04T20:41:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/seapp/CMakeLists.txt" : {
      "ObjectId" : "b51a254ed9dce86be88f77f3f8cbf951349948f2",
      "LastModified" : "2018-12-04T20:41:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# XXX not clear why these last two are required\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "units/CMakeLists.txt" : {
      "ObjectId" : "4fb01ef07e69916425190cab5e018101fc99ef59",
      "LastModified" : "2018-12-04T20:41:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# In the future we can group tests by linking dependencies and move them into\n\n# seperate directories.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# XXX not clear why these last two are required\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "CMAKE" : 22,
    "CMAKESOURCE" : 1,
    "MAKEFILE" : 3
  },
  "ElapsedTime" : 1558
}