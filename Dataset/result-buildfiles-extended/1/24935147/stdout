{
  "Repository" : "24935147",
  "Revision" : "HEAD",
  "ObjectId" : "11e05543a89b6b3b0824ccb2baeedc2f22de8266",
  "CommitTime" : "2019-04-10T09:42:06Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "1a97f87694dfe0f6228ea01d4b454fbe2f82f445",
      "LastModified" : "2018-08-18T15:04:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake build system for Shyft\n\n# ============================\n\n#\n\n# This requires shyft_dependencies installed as well as a C++14/C++17 compliant compiler.\n\n#\n\n# Available options:\n\n#\n\n#   BUILD_TESTING: default ON\n\n#       build test programs and generates the \"test\" target\n\n#   BUILD_PYTHON_EXTENSIONS: default ON\n\n#       build Python extensions for Shyft\n\n#\n\n# The next environment variables are honored:\n\n#\n\n#   SHYFT_DEPENDENCIES_DIR: default ${PROJECT_SOURCE_DIR}/../shyft_dependencies\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Get the full version for Shyft\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# options\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set the possible values of build type for cmake-gui\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# The dependencies directory\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Our code requires an absolute directory for the dependencies\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# shyft uses boost, dlib, armadillo and doctest, and python +  numpy\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# unfortunately, .travis does not have updated cmake, so find_package won't work as we need.\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# The compiler requirement,flags definitions and include that applies for all\n\n# Notice that we need MINIMIZE_SIZE to ensure g++ vs. ms c++ compat\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# we could add more explicit list boost,dlib,armadillo,doctest here\n",
        "Line" : 89,
        "CharPositionInLine" : 71
      },
      "11" : {
        "Text" : "# C++ core and tests\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Python extensions\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "api/CMakeLists.txt" : {
      "ObjectId" : "1f1f1d7fe7786f88e6c4b610d8f637ea7ea7eb7e",
      "LastModified" : "2018-03-22T12:59:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake file for compiling the C++ api library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "api/boostpython/CMakeLists.txt" : {
      "ObjectId" : "fd370496b4429284a09d782b96afcb8813e22930",
      "LastModified" : "2019-04-01T22:33:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Python install (still some line required here)\n\n#\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#find_package(NumPy REQUIRED)  # yes would be nice but does not exist yet!\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# define the shyft core api that exposes all common classes and methods\n\n#\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Python extensions do not use the 'lib' prefix\n",
        "Line" : 55,
        "CharPositionInLine" : 92
      },
      "4" : {
        "Text" : "#\n\n# define each shyft method-stack that exposes complete stacks\n\n#\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Python extensions do not use the 'lib' prefix\n",
        "Line" : 67,
        "CharPositionInLine" : 102
      },
      "6" : {
        "Text" : "#\n\n# install 3rd party .so files ( but we still require blas/lapack + gcc 7.x runtime)\n\n# we place them in the lib directory parallell to the shyft directory, and notice the INSTALL_RPATH\n\n# for the targets do refer to this location. If you change any of these, just keep in sync \n\n#  (if not the you will get reminded when runtime fail to load referenced shared libraries)\n\n#\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# step 1: pull out abs-paths from imported targets\n",
        "Line" : 79,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# not yet supported on cmake 3.9.x:\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#get_target_property(arma_lib armadillo IMPORTED_LOCATION_NOCONFIG)\n\n# step 2: get the real-name (we want libboost_system.so.1.66.0, not the symlink libboost_system.so)\n",
        "Line" : 88,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# fixup for armadillo that references major version\n",
        "Line" : 92,
        "CharPositionInLine" : 70
      },
      "11" : {
        "Text" : "# step 3: install to the shyft/lib (that is referenced by the RPATH relative to the extensions libraries on linux)\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 12
    },
    "build_support/CodeCoverage.cmake" : {
      "ObjectId" : "294d0250a09e4d8d263b0069495060f1624bb7c7",
      "LastModified" : "2018-03-28T19:35:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2012 - 2017, Lars Bilke\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without modification,\n\n# are permitted provided that the following conditions are met:\n\n#\n\n# 1. Redistributions of source code must retain the above copyright notice, this\n\n#    list of conditions and the following disclaimer.\n\n#\n\n# 2. Redistributions in binary form must reproduce the above copyright notice,\n\n#    this list of conditions and the following disclaimer in the documentation\n\n#    and/or other materials provided with the distribution.\n\n#\n\n# 3. Neither the name of the copyright holder nor the names of its contributors\n\n#    may be used to endorse or promote products derived from this software without\n\n#    specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n\n# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\n# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\n# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\n# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n\n# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\n# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n# CHANGES:\n\n#\n\n# 2012-01-31, Lars Bilke\n\n# - Enable Code Coverage\n\n#\n\n# 2013-09-17, Joakim Sï¿½derberg\n\n# - Added support for Clang.\n\n# - Some additional usage instructions.\n\n#\n\n# 2016-02-03, Lars Bilke\n\n# - Refactored functions to use named parameters\n\n#\n\n# 2017-06-02, Lars Bilke\n\n# - Merged with modified version from github.com/ufz/ogs\n\n#\n\n#\n\n# USAGE:\n\n#\n\n# 1. Copy this file into your cmake modules path.\n\n#\n\n# 2. Add the following line to your CMakeLists.txt:\n\n#      include(CodeCoverage)\n\n#\n\n# 3. Append necessary compiler flags:\n\n#      APPEND_COVERAGE_COMPILER_FLAGS()\n\n#\n\n# 4. If you need to exclude additional directories from the report, specify them\n\n#    using the COVERAGE_EXCLUDES variable before calling SETUP_TARGET_FOR_COVERAGE.\n\n#    Example:\n\n#      set(COVERAGE_EXCLUDES 'dir1/*' 'dir2/*')\n\n#\n\n# 5. Use the functions described below to create a custom make target which\n\n#    runs your test executable and produces a code coverage report.\n\n#\n\n# 6. Build a Debug build:\n\n#      cmake -DCMAKE_BUILD_TYPE=Debug ..\n\n#      make\n\n#      make my_coverage_target\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check prereqs\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# NOT GCOV_PATH\n",
        "Line" : 80,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# NOT CMAKE_BUILD_TYPE STREQUAL \"Debug\"\n",
        "Line" : 117,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Defines a target for running and collection code coverage information\n\n# Builds dependencies, runs the given executable and outputs reports.\n\n# NOTE! The executable should always have a ZERO as exit code otherwise\n\n# the coverage generation will not complete.\n\n#\n\n# SETUP_TARGET_FOR_COVERAGE(\n\n#     NAME testrunner_coverage                    # New target name\n\n#     EXECUTABLE testrunner -j ${PROCESSOR_COUNT} # Executable in PROJECT_BINARY_DIR\n\n#     DEPENDENCIES testrunner                     # Dependencies to build first\n\n# )\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# NOT LCOV_PATH\n",
        "Line" : 144,
        "CharPositionInLine" : 12
      },
      "6" : {
        "Text" : "# NOT GENHTML_PATH\n",
        "Line" : 148,
        "CharPositionInLine" : 12
      },
      "7" : {
        "Text" : "# Setup target\n",
        "Line" : 150,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Cleanup lcov\n",
        "Line" : 153,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Create baseline to make sure untouched files show up in the report\n",
        "Line" : 155,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Run tests\n",
        "Line" : 158,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# Capturing lcov counters and generating report\n",
        "Line" : 161,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# add baseline counters\n",
        "Line" : 163,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# Show info where to find the report\n",
        "Line" : 174,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# SETUP_TARGET_FOR_COVERAGE\n",
        "Line" : 180,
        "CharPositionInLine" : 14
      },
      "15" : {
        "Text" : "# Defines a target for running and collection code coverage information\n\n# Builds dependencies, runs the given executable and outputs reports.\n\n# NOTE! The executable should always have a ZERO as exit code otherwise\n\n# the coverage generation will not complete.\n\n#\n\n# SETUP_TARGET_FOR_COVERAGE_COBERTURA(\n\n#     NAME ctest_coverage                    # New target name\n\n#     EXECUTABLE ctest -j ${PROCESSOR_COUNT} # Executable in PROJECT_BINARY_DIR\n\n#     DEPENDENCIES executable_target         # Dependencies to build first\n\n# )\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# NOT SIMPLE_PYTHON_EXECUTABLE\n",
        "Line" : 201,
        "CharPositionInLine" : 12
      },
      "17" : {
        "Text" : "# NOT GCOVR_PATH\n",
        "Line" : 205,
        "CharPositionInLine" : 12
      },
      "18" : {
        "Text" : "# Combine excludes to several -e arguments\n",
        "Line" : 207,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Run tests\n",
        "Line" : 215,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# Running gcovr\n",
        "Line" : 218,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "# Show info where to find the report\n",
        "Line" : 226,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# SETUP_TARGET_FOR_COVERAGE_COBERTURA\n",
        "Line" : 232,
        "CharPositionInLine" : 14
      },
      "23" : {
        "Text" : "# APPEND_COVERAGE_COMPILER_FLAGS",
        "Line" : 238,
        "CharPositionInLine" : 14
      },
      "CommentCount" : 24
    },
    "build_support/shyft_core-config.cmake" : {
      "ObjectId" : "7b32449031710a2f3a0309b512a8e18caa42bbb7",
      "LastModified" : "2019-04-01T22:33:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Compute the installation prefix relative to this file.(is this really needed ?)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "core/CMakeLists.txt" : {
      "ObjectId" : "18b3ad4b8f99e1845fa4152b5fd1ab6a30f926b7",
      "LastModified" : "2019-04-01T22:33:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake file for compiling the C++ core library\r\n\n# library sources\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "1740e0571a55e51ea5fdfc06252c3c25cd32cf58",
      "LastModified" : "2019-04-01T22:33:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake configuration for tests\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#install(TARGETS ${target} DESTINATION ${CMAKE_SOURCE_DIR}/bin/Release)\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# This can be made more specific, but we would need the list of tests.\n\n#add_test(${target} ${target})\n\n#The current list:\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    }
  },
  "FileTypes" : {
    "CMAKE" : 7
  },
  "ElapsedTime" : 1853
}