{
  "Repository" : "13475863",
  "Revision" : "HEAD",
  "ObjectId" : "2a79d151894021c66dceeb2c8a64ff61506e7155",
  "CommitTime" : "2019-02-06T07:28:01Z",
  "Files" : {
    ".circleci/circleci.cmake" : {
      "ObjectId" : "82cf38c4be29a7cdbbf47103606dec80ab6a10be",
      "LastModified" : "2018-12-11T21:57:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set_from_env\n\n# ------------\n\n#\n\n# Sets a CMake variable from an environment variable. If the\n\n# environment variable  is not  defined then either a fatal error is\n\n# generated or the CMake variable is not modified.\n\n#\n\n# set_from_env( <variable> <environment variable> [REQUIRED|DEFAULT value] )\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Make environment variables to CMake variables for CTest\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Construct build name based on what is being built\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "CMake/FindCSharp.cmake" : {
      "ObjectId" : "ba15f6843c7d7c3365c8e2f56d92b4566ad22520",
      "LastModified" : "2012-07-23T11:07:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# A CMake Module for finding and using C# (.NET and Mono).\n\n#\n\n# The following variables are set:\n\n#   CSHARP_FOUND - set to ON if C# is found\n\n#   CSHARP_USE_FILE - the path to the C# use file\n\n#   CSHARP_TYPE - the type of the C# compiler (eg. \".NET\" or \"Mono\")\n\n#   CSHARP_VERSION - the version of the C# compiler (eg. \"v4.0\" or \"2.10.2\")\n\n#   CSHARP_COMPILER - the path to the C# compiler executable (eg. \"C:/Windows/Microsoft.NET/Framework/v4.0.30319/csc.exe\" or \"/usr/bin/gmcs\")\n\n#   CSHARP_INTERPRETER - the path to interpreter needed to run CSharp executables\n\n#   CSHARP_PLATFORM - the C# target platform\n\n#   CSHARP_SDK - the SDK commandline switch (empty for .NET, for Mono eg. \"/sdk:2\" or \"/sdk:4\")\n\n#\n\n# This file is based on the work of GDCM:\n\n#   http://gdcm.svn.sf.net/viewvc/gdcm/trunk/CMake/FindCSharp.cmake\n\n# Copyright (c) 2006-2010 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO: ADD ABILITY TO SELECT WHICH C# COMPILER eg. .NET or Mono (if both exist). For the moment, .NET is selected above Mono.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Make sure find package macros are included\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# By default use anycpu platform, allow the user to override\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Handle WIN32 specific issues\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set the USE_FILE path\n\n# http://public.kitware.com/Bug/view.php?id=7757\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "CMake/FindDotNetFrameworkSdk.cmake" : {
      "ObjectId" : "3d84a536c8780dae73ecc6e65831870b40b35e06",
      "LastModified" : "2012-07-23T11:07:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# A CMake Module for finding C# .NET.\n\n#\n\n# The following variables are set:\n\n#   CSHARP_DOTNET_FOUND\n\n#   CSHARP_DOTNET_COMPILER_${version} eg. \"CSHARP_DOTNET_COMPILER_v4.0.30319\"\n\n#   CSHARP_DOTNET_VERSION eg. \"v4.0.30319\"\n\n#   CSHARP_DOTNET_VERSIONS eg. \"v2.0.50727, v3.5, v4.0.30319\"\n\n#   DotNetFrameworkSdk_USE_FILE\n\n#\n\n# Additional references can be found here:\n\n#   .NET SDK 1.1: http://www.microsoft.com/downloads/details.aspx?FamilyID=9b3a2ca6-3647-4070-9f41-a333c6b9181d&displaylang=en\n\n#   .NET SDK 2.0: http://www.microsoft.com/downloads/details.aspx?FamilyID=fe6f2099-b7b4-4f47-a244-c96d69c35dec&displaylang=en\n\n#   .NET SDK 3.5: http://www.microsoft.com/downloads/details.aspx?familyid=333325fd-ae52-4e35-b531-508d977d32a6&displaylang=en\n\n#   C# Compiler options: http://msdn.microsoft.com/en-us/library/2fdbz5xd(v=VS.71).aspx\n\n#\n\n# This file is based on the work of GDCM:\n\n#   http://gdcm.svn.sf.net/viewvc/gdcm/trunk/CMake/FindDotNETFrameworkSDK.cmake\n\n# Copyright (c) 2006-2010 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The .NET compiler has already been found\n\n# It may have been reset by the user, verify it is correct\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Clear versions\n",
        "Line" : 35,
        "CharPositionInLine" : 38
      },
      "3" : {
        "Text" : "# Get the framework directory based on platform\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Search for .NET versions\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Extract version number (eg. v4.0.30319)\n\n# TODO: Consider using REGEX\n",
        "Line" : 51,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Add variable holding executable\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Create a list of supported compiler versions\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# We found at least one .NET compiler version\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Report the found versions\n",
        "Line" : 74,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Set the compiler version\n\n# Do not force, so that the user can manually select their own version if they wish\n",
        "Line" : 77,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# If available, select .NET v2.0.50727 (this is the minimal version as it supports generics, and allows use of VS2008)\n",
        "Line" : 80,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Select the highest version (first in reverse sorted list)\n",
        "Line" : 83,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Set USE_FILE\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "CMake/FindLuaInterp.cmake" : {
      "ObjectId" : "ddb610db7fa8ad77792dc9d4773706f860347504",
      "LastModified" : "2016-11-22T20:41:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindLuaInterp\n\n# --------\n\n#\n\n# Find Lua Interpreter\n\n#\n\n# ::\n\n#\n\n#   LUA_EXECUTABLE     - the full path to lua\n\n#   LUA_EXECUTABLE_FOUND          - If false, don't attempt to use lua\n\n#   LUA_EXECUTABLE_VERSION_STRING - version of lua found\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### LUA_VERSION\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LUA_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "CMake/FindMono.cmake" : {
      "ObjectId" : "ed2d1f46909f315e177048af01007469c992904c",
      "LastModified" : "2016-11-22T20:41:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# A CMake Module for finding Mono.\n\n#\n\n# The following variables are set:\n\n#   CSHARP_MONO_FOUND\n\n#   CSHARP_MONO_COMPILER_${version} eg. \"CSHARP_MONO_COMPILER_2.10.2\"\n\n#   CSHARP_MONO_INTERPRETOR_${version} eg. \"CSHARP_MONO_INTERPRETOR_2.10.2\"\n\n#   CSHARP_MONO_VERSION eg. \"2.10.2\"\n\n#   CSHARP_MONO_VERSIONS eg. \"2.10.2, 2.6.7\"\n\n#\n\n# Additional references can be found here:\n\n#   http://www.mono-project.com/Main_Page\n\n#   http://www.mono-project.com/CSharp_Compiler\n\n#   http://mono-project.com/FAQ:_Technical (How can I tell where the Mono runtime is installed)\n\n#\n\n# This file is based on the work of GDCM:\n\n#   http://gdcm.svn.sf.net/viewvc/gdcm/trunk/CMake/FindMono.cmake\n\n# Copyright (c) 2006-2010 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The Mono compiler has already been found\n\n# It may have been reset by the user, verify it is correct\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Clear versions\n",
        "Line" : 34,
        "CharPositionInLine" : 36
      },
      "3" : {
        "Text" : "# Search for Mono on Win32 systems\n\n# See http://mono-project.com/OldReleases and http://www.go-mono.com/mono-downloads/download.html\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# TODO: Use HKLM_LOCAL_MACHINE\\Software\\Novell\\Mono\\DefaultCLR to specify default version\n\n# get_filename_component( test \"[HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Novell\\\\Mono;DefaultCLR]\" NAME )\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Extract version number (eg. 2.10.2)\n",
        "Line" : 78,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# Add variable holding executable\n",
        "Line" : 83,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# Set interpreter\n",
        "Line" : 87,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# Create a list of supported compiler versions\n",
        "Line" : 94,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# We found at least one Mono compiler version\n",
        "Line" : 102,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Search for Mono on non-Win32 systems\n",
        "Line" : 107,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# variable is added to the cache, we removed it below\n",
        "Line" : 117,
        "CharPositionInLine" : 25
      },
      "12" : {
        "Text" : "# Determine version\n",
        "Line" : 123,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# variable is added to the cache, we removed it below\n",
        "Line" : 125,
        "CharPositionInLine" : 30
      },
      "14" : {
        "Text" : "# We found Mono compiler\n",
        "Line" : 140,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Remove temp variable from cache\n",
        "Line" : 150,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Report the found versions\n",
        "Line" : 156,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Set USE_FILE\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "CMake/FindPythonVirtualEnv.cmake" : {
      "ObjectId" : "03df7946ade34385562c7a57705f04559f07ee7e",
      "LastModified" : "2016-11-22T20:41:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindPythonVirtualEnv\n\n# --------\n\n#\n\n# Find Python's VirtualEnv Utility\n\n#\n\n# ::\n\n#\n\n#   PYTHON_VIRTUALENV_SCRIPT           - the full path to virtualenv\n\n#   PYTHON_VIRTUALENV_SCRIPT_FOUND     - If false, don't attempt to use lua\n\n#   PYTHON_VIRTUALENV_VERSION_STRING   - version of lua found\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### PYTHON_VIRTUALENV_VERSION\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set PYTHON_VIRTUALENV_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "CMake/FindR.cmake" : {
      "ObjectId" : "ca75324023b17f9a35e2eba6dda62f6d1274ca63",
      "LastModified" : "2018-07-05T09:59:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# - This module locates an installed R distribution.\n\n#\n\n# Defines the following:\n\n#\n\n# R_INCLUDE_DIR      - Path to R include directory\n\n# R_LIBRARIES        - Path to R library\n\n# R_LIBRARY_BASE     -\n\n# R_COMMAND          - Path to R command\n\n# RSCRIPT_EXECUTABLE - Path to Rscript command\n\n# R_VERSION_STRING   - R version obtained from R_COMMAND and R.version variable\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Make sure find package macros are included\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# R.h gets installed in all sorts of places -\n\n# ubuntu: /usr/share/R/include, RHEL/Fedora: /usr/include/R/R.h\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# On linux platform some times the libR.so is not available, however\n\n# on apple a link error results if the library is linked.\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "CMake/GetGitRevisionDescription.cmake" : {
      "ObjectId" : "0b7a6308e9a537de3ec6eb361b88fb1be9350c6c",
      "LastModified" : "2016-11-22T20:41:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Returns a version string from Git\n\n#\n\n# These functions force a re-configure on each git commit so that you can\n\n# trust the values of the variables in your build system.\n\n#\n\n#  get_git_head_revision(<refvar> <hashvar> [<additonal arguments to git describe> ...])\n\n#\n\n# Returns the ref and sha hash of the current head revision\n\n#\n\n#  git_describe(<var> [<additonal arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe on the source tree, and adjusting\n\n# the output so that it tests false if an error occurs.\n\n#\n\n#  git_get_exact_tag(<var> [<additonal arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe --exact-match on the source tree,\n\n# and adjusting the output so that it tests false if there was no exact\n\n# matching tag.\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We must run the following at \"include\" time, not at function call time,\n\n# to find the path to this module rather than the path to a calling list file\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# not in git\n",
        "Line" : 65,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# get the number of commits since the file has last been modified\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# TODO sanitize\n\n#if((${ARGN}\" MATCHES \"&&\") OR\n\n#\t(ARGN MATCHES \"||\") OR\n\n#\t(ARGN MATCHES \"\\\\;\"))\n\n#\tmessage(\"Please report the following error to the project!\")\n\n#\tmessage(FATAL_ERROR \"Looks like someone's doing something nefarious with git_describe! Passed arguments ${ARGN}\")\n\n#endif()\n",
        "Line" : 143,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#message(STATUS \"Arguments to execute_process: ${ARGN}\")\n",
        "Line" : 151,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "CMake/UseCSharp.cmake" : {
      "ObjectId" : "bb0e7eeb168f350ada20cfdba91564cb0bc13734",
      "LastModified" : "2017-04-03T12:59:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# A CMake Module for finding and using C# (.NET and Mono).\n\n#\n\n# The following global variables are assumed to exist:\n\n#   CSHARP_SOURCE_DIRECTORY - path to C# sources\n\n#   CSHARP_BINARY_DIRECTORY - path to place resultant C# binary files\n\n#\n\n# The following variables are set:\n\n#   CSHARP_TYPE - the type of the C# compiler (eg. \".NET\" or \"Mono\")\n\n#   CSHARP_COMPILER - the path to the C# compiler executable (eg. \"C:/Windows/Microsoft.NET/Framework/v4.0.30319/csc.exe\")\n\n#   CSHARP_VERSION - the version number of the C# compiler (eg. \"v4.0.30319\")\n\n#\n\n# The following macros are defined:\n\n#   CSHARP_ADD_EXECUTABLE( name references [files] [output_dir] ) - Define C# executable with the given name\n\n#   CSHARP_ADD_LIBRARY( name references [files] [output_dir] ) - Define C# library with the given name\n\n#\n\n# Examples:\n\n#   CSHARP_ADD_EXECUTABLE( MyExecutable \"\" \"Program.cs\" )\n\n#   CSHARP_ADD_EXECUTABLE( MyExecutable \"ref1.dll ref2.dll\" \"Program.cs File1.cs\" )\n\n#   CSHARP_ADD_EXECUTABLE( MyExecutable \"ref1.dll;ref2.dll\" \"Program.cs;File1.cs\" )\n\n#\n\n# This file is based on the work of GDCM:\n\n#   http://gdcm.svn.sf.net/viewvc/gdcm/trunk/CMake/UseCSharp.cmake\n\n# Copyright (c) 2006-2010 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO: ADD SUPPORT FOR LINK LIBRARIES\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check something was found\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Include type-based USE_FILE\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Private macro\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Step through each argument\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Argument is a dll, add reference\n",
        "Line" : 64,
        "CharPositionInLine" : 7
      },
      "7" : {
        "Text" : "# Argument is a source file\n",
        "Line" : 67,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# For dependencies, we need to expand wildcards\n",
        "Line" : 75,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Check we have at least one source\n",
        "Line" : 86,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Perform platform specific actions\n",
        "Line" : 93,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Add custom target and command\n\n# MESSAGE( STATUS \"Adding C# ${type} ${name}: '${CSHARP_COMPILER} /t:${type} /out:${name}.${output} /platform:${CSHARP_PLATFORM} ${CSHARP_SDK} ${refs} ${sources}'\" )\n",
        "Line" : 100,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 12
    },
    "CMake/UseDotNetFrameworkSdk.cmake" : {
      "ObjectId" : "bf3cb52868f5ff98c75d5bedafe9d0da386ad768",
      "LastModified" : "2016-11-22T20:41:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# A CMake Module for using C# .NET.\n\n#\n\n# The following variables are set:\n\n#   (none)\n\n#\n\n# This file is based on the work of GDCM:\n\n#   http://gdcm.svn.sf.net/viewvc/gdcm/trunk/CMake/UseDotNETFrameworkSDK.cmake\n\n# Copyright (c) 2006-2010 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/UseMono.cmake" : {
      "ObjectId" : "7d1ad7f09207f05fac9b190ed6a6d3c1afa289d7",
      "LastModified" : "2016-11-22T20:41:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# A CMake Module for using Mono.\n\n#\n\n# The following variables are set:\n\n#   (none)\n\n#\n\n# Additional references can be found here:\n\n#   http://www.mono-project.com/Main_Page\n\n#   http://www.mono-project.com/CSharp_Compiler\n\n#\n\n# This file is based on the work of GDCM:\n\n#   http://gdcm.svn.sf.net/viewvc/gdcm/trunk/CMake/FindMono.cmake\n\n# Copyright (c) 2006-2010 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/VariableList.cmake" : {
      "ObjectId" : "e33f1569536b1eff3dbdd71cf8510e4171cf6c6f",
      "LastModified" : "2017-04-03T12:59:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Function converts a list of cmake cache varibles to a string of\n\n# cmake code which set each cmake cache variable. The output in cache\n\n# is suitable to be writen to a file for \"-C file\" command line\n\n# argument for cmake.\n\n#\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# apply escape sequences\n",
        "Line" : 17,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "#\n\n# Function which converts a list a cmake cache variable into a list of\n\n# \"-Dvar:type=value;\" suitable for command line initialization.\n\n#\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# if variable has been set\n",
        "Line" : 48,
        "CharPositionInLine" : 52
      },
      "CommentCount" : 4
    },
    "CMake/configure_file_build_time.cmake" : {
      "ObjectId" : "cf1a18002b6ee8fdbb6998d1006c4eea86e14e8c",
      "LastModified" : "2018-09-09T17:03:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/sitkAddTest.cmake" : {
      "ObjectId" : "78e7a4ec400176ce4fcbebc24b668ba0587f8c76",
      "LastModified" : "2019-01-17T16:38:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# SimpleITK wrapper for add_test that adds support for external data,\n\n# and post comparison processes.\n\n#\n\n# ARGUMENTS\n\n#\n\n# [ADD_TEST ARGUMENTS...]\n\n#   The first arguments are passed to cmake's add_test function with\n\n#   support for the DATA{} references to external data\n\n# TRANSFORM_COMPARE <test transform> <baseline displacement> [tolerance]\n\n# IMAGE_COMPARE <test image> <baseline image> [tolerance]\n\n# IMAGE_MD5_COMPARE <test image> <md5 hash>\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add test with data in the SimpleITKData group.\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#\n\n# This is a function which set up the environment for executing python examples and tests\n\n#\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add extra command which may be needed on some systems\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#\n\n# This is a function which set up the enviroment for executing lua examples and tests\n\n#\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# add extra command which may be needed on some systems\n",
        "Line" : 97,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#\n\n# This is a function which set up the enviroment for executing ruby examples and tests\n\n#\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# add extra command which may be needed on some systems\n",
        "Line" : 133,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#\n\n# This is a function which set up the enviroment for executing TCL examples and tests\n\n#\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# add extra command which may be needed on some systems\n",
        "Line" : 164,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#\n\n# This is a function which set up the enviroment for executing JAVA examples and tests\n\n#\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# the root is with out extension or path, it is also assumed to the the name of the main class\n",
        "Line" : 190,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# from target?\n",
        "Line" : 194,
        "CharPositionInLine" : 54
      },
      "13" : {
        "Text" : "#\n\n# This is a function which set up the enviroment for executing R examples and tests\n\n#\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# add extra command which may be needed on some systems\n",
        "Line" : 249,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "#\n\n# This is a function which compiles the program and set up the\n\n# enviroment for executing CSharp examples and tests.\n\n#\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# the root is with out extension or path\n",
        "Line" : 286,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# make sure the executable has CSharp in it\n",
        "Line" : 289,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# add the target to compile the test\n",
        "Line" : 297,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# because each executable is it's own target we actually don't\n\n# need to make a target depend on this list\n",
        "Line" : 305,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# the interpreter is set to \"\" when none is needed\n",
        "Line" : 311,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 21
    },
    "CMake/sitkCheckCXX11.cmake" : {
      "ObjectId" : "8e890ee66bffbcbb880a22330430fd5aacb50be6",
      "LastModified" : "2019-01-17T16:38:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# CMake Module to check for TR1 and C++11 features\n\n#\n\n# SITK_HAS_CXX11_STATIC_ASSERT    - True if \"static_assert\" keyword is supported\n\n# SITK_HAS_CXX11_FUNCTIONAL       - True if functional header has C++11 features\n\n# SITK_HAS_CXX11_TYPE_TRAITS\n\n# SITK_HAS_CXX11_UNORDERED_MAP\n\n# SITK_HAS_CXX11_NULLPTR          - True if \"nullptr\" keyword is supported\n\n# SITK_HAS_CXX11_UNIQUE_PTR\n\n# SITK_HAS_CXX11_ALIAS_TEMPLATE   - Able to use alias templates\n\n#\n\n# SITK_HAS_TR1_SUB_INCLUDE\n\n#\n\n# SITK_HAS_TR1_FUNCTIONAL\n\n# SITK_HAS_TR1_TYPE_TRAITS\n\n# SITK_HAS_TR1_UNORDERED_MAP\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Function to wrap try compiles on the aggregate cxx test file1\n\n#\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Check for CXX11 Features\n\n#\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Microsoft Visual Studio 2008sp1,2010,2012 don't need tr1 as a path\n\n# prefix to tr1 headers, while libc++\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Check for TR1 features\n\n#\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# restore variable\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "CMake/sitkCheckForITKModuleDependencies.cmake" : {
      "ObjectId" : "e7eeb792d9b299594a4c996182ee18f559fd7e4c",
      "LastModified" : "2018-09-09T17:03:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# The list of ITK modules on which SimpleITK is dependent. Dependencies\n\n# were obtained using the WhatModulesITK.py script\n\n# (see itk_source_directory/Utilities/Maintenance):\n\n# WhatModulesITK.py itk_source_directory \\\n\n# $(find simpleitk_binary_directory/SimpleITK-build/Code \\\n\n# -name '*.h' -o -name '*.hxx' -o -name '*.cxx')\n\n#\n\n# Don't do \"find simpleitk_binary_directory/SimpleITK-build/Code type -f\"\n\n# as this will attempt to analyze all of the object files too.\n\n#\n\n# The script does not list the IO modules as they are indirectly included.\n\n# SimpleITK requires that the ITKReview module be turned on, and ITKReview\n\n# is dependent on most of the IO modules so we only need to force 'review on' to\n\n# ensure that we have the 'IO on' too.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/sitkCheckRequiredFlags.cmake" : {
      "ObjectId" : "12b37f5e1ecd98ef438bb0a9996cda9fc78b7f90",
      "LastModified" : "2018-09-09T17:04:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Sets the following variables:\n\n#   SimpleITK_PRIVATE_COMPILE_OPTIONS\n\n#   SimpleITK_PUBLIC_COMPILE_OPTIONS\n\n#\n\n# In particular, this marks the \"-std=\", and the \"-stdlib=\" as\n\n# required, if present and check if c++11 is needed.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# /bigobj is required for windows builds because of the size of\n\n# some object files (CastImage for instance)\n\n# Also supress the pesky warning about std::vector not being marked\n\n# for export in the dll\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Avoid some warnings\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# force debug linking not to be incremental\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#\n\n# Search CMAKE_CXX_FLAGS for flags that should be considered required,\n\n# and propagated to other projects, via the\n\n# SimpleITK_PUBLIC_COMPILE_OPTIONS variable.\n\n#\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# list of regular expressions flags that are to be required flags for SimpleITK\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# required to be last\n",
        "Line" : 56,
        "CharPositionInLine" : 11
      },
      "7" : {
        "Text" : "#\n\n# Let the user set the CXX_STANDARD via these CMake variable, although\n\n# it is preferred to set it in the CXX_FLAGS, as it will be propagated\n\n# to SimpleITK's public compile options.\n\n#\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n# Check if we need to enable C++11 with a compiler flag\n\n#\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "CMake/sitkCheckSourceTree.cmake" : {
      "ObjectId" : "9f208ee9039e59f0a04950b6e020b124a158002b",
      "LastModified" : "2018-09-09T17:04:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install a pre-commit hook to bootstrap commit hooks.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Silently ignore the error if the hooks directory is read-only.\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "CMake/sitkCheckTemplateDisambiguation.cmake" : {
      "ObjectId" : "270bab9456240f20bf917d0fe63e1cbfd53f7493",
      "LastModified" : "2018-09-09T17:03:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake Module to check for usage of the `template` keyword to\n\n# disambiguate dependent name look ups.\n\n#\n\n# More information can be found about this usage case here:\n\n#  http://en.cppreference.com/w/cpp/language/dependent_name Under the\n\n# heading \"The typename disambiguator for dependent names\".\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/sitkCompilerWarningsSettings.cmake" : {
      "ObjectId" : "421332a3db6bdc2ae8f852a7272962b5c3d22307",
      "LastModified" : "2018-09-09T17:03:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# trict-null-sentinel Check the set of common warning flags supported by C and C++ compilers\n\n# check_compiler_warning_flags(<c_flags_var> <cxx_flags_var>)\n\n#  <c_flags_var> - variable to store valid C warning flags\n\n#  <cxx_flags_var> - variable to store valid CXX warning flags\n\n# This internally calls the check_c_compiler_flag and check_cxx_compiler_flag macros.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# To create a portable build system, it is best to not\n\n# test for platforms, but to test for features.\n\n#\n\n# Instead of testing \"if Windows then do this\", test for\n\n# \"if the -Wno-invalid-offsetof flag works then use it\".\n\n# You can do that with the CheckCCompilerFlag module,\n\n# for example:\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# this functions loops through the list to add the flags\n\n# supported by the current compiler\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# this functions loops through the list to add the flags\n\n# supported by the current compiler\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# On windows, the most verbose compiler options\n\n# is reporting 1000's of wanings in windows\n\n# header files, for now, limit the number of\n\n# warnings to level 3\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# A better solution would be to use -Wall,\n\n# and then disable warnings one by one\n\n# set(VerboseWarningsFlag -Wall -wd4820 -wd4682 )\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# needed on APPLE\n\n# needed on gcc 4.5.2\n\n# needed with gcc 4.8\n\n# needed with gcc 4.8\n",
        "Line" : 64,
        "CharPositionInLine" : 29
      },
      "7" : {
        "Text" : "# add C++ only flag\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "CMake/sitkExternalData.cmake" : {
      "ObjectId" : "896792abf0783b9310eba5ac5f1017f3a28aa56c",
      "LastModified" : "2019-01-17T16:38:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use ExternalData_OBJECT_STORES from environment as default.\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Local data store populated by the ITK pre-commit hook\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Data mirrored from SimpleITKExternalData repository\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Data published by MIDAS\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Data published on GitHub Pages\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Data published on Girder\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Data published by developers using git-gerrit-push.\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Tell ExternalData commands not to transform raw files to content links.\n\n#set(ExternalData_LINK_CONTENT MD5)\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Match series of the form <base>.<ext>, <base>.<n>.<ext> such that <base> may\n\n# end in a (test) number that is not part of any series numbering.\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "CMake/sitkForbidDownloadsOption.cmake" : {
      "ObjectId" : "578978376083d7a2b71f952368b4f6ee91593cc2",
      "LastModified" : "2018-09-09T17:03:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Forbid downloading resources from the network during a build. This helps\n\n# when building on systems without network connectivity to determine which\n\n# resources much be obtained manually and made available to the build.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/sitkGenerateFilterSource.cmake" : {
      "ObjectId" : "2b506d6ad1d432ac17f55f18fdabda304aa2b2c4",
      "LastModified" : "2018-09-09T17:06:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find a Lua executable\n\n#\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Get the Lua version\n\n#\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check that the Lua version is acceptable\n\n#\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Sets \"out_var\" variable name to the value in the json path specified\n\n# to the json file name. If an error is encountered than the variable\n\n# is not updated.\n\n#\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###############################################################################\n\n# This macro returns the list of template components used by a specific\n\n# template file\n\n#\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "######\n\n# Figure out which template file gets used\n\n######\n",
        "Line" : 91,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "######\n\n# Get dependencies template files\n\n######\n",
        "Line" : 102,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Get the contents of the file\n",
        "Line" : 109,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# For each component, see if it appears in the body of the template file\n",
        "Line" : 113,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# Get the filename without the path\n",
        "Line" : 116,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "###############################################################################\n\n# This macro expands the .h and .cxx files for a given input template\n\n#\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Set common variables\n",
        "Line" : 141,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# required module is not enabled, don't process\n",
        "Line" : 158,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Get the list of template component files for this template\n",
        "Line" : 162,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Make a global list of ImageFilter template filters\n",
        "Line" : 165,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# validate json files if python is available\n",
        "Line" : 168,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# header\n",
        "Line" : 173,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# impl\n",
        "Line" : 181,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Make the list visible at the global scope\n",
        "Line" : 201,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "###############################################################################\n\n# Macro to do all code generation for a given directory\n\n#\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Get the name of the current directory\n",
        "Line" : 212,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Clear out the GeneratedSource list in the cache\n",
        "Line" : 215,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "######\n\n# Perform template expansion\n\n######\n",
        "Line" : 225,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Set input and output directories corresponding to this Code directory\n",
        "Line" : 229,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Make sure include and src directories exist\n",
        "Line" : 233,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Glob all json files in the current directory\n",
        "Line" : 244,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Loop through json files and expand each one\n",
        "Line" : 247,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "######\n\n# Make target for generated source and headers\n\n######\n",
        "Line" : 259,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "######\n\n# Create list of generated headers\n\n######\n",
        "Line" : 272,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# Add ifndefs\n",
        "Line" : 283,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 30
    },
    "CMake/sitkLanguageOptions.cmake" : {
      "ObjectId" : "256c3cc56fd37839cf014199d0035f3016a5e4f8",
      "LastModified" : "2018-07-05T09:59:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# - This module finds the languages supported by SimpleITK. By default\n\n#a find package will be performed for each language, and if it is\n\n#detected wrapping for that language will be enabled\n\n#(WRAP_<languageName>=ON). This behavior can be overridden by setting\n\n#\"WRAP_DEFAULT\" to FALSE. Individual languages can be disabled with\n\n#the WRAP_<languageName> option. If either WRAP_DEFAULT or WRAP_<languageName> is\n\n#false then no find_package for the language will be performed, and\n\n#the language will not be wrapped.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Arguments:\n\n# - languageName - name of the language, will check variable\n\n#   `WRAP_<languageName>`\n\n#\n\n# Modified Variables:\n\n#  - _do_find_package - always defined, true if find_pacakge for\n\n#    languages should be run.\n\n#  - _find_package_extra_args - may be set to `REQUIRED` of `QUIET` as\n\n#    needed.\n\n#  - WRAP_<languageName>_DEFAULT - may be set to `ON` or `OFF` if it\n\n#    can be determined with out a find_package call\n\n#\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Variable `WRAP_<languageName>` is defined and TRUE, we need\n\n# to call  `find_package` with `REQUIRED`\n",
        "Line" : 38,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# Variable `WRAP_<languageName>` is defined and FALSE, we do  *NOT* need\n\n# to call  `find_package` at all to initialize the `WRAP_<languageName>_DEFAULT`\n\n# variable\n",
        "Line" : 44,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# The variable `WRAP_<languageName>` is *NOT* defined and\n\n# WRAP_DEFAULT=ON, so we must \"quietly\" do a find package to\n\n# determine the value for `WRAP_<languageName>_DEFAULT` variable\n",
        "Line" : 51,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# The variable `WRAP_<languageName>` is *NOT* defined and explicitly all\n\n# languages are disabled by WRAP_DEFAULT=OFF, we do *NOT* need to\n\n# call `find_package` to initialize the\n\n# `WRAP_<languageName>_DEFAULT` variable.\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#\n\n# Setup the option for each language\n\n#\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#-----------------------------------------------------------\n\n# Lua\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#-----------------------------------------------------------\n\n# Python\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# if we don't need to link against a library, the make the\n\n# find_package quiet.\n",
        "Line" : 113,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#  PYTHON_INCLUDE_PATH ( deprecated )\n",
        "Line" : 146,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Debian \"jessie\" has this additional variable required to match\n\n# python versions.\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#-----------------------------------------------------------\n\n# Java\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#-----------------------------------------------------------\n\n# Tcl\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#-----------------------------------------------------------\n\n# Ruby\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#-----------------------------------------------------------\n\n#  CSharp\n",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#-----------------------------------------------------------\n\n#  R\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "CMake/sitkPreventInBuildInstalls.cmake" : {
      "ObjectId" : "accfea64c12f51e8f147de496cbb8f91d1b72b42",
      "LastModified" : "2018-09-09T17:03:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/sitkPreventInSourceBuilds.cmake" : {
      "ObjectId" : "a9cfdbb790d65df6519fabad4047864103dab6d7",
      "LastModified" : "2018-09-09T17:03:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# This function will prevent in-source builds\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# make sure the user doesn't play dirty with symlinks\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# disallow in-source builds\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "CMake/sitkProjectLanguageCommon.cmake" : {
      "ObjectId" : "8a0f691d17a1fd6348b65eaf16a0a361f7ba0bd2",
      "LastModified" : "2019-01-17T16:38:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Project setup\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# optional examples directory with testing\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Setup build locations to the wrapping language sub directories\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Since most language libraries are not installed with CMake, the\n\n# RPATH does not get fixed up during installation. So skip the RPATH\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# TODO these should be moved into UseSimpleITK\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# General SWIG configuration\n\n#\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# make a manual list of dependencies for the Swig.i files\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# check if uint64_t is the same as unsigned long\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# when \"-DSWIGWORDSIZE64\" is defined SWIG used unsigned long for uint64_t types\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "CMake/sitkSITKLegacyNaming.cmake" : {
      "ObjectId" : "994d72fcd18d067ea89babd6b5a618dfce17aa8c",
      "LastModified" : "2018-09-09T17:03:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Migrate SITK prefixed CMake options to SimpleITK\n\n#\n\n# sitk_legacy_naming( new_var_name [old_var_name] )\n\n#   new_var_name - a variable name which has the prefix migrated from\n\n# \"SITK\" to SimpleITK.\n\n#\n\n# This macro will print a warning if the old variable is set. Then\n\n# sets the new variable value to the value of the old variable and\n\n# delete the old variable from the cache.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# force set a value into the cache, but keep the properties\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMake/sitkSourceVersion.cmake" : {
      "ObjectId" : "3c942e2cc251bd6e55491a4ecf8e1ce39bc44859",
      "LastModified" : "2018-09-09T17:03:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# This CMake code extracts the information from the git repository,\n\n# and automatically causes a reconfigure if the git HEAD changes. The\n\n# following variable may be defined after execution:\n\n#\n\n# _GIT_VERSION_HASH - the SHA1 hash of the current HEAD\n\n#\n\n# Based on the most recent tag starting with the letter \"v\" for\n\n# version, which is expected to be of the form\n\n# vN.N[.N[.N][(a|b|c|rc[N])] the following is extracted or undefined:\n\n#\n\n# _GIT_VERSION_MAJOR\n\n# _GIT_VERSION_MINOR\n\n# _GIT_VERSION_PATCH\n\n# _GIT_VERSION_TWEAK\n\n# _GIT_VERSION_RC\n\n#\n\n# If the current project's version ( defiend by\n\n# ${CMAKE_PROJECT_NAME}_VERSION_MAJOR and MINOR and PATCH and TWEAK\n\n# match that of the tag, then it'll be considered that the project is\n\n# in post release mode otherwise it's considered underdevelopment.\n\n#\n\n# Only one of the following variables will be defined.\n\n# _GIT_VERSION_DEV is defined as number of commits\n\n# since the projects Version.cmake file has been modified. While\n\n# _GIT_VERSION_POST is defined as the number of commits since the tag.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# if there is not a git directory we should be in a distributed package\n\n# which should contain this additional cmake file with the\n\n# _GIT_VERSION variables\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# find the closest anotated tag with the v prefix for version\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# a,b,rc01 etc\n",
        "Line" : 75,
        "CharPositionInLine" : 43
      },
      "4" : {
        "Text" : "#trim leading '-'\n",
        "Line" : 79,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#ignore if 0\n",
        "Line" : 111,
        "CharPositionInLine" : 21
      },
      "6" : {
        "Text" : "# The first commit after a tag should increase the project version\n\n# number in Version.cmake and be \"dev1\"\n",
        "Line" : 115,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# save variable in a configuration file in case we have no git directory\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "CMake/sitkStripOption.cmake" : {
      "ObjectId" : "8a0a9357f2565bad697a664d4105d29a30f1e892",
      "LastModified" : "2018-09-09T17:03:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Strip Option\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add option to strip wrapping libraries.\n\n# Since the wrapping libraries don't get installed by the normal cmake\n\n# installation process, this option enables stripping of the libraries\n\n# as part of the build process. It should be used on the laguage\n\n# targets and the the SimpleITK iterface, as those can be installed\n\n# into the system.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMake/sitkTargetLinkLibrariesWithDynamicLookup.cmake" : {
      "ObjectId" : "6ca4c519ad46757e83baacd9337f6685cc852a19",
      "LastModified" : "2019-01-17T16:38:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n#\n\n# Public Functions\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# The following functions are defined:\n\n#\n\n# .. cmake:command:: sitk_target_link_libraries_with_dynamic_lookup\n\n#\n\n# ::\n\n#\n\n#     sitk_target_link_libraries_with_dynamic_lookup(<Target> [<Libraries>])\n\n#\n\n#\n\n# Useful to \"weakly\" link a loadable module. For example, it should be used\n\n# when compiling a loadable module when the symbols should be resolve from\n\n# the run-time environment where the module is loaded, and not a specific\n\n# system library.\n\n#\n\n# Like proper linking, except that the given ``<Libraries>`` are not necessarily\n\n# linked. Instead, the ``<Target>`` is produced in a manner that allows for\n\n# symbols unresolved within it to be resolved at runtime, presumably by the\n\n# given ``<Libraries>``.  If such a target can be produced, the provided\n\n# ``<Libraries>`` are not actually linked.\n\n#\n\n# It links a library to a target such that the symbols are resolved at\n\n# run-time not link-time.\n\n#\n\n# The linker is checked to see if it supports undefined\n\n# symbols when linking a shared library. If it does then the library\n\n# is not linked when specified with this function.\n\n#\n\n# On platforms that do not support weak-linking, this function works just\n\n# like ``sitk_target_link_libraries``.\n\n#\n\n# .. note::\n\n#\n\n#     For OSX it uses ``undefined dynamic_lookup``. This is similar to using\n\n#     ``-shared`` on Linux where undefined symbols are ignored.\n\n#\n\n#     For more details, see `blog <http://blog.tim-smith.us/2015/09/python-extension-modules-os-x/>`_\n\n#     from Tim D. Smith.\n\n#\n\n#\n\n# .. cmake:command:: sitk_check_dynamic_lookup\n\n#\n\n# Check if the linker requires a command line flag to allow leaving symbols\n\n# unresolved when producing a target of type ``<TargetType>`` that is\n\n# weakly-linked against a dependency of type ``<LibType>``.\n\n#\n\n# ``<TargetType>``\n\n#   can be one of \"STATIC\", \"SHARED\", \"MODULE\", or \"EXE\".\n\n#\n\n# ``<LibType>``\n\n#   can be one of \"STATIC\", \"SHARED\", or \"MODULE\".\n\n#\n\n# Long signature:\n\n#\n\n# ::\n\n#\n\n#     sitk_check_dynamic_lookup(<TargetType>\n\n#                          <LibType>\n\n#                          <ResultVar>\n\n#                          [<LinkFlagsVar>])\n\n#\n\n#\n\n# Short signature:\n\n#\n\n# ::\n\n#\n\n#     sitk_check_dynamic_lookup(<ResultVar>) # <TargetType> set to \"MODULE\"\n\n#                                       # <LibType> set to \"SHARED\"\n\n#\n\n#\n\n# The result is cached between invocations and recomputed only when the value\n\n# of CMake's linker flag list changes; ``CMAKE_STATIC_LINKER_FLAGS`` if\n\n# ``<TargetType>`` is \"STATIC\", and ``CMAKE_SHARED_LINKER_FLAGS`` otherwise.\n\n#\n\n#\n\n# Defined variables:\n\n#\n\n# ``<ResultVar>``\n\n#   Whether the current C toolchain supports weak-linking for target binaries of\n\n#   type ``<TargetType>`` that are weakly-linked against a dependency target of\n\n#   type ``<LibType>``.\n\n#\n\n# ``<LinkFlagsVar>``\n\n#   List of flags to add to the linker command to produce a working target\n\n#   binary of type ``<TargetType>`` that is weakly-linked against a dependency\n\n#   target of type ``<LibType>``.\n\n#\n\n# ``HAS_DYNAMIC_LOOKUP_<TargetType>_<LibType>``\n\n#   Cached, global alias for ``<ResultVar>``\n\n#\n\n# ``DYNAMIC_LOOKUP_FLAGS_<TargetType>_<LibType>``\n\n#   Cached, global alias for ``<LinkFlagsVar>``\n\n#\n\n#\n\n# Private Functions\n\n# ^^^^^^^^^^^^^^^^^\n\n#\n\n# The following private functions are defined:\n\n#\n\n# .. warning:: These functions are not part of the scikit-build API. They\n\n#     exist purely as an implementation detail and may change from version\n\n#     to version without notice, or even be removed.\n\n#\n\n#     We mean it.\n\n#\n\n#\n\n# .. cmake:command:: _get_target_type\n\n#\n\n# ::\n\n#\n\n#     _get_target_type(<ResultVar> <Target>)\n\n#\n\n#\n\n# Shorthand for querying an abbreviated version of the target type\n\n# of the given ``<Target>``.\n\n#\n\n# ``<ResultVar>`` is set to:\n\n#\n\n# - \"STATIC\" for a STATIC_LIBRARY,\n\n# - \"SHARED\" for a SHARED_LIBRARY,\n\n# - \"MODULE\" for a MODULE_LIBRARY,\n\n# - and \"EXE\" for an EXECUTABLE.\n\n#\n\n# Defined variables:\n\n#\n\n# ``<ResultVar>``\n\n#   The abbreviated version of the ``<Target>``'s type.\n\n#\n\n#\n\n# .. cmake:command:: _test_weak_link_project\n\n#\n\n# ::\n\n#\n\n#     _test_weak_link_project(<TargetType>\n\n#                             <LibType>\n\n#                             <ResultVar>\n\n#                             <LinkFlagsVar>)\n\n#\n\n#\n\n# Attempt to compile and run a test project where a target of type\n\n# ``<TargetType>`` is weakly-linked against a dependency of type ``<LibType>``:\n\n#\n\n# - ``<TargetType>`` can be one of \"STATIC\", \"SHARED\", \"MODULE\", or \"EXE\".\n\n# - ``<LibType>`` can be one of \"STATIC\", \"SHARED\", or \"MODULE\".\n\n#\n\n# Defined variables:\n\n#\n\n# ``<ResultVar>``\n\n#   Whether the current C toolchain can produce a working target binary of type\n\n#   ``<TargetType>`` that is weakly-linked against a dependency target of type\n\n#   ``<LibType>``.\n\n#\n\n# ``<LinkFlagsVar>``\n\n#   List of flags to add to the linker command to produce a working target\n\n#   binary of type ``<TargetType>`` that is weakly-linked against a dependency\n\n#   target of type ``<LibType>``.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Two signatures are supported:\n",
        "Line" : 426,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#\n\n# sitk_check_dynamic_lookup(<ResultVar>)\n\n#\n",
        "Line" : 429,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#\n\n# sitk_check_dynamic_lookup(<TargetType>\n\n#                      <LibType>\n\n#                      <ResultVar>\n\n#                      [<LinkFlagsVar>])\n\n#\n",
        "Line" : 438,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# hash the CMAKE_FLAGS passed and check cache to know if we need to rerun\n",
        "Line" : 475,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "CMake/sitkTargetUseITK.cmake" : {
      "ObjectId" : "fd38988c0d0a6be9b7b7bb7a36af19a353259913",
      "LastModified" : "2018-09-09T17:03:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# target_use_itk\n\n#\n\n# This function has the following form:\n\n#   sitk_target_use_itk(<target>\n\n#                       <PRIVATE|PUBLIC|INTERFACE>\n\n#                       [itk_module [itk_module [...]]])\n\n#\n\n#   It configures the target, with the require include directories and\n\n# link libraries to use the list of itk modules provided. The keyword\n\n# to indicate interface of the library is also required.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/sitkUseGTest.cmake" : {
      "ObjectId" : "8b8f5ea5dfe44339f4b99e4ba21da9854756f3ca",
      "LastModified" : "2018-09-09T17:03:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# sitkUseGTest\n\n#\n\n#  This file is a wrapper of CMake's FindGTest and GoogleTest's\n\n# recommendation to add the Google Test source tree as a subdirectory\n\n# of the project.\n\n#\n\n# This file is designed to provide the \"GTest::GTest\" target.\n\n#\n\n# The follow cache variable is used to find GTest:\n\n#\n\n# ``GTEST_ROOT``\n\n#   The root directory of the Google Test installation or a source\n\n# directory.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Prevent overriding the parent project's compiler/linker\n\n# settings on Windows\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Avoid CMP0063 warning\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# google test does not properly use pthreads on mingw\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Must build GTest as static since EXCLUDE_FROM_ALL, would exclude\n\n# needed GTest shared libraries from being installed.\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Add googletest directly to our build but exclude from using it's\n\n# target's and installation unless referenced by other dependencies.\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "CMake/sitkUseSWIG.cmake" : {
      "ObjectId" : "bbe223658e19fecd2c0aec0a0189430b0f3bfa56",
      "LastModified" : "2019-01-17T16:38:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - SWIG module for CMake\n\n# Defines the following macros:\n\n#   SWIG_ADD_MODULE(name language [ files ])\n\n#     - Define swig module with given name and specified language\n\n#   SWIG_LINK_LIBRARIES(name [ libraries ])\n\n#     - Link libraries to swig module\n\n# All other macros are for internal use only.\n\n# To get the actual target name of the swig moduel,\n\n# use:  ${SWIG_MODULE_${name}_TARGET_NAME}.\n\n# The target name can be used to set dependecies between targets.\n\n# Set Source files properties such as CPLUSPLUS and SWIG_FLAGS to specify\n\n# special behavior of SWIG. Also global CMAKE_SWIG_FLAGS can be used to add\n\n# special flags to all swig calls.\n\n# Another special variable is CMAKE_SWIG_OUTDIR, it allows one to specify\n\n# where to write all the swig generated module (swig -outdir option)\n\n# The name-specific variable SWIG_MODULE_<name>_EXTRA_DEPS may be used\n\n# to specify extra dependencies for the generated modules.\n\n# If the source file generated by swig need some special flag you can use\n\n# SET_SOURCE_FILES_PROPERTIES( ${swig_generated_file_fullname}\n\n#        PROPERTIES COMPILE_FLAGS \"-bla\")\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2004-2009 Kitware, Inc.\n\n# Copyright 2009 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distributed this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# For given swig module initialize variables associated with it\n\n#\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# For a given language, input file, and output file, determine extra files that\n\n# will be generated. This is internal swig macro.\n\n#\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Take swig (*.i) file and add proper custom commands for it\n\n#\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If CMAKE_SWIG_OUTDIR was specified then pass it to -outdir\n",
        "Line" : 127,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# it may not exist, so create it:\n",
        "Line" : 130,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# add the language into the name of the file (i.e. TCL_wrap)\n\n# this allows for the same .i file to be wrapped into different languages\n",
        "Line" : 141,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#MESSAGE(\"Full path to source file: ${swig_source_file_fullname}\")\n\n#MESSAGE(\"Full path to the output file: ${swig_generated_file_fullname}\")\n",
        "Line" : 154,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# default is c, so add c++ flag if it is c++\n",
        "Line" : 163,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#\n\n# Create Swig module\n\n#\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# In java you want:\n\n#      System.loadLibrary(\"LIBRARY\");\n\n# then JNI will look for a library whose name is platform dependent, namely\n\n#   MacOS  : libLIBRARY.jnilib\n\n#   Windows: LIBRARY.dll\n\n#   Linux  : libLIBRARY.so\n",
        "Line" : 223,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# when swig is used without the -interface it will produce in the module.py\n\n# a 'import _modulename' statement, which implies having a corresponding\n\n# _modulename.so (*NIX), _modulename.pyd (Win32).\n",
        "Line" : 234,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# this is only needed for the python case where a _modulename.so is generated\n",
        "Line" : 239,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Python extension modules on Windows must have the extension \".pyd\"\n\n# instead of \".dll\" as of Python 2.5.  Older python versions do support\n\n# this suffix.\n\n# http://docs.python.org/whatsnew/ports.html#SECTION0001510000000000000000\n\n# <quote>\n\n# Windows: .dll is no longer supported as a filename extension for extension modules.\n\n# .pyd is now the only filename extension that will be searched for.\n\n# </quote>\n",
        "Line" : 242,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "#\n\n# Like TARGET_LINK_LIBRARIES but for swig modules\n\n#\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "CMakeLists.txt" : {
      "ObjectId" : "ac12561f31fad80dd4408f0bd61f34ec870a5885",
      "LastModified" : "2019-01-17T16:38:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Explicitly add INCREMENTAL linking option to command lines.\n\n# http://www.cmake.org/pipermail/cmake/2010-February/035174.html\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Include extra CMake files\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Version information\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-----------------------------------------------------------\n\n# Check and set required flags for compilation\n\n# This must be done before any other try compiles based tests are\n\n# done.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#we require certain packages be turned on in ITK\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# NOTE: We are purposely not calling UseITK yet. However, we must make\n\n# sure the requred compilation and linker flags are set. Since, we\n\n# are trying to encapsulate ITK, we need to very carefully control\n\n# in access to the headers and libraries, hence each SimpleITK\n\n# library will call UseITK.\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Add compiler flags needed to use ITK.\n",
        "Line" : 73,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#-----------------------------------------------------------\n\n# Configure Elastix\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Check if libraries are available\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#----------------------------------------------------------\n\n# Place all options to go into sitkConfigure.h here\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# See http://www.cmake.org/cmake/help/v2.8.10/cmake.html#variable:MSVC_VERSION\n\n# and https://en.wikipedia.org/wiki/Microsoft_Visual_Studio#Version_history\n\n#   1500 = VS  9.0 (Visual Studio 2008)\n\n#   1600 = VS 10.0 (Visual Studio 2010)\n\n#   1700 = VS 11.0 (Visual Studio 2012)\n",
        "Line" : 120,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# with this option on the linker runs out of memory\n",
        "Line" : 126,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# 1900 = VS 14.0 (Visual Studio 2015)\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Setup build locations.\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# This library is linked privately to SimpleITK libraries and is not\n\n# part of the public link interface\n\n#list ( APPEND SimpleITK_LIBRARIES  SimpleITKExplicit )\n",
        "Line" : 172,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Be sure to clear these each time\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Create cached list of all template components\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Variables for use in install rules:\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Remove the build tree's SimpleITKTargets file if this is the first call:\n",
        "Line" : 215,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# These are some system specific compiler options needed to build SimpleITK\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#-----------------------------------------------------------\n\n# Place all checks and try compile variable for sitkConfigure.h here\n",
        "Line" : 269,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# check for stdint\n\n# This generates a configuration error if the compiler is not supported\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# assemble a list of important documentation from Simple ITK and ITK\n",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# add important files from ITK\n",
        "Line" : 298,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# if using from build tree then ITK_USE_FILE will be\n\n# ITK_SOURCE_DIR/CMake/UseITK.cmake. The needed docs should be in the\n\n# root of the source tree\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#\n\n# Only append file if it exists\n\n#\n",
        "Line" : 316,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Set up Documentation\n",
        "Line" : 348,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Set up wrapping.\n\n#\n\n# Use CMake file which present options for wrapped languages, and finds languages as needed\n\n#\n",
        "Line" : 352,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Ensure that development strips have been setup\n\n# include(sitkCheckSourceTree)\n\n# This has been disabled for SimpleElastix.\n",
        "Line" : 359,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 364,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# This file is always present in version-controlled source trees\n\n# so we must have been extracted from a source tarball with no\n\n# data objects needed for testing.  Turn off tests by default\n\n# since enabling them requires network access or manual data\n\n# store configuration.\n",
        "Line" : 366,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# set things up for testing, this configuration needs to occour before\n\n# we enter the sub-directories\n",
        "Line" : 374,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Go to subdirectories\n",
        "Line" : 379,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# ITK uses KWStyle for checking the coding style\n",
        "Line" : 385,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# set things up for testing, if enabled\n",
        "Line" : 389,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# optional examples directory with testing\n",
        "Line" : 403,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Configure SimpleITKConfig.cmake for the build tree.\n",
        "Line" : 411,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Configure SimpleITKConfig.cmake for the install tree.\n",
        "Line" : 420,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Construct the proper number of get_filename_component(... PATH)\n\n# calls to compute the installation prefix.\n",
        "Line" : 425,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Help other projects use SimpleITK\n",
        "Line" : 440,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# INSTALLATION\n",
        "Line" : 449,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# CPack\n",
        "Line" : 489,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 42
    },
    "CTestConfig.cmake" : {
      "ObjectId" : "02306384527862c8ca2b3bd8d2abce4d084c5927",
      "LastModified" : "2018-09-09T17:03:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Code/BasicFilters/CMakeLists.txt" : {
      "ObjectId" : "2790677bd71cc12bf55b3ff0f7e2c2527832c7cf",
      "LastModified" : "2018-09-09T17:03:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set up code generation\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Code/BasicFilters/src/CMakeLists.txt" : {
      "ObjectId" : "a3f89ba3757270ba005b3a99a980d9de1603d729",
      "LastModified" : "2019-01-25T22:33:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add_filter_library\n\n# This function is used to apply standard building options for the\n\n# libraries in the basic filters directory given a list of SimpleITK\n\n# source files, and a list of ITK modules.\n\n#\n\n# This method is used to encapsulate the directory properties set when\n\n# using an ITK module\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# These other filters are split into files. They all use the\n\n# following for export their interface. There must not be and\n\n# inter-filter include.\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# append this new library to the globaly cached list\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# common source which all basic filter libraries need to be linked against\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# append this new library to the globally cached list\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# manually written\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# Module based libraries\n\n#\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# We should have dealt with all generated source files\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n# Deal with files which may depend on any or all other filters.\n\n#\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# add additional files which may depend on other modules\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# No dependencies on ITK modules just SimpleITK\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "Code/CMakeLists.txt" : {
      "ObjectId" : "b0b1ddd9850113e0bc624dc2054138112e814413",
      "LastModified" : "2018-09-09T17:03:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Code/Common/CMakeLists.txt" : {
      "ObjectId" : "058effe11181467b081494dcfe8d1ae63ddb2049",
      "LastModified" : "2018-09-09T17:03:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake option variable are prefixes with the project name \"SimpleITK\"\n\n# while C++ preprocess defines only have SITK. These variable need the\n\n# prefix translation.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Code/Common/src/CMakeLists.txt" : {
      "ObjectId" : "fd1423efa80e01a0e9147ed1bc50124e0f591d10",
      "LastModified" : "2018-09-09T17:10:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add custom command that will delete java files which need to be rebuilt when changes\n\n# are made to Common\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Code/Elastix/CMakeLists.txt" : {
      "ObjectId" : "d4fb6582580edd783780d34c25f2c5cb94bfd125",
      "LastModified" : "2018-09-09T17:03:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Code/Elastix/src/CMakeLists.txt" : {
      "ObjectId" : "89045074868c60e055d2c8f451589fd6387f14ec",
      "LastModified" : "2018-09-09T17:03:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Code/Explicit/CMakeLists.txt" : {
      "ObjectId" : "0b719487f66d9d94770c76b76c8ca7ecaeaf44a3",
      "LastModified" : "2018-09-09T17:03:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Code/Explicit/src/CMakeLists.txt" : {
      "ObjectId" : "0dff49b7e6474553e766d7fa9b463787d89c90b9",
      "LastModified" : "2018-09-09T17:03:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Code/IO/CMakeLists.txt" : {
      "ObjectId" : "0b719487f66d9d94770c76b76c8ca7ecaeaf44a3",
      "LastModified" : "2018-09-09T17:03:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Code/IO/src/CMakeLists.txt" : {
      "ObjectId" : "ee1728ce84014d53d096f5f93ad4b9204c20dcb0",
      "LastModified" : "2019-01-17T16:38:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add custom command that will delete java files which need to be rebuilt when changes\n\n# are made to IO\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Code/Registration/CMakeLists.txt" : {
      "ObjectId" : "d4fb6582580edd783780d34c25f2c5cb94bfd125",
      "LastModified" : "2018-09-09T17:03:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Code/Registration/src/CMakeLists.txt" : {
      "ObjectId" : "9b2e4779528009696170a853d99ad2abbc643532",
      "LastModified" : "2018-09-09T17:03:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The BasicFiltersLibrary is needed of the Cast filter\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Documentation/CMakeLists.txt" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2018-09-09T17:10:23Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Documentation/Makefile" : {
      "ObjectId" : "dc598c8b024d7a4d81453abf557ab22808e0454c",
      "LastModified" : "2018-09-09T17:10:23Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# User-friendly check for sphinx-build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Internal variables.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Documentation/docs/Makefile" : {
      "ObjectId" : "65386bd7ae6624393c5cda00941cbc327473e771",
      "LastModified" : "2018-09-09T17:10:23Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Minimal makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Put it first so that \"make\" without argument is like \"make help\".\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Catch-all target: route all unknown targets to Sphinx using the new\n\n# \"make mode\" option.  $(O) is meant as a shortcut for $(SPHINXOPTS).\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Documentation/docs/images/CMakeLists.txt" : {
      "ObjectId" : "0551007e89a9fad6074c8d8fbdf4833452c0a546",
      "LastModified" : "2019-01-17T16:38:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use ExternalData module to either download data to get from local\n\n# data store.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Examples/AdvancedImageReading/CMakeLists.txt" : {
      "ObjectId" : "74c498e89955bf04a5cd1f2c87872868058cff0b",
      "LastModified" : "2019-01-17T16:38:06Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/CMakeLists.txt" : {
      "ObjectId" : "6077999cef65451c44747d22ea403b6238496db9",
      "LastModified" : "2019-01-17T16:38:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake 3.0\n\n# CMake 3.3.2\n",
        "Line" : 5,
        "CharPositionInLine" : 12
      },
      "1" : {
        "Text" : "# Add individual cxx executables\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add subdirectories\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Test data directory\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add example organized sub-directories with multiple languages\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Examples/CSharp/CMakeLists.txt" : {
      "ObjectId" : "70571a89eb0be04022ec8d3063d7255a738503a4",
      "LastModified" : "2018-09-09T17:10:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# CSharp Examples\n\n#\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Examples/DemonsRegistration1/CMakeLists.txt" : {
      "ObjectId" : "1574599ae2431280e19cb8ee8f2e98c84ebc12c1",
      "LastModified" : "2019-01-17T16:38:06Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/DemonsRegistration2/CMakeLists.txt" : {
      "ObjectId" : "3e1764e9f955c4846e20af3556389d3abb28d013",
      "LastModified" : "2019-01-17T16:38:06Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/DicomImagePrintTags/CMakeLists.txt" : {
      "ObjectId" : "c1b162a0fcbfc0c759ade2f0bfaf4d5d1bc7172a",
      "LastModified" : "2018-09-09T17:10:23Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/DicomSeriesFromArray/CMakeLists.txt" : {
      "ObjectId" : "001af3bd4f211d33203d55c44a2f8beb5471f2d7",
      "LastModified" : "2019-01-17T16:38:06Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/DicomSeriesReadModifyWrite/CMakeLists.txt" : {
      "ObjectId" : "0e968cfe793bf0734c758dc5a9e83cb8f6798d2b",
      "LastModified" : "2018-09-09T17:10:23Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/DicomSeriesReader/CMakeLists.txt" : {
      "ObjectId" : "8e6e18e29256828e2c540dab283d45e8105d72d7",
      "LastModified" : "2018-09-09T17:10:23Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/FilterProgressReporting/CMakeLists.txt" : {
      "ObjectId" : "ec6456e30b34eb2c2fc0288e13beeeb9992184b4",
      "LastModified" : "2018-09-09T17:10:23Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/HelloWorld/CMakeLists.txt" : {
      "ObjectId" : "755e61d6d8a67c29d0733f7446ca529dfc510d38",
      "LastModified" : "2018-09-09T17:10:23Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/ITKIntegration/CMakeLists.txt" : {
      "ObjectId" : "e50fb5cedae4093c2c95a1820780cdd956d52fc8",
      "LastModified" : "2018-09-09T17:10:23Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/ImageGridManipulation/CMakeLists.txt" : {
      "ObjectId" : "4a88b653abcd6069d1f64b850b87f03709b6be0f",
      "LastModified" : "2019-01-17T16:38:06Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/ImageIOSelection/CMakeLists.txt" : {
      "ObjectId" : "69fc82508976d86157a8de44db21b53a5e5149f9",
      "LastModified" : "2019-01-17T16:38:06Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/ImageRegistrationMethod1/CMakeLists.txt" : {
      "ObjectId" : "e8263721e1479d35867ac5945b7fb84d0e869382",
      "LastModified" : "2018-09-09T17:10:23Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/ImageRegistrationMethod2/CMakeLists.txt" : {
      "ObjectId" : "55fa34bfe5cce7731fc1a9f1c9ec824dad32fa83",
      "LastModified" : "2019-01-17T16:38:06Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/ImageRegistrationMethod3/CMakeLists.txt" : {
      "ObjectId" : "b02f2eccf5cf07212e0f4961bb3487739d17dfd0",
      "LastModified" : "2019-01-17T16:38:06Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/ImageRegistrationMethod4/CMakeLists.txt" : {
      "ObjectId" : "0c6dddb4af8c6bede1e227cecd5a52fca9509f0c",
      "LastModified" : "2019-01-17T16:38:06Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/ImageRegistrationMethodBSpline1/CMakeLists.txt" : {
      "ObjectId" : "0f78315ea7168dfb1b8ac3a653be096467eebd87",
      "LastModified" : "2019-01-17T16:38:06Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/ImageRegistrationMethodBSpline2/CMakeLists.txt" : {
      "ObjectId" : "37a4262b521739c402e37703508b6951dfd74f4b",
      "LastModified" : "2019-01-17T16:38:06Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/ImageRegistrationMethodBSpline3/CMakeLists.txt" : {
      "ObjectId" : "944598e9c336def0d2ebf1d38dd3e0b93d64dfa4",
      "LastModified" : "2019-01-17T16:38:06Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/ImageRegistrationMethodDisplacement1/CMakeLists.txt" : {
      "ObjectId" : "8290bdb06ee489b4735011ae3b5306bd6568366f",
      "LastModified" : "2019-01-17T16:38:06Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/ImageRegistrationMethodExhaustive/CMakeLists.txt" : {
      "ObjectId" : "7beb04e7116cf831f5f5a31310fb36554dfd545a",
      "LastModified" : "2019-01-17T16:38:06Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/ImageViewing/CMakeLists.txt" : {
      "ObjectId" : "6df5eb7d004efb740460bcc9a1c7ebfefd999671",
      "LastModified" : "2019-01-17T16:38:06Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/N4BiasFieldCorrection/CMakeLists.txt" : {
      "ObjectId" : "144db7c7eab71e972a4b0118fce1ad76fef0cde8",
      "LastModified" : "2019-01-17T16:38:06Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Python/CMakeLists.txt" : {
      "ObjectId" : "4cac3e6a2dfdfa96f878c5746b2337e084ecdff2",
      "LastModified" : "2018-09-09T17:10:23Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Segmentation/CMakeLists.txt" : {
      "ObjectId" : "018599c61911f203136e108941814108c527baa6",
      "LastModified" : "2018-09-09T17:10:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add executable example targets\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Examples/SimpleGaussian/CMakeLists.txt" : {
      "ObjectId" : "e1ae6db155742cfa69660fdfcadedcdc23b39d02",
      "LastModified" : "2018-09-09T17:10:23Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/test/CMakeLists.txt" : {
      "ObjectId" : "c1c1e9d618310356f92ac14f65007903c2965fc1",
      "LastModified" : "2018-09-09T17:10:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# CXX Examples\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This test currently does not compile or work\n\n#\n\n#  add_java_test( Example.ImageConnection\n\n#    \"${SimpleITK_SOURCE_DIR}/Examples/ImageConnection.java\" )\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "SuperBuild/CMakeLists.txt" : {
      "ObjectId" : "3fa6f08781b5a75bb2ef5ac3d0c9f8ba0615b071",
      "LastModified" : "2019-01-17T16:38:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Override defaults set in initial \"project\" call, allow user to\n\n# override from command line\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# SimpleITK Addition: install to the common library\n\n# directory, so that all libs/include etc ends up\n\n# in one common tree\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# CMAKE_CXX_COMPILER_ARG1 is a CMake internal variable. It should not be\n\n# used in SimpleITK Superbuild's configuration as it will not get\n\n# correctly propagated to external projects. If it is set, it most\n\n# likely means that SimpleITK is to be built with a launcher such as\n\n# ccache or distcc. This should be done with the CMake variable\n\n# CMAKE_CXX_COMPILER_LAUNCHER_FLAG available in CMake > 3.4.0 .\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Superbuild script\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Actually run the super build script\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Dependancies will be determined during superbuild stage.\n",
        "Line" : 37,
        "CharPositionInLine" : 43
      },
      "CommentCount" : 6
    },
    "SuperBuild/CTestConfig.cmake" : {
      "ObjectId" : "98c23da9c1d2cc759da77aa7d525ae45b8677b53",
      "LastModified" : "2018-09-09T17:10:23Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "SuperBuild/External_Elastix.cmake" : {
      "ObjectId" : "4e3c8a60f08b27cdc3ac62b4ea27729423f500a5",
      "LastModified" : "2018-11-08T11:21:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "SuperBuild/External_GTest.cmake" : {
      "ObjectId" : "55ec782649b8242a567bff2b4e56f7e111f82c8e",
      "LastModified" : "2018-09-09T17:10:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Make sure this file is included only once\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# follow the standard EP_PREFIX locations\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "SuperBuild/External_ITK.cmake" : {
      "ObjectId" : "d6108481176dbf04fe76abdf59dde9b8fe4a344a",
      "LastModified" : "2019-01-17T16:38:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Get and build itk\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Determine if we need to set to use 64BITS_IDS for windows64\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Use ITK convention of calling it ITK\n",
        "Line" : 48,
        "CharPositionInLine" : 15
      },
      "3" : {
        "Text" : "# release-4.13\n",
        "Line" : 56,
        "CharPositionInLine" : 32
      },
      "CommentCount" : 4
    },
    "SuperBuild/External_Lua.cmake" : {
      "ObjectId" : "8fe3a4983ccca38478f515863c455bbc41a020a8",
      "LastModified" : "2018-09-09T17:10:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Make sure this file is included only once\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# follow the standard EP_PREFIX locations\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "SuperBuild/External_PCRE.cmake" : {
      "ObjectId" : "16c232128264bb40b9f9a23a66692485767d06d3",
      "LastModified" : "2018-09-09T17:10:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Make sure this file is included only once\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sanity checks\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set dependency list\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n#  PCRE (Perl Compatible Regular Expressions)\n\n#\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# follow the standard EP_PREFIX locations\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "SuperBuild/External_SimpleITKExamples.cmake" : {
      "ObjectId" : "0548f6bd50ea58429af0264d5565d2c5641f43f2",
      "LastModified" : "2018-09-09T17:10:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set dependency list\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "SuperBuild/External_Swig.cmake" : {
      "ObjectId" : "2e863c79adc91b5d0182065304b5de5b5cc65d80",
      "LastModified" : "2018-09-09T17:10:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Make sure this file is included only once\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sanity checks\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# binary SWIG for windows\n\n#------------------------------------------------------------------------------\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# swig.exe available as pre-built binary on Windows:\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# path specified as source in ep\n",
        "Line" : 54,
        "CharPositionInLine" : 39
      },
      "5" : {
        "Text" : "# compiled SWIG for others\n\n#------------------------------------------------------------------------------\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Set dependency list\n",
        "Line" : 61,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#\n\n#  PCRE (Perl Compatible Regular Expressions)\n\n#\n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#\n\n# SWIG\n\n#\n",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# swig uses bison find it by cmake and pass it down\n",
        "Line" : 74,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# follow the standard EP_PREFIX locations\n",
        "Line" : 83,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# configure step\n",
        "Line" : 88,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 12
    },
    "SuperBuild/External_virtualenv.cmake" : {
      "ObjectId" : "6ea48b699309c7ad836ac3e7d5af9a2d190189d3",
      "LastModified" : "2019-01-17T16:38:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Make sure this file is included only once\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# based on the standard EP_PREFIX locations, but since we don't build\n\n# or install, then standards install directory is also the source\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "SuperBuild/SuperBuild.cmake" : {
      "ObjectId" : "4c35b8ce5f1792fe8e778adb7eb47e91a9e6c0de",
      "LastModified" : "2019-01-17T16:38:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# CTest Related Settings\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Platform check\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# See CMake/Modules/Platform/Darwin.cmake)\n\n#   6.x == Mac OSX 10.2 (Jaguar)\n\n#   7.x == Mac OSX 10.3 (Panther)\n\n#   8.x == Mac OSX 10.4 (Tiger)\n\n#   9.x == Mac OSX 10.5 (Leopard)\n\n#  10.x == Mac OSX 10.6 (Snow Leopard)\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Update CMake module path\n\n#------------------------------------------------------------------------------\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#  CMake directory\n",
        "Line" : 40,
        "CharPositionInLine" : 39
      },
      "5" : {
        "Text" : "#\n\n# sitkSourceDownload( <output variable> <filename> <md5 hash> )\n\n#\n\n# A function to get a filename for an ExternalData source file used in\n\n# a superbuild. Adds a target which downloads all source code\n\n# needed for superbuild projects. The source file is cached with in\n\n# the build tree, and can be locally cache with other ExternalData\n\n# controlled environment variables.\n\n#\n\n# The \"SuperBuildSimpleITKSource\" target needs to be manually added as\n\n# a dependencies to the ExternalProject.\n\n#\n\n#   add_dependencies( PROJ \"SuperBuildSimpleITKSource\" )\n\n#\n\n# Note: Hash files are created under the SOURCE directory in the\n\n# .ExternalSource sub-directory during configuration.\n\n#\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Prerequisites\n\n#------------------------------------------------------------------------------\n\n#\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Compute -G arg for configuring external projects with the same CMake generator:\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Use GIT protocol\n\n#------------------------------------------------------------------------------\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# minimum version for https support\n",
        "Line" : 105,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# SimpleITK options\n\n#------------------------------------------------------------------------------\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Set a default build type if none was specified\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Set the possible values of build type for cmake-gui\n",
        "Line" : 125,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Default to build shared libraries off\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# as this option does not robustly work across platforms it will be marked as advanced\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# 1900 = VS 14.0 (Visual Studio 2015)\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Setup build type\n\n#------------------------------------------------------------------------------\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# By default, let's build as Release\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# let a dashboard override the default.\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#-------------------------------------------------------------------------\n\n# augment compiler flags\n\n#-------------------------------------------------------------------------\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# BuildName used for dashboard reporting\n\n#------------------------------------------------------------------------------\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Common Build Options to pass to all subsequent tools\n\n#------------------------------------------------------------------------------\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#\n\n# Use CMake file which present options for wrapped languages, and finds languages as needed\n\n#\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Lua\n\n#------------------------------------------------------------------------------\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Swig\n\n#------------------------------------------------------------------------------\n",
        "Line" : 293,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Google Test\n\n#------------------------------------------------------------------------------\n",
        "Line" : 306,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Python virtualenv\n\n#------------------------------------------------------------------------------\n",
        "Line" : 327,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# ITK\n\n#------------------------------------------------------------------------------\n",
        "Line" : 345,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#we require certain packages be turned on in ITK\n",
        "Line" : 354,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Elastix\n\n#------------------------------------------------------------------------------\n",
        "Line" : 361,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# SimpleITK\n\n#------------------------------------------------------------------------------\n",
        "Line" : 396,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# explicitly add a non-default step to build SimpleITK do\n",
        "Line" : 487,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# adds superbuild level target \"SimpleITK-documentation\" etc..\n",
        "Line" : 497,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# SimpleITKExamples\n\n#------------------------------------------------------------------------------\n",
        "Line" : 501,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# We build SimpleITKExamples as an enternal project to verify\n\n# installation of SimpleITK\n",
        "Line" : 505,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# List of external projects\n\n#------------------------------------------------------------------------------\n",
        "Line" : 510,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Dump external project dependencies\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 515,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 38
    },
    "SuperBuild/lua.cmake" : {
      "ObjectId" : "cd044075c4cdabdbc0f4c7d6fa7c56e110d02054",
      "LastModified" : "2019-01-17T16:38:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Setup build locations.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Variables for use in install rules:\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# suppress warning in Visual Studio about the securtiy of methods\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# suppress warning:\n\n# '<<' : result of 32-bit shift implicitly converted to 64 bits (was 64-bit shift intended?)\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# suppress Clang warnings about empty loop bodies and deprecated declarations (tmpnam)\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# define the lua core source files\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# define the lua lib source files\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# create the library\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# create the lue executable and link it to the lib\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# name the executable lua just like the library\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "Testing/CMakeLists.txt" : {
      "ObjectId" : "57e285f52e4fe43b6a885edef02091ebe055edd1",
      "LastModified" : "2018-09-09T17:10:23Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Testing/Unit/CMakeLists.txt" : {
      "ObjectId" : "64c00488bca3078aab0ee84765f76d66dd25b2cd",
      "LastModified" : "2019-01-17T16:38:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# remove me\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Test data directory\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find tests generated in the binary directory\n\n# To add a new file, just add it to this list.  Any GoogleTests inside will be automatically\n\n# added to ctest.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Adjust Python to run in the virtualenv\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Glob for necessary template files up front, before the foreach loop over\n\n# the filters:\n\n#\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# Generate code for the tests in different languages\n\n#\n\n# Break all these source files into a bunch of separate executables\n\n# base on every n files in the list.\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# exec 0 is the manual tests\n",
        "Line" : 94,
        "CharPositionInLine" : 18
      },
      "7" : {
        "Text" : "# Set up some convenience variables\n",
        "Line" : 110,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "######\n\n# Figure out which template file gets used\n\n######\n",
        "Line" : 117,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Get the line from the json file that indicates the correct template\n",
        "Line" : 121,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# strip down to what in between the \"\" after the :\n",
        "Line" : 124,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Java Tests\n",
        "Line" : 208,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# C# Tests\n",
        "Line" : 219,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# if template_name\n",
        "Line" : 230,
        "CharPositionInLine" : 10
      },
      "14" : {
        "Text" : "# Tuples are limited by _VARIADIC_MAX in VS11. The variadic\n\n# templates are not deep enough by default. We are not currently\n\n# using the GTest features which require tuple, so just disable them\n\n# and hope that upstream premanetly addresses the problem, with out\n\n# required more CMake core for compiler issues.\n",
        "Line" : 248,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# CMake 3.10 added this method, to avoid configure time introspection\n",
        "Line" : 271,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 16
    },
    "Testing/Unit/CSharp/CMakeLists.txt" : {
      "ObjectId" : "a0c3000a3eb2ff17ebdf1553006315479de4ba5f",
      "LastModified" : "2018-09-09T17:10:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# CSharp Tests\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Testing/Unit/Java/CMakeLists.txt" : {
      "ObjectId" : "69eedd2ca76905859e3f6bd580341bafc3a0f793",
      "LastModified" : "2018-09-09T17:10:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Java Tests\n\n#\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Testing/Unit/Python/CMakeLists.txt" : {
      "ObjectId" : "851d5f0a9e1a8cec0aaf05303927202220ab3c17",
      "LastModified" : "2019-01-29T23:21:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Python Tests\n\n#\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Numpy test.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Testing/Unit/R/CMakeLists.txt" : {
      "ObjectId" : "1a9343c6e70c071a4bd71d127bfa14ae473a399e",
      "LastModified" : "2019-01-17T16:38:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# R Tests\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Testing/Unit/TestBase/CMakeLists.txt" : {
      "ObjectId" : "f0250a3f58000129ea9a1863976deaa161c6bbcf",
      "LastModified" : "2018-09-09T17:10:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set some variables\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Tests for Compare dirver CXX tests\n\n#\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Utilities/C99/CMakeLists.txt" : {
      "ObjectId" : "0676bc03973e65c8c38adb1a86fbc63f4d761b18",
      "LastModified" : "2018-09-09T17:10:23Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Utilities/CMakeLists.txt" : {
      "ObjectId" : "a763c9d9dd21cbd31333d9106f1e9f3a5fd0496a",
      "LastModified" : "2018-09-09T17:10:23Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Utilities/Doxygen/Doxygen.cmake" : {
      "ObjectId" : "030c942068959aa6bcfe540f4ad3ccebf1b92950",
      "LastModified" : "2018-09-09T17:10:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Build the documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Add option to use ITK tags, will download during configuration\n\n# time if needed.\n\n#\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#\n\n# Configure the script and the doxyfile, then add target\n\n#\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "Utilities/Doxygen/GenerateExamplesDox.cmake" : {
      "ObjectId" : "0788f1c97ebc9aa3d594b9b2dff895280e2ee750",
      "LastModified" : "2018-09-09T17:10:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Usage: cmake -D \"PROJECT_SOURCE_DIR:PATH=${PROJECT_SOURCE_DIR}\" \n\n#              -D \"OUTPUT_FILE:PATH=${PROJECT_BINARY_DIR}/Examples.dox\"\n\n#              -P GenerateExamplesDox.cmake \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This cmake script gets a lists of examples for the project and\n\n# generates a file suitable for doxygen. The file is a list of\n\n# \"\\examples filename\", where doxygen will search for fileanme in it's\n\n# example path. Doxygen should then generate an examples page with the\n\n# referenced files.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# glob the examples for each language\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# remove the file before we begin appending\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# begin comment\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# end comment\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "Utilities/Doxygen/ITKDoxygenTags.cmake" : {
      "ObjectId" : "3cdb7a1658702aedda206a248e9a5bd2defab289",
      "LastModified" : "2018-09-09T17:10:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Information on how to retrieve the ITK documentation tag file\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Get the compressed ITK documentation tag file\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Uncompress the ITK tag file\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Utilities/KWStyle/CMakeLists.txt" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2018-09-09T17:10:23Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Utilities/KWStyle/KWStyle.cmake" : {
      "ObjectId" : "bf482c37fd6aaa11a1c406226f65cb5aa12ace30",
      "LastModified" : "2018-09-09T17:10:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set the required KWStyle version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# now parse the parts of the user given version string into variables\n",
        "Line" : 32,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Set the minimum require version for batchmake\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#\n\n#  Define file names\n\n#\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Configure the files\n\n#\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n#  Define formatting for error messages\n\n#\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "Version.cmake" : {
      "ObjectId" : "1e28ab9f3d7683f846115a08b8549b53d329aa23",
      "LastModified" : "2019-01-17T16:38:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# ONLY MODIFY TO CHANGE VERSION\n\n#\n\n# The number of commits since last this file has changed is used to\n\n# define \"dev\" and \"post\", modification of this file will reset that\n\n# version.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Version info\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#set(SimpleITK_VERSION_TWEAK \"\")\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# pre-release codes are defined based on suffix of most recent tags.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# a[N]+<b[N]+<c[N]+=rc[N]+\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The hash is the current git sha1 hash tag of the HEAD.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# DEV or POST is set to the number of commits since this file has been\n\n# changed. If the MAJOR.MINOR.[PATCH[.TWEAK]] matches \"closest\"\n\n# version tag then its consider in the release branch and POST is set\n\n# while DEV is undefined, otherwise we are considered under\n\n# development and DEV is set and POST is undefined.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Wrapping/CMakeLists.txt" : {
      "ObjectId" : "898fd1e2553e3b0c8906c3ded5bc5c919ad391e4",
      "LastModified" : "2018-09-09T17:10:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# A general packaging target, not built by default, to build packages for each\n\n# language.  This should depend on all language specific targets.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# lua SWIG configuration\n\n#\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# python SWIG configuration\n\n#\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# ruby SWIG configuration\n\n#\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# JAVA SWIG configuration\n\n#\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# C# SWIG configuration\n\n#\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# TCL SWIG configuration\n\n#\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# R SWIG configuration\n\n#\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "Wrapping/CSharp/CMakeLists.txt" : {
      "ObjectId" : "db02cdfd4707b46ca2b5a2637ff69bc75219601e",
      "LastModified" : "2019-01-17T16:38:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find C#\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CSharp version requirements: http://msdn.microsoft.com/en-us/library/system.reflection.assemblyversionattribute.aspx\n\n# major.minor[.build[.revision]] where all components are 16-bit unsigned integers\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Make sure the nested directory structure exists\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Create swig target\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# These CSharp files are generated by SWIG, they are not there\n\n# during the first build. But the charp_add_library will add them as\n\n# a dependency when the exists. This is needed for CMP0058\n",
        "Line" : 79,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Configure AssemblyInfo.cs\n",
        "Line" : 87,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Add managed wrapper\n",
        "Line" : 94,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Packaging for distribution\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "Wrapping/CSharp/dist/CMakeLists.txt" : {
      "ObjectId" : "8966fe0f88f22da96b1d11df87d1b6bd313fb921",
      "LastModified" : "2018-09-09T17:10:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# CSharp Packaging\n\n#\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#    COMMAND ${CMAKE_COMMAND} -E copy \"$<TARGET_FILE:SimpleITKCSharpManaged>\" \"${CSHARP_PACKAGE_STAGE_DIR}\"\n\n#    COMMENT \"Copying $<TARGET_FILE:${SimpleITKCSharpManaged}> to CSharp stage...\"\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Wrapping/Java/CMakeLists.txt" : {
      "ObjectId" : "5cbc5675324932f485bd28db4751561ce7c91993",
      "LastModified" : "2019-01-17T16:38:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Make sure the nested directory structure exists\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Nicely write the bridge code in org/itk/simple\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Oracle Java 1.8 javadoc treats linting errors as build errors by default\n\n# so linting should be opt-in for this version. OpenJDK is not as\n\n# consistent with the 1.8.0 versions, so we execute at look for a\n\n# invalid flag error.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add custom command and target to compile the generated files and put them in a jar file\n\n# Make sure the commands depend on the output library from SWIG\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add target for org.itk.simple.jar\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Get the location of the extension directory\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# TODO: add new target to install simpleitk java\n\n# Add the install target\n\n# install(FILES ${CMAKE_CURRENT_BINARY_DIR}/${JAR_FILE} DESTINATION ${JAVA_EXTENSION_DIR})\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Wrapping/Java/dist/CMakeLists.txt" : {
      "ObjectId" : "41037fdeccf0fc7a7e1d2aba6d0a623b99c8b845",
      "LastModified" : "2018-09-09T17:10:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# JAVA Packaging\n\n#\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# assemble macosx-OSX_DEPLOYMENT_TARGET-OSX_ARCHITECTURE\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "Wrapping/Lua/CMakeLists.txt" : {
      "ObjectId" : "01daffed6b6c7a6301851f9ac390c798368b6a42",
      "LastModified" : "2019-01-17T16:38:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Run swig\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create a standalone Lua executable that includes SimpleITK.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Create a SimpleITK Lua module that can be loaded into any Lua executable.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Wrapping/Python/CMakeLists.txt" : {
      "ObjectId" : "3466c41215e4f0d32637b4a8b0c013d4fb4eabd9",
      "LastModified" : "2019-01-17T16:38:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Options\n\n#\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Run swig\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If there is not a specified debug library use the release library,\n\n# via a special sitkPython.h header.\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Installation\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Currently this installation\n",
        "Line" : 80,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "Wrapping/Python/LegacyPackaging.cmake" : {
      "ObjectId" : "f1fd7857433a7b2ba933b192a8199be68a8f1e22",
      "LastModified" : "2018-09-09T17:10:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# create a python list for the import documents to include in\n\n# packaging\n",
        "Line" : 2,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# specially handle the first element\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Step 1:\n\n# Do initial configuration of setup.py with variable a available\n\n# at configuration time.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Step 2:\n\n# Do file configuration during compilation with generator expressions\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Executable to setup a new Python virtual environment\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#\n\n# Setup Python Virtual Environment for testing and packaging\n\n#\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# virtualenv places the python executable in different\n\n# locations. Also note than on windows installations where python is\n\n# installed only for a single user the may be a missing dll issue.\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# configure a scripts which creates the virtualenv and installs numpy\n",
        "Line" : 81,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Packaging for distribution\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "Wrapping/Python/dist/CMakeLists.txt" : {
      "ObjectId" : "fbf66ed76fd165749aed1023d8fba190ad83fc2e",
      "LastModified" : "2018-09-09T17:10:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Packaging\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Wrapping/R/CMakeLists.txt" : {
      "ObjectId" : "feaacbb0cfc5d970b3e54701dc2dd99d45a4efea",
      "LastModified" : "2019-01-17T16:38:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Run swig\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set the output directory for the R library to the binary packaging location\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# copy the R files a binary package\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Use ExternalData module to either download data to get from local\n\n# data store.\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The downloaded tar ball of documentation has been generated with\n\n# the \"Utilities/GenerateDocs/SwigDocUpdate.sh\". This documentation\n\n# should be generated for each release.\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# copy sample images and extract documentation - used in vignette\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# install for running tests and create binary package\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    },
    "Wrapping/R/Packaging/SimpleITK/src/Makefile" : {
      "ObjectId" : "3dfab27bafab6d9c21e10cf194447dedeb574770",
      "LastModified" : "2018-09-09T17:10:23Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# don't clean, otherwise R CMD build doesn't work as\n\n# this isn't really a source package\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Wrapping/Ruby/CMakeLists.txt" : {
      "ObjectId" : "082db50f4f384a55c5eec2c58688aed18cb81be8",
      "LastModified" : "2019-01-17T16:38:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Run swig\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Wrapping/Tcl/CMakeLists.txt" : {
      "ObjectId" : "40ef77ddbd8c5aba8afeb435fa4ee9b562e3b65c",
      "LastModified" : "2019-01-17T16:38:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Run swig\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#  SWIG_add_module ( SimpleITKTcl tcl SimpleITK.i SimpleITKTCL_wrap.cxx )\n\n#  target_link_libraries ( ${SWIG_MODULE_SimpleITKTcl_TARGET_NAME} ${SimpleITK_LIBRARIES} )\n\n#  sitk_target_link_libraries_with_dynamic_lookup( ${SWIG_MODULE_SimpleITKTcl_TARGET_NAME} ${TCL_LIBRARY} )\n\n#  set_source_files_properties(${swig_generated_file_fullname}  PROPERTIES COMPILE_FLAGS \"-w\")\n\n#  add_executable ( SimpleITKTclsh ${swig_generated_file_fullname} )\n\n#  target_link_libraries ( SimpleITKTclsh ${SimpleITK_LIBRARIES} ${TCL_LIBRARY})\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "CMAKE" : 119,
    "MAKEFILE" : 3
  },
  "ElapsedTime" : 1272
}