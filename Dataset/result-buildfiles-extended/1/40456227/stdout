{
  "Repository" : "40456227",
  "Revision" : "HEAD",
  "ObjectId" : "4e0783f2700f407b2f223be4643772cf49fc7744",
  "CommitTime" : "2017-01-31T11:46:28Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "baf46eedd7f0e6879ca9608b21c790886b28e9ee",
      "LastModified" : "2017-01-31T11:46:28Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# ---------------------------------------------------------------------------- #\n\n# The purpose of the Makefile is to provide a tool to optimize the build of a  #\n\n# project using dependency rules.                                              #\n\n#                                                                              #\n\n# ---------------------------------------------------------------------------- #\n\n#                                                                              #\n\n# USAGE                                                                        #\n\n#                                                                              #\n\n# ---------------------------------------------------------------------------- #\n\n# First, the user must configure its environment settings.                     #\n\n# - see 'PROJECT CONFIGURATION' to configure project directories               #\n\n# - see 'EXTERNAL TOOLS SETTINGS' to setup default programs to use             #\n\n#                                                                              #\n\n# Second, configure the sources.                                               #\n\n# - see 'TARGET SETUP' to set the name of the target and the sources           #\n\n#                                                                              #\n\n# Third, configure the build options.                                          #\n\n# - see 'PROJECT COMPILATION' to setup preprocessor, flags and libraries       #\n\n#                                                                              #\n\n# Fourth, setup the linking rule.                                              #\n\n# - see 'PUBLIC RULES' to modify the $(NAME) rule                              #\n\n#                                                                              #\n\n# ---------------------------------------------------------------------------- #\n\n#                                                                              #\n\n# To add custom rules, the concerned section is 'PUBLIC RULES'. Be sure to     #\n\n# keep at least the rules all, $(NAME), libs, clean, fclean and re.            #\n\n#                                                                              #\n\n# ---------------------------------------------------------------------------- #\n\n#                                                                              #\n\n# To add a library, the procedure is the following:                            #\n\n# - add the path to the library archive on LIBS                                #\n\n# - add the directory preceding by -L to LDFLAGS                               #\n\n# - add the reduced name of the library on LDLIBS preceding by -l              #\n\n# - add the header directories to CPPFLAGS preceding by -I                     #\n\n# The last step is to custom the libs and fcleanlibs rules to build and clean  #\n\n# the corresponding libraries.                                                 #\n\n#                                                                              #\n\n# ---------------------------------------------------------------------------- #\n\n#                                                                              #\n\n#                               /!\\ WARNING /!\\                                #\n\n#                                                                              #\n\n# The sections commented with '/!\\' are critical, and must not be modified.    # \n\n#                                                                              #\n\n# ---------------------------------------------------------------------------- #\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ---------------------------------------------------------------------------- #\n\n# PROJECT CONFIGURATION                                                        #\n\n# ---------------------------------------------------------------------------- #\n\n# - The 'DIR*' variables describe all directories of the project.              #\n\n# ---------------------------------------------------------------------------- #\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ---------------------------------------------------------------------------- #\n\n# EXTERNAL TOOLS SETTINGS                                                      #\n\n# ---------------------------------------------------------------------------- #\n\n# - Set the default external programs.                                         #\n\n# ---------------------------------------------------------------------------- #\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ---------------------------------------------------------------------------- #\n\n#                                                                              #\n\n# TARGET SETUP                                                                 #\n\n#                                                                              #\n\n# ---------------------------------------------------------------------------- #\n\n# - The 'NAME' variable must contain the expected name of the output target.   #\n\n# - The 'SRCS' variable must contain the list of the source files without the  #\n\n# base prefix of the directory.                                                #\n\n# ---------------------------------------------------------------------------- #\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ---------------------------------------------------------------------------- #\n\n# PROJECT COMPILATION                                                          #\n\n# ---------------------------------------------------------------------------- #\n\n# - The 'LIBS' tells the compiler where to find libraries.                     #\n\n# - The 'LDFLAGS' tells the linker where to find external libraries (-L flag). #\n\n# - The 'LDLIBS' tells the linker the prefix of external libraries (-l flag).  #\n\n# - The 'CPPFLAGS' tells the compiler where to find preprocessors (-I flag).   #\n\n# - The 'CFLAGS' configures the compiler options.                              #\n\n# ---------------------------------------------------------------------------- #\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ---------------------------------------------------------------------------- #\n\n# /!\\ SOURCE NORMALIZATION AND COMPILATION RULES /!\\                           #\n\n# ---------------------------------------------------------------------------- #\n",
        "Line" : 361,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ---------------------------------------------------------------------------- #\n\n# PUBLIC RULES                                                                 #\n\n# ---------------------------------------------------------------------------- #\n\n# The rules must contain at least :                                            #\n\n# - all        make libs and target                                            #\n\n# - $(NAME)    make binaries and target                                        #\n\n# - libs       build static libraries                                          #\n\n# - clean      remove binaries                                                 #\n\n# - fclean     remove binaries and target                                      #\n\n# - fcleanlibs apply fclean rule on libraries                                  #\n\n# - re         remove binaries, target and libraries and build the target      #\n\n#                                                                              #\n\n# To compile a static library, the $(NAME) rule should be :                    #\n\n#     '$(AR) $(ARFLAGS) $(NAME) $(OBJ)'                                        #\n\n#     'ranlib $(NAME)'                                                         #\n\n#                                                                              #\n\n# To compile a C binary, the $(NAME) rule should be :                          #\n\n#     '$(CC) $(OBJ) -o $(NAME) $(LDFLAGS) $(LDLIBS)'                           #\n\n# ---------------------------------------------------------------------------- #\n",
        "Line" : 381,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7,
      "Errorlog" : "line 402:9 token recognition error at: '\"\\0'\nline 402:24 token recognition error at: '\\0'\nline 405:10 token recognition error at: '\\0'\nline 405:24 token recognition error at: '\\0'\nline 419:10 token recognition error at: '\\0'\nline 419:24 token recognition error at: '\\0'\nline 421:10 token recognition error at: '\\0'\nline 421:24 token recognition error at: '\\0'\nline 425:10 token recognition error at: '\\0'\nline 425:24 token recognition error at: '\\0'\nline 435:10 token recognition error at: '\\0'\nline 435:24 token recognition error at: '\\0'\nline 439:10 token recognition error at: '\\0'\nline 439:24 token recognition error at: '\\0'\nline 445:10 token recognition error at: '\\0'\nline 445:24 token recognition error at: '\\0'\nline 446:10 token recognition error at: '\\0'\nline 446:24 token recognition error at: '\\0'\nline 449:10 token recognition error at: '\\0'\nline 449:24 token recognition error at: '\\0'\nline 450:10 token recognition error at: '\\0'\nline 450:24 token recognition error at: '\\0'\nline 460:10 token recognition error at: '\\0'\nline 460:24 token recognition error at: '\\0'\nline 460:64 token recognition error at: '\"\\n\\t@$(COMPILE.c) $(OUTPUT_OPTION) $<\\n\\t@$(POSTCOMPILE)\\n\\n$(DIRDEP)/%.d\\t:\\t;\\n.PRECIOUS\\t\\t:\\t$(DIRDEP)/%.d\\n\\n-include $(patsubst %,$(DIRDEP)/%.d,$(basename $(SRC)))\\n\\n# ---------------------------------------------------------------------------- #\\n\\n.PHONY\\t:\\tall clean fclean re $(DIROBJ)/%.o $(DIRDEP)/%.d libs\\n\\n# ---------------------------------------------------------------------------- #\\n\u0000'\n"
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 859
}