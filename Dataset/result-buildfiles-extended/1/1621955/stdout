{
  "Repository" : "1621955",
  "Revision" : "HEAD",
  "ObjectId" : "7948bdd465cac81142e4f5cd2ba44be73bada1c6",
  "CommitTime" : "2019-03-18T01:24:47Z",
  "Files" : {
    "Makefile.am" : {
      "ObjectId" : "913b82c4abbd3791f94644887ecda10145a1d2f5",
      "LastModified" : "2013-06-12T10:55:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# .changelog expects these to be initializes\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "build/Makefile.am" : {
      "ObjectId" : "0f81afe3860d1949fd55ba4125e19e3db0f97483",
      "LastModified" : "2011-11-25T13:12:45Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "build/mingw/Makefile.am" : {
      "ObjectId" : "dda135072489880f6f085071f9b108b53826ceb4",
      "LastModified" : "2011-11-25T13:12:45Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "build/win32/Makefile.am" : {
      "ObjectId" : "b764e59e3af3961200f65c1df650daba8b379fcc",
      "LastModified" : "2011-11-25T13:12:45Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "build/win32/vs10/Makefile.am" : {
      "ObjectId" : "b54bae6330c31234e26bb52de106ca8c5d1f98f1",
      "LastModified" : "2013-09-02T15:06:17Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "build/win32/vs9/Makefile.am" : {
      "ObjectId" : "0e93a3b67b533199565f2661e0d44470d64ae12c",
      "LastModified" : "2013-09-02T15:06:17Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "cogl-gles2/Makefile.am" : {
      "ObjectId" : "3679592f198986c3448b1e22c01fead445f93707",
      "LastModified" : "2013-09-02T15:06:17Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# preamble\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cogl-gst/Makefile.am" : {
      "ObjectId" : "d5e49aea3ab8ef0fb7aea88ed028c796ce588442",
      "LastModified" : "2013-09-02T15:06:17Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "cogl-pango/Makefile.am" : {
      "ObjectId" : "fd3e9dbf32c5d26f341683d4bd4b7469804ba06a",
      "LastModified" : "2013-09-02T15:06:17Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0,
      "Errorlog" : "line 64:35 token recognition error at: '\"..\\..\\..\\c'\nline 74:45 token recognition error at: '\\c'\nline 84:45 token recognition error at: '\\c'\nline 84:62 token recognition error at: '\"><Filter>Sources</Filter></ClCompile>' \\\\n\\t\\t\\t;; \\\\n\\t\\tesac; \\\\n\\tdone >coglpango.vs10.sourcefiles.filters\\n\\t$(CPP) -P - <$(top_srcdir)/build/win32/vs10/cogl-pango.vcxproj.filtersin >$@\\n\\trm coglpango.vs10.sourcefiles.filters\\n\\nEXTRA_DIST += cogl-pango.symbols cogl-pango.rc.in cogl-pango.rc\\n\\nDISTCLEANFILES += ../build/win32/vs9/cogl-pango.vcproj ../build/win32/vs10/cogl-pango.vcxproj ../build/win32/vs10/cogl-pango.vcxproj.filters cogl-pango.rc\\n\\n-include $(INTROSPECTION_MAKEFILE)\\n\\nINTROSPECTION_GIRS =\\n\\nif HAVE_INTROSPECTION\\nINTROSPECTION_COMPILER_ARGS=--includedir=$(top_builddir)/cogl\\n\\nCoglPango-2.0.gir: libcogl-pango2.la Makefile\\n\\nCoglPango_2_0_gir_NAMESPACE = CoglPango\\nCoglPango_2_0_gir_VERSION = 2.0\\nCoglPango_2_0_gir_LIBS = $(top_builddir)/cogl/libcogl2.la libcogl-pango2.la\\nCoglPango_2_0_gir_FILES = $(source_h) $(source_c)\\nCoglPango_2_0_gir_CFLAGS = $(AM_CPPFLAGS) $(AM_CPPFLAGS) $(COGL_DEP_CFLAGS) $(COGL_PANGO_DEP_CFLAGS)\\nCoglPango_2_0_gir_INCLUDES = Pango-1.0 PangoCairo-1.0\\nCoglPango_2_0_gir_EXPORT_PACKAGES = cogl-pango2\\nCoglPango_2_0_gir_SCANNERFLAGS = \\\\n\\t--warn-all \\\\n\\t--identifier-prefix=CoglPango \\\\n\\t--symbol-prefix=cogl_pango \\\\n\\t--c-include='cogl-pango/cogl-pango.h' \\\\n\\t--include-uninstalled=$(top_builddir)/cogl/Cogl-2.0.gir\\n\\nINTROSPECTION_GIRS += CoglPango-2.0.gir\\n\\ngirdir = $(datadir)/gir-1.0\\ngir_DATA = $(INTROSPECTION_GIRS)\\n\\ntypelibdir = $(libdir)/girepository-1.0\\ntypelib_DATA = $(INTROSPECTION_GIRS:.gir=.typelib)\\n\\nCLEANFILES += $(gir_DATA) $(typelib_DATA)\\nendif\\n\u0000'\n"
    },
    "cogl-path/Makefile.am" : {
      "ObjectId" : "de7517ea746cfcdd4b7d2d0cdd9ede08167a6956",
      "LastModified" : "2013-09-02T15:06:17Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# tesselator sources\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cogl/Makefile.am" : {
      "ObjectId" : "9521b60ba2908ebe8d4d92c0f8b02d82796a6347",
      "LastModified" : "2014-01-01T17:43:06Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# preamble\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# public api headers\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# experimental api headers\n\n# Note: we don't run glib-mkenums or gobject introspection over these headers\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# nop driver\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# gl driver sources\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# winsys sources, common to all backends\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# sources\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# glib-mkenums rules\n",
        "Line" : 478,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#XXX should we specify a libdir sub-directory now so that\n\n#for the next major version of Cogl we don't need to change\n\n#the library name to safely allow parallel installability?\n\n#E.g. libdir=$(libdir)/\n",
        "Line" : 485,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# XXX: The aim is to eventually get rid of all private API exports\n\n# for cogl-pango.\n",
        "Line" : 499,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# I know those filters below don't look nice, but this is to ensure the right files are in the Project files only *once*\n",
        "Line" : 522,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11,
      "Errorlog" : "line 527:35 token recognition error at: '\"..\\..\\..\\c'\nline 538:45 token recognition error at: '\\c'\nline 549:45 token recognition error at: '\\c'\nline 549:56 token recognition error at: '\"><Filter>Sources</Filter></ClCompile>' \\\\n\\t\\t\\t;; \\\\n\\t\\tesac; \\\\n\\tdone >cogl.vs10.sourcefiles.filters\\n\\t$(CPP) -P - <$(top_srcdir)/build/win32/vs10/cogl.vcxproj.filtersin >$@\\n\\trm cogl.vs10.sourcefiles.filters\\n\\ncogl.vsenums_h:\\n\\techo 'perl %1\\b'\nline 557:18 token recognition error at: '\\g'\nline 567:14 token recognition error at: '\\c'\nline 567:19 token recognition error at: '\\c'\nline 572:14 token recognition error at: '\\b'\nline 572:18 token recognition error at: '\\g'\nline 582:14 token recognition error at: '\\c'\nline 582:19 token recognition error at: '\\c'\nline 587:21 token recognition error at: '\\c'\nline 587:26 token recognition error at: '\\c'\nline 590:21 token recognition error at: '\\c'\nline 590:26 token recognition error at: '\\c'\n"
    },
    "deps/Makefile.am" : {
      "ObjectId" : "2cd3cb51b3242f12c786628330ae9c4c3713363b",
      "LastModified" : "2013-09-02T15:06:17Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "deps/glib/Makefile.am" : {
      "ObjectId" : "9a4544ff9a225d221402ca1625016b01b6288c23",
      "LastModified" : "2013-09-02T15:06:17Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "deps/gmodule/Makefile.am" : {
      "ObjectId" : "73991a057859b045f2b09642ed2303cca6985686",
      "LastModified" : "2013-09-02T15:06:17Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "doc/Makefile.am" : {
      "ObjectId" : "e8f091e78f22b484040a0d9cd8b7a76927b3736d",
      "LastModified" : "2013-09-02T15:06:17Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "doc/reference/Makefile.am" : {
      "ObjectId" : "649c2e0222b60411efa170459ee0c4ebf80a891c",
      "LastModified" : "2013-09-02T15:06:17Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "doc/reference/cogl-gst/Makefile.am" : {
      "ObjectId" : "bcabf2f74710a050ce22ddfbdac0093e990cb5f5",
      "LastModified" : "2013-09-02T15:06:17Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We require automake 1.6 at least.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is a blank Makefile.am for using gtk-doc.\n\n# Copy this to your project's API docs directory and modify the variables to\n\n# suit your project. See the GTK+ Makefiles in gtk+/docs/reference for examples\n\n# of using the various options.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The name of the module, e.g. 'glib'.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The top-level SGML file. You can change this if you want to.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The directory containing the source code. Relative to $(srcdir).\n\n# gtk-doc will search all .c & .h files beneath here for inline comments\n\n# documenting the functions and macros.\n\n# e.g. DOC_SOURCE_DIR=../../../gtk\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Extra options to pass to gtkdoc-scangobj. Not normally needed.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Extra options to supply to gtkdoc-scan.\n\n# e.g. SCAN_OPTIONS=--deprecated-guards=\"GTK_DISABLE_DEPRECATED\"\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Extra options to supply to gtkdoc-mkdb.\n\n# e.g. MKDB_OPTIONS=--sgml-mode --output-format=xml\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Extra options to supply to gtkdoc-mktmpl\n\n# e.g. MKTMPL_OPTIONS=--only-section-tmpl\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Extra options to supply to gtkdoc-fixref. Not normally needed.\n\n# e.g. FIXXREF_OPTIONS=--extra-dir=../gdk-pixbuf/html --extra-dir=../gdk/html\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Used for dependencies. The docs will be rebuilt if any of these change.\n\n# e.g. HFILE_GLOB=$(top_srcdir)/gtk/*.h\n\n# e.g. CFILE_GLOB=$(top_srcdir)/gtk/*.c\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Images to copy into HTML directory.\n\n# e.g. HTML_IMAGES=$(top_srcdir)/gtk/stock-icons/stock_about_24.png\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Extra SGML files that are included by $(DOC_MAIN_SGML_FILE).\n\n# e.g. content_files=running.sgml building.sgml changes-2.0.sgml\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# SGML files where gtk-doc abbrevations (#GtkWidget) are expanded\n\n# These files must be listed here *and* in content_files\n\n# e.g. expand_content_files=running.sgml\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# CFLAGS and LDFLAGS for compiling gtkdoc-scangobj with your library.\n\n# Only needed if you are using gtkdoc-scangobj to dynamically query widget\n\n# signals and properties.\n\n# e.g. AM_CPPFLAGS=-I$(top_srcdir) -I$(top_builddir) $(GTK_DEBUG_FLAGS)\n\n# e.g. GTKDOC_LIBS=$(top_builddir)/gtk/$(gtktargetlib)\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# This includes the standard gtk-doc make rules, copied by gtkdocize.\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Other files to distribute\n\n# e.g. EXTRA_DIST += version.xml.in\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "doc/reference/cogl2/Makefile.am" : {
      "ObjectId" : "9424c513fc6200f4b70ba3742f4e31c56ca04822",
      "LastModified" : "2013-09-02T15:06:17Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We require automake 1.6 at least.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is a blank Makefile.am for using gtk-doc.\n\n# Copy this to your project's API docs directory and modify the variables to\n\n# suit your project. See the GTK+ Makefiles in gtk+/docs/reference for examples\n\n# of using the various options.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The name of the module, e.g. 'glib'.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The top-level SGML file. You can change this if you want to.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The directory containing the source code. Relative to $(srcdir).\n\n# gtk-doc will search all .c & .h files beneath here for inline comments\n\n# documenting the functions and macros.\n\n# e.g. DOC_SOURCE_DIR=../../../gtk\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Extra options to pass to gtkdoc-scangobj. Not normally needed.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Extra options to supply to gtkdoc-scan.\n\n# e.g. SCAN_OPTIONS=--deprecated-guards=\"GTK_DISABLE_DEPRECATED\"\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Extra options to supply to gtkdoc-mkdb.\n\n# e.g. MKDB_OPTIONS=--sgml-mode --output-format=xml\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Extra options to supply to gtkdoc-mktmpl\n\n# e.g. MKTMPL_OPTIONS=--only-section-tmpl\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Extra options to supply to gtkdoc-fixref. Not normally needed.\n\n# e.g. FIXXREF_OPTIONS=--extra-dir=../gdk-pixbuf/html --extra-dir=../gdk/html\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Used for dependencies. The docs will be rebuilt if any of these change.\n\n# e.g. HFILE_GLOB=$(top_srcdir)/gtk/*.h\n\n# e.g. CFILE_GLOB=$(top_srcdir)/gtk/*.c\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Header files to ignore when scanning.\n\n# e.g. IGNORE_HFILES=gtkdebug.h gtkintl.h\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Images to copy into HTML directory.\n\n# e.g. HTML_IMAGES=$(top_srcdir)/gtk/stock-icons/stock_about_24.png\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Extra SGML files that are included by $(DOC_MAIN_SGML_FILE).\n\n# e.g. content_files=running.sgml building.sgml changes-2.0.sgml\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# SGML files where gtk-doc abbrevations (#GtkWidget) are expanded\n\n# These files must be listed here *and* in content_files\n\n# e.g. expand_content_files=running.sgml\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# CFLAGS and LDFLAGS for compiling gtkdoc-scangobj with your library.\n\n# Only needed if you are using gtkdoc-scangobj to dynamically query widget\n\n# signals and properties.\n\n# e.g. AM_CPPFLAGS=-I$(top_srcdir) -I$(top_builddir) $(GTK_DEBUG_FLAGS)\n\n# e.g. GTKDOC_LIBS=$(top_builddir)/gtk/$(gtktargetlib)\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# This includes the standard gtk-doc make rules, copied by gtkdocize.\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Other files to distribute\n\n# e.g. EXTRA_DIST += version.xml.in\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "examples/Makefile.am" : {
      "ObjectId" : "c1373d2d4375734a5aae31578ba9385017d4e22a",
      "LastModified" : "2014-07-17T23:13:39Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#USE_GLIB\n",
        "Line" : 87,
        "CharPositionInLine" : 6
      },
      "1" : {
        "Text" : "# XXX although emscripten \"supports sdl\" we can't build cogl-sdl-hello\n\n# un-modified for emscripten since emscripten doesn't support\n\n# SDL_WaitEvent() and we need to use some special emscripten apis\n\n# to create a mainloop....\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# USING_EMSCRIPTEN\n",
        "Line" : 99,
        "CharPositionInLine" : 5
      },
      "3" : {
        "Text" : "# USING_EMSCRIPTEN\n",
        "Line" : 107,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 4
    },
    "examples/android/hello/build.xml" : {
      "ObjectId" : "d69afbc374432a0509e9e3a73aa2c89f75c02fd2",
      "LastModified" : "2013-09-02T15:06:17Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " The local.properties file is created and updated by the 'android'\n     tool.\n     It contains the path to the SDK. It should *NOT* be checked into\n     Version Control Systems. ",
        "Line" : 7,
        "CharPositionInLine" : 34
      },
      "1" : {
        "Text" : " The build.properties file can be created by you and is never touched\n         by the 'android' tool. This is the place to change some of the\n         default property values used by the Ant rules.\n         Here are some properties you may want to change/update:\n\n         source.dir\n             The name of the source directory. Default is 'src'.\n         out.dir\n             The name of the output directory. Default is 'bin'.\n\n         Properties related to the SDK location or the project target should\n         be updated using the 'android' tool with the 'update' action.\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems.\n\n         ",
        "Line" : 26,
        "CharPositionInLine" : 13
      },
      "2" : {
        "Text" : " The default.properties file is created and updated by the 'android'\n         tool, as well as ADT.\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems. ",
        "Line" : 32,
        "CharPositionInLine" : 77
      },
      "3" : {
        "Text" : " Custom Android task to deal with the project target, and import the\n         proper rules.\n         This requires ant 1.6.0 or above. ",
        "Line" : 37,
        "CharPositionInLine" : 47
      },
      "4" : {
        "Text" : " extension targets. Uncomment the ones where you want to do custom work\n     in between standard targets ",
        "Line" : 49,
        "CharPositionInLine" : 37
      },
      "5" : {
        "Text" : "\n    <target name=\"-pre-build\">\n    </target>\n    <target name=\"-pre-compile\">\n    </target>\n\n    [This is typically used for code obfuscation.\n     Compiled code location: ${out.classes.absolute.dir}\n     If this is not done in place, override ${out.dex.input.absolute.dir}]\n    <target name=\"-post-compile\">\n    </target>\n",
        "Line" : 61,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : " Execute the Android Setup task that will setup some properties\n         specific to the target, and import the build rules files.\n\n         The rules file is imported from\n            <SDK>/platforms/<target_platform>/ant/ant_rules_r#.xml\n\n         To customize existing targets, there are two options:\n         - Customize only one target:\n             - copy/paste the target into this file, *before* the\n               <setup> task.\n             - customize it to your needs.\n         - Customize the whole script.\n             - copy/paste the content of the rules files (minus the top node)\n               into this file, *after* the <setup> task\n             - disable the import of the rules by changing the setup task\n               below to <setup import=\"false\" />.\n             - customize to your needs.\n    ",
        "Line" : 81,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 7
    },
    "test-fixtures/Makefile.am" : {
      "ObjectId" : "332c5ee253cd561b9d732217e22db589ff8427ab",
      "LastModified" : "2013-09-02T15:06:17Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "tests/Makefile.am" : {
      "ObjectId" : "94ba34a6fd7c0b38c62225b5d9773ddec2431213",
      "LastModified" : "2013-09-02T15:06:17Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# run make test as part of make check\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/conform/Makefile.am" : {
      "ObjectId" : "edfe940dd07fdd585c6572e8b0f88403f6ad45ae",
      "LastModified" : "2014-07-17T23:13:39Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# test-fence depends on the glib mainloop so it won't compile if using\n\n# emscripten which builds in standalone mode.\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For convenience, this provides a way to easily run individual unit tests:\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# NB: BUILT_SOURCES here a misnomer. We aren't building source, just inserting\n\n# a phony rule that will generate symlink scripts for running individual tests\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# XXX: we could prevent the conformance test suite from running\n\n#      by simply defining this variable conditionally\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4,
      "Errorlog" : "line 99:61 token recognition error at: '\\1'\nline 172:35 token recognition error at: '\"..\\..\\..\\tests\\c'\nline 182:51 token recognition error at: '\\c'\nline 192:51 token recognition error at: '\\c'\nline 223:123 token recognition error at: '\" >> $@.tmp; \\\\n\\tmv $@.tmp $@\\n\\nCLEANFILES = conform.test\\n\\nendif\\n\u0000'\n"
    },
    "tests/data/Makefile.am" : {
      "ObjectId" : "3a2030a776e0e00624069624045f853ddd9a4729",
      "LastModified" : "2013-09-02T15:06:17Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "tests/micro-perf/Makefile.am" : {
      "ObjectId" : "3a21ee9a0af104f5b8a32ec47d5ad5a597d270d4",
      "LastModified" : "2013-09-02T15:06:17Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "tests/unit/Makefile.am" : {
      "ObjectId" : "950247211a2223b8e77c9bf7046e46a1a6646b92",
      "LastModified" : "2014-07-17T23:13:39Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# For convenience, this provides a way to easily run individual unit tests:\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# NB: BUILT_SOURCES here a misnomer. We aren't building source, just inserting\n\n# a phony rule that will generate symlink scripts for running individual tests\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The include of the $(buildir)/cogl directory here is to make it so\n\n# that tests that directly include Cogl source code for whitebox\n\n# testing (such as test-bitmask) will still compile\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# XXX: we could prevent the unit test suite from running\n\n#      by simply defining this variable conditionally\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# we override the clean-generic target to clean up the wrappers so\n\n# we cannot use CLEANFILES\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    }
  },
  "FileTypes" : {
    "AUTOMAKE" : 25,
    "ANT" : 1
  },
  "ElapsedTime" : 2725
}