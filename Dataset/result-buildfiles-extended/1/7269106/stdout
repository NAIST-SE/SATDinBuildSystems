{
  "Repository" : "7269106",
  "Revision" : "HEAD",
  "ObjectId" : "c10033605427f84bcc33e73ed77d7489c4c52532",
  "CommitTime" : "2019-03-27T20:00:55Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "b05effa7e0688410bf5a13bbf09abdc5bd762f9b",
      "LastModified" : "2019-01-15T18:38:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# include cmake files in the 'cmake folder'\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# put executables in the 'run' folder\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Google test\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Don't fall back to older versions\n",
        "Line" : 19,
        "CharPositionInLine" : 36
      },
      "4" : {
        "Text" : "# Because we use ninja, we have to explicitly turn on color output for the compiler\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Use compiler optimization if we are making a release build.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build in debug mode\n\n# TODO: make this easier to specify when running `make` on the command-line\n\n# try using cmake's debug flag support? 'set(CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG} -g\")'\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Turn some compiler warnings into errors\n\n# TODO determine if we want these flags in the release build\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Qt5\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# look for the homebrew-installed version of Qt5\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# this directory is included by default, but we mark it as SYSTEM so\n\n# warnings in external headers don't show up every time we build\n",
        "Line" : 51,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Google Protobuf\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Remove QT slots/signals/emit keywords\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Python\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Finding homebrew-installed python3 on OS X doesn't work with the standard\n\n# FindPythonLibs.cmake file, so we do a custom search for it here.\n",
        "Line" : 68,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# This block will either fail or set these three variables:\n\n# * PYTHON_INCLUDE_DIRS\n\n# * PYTHON_LINK_DIRS\n\n# * PYTHON_LIBRARIES\n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# try to find python3-config\n",
        "Line" : 76,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# use python3-config to find where python stuff is stored\n",
        "Line" : 83,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# search for the python library\n",
        "Line" : 91,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Eigen - used for linear algebra\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# libusb\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# SDL2\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Several things depend on the headers in the 'common' directory\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# for headers in common/\n\n# for generated protobuf headers\n",
        "Line" : 115,
        "CharPositionInLine" : 52
      },
      "24" : {
        "Text" : "# for generated protobuf headers\n",
        "Line" : 117,
        "CharPositionInLine" : 50
      },
      "25" : {
        "Text" : "# setup ccache to speed up recompiles.  It's especially useful when switching back and forth\n\n# between branches where you'd normally have to recompile things many times.\n\n# see http://stackoverflow.com/questions/1815688/how-to-use-ccache-with-cmake\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# run all the other CMakeLists files\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 27
    },
    "cmake/FindBullet.cmake" : {
      "ObjectId" : "b75f3105a648883d6ca8e4dfd2da308c1831f945",
      "LastModified" : "2014-10-27T20:32:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the Bullet physics engine\n\n#\n\n#  This module defines the following variables\n\n#\n\n#  BULLET_FOUND - Was bullet found\n\n#  BULLET_INCLUDE_DIRS - the Bullet include directories\n\n#  BULLET_LIBRARIES - Link to this, by default it includes\n\n#                     all bullet components (Dynamics,\n\n#                     Collision, LinearMath, & SoftBody)\n\n#\n\n#  This module accepts the following variables\n\n#\n\n#  BULLET_ROOT - Can be set to bullet install path or Windows build path\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2009, Philip Lowman <philip at yhbt.com>\n\n#\n\n# Redistribution AND use is allowed according to the terms of the New\n\n# BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find the libraries\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set BULLET_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/FindEigen3.cmake" : {
      "ObjectId" : "126f4a0ec6a9b869823d81f774f2e2764fbba2a8",
      "LastModified" : "2014-10-27T20:32:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Eigen3 lib\n\n#\n\n# This module supports requiring a minimum version, e.g. you can do\n\n#   find_package(Eigen3 3.1.2)\n\n# to require version 3.1.2 or newer of Eigen3.\n\n#\n\n# Once done this will define\n\n#\n\n#  EIGEN_FOUND - system has eigen lib with correct version\n\n#  EIGEN_INCLUDE_DIR - the eigen include directory\n\n#  EIGEN_VERSION - eigen version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Copyright (c) 2009 Benoit Jacob <jacob.benoit.1@gmail.com>\n\n# Redistribution and use is allowed according to the terms of the 2-clause BSD license.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/FindFlann.cmake" : {
      "ObjectId" : "a6375c044842978ceb60dcc9faf02843dd760340",
      "LastModified" : "2017-07-09T20:54:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# Find Flann\n\n#\n\n# This sets the following variables:\n\n# FLANN_FOUND - True if FLANN was found.\n\n# FLANN_INCLUDE_DIRS - Directories containing the FLANN include files.\n\n# FLANN_LIBRARIES - Libraries needed to use FLANN.\n\n# FLANN_DEFINITIONS - Compiler flags for FLANN.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Findlibusb-1.0.cmake" : {
      "ObjectId" : "ec40055af8a4acb3c983e9fcfecf7960d0ab2461",
      "LastModified" : "2017-07-09T20:54:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find libusb-1.0\n\n# Once done this will define\n\n#\n\n#  LIBUSB_1_FOUND - system has libusb\n\n#  LIBUSB_1_INCLUDE_DIRS - the libusb include directory\n\n#  LIBUSB_1_LIBRARIES - Link these to use libusb\n\n#  LIBUSB_1_DEFINITIONS - Compiler switches required for using libusb\n\n#\n\n#  Adapted from cmake-modules Google Code project\n\n#\n\n#  Copyright (c) 2006 Andreas Schneider <mail@cynapses.org>\n\n#\n\n#  (Changes for libusb) Copyright (c) 2008 Kyle Machulis <kyle@nonpolynomial.com>\n\n#\n\n# Redistribution and use is allowed according to the terms of the New BSD license.\n\n#\n\n# CMake-Modules Project New BSD License\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright notice, this\n\n#   list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright notice,\n\n#   this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n#\n\n# * Neither the name of the CMake-Modules Project nor the names of its\n\n#   contributors may be used to endorse or promote products derived from this\n\n#   software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n\n# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\n# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\n# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\n# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\n#  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n\n# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\n# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# show the LIBUSB_1_INCLUDE_DIRS and LIBUSB_1_LIBRARIES variables only in the advanced view\n",
        "Line" : 95,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/MbedTargets.cmake" : {
      "ObjectId" : "6584c4416d0d689a347a573ebb9149917ef54815",
      "LastModified" : "2017-07-09T20:54:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# ***** DO NOT MANUALLY EDIT THIS FILE *****\n\n#\n\n# This file was generated using 'mbed_cmake_vargen.py' on Monday 29, February 2016.\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/MbedUtil.cmake" : {
      "ObjectId" : "6ce9e060b3ac125a3e8472ffb66881020684be09",
      "LastModified" : "2017-07-09T20:54:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# mbed_util.cmake\n\n# \n\n# Utility functions and constants for setting up the configuartion with the\n\n# officially supported mbed SDK build system.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Assertion checks for build configuration debugging.\n\n# Usage\n\n#   assert(<test> \"message on fail\")\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the mbed platform we should compile for.\n\n# Usage:\n\n#   mbed_set_platform(<var-name-prefixt> TARGET <target-id>)\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# make sure we are passed the vendor to use\n",
        "Line" : 27,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# set the variable names for what target we are selecting\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# set varibles for the target with a variable prefix name that was given to us\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# generate uppercase & lowercase versions of the target's core name\n\n# also replacing dashes in the uppercase name with underscores\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# generate uppercase & lowercase versions of the target's core progen\n\n# also replacing dashes in the uppercase progen with underscores\n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Set the given variable to the paths to include for the ethernet library.\n\n# Usage:\n\n#   mbed_add_incs_eth(<directory-list> LIB_ROOT <mbed-build-tree> VENDOR <mbed-target-vendor>)\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# make sure we are passed the vendor to use\n",
        "Line" : 83,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Set the given variable to the paths to include for the rtos library.\n\n# Usage:\n\n#   mbed_add_incs_rtos(<directory-list> LIB_ROOT <mbed-build-tree> ARCH <mbed-mcu-arch>)\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# make sure we are passed the target, arch type, and toolchain\n",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Set the given variable to the paths to include for the usb libraries.\n\n# Usage:\n\n#   mbed_add_incs_usb(<directory-list> LIB_ROOT <mbed-build-tree>)\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Set the given variable to the paths to include for the usb libraries.\n\n# Usage:\n\n#   mbed_add_incs_usb_host(<directory-list> LIB_ROOT <mbed-build-tree>)\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Set the given variable to the paths to include for the dsp library.\n\n# Usage:\n\n#   mbed_add_incs_dsp(<directory-list> LIB_ROOT <mbed-build-tree>)\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Set the given variable to the paths to include for the rpc library.\n\n# Usage:\n\n#   mbed_add_incs_rpc(<directory-list> LIB_ROOT <mbed-build-tree>)\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Set the given variable to the paths to include for ublox library.\n\n# Usage:\n\n#   mbed_add_incs_ublox(<directory-list> LIB_ROOT <mbed-build-tree>)\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Set the given variable to the paths to include for the fat filesystem library.\n\n# Usage:\n\n#   mbed_add_incs_fatfs(<directory-list> LIB_ROOT <mbed-build-tree>)\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# The following macro was taken from OpenCV's cmake utilies\n\n# https://github.com/Itseez/opencv/blob/master/cmake/OpenCVUtils.cmake\n\n# \n\n# Provides an option that the user can optionally select.\n\n# Can accept condition to control when option is available for user.\n\n# Usage:\n\n#   rj_add_op(<option_variable> \"help string describing the option\" <initial value or boolean expression> [IF <condition>])\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "cmake/RemoveFlags.cmake" : {
      "ObjectId" : "d998e892c495d411957b18f18fd027a340cb8c42",
      "LastModified" : "2017-07-09T20:54:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Removes a CXX flag.\n\n# Usage:\n\n#   remove_cxx_flag(<flag>)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Removes a C flag.\n\n# Usage:\n\n#   remove_c_flag(<flag>)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/SetupGTest.cmake" : {
      "ObjectId" : "cf93dae843c36096333fdc5986a5b5798fc299d1",
      "LastModified" : "2017-07-09T20:54:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# disable install step\n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# specify include dir\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# specify link directory where the built gtest libs are placed\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/ShowVars.cmake" : {
      "ObjectId" : "c227a96bd1d7c060f20279bda11448658ce07075",
      "LastModified" : "2017-07-09T20:54:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# adding the correct amount of space\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# unset locals since this is a macro\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Shows a listing of the major build configuration variables.\n\n# Usage:\n\n#   show_vars()\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# we first find the max length of all the variable names we'd like to show_vars\n\n# this is just to keep things somewhat organized in the console\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# now we display the variables and their values, using the indent variable we just defined\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# unset locals since this is a macro\n",
        "Line" : 73,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "common/CMakeLists.txt" : {
      "ObjectId" : "6302b0844a8ecaed3fb335a7deaff55fbf702be6",
      "LastModified" : "2018-04-08T18:55:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# positon-independent-code flag\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# build the 'common' static library (and include our protobuf messages in it)\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# look for the homebrew-installed version of Qt5\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# this directory is included by default, but we mark it as SYSTEM so\n\n# warnings in external headers don't show up every time we build\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "common/protobuf/CMakeLists.txt" : {
      "ObjectId" : "9313a7f3e063c1236a79e69e200f36928f483fb9",
      "LastModified" : "2018-04-08T18:51:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# positon-independent-code flag\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "external/CMakeLists.txt" : {
      "ObjectId" : "e8e8fdbca58d2334e6e0fedb51db5d769c043a91",
      "LastModified" : "2018-04-08T19:11:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "logging/CMakeLists.txt" : {
      "ObjectId" : "1026791f517d84f1a5708f5c8f04ee3997845c3f",
      "LastModified" : "2018-04-08T19:11:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "soccer/CMakeLists.txt" : {
      "ObjectId" : "d9ee93f051f7f7b42ee289ace94b5f0ea2636edc",
      "LastModified" : "2019-02-03T23:09:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Qt\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# include Eigen3 for linear algebra\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# All sources for the robocup library used for the python module, soccer, and log log viewer\n\n# Note that main.cpp and LogViewer.cpp aren't present in this list because they're executable-specific\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# help CMake find gl.h, glu.h, etc on OS X\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# lib dir for spnav\n",
        "Line" : 89,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Boost Python\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# find boost python\n\n# This package is named 'python3' on Arch, 'python-py34' on Ubuntu 14, and 'python' on OS X\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Find the matching boost python implementation\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Get first two numbers of python string\n",
        "Line" : 118,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# libusb\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# SDL\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Build stand-alone soccer dylib\n\n# This is linked into soccer and our unit tests, as well as being a python module\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# RRT\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# python\n\n# note: these are set in the root CMakeLists.txt file\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# 'soccer' program\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# app icon\n",
        "Line" : 170,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# add a script called \"soccer\" in the run/ dir that launches the soccer app and passes on all args,\n\n# so it can be used the same way the soccer executable is used on Linux\n",
        "Line" : 179,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# build the 'log_viewer' program\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Add a test runner target \"test-soccer\" to run all tests in this directory\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Don't build the tests by default\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    }
  },
  "FileTypes" : {
    "CMAKE" : 15
  },
  "ElapsedTime" : 2784
}