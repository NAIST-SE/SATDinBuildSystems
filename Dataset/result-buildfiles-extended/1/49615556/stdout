{
  "Repository" : "49615556",
  "Revision" : "HEAD",
  "ObjectId" : "fea937f1ea0a1403a5aec7f9815a386efe14d0e6",
  "CommitTime" : "2019-04-07T02:23:25Z",
  "Files" : {
    "05-04-vuejs/00-实例/chart/node_modules/Base64/Makefile" : {
      "ObjectId" : "5c475dfc33087d044d782b36f84c631a11c8f960",
      "LastModified" : "2016-10-19T06:55:08Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "05-04-vuejs/00-实例/chart/node_modules/buffer/node_modules/isarray/Makefile" : {
      "ObjectId" : "787d56e1e982e48588bc199f36f0d50cb4724066",
      "LastModified" : "2016-10-19T06:55:08Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "05-04-vuejs/00-实例/chart/node_modules/debug/Makefile" : {
      "ObjectId" : "5cf4a5962b8ba3719bd0f2ff7703cba5de225d1a",
      "LastModified" : "2016-10-19T06:55:08Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# get Makefile directory name: http://stackoverflow.com/a/5982798/376773\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BIN directory\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# applications\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "05-04-vuejs/00-实例/chart/node_modules/indexof/Makefile" : {
      "ObjectId" : "3f6119d227040d0493452f89e06013b2a9886da6",
      "LastModified" : "2016-10-19T06:55:08Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "05-04-vuejs/00-实例/chart/node_modules/isobject/node_modules/isarray/Makefile" : {
      "ObjectId" : "787d56e1e982e48588bc199f36f0d50cb4724066",
      "LastModified" : "2016-10-19T06:55:08Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "05-04-vuejs/00-实例/chart/node_modules/memory-fs/node_modules/isarray/Makefile" : {
      "ObjectId" : "787d56e1e982e48588bc199f36f0d50cb4724066",
      "LastModified" : "2016-10-19T06:55:08Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "05-04-vuejs/00-实例/chart/node_modules/readdirp/node_modules/isarray/Makefile" : {
      "ObjectId" : "787d56e1e982e48588bc199f36f0d50cb4724066",
      "LastModified" : "2016-10-19T06:55:08Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "05-04-vuejs/00-实例/chart/node_modules/reduce-function-call/node_modules/balanced-match/Makefile" : {
      "ObjectId" : "fa5da71a6d0d34afeca5499bece067a1f2a9d35c",
      "LastModified" : "2016-10-19T06:55:08Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "05-04-vuejs/00-实例/chart/node_modules/ripemd160/Makefile" : {
      "ObjectId" : "583692163445ff18ef8c3758e8c115dbc9135a75",
      "LastModified" : "2016-10-19T06:55:08Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "05-04-vuejs/00-实例/chart/node_modules/svgo/Makefile" : {
      "ObjectId" : "650288bdfc85a715b2c6810d85072eafff8f5db3",
      "LastModified" : "2016-10-19T06:55:08Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "05-05-react/05-redux/react-redux-tutorial/redux-examples/counter/node_modules/Base64/Makefile" : {
      "ObjectId" : "5c475dfc33087d044d782b36f84c631a11c8f960",
      "LastModified" : "2016-10-19T06:55:08Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "05-05-react/05-redux/react-redux-tutorial/redux-examples/counter/node_modules/debug/Makefile" : {
      "ObjectId" : "5cf4a5962b8ba3719bd0f2ff7703cba5de225d1a",
      "LastModified" : "2016-10-19T06:55:08Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# get Makefile directory name: http://stackoverflow.com/a/5982798/376773\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BIN directory\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# applications\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "05-05-react/05-redux/react-redux-tutorial/redux-examples/counter/node_modules/delayed-stream/Makefile" : {
      "ObjectId" : "b4ff85a33b6eb482476385b7c3e6661ec9c9eb0c",
      "LastModified" : "2016-10-19T06:55:08Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "05-05-react/05-redux/react-redux-tutorial/redux-examples/counter/node_modules/dom-walk/Makefile" : {
      "ObjectId" : "132d3a3d85a520dbdb06abfa752df07799e7d3b2",
      "LastModified" : "2016-10-19T06:55:08Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "05-05-react/05-redux/react-redux-tutorial/redux-examples/counter/node_modules/es-abstract/Makefile" : {
      "ObjectId" : "959bbd49c1def0b484e00ec993e35158f4e1c71f",
      "LastModified" : "2016-10-19T06:55:08Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Since we rely on paths relative to the makefile location, abort if make isn't being run from there.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The files that need updating when incrementing the version number.\n",
        "Line" : 4,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Add the local npm packages' bin folder to the PATH, so that `make` can find them, when invoked directly.\n\n# Note that rather than using `$(npm bin)` the 'node_modules/.bin' path component is hard-coded, so that invocation works even from an environment\n\n# where npm is (temporarily) unavailable due to having deactivated an nvm instance loaded into the calling shell in order to avoid interference with tests.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make sure that all required utilities can be located.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Default target (by virtue of being the first non '.'-prefixed in the file).\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Lists all targets defined in this makefile.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# All-tests target: invokes the specified test suites for ALL shells defined in $(SHELLS).\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Ensures that the git workspace is clean.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Makes a release; invoke with `make TAG=<versionOrIncrementSpec> release`.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#v}; \\\n\t new_ver=`echo \"$(TAG)\" | sed 's/^v//'`; new_ver=$${new_ver:-patch}; \\\n\t if printf \"$$new_ver\" | command grep -q '^[0-9]'; then \\\n\t   semver \"$$new_ver\" >/dev/null || { echo 'Invalid version number specified: $(TAG) - must be major.minor.patch' >&2; exit 2; }; \\\n\t   semver -r \"> $$old_ver\" \"$$new_ver\" >/dev/null || { echo 'Invalid version number specified: $(TAG) - must be HIGHER than current one.' >&2; exit 2; } \\\n\t else \\\n\t   new_ver=`semver -i \"$$new_ver\" \"$$old_ver\"` || { echo 'Invalid version-increment specifier: $(TAG)' >&2; exit 2; } \\\n\t fi; \\\n\t printf \"=== Bumping version **$$old_ver** to **$$new_ver** before committing and tagging:\\n=== TYPE 'proceed' TO PROCEED, anything else to abort: \" && read response && [ \"$$response\" = 'proceed' ] || { echo 'Aborted.' >&2; exit 2; };  \\\n\t replace \"$$old_ver\" \"$$new_ver\" -- $(VERSIONED_FILES) && \\\n\t git commit -m \"v$$new_ver\" $(VERSIONED_FILES) CHANGELOG.md && \\\n\t git tag -a -m \"v$$new_ver\" \"v$$new_ver\"\n",
        "Line" : 50,
        "CharPositionInLine" : 158
      },
      "CommentCount" : 10
    },
    "05-05-react/05-redux/react-redux-tutorial/redux-examples/counter/node_modules/es-to-primitive/Makefile" : {
      "ObjectId" : "b9e4fe1aab3dde87b3071e9b39e45a22ce3bf33a",
      "LastModified" : "2016-10-19T06:55:08Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Since we rely on paths relative to the makefile location, abort if make isn't being run from there.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The files that need updating when incrementing the version number.\n",
        "Line" : 4,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Add the local npm packages' bin folder to the PATH, so that `make` can find them, when invoked directly.\n\n# Note that rather than using `$(npm bin)` the 'node_modules/.bin' path component is hard-coded, so that invocation works even from an environment\n\n# where npm is (temporarily) unavailable due to having deactivated an nvm instance loaded into the calling shell in order to avoid interference with tests.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make sure that all required utilities can be located.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Default target (by virtue of being the first non '.'-prefixed in the file).\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Lists all targets defined in this makefile.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# All-tests target: invokes the specified test suites for ALL shells defined in $(SHELLS).\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Ensures that the git workspace is clean.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Makes a release; invoke with `make TAG=<versionOrIncrementSpec> release`.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#v}; \\\n\t new_ver=`echo \"$(TAG)\" | sed 's/^v//'`; new_ver=$${new_ver:-patch}; \\\n\t if printf \"$$new_ver\" | command grep -q '^[0-9]'; then \\\n\t   semver \"$$new_ver\" >/dev/null || { echo 'Invalid version number specified: $(TAG) - must be major.minor.patch' >&2; exit 2; }; \\\n\t   semver -r \"> $$old_ver\" \"$$new_ver\" >/dev/null || { echo 'Invalid version number specified: $(TAG) - must be HIGHER than current one.' >&2; exit 2; } \\\n\t else \\\n\t   new_ver=`semver -i \"$$new_ver\" \"$$old_ver\"` || { echo 'Invalid version-increment specifier: $(TAG)' >&2; exit 2; } \\\n\t fi; \\\n\t printf \"=== Bumping version **$$old_ver** to **$$new_ver** before committing and tagging:\\n=== TYPE 'proceed' TO PROCEED, anything else to abort: \" && read response && [ \"$$response\" = 'proceed' ] || { echo 'Aborted.' >&2; exit 2; };  \\\n\t replace \"$$old_ver\" \"$$new_ver\" -- $(VERSIONED_FILES) && \\\n\t git commit -m \"v$$new_ver\" $(VERSIONED_FILES) CHANGELOG.md && \\\n\t git tag -a -m \"v$$new_ver\" \"v$$new_ver\"\n",
        "Line" : 50,
        "CharPositionInLine" : 158
      },
      "CommentCount" : 10
    },
    "05-05-react/05-redux/react-redux-tutorial/redux-examples/counter/node_modules/extsprintf/Makefile" : {
      "ObjectId" : "1deeb5fdff465f865d5a1ad58e4b223df4a712fd",
      "LastModified" : "2016-10-19T06:55:08Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2012, Joyent, Inc. All rights reserved.\n\n#\n\n# Makefile: top-level Makefile\n\n#\n\n# This Makefile contains only repo-specific logic and uses included makefiles\n\n# to supply common targets (javascriptlint, jsstyle, restdown, etc.), which are\n\n# used by other repos as well.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Files\n\n#\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Default target is \"check\"\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "05-05-react/05-redux/react-redux-tutorial/redux-examples/counter/node_modules/foreach/Makefile" : {
      "ObjectId" : "eae41178666a0e7f624dd07f1e9fc8d8e38e038b",
      "LastModified" : "2016-10-19T06:55:08Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "05-05-react/05-redux/react-redux-tutorial/redux-examples/counter/node_modules/indexof/Makefile" : {
      "ObjectId" : "3f6119d227040d0493452f89e06013b2a9886da6",
      "LastModified" : "2016-10-19T06:55:08Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "05-05-react/05-redux/react-redux-tutorial/redux-examples/counter/node_modules/is-boolean-object/Makefile" : {
      "ObjectId" : "b9e4fe1aab3dde87b3071e9b39e45a22ce3bf33a",
      "LastModified" : "2016-10-19T06:55:08Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Since we rely on paths relative to the makefile location, abort if make isn't being run from there.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The files that need updating when incrementing the version number.\n",
        "Line" : 4,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Add the local npm packages' bin folder to the PATH, so that `make` can find them, when invoked directly.\n\n# Note that rather than using `$(npm bin)` the 'node_modules/.bin' path component is hard-coded, so that invocation works even from an environment\n\n# where npm is (temporarily) unavailable due to having deactivated an nvm instance loaded into the calling shell in order to avoid interference with tests.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make sure that all required utilities can be located.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Default target (by virtue of being the first non '.'-prefixed in the file).\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Lists all targets defined in this makefile.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# All-tests target: invokes the specified test suites for ALL shells defined in $(SHELLS).\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Ensures that the git workspace is clean.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Makes a release; invoke with `make TAG=<versionOrIncrementSpec> release`.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#v}; \\\n\t new_ver=`echo \"$(TAG)\" | sed 's/^v//'`; new_ver=$${new_ver:-patch}; \\\n\t if printf \"$$new_ver\" | command grep -q '^[0-9]'; then \\\n\t   semver \"$$new_ver\" >/dev/null || { echo 'Invalid version number specified: $(TAG) - must be major.minor.patch' >&2; exit 2; }; \\\n\t   semver -r \"> $$old_ver\" \"$$new_ver\" >/dev/null || { echo 'Invalid version number specified: $(TAG) - must be HIGHER than current one.' >&2; exit 2; } \\\n\t else \\\n\t   new_ver=`semver -i \"$$new_ver\" \"$$old_ver\"` || { echo 'Invalid version-increment specifier: $(TAG)' >&2; exit 2; } \\\n\t fi; \\\n\t printf \"=== Bumping version **$$old_ver** to **$$new_ver** before committing and tagging:\\n=== TYPE 'proceed' TO PROCEED, anything else to abort: \" && read response && [ \"$$response\" = 'proceed' ] || { echo 'Aborted.' >&2; exit 2; };  \\\n\t replace \"$$old_ver\" \"$$new_ver\" -- $(VERSIONED_FILES) && \\\n\t git commit -m \"v$$new_ver\" $(VERSIONED_FILES) CHANGELOG.md && \\\n\t git tag -a -m \"v$$new_ver\" \"v$$new_ver\"\n",
        "Line" : 50,
        "CharPositionInLine" : 158
      },
      "CommentCount" : 10
    },
    "05-05-react/05-redux/react-redux-tutorial/redux-examples/counter/node_modules/is-callable/Makefile" : {
      "ObjectId" : "b9e4fe1aab3dde87b3071e9b39e45a22ce3bf33a",
      "LastModified" : "2016-10-19T06:55:08Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Since we rely on paths relative to the makefile location, abort if make isn't being run from there.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The files that need updating when incrementing the version number.\n",
        "Line" : 4,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Add the local npm packages' bin folder to the PATH, so that `make` can find them, when invoked directly.\n\n# Note that rather than using `$(npm bin)` the 'node_modules/.bin' path component is hard-coded, so that invocation works even from an environment\n\n# where npm is (temporarily) unavailable due to having deactivated an nvm instance loaded into the calling shell in order to avoid interference with tests.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make sure that all required utilities can be located.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Default target (by virtue of being the first non '.'-prefixed in the file).\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Lists all targets defined in this makefile.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# All-tests target: invokes the specified test suites for ALL shells defined in $(SHELLS).\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Ensures that the git workspace is clean.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Makes a release; invoke with `make TAG=<versionOrIncrementSpec> release`.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#v}; \\\n\t new_ver=`echo \"$(TAG)\" | sed 's/^v//'`; new_ver=$${new_ver:-patch}; \\\n\t if printf \"$$new_ver\" | command grep -q '^[0-9]'; then \\\n\t   semver \"$$new_ver\" >/dev/null || { echo 'Invalid version number specified: $(TAG) - must be major.minor.patch' >&2; exit 2; }; \\\n\t   semver -r \"> $$old_ver\" \"$$new_ver\" >/dev/null || { echo 'Invalid version number specified: $(TAG) - must be HIGHER than current one.' >&2; exit 2; } \\\n\t else \\\n\t   new_ver=`semver -i \"$$new_ver\" \"$$old_ver\"` || { echo 'Invalid version-increment specifier: $(TAG)' >&2; exit 2; } \\\n\t fi; \\\n\t printf \"=== Bumping version **$$old_ver** to **$$new_ver** before committing and tagging:\\n=== TYPE 'proceed' TO PROCEED, anything else to abort: \" && read response && [ \"$$response\" = 'proceed' ] || { echo 'Aborted.' >&2; exit 2; };  \\\n\t replace \"$$old_ver\" \"$$new_ver\" -- $(VERSIONED_FILES) && \\\n\t git commit -m \"v$$new_ver\" $(VERSIONED_FILES) CHANGELOG.md && \\\n\t git tag -a -m \"v$$new_ver\" \"v$$new_ver\"\n",
        "Line" : 50,
        "CharPositionInLine" : 158
      },
      "CommentCount" : 10
    },
    "05-05-react/05-redux/react-redux-tutorial/redux-examples/counter/node_modules/is-date-object/Makefile" : {
      "ObjectId" : "b9e4fe1aab3dde87b3071e9b39e45a22ce3bf33a",
      "LastModified" : "2016-10-19T06:55:08Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Since we rely on paths relative to the makefile location, abort if make isn't being run from there.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The files that need updating when incrementing the version number.\n",
        "Line" : 4,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Add the local npm packages' bin folder to the PATH, so that `make` can find them, when invoked directly.\n\n# Note that rather than using `$(npm bin)` the 'node_modules/.bin' path component is hard-coded, so that invocation works even from an environment\n\n# where npm is (temporarily) unavailable due to having deactivated an nvm instance loaded into the calling shell in order to avoid interference with tests.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make sure that all required utilities can be located.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Default target (by virtue of being the first non '.'-prefixed in the file).\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Lists all targets defined in this makefile.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# All-tests target: invokes the specified test suites for ALL shells defined in $(SHELLS).\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Ensures that the git workspace is clean.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Makes a release; invoke with `make TAG=<versionOrIncrementSpec> release`.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#v}; \\\n\t new_ver=`echo \"$(TAG)\" | sed 's/^v//'`; new_ver=$${new_ver:-patch}; \\\n\t if printf \"$$new_ver\" | command grep -q '^[0-9]'; then \\\n\t   semver \"$$new_ver\" >/dev/null || { echo 'Invalid version number specified: $(TAG) - must be major.minor.patch' >&2; exit 2; }; \\\n\t   semver -r \"> $$old_ver\" \"$$new_ver\" >/dev/null || { echo 'Invalid version number specified: $(TAG) - must be HIGHER than current one.' >&2; exit 2; } \\\n\t else \\\n\t   new_ver=`semver -i \"$$new_ver\" \"$$old_ver\"` || { echo 'Invalid version-increment specifier: $(TAG)' >&2; exit 2; } \\\n\t fi; \\\n\t printf \"=== Bumping version **$$old_ver** to **$$new_ver** before committing and tagging:\\n=== TYPE 'proceed' TO PROCEED, anything else to abort: \" && read response && [ \"$$response\" = 'proceed' ] || { echo 'Aborted.' >&2; exit 2; };  \\\n\t replace \"$$old_ver\" \"$$new_ver\" -- $(VERSIONED_FILES) && \\\n\t git commit -m \"v$$new_ver\" $(VERSIONED_FILES) CHANGELOG.md && \\\n\t git tag -a -m \"v$$new_ver\" \"v$$new_ver\"\n",
        "Line" : 50,
        "CharPositionInLine" : 158
      },
      "CommentCount" : 10
    },
    "05-05-react/05-redux/react-redux-tutorial/redux-examples/counter/node_modules/is-equal/Makefile" : {
      "ObjectId" : "b9e4fe1aab3dde87b3071e9b39e45a22ce3bf33a",
      "LastModified" : "2016-10-19T06:55:08Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Since we rely on paths relative to the makefile location, abort if make isn't being run from there.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The files that need updating when incrementing the version number.\n",
        "Line" : 4,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Add the local npm packages' bin folder to the PATH, so that `make` can find them, when invoked directly.\n\n# Note that rather than using `$(npm bin)` the 'node_modules/.bin' path component is hard-coded, so that invocation works even from an environment\n\n# where npm is (temporarily) unavailable due to having deactivated an nvm instance loaded into the calling shell in order to avoid interference with tests.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make sure that all required utilities can be located.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Default target (by virtue of being the first non '.'-prefixed in the file).\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Lists all targets defined in this makefile.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# All-tests target: invokes the specified test suites for ALL shells defined in $(SHELLS).\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Ensures that the git workspace is clean.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Makes a release; invoke with `make TAG=<versionOrIncrementSpec> release`.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#v}; \\\n\t new_ver=`echo \"$(TAG)\" | sed 's/^v//'`; new_ver=$${new_ver:-patch}; \\\n\t if printf \"$$new_ver\" | command grep -q '^[0-9]'; then \\\n\t   semver \"$$new_ver\" >/dev/null || { echo 'Invalid version number specified: $(TAG) - must be major.minor.patch' >&2; exit 2; }; \\\n\t   semver -r \"> $$old_ver\" \"$$new_ver\" >/dev/null || { echo 'Invalid version number specified: $(TAG) - must be HIGHER than current one.' >&2; exit 2; } \\\n\t else \\\n\t   new_ver=`semver -i \"$$new_ver\" \"$$old_ver\"` || { echo 'Invalid version-increment specifier: $(TAG)' >&2; exit 2; } \\\n\t fi; \\\n\t printf \"=== Bumping version **$$old_ver** to **$$new_ver** before committing and tagging:\\n=== TYPE 'proceed' TO PROCEED, anything else to abort: \" && read response && [ \"$$response\" = 'proceed' ] || { echo 'Aborted.' >&2; exit 2; };  \\\n\t replace \"$$old_ver\" \"$$new_ver\" -- $(VERSIONED_FILES) && \\\n\t git commit -m \"v$$new_ver\" $(VERSIONED_FILES) CHANGELOG.md && \\\n\t git tag -a -m \"v$$new_ver\" \"v$$new_ver\"\n",
        "Line" : 50,
        "CharPositionInLine" : 158
      },
      "CommentCount" : 10
    },
    "05-05-react/05-redux/react-redux-tutorial/redux-examples/counter/node_modules/is-generator-function/Makefile" : {
      "ObjectId" : "959bbd49c1def0b484e00ec993e35158f4e1c71f",
      "LastModified" : "2016-10-19T06:55:08Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Since we rely on paths relative to the makefile location, abort if make isn't being run from there.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The files that need updating when incrementing the version number.\n",
        "Line" : 4,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Add the local npm packages' bin folder to the PATH, so that `make` can find them, when invoked directly.\n\n# Note that rather than using `$(npm bin)` the 'node_modules/.bin' path component is hard-coded, so that invocation works even from an environment\n\n# where npm is (temporarily) unavailable due to having deactivated an nvm instance loaded into the calling shell in order to avoid interference with tests.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make sure that all required utilities can be located.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Default target (by virtue of being the first non '.'-prefixed in the file).\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Lists all targets defined in this makefile.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# All-tests target: invokes the specified test suites for ALL shells defined in $(SHELLS).\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Ensures that the git workspace is clean.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Makes a release; invoke with `make TAG=<versionOrIncrementSpec> release`.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#v}; \\\n\t new_ver=`echo \"$(TAG)\" | sed 's/^v//'`; new_ver=$${new_ver:-patch}; \\\n\t if printf \"$$new_ver\" | command grep -q '^[0-9]'; then \\\n\t   semver \"$$new_ver\" >/dev/null || { echo 'Invalid version number specified: $(TAG) - must be major.minor.patch' >&2; exit 2; }; \\\n\t   semver -r \"> $$old_ver\" \"$$new_ver\" >/dev/null || { echo 'Invalid version number specified: $(TAG) - must be HIGHER than current one.' >&2; exit 2; } \\\n\t else \\\n\t   new_ver=`semver -i \"$$new_ver\" \"$$old_ver\"` || { echo 'Invalid version-increment specifier: $(TAG)' >&2; exit 2; } \\\n\t fi; \\\n\t printf \"=== Bumping version **$$old_ver** to **$$new_ver** before committing and tagging:\\n=== TYPE 'proceed' TO PROCEED, anything else to abort: \" && read response && [ \"$$response\" = 'proceed' ] || { echo 'Aborted.' >&2; exit 2; };  \\\n\t replace \"$$old_ver\" \"$$new_ver\" -- $(VERSIONED_FILES) && \\\n\t git commit -m \"v$$new_ver\" $(VERSIONED_FILES) CHANGELOG.md && \\\n\t git tag -a -m \"v$$new_ver\" \"v$$new_ver\"\n",
        "Line" : 50,
        "CharPositionInLine" : 158
      },
      "CommentCount" : 10
    },
    "05-05-react/05-redux/react-redux-tutorial/redux-examples/counter/node_modules/is-number-object/Makefile" : {
      "ObjectId" : "b9e4fe1aab3dde87b3071e9b39e45a22ce3bf33a",
      "LastModified" : "2016-10-19T06:55:08Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Since we rely on paths relative to the makefile location, abort if make isn't being run from there.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The files that need updating when incrementing the version number.\n",
        "Line" : 4,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Add the local npm packages' bin folder to the PATH, so that `make` can find them, when invoked directly.\n\n# Note that rather than using `$(npm bin)` the 'node_modules/.bin' path component is hard-coded, so that invocation works even from an environment\n\n# where npm is (temporarily) unavailable due to having deactivated an nvm instance loaded into the calling shell in order to avoid interference with tests.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make sure that all required utilities can be located.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Default target (by virtue of being the first non '.'-prefixed in the file).\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Lists all targets defined in this makefile.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# All-tests target: invokes the specified test suites for ALL shells defined in $(SHELLS).\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Ensures that the git workspace is clean.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Makes a release; invoke with `make TAG=<versionOrIncrementSpec> release`.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#v}; \\\n\t new_ver=`echo \"$(TAG)\" | sed 's/^v//'`; new_ver=$${new_ver:-patch}; \\\n\t if printf \"$$new_ver\" | command grep -q '^[0-9]'; then \\\n\t   semver \"$$new_ver\" >/dev/null || { echo 'Invalid version number specified: $(TAG) - must be major.minor.patch' >&2; exit 2; }; \\\n\t   semver -r \"> $$old_ver\" \"$$new_ver\" >/dev/null || { echo 'Invalid version number specified: $(TAG) - must be HIGHER than current one.' >&2; exit 2; } \\\n\t else \\\n\t   new_ver=`semver -i \"$$new_ver\" \"$$old_ver\"` || { echo 'Invalid version-increment specifier: $(TAG)' >&2; exit 2; } \\\n\t fi; \\\n\t printf \"=== Bumping version **$$old_ver** to **$$new_ver** before committing and tagging:\\n=== TYPE 'proceed' TO PROCEED, anything else to abort: \" && read response && [ \"$$response\" = 'proceed' ] || { echo 'Aborted.' >&2; exit 2; };  \\\n\t replace \"$$old_ver\" \"$$new_ver\" -- $(VERSIONED_FILES) && \\\n\t git commit -m \"v$$new_ver\" $(VERSIONED_FILES) CHANGELOG.md && \\\n\t git tag -a -m \"v$$new_ver\" \"v$$new_ver\"\n",
        "Line" : 50,
        "CharPositionInLine" : 158
      },
      "CommentCount" : 10
    },
    "05-05-react/05-redux/react-redux-tutorial/redux-examples/counter/node_modules/is-regex/Makefile" : {
      "ObjectId" : "b9e4fe1aab3dde87b3071e9b39e45a22ce3bf33a",
      "LastModified" : "2016-10-19T06:55:08Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Since we rely on paths relative to the makefile location, abort if make isn't being run from there.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The files that need updating when incrementing the version number.\n",
        "Line" : 4,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Add the local npm packages' bin folder to the PATH, so that `make` can find them, when invoked directly.\n\n# Note that rather than using `$(npm bin)` the 'node_modules/.bin' path component is hard-coded, so that invocation works even from an environment\n\n# where npm is (temporarily) unavailable due to having deactivated an nvm instance loaded into the calling shell in order to avoid interference with tests.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make sure that all required utilities can be located.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Default target (by virtue of being the first non '.'-prefixed in the file).\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Lists all targets defined in this makefile.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# All-tests target: invokes the specified test suites for ALL shells defined in $(SHELLS).\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Ensures that the git workspace is clean.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Makes a release; invoke with `make TAG=<versionOrIncrementSpec> release`.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#v}; \\\n\t new_ver=`echo \"$(TAG)\" | sed 's/^v//'`; new_ver=$${new_ver:-patch}; \\\n\t if printf \"$$new_ver\" | command grep -q '^[0-9]'; then \\\n\t   semver \"$$new_ver\" >/dev/null || { echo 'Invalid version number specified: $(TAG) - must be major.minor.patch' >&2; exit 2; }; \\\n\t   semver -r \"> $$old_ver\" \"$$new_ver\" >/dev/null || { echo 'Invalid version number specified: $(TAG) - must be HIGHER than current one.' >&2; exit 2; } \\\n\t else \\\n\t   new_ver=`semver -i \"$$new_ver\" \"$$old_ver\"` || { echo 'Invalid version-increment specifier: $(TAG)' >&2; exit 2; } \\\n\t fi; \\\n\t printf \"=== Bumping version **$$old_ver** to **$$new_ver** before committing and tagging:\\n=== TYPE 'proceed' TO PROCEED, anything else to abort: \" && read response && [ \"$$response\" = 'proceed' ] || { echo 'Aborted.' >&2; exit 2; };  \\\n\t replace \"$$old_ver\" \"$$new_ver\" -- $(VERSIONED_FILES) && \\\n\t git commit -m \"v$$new_ver\" $(VERSIONED_FILES) CHANGELOG.md && \\\n\t git tag -a -m \"v$$new_ver\" \"v$$new_ver\"\n",
        "Line" : 50,
        "CharPositionInLine" : 158
      },
      "CommentCount" : 10
    },
    "05-05-react/05-redux/react-redux-tutorial/redux-examples/counter/node_modules/is-string/Makefile" : {
      "ObjectId" : "b9e4fe1aab3dde87b3071e9b39e45a22ce3bf33a",
      "LastModified" : "2016-10-19T06:55:08Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Since we rely on paths relative to the makefile location, abort if make isn't being run from there.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The files that need updating when incrementing the version number.\n",
        "Line" : 4,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Add the local npm packages' bin folder to the PATH, so that `make` can find them, when invoked directly.\n\n# Note that rather than using `$(npm bin)` the 'node_modules/.bin' path component is hard-coded, so that invocation works even from an environment\n\n# where npm is (temporarily) unavailable due to having deactivated an nvm instance loaded into the calling shell in order to avoid interference with tests.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make sure that all required utilities can be located.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Default target (by virtue of being the first non '.'-prefixed in the file).\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Lists all targets defined in this makefile.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# All-tests target: invokes the specified test suites for ALL shells defined in $(SHELLS).\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Ensures that the git workspace is clean.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Makes a release; invoke with `make TAG=<versionOrIncrementSpec> release`.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#v}; \\\n\t new_ver=`echo \"$(TAG)\" | sed 's/^v//'`; new_ver=$${new_ver:-patch}; \\\n\t if printf \"$$new_ver\" | command grep -q '^[0-9]'; then \\\n\t   semver \"$$new_ver\" >/dev/null || { echo 'Invalid version number specified: $(TAG) - must be major.minor.patch' >&2; exit 2; }; \\\n\t   semver -r \"> $$old_ver\" \"$$new_ver\" >/dev/null || { echo 'Invalid version number specified: $(TAG) - must be HIGHER than current one.' >&2; exit 2; } \\\n\t else \\\n\t   new_ver=`semver -i \"$$new_ver\" \"$$old_ver\"` || { echo 'Invalid version-increment specifier: $(TAG)' >&2; exit 2; } \\\n\t fi; \\\n\t printf \"=== Bumping version **$$old_ver** to **$$new_ver** before committing and tagging:\\n=== TYPE 'proceed' TO PROCEED, anything else to abort: \" && read response && [ \"$$response\" = 'proceed' ] || { echo 'Aborted.' >&2; exit 2; };  \\\n\t replace \"$$old_ver\" \"$$new_ver\" -- $(VERSIONED_FILES) && \\\n\t git commit -m \"v$$new_ver\" $(VERSIONED_FILES) CHANGELOG.md && \\\n\t git tag -a -m \"v$$new_ver\" \"v$$new_ver\"\n",
        "Line" : 50,
        "CharPositionInLine" : 158
      },
      "CommentCount" : 10
    },
    "05-05-react/05-redux/react-redux-tutorial/redux-examples/counter/node_modules/is-symbol/Makefile" : {
      "ObjectId" : "b9e4fe1aab3dde87b3071e9b39e45a22ce3bf33a",
      "LastModified" : "2016-10-19T06:55:08Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Since we rely on paths relative to the makefile location, abort if make isn't being run from there.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The files that need updating when incrementing the version number.\n",
        "Line" : 4,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Add the local npm packages' bin folder to the PATH, so that `make` can find them, when invoked directly.\n\n# Note that rather than using `$(npm bin)` the 'node_modules/.bin' path component is hard-coded, so that invocation works even from an environment\n\n# where npm is (temporarily) unavailable due to having deactivated an nvm instance loaded into the calling shell in order to avoid interference with tests.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make sure that all required utilities can be located.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Default target (by virtue of being the first non '.'-prefixed in the file).\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Lists all targets defined in this makefile.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# All-tests target: invokes the specified test suites for ALL shells defined in $(SHELLS).\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Ensures that the git workspace is clean.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Makes a release; invoke with `make TAG=<versionOrIncrementSpec> release`.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#v}; \\\n\t new_ver=`echo \"$(TAG)\" | sed 's/^v//'`; new_ver=$${new_ver:-patch}; \\\n\t if printf \"$$new_ver\" | command grep -q '^[0-9]'; then \\\n\t   semver \"$$new_ver\" >/dev/null || { echo 'Invalid version number specified: $(TAG) - must be major.minor.patch' >&2; exit 2; }; \\\n\t   semver -r \"> $$old_ver\" \"$$new_ver\" >/dev/null || { echo 'Invalid version number specified: $(TAG) - must be HIGHER than current one.' >&2; exit 2; } \\\n\t else \\\n\t   new_ver=`semver -i \"$$new_ver\" \"$$old_ver\"` || { echo 'Invalid version-increment specifier: $(TAG)' >&2; exit 2; } \\\n\t fi; \\\n\t printf \"=== Bumping version **$$old_ver** to **$$new_ver** before committing and tagging:\\n=== TYPE 'proceed' TO PROCEED, anything else to abort: \" && read response && [ \"$$response\" = 'proceed' ] || { echo 'Aborted.' >&2; exit 2; };  \\\n\t replace \"$$old_ver\" \"$$new_ver\" -- $(VERSIONED_FILES) && \\\n\t git commit -m \"v$$new_ver\" $(VERSIONED_FILES) CHANGELOG.md && \\\n\t git tag -a -m \"v$$new_ver\" \"v$$new_ver\"\n",
        "Line" : 50,
        "CharPositionInLine" : 158
      },
      "CommentCount" : 10
    },
    "05-05-react/05-redux/react-redux-tutorial/redux-examples/counter/node_modules/isarray/Makefile" : {
      "ObjectId" : "787d56e1e982e48588bc199f36f0d50cb4724066",
      "LastModified" : "2016-10-19T06:55:08Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "05-05-react/05-redux/react-redux-tutorial/redux-examples/counter/node_modules/jade/node_modules/commander/Makefile" : {
      "ObjectId" : "00746255373c316d8da2bfbffa94c5e74b627f8d",
      "LastModified" : "2016-10-19T06:55:08Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "05-05-react/05-redux/react-redux-tutorial/redux-examples/counter/node_modules/json-stringify-safe/Makefile" : {
      "ObjectId" : "36088c723a3b3f96e449136639da88e43cd716dd",
      "LastModified" : "2016-10-19T06:55:08Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "05-05-react/05-redux/react-redux-tutorial/redux-examples/counter/node_modules/ripemd160/Makefile" : {
      "ObjectId" : "583692163445ff18ef8c3758e8c115dbc9135a75",
      "LastModified" : "2016-10-19T06:55:08Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "05-05-react/05-redux/react-redux-tutorial/redux-examples/counter/node_modules/sntp/Makefile" : {
      "ObjectId" : "417fd93708605f0a88b4cf36f0eab46d9eb653ca",
      "LastModified" : "2016-10-19T06:55:08Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "05-05-react/05-redux/react-redux-tutorial/redux-examples/counter/node_modules/to-iso-string/Makefile" : {
      "ObjectId" : "9600296b2d101ec670af20b89e1fb20948e3ff28",
      "LastModified" : "2016-10-19T06:55:08Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "05-05-react/05-redux/react-redux-tutorial/redux-examples/counter/node_modules/verror/Makefile" : {
      "ObjectId" : "00faa97de520890d9b1fe77fe3184909069d0405",
      "LastModified" : "2016-10-19T06:55:08Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2012, Joyent, Inc. All rights reserved.\n\n#\n\n# Makefile: top-level Makefile\n\n#\n\n# This Makefile contains only repo-specific logic and uses included makefiles\n\n# to supply common targets (javascriptlint, jsstyle, restdown, etc.), which are\n\n# used by other repos as well.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Tools\n\n#\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Files\n\n#\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "05-05-react/05-redux/react-redux-tutorial/redux-examples/counter/node_modules/xtend/Makefile" : {
      "ObjectId" : "d583fcf49dc1a343087a932f9912fab74e2b2f6b",
      "LastModified" : "2016-10-19T06:55:08Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "06-类库/fetch/fetch/Makefile" : {
      "ObjectId" : "ad5ba8933f6eed877447ae9b845f443b26b68dd8",
      "LastModified" : "2016-10-19T06:58:08Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 37
  },
  "ElapsedTime" : 5439
}